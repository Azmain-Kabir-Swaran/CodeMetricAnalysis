{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppsBlock.java",
  "functionName": "renderData",
  "functionId": "renderData___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
  "functionStartLine": 149,
  "functionEndLine": 231,
  "numCommitsSeen": 18,
  "timeTaken": 4280,
  "changeHistory": [
    "9520b2ad790bd8527033a03e7ee50da71a85df1d",
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2",
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
    "1fa8075794894b3e0053d251788277fb88e85533",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6"
  ],
  "changeHistoryShort": {
    "9520b2ad790bd8527033a03e7ee50da71a85df1d": "Ybodychange",
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": "Ybodychange",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": "Ybodychange",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": "Ybodychange",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2": "Ybodychange",
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342": "Ybodychange",
    "1fa8075794894b3e0053d251788277fb88e85533": "Ybodychange",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9520b2ad790bd8527033a03e7ee50da71a85df1d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10083. Provide utility to ask whether an application is in final status. Contributed by Adam Antal\n",
      "commitDate": "22/01/20 7:25 AM",
      "commitName": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "13/07/18 8:42 AM",
      "commitNameOld": "88625f5cd90766136a9ebd76a8d84b45a37e6c99",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 557.99,
      "commitsBetweenForRepo": 3953,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,85 +1,83 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n           .th(\".starttime\", \"StartTime\")\n           .th(\".launchtime\", \"LaunchTime\")\n           .th(\".finishtime\", \"FinishTime\")\n           .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n           .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n             .getQueue()))).append(\"\\\",\\\"\").append(String\n                 .valueOf(app.getPriority()))\n         .append(\"\\\",\\\"\").append(app.getStartedTime())\n         .append(\"\\\",\\\"\").append(app.getLaunchTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n-              ? \"Unassigned\"\n-              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n-                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n-                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n+              ? \"Unassigned\" :\n+              Apps.isApplicationFinalState(app.getAppState())\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       .__(\"var appsTableData\u003d\" + appsTableData).__();\n \n     tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n          .th(\".starttime\", \"StartTime\")\n          .th(\".launchtime\", \"LaunchTime\")\n          .th(\".finishtime\", \"FinishTime\")\n          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n            .getQueue()))).append(\"\\\",\\\"\").append(String\n                .valueOf(app.getPriority()))\n        .append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getLaunchTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\" :\n              Apps.isApplicationFinalState(app.getAppState())\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      .__(\"var appsTableData\u003d\" + appsTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8363. Upgrade commons-lang version to 3.7 in hadoop-yarn-project. Contributed by Takanobu Asanuma.\n",
      "commitDate": "12/06/18 8:35 AM",
      "commitName": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "17/04/18 11:15 AM",
      "commitNameOld": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 55.89,
      "commitsBetweenForRepo": 937,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,85 +1,85 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n           .th(\".starttime\", \"StartTime\")\n           .th(\".launchtime\", \"LaunchTime\")\n           .th(\".finishtime\", \"FinishTime\")\n           .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n           .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n-          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n-          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n-          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n-          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n             .getQueue()))).append(\"\\\",\\\"\").append(String\n                 .valueOf(app.getPriority()))\n         .append(\"\\\",\\\"\").append(app.getStartedTime())\n         .append(\"\\\",\\\"\").append(app.getLaunchTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       .__(\"var appsTableData\u003d\" + appsTableData).__();\n \n     tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n          .th(\".starttime\", \"StartTime\")\n          .th(\".launchtime\", \"LaunchTime\")\n          .th(\".finishtime\", \"FinishTime\")\n          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeEcmaScript(StringEscapeUtils.escapeHtml4(app\n            .getQueue()))).append(\"\\\",\\\"\").append(String\n                .valueOf(app.getPriority()))\n        .append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getLaunchTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      .__(\"var appsTableData\u003d\" + appsTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 11:15 AM",
      "commitName": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 6:04 AM",
      "commitNameOld": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,82 +1,85 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n-          .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n+          .th(\".starttime\", \"StartTime\")\n+          .th(\".launchtime\", \"LaunchTime\")\n+          .th(\".finishtime\", \"FinishTime\")\n           .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n           .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getQueue()))).append(\"\\\",\\\"\").append(String\n                 .valueOf(app.getPriority()))\n         .append(\"\\\",\\\"\").append(app.getStartedTime())\n+        .append(\"\\\",\\\"\").append(app.getLaunchTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       .__(\"var appsTableData\u003d\" + appsTableData).__();\n \n     tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n          .th(\".starttime\", \"StartTime\")\n          .th(\".launchtime\", \"LaunchTime\")\n          .th(\".finishtime\", \"FinishTime\")\n          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(String\n                .valueOf(app.getPriority()))\n        .append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getLaunchTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      .__(\"var appsTableData\u003d\" + appsTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\"\n\nThis reverts commit 0c14b6f0d80d847be7ef3eda1614eadbf835181c.\n",
      "commitDate": "17/04/18 6:04 AM",
      "commitName": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 5:59 AM",
      "commitNameOld": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,85 +1,82 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n-          .th(\".starttime\", \"StartTime\")\n-          .th(\".launchtime\", \"LaunchTime\")\n-          .th(\".finishtime\", \"FinishTime\")\n+          .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n           .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n           .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getQueue()))).append(\"\\\",\\\"\").append(String\n                 .valueOf(app.getPriority()))\n         .append(\"\\\",\\\"\").append(app.getStartedTime())\n-        .append(\"\\\",\\\"\").append(app.getLaunchTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       .__(\"var appsTableData\u003d\" + appsTableData).__();\n \n     tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n          .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(String\n                .valueOf(app.getPriority()))\n        .append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      .__(\"var appsTableData\u003d\" + appsTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 5:59 AM",
      "commitName": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "03/10/17 2:06 PM",
      "commitNameOld": "4a877737182808fe3392a116762ba59973a477a6",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 195.66,
      "commitsBetweenForRepo": 1449,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,82 +1,85 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n-          .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n+          .th(\".starttime\", \"StartTime\")\n+          .th(\".launchtime\", \"LaunchTime\")\n+          .th(\".finishtime\", \"FinishTime\")\n           .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n           .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getQueue()))).append(\"\\\",\\\"\").append(String\n                 .valueOf(app.getPriority()))\n         .append(\"\\\",\\\"\").append(app.getStartedTime())\n+        .append(\"\\\",\\\"\").append(app.getLaunchTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       .__(\"var appsTableData\u003d\" + appsTableData).__();\n \n     tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n          .th(\".starttime\", \"StartTime\")\n          .th(\".launchtime\", \"LaunchTime\")\n          .th(\".finishtime\", \"FinishTime\")\n          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(String\n                .valueOf(app.getPriority()))\n        .append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getLaunchTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      .__(\"var appsTableData\u003d\" + appsTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "12/08/15 2:15 AM",
      "commitNameOld": "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 715.62,
      "commitsBetweenForRepo": 4613,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,82 +1,82 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n           .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n           .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n-          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\")._()._().tbody();\n+          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getQueue()))).append(\"\\\",\\\"\").append(String\n                 .valueOf(app.getPriority()))\n         .append(\"\\\",\\\"\").append(app.getStartedTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n-      ._(\"var appsTableData\u003d\" + appsTableData)._();\n+      .__(\"var appsTableData\u003d\" + appsTableData).__();\n \n-    tbody._()._();\n+    tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n          .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\").__().__().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(String\n                .valueOf(app.getPriority()))\n        .append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      .__(\"var appsTableData\u003d\" + appsTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4023. Publish Application Priority to TimelineServer. (Sunil G via rohithsharmaks)\n",
      "commitDate": "12/08/15 2:15 AM",
      "commitName": "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2",
      "commitAuthor": "rohithsharmaks",
      "commitDateOld": "08/06/15 11:14 PM",
      "commitNameOld": "8d0ef3163287d811381e94cc0101dbc9847ee2db",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 64.13,
      "commitsBetweenForRepo": 371,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,80 +1,82 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n-          .th(\".queue\", \"Queue\").th(\".starttime\", \"StartTime\")\n-          .th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\")\n-          .th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\")\n-          .th(\".ui\", \"Tracking UI\")._()._().tbody();\n+          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n+          .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n+          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n+          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\")._()._().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n-            .getQueue()))).append(\"\\\",\\\"\").append(app.getStartedTime())\n+            .getQueue()))).append(\"\\\",\\\"\").append(String\n+                .valueOf(app.getPriority()))\n+        .append(\"\\\",\\\"\").append(app.getStartedTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       ._(\"var appsTableData\u003d\" + appsTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".priority\", \"Application Priority\")\n          .th(\".starttime\", \"StartTime\").th(\".finishtime\", \"FinishTime\")\n          .th(\".state\", \"State\").th(\".finalstatus\", \"FinalStatus\")\n          .th(\".progress\", \"Progress\").th(\".ui\", \"Tracking UI\")._()._().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(String\n                .valueOf(app.getPriority()))\n        .append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      ._(\"var appsTableData\u003d\" + appsTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2123. Progress bars in Web UI always at 100% due to non-US locale.\nContributed by Akira AJISAKA\n",
      "commitDate": "05/05/15 10:40 AM",
      "commitName": "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
      "commitAuthor": "Xuan",
      "commitDateOld": "16/04/15 8:04 AM",
      "commitNameOld": "1fa8075794894b3e0053d251788277fb88e85533",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 19.11,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,80 +1,80 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".starttime\", \"StartTime\")\n           .th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\")\n           .th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\")\n           .th(\".ui\", \"Tracking UI\")._()._().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n-      String percent \u003d String.format(\"%.1f\", app.getProgress());\n+      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getQueue()))).append(\"\\\",\\\"\").append(app.getStartedTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       ._(\"var appsTableData\u003d\" + appsTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".starttime\", \"StartTime\")\n          .th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\")\n          .th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\")\n          .th(\".ui\", \"Tracking UI\")._()._().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d StringUtils.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      ._(\"var appsTableData\u003d\" + appsTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "1fa8075794894b3e0053d251788277fb88e85533": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6300. Task list sort by task id broken. Contributed by Siqi Li.\n",
      "commitDate": "16/04/15 8:04 AM",
      "commitName": "1fa8075794894b3e0053d251788277fb88e85533",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "01/04/15 4:19 AM",
      "commitNameOld": "4728bdfa15809db4b8b235faa286c65de4a48cf6",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 15.16,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,81 +1,80 @@\n   protected void renderData(Block html) {\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n         html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n           .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n           .th(\".queue\", \"Queue\").th(\".starttime\", \"StartTime\")\n           .th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\")\n           .th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\")\n           .th(\".ui\", \"Tracking UI\")._()._().tbody();\n \n     StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n     for (ApplicationReport appReport : appReports) {\n       // TODO: remove the following condition. It is still here because\n       // the history side implementation of ApplicationBaseProtocol\n       // hasn\u0027t filtering capability (YARN-1819).\n       if (!reqAppStates.isEmpty()\n           \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n         continue;\n       }\n       AppInfo app \u003d new AppInfo(appReport);\n       String percent \u003d String.format(\"%.1f\", app.getProgress());\n-      // AppID numerical value parsed by parseHadoopID in yarn.dt.plugins.js\n       appsTableData\n         .append(\"[\\\"\u003ca href\u003d\u0027\")\n         .append(url(\"app\", app.getAppId()))\n         .append(\"\u0027\u003e\")\n         .append(app.getAppId())\n         .append(\"\u003c/a\u003e\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n               .getUser())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getName())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getType())))\n         .append(\"\\\",\\\"\")\n         .append(\n           StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n             .getQueue()))).append(\"\\\",\\\"\").append(app.getStartedTime())\n         .append(\"\\\",\\\"\").append(app.getFinishedTime())\n         .append(\"\\\",\\\"\")\n         .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n         .append(\"\\\",\\\"\")\n         .append(app.getFinalAppStatus())\n         .append(\"\\\",\\\"\")\n         // Progress bar\n         .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n         .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n         .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n         .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n \n       String trackingURL \u003d\n           app.getTrackingUrl() \u003d\u003d null\n               || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n             .getTrackingUrl();\n \n       String trackingUI \u003d\n           app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n               ? \"Unassigned\"\n               : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                   || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                   ? \"History\" : \"ApplicationMaster\";\n       appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n         .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n \n     }\n     if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       appsTableData.delete(appsTableData.length() - 2,\n         appsTableData.length() - 1);\n     }\n     appsTableData.append(\"]\");\n     html.script().$type(\"text/javascript\")\n       ._(\"var appsTableData\u003d\" + appsTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".starttime\", \"StartTime\")\n          .th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\")\n          .th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\")\n          .th(\".ui\", \"Tracking UI\")._()._().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d String.format(\"%.1f\", app.getProgress());\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      ._(\"var appsTableData\u003d\" + appsTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java",
      "extendedDetails": {}
    },
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3248. Display count of nodes blacklisted by apps in the web UI.\nContributed by Varun Vasudev\n",
      "commitDate": "01/04/15 4:19 AM",
      "commitName": "4728bdfa15809db4b8b235faa286c65de4a48cf6",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,81 @@\n+  protected void renderData(Block html) {\n+    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n+        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n+          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n+          .th(\".queue\", \"Queue\").th(\".starttime\", \"StartTime\")\n+          .th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\")\n+          .th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\")\n+          .th(\".ui\", \"Tracking UI\")._()._().tbody();\n+\n+    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n+    for (ApplicationReport appReport : appReports) {\n+      // TODO: remove the following condition. It is still here because\n+      // the history side implementation of ApplicationBaseProtocol\n+      // hasn\u0027t filtering capability (YARN-1819).\n+      if (!reqAppStates.isEmpty()\n+          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n+        continue;\n+      }\n+      AppInfo app \u003d new AppInfo(appReport);\n+      String percent \u003d String.format(\"%.1f\", app.getProgress());\n+      // AppID numerical value parsed by parseHadoopID in yarn.dt.plugins.js\n+      appsTableData\n+        .append(\"[\\\"\u003ca href\u003d\u0027\")\n+        .append(url(\"app\", app.getAppId()))\n+        .append(\"\u0027\u003e\")\n+        .append(app.getAppId())\n+        .append(\"\u003c/a\u003e\\\",\\\"\")\n+        .append(\n+          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+              .getUser())))\n+        .append(\"\\\",\\\"\")\n+        .append(\n+          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+            .getName())))\n+        .append(\"\\\",\\\"\")\n+        .append(\n+          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+            .getType())))\n+        .append(\"\\\",\\\"\")\n+        .append(\n+          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n+            .getQueue()))).append(\"\\\",\\\"\").append(app.getStartedTime())\n+        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n+        .append(\"\\\",\\\"\")\n+        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n+        .append(\"\\\",\\\"\")\n+        .append(app.getFinalAppStatus())\n+        .append(\"\\\",\\\"\")\n+        // Progress bar\n+        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n+        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n+        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n+        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n+        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n+\n+      String trackingURL \u003d\n+          app.getTrackingUrl() \u003d\u003d null\n+              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n+            .getTrackingUrl();\n+\n+      String trackingUI \u003d\n+          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n+              ? \"Unassigned\"\n+              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n+                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n+                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n+                  ? \"History\" : \"ApplicationMaster\";\n+      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n+        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n+\n+    }\n+    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n+      appsTableData.delete(appsTableData.length() - 2,\n+        appsTableData.length() - 1);\n+    }\n+    appsTableData.append(\"]\");\n+    html.script().$type(\"text/javascript\")\n+      ._(\"var appsTableData\u003d\" + appsTableData)._();\n+\n+    tbody._()._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renderData(Block html) {\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d\n        html.table(\"#apps\").thead().tr().th(\".id\", \"ID\").th(\".user\", \"User\")\n          .th(\".name\", \"Name\").th(\".type\", \"Application Type\")\n          .th(\".queue\", \"Queue\").th(\".starttime\", \"StartTime\")\n          .th(\".finishtime\", \"FinishTime\").th(\".state\", \"State\")\n          .th(\".finalstatus\", \"FinalStatus\").th(\".progress\", \"Progress\")\n          .th(\".ui\", \"Tracking UI\")._()._().tbody();\n\n    StringBuilder appsTableData \u003d new StringBuilder(\"[\\n\");\n    for (ApplicationReport appReport : appReports) {\n      // TODO: remove the following condition. It is still here because\n      // the history side implementation of ApplicationBaseProtocol\n      // hasn\u0027t filtering capability (YARN-1819).\n      if (!reqAppStates.isEmpty()\n          \u0026\u0026 !reqAppStates.contains(appReport.getYarnApplicationState())) {\n        continue;\n      }\n      AppInfo app \u003d new AppInfo(appReport);\n      String percent \u003d String.format(\"%.1f\", app.getProgress());\n      // AppID numerical value parsed by parseHadoopID in yarn.dt.plugins.js\n      appsTableData\n        .append(\"[\\\"\u003ca href\u003d\u0027\")\n        .append(url(\"app\", app.getAppId()))\n        .append(\"\u0027\u003e\")\n        .append(app.getAppId())\n        .append(\"\u003c/a\u003e\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n              .getUser())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getName())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getType())))\n        .append(\"\\\",\\\"\")\n        .append(\n          StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(app\n            .getQueue()))).append(\"\\\",\\\"\").append(app.getStartedTime())\n        .append(\"\\\",\\\"\").append(app.getFinishedTime())\n        .append(\"\\\",\\\"\")\n        .append(app.getAppState() \u003d\u003d null ? UNAVAILABLE : app.getAppState())\n        .append(\"\\\",\\\"\")\n        .append(app.getFinalAppStatus())\n        .append(\"\\\",\\\"\")\n        // Progress bar\n        .append(\"\u003cbr title\u003d\u0027\").append(percent).append(\"\u0027\u003e \u003cdiv class\u003d\u0027\")\n        .append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\").append(join(percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR_VALUE)\n        .append(\"\u0027 style\u003d\u0027\").append(join(\"width:\", percent, \u0027%\u0027))\n        .append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\").append(\"\\\",\\\"\u003ca \");\n\n      String trackingURL \u003d\n          app.getTrackingUrl() \u003d\u003d null\n              || app.getTrackingUrl().equals(UNAVAILABLE) ? null : app\n            .getTrackingUrl();\n\n      String trackingUI \u003d\n          app.getTrackingUrl() \u003d\u003d null || app.getTrackingUrl().equals(UNAVAILABLE)\n              ? \"Unassigned\"\n              : app.getAppState() \u003d\u003d YarnApplicationState.FINISHED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.FAILED\n                  || app.getAppState() \u003d\u003d YarnApplicationState.KILLED\n                  ? \"History\" : \"ApplicationMaster\";\n      appsTableData.append(trackingURL \u003d\u003d null ? \"#\" : \"href\u003d\u0027\" + trackingURL)\n        .append(\"\u0027\u003e\").append(trackingUI).append(\"\u003c/a\u003e\\\"],\\n\");\n\n    }\n    if (appsTableData.charAt(appsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      appsTableData.delete(appsTableData.length() - 2,\n        appsTableData.length() - 1);\n    }\n    appsTableData.append(\"]\");\n    html.script().$type(\"text/javascript\")\n      ._(\"var appsTableData\u003d\" + appsTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java"
    }
  }
}