{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecondaryNameNode.java",
  "functionName": "doMerge",
  "functionId": "doMerge___sig-CheckpointSignature__manifest-RemoteEditLogManifest__loadImage-boolean__dstImage-FSImage__dstNamesystem-FSNamesystem",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
  "functionStartLine": 1082,
  "functionEndLine": 1114,
  "numCommitsSeen": 106,
  "timeTaken": 7931,
  "changeHistory": [
    "b1fce2b8b14c4ce43f7098a269ac2b95304db0ce",
    "71de367c5e80ea76d1e8d21f0216cd6b879dcee5",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
    "c96d0780335de83a694e93cf8b8fc46d2288fe9d",
    "cfa86e611077e19064568a35a191250a57c75db7",
    "59e4199d842d8590d2c73c6dba805a9746e1ef4a",
    "92cb6b093c7e3a39083c0497d80bd7e4eeae9c7f",
    "06e84a1bca19bd01568a3095e33944d4d6387fd3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b1fce2b8b14c4ce43f7098a269ac2b95304db0ce": "Ymultichange(Ymodifierchange,Ybodychange)",
    "71de367c5e80ea76d1e8d21f0216cd6b879dcee5": "Ybodychange",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": "Ybodychange",
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b": "Ybodychange",
    "c96d0780335de83a694e93cf8b8fc46d2288fe9d": "Ybodychange",
    "cfa86e611077e19064568a35a191250a57c75db7": "Ybodychange",
    "59e4199d842d8590d2c73c6dba805a9746e1ef4a": "Ybodychange",
    "92cb6b093c7e3a39083c0497d80bd7e4eeae9c7f": "Ybodychange",
    "06e84a1bca19bd01568a3095e33944d4d6387fd3": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1fce2b8b14c4ce43f7098a269ac2b95304db0ce": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-11209. SNN can\u0027t checkpoint when rolling upgrade is not finalized. Contributed by Xiaoyu Yao.\n",
      "commitDate": "17/01/17 2:33 PM",
      "commitName": "b1fce2b8b14c4ce43f7098a269ac2b95304db0ce",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-11209. SNN can\u0027t checkpoint when rolling upgrade is not finalized. Contributed by Xiaoyu Yao.\n",
          "commitDate": "17/01/17 2:33 PM",
          "commitName": "b1fce2b8b14c4ce43f7098a269ac2b95304db0ce",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "27/07/16 5:55 PM",
          "commitNameOld": "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 173.9,
          "commitsBetweenForRepo": 1152,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-  static void doMerge(\n+  void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n           sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstNamesystem.writeLock();\n       try {\n         dstImage.reloadFromImageFile(file, dstNamesystem);\n       } finally {\n         dstNamesystem.writeUnlock();\n       }\n       dstNamesystem.imageLoadComplete();\n     }\n     // error simulation code for junit test\n     CheckpointFaultInjector.getInstance().duringMerge();   \n \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n-    if (!dstNamesystem.isRollingUpgrade()) {\n-      dstStorage.writeAll();\n+    if (!namenode.isRollingUpgrade()) {\n+      dstImage.updateStorageVersion();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n          sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstNamesystem.writeLock();\n      try {\n        dstImage.reloadFromImageFile(file, dstNamesystem);\n      } finally {\n        dstNamesystem.writeUnlock();\n      }\n      dstNamesystem.imageLoadComplete();\n    }\n    // error simulation code for junit test\n    CheckpointFaultInjector.getInstance().duringMerge();   \n\n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    if (!namenode.isRollingUpgrade()) {\n      dstImage.updateStorageVersion();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11209. SNN can\u0027t checkpoint when rolling upgrade is not finalized. Contributed by Xiaoyu Yao.\n",
          "commitDate": "17/01/17 2:33 PM",
          "commitName": "b1fce2b8b14c4ce43f7098a269ac2b95304db0ce",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "27/07/16 5:55 PM",
          "commitNameOld": "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 173.9,
          "commitsBetweenForRepo": 1152,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-  static void doMerge(\n+  void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n           sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstNamesystem.writeLock();\n       try {\n         dstImage.reloadFromImageFile(file, dstNamesystem);\n       } finally {\n         dstNamesystem.writeUnlock();\n       }\n       dstNamesystem.imageLoadComplete();\n     }\n     // error simulation code for junit test\n     CheckpointFaultInjector.getInstance().duringMerge();   \n \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n-    if (!dstNamesystem.isRollingUpgrade()) {\n-      dstStorage.writeAll();\n+    if (!namenode.isRollingUpgrade()) {\n+      dstImage.updateStorageVersion();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n          sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstNamesystem.writeLock();\n      try {\n        dstImage.reloadFromImageFile(file, dstNamesystem);\n      } finally {\n        dstNamesystem.writeUnlock();\n      }\n      dstNamesystem.imageLoadComplete();\n    }\n    // error simulation code for junit test\n    CheckpointFaultInjector.getInstance().duringMerge();   \n\n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    if (!namenode.isRollingUpgrade()) {\n      dstImage.updateStorageVersion();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
          "extendedDetails": {}
        }
      ]
    },
    "71de367c5e80ea76d1e8d21f0216cd6b879dcee5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8432. Introduce a minimum compatible layout version to allow downgrade in more rolling upgrade use cases. Contributed by Chris Nauroth.\n",
      "commitDate": "06/06/15 9:43 AM",
      "commitName": "71de367c5e80ea76d1e8d21f0216cd6b879dcee5",
      "commitAuthor": "cnauroth",
      "commitDateOld": "18/05/15 11:54 PM",
      "commitNameOld": "93972a332a9fc6390447fc5fc9785c98fb4c3344",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 18.41,
      "commitsBetweenForRepo": 149,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,33 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n           sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstNamesystem.writeLock();\n       try {\n         dstImage.reloadFromImageFile(file, dstNamesystem);\n       } finally {\n         dstNamesystem.writeUnlock();\n       }\n       dstNamesystem.imageLoadComplete();\n     }\n     // error simulation code for junit test\n     CheckpointFaultInjector.getInstance().duringMerge();   \n \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n-    dstStorage.writeAll();\n+    if (!dstNamesystem.isRollingUpgrade()) {\n+      dstStorage.writeAll();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n          sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstNamesystem.writeLock();\n      try {\n        dstImage.reloadFromImageFile(file, dstNamesystem);\n      } finally {\n        dstNamesystem.writeUnlock();\n      }\n      dstNamesystem.imageLoadComplete();\n    }\n    // error simulation code for junit test\n    CheckpointFaultInjector.getInstance().duringMerge();   \n\n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    if (!dstNamesystem.isRollingUpgrade()) {\n      dstStorage.writeAll();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6480. Move waitForReady() from FSDirectory to FSNamesystem. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 9:13 PM",
      "commitName": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "13/05/14 6:15 PM",
      "commitNameOld": "97f58955a6045b373ab73653bf26ab5922b00cf3",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 36.12,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n           sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstNamesystem.writeLock();\n       try {\n         dstImage.reloadFromImageFile(file, dstNamesystem);\n       } finally {\n         dstNamesystem.writeUnlock();\n       }\n-      dstNamesystem.dir.imageLoadComplete();\n+      dstNamesystem.imageLoadComplete();\n     }\n     // error simulation code for junit test\n     CheckpointFaultInjector.getInstance().duringMerge();   \n \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n          sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstNamesystem.writeLock();\n      try {\n        dstImage.reloadFromImageFile(file, dstNamesystem);\n      } finally {\n        dstNamesystem.writeUnlock();\n      }\n      dstNamesystem.imageLoadComplete();\n    }\n    // error simulation code for junit test\n    CheckpointFaultInjector.getInstance().duringMerge();   \n\n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/14 1:58 PM",
      "commitName": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "30/01/14 7:24 PM",
      "commitNameOld": "f2972402b78b75874599666482332fa5f51351fa",
      "commitAuthorOld": "",
      "daysBetweenCommits": 25.77,
      "commitsBetweenForRepo": 241,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n-      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n+      File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n+          sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstNamesystem.writeLock();\n       try {\n         dstImage.reloadFromImageFile(file, dstNamesystem);\n       } finally {\n         dstNamesystem.writeUnlock();\n       }\n       dstNamesystem.dir.imageLoadComplete();\n     }\n     // error simulation code for junit test\n     CheckpointFaultInjector.getInstance().duringMerge();   \n \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(NameNodeFile.IMAGE,\n          sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstNamesystem.writeLock();\n      try {\n        dstImage.reloadFromImageFile(file, dstNamesystem);\n      } finally {\n        dstNamesystem.writeUnlock();\n      }\n      dstNamesystem.dir.imageLoadComplete();\n    }\n    // error simulation code for junit test\n    CheckpointFaultInjector.getInstance().duringMerge();   \n\n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "c96d0780335de83a694e93cf8b8fc46d2288fe9d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5845. SecondaryNameNode dies when checkpointing with cache pools.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1562644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/01/14 3:59 PM",
      "commitName": "c96d0780335de83a694e93cf8b8fc46d2288fe9d",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "27/01/14 11:32 PM",
      "commitNameOld": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.69,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,30 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n-      dstImage.reloadFromImageFile(file, dstNamesystem);\n+      dstNamesystem.writeLock();\n+      try {\n+        dstImage.reloadFromImageFile(file, dstNamesystem);\n+      } finally {\n+        dstNamesystem.writeUnlock();\n+      }\n       dstNamesystem.dir.imageLoadComplete();\n     }\n     // error simulation code for junit test\n     CheckpointFaultInjector.getInstance().duringMerge();   \n \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstNamesystem.writeLock();\n      try {\n        dstImage.reloadFromImageFile(file, dstNamesystem);\n      } finally {\n        dstNamesystem.writeUnlock();\n      }\n      dstNamesystem.dir.imageLoadComplete();\n    }\n    // error simulation code for junit test\n    CheckpointFaultInjector.getInstance().duringMerge();   \n\n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "cfa86e611077e19064568a35a191250a57c75db7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4128. 2NN gets stuck in inconsistent state if edit log replay fails in the middle (kihwal via daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1452384 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/13 8:44 AM",
      "commitName": "cfa86e611077e19064568a35a191250a57c75db7",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "04/02/13 1:29 PM",
      "commitNameOld": "a8e39feed2642dbfedb8fd22648904ad4bb6af97",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 27.8,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstImage.reloadFromImageFile(file, dstNamesystem);\n       dstNamesystem.dir.imageLoadComplete();\n     }\n-    \n+    // error simulation code for junit test\n+    CheckpointFaultInjector.getInstance().duringMerge();   \n+\n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file, dstNamesystem);\n      dstNamesystem.dir.imageLoadComplete();\n    }\n    // error simulation code for junit test\n    CheckpointFaultInjector.getInstance().duringMerge();   \n\n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "59e4199d842d8590d2c73c6dba805a9746e1ef4a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4182. SecondaryNameNode leaks NameCache entries (bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1409311 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/12 11:21 AM",
      "commitName": "59e4199d842d8590d2c73c6dba805a9746e1ef4a",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "15/10/12 6:59 PM",
      "commitNameOld": "557ffe2101325438f15dbb218128d327984ecb11",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 29.72,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstImage.reloadFromImageFile(file, dstNamesystem);\n+      dstNamesystem.dir.imageLoadComplete();\n     }\n     \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n     // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file, dstNamesystem);\n      dstNamesystem.dir.imageLoadComplete();\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "92cb6b093c7e3a39083c0497d80bd7e4eeae9c7f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3678. Edit log files are never being purged from 2NN. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377046 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/12 11:52 AM",
      "commitName": "92cb6b093c7e3a39083c0497d80bd7e4eeae9c7f",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "22/08/12 11:47 AM",
      "commitNameOld": "de8b34a70e7ed4aef4675dbbef90df9f596efa12",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n       boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n       throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n       dstImage.reloadFromImageFile(file, dstNamesystem);\n     }\n     \n     Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n+    // The following has the side effect of purging old fsimages/edit logs.\n     dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file, dstNamesystem);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    // The following has the side effect of purging old fsimages/edit logs.\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "06e84a1bca19bd01568a3095e33944d4d6387fd3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166466 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/09/11 4:23 PM",
      "commitName": "06e84a1bca19bd01568a3095e33944d4d6387fd3",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166466 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/09/11 4:23 PM",
          "commitName": "06e84a1bca19bd01568a3095e33944d4d6387fd3",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/09/11 12:30 PM",
          "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 3.16,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n-      boolean loadImage, FSImage dstImage) throws IOException {   \n+      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n+      throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n-      dstImage.reloadFromImageFile(file);\n+      dstImage.reloadFromImageFile(file, dstNamesystem);\n     }\n     \n-    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n-    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n+    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n+    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file, dstNamesystem);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
          "extendedDetails": {
            "oldValue": "[sig-CheckpointSignature, manifest-RemoteEditLogManifest, loadImage-boolean, dstImage-FSImage]",
            "newValue": "[sig-CheckpointSignature, manifest-RemoteEditLogManifest, loadImage-boolean, dstImage-FSImage, dstNamesystem-FSNamesystem]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166466 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/09/11 4:23 PM",
          "commitName": "06e84a1bca19bd01568a3095e33944d4d6387fd3",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/09/11 12:30 PM",
          "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 3.16,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n   static void doMerge(\n       CheckpointSignature sig, RemoteEditLogManifest manifest,\n-      boolean loadImage, FSImage dstImage) throws IOException {   \n+      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n+      throws IOException {   \n     NNStorage dstStorage \u003d dstImage.getStorage();\n     \n     dstStorage.setStorageInfo(sig);\n     if (loadImage) {\n       File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n       if (file \u003d\u003d null) {\n         throw new IOException(\"Couldn\u0027t find image file at txid \" + \n             sig.mostRecentCheckpointTxId + \" even though it should have \" +\n             \"just been downloaded\");\n       }\n-      dstImage.reloadFromImageFile(file);\n+      dstImage.reloadFromImageFile(file, dstNamesystem);\n     }\n     \n-    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n-    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n+    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n+    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n     dstStorage.writeAll();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage, FSNamesystem dstNamesystem)\n      throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file, dstNamesystem);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage, dstNamesystem);\n    dstImage.saveFSImageInAllDirs(dstNamesystem, dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage) throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage) throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,20 @@\n-    private void doMerge(CheckpointSignature sig, boolean loadImage)\n-    throws IOException {\n-      getEditLog().open();\n-      StorageDirectory sdName \u003d null;\n-      StorageDirectory sdEdits \u003d null;\n-      Iterator\u003cStorageDirectory\u003e it \u003d null;\n-      if (loadImage) {\n-        it \u003d getStorage().dirIterator(NameNodeDirType.IMAGE);\n-        if (it.hasNext())\n-          sdName \u003d it.next();\n-        if (sdName \u003d\u003d null) {\n-          throw new IOException(\"Could not locate checkpoint fsimage\");\n-        }\n+  static void doMerge(\n+      CheckpointSignature sig, RemoteEditLogManifest manifest,\n+      boolean loadImage, FSImage dstImage) throws IOException {   \n+    NNStorage dstStorage \u003d dstImage.getStorage();\n+    \n+    dstStorage.setStorageInfo(sig);\n+    if (loadImage) {\n+      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n+      if (file \u003d\u003d null) {\n+        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n+            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n+            \"just been downloaded\");\n       }\n-      it \u003d getStorage().dirIterator(NameNodeDirType.EDITS);\n-      if (it.hasNext())\n-        sdEdits \u003d it.next();\n-      if (sdEdits \u003d\u003d null)\n-        throw new IOException(\"Could not locate checkpoint edits\");\n-      if (loadImage) {\n-        // to avoid assert in loadFSImage()\n-        this.getStorage().layoutVersion \u003d -1;\n-        getStorage();\n-        loadFSImage(NNStorage.getStorageFile(sdName, NameNodeFile.IMAGE));\n-      }\n-      loadFSEdits(sdEdits);\n-      storage.setClusterID(sig.getClusterID());\n-      storage.setBlockPoolID(sig.getBlockpoolID());\n-      sig.validateStorageInfo(this);\n-      saveNamespace(false);\n-    }\n\\ No newline at end of file\n+      dstImage.reloadFromImageFile(file);\n+    }\n+    \n+    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n+    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n+    dstStorage.writeAll();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage) throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
          "extendedDetails": {
            "oldValue": "[sig-CheckpointSignature, loadImage-boolean]",
            "newValue": "[sig-CheckpointSignature, manifest-RemoteEditLogManifest, loadImage-boolean, dstImage-FSImage]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,20 @@\n-    private void doMerge(CheckpointSignature sig, boolean loadImage)\n-    throws IOException {\n-      getEditLog().open();\n-      StorageDirectory sdName \u003d null;\n-      StorageDirectory sdEdits \u003d null;\n-      Iterator\u003cStorageDirectory\u003e it \u003d null;\n-      if (loadImage) {\n-        it \u003d getStorage().dirIterator(NameNodeDirType.IMAGE);\n-        if (it.hasNext())\n-          sdName \u003d it.next();\n-        if (sdName \u003d\u003d null) {\n-          throw new IOException(\"Could not locate checkpoint fsimage\");\n-        }\n+  static void doMerge(\n+      CheckpointSignature sig, RemoteEditLogManifest manifest,\n+      boolean loadImage, FSImage dstImage) throws IOException {   \n+    NNStorage dstStorage \u003d dstImage.getStorage();\n+    \n+    dstStorage.setStorageInfo(sig);\n+    if (loadImage) {\n+      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n+      if (file \u003d\u003d null) {\n+        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n+            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n+            \"just been downloaded\");\n       }\n-      it \u003d getStorage().dirIterator(NameNodeDirType.EDITS);\n-      if (it.hasNext())\n-        sdEdits \u003d it.next();\n-      if (sdEdits \u003d\u003d null)\n-        throw new IOException(\"Could not locate checkpoint edits\");\n-      if (loadImage) {\n-        // to avoid assert in loadFSImage()\n-        this.getStorage().layoutVersion \u003d -1;\n-        getStorage();\n-        loadFSImage(NNStorage.getStorageFile(sdName, NameNodeFile.IMAGE));\n-      }\n-      loadFSEdits(sdEdits);\n-      storage.setClusterID(sig.getClusterID());\n-      storage.setBlockPoolID(sig.getBlockpoolID());\n-      sig.validateStorageInfo(this);\n-      saveNamespace(false);\n-    }\n\\ No newline at end of file\n+      dstImage.reloadFromImageFile(file);\n+    }\n+    \n+    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n+    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n+    dstStorage.writeAll();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage) throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,20 @@\n-    private void doMerge(CheckpointSignature sig, boolean loadImage)\n-    throws IOException {\n-      getEditLog().open();\n-      StorageDirectory sdName \u003d null;\n-      StorageDirectory sdEdits \u003d null;\n-      Iterator\u003cStorageDirectory\u003e it \u003d null;\n-      if (loadImage) {\n-        it \u003d getStorage().dirIterator(NameNodeDirType.IMAGE);\n-        if (it.hasNext())\n-          sdName \u003d it.next();\n-        if (sdName \u003d\u003d null) {\n-          throw new IOException(\"Could not locate checkpoint fsimage\");\n-        }\n+  static void doMerge(\n+      CheckpointSignature sig, RemoteEditLogManifest manifest,\n+      boolean loadImage, FSImage dstImage) throws IOException {   \n+    NNStorage dstStorage \u003d dstImage.getStorage();\n+    \n+    dstStorage.setStorageInfo(sig);\n+    if (loadImage) {\n+      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n+      if (file \u003d\u003d null) {\n+        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n+            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n+            \"just been downloaded\");\n       }\n-      it \u003d getStorage().dirIterator(NameNodeDirType.EDITS);\n-      if (it.hasNext())\n-        sdEdits \u003d it.next();\n-      if (sdEdits \u003d\u003d null)\n-        throw new IOException(\"Could not locate checkpoint edits\");\n-      if (loadImage) {\n-        // to avoid assert in loadFSImage()\n-        this.getStorage().layoutVersion \u003d -1;\n-        getStorage();\n-        loadFSImage(NNStorage.getStorageFile(sdName, NameNodeFile.IMAGE));\n-      }\n-      loadFSEdits(sdEdits);\n-      storage.setClusterID(sig.getClusterID());\n-      storage.setBlockPoolID(sig.getBlockpoolID());\n-      sig.validateStorageInfo(this);\n-      saveNamespace(false);\n-    }\n\\ No newline at end of file\n+      dstImage.reloadFromImageFile(file);\n+    }\n+    \n+    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n+    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n+    dstStorage.writeAll();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static void doMerge(\n      CheckpointSignature sig, RemoteEditLogManifest manifest,\n      boolean loadImage, FSImage dstImage) throws IOException {   \n    NNStorage dstStorage \u003d dstImage.getStorage();\n    \n    dstStorage.setStorageInfo(sig);\n    if (loadImage) {\n      File file \u003d dstStorage.findImageFile(sig.mostRecentCheckpointTxId);\n      if (file \u003d\u003d null) {\n        throw new IOException(\"Couldn\u0027t find image file at txid \" + \n            sig.mostRecentCheckpointTxId + \" even though it should have \" +\n            \"just been downloaded\");\n      }\n      dstImage.reloadFromImageFile(file);\n    }\n    \n    Checkpointer.rollForwardByApplyingLogs(manifest, dstImage);\n    dstImage.saveFSImageInAllDirs(dstImage.getLastAppliedTxId());\n    dstStorage.writeAll();\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,31 @@\n+    private void doMerge(CheckpointSignature sig, boolean loadImage)\n+    throws IOException {\n+      getEditLog().open();\n+      StorageDirectory sdName \u003d null;\n+      StorageDirectory sdEdits \u003d null;\n+      Iterator\u003cStorageDirectory\u003e it \u003d null;\n+      if (loadImage) {\n+        it \u003d getStorage().dirIterator(NameNodeDirType.IMAGE);\n+        if (it.hasNext())\n+          sdName \u003d it.next();\n+        if (sdName \u003d\u003d null) {\n+          throw new IOException(\"Could not locate checkpoint fsimage\");\n+        }\n+      }\n+      it \u003d getStorage().dirIterator(NameNodeDirType.EDITS);\n+      if (it.hasNext())\n+        sdEdits \u003d it.next();\n+      if (sdEdits \u003d\u003d null)\n+        throw new IOException(\"Could not locate checkpoint edits\");\n+      if (loadImage) {\n+        // to avoid assert in loadFSImage()\n+        this.getStorage().layoutVersion \u003d -1;\n+        getStorage();\n+        loadFSImage(NNStorage.getStorageFile(sdName, NameNodeFile.IMAGE));\n+      }\n+      loadFSEdits(sdEdits);\n+      storage.setClusterID(sig.getClusterID());\n+      storage.setBlockPoolID(sig.getBlockpoolID());\n+      sig.validateStorageInfo(this);\n+      saveNamespace(false);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void doMerge(CheckpointSignature sig, boolean loadImage)\n    throws IOException {\n      getEditLog().open();\n      StorageDirectory sdName \u003d null;\n      StorageDirectory sdEdits \u003d null;\n      Iterator\u003cStorageDirectory\u003e it \u003d null;\n      if (loadImage) {\n        it \u003d getStorage().dirIterator(NameNodeDirType.IMAGE);\n        if (it.hasNext())\n          sdName \u003d it.next();\n        if (sdName \u003d\u003d null) {\n          throw new IOException(\"Could not locate checkpoint fsimage\");\n        }\n      }\n      it \u003d getStorage().dirIterator(NameNodeDirType.EDITS);\n      if (it.hasNext())\n        sdEdits \u003d it.next();\n      if (sdEdits \u003d\u003d null)\n        throw new IOException(\"Could not locate checkpoint edits\");\n      if (loadImage) {\n        // to avoid assert in loadFSImage()\n        this.getStorage().layoutVersion \u003d -1;\n        getStorage();\n        loadFSImage(NNStorage.getStorageFile(sdName, NameNodeFile.IMAGE));\n      }\n      loadFSEdits(sdEdits);\n      storage.setClusterID(sig.getClusterID());\n      storage.setBlockPoolID(sig.getBlockpoolID());\n      sig.validateStorageInfo(this);\n      saveNamespace(false);\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java"
    }
  }
}