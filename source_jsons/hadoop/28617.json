{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnmanagedAMPoolManager.java",
  "functionName": "finishApplicationMaster",
  "functionId": "finishApplicationMaster___uamId-String__request-FinishApplicationMasterRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java",
  "functionStartLine": 354,
  "functionEndLine": 372,
  "numCommitsSeen": 7,
  "timeTaken": 1124,
  "changeHistory": [
    "d5f66888b8d767ee6706fab9950c194a1bf26d32",
    "859aa1f9d621d07693825e610bdc0149f7a2770a"
  ],
  "changeHistoryShort": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": "Ybodychange",
    "859aa1f9d621d07693825e610bdc0149f7a2770a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
      "commitDate": "17/11/17 5:39 PM",
      "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 108.05,
      "commitsBetweenForRepo": 968,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public FinishApplicationMasterResponse finishApplicationMaster(String uamId,\n       FinishApplicationMasterRequest request)\n       throws YarnException, IOException {\n     if (!this.unmanagedAppMasterMap.containsKey(uamId)) {\n       throw new YarnException(\"UAM \" + uamId + \" does not exist\");\n     }\n-    LOG.info(\"Finishing application for UAM id {} \", uamId);\n+    LOG.info(\"Finishing UAM id {} for application {}\", uamId,\n+        this.appIdMap.get(uamId));\n     FinishApplicationMasterResponse response \u003d\n         this.unmanagedAppMasterMap.get(uamId).finishApplicationMaster(request);\n \n     if (response.getIsUnregistered()) {\n       // Only remove the UAM when the unregister finished\n       this.unmanagedAppMasterMap.remove(uamId);\n-      this.attemptIdMap.remove(uamId);\n+      this.appIdMap.remove(uamId);\n       LOG.info(\"UAM id {} is unregistered\", uamId);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FinishApplicationMasterResponse finishApplicationMaster(String uamId,\n      FinishApplicationMasterRequest request)\n      throws YarnException, IOException {\n    if (!this.unmanagedAppMasterMap.containsKey(uamId)) {\n      throw new YarnException(\"UAM \" + uamId + \" does not exist\");\n    }\n    LOG.info(\"Finishing UAM id {} for application {}\", uamId,\n        this.appIdMap.get(uamId));\n    FinishApplicationMasterResponse response \u003d\n        this.unmanagedAppMasterMap.get(uamId).finishApplicationMaster(request);\n\n    if (response.getIsUnregistered()) {\n      // Only remove the UAM when the unregister finished\n      this.unmanagedAppMasterMap.remove(uamId);\n      this.appIdMap.remove(uamId);\n      LOG.info(\"UAM id {} is unregistered\", uamId);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java",
      "extendedDetails": {}
    },
    "859aa1f9d621d07693825e610bdc0149f7a2770a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,18 @@\n+  public FinishApplicationMasterResponse finishApplicationMaster(String uamId,\n+      FinishApplicationMasterRequest request)\n+      throws YarnException, IOException {\n+    if (!this.unmanagedAppMasterMap.containsKey(uamId)) {\n+      throw new YarnException(\"UAM \" + uamId + \" does not exist\");\n+    }\n+    LOG.info(\"Finishing application for UAM id {} \", uamId);\n+    FinishApplicationMasterResponse response \u003d\n+        this.unmanagedAppMasterMap.get(uamId).finishApplicationMaster(request);\n+\n+    if (response.getIsUnregistered()) {\n+      // Only remove the UAM when the unregister finished\n+      this.unmanagedAppMasterMap.remove(uamId);\n+      this.attemptIdMap.remove(uamId);\n+      LOG.info(\"UAM id {} is unregistered\", uamId);\n+    }\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FinishApplicationMasterResponse finishApplicationMaster(String uamId,\n      FinishApplicationMasterRequest request)\n      throws YarnException, IOException {\n    if (!this.unmanagedAppMasterMap.containsKey(uamId)) {\n      throw new YarnException(\"UAM \" + uamId + \" does not exist\");\n    }\n    LOG.info(\"Finishing application for UAM id {} \", uamId);\n    FinishApplicationMasterResponse response \u003d\n        this.unmanagedAppMasterMap.get(uamId).finishApplicationMaster(request);\n\n    if (response.getIsUnregistered()) {\n      // Only remove the UAM when the unregister finished\n      this.unmanagedAppMasterMap.remove(uamId);\n      this.attemptIdMap.remove(uamId);\n      LOG.info(\"UAM id {} is unregistered\", uamId);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java"
    }
  }
}