{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StorageLocation.java",
  "functionName": "parse",
  "functionId": "parse___rawLocation-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
  "functionStartLine": 128,
  "functionEndLine": 145,
  "numCommitsSeen": 19,
  "timeTaken": 2846,
  "changeHistory": [
    "f209e93566b159c22054dcb276e45f23a2b7b7d1",
    "78ec38b2ede8bdf3874b2ae051af9580007a9ba1",
    "4e88ff5b27cc33d311ab7a7248c3cf6303997ddd",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
    "9cedad11d8d2197a54732667a15344983de5c437",
    "946456c6d88780abe0251b098dd771e9e1e93ab3",
    "d758be1f35f6c1c7e9edd491af559721a3b8b8f8",
    "2d9f038e63e1a0a23896fa623d632a12b5dab7b3",
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
    "395f0ae56782777024590796a6ecd7c0f6aa5180"
  ],
  "changeHistoryShort": {
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": "Ybodychange",
    "78ec38b2ede8bdf3874b2ae051af9580007a9ba1": "Ybodychange",
    "4e88ff5b27cc33d311ab7a7248c3cf6303997ddd": "Ybodychange",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": "Ybodychange",
    "9cedad11d8d2197a54732667a15344983de5c437": "Ybodychange",
    "946456c6d88780abe0251b098dd771e9e1e93ab3": "Ybodychange",
    "d758be1f35f6c1c7e9edd491af559721a3b8b8f8": "Ymodifierchange",
    "2d9f038e63e1a0a23896fa623d632a12b5dab7b3": "Yexceptionschange",
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b": "Ymultichange(Ymodifierchange,Ybodychange)",
    "395f0ae56782777024590796a6ecd7c0f6aa5180": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
      "commitDate": "26/10/16 10:32 AM",
      "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "10/10/16 3:30 PM",
      "commitNameOld": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 15.79,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public static StorageLocation parse(String rawLocation)\n       throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2).trim();\n       if (!classString.isEmpty()) {\n         storageType \u003d\n             StorageType.valueOf(StringUtils.toUpperCase(classString));\n       }\n     }\n-\n+    //do Path.toURI instead of new URI(location) as this ensures that\n+    //\"/a/b\" and \"/a/b/\" are represented in a consistent manner\n     return new StorageLocation(storageType, new Path(location).toUri());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2).trim();\n      if (!classString.isEmpty()) {\n        storageType \u003d\n            StorageType.valueOf(StringUtils.toUpperCase(classString));\n      }\n    }\n    //do Path.toURI instead of new URI(location) as this ensures that\n    //\"/a/b\" and \"/a/b/\" are represented in a consistent manner\n    return new StorageLocation(storageType, new Path(location).toUri());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "78ec38b2ede8bdf3874b2ae051af9580007a9ba1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8807.  dfs.datanode.data.dir does not handle spaces between storageType and URI correctly.  Contributed by Anu Engineer\n",
      "commitDate": "24/11/15 4:01 PM",
      "commitName": "78ec38b2ede8bdf3874b2ae051af9580007a9ba1",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "24/08/15 12:59 PM",
      "commitNameOld": "6b6a63bbbda920315d3d24b61ed3344a78a981b6",
      "commitAuthorOld": "",
      "daysBetweenCommits": 92.17,
      "commitsBetweenForRepo": 705,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static StorageLocation parse(String rawLocation)\n       throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n-      location \u003d matcher.group(2);\n+      location \u003d matcher.group(2).trim();\n       if (!classString.isEmpty()) {\n         storageType \u003d\n             StorageType.valueOf(StringUtils.toUpperCase(classString));\n       }\n     }\n \n     return new StorageLocation(storageType, new Path(location).toUri());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2).trim();\n      if (!classString.isEmpty()) {\n        storageType \u003d\n            StorageType.valueOf(StringUtils.toUpperCase(classString));\n      }\n    }\n\n    return new StorageLocation(storageType, new Path(location).toUri());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "4e88ff5b27cc33d311ab7a7248c3cf6303997ddd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8597. Fix TestFSImage#testZeroBlockSize on Windows. Contributed by Xiaoyu Yao.\n",
      "commitDate": "16/06/15 12:38 PM",
      "commitName": "4e88ff5b27cc33d311ab7a7248c3cf6303997ddd",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 105.6,
      "commitsBetweenForRepo": 947,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static StorageLocation parse(String rawLocation)\n       throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n         storageType \u003d\n             StorageType.valueOf(StringUtils.toUpperCase(classString));\n       }\n     }\n \n-    return new StorageLocation(storageType, Util.stringAsURI(location));\n+    return new StorageLocation(storageType, new Path(location).toUri());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d\n            StorageType.valueOf(StringUtils.toUpperCase(classString));\n      }\n    }\n\n    return new StorageLocation(storageType, new Path(location).toUri());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "02/03/15 9:17 PM",
      "commitName": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public static StorageLocation parse(String rawLocation)\n       throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n-        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n+        storageType \u003d\n+            StorageType.valueOf(StringUtils.toUpperCase(classString));\n       }\n     }\n \n     return new StorageLocation(storageType, Util.stringAsURI(location));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d\n            StorageType.valueOf(StringUtils.toUpperCase(classString));\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "9cedad11d8d2197a54732667a15344983de5c437": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\"\n\nThis reverts commit 946456c6d88780abe0251b098dd771e9e1e93ab3.\n\nConflicts:\n\thadoop-common-project/hadoop-common/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/QuotaByStorageTypeEntry.java\n",
      "commitDate": "24/02/15 7:32 AM",
      "commitName": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "21/02/15 3:38 PM",
      "commitNameOld": "8b465b4b8caed31ca9daeaae108f9a868a30a455",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   public static StorageLocation parse(String rawLocation)\n       throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n-        storageType \u003d StorageType.valueOf(\n-            classString.toUpperCase(Locale.ENGLISH));\n+        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n       }\n     }\n \n     return new StorageLocation(storageType, Util.stringAsURI(location));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "946456c6d88780abe0251b098dd771e9e1e93ab3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "18/02/15 8:06 PM",
      "commitName": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "07/08/14 3:59 PM",
      "commitNameOld": "d758be1f35f6c1c7e9edd491af559721a3b8b8f8",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 195.21,
      "commitsBetweenForRepo": 1696,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public static StorageLocation parse(String rawLocation)\n       throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n-        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n+        storageType \u003d StorageType.valueOf(\n+            classString.toUpperCase(Locale.ENGLISH));\n       }\n     }\n \n     return new StorageLocation(storageType, Util.stringAsURI(location));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d StorageType.valueOf(\n            classString.toUpperCase(Locale.ENGLISH));\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "d758be1f35f6c1c7e9edd491af559721a3b8b8f8": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6740. Make FSDataset support adding data volumes dynamically. Contributed by Lei Xu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616623 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 3:59 PM",
      "commitName": "d758be1f35f6c1c7e9edd491af559721a3b8b8f8",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "20/04/14 5:15 PM",
      "commitNameOld": "2d9f038e63e1a0a23896fa623d632a12b5dab7b3",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 108.95,
      "commitsBetweenForRepo": 688,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  static StorageLocation parse(String rawLocation)\n+  public static StorageLocation parse(String rawLocation)\n       throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n         storageType \u003d StorageType.valueOf(classString.toUpperCase());\n       }\n     }\n \n     return new StorageLocation(storageType, Util.stringAsURI(location));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "2d9f038e63e1a0a23896fa623d632a12b5dab7b3": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-6245. Datanode fails to start with a bad disk even when failed volumes is set. (Arpit Agarwal)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1588842 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/04/14 5:15 PM",
      "commitName": "2d9f038e63e1a0a23896fa623d632a12b5dab7b3",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/11/13 12:07 PM",
      "commitNameOld": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 149.17,
      "commitsBetweenForRepo": 1030,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n-  static StorageLocation parse(String rawLocation) throws IOException {\n+  static StorageLocation parse(String rawLocation)\n+      throws IOException, SecurityException {\n     Matcher matcher \u003d regex.matcher(rawLocation);\n     StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n         storageType \u003d StorageType.valueOf(classString.toUpperCase());\n       }\n     }\n \n     return new StorageLocation(storageType, Util.stringAsURI(location));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static StorageLocation parse(String rawLocation)\n      throws IOException, SecurityException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[IOException, SecurityException]"
      }
    },
    "97acde2d33967f7f870f7dfe96c6b558e6fe324b": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-5542. Fix TODO and clean up the code in HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1544664 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/11/13 12:07 PM",
      "commitName": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-5542. Fix TODO and clean up the code in HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1544664 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/11/13 12:07 PM",
          "commitName": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "26/08/13 4:32 AM",
          "commitNameOld": "395f0ae56782777024590796a6ecd7c0f6aa5180",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 88.36,
          "commitsBetweenForRepo": 603,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,15 @@\n-  public static StorageLocation parse(String rawLocation) throws IOException {\n-    Matcher matcher \u003d compile(rawStringRegex).matcher(rawLocation);\n-    StorageType storageType \u003d StorageType.DISK;\n+  static StorageLocation parse(String rawLocation) throws IOException {\n+    Matcher matcher \u003d regex.matcher(rawLocation);\n+    StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n-        try {\n-          storageType \u003d StorageType.valueOf(classString.toUpperCase());\n-        } catch (RuntimeException re) {\n-          LOG.error(\"Unable to parse storage type: \" + re.toString() +\n-                    \". Using the default storage type for directory \" +\n-                    location);\n-        }\n+        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n       }\n     }\n \n     return new StorageLocation(storageType, Util.stringAsURI(location));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static StorageLocation parse(String rawLocation) throws IOException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5542. Fix TODO and clean up the code in HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1544664 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/11/13 12:07 PM",
          "commitName": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "26/08/13 4:32 AM",
          "commitNameOld": "395f0ae56782777024590796a6ecd7c0f6aa5180",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 88.36,
          "commitsBetweenForRepo": 603,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,15 @@\n-  public static StorageLocation parse(String rawLocation) throws IOException {\n-    Matcher matcher \u003d compile(rawStringRegex).matcher(rawLocation);\n-    StorageType storageType \u003d StorageType.DISK;\n+  static StorageLocation parse(String rawLocation) throws IOException {\n+    Matcher matcher \u003d regex.matcher(rawLocation);\n+    StorageType storageType \u003d StorageType.DEFAULT;\n     String location \u003d rawLocation;\n \n     if (matcher.matches()) {\n       String classString \u003d matcher.group(1);\n       location \u003d matcher.group(2);\n       if (!classString.isEmpty()) {\n-        try {\n-          storageType \u003d StorageType.valueOf(classString.toUpperCase());\n-        } catch (RuntimeException re) {\n-          LOG.error(\"Unable to parse storage type: \" + re.toString() +\n-                    \". Using the default storage type for directory \" +\n-                    location);\n-        }\n+        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n       }\n     }\n \n     return new StorageLocation(storageType, Util.stringAsURI(location));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static StorageLocation parse(String rawLocation) throws IOException {\n    Matcher matcher \u003d regex.matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DEFAULT;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        storageType \u003d StorageType.valueOf(classString.toUpperCase());\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
          "extendedDetails": {}
        }
      ]
    },
    "395f0ae56782777024590796a6ecd7c0f6aa5180": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5000.  DataNode configuration should allow specifying storage type (Adding file missed in last commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1517499 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/08/13 4:32 AM",
      "commitName": "395f0ae56782777024590796a6ecd7c0f6aa5180",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,21 @@\n+  public static StorageLocation parse(String rawLocation) throws IOException {\n+    Matcher matcher \u003d compile(rawStringRegex).matcher(rawLocation);\n+    StorageType storageType \u003d StorageType.DISK;\n+    String location \u003d rawLocation;\n+\n+    if (matcher.matches()) {\n+      String classString \u003d matcher.group(1);\n+      location \u003d matcher.group(2);\n+      if (!classString.isEmpty()) {\n+        try {\n+          storageType \u003d StorageType.valueOf(classString.toUpperCase());\n+        } catch (RuntimeException re) {\n+          LOG.error(\"Unable to parse storage type: \" + re.toString() +\n+                    \". Using the default storage type for directory \" +\n+                    location);\n+        }\n+      }\n+    }\n+\n+    return new StorageLocation(storageType, Util.stringAsURI(location));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageLocation parse(String rawLocation) throws IOException {\n    Matcher matcher \u003d compile(rawStringRegex).matcher(rawLocation);\n    StorageType storageType \u003d StorageType.DISK;\n    String location \u003d rawLocation;\n\n    if (matcher.matches()) {\n      String classString \u003d matcher.group(1);\n      location \u003d matcher.group(2);\n      if (!classString.isEmpty()) {\n        try {\n          storageType \u003d StorageType.valueOf(classString.toUpperCase());\n        } catch (RuntimeException re) {\n          LOG.error(\"Unable to parse storage type: \" + re.toString() +\n                    \". Using the default storage type for directory \" +\n                    location);\n        }\n      }\n    }\n\n    return new StorageLocation(storageType, Util.stringAsURI(location));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java"
    }
  }
}