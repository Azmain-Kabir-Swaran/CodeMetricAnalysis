{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MagicCommitTracker.java",
  "functionName": "aboutToComplete",
  "functionId": "aboutToComplete___uploadId-String__parts-List__PartETag____bytesWritten-long",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/magic/MagicCommitTracker.java",
  "functionStartLine": 110,
  "functionEndLine": 148,
  "numCommitsSeen": 2,
  "timeTaken": 1183,
  "changeHistory": [
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c"
  ],
  "changeHistoryShort": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,39 @@\n+  public boolean aboutToComplete(String uploadId,\n+      List\u003cPartETag\u003e parts,\n+      long bytesWritten)\n+      throws IOException {\n+    Preconditions.checkArgument(StringUtils.isNotEmpty(uploadId),\n+        \"empty/null upload ID: \"+ uploadId);\n+    Preconditions.checkArgument(parts !\u003d null,\n+        \"No uploaded parts list\");\n+    Preconditions.checkArgument(!parts.isEmpty(),\n+        \"No uploaded parts to save\");\n+    SinglePendingCommit commitData \u003d new SinglePendingCommit();\n+    commitData.touch(System.currentTimeMillis());\n+    commitData.setDestinationKey(getDestKey());\n+    commitData.setBucket(bucket);\n+    commitData.setUri(path.toUri().toString());\n+    commitData.setUploadId(uploadId);\n+    commitData.setText(\"\");\n+    commitData.setLength(bytesWritten);\n+    commitData.bindCommitData(parts);\n+    byte[] bytes \u003d commitData.toBytes();\n+    LOG.info(\"Uncommitted data pending to file {};\"\n+            + \" commit metadata for {} parts in {}. sixe: {} byte(s)\",\n+        path.toUri(), parts.size(), pendingPartKey, bytesWritten);\n+    LOG.debug(\"Closed MPU to {}, saved commit information to {}; data\u003d:\\n{}\",\n+        path, pendingPartKey, commitData);\n+    PutObjectRequest put \u003d writer.createPutObjectRequest(\n+        pendingPartKey,\n+        new ByteArrayInputStream(bytes),\n+        bytes.length);\n+    writer.uploadObject(put);\n+\n+    // now put a 0-byte file with the name of the original under-magic path\n+    PutObjectRequest originalDestPut \u003d writer.createPutObjectRequest(\n+        originalDestKey,\n+        new ByteArrayInputStream(EMPTY),\n+        0);\n+    writer.uploadObject(originalDestPut);\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean aboutToComplete(String uploadId,\n      List\u003cPartETag\u003e parts,\n      long bytesWritten)\n      throws IOException {\n    Preconditions.checkArgument(StringUtils.isNotEmpty(uploadId),\n        \"empty/null upload ID: \"+ uploadId);\n    Preconditions.checkArgument(parts !\u003d null,\n        \"No uploaded parts list\");\n    Preconditions.checkArgument(!parts.isEmpty(),\n        \"No uploaded parts to save\");\n    SinglePendingCommit commitData \u003d new SinglePendingCommit();\n    commitData.touch(System.currentTimeMillis());\n    commitData.setDestinationKey(getDestKey());\n    commitData.setBucket(bucket);\n    commitData.setUri(path.toUri().toString());\n    commitData.setUploadId(uploadId);\n    commitData.setText(\"\");\n    commitData.setLength(bytesWritten);\n    commitData.bindCommitData(parts);\n    byte[] bytes \u003d commitData.toBytes();\n    LOG.info(\"Uncommitted data pending to file {};\"\n            + \" commit metadata for {} parts in {}. sixe: {} byte(s)\",\n        path.toUri(), parts.size(), pendingPartKey, bytesWritten);\n    LOG.debug(\"Closed MPU to {}, saved commit information to {}; data\u003d:\\n{}\",\n        path, pendingPartKey, commitData);\n    PutObjectRequest put \u003d writer.createPutObjectRequest(\n        pendingPartKey,\n        new ByteArrayInputStream(bytes),\n        bytes.length);\n    writer.uploadObject(put);\n\n    // now put a 0-byte file with the name of the original under-magic path\n    PutObjectRequest originalDestPut \u003d writer.createPutObjectRequest(\n        originalDestKey,\n        new ByteArrayInputStream(EMPTY),\n        0);\n    writer.uploadObject(originalDestPut);\n    return false;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/magic/MagicCommitTracker.java"
    }
  }
}