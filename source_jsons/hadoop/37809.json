{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMServerUtils.java",
  "functionName": "checkSchedContainerChangeRequest",
  "functionId": "checkSchedContainerChangeRequest___request-SchedContainerChangeRequest__increase-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
  "functionStartLine": 271,
  "functionEndLine": 319,
  "numCommitsSeen": 64,
  "timeTaken": 5553,
  "changeHistory": [
    "e81596d06d226f1cfa44b2390ce3095ed4dee621",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "7f46636495e23693d588b0915f464fa7afd9102e",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434"
  ],
  "changeHistoryShort": {
    "e81596d06d226f1cfa44b2390ce3095ed4dee621": "Ybodychange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "7f46636495e23693d588b0915f464fa7afd9102e": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e81596d06d226f1cfa44b2390ce3095ed4dee621": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7172. ResourceCalculator.fitsIn() should not take a cluster resource parameter. (Sen Zhao via wangda)\n\nChange-Id: Icc3670c9381ce7591ca69ec12da5aa52d3612d34\n",
      "commitDate": "17/09/17 9:20 PM",
      "commitName": "e81596d06d226f1cfa44b2390ce3095ed4dee621",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "39240b61a163b127eec385decd30ffd96e694c28",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 5.5,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,49 @@\n   public static void checkSchedContainerChangeRequest(\n       SchedContainerChangeRequest request, boolean increase)\n       throws InvalidResourceRequestException {\n     RMContext rmContext \u003d request.getRmContext();\n     ContainerId containerId \u003d request.getContainerId();\n     RMContainer rmContainer \u003d request.getRMContainer();\n     Resource targetResource \u003d request.getTargetCapacity();\n \n     // Compare targetResource and original resource\n     Resource originalResource \u003d rmContainer.getAllocatedResource();\n \n     // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n     // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n     // \u003c20G, 8\u003e\n     if (increase) {\n       if (originalResource.getMemorySize() \u003e targetResource.getMemorySize()\n           || originalResource.getVirtualCores() \u003e targetResource\n           .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to increase a container, but target resource has some\"\n                 + \" resource \u003c original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     } else {\n       if (originalResource.getMemorySize() \u003c targetResource.getMemorySize()\n           || originalResource.getVirtualCores() \u003c targetResource\n           .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to decrease a container, but target resource has \"\n                 + \"some resource \u003e original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     }\n \n     // Target resource of the increase request is more than NM can offer\n     ResourceScheduler scheduler \u003d rmContext.getScheduler();\n     RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n-    if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n-        scheduler.getClusterResource(), targetResource,\n+    if (!Resources.fitsIn(scheduler.getResourceCalculator(), targetResource,\n         rmNode.getTotalCapability())) {\n       String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n           + containerId + \" is more than node\u0027s total resource\u003d\"\n           + rmNode.getTotalCapability();\n       throw new InvalidResourceRequestException(msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkSchedContainerChangeRequest(\n      SchedContainerChangeRequest request, boolean increase)\n      throws InvalidResourceRequestException {\n    RMContext rmContext \u003d request.getRmContext();\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d request.getRMContainer();\n    Resource targetResource \u003d request.getTargetCapacity();\n\n    // Compare targetResource and original resource\n    Resource originalResource \u003d rmContainer.getAllocatedResource();\n\n    // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n    // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n    // \u003c20G, 8\u003e\n    if (increase) {\n      if (originalResource.getMemorySize() \u003e targetResource.getMemorySize()\n          || originalResource.getVirtualCores() \u003e targetResource\n          .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to increase a container, but target resource has some\"\n                + \" resource \u003c original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    } else {\n      if (originalResource.getMemorySize() \u003c targetResource.getMemorySize()\n          || originalResource.getVirtualCores() \u003c targetResource\n          .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to decrease a container, but target resource has \"\n                + \"some resource \u003e original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    }\n\n    // Target resource of the increase request is more than NM can offer\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n    if (!Resources.fitsIn(scheduler.getResourceCalculator(), targetResource,\n        rmNode.getTotalCapability())) {\n      String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n          + containerId + \" is more than node\u0027s total resource\u003d\"\n          + rmNode.getTotalCapability();\n      throw new InvalidResourceRequestException(msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {}
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "05/05/16 7:07 AM",
      "commitNameOld": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 24.07,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n   public static void checkSchedContainerChangeRequest(\n       SchedContainerChangeRequest request, boolean increase)\n       throws InvalidResourceRequestException {\n     RMContext rmContext \u003d request.getRmContext();\n     ContainerId containerId \u003d request.getContainerId();\n     RMContainer rmContainer \u003d request.getRMContainer();\n     Resource targetResource \u003d request.getTargetCapacity();\n \n     // Compare targetResource and original resource\n     Resource originalResource \u003d rmContainer.getAllocatedResource();\n \n     // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n     // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n     // \u003c20G, 8\u003e\n     if (increase) {\n-      if (originalResource.getMemory() \u003e targetResource.getMemory()\n+      if (originalResource.getMemorySize() \u003e targetResource.getMemorySize()\n           || originalResource.getVirtualCores() \u003e targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to increase a container, but target resource has some\"\n                 + \" resource \u003c original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     } else {\n-      if (originalResource.getMemory() \u003c targetResource.getMemory()\n+      if (originalResource.getMemorySize() \u003c targetResource.getMemorySize()\n           || originalResource.getVirtualCores() \u003c targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to decrease a container, but target resource has \"\n                 + \"some resource \u003e original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     }\n \n     // Target resource of the increase request is more than NM can offer\n     ResourceScheduler scheduler \u003d rmContext.getScheduler();\n     RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n     if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n         scheduler.getClusterResource(), targetResource,\n         rmNode.getTotalCapability())) {\n       String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n           + containerId + \" is more than node\u0027s total resource\u003d\"\n           + rmNode.getTotalCapability();\n       throw new InvalidResourceRequestException(msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkSchedContainerChangeRequest(\n      SchedContainerChangeRequest request, boolean increase)\n      throws InvalidResourceRequestException {\n    RMContext rmContext \u003d request.getRmContext();\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d request.getRMContainer();\n    Resource targetResource \u003d request.getTargetCapacity();\n\n    // Compare targetResource and original resource\n    Resource originalResource \u003d rmContainer.getAllocatedResource();\n\n    // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n    // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n    // \u003c20G, 8\u003e\n    if (increase) {\n      if (originalResource.getMemorySize() \u003e targetResource.getMemorySize()\n          || originalResource.getVirtualCores() \u003e targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to increase a container, but target resource has some\"\n                + \" resource \u003c original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    } else {\n      if (originalResource.getMemorySize() \u003c targetResource.getMemorySize()\n          || originalResource.getVirtualCores() \u003c targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to decrease a container, but target resource has \"\n                + \"some resource \u003e original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    }\n\n    // Target resource of the increase request is more than NM can offer\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n    if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), targetResource,\n        rmNode.getTotalCapability())) {\n      String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n          + containerId + \" is more than node\u0027s total resource\u003d\"\n          + rmNode.getTotalCapability();\n      throw new InvalidResourceRequestException(msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {}
    },
    "7f46636495e23693d588b0915f464fa7afd9102e": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
      "commitDate": "28/01/16 2:51 PM",
      "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
          "commitDate": "28/01/16 2:51 PM",
          "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/09/15 1:29 PM",
          "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 127.1,
          "commitsBetweenForRepo": 880,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,74 +1,50 @@\n-  public static void checkAndNormalizeContainerChangeRequest(\n-      RMContext rmContext, ContainerResourceChangeRequest request,\n-      boolean increase) throws InvalidResourceRequestException {\n+  public static void checkSchedContainerChangeRequest(\n+      SchedContainerChangeRequest request, boolean increase)\n+      throws InvalidResourceRequestException {\n+    RMContext rmContext \u003d request.getRmContext();\n     ContainerId containerId \u003d request.getContainerId();\n-    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-    RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n-    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-    \n-    if (null \u003d\u003d rmContainer) {\n-      String msg \u003d\n-          \"Failed to get rmContainer for \"\n-              + (increase ? \"increase\" : \"decrease\")\n-              + \" request, with container-id\u003d\" + containerId;\n-      throw new InvalidResourceRequestException(msg);\n-    }\n-\n-    if (rmContainer.getState() !\u003d RMContainerState.RUNNING) {\n-      String msg \u003d\n-          \"rmContainer\u0027s state is not RUNNING, for \"\n-              + (increase ? \"increase\" : \"decrease\")\n-              + \" request, with container-id\u003d\" + containerId;\n-      throw new InvalidResourceRequestException(msg);\n-    }\n-\n-    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-        scheduler.getMinimumResourceCapability(),\n-        scheduler.getMaximumResourceCapability(),\n-        scheduler.getMinimumResourceCapability());\n+    RMContainer rmContainer \u003d request.getRMContainer();\n+    Resource targetResource \u003d request.getTargetCapacity();\n \n     // Compare targetResource and original resource\n     Resource originalResource \u003d rmContainer.getAllocatedResource();\n \n     // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n     // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n     // \u003c20G, 8\u003e\n     if (increase) {\n       if (originalResource.getMemory() \u003e targetResource.getMemory()\n           || originalResource.getVirtualCores() \u003e targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to increase a container, but target resource has some\"\n                 + \" resource \u003c original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     } else {\n       if (originalResource.getMemory() \u003c targetResource.getMemory()\n           || originalResource.getVirtualCores() \u003c targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to decrease a container, but target resource has \"\n                 + \"some resource \u003e original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     }\n-    \n-    RMNode rmNode \u003d rmContext.getRMNodes().get(rmContainer.getAllocatedNode());\n-    \n+\n     // Target resource of the increase request is more than NM can offer\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n     if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n         scheduler.getClusterResource(), targetResource,\n         rmNode.getTotalCapability())) {\n       String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n           + containerId + \" is more than node\u0027s total resource\u003d\"\n           + rmNode.getTotalCapability();\n       throw new InvalidResourceRequestException(msg);\n     }\n-\n-    // Update normalized target resource\n-    request.setCapability(targetResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void checkSchedContainerChangeRequest(\n      SchedContainerChangeRequest request, boolean increase)\n      throws InvalidResourceRequestException {\n    RMContext rmContext \u003d request.getRmContext();\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d request.getRMContainer();\n    Resource targetResource \u003d request.getTargetCapacity();\n\n    // Compare targetResource and original resource\n    Resource originalResource \u003d rmContainer.getAllocatedResource();\n\n    // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n    // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n    // \u003c20G, 8\u003e\n    if (increase) {\n      if (originalResource.getMemory() \u003e targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003e targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to increase a container, but target resource has some\"\n                + \" resource \u003c original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    } else {\n      if (originalResource.getMemory() \u003c targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003c targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to decrease a container, but target resource has \"\n                + \"some resource \u003e original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    }\n\n    // Target resource of the increase request is more than NM can offer\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n    if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), targetResource,\n        rmNode.getTotalCapability())) {\n      String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n          + containerId + \" is more than node\u0027s total resource\u003d\"\n          + rmNode.getTotalCapability();\n      throw new InvalidResourceRequestException(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "extendedDetails": {
            "oldValue": "checkAndNormalizeContainerChangeRequest",
            "newValue": "checkSchedContainerChangeRequest"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
          "commitDate": "28/01/16 2:51 PM",
          "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/09/15 1:29 PM",
          "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 127.1,
          "commitsBetweenForRepo": 880,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,74 +1,50 @@\n-  public static void checkAndNormalizeContainerChangeRequest(\n-      RMContext rmContext, ContainerResourceChangeRequest request,\n-      boolean increase) throws InvalidResourceRequestException {\n+  public static void checkSchedContainerChangeRequest(\n+      SchedContainerChangeRequest request, boolean increase)\n+      throws InvalidResourceRequestException {\n+    RMContext rmContext \u003d request.getRmContext();\n     ContainerId containerId \u003d request.getContainerId();\n-    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-    RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n-    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-    \n-    if (null \u003d\u003d rmContainer) {\n-      String msg \u003d\n-          \"Failed to get rmContainer for \"\n-              + (increase ? \"increase\" : \"decrease\")\n-              + \" request, with container-id\u003d\" + containerId;\n-      throw new InvalidResourceRequestException(msg);\n-    }\n-\n-    if (rmContainer.getState() !\u003d RMContainerState.RUNNING) {\n-      String msg \u003d\n-          \"rmContainer\u0027s state is not RUNNING, for \"\n-              + (increase ? \"increase\" : \"decrease\")\n-              + \" request, with container-id\u003d\" + containerId;\n-      throw new InvalidResourceRequestException(msg);\n-    }\n-\n-    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-        scheduler.getMinimumResourceCapability(),\n-        scheduler.getMaximumResourceCapability(),\n-        scheduler.getMinimumResourceCapability());\n+    RMContainer rmContainer \u003d request.getRMContainer();\n+    Resource targetResource \u003d request.getTargetCapacity();\n \n     // Compare targetResource and original resource\n     Resource originalResource \u003d rmContainer.getAllocatedResource();\n \n     // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n     // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n     // \u003c20G, 8\u003e\n     if (increase) {\n       if (originalResource.getMemory() \u003e targetResource.getMemory()\n           || originalResource.getVirtualCores() \u003e targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to increase a container, but target resource has some\"\n                 + \" resource \u003c original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     } else {\n       if (originalResource.getMemory() \u003c targetResource.getMemory()\n           || originalResource.getVirtualCores() \u003c targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to decrease a container, but target resource has \"\n                 + \"some resource \u003e original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     }\n-    \n-    RMNode rmNode \u003d rmContext.getRMNodes().get(rmContainer.getAllocatedNode());\n-    \n+\n     // Target resource of the increase request is more than NM can offer\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n     if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n         scheduler.getClusterResource(), targetResource,\n         rmNode.getTotalCapability())) {\n       String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n           + containerId + \" is more than node\u0027s total resource\u003d\"\n           + rmNode.getTotalCapability();\n       throw new InvalidResourceRequestException(msg);\n     }\n-\n-    // Update normalized target resource\n-    request.setCapability(targetResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void checkSchedContainerChangeRequest(\n      SchedContainerChangeRequest request, boolean increase)\n      throws InvalidResourceRequestException {\n    RMContext rmContext \u003d request.getRmContext();\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d request.getRMContainer();\n    Resource targetResource \u003d request.getTargetCapacity();\n\n    // Compare targetResource and original resource\n    Resource originalResource \u003d rmContainer.getAllocatedResource();\n\n    // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n    // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n    // \u003c20G, 8\u003e\n    if (increase) {\n      if (originalResource.getMemory() \u003e targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003e targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to increase a container, but target resource has some\"\n                + \" resource \u003c original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    } else {\n      if (originalResource.getMemory() \u003c targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003c targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to decrease a container, but target resource has \"\n                + \"some resource \u003e original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    }\n\n    // Target resource of the increase request is more than NM can offer\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n    if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), targetResource,\n        rmNode.getTotalCapability())) {\n      String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n          + containerId + \" is more than node\u0027s total resource\u003d\"\n          + rmNode.getTotalCapability();\n      throw new InvalidResourceRequestException(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "extendedDetails": {
            "oldValue": "[rmContext-RMContext, request-ContainerResourceChangeRequest, increase-boolean]",
            "newValue": "[request-SchedContainerChangeRequest, increase-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
          "commitDate": "28/01/16 2:51 PM",
          "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/09/15 1:29 PM",
          "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 127.1,
          "commitsBetweenForRepo": 880,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,74 +1,50 @@\n-  public static void checkAndNormalizeContainerChangeRequest(\n-      RMContext rmContext, ContainerResourceChangeRequest request,\n-      boolean increase) throws InvalidResourceRequestException {\n+  public static void checkSchedContainerChangeRequest(\n+      SchedContainerChangeRequest request, boolean increase)\n+      throws InvalidResourceRequestException {\n+    RMContext rmContext \u003d request.getRmContext();\n     ContainerId containerId \u003d request.getContainerId();\n-    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-    RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n-    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-    \n-    if (null \u003d\u003d rmContainer) {\n-      String msg \u003d\n-          \"Failed to get rmContainer for \"\n-              + (increase ? \"increase\" : \"decrease\")\n-              + \" request, with container-id\u003d\" + containerId;\n-      throw new InvalidResourceRequestException(msg);\n-    }\n-\n-    if (rmContainer.getState() !\u003d RMContainerState.RUNNING) {\n-      String msg \u003d\n-          \"rmContainer\u0027s state is not RUNNING, for \"\n-              + (increase ? \"increase\" : \"decrease\")\n-              + \" request, with container-id\u003d\" + containerId;\n-      throw new InvalidResourceRequestException(msg);\n-    }\n-\n-    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-        scheduler.getMinimumResourceCapability(),\n-        scheduler.getMaximumResourceCapability(),\n-        scheduler.getMinimumResourceCapability());\n+    RMContainer rmContainer \u003d request.getRMContainer();\n+    Resource targetResource \u003d request.getTargetCapacity();\n \n     // Compare targetResource and original resource\n     Resource originalResource \u003d rmContainer.getAllocatedResource();\n \n     // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n     // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n     // \u003c20G, 8\u003e\n     if (increase) {\n       if (originalResource.getMemory() \u003e targetResource.getMemory()\n           || originalResource.getVirtualCores() \u003e targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to increase a container, but target resource has some\"\n                 + \" resource \u003c original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     } else {\n       if (originalResource.getMemory() \u003c targetResource.getMemory()\n           || originalResource.getVirtualCores() \u003c targetResource\n               .getVirtualCores()) {\n         String msg \u003d\n             \"Trying to decrease a container, but target resource has \"\n                 + \"some resource \u003e original resource, target\u003d\" + targetResource\n                 + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                 + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n     }\n-    \n-    RMNode rmNode \u003d rmContext.getRMNodes().get(rmContainer.getAllocatedNode());\n-    \n+\n     // Target resource of the increase request is more than NM can offer\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n     if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n         scheduler.getClusterResource(), targetResource,\n         rmNode.getTotalCapability())) {\n       String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n           + containerId + \" is more than node\u0027s total resource\u003d\"\n           + rmNode.getTotalCapability();\n       throw new InvalidResourceRequestException(msg);\n     }\n-\n-    // Update normalized target resource\n-    request.setCapability(targetResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void checkSchedContainerChangeRequest(\n      SchedContainerChangeRequest request, boolean increase)\n      throws InvalidResourceRequestException {\n    RMContext rmContext \u003d request.getRmContext();\n    ContainerId containerId \u003d request.getContainerId();\n    RMContainer rmContainer \u003d request.getRMContainer();\n    Resource targetResource \u003d request.getTargetCapacity();\n\n    // Compare targetResource and original resource\n    Resource originalResource \u003d rmContainer.getAllocatedResource();\n\n    // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n    // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n    // \u003c20G, 8\u003e\n    if (increase) {\n      if (originalResource.getMemory() \u003e targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003e targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to increase a container, but target resource has some\"\n                + \" resource \u003c original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    } else {\n      if (originalResource.getMemory() \u003c targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003c targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to decrease a container, but target resource has \"\n                + \"some resource \u003e original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    }\n\n    // Target resource of the increase request is more than NM can offer\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    RMNode rmNode \u003d request.getSchedulerNode().getRMNode();\n    if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), targetResource,\n        rmNode.getTotalCapability())) {\n      String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n          + containerId + \" is more than node\u0027s total resource\u003d\"\n          + rmNode.getTotalCapability();\n      throw new InvalidResourceRequestException(msg);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,74 @@\n+  public static void checkAndNormalizeContainerChangeRequest(\n+      RMContext rmContext, ContainerResourceChangeRequest request,\n+      boolean increase) throws InvalidResourceRequestException {\n+    ContainerId containerId \u003d request.getContainerId();\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n+    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n+    \n+    if (null \u003d\u003d rmContainer) {\n+      String msg \u003d\n+          \"Failed to get rmContainer for \"\n+              + (increase ? \"increase\" : \"decrease\")\n+              + \" request, with container-id\u003d\" + containerId;\n+      throw new InvalidResourceRequestException(msg);\n+    }\n+\n+    if (rmContainer.getState() !\u003d RMContainerState.RUNNING) {\n+      String msg \u003d\n+          \"rmContainer\u0027s state is not RUNNING, for \"\n+              + (increase ? \"increase\" : \"decrease\")\n+              + \" request, with container-id\u003d\" + containerId;\n+      throw new InvalidResourceRequestException(msg);\n+    }\n+\n+    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n+        scheduler.getMinimumResourceCapability(),\n+        scheduler.getMaximumResourceCapability(),\n+        scheduler.getMinimumResourceCapability());\n+\n+    // Compare targetResource and original resource\n+    Resource originalResource \u003d rmContainer.getAllocatedResource();\n+\n+    // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n+    // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n+    // \u003c20G, 8\u003e\n+    if (increase) {\n+      if (originalResource.getMemory() \u003e targetResource.getMemory()\n+          || originalResource.getVirtualCores() \u003e targetResource\n+              .getVirtualCores()) {\n+        String msg \u003d\n+            \"Trying to increase a container, but target resource has some\"\n+                + \" resource \u003c original resource, target\u003d\" + targetResource\n+                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n+                + containerId;\n+        throw new InvalidResourceRequestException(msg);\n+      }\n+    } else {\n+      if (originalResource.getMemory() \u003c targetResource.getMemory()\n+          || originalResource.getVirtualCores() \u003c targetResource\n+              .getVirtualCores()) {\n+        String msg \u003d\n+            \"Trying to decrease a container, but target resource has \"\n+                + \"some resource \u003e original resource, target\u003d\" + targetResource\n+                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n+                + containerId;\n+        throw new InvalidResourceRequestException(msg);\n+      }\n+    }\n+    \n+    RMNode rmNode \u003d rmContext.getRMNodes().get(rmContainer.getAllocatedNode());\n+    \n+    // Target resource of the increase request is more than NM can offer\n+    if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), targetResource,\n+        rmNode.getTotalCapability())) {\n+      String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n+          + containerId + \" is more than node\u0027s total resource\u003d\"\n+          + rmNode.getTotalCapability();\n+      throw new InvalidResourceRequestException(msg);\n+    }\n+\n+    // Update normalized target resource\n+    request.setCapability(targetResource);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkAndNormalizeContainerChangeRequest(\n      RMContext rmContext, ContainerResourceChangeRequest request,\n      boolean increase) throws InvalidResourceRequestException {\n    ContainerId containerId \u003d request.getContainerId();\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n    \n    if (null \u003d\u003d rmContainer) {\n      String msg \u003d\n          \"Failed to get rmContainer for \"\n              + (increase ? \"increase\" : \"decrease\")\n              + \" request, with container-id\u003d\" + containerId;\n      throw new InvalidResourceRequestException(msg);\n    }\n\n    if (rmContainer.getState() !\u003d RMContainerState.RUNNING) {\n      String msg \u003d\n          \"rmContainer\u0027s state is not RUNNING, for \"\n              + (increase ? \"increase\" : \"decrease\")\n              + \" request, with container-id\u003d\" + containerId;\n      throw new InvalidResourceRequestException(msg);\n    }\n\n    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n        scheduler.getMinimumResourceCapability(),\n        scheduler.getMaximumResourceCapability(),\n        scheduler.getMinimumResourceCapability());\n\n    // Compare targetResource and original resource\n    Resource originalResource \u003d rmContainer.getAllocatedResource();\n\n    // Resource comparasion should be \u003e\u003d (or \u003c\u003d) for all resource vectors, for\n    // example, you cannot request target resource of a \u003c10G, 10\u003e container to\n    // \u003c20G, 8\u003e\n    if (increase) {\n      if (originalResource.getMemory() \u003e targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003e targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to increase a container, but target resource has some\"\n                + \" resource \u003c original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    } else {\n      if (originalResource.getMemory() \u003c targetResource.getMemory()\n          || originalResource.getVirtualCores() \u003c targetResource\n              .getVirtualCores()) {\n        String msg \u003d\n            \"Trying to decrease a container, but target resource has \"\n                + \"some resource \u003e original resource, target\u003d\" + targetResource\n                + \" original\u003d\" + originalResource + \" containerId\u003d\"\n                + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n    }\n    \n    RMNode rmNode \u003d rmContext.getRMNodes().get(rmContainer.getAllocatedNode());\n    \n    // Target resource of the increase request is more than NM can offer\n    if (!Resources.fitsIn(scheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), targetResource,\n        rmNode.getTotalCapability())) {\n      String msg \u003d \"Target resource\u003d\" + targetResource + \" of containerId\u003d\"\n          + containerId + \" is more than node\u0027s total resource\u003d\"\n          + rmNode.getTotalCapability();\n      throw new InvalidResourceRequestException(msg);\n    }\n\n    // Update normalized target resource\n    request.setCapability(targetResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java"
    }
  }
}