{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReplicaBuilder.java",
  "functionName": "buildRUR",
  "functionId": "buildRUR",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaBuilder.java",
  "functionStartLine": 294,
  "functionEndLine": 309,
  "numCommitsSeen": 7,
  "timeTaken": 2033,
  "changeHistory": [
    "b668eb91556b8c85c2b4925808ccb1f769031c20",
    "86c9862bec0248d671e657aa56094a2919b8ac14"
  ],
  "changeHistoryShort": {
    "b668eb91556b8c85c2b4925808ccb1f769031c20": "Yreturntypechange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b668eb91556b8c85c2b4925808ccb1f769031c20": {
      "type": "Yreturntypechange",
      "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "13/09/16 12:54 PM",
      "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 458.25,
      "commitsBetweenForRepo": 3031,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  private ReplicaInfo buildRUR() throws IllegalArgumentException {\n+  private LocalReplica buildRUR() throws IllegalArgumentException {\n     if (null \u003d\u003d fromReplica) {\n       throw new IllegalArgumentException(\n           \"Missing a valid replica to recover from\");\n     }\n     if (null !\u003d writer || null !\u003d block) {\n       throw new IllegalArgumentException(\"Invalid state for \"\n           + \"recovering from replica with blk id \"\n           + fromReplica.getBlockId());\n     }\n     if (fromReplica.getState() \u003d\u003d ReplicaState.RUR) {\n       return new ReplicaUnderRecovery((ReplicaUnderRecovery) fromReplica);\n     } else {\n       return new ReplicaUnderRecovery(fromReplica, recoveryId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LocalReplica buildRUR() throws IllegalArgumentException {\n    if (null \u003d\u003d fromReplica) {\n      throw new IllegalArgumentException(\n          \"Missing a valid replica to recover from\");\n    }\n    if (null !\u003d writer || null !\u003d block) {\n      throw new IllegalArgumentException(\"Invalid state for \"\n          + \"recovering from replica with blk id \"\n          + fromReplica.getBlockId());\n    }\n    if (fromReplica.getState() \u003d\u003d ReplicaState.RUR) {\n      return new ReplicaUnderRecovery((ReplicaUnderRecovery) fromReplica);\n    } else {\n      return new ReplicaUnderRecovery(fromReplica, recoveryId);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaBuilder.java",
      "extendedDetails": {
        "oldValue": "ReplicaInfo",
        "newValue": "LocalReplica"
      }
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "diff": "@@ -0,0 +1,16 @@\n+  private ReplicaInfo buildRUR() throws IllegalArgumentException {\n+    if (null \u003d\u003d fromReplica) {\n+      throw new IllegalArgumentException(\n+          \"Missing a valid replica to recover from\");\n+    }\n+    if (null !\u003d writer || null !\u003d block) {\n+      throw new IllegalArgumentException(\"Invalid state for \"\n+          + \"recovering from replica with blk id \"\n+          + fromReplica.getBlockId());\n+    }\n+    if (fromReplica.getState() \u003d\u003d ReplicaState.RUR) {\n+      return new ReplicaUnderRecovery((ReplicaUnderRecovery) fromReplica);\n+    } else {\n+      return new ReplicaUnderRecovery(fromReplica, recoveryId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ReplicaInfo buildRUR() throws IllegalArgumentException {\n    if (null \u003d\u003d fromReplica) {\n      throw new IllegalArgumentException(\n          \"Missing a valid replica to recover from\");\n    }\n    if (null !\u003d writer || null !\u003d block) {\n      throw new IllegalArgumentException(\"Invalid state for \"\n          + \"recovering from replica with blk id \"\n          + fromReplica.getBlockId());\n    }\n    if (fromReplica.getState() \u003d\u003d ReplicaState.RUR) {\n      return new ReplicaUnderRecovery((ReplicaUnderRecovery) fromReplica);\n    } else {\n      return new ReplicaUnderRecovery(fromReplica, recoveryId);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaBuilder.java"
    }
  }
}