{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemRMStateStore.java",
  "functionName": "loadAMRMTokenSecretManagerState",
  "functionId": "loadAMRMTokenSecretManagerState___rmState-RMState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
  "functionStartLine": 256,
  "functionEndLine": 275,
  "numCommitsSeen": 57,
  "timeTaken": 2058,
  "changeHistory": [
    "01a1621930df17a745dd37892996c68fca3447d1",
    "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605",
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe"
  ],
  "changeHistoryShort": {
    "01a1621930df17a745dd37892996c68fca3447d1": "Ybodychange",
    "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605": "Ybodychange",
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "01a1621930df17a745dd37892996c68fca3447d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2820. Retry in FileSystemRMStateStore when FS\u0027s operations fail due to IOException. Contributed by Zhihai Xu.\n",
      "commitDate": "27/02/15 7:56 AM",
      "commitName": "01a1621930df17a745dd37892996c68fca3447d1",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "08/01/15 9:47 AM",
      "commitNameOld": "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 49.92,
      "commitsBetweenForRepo": 453,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   private void loadAMRMTokenSecretManagerState(RMState rmState)\n       throws Exception {\n     checkAndResumeUpdateOperation(amrmTokenSecretManagerRoot);\n     Path amrmTokenSecretManagerStateDataDir \u003d\n         new Path(amrmTokenSecretManagerRoot, AMRMTOKEN_SECRET_MANAGER_NODE);\n-    FileStatus status \u003d getFileStatus(amrmTokenSecretManagerStateDataDir);\n+    FileStatus status \u003d getFileStatusWithRetries(\n+        amrmTokenSecretManagerStateDataDir);\n     if (status \u003d\u003d null) {\n       return;\n     }\n     assert status.isFile();\n-    byte[] data \u003d readFile(amrmTokenSecretManagerStateDataDir, status.getLen());\n+    byte[] data \u003d readFileWithRetries(amrmTokenSecretManagerStateDataDir,\n+            status.getLen());\n     AMRMTokenSecretManagerStatePBImpl stateData \u003d\n         new AMRMTokenSecretManagerStatePBImpl(\n           AMRMTokenSecretManagerStateProto.parseFrom(data));\n     rmState.amrmTokenSecretManagerState \u003d\n         AMRMTokenSecretManagerState.newInstance(\n           stateData.getCurrentMasterKey(), stateData.getNextMasterKey());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadAMRMTokenSecretManagerState(RMState rmState)\n      throws Exception {\n    checkAndResumeUpdateOperation(amrmTokenSecretManagerRoot);\n    Path amrmTokenSecretManagerStateDataDir \u003d\n        new Path(amrmTokenSecretManagerRoot, AMRMTOKEN_SECRET_MANAGER_NODE);\n    FileStatus status \u003d getFileStatusWithRetries(\n        amrmTokenSecretManagerStateDataDir);\n    if (status \u003d\u003d null) {\n      return;\n    }\n    assert status.isFile();\n    byte[] data \u003d readFileWithRetries(amrmTokenSecretManagerStateDataDir,\n            status.getLen());\n    AMRMTokenSecretManagerStatePBImpl stateData \u003d\n        new AMRMTokenSecretManagerStatePBImpl(\n          AMRMTokenSecretManagerStateProto.parseFrom(data));\n    rmState.amrmTokenSecretManagerState \u003d\n        AMRMTokenSecretManagerState.newInstance(\n          stateData.getCurrentMasterKey(), stateData.getNextMasterKey());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2996. Improved synchronization and I/O operations of FS- and Mem- RMStateStore. Contributed by Yi Liu.\n",
      "commitDate": "08/01/15 9:47 AM",
      "commitName": "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "05/01/15 1:33 PM",
      "commitNameOld": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 2.84,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   private void loadAMRMTokenSecretManagerState(RMState rmState)\n       throws Exception {\n     checkAndResumeUpdateOperation(amrmTokenSecretManagerRoot);\n     Path amrmTokenSecretManagerStateDataDir \u003d\n         new Path(amrmTokenSecretManagerRoot, AMRMTOKEN_SECRET_MANAGER_NODE);\n-    FileStatus status;\n-    try {\n-      status \u003d fs.getFileStatus(amrmTokenSecretManagerStateDataDir);\n-      assert status.isFile();\n-    } catch (FileNotFoundException ex) {\n+    FileStatus status \u003d getFileStatus(amrmTokenSecretManagerStateDataDir);\n+    if (status \u003d\u003d null) {\n       return;\n     }\n+    assert status.isFile();\n     byte[] data \u003d readFile(amrmTokenSecretManagerStateDataDir, status.getLen());\n     AMRMTokenSecretManagerStatePBImpl stateData \u003d\n         new AMRMTokenSecretManagerStatePBImpl(\n           AMRMTokenSecretManagerStateProto.parseFrom(data));\n     rmState.amrmTokenSecretManagerState \u003d\n         AMRMTokenSecretManagerState.newInstance(\n           stateData.getCurrentMasterKey(), stateData.getNextMasterKey());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadAMRMTokenSecretManagerState(RMState rmState)\n      throws Exception {\n    checkAndResumeUpdateOperation(amrmTokenSecretManagerRoot);\n    Path amrmTokenSecretManagerStateDataDir \u003d\n        new Path(amrmTokenSecretManagerRoot, AMRMTOKEN_SECRET_MANAGER_NODE);\n    FileStatus status \u003d getFileStatus(amrmTokenSecretManagerStateDataDir);\n    if (status \u003d\u003d null) {\n      return;\n    }\n    assert status.isFile();\n    byte[] data \u003d readFile(amrmTokenSecretManagerStateDataDir, status.getLen());\n    AMRMTokenSecretManagerStatePBImpl stateData \u003d\n        new AMRMTokenSecretManagerStatePBImpl(\n          AMRMTokenSecretManagerStateProto.parseFrom(data));\n    rmState.amrmTokenSecretManagerState \u003d\n        AMRMTokenSecretManagerState.newInstance(\n          stateData.getCurrentMasterKey(), stateData.getNextMasterKey());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2211. Persist AMRMToken master key in RMStateStore for RM recovery. Contributed by Xuan Gong\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613515 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 1:42 PM",
      "commitName": "d4fec3493351c619a0278929ae2d5c8cd67cbfbe",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+  private void loadAMRMTokenSecretManagerState(RMState rmState)\n+      throws Exception {\n+    checkAndResumeUpdateOperation(amrmTokenSecretManagerRoot);\n+    Path amrmTokenSecretManagerStateDataDir \u003d\n+        new Path(amrmTokenSecretManagerRoot, AMRMTOKEN_SECRET_MANAGER_NODE);\n+    FileStatus status;\n+    try {\n+      status \u003d fs.getFileStatus(amrmTokenSecretManagerStateDataDir);\n+      assert status.isFile();\n+    } catch (FileNotFoundException ex) {\n+      return;\n+    }\n+    byte[] data \u003d readFile(amrmTokenSecretManagerStateDataDir, status.getLen());\n+    AMRMTokenSecretManagerStatePBImpl stateData \u003d\n+        new AMRMTokenSecretManagerStatePBImpl(\n+          AMRMTokenSecretManagerStateProto.parseFrom(data));\n+    rmState.amrmTokenSecretManagerState \u003d\n+        AMRMTokenSecretManagerState.newInstance(\n+          stateData.getCurrentMasterKey(), stateData.getNextMasterKey());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadAMRMTokenSecretManagerState(RMState rmState)\n      throws Exception {\n    checkAndResumeUpdateOperation(amrmTokenSecretManagerRoot);\n    Path amrmTokenSecretManagerStateDataDir \u003d\n        new Path(amrmTokenSecretManagerRoot, AMRMTOKEN_SECRET_MANAGER_NODE);\n    FileStatus status;\n    try {\n      status \u003d fs.getFileStatus(amrmTokenSecretManagerStateDataDir);\n      assert status.isFile();\n    } catch (FileNotFoundException ex) {\n      return;\n    }\n    byte[] data \u003d readFile(amrmTokenSecretManagerStateDataDir, status.getLen());\n    AMRMTokenSecretManagerStatePBImpl stateData \u003d\n        new AMRMTokenSecretManagerStatePBImpl(\n          AMRMTokenSecretManagerStateProto.parseFrom(data));\n    rmState.amrmTokenSecretManagerState \u003d\n        AMRMTokenSecretManagerState.newInstance(\n          stateData.getCurrentMasterKey(), stateData.getNextMasterKey());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java"
    }
  }
}