{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileContext.java",
  "functionName": "hasPathCapability",
  "functionId": "hasPathCapability___path-Path__capability-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
  "functionStartLine": 2952,
  "functionEndLine": 2958,
  "numCommitsSeen": 58,
  "timeTaken": 1922,
  "changeHistory": [
    "e346e3638c595a512cd582739ff51fb64c3b4950"
  ],
  "changeHistoryShort": {
    "e346e3638c595a512cd582739ff51fb64c3b4950": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e346e3638c595a512cd582739ff51fb64c3b4950": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15691 Add PathCapabilities to FileSystem and FileContext.\n\nContributed by Steve Loughran.\n\nThis complements the StreamCapabilities Interface by allowing applications to probe for a specific path on a specific instance of a FileSystem client\nto offer a specific capability.\n\nThis is intended to allow applications to determine\n\n* Whether a method is implemented before calling it and dealing with UnsupportedOperationException.\n* Whether a specific feature is believed to be available in the remote store.\n\nAs well as a common set of capabilities defined in CommonPathCapabilities,\nfile systems are free to add their own capabilities, prefixed with\n fs. + schema + .\n\nThe plan is to identify and document more capabilities -and for file systems which add new features, for a declaration of the availability of the feature to always be available.\n\nNote\n\n* The remote store is not expected to be checked for the feature;\n  It is more a check of client API and the client\u0027s configuration/knowledge\n  of the state of the remote system.\n* Permissions are not checked.\n\nChange-Id: I80bfebe94f4a8bdad8f3ac055495735b824968f5\n",
      "commitDate": "25/09/19 4:16 AM",
      "commitName": "e346e3638c595a512cd582739ff51fb64c3b4950",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,7 @@\n+  public boolean hasPathCapability(Path path, String capability)\n+      throws IOException {\n+    validatePathCapabilityArgs(path, capability);\n+    return FsLinkResolution.resolve(this,\n+        fixRelativePart(path),\n+        (fs, p) -\u003e fs.hasPathCapability(p, capability));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasPathCapability(Path path, String capability)\n      throws IOException {\n    validatePathCapabilityArgs(path, capability);\n    return FsLinkResolution.resolve(this,\n        fixRelativePart(path),\n        (fs, p) -\u003e fs.hasPathCapability(p, capability));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java"
    }
  }
}