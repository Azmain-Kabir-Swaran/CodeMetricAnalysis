{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnClientImpl.java",
  "functionName": "getContainerReport",
  "functionId": "getContainerReport___containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
  "functionStartLine": 817,
  "functionEndLine": 847,
  "numCommitsSeen": 70,
  "timeTaken": 2967,
  "changeHistory": [
    "ee3355be3cd1cd956296a1b79b264177ff139ce6",
    "30510cff75d3bf4c030c215318b5611600a5b4ee",
    "6af044bb75fe3ddf184841483cce5e222ad1853a",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "ee3355be3cd1cd956296a1b79b264177ff139ce6": "Ybodychange",
    "30510cff75d3bf4c030c215318b5611600a5b4ee": "Ybodychange",
    "6af044bb75fe3ddf184841483cce5e222ad1853a": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ee3355be3cd1cd956296a1b79b264177ff139ce6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8303. YarnClient should contact TimelineReader for application/attempt/container report.\n",
      "commitDate": "16/11/18 4:28 AM",
      "commitName": "ee3355be3cd1cd956296a1b79b264177ff139ce6",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 65.08,
      "commitsBetweenForRepo": 633,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,31 @@\n   public ContainerReport getContainerReport(ContainerId containerId)\n       throws YarnException, IOException {\n     try {\n       GetContainerReportRequest request \u003d Records\n           .newRecord(GetContainerReportRequest.class);\n       request.setContainerId(containerId);\n       GetContainerReportResponse response \u003d rmClient\n           .getContainerReport(request);\n       return response.getContainerReport();\n     } catch (YarnException e) {\n-      if (!historyServiceEnabled) {\n-        // Just throw it as usual if historyService is not enabled.\n-        throw e;\n-      }\n       // Even if history-service is enabled, treat all exceptions still the same\n       // except the following\n       if (e.getClass() !\u003d ApplicationNotFoundException.class\n           \u0026\u0026 e.getClass() !\u003d ContainerNotFoundException.class) {\n         throw e;\n       }\n+      if (timelineV2ServiceEnabled) {\n+        try {\n+          return ahsV2Client.getContainerReport(containerId);\n+        } catch (Exception ex) {\n+          LOG.warn(\"Failed to fetch container report from \"\n+              + \"ATS v2\", ex);\n+        }\n+      }\n+      if (!historyServiceEnabled) {\n+        // Just throw it as usual if historyService is not enabled.\n+        throw e;\n+      }\n       return historyClient.getContainerReport(containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerReport getContainerReport(ContainerId containerId)\n      throws YarnException, IOException {\n    try {\n      GetContainerReportRequest request \u003d Records\n          .newRecord(GetContainerReportRequest.class);\n      request.setContainerId(containerId);\n      GetContainerReportResponse response \u003d rmClient\n          .getContainerReport(request);\n      return response.getContainerReport();\n    } catch (YarnException e) {\n      // Even if history-service is enabled, treat all exceptions still the same\n      // except the following\n      if (e.getClass() !\u003d ApplicationNotFoundException.class\n          \u0026\u0026 e.getClass() !\u003d ContainerNotFoundException.class) {\n        throw e;\n      }\n      if (timelineV2ServiceEnabled) {\n        try {\n          return ahsV2Client.getContainerReport(containerId);\n        } catch (Exception ex) {\n          LOG.warn(\"Failed to fetch container report from \"\n              + \"ATS v2\", ex);\n        }\n      }\n      if (!historyServiceEnabled) {\n        // Just throw it as usual if historyService is not enabled.\n        throw e;\n      }\n      return historyClient.getContainerReport(containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "30510cff75d3bf4c030c215318b5611600a5b4ee": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3123. Made YARN CLI show a single completed container even if the app is running. Contributed by Naganarasimha G R.\n",
      "commitDate": "04/02/15 4:02 PM",
      "commitName": "30510cff75d3bf4c030c215318b5611600a5b4ee",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "02/02/15 12:03 PM",
      "commitNameOld": "52575ff2240ea0b7cea818ef34503576c0ecf9f7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 2.17,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public ContainerReport getContainerReport(ContainerId containerId)\n       throws YarnException, IOException {\n     try {\n       GetContainerReportRequest request \u003d Records\n           .newRecord(GetContainerReportRequest.class);\n       request.setContainerId(containerId);\n       GetContainerReportResponse response \u003d rmClient\n           .getContainerReport(request);\n       return response.getContainerReport();\n     } catch (YarnException e) {\n       if (!historyServiceEnabled) {\n         // Just throw it as usual if historyService is not enabled.\n         throw e;\n       }\n       // Even if history-service is enabled, treat all exceptions still the same\n       // except the following\n-      if (e.getClass() !\u003d ApplicationNotFoundException.class) {\n+      if (e.getClass() !\u003d ApplicationNotFoundException.class\n+          \u0026\u0026 e.getClass() !\u003d ContainerNotFoundException.class) {\n         throw e;\n       }\n       return historyClient.getContainerReport(containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerReport getContainerReport(ContainerId containerId)\n      throws YarnException, IOException {\n    try {\n      GetContainerReportRequest request \u003d Records\n          .newRecord(GetContainerReportRequest.class);\n      request.setContainerId(containerId);\n      GetContainerReportResponse response \u003d rmClient\n          .getContainerReport(request);\n      return response.getContainerReport();\n    } catch (YarnException e) {\n      if (!historyServiceEnabled) {\n        // Just throw it as usual if historyService is not enabled.\n        throw e;\n      }\n      // Even if history-service is enabled, treat all exceptions still the same\n      // except the following\n      if (e.getClass() !\u003d ApplicationNotFoundException.class\n          \u0026\u0026 e.getClass() !\u003d ContainerNotFoundException.class) {\n        throw e;\n      }\n      return historyClient.getContainerReport(containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "6af044bb75fe3ddf184841483cce5e222ad1853a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1389. Made ApplicationClientProtocol and ApplicationHistoryProtocol expose analogous getApplication(s)/Attempt(s)/Container(s) APIs. Contributed by Mayank Bansal.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/14 12:42 AM",
      "commitName": "6af044bb75fe3ddf184841483cce5e222ad1853a",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/03/14 5:52 PM",
      "commitNameOld": "0edda2537346207e522120adeb8db1e9d058c884",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.29,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,22 @@\n   public ContainerReport getContainerReport(ContainerId containerId)\n       throws YarnException, IOException {\n-    if (historyServiceEnabled) {\n+    try {\n+      GetContainerReportRequest request \u003d Records\n+          .newRecord(GetContainerReportRequest.class);\n+      request.setContainerId(containerId);\n+      GetContainerReportResponse response \u003d rmClient\n+          .getContainerReport(request);\n+      return response.getContainerReport();\n+    } catch (YarnException e) {\n+      if (!historyServiceEnabled) {\n+        // Just throw it as usual if historyService is not enabled.\n+        throw e;\n+      }\n+      // Even if history-service is enabled, treat all exceptions still the same\n+      // except the following\n+      if (e.getClass() !\u003d ApplicationNotFoundException.class) {\n+        throw e;\n+      }\n       return historyClient.getContainerReport(containerId);\n     }\n-    throw new YarnException(\"History service is not enabled.\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerReport getContainerReport(ContainerId containerId)\n      throws YarnException, IOException {\n    try {\n      GetContainerReportRequest request \u003d Records\n          .newRecord(GetContainerReportRequest.class);\n      request.setContainerId(containerId);\n      GetContainerReportResponse response \u003d rmClient\n          .getContainerReport(request);\n      return response.getContainerReport();\n    } catch (YarnException e) {\n      if (!historyServiceEnabled) {\n        // Just throw it as usual if historyService is not enabled.\n        throw e;\n      }\n      // Even if history-service is enabled, treat all exceptions still the same\n      // except the following\n      if (e.getClass() !\u003d ApplicationNotFoundException.class) {\n        throw e;\n      }\n      return historyClient.getContainerReport(containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,7 @@\n+  public ContainerReport getContainerReport(ContainerId containerId)\n+      throws YarnException, IOException {\n+    if (historyServiceEnabled) {\n+      return historyClient.getContainerReport(containerId);\n+    }\n+    throw new YarnException(\"History service is not enabled.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerReport getContainerReport(ContainerId containerId)\n      throws YarnException, IOException {\n    if (historyServiceEnabled) {\n      return historyClient.getContainerReport(containerId);\n    }\n    throw new YarnException(\"History service is not enabled.\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java"
    }
  }
}