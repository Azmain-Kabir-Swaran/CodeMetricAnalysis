{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMLauncher.java",
  "functionName": "setFlowContext",
  "functionId": "setFlowContext___container-ContainerLaunchContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
  "functionStartLine": 274,
  "functionEndLine": 317,
  "numCommitsSeen": 45,
  "timeTaken": 1777,
  "changeHistory": [
    "ed13cf84068ad50a78e66211132c1f08238fb65b",
    "a3cf40e532d17b176663bb99248ed159aae6a9ed"
  ],
  "changeHistoryShort": {
    "ed13cf84068ad50a78e66211132c1f08238fb65b": "Ybodychange",
    "a3cf40e532d17b176663bb99248ed159aae6a9ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ed13cf84068ad50a78e66211132c1f08238fb65b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9317. Avoid repeated YarnConfiguration#timelineServiceV2Enabled check. Contributed by Prabhu Joseph\n",
      "commitDate": "22/02/19 7:31 AM",
      "commitName": "ed13cf84068ad50a78e66211132c1f08238fb65b",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "16/10/18 1:36 PM",
      "commitNameOld": "c2288ac45b748b4119442c46147ccc324926c340",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 128.79,
      "commitsBetweenForRepo": 922,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   private void setFlowContext(ContainerLaunchContext container) {\n-    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n+    if (timelineServiceV2Enabled) {\n       Map\u003cString, String\u003e environment \u003d container.getEnvironment();\n       ApplicationId applicationId \u003d\n           application.getAppAttemptId().getApplicationId();\n       RMApp app \u003d rmContext.getRMApps().get(applicationId);\n \n       // initialize the flow in the environment with default values for those\n       // that do not specify the flow tags\n       // flow name: app name (or app id if app name is missing),\n       // flow version: \"1\", flow run id: start time\n       setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n           TimelineUtils.generateDefaultFlowName(app.getName(), applicationId));\n       setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n           TimelineUtils.DEFAULT_FLOW_VERSION);\n       setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n           String.valueOf(app.getStartTime()));\n \n       // Set flow context info: the flow context is received via the application\n       // tags\n       for (String tag : app.getApplicationTags()) {\n         String[] parts \u003d tag.split(\":\", 2);\n         if (parts.length !\u003d 2 || parts[1].isEmpty()) {\n           continue;\n         }\n         switch (parts[0].toUpperCase()) {\n         case TimelineUtils.FLOW_NAME_TAG_PREFIX:\n           setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n               parts[1]);\n           break;\n         case TimelineUtils.FLOW_VERSION_TAG_PREFIX:\n           setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n               parts[1]);\n           break;\n         case TimelineUtils.FLOW_RUN_ID_TAG_PREFIX:\n           setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n               parts[1]);\n           break;\n         default:\n           break;\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setFlowContext(ContainerLaunchContext container) {\n    if (timelineServiceV2Enabled) {\n      Map\u003cString, String\u003e environment \u003d container.getEnvironment();\n      ApplicationId applicationId \u003d\n          application.getAppAttemptId().getApplicationId();\n      RMApp app \u003d rmContext.getRMApps().get(applicationId);\n\n      // initialize the flow in the environment with default values for those\n      // that do not specify the flow tags\n      // flow name: app name (or app id if app name is missing),\n      // flow version: \"1\", flow run id: start time\n      setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n          TimelineUtils.generateDefaultFlowName(app.getName(), applicationId));\n      setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n          TimelineUtils.DEFAULT_FLOW_VERSION);\n      setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n          String.valueOf(app.getStartTime()));\n\n      // Set flow context info: the flow context is received via the application\n      // tags\n      for (String tag : app.getApplicationTags()) {\n        String[] parts \u003d tag.split(\":\", 2);\n        if (parts.length !\u003d 2 || parts[1].isEmpty()) {\n          continue;\n        }\n        switch (parts[0].toUpperCase()) {\n        case TimelineUtils.FLOW_NAME_TAG_PREFIX:\n          setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n              parts[1]);\n          break;\n        case TimelineUtils.FLOW_VERSION_TAG_PREFIX:\n          setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n              parts[1]);\n          break;\n        case TimelineUtils.FLOW_RUN_ID_TAG_PREFIX:\n          setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n              parts[1]);\n          break;\n        default:\n          break;\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "a3cf40e532d17b176663bb99248ed159aae6a9ed": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3461. Consolidate flow name/version/run defaults. (Sangjin Lee via Varun Saxena)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a3cf40e532d17b176663bb99248ed159aae6a9ed",
      "commitAuthor": "Varun Saxena",
      "diff": "@@ -0,0 +1,44 @@\n+  private void setFlowContext(ContainerLaunchContext container) {\n+    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n+      Map\u003cString, String\u003e environment \u003d container.getEnvironment();\n+      ApplicationId applicationId \u003d\n+          application.getAppAttemptId().getApplicationId();\n+      RMApp app \u003d rmContext.getRMApps().get(applicationId);\n+\n+      // initialize the flow in the environment with default values for those\n+      // that do not specify the flow tags\n+      // flow name: app name (or app id if app name is missing),\n+      // flow version: \"1\", flow run id: start time\n+      setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n+          TimelineUtils.generateDefaultFlowName(app.getName(), applicationId));\n+      setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n+          TimelineUtils.DEFAULT_FLOW_VERSION);\n+      setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n+          String.valueOf(app.getStartTime()));\n+\n+      // Set flow context info: the flow context is received via the application\n+      // tags\n+      for (String tag : app.getApplicationTags()) {\n+        String[] parts \u003d tag.split(\":\", 2);\n+        if (parts.length !\u003d 2 || parts[1].isEmpty()) {\n+          continue;\n+        }\n+        switch (parts[0].toUpperCase()) {\n+        case TimelineUtils.FLOW_NAME_TAG_PREFIX:\n+          setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n+              parts[1]);\n+          break;\n+        case TimelineUtils.FLOW_VERSION_TAG_PREFIX:\n+          setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n+              parts[1]);\n+          break;\n+        case TimelineUtils.FLOW_RUN_ID_TAG_PREFIX:\n+          setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n+              parts[1]);\n+          break;\n+        default:\n+          break;\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setFlowContext(ContainerLaunchContext container) {\n    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n      Map\u003cString, String\u003e environment \u003d container.getEnvironment();\n      ApplicationId applicationId \u003d\n          application.getAppAttemptId().getApplicationId();\n      RMApp app \u003d rmContext.getRMApps().get(applicationId);\n\n      // initialize the flow in the environment with default values for those\n      // that do not specify the flow tags\n      // flow name: app name (or app id if app name is missing),\n      // flow version: \"1\", flow run id: start time\n      setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n          TimelineUtils.generateDefaultFlowName(app.getName(), applicationId));\n      setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n          TimelineUtils.DEFAULT_FLOW_VERSION);\n      setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n          String.valueOf(app.getStartTime()));\n\n      // Set flow context info: the flow context is received via the application\n      // tags\n      for (String tag : app.getApplicationTags()) {\n        String[] parts \u003d tag.split(\":\", 2);\n        if (parts.length !\u003d 2 || parts[1].isEmpty()) {\n          continue;\n        }\n        switch (parts[0].toUpperCase()) {\n        case TimelineUtils.FLOW_NAME_TAG_PREFIX:\n          setFlowTags(environment, TimelineUtils.FLOW_NAME_TAG_PREFIX,\n              parts[1]);\n          break;\n        case TimelineUtils.FLOW_VERSION_TAG_PREFIX:\n          setFlowTags(environment, TimelineUtils.FLOW_VERSION_TAG_PREFIX,\n              parts[1]);\n          break;\n        case TimelineUtils.FLOW_RUN_ID_TAG_PREFIX:\n          setFlowTags(environment, TimelineUtils.FLOW_RUN_ID_TAG_PREFIX,\n              parts[1]);\n          break;\n        default:\n          break;\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
    }
  }
}