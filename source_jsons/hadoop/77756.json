{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SFTPFileSystem.java",
  "functionName": "getFileStatus",
  "functionId": "getFileStatus___channel-ChannelSftp__sftpFile-LsEntry__parentPath-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java",
  "functionStartLine": 257,
  "functionEndLine": 294,
  "numCommitsSeen": 7,
  "timeTaken": 1815,
  "changeHistory": [
    "6934a654024b8b696a68c50f2b90c8c1e1051486",
    "66c6fd831497944f4f49c5ce42c69a302b7d7bc0",
    "8bf0e2d6b38a2cbd3c3d45557ede7575c1f18312",
    "559425dcb9302861c3c28b759492a68f8d597092"
  ],
  "changeHistoryShort": {
    "6934a654024b8b696a68c50f2b90c8c1e1051486": "Ybodychange",
    "66c6fd831497944f4f49c5ce42c69a302b7d7bc0": "Ybodychange",
    "8bf0e2d6b38a2cbd3c3d45557ede7575c1f18312": "Ybodychange",
    "559425dcb9302861c3c28b759492a68f8d597092": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6934a654024b8b696a68c50f2b90c8c1e1051486": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15358. SFTPConnectionPool connections leakage. Contributed by Mikhail Pryakhin.\n",
      "commitDate": "23/11/18 12:48 AM",
      "commitName": "6934a654024b8b696a68c50f2b90c8c1e1051486",
      "commitAuthor": "MÃ¡rton Elek",
      "commitDateOld": "21/08/17 11:48 AM",
      "commitNameOld": "736ceab2f58fb9ab5907c5b5110bd44384038e6b",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 458.58,
      "commitsBetweenForRepo": 4148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n       Path parentPath) throws IOException {\n \n     SftpATTRS attr \u003d sftpFile.getAttrs();\n     long length \u003d attr.getSize();\n     boolean isDir \u003d attr.isDir();\n     boolean isLink \u003d attr.isLink();\n     if (isLink) {\n       String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n       try {\n         link \u003d channel.realpath(link);\n \n         Path linkParent \u003d new Path(\"/\", link);\n \n         FileStatus fstat \u003d getFileStatus(channel, linkParent);\n         isDir \u003d fstat.isDirectory();\n         length \u003d fstat.getLen();\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     int blockReplication \u003d 1;\n     // Using default block size since there is no way in SFTP channel to know of\n     // block sizes on server. The assumption could be less than ideal.\n     long blockSize \u003d DEFAULT_BLOCK_SIZE;\n     long modTime \u003d attr.getMTime() * 1000L; // convert to milliseconds\n     long accessTime \u003d attr.getATime() * 1000L;\n     FsPermission permission \u003d getPermissions(sftpFile);\n     // not be able to get the real user group name, just use the user and group\n     // id\n     String user \u003d Integer.toString(attr.getUId());\n     String group \u003d Integer.toString(attr.getGId());\n     Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n \n     return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n         accessTime, permission, user, group, filePath.makeQualified(\n-            this.getUri(), this.getWorkingDirectory()));\n+            this.getUri(), this.getWorkingDirectory(channel)));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n      Path parentPath) throws IOException {\n\n    SftpATTRS attr \u003d sftpFile.getAttrs();\n    long length \u003d attr.getSize();\n    boolean isDir \u003d attr.isDir();\n    boolean isLink \u003d attr.isLink();\n    if (isLink) {\n      String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n      try {\n        link \u003d channel.realpath(link);\n\n        Path linkParent \u003d new Path(\"/\", link);\n\n        FileStatus fstat \u003d getFileStatus(channel, linkParent);\n        isDir \u003d fstat.isDirectory();\n        length \u003d fstat.getLen();\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in SFTP channel to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d attr.getMTime() * 1000L; // convert to milliseconds\n    long accessTime \u003d attr.getATime() * 1000L;\n    FsPermission permission \u003d getPermissions(sftpFile);\n    // not be able to get the real user group name, just use the user and group\n    // id\n    String user \u003d Integer.toString(attr.getUId());\n    String group \u003d Integer.toString(attr.getGId());\n    Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(\n            this.getUri(), this.getWorkingDirectory(channel)));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java",
      "extendedDetails": {}
    },
    "66c6fd831497944f4f49c5ce42c69a302b7d7bc0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14431. ModifyTime of FileStatus returned by SFTPFileSystem\u0027s getFileStatus method is wrong. Contributed by Hongyuan Li.\n",
      "commitDate": "05/06/17 9:31 PM",
      "commitName": "66c6fd831497944f4f49c5ce42c69a302b7d7bc0",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "25/05/17 7:19 AM",
      "commitNameOld": "8bf0e2d6b38a2cbd3c3d45557ede7575c1f18312",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 11.59,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n       Path parentPath) throws IOException {\n \n     SftpATTRS attr \u003d sftpFile.getAttrs();\n     long length \u003d attr.getSize();\n     boolean isDir \u003d attr.isDir();\n     boolean isLink \u003d attr.isLink();\n     if (isLink) {\n       String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n       try {\n         link \u003d channel.realpath(link);\n \n         Path linkParent \u003d new Path(\"/\", link);\n \n         FileStatus fstat \u003d getFileStatus(channel, linkParent);\n         isDir \u003d fstat.isDirectory();\n         length \u003d fstat.getLen();\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     int blockReplication \u003d 1;\n     // Using default block size since there is no way in SFTP channel to know of\n     // block sizes on server. The assumption could be less than ideal.\n     long blockSize \u003d DEFAULT_BLOCK_SIZE;\n-    long modTime \u003d attr.getMTime() * 1000; // convert to milliseconds\n+    long modTime \u003d attr.getMTime() * 1000L; // convert to milliseconds\n     long accessTime \u003d attr.getATime() * 1000L;\n     FsPermission permission \u003d getPermissions(sftpFile);\n     // not be able to get the real user group name, just use the user and group\n     // id\n     String user \u003d Integer.toString(attr.getUId());\n     String group \u003d Integer.toString(attr.getGId());\n     Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n \n     return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n         accessTime, permission, user, group, filePath.makeQualified(\n             this.getUri(), this.getWorkingDirectory()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n      Path parentPath) throws IOException {\n\n    SftpATTRS attr \u003d sftpFile.getAttrs();\n    long length \u003d attr.getSize();\n    boolean isDir \u003d attr.isDir();\n    boolean isLink \u003d attr.isLink();\n    if (isLink) {\n      String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n      try {\n        link \u003d channel.realpath(link);\n\n        Path linkParent \u003d new Path(\"/\", link);\n\n        FileStatus fstat \u003d getFileStatus(channel, linkParent);\n        isDir \u003d fstat.isDirectory();\n        length \u003d fstat.getLen();\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in SFTP channel to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d attr.getMTime() * 1000L; // convert to milliseconds\n    long accessTime \u003d attr.getATime() * 1000L;\n    FsPermission permission \u003d getPermissions(sftpFile);\n    // not be able to get the real user group name, just use the user and group\n    // id\n    String user \u003d Integer.toString(attr.getUId());\n    String group \u003d Integer.toString(attr.getGId());\n    Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(\n            this.getUri(), this.getWorkingDirectory()));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java",
      "extendedDetails": {}
    },
    "8bf0e2d6b38a2cbd3c3d45557ede7575c1f18312": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14430 the accessTime of FileStatus returned by SFTPFileSystem\u0027s\ngetFileStatus method is always 0.\nContributed by Hongyuan Li.\n",
      "commitDate": "25/05/17 7:19 AM",
      "commitName": "8bf0e2d6b38a2cbd3c3d45557ede7575c1f18312",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "23/08/16 2:12 PM",
      "commitNameOld": "c37346d0e3f9d39d0aec7a9c5bda3e9772aa969b",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 274.71,
      "commitsBetweenForRepo": 1666,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n       Path parentPath) throws IOException {\n \n     SftpATTRS attr \u003d sftpFile.getAttrs();\n     long length \u003d attr.getSize();\n     boolean isDir \u003d attr.isDir();\n     boolean isLink \u003d attr.isLink();\n     if (isLink) {\n       String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n       try {\n         link \u003d channel.realpath(link);\n \n         Path linkParent \u003d new Path(\"/\", link);\n \n         FileStatus fstat \u003d getFileStatus(channel, linkParent);\n         isDir \u003d fstat.isDirectory();\n         length \u003d fstat.getLen();\n       } catch (Exception e) {\n         throw new IOException(e);\n       }\n     }\n     int blockReplication \u003d 1;\n     // Using default block size since there is no way in SFTP channel to know of\n     // block sizes on server. The assumption could be less than ideal.\n     long blockSize \u003d DEFAULT_BLOCK_SIZE;\n     long modTime \u003d attr.getMTime() * 1000; // convert to milliseconds\n-    long accessTime \u003d 0;\n+    long accessTime \u003d attr.getATime() * 1000L;\n     FsPermission permission \u003d getPermissions(sftpFile);\n     // not be able to get the real user group name, just use the user and group\n     // id\n     String user \u003d Integer.toString(attr.getUId());\n     String group \u003d Integer.toString(attr.getGId());\n     Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n \n     return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n         accessTime, permission, user, group, filePath.makeQualified(\n             this.getUri(), this.getWorkingDirectory()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n      Path parentPath) throws IOException {\n\n    SftpATTRS attr \u003d sftpFile.getAttrs();\n    long length \u003d attr.getSize();\n    boolean isDir \u003d attr.isDir();\n    boolean isLink \u003d attr.isLink();\n    if (isLink) {\n      String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n      try {\n        link \u003d channel.realpath(link);\n\n        Path linkParent \u003d new Path(\"/\", link);\n\n        FileStatus fstat \u003d getFileStatus(channel, linkParent);\n        isDir \u003d fstat.isDirectory();\n        length \u003d fstat.getLen();\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in SFTP channel to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d attr.getMTime() * 1000; // convert to milliseconds\n    long accessTime \u003d attr.getATime() * 1000L;\n    FsPermission permission \u003d getPermissions(sftpFile);\n    // not be able to get the real user group name, just use the user and group\n    // id\n    String user \u003d Integer.toString(attr.getUId());\n    String group \u003d Integer.toString(attr.getGId());\n    Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(\n            this.getUri(), this.getWorkingDirectory()));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java",
      "extendedDetails": {}
    },
    "559425dcb9302861c3c28b759492a68f8d597092": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-5732. Add SFTPFileSystem. Contributed by Ramtin Boustani and Inigo Goiri\n",
      "commitDate": "07/07/15 10:08 AM",
      "commitName": "559425dcb9302861c3c28b759492a68f8d597092",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,38 @@\n+  private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n+      Path parentPath) throws IOException {\n+\n+    SftpATTRS attr \u003d sftpFile.getAttrs();\n+    long length \u003d attr.getSize();\n+    boolean isDir \u003d attr.isDir();\n+    boolean isLink \u003d attr.isLink();\n+    if (isLink) {\n+      String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n+      try {\n+        link \u003d channel.realpath(link);\n+\n+        Path linkParent \u003d new Path(\"/\", link);\n+\n+        FileStatus fstat \u003d getFileStatus(channel, linkParent);\n+        isDir \u003d fstat.isDirectory();\n+        length \u003d fstat.getLen();\n+      } catch (Exception e) {\n+        throw new IOException(e);\n+      }\n+    }\n+    int blockReplication \u003d 1;\n+    // Using default block size since there is no way in SFTP channel to know of\n+    // block sizes on server. The assumption could be less than ideal.\n+    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n+    long modTime \u003d attr.getMTime() * 1000; // convert to milliseconds\n+    long accessTime \u003d 0;\n+    FsPermission permission \u003d getPermissions(sftpFile);\n+    // not be able to get the real user group name, just use the user and group\n+    // id\n+    String user \u003d Integer.toString(attr.getUId());\n+    String group \u003d Integer.toString(attr.getGId());\n+    Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n+\n+    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n+        accessTime, permission, user, group, filePath.makeQualified(\n+            this.getUri(), this.getWorkingDirectory()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus getFileStatus(ChannelSftp channel, LsEntry sftpFile,\n      Path parentPath) throws IOException {\n\n    SftpATTRS attr \u003d sftpFile.getAttrs();\n    long length \u003d attr.getSize();\n    boolean isDir \u003d attr.isDir();\n    boolean isLink \u003d attr.isLink();\n    if (isLink) {\n      String link \u003d parentPath.toUri().getPath() + \"/\" + sftpFile.getFilename();\n      try {\n        link \u003d channel.realpath(link);\n\n        Path linkParent \u003d new Path(\"/\", link);\n\n        FileStatus fstat \u003d getFileStatus(channel, linkParent);\n        isDir \u003d fstat.isDirectory();\n        length \u003d fstat.getLen();\n      } catch (Exception e) {\n        throw new IOException(e);\n      }\n    }\n    int blockReplication \u003d 1;\n    // Using default block size since there is no way in SFTP channel to know of\n    // block sizes on server. The assumption could be less than ideal.\n    long blockSize \u003d DEFAULT_BLOCK_SIZE;\n    long modTime \u003d attr.getMTime() * 1000; // convert to milliseconds\n    long accessTime \u003d 0;\n    FsPermission permission \u003d getPermissions(sftpFile);\n    // not be able to get the real user group name, just use the user and group\n    // id\n    String user \u003d Integer.toString(attr.getUId());\n    String group \u003d Integer.toString(attr.getGId());\n    Path filePath \u003d new Path(parentPath, sftpFile.getFilename());\n\n    return new FileStatus(length, isDir, blockReplication, blockSize, modTime,\n        accessTime, permission, user, group, filePath.makeQualified(\n            this.getUri(), this.getWorkingDirectory()));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java"
    }
  }
}