{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterWebHdfsMethods.java",
  "functionName": "put",
  "functionId": "put___ugi-UserGroupInformation(modifiers-final)__delegation-DelegationParam(modifiers-final)__username-UserParam(modifiers-final)__doAsUser-DoAsParam(modifiers-final)__fullpath-String(modifiers-final)__op-PutOpParam(modifiers-final)__destination-DestinationParam(modifiers-final)__owner-OwnerParam(modifiers-final)__group-GroupParam(modifiers-final)__permission-PermissionParam(modifiers-final)__unmaskedPermission-UnmaskedPermissionParam(modifiers-final)__overwrite-OverwriteParam(modifiers-final)__bufferSize-BufferSizeParam(modifiers-final)__replication-ReplicationParam(modifiers-final)__blockSize-BlockSizeParam(modifiers-final)__modificationTime-ModificationTimeParam(modifiers-final)__accessTime-AccessTimeParam(modifiers-final)__renameOptions-RenameOptionSetParam(modifiers-final)__createParent-CreateParentParam(modifiers-final)__delegationTokenArgument-TokenArgumentParam(modifiers-final)__aclPermission-AclPermissionParam(modifiers-final)__xattrName-XAttrNameParam(modifiers-final)__xattrValue-XAttrValueParam(modifiers-final)__xattrSetFlag-XAttrSetFlagParam(modifiers-final)__snapshotName-SnapshotNameParam(modifiers-final)__oldSnapshotName-OldSnapshotNameParam(modifiers-final)__exclDatanodes-ExcludeDatanodesParam(modifiers-final)__createFlagParam-CreateFlagParam(modifiers-final)__noredirectParam-NoRedirectParam(modifiers-final)__policyName-StoragePolicyParam(modifiers-final)__ecpolicy-ECPolicyParam(modifiers-final)__namespaceQuota-NameSpaceQuotaParam(modifiers-final)__storagespaceQuota-StorageSpaceQuotaParam(modifiers-final)__storageType-StorageTypeParam(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
  "functionStartLine": 184,
  "functionEndLine": 275,
  "numCommitsSeen": 12,
  "timeTaken": 4050,
  "changeHistory": [
    "29bd6f3fc3bd78b439d61768885c9f3e7f31a540",
    "021a43b1a4bbc8a68c31461e206214a5eadc38dd",
    "221e308cb5ea13053652981ef43144a168bb7e83",
    "892b33e054efdcfb6127f20b7468fb08b0e2b8aa",
    "6e31a090842f8aeedb331b653b075499f8df6c60"
  ],
  "changeHistoryShort": {
    "29bd6f3fc3bd78b439d61768885c9f3e7f31a540": "Ymultichange(Yparameterchange,Ybodychange)",
    "021a43b1a4bbc8a68c31461e206214a5eadc38dd": "Ybodychange",
    "221e308cb5ea13053652981ef43144a168bb7e83": "Ybodychange",
    "892b33e054efdcfb6127f20b7468fb08b0e2b8aa": "Ymultichange(Yparameterchange,Ybodychange)",
    "6e31a090842f8aeedb331b653b075499f8df6c60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29bd6f3fc3bd78b439d61768885c9f3e7f31a540": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8631. WebHDFS : Support setQuota. Contributed by Chao Sun.\n",
      "commitDate": "28/08/19 11:28 AM",
      "commitName": "29bd6f3fc3bd78b439d61768885c9f3e7f31a540",
      "commitAuthor": "Surendra Singh Lilhore",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8631. WebHDFS : Support setQuota. Contributed by Chao Sun.\n",
          "commitDate": "28/08/19 11:28 AM",
          "commitName": "29bd6f3fc3bd78b439d61768885c9f3e7f31a540",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "24/06/19 9:33 AM",
          "commitNameOld": "021a43b1a4bbc8a68c31461e206214a5eadc38dd",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 65.08,
          "commitsBetweenForRepo": 547,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,89 +1,92 @@\n   protected Response put(\n       final UserGroupInformation ugi,\n       final DelegationParam delegation,\n       final UserParam username,\n       final DoAsParam doAsUser,\n       final String fullpath,\n       final PutOpParam op,\n       final DestinationParam destination,\n       final OwnerParam owner,\n       final GroupParam group,\n       final PermissionParam permission,\n       final UnmaskedPermissionParam unmaskedPermission,\n       final OverwriteParam overwrite,\n       final BufferSizeParam bufferSize,\n       final ReplicationParam replication,\n       final BlockSizeParam blockSize,\n       final ModificationTimeParam modificationTime,\n       final AccessTimeParam accessTime,\n       final RenameOptionSetParam renameOptions,\n       final CreateParentParam createParent,\n       final TokenArgumentParam delegationTokenArgument,\n       final AclPermissionParam aclPermission,\n       final XAttrNameParam xattrName,\n       final XAttrValueParam xattrValue,\n       final XAttrSetFlagParam xattrSetFlag,\n       final SnapshotNameParam snapshotName,\n       final OldSnapshotNameParam oldSnapshotName,\n       final ExcludeDatanodesParam exclDatanodes,\n       final CreateFlagParam createFlagParam,\n       final NoRedirectParam noredirectParam,\n       final StoragePolicyParam policyName,\n-      final ECPolicyParam ecpolicy\n+      final ECPolicyParam ecpolicy,\n+      final NameSpaceQuotaParam namespaceQuota,\n+      final StorageSpaceQuotaParam storagespaceQuota,\n+      final StorageTypeParam storageType\n   ) throws IOException, URISyntaxException {\n \n     switch(op.getValue()) {\n     case CREATE:\n     {\n       final Router router \u003d getRouter();\n       final URI uri \u003d redirectURI(router, ugi, delegation, username,\n           doAsUser, fullpath, op.getValue(), -1L,\n           exclDatanodes.getValue(), permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, createParent,\n           createFlagParam);\n       if (!noredirectParam.getValue()) {\n         return Response.temporaryRedirect(uri)\n             .type(MediaType.APPLICATION_OCTET_STREAM).build();\n       } else {\n         final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n         return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n       }\n     }\n     case MKDIRS:\n     case CREATESYMLINK:\n     case RENAME:\n     case SETREPLICATION:\n     case SETOWNER:\n     case SETPERMISSION:\n     case SETTIMES:\n     case RENEWDELEGATIONTOKEN:\n     case CANCELDELEGATIONTOKEN:\n     case MODIFYACLENTRIES:\n     case REMOVEACLENTRIES:\n     case REMOVEDEFAULTACL:\n     case REMOVEACL:\n     case SETACL:\n     case SETXATTR:\n     case REMOVEXATTR:\n     case ALLOWSNAPSHOT:\n     case CREATESNAPSHOT:\n     case RENAMESNAPSHOT:\n     case DISALLOWSNAPSHOT:\n     case SETSTORAGEPOLICY:\n     case ENABLEECPOLICY:\n     case DISABLEECPOLICY:\n     case SATISFYSTORAGEPOLICY:\n     {\n       // Whitelist operations that can handled by NamenodeWebHdfsMethods\n       return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n           destination, owner, group, permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, modificationTime,\n           accessTime, renameOptions, createParent, delegationTokenArgument,\n           aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n           oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n-          policyName, ecpolicy);\n+          policyName, ecpolicy, namespaceQuota, storagespaceQuota, storageType);\n     }\n     default:\n       throw new UnsupportedOperationException(op + \" is not supported\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Response put(\n      final UserGroupInformation ugi,\n      final DelegationParam delegation,\n      final UserParam username,\n      final DoAsParam doAsUser,\n      final String fullpath,\n      final PutOpParam op,\n      final DestinationParam destination,\n      final OwnerParam owner,\n      final GroupParam group,\n      final PermissionParam permission,\n      final UnmaskedPermissionParam unmaskedPermission,\n      final OverwriteParam overwrite,\n      final BufferSizeParam bufferSize,\n      final ReplicationParam replication,\n      final BlockSizeParam blockSize,\n      final ModificationTimeParam modificationTime,\n      final AccessTimeParam accessTime,\n      final RenameOptionSetParam renameOptions,\n      final CreateParentParam createParent,\n      final TokenArgumentParam delegationTokenArgument,\n      final AclPermissionParam aclPermission,\n      final XAttrNameParam xattrName,\n      final XAttrValueParam xattrValue,\n      final XAttrSetFlagParam xattrSetFlag,\n      final SnapshotNameParam snapshotName,\n      final OldSnapshotNameParam oldSnapshotName,\n      final ExcludeDatanodesParam exclDatanodes,\n      final CreateFlagParam createFlagParam,\n      final NoRedirectParam noredirectParam,\n      final StoragePolicyParam policyName,\n      final ECPolicyParam ecpolicy,\n      final NameSpaceQuotaParam namespaceQuota,\n      final StorageSpaceQuotaParam storagespaceQuota,\n      final StorageTypeParam storageType\n  ) throws IOException, URISyntaxException {\n\n    switch(op.getValue()) {\n    case CREATE:\n    {\n      final Router router \u003d getRouter();\n      final URI uri \u003d redirectURI(router, ugi, delegation, username,\n          doAsUser, fullpath, op.getValue(), -1L,\n          exclDatanodes.getValue(), permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, createParent,\n          createFlagParam);\n      if (!noredirectParam.getValue()) {\n        return Response.temporaryRedirect(uri)\n            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n      } else {\n        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n      }\n    }\n    case MKDIRS:\n    case CREATESYMLINK:\n    case RENAME:\n    case SETREPLICATION:\n    case SETOWNER:\n    case SETPERMISSION:\n    case SETTIMES:\n    case RENEWDELEGATIONTOKEN:\n    case CANCELDELEGATIONTOKEN:\n    case MODIFYACLENTRIES:\n    case REMOVEACLENTRIES:\n    case REMOVEDEFAULTACL:\n    case REMOVEACL:\n    case SETACL:\n    case SETXATTR:\n    case REMOVEXATTR:\n    case ALLOWSNAPSHOT:\n    case CREATESNAPSHOT:\n    case RENAMESNAPSHOT:\n    case DISALLOWSNAPSHOT:\n    case SETSTORAGEPOLICY:\n    case ENABLEECPOLICY:\n    case DISABLEECPOLICY:\n    case SATISFYSTORAGEPOLICY:\n    {\n      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n          destination, owner, group, permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, modificationTime,\n          accessTime, renameOptions, createParent, delegationTokenArgument,\n          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n          policyName, ecpolicy, namespaceQuota, storagespaceQuota, storageType);\n    }\n    default:\n      throw new UnsupportedOperationException(op + \" is not supported\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
          "extendedDetails": {
            "oldValue": "[ugi-UserGroupInformation(modifiers-final), delegation-DelegationParam(modifiers-final), username-UserParam(modifiers-final), doAsUser-DoAsParam(modifiers-final), fullpath-String(modifiers-final), op-PutOpParam(modifiers-final), destination-DestinationParam(modifiers-final), owner-OwnerParam(modifiers-final), group-GroupParam(modifiers-final), permission-PermissionParam(modifiers-final), unmaskedPermission-UnmaskedPermissionParam(modifiers-final), overwrite-OverwriteParam(modifiers-final), bufferSize-BufferSizeParam(modifiers-final), replication-ReplicationParam(modifiers-final), blockSize-BlockSizeParam(modifiers-final), modificationTime-ModificationTimeParam(modifiers-final), accessTime-AccessTimeParam(modifiers-final), renameOptions-RenameOptionSetParam(modifiers-final), createParent-CreateParentParam(modifiers-final), delegationTokenArgument-TokenArgumentParam(modifiers-final), aclPermission-AclPermissionParam(modifiers-final), xattrName-XAttrNameParam(modifiers-final), xattrValue-XAttrValueParam(modifiers-final), xattrSetFlag-XAttrSetFlagParam(modifiers-final), snapshotName-SnapshotNameParam(modifiers-final), oldSnapshotName-OldSnapshotNameParam(modifiers-final), exclDatanodes-ExcludeDatanodesParam(modifiers-final), createFlagParam-CreateFlagParam(modifiers-final), noredirectParam-NoRedirectParam(modifiers-final), policyName-StoragePolicyParam(modifiers-final), ecpolicy-ECPolicyParam(modifiers-final)]",
            "newValue": "[ugi-UserGroupInformation(modifiers-final), delegation-DelegationParam(modifiers-final), username-UserParam(modifiers-final), doAsUser-DoAsParam(modifiers-final), fullpath-String(modifiers-final), op-PutOpParam(modifiers-final), destination-DestinationParam(modifiers-final), owner-OwnerParam(modifiers-final), group-GroupParam(modifiers-final), permission-PermissionParam(modifiers-final), unmaskedPermission-UnmaskedPermissionParam(modifiers-final), overwrite-OverwriteParam(modifiers-final), bufferSize-BufferSizeParam(modifiers-final), replication-ReplicationParam(modifiers-final), blockSize-BlockSizeParam(modifiers-final), modificationTime-ModificationTimeParam(modifiers-final), accessTime-AccessTimeParam(modifiers-final), renameOptions-RenameOptionSetParam(modifiers-final), createParent-CreateParentParam(modifiers-final), delegationTokenArgument-TokenArgumentParam(modifiers-final), aclPermission-AclPermissionParam(modifiers-final), xattrName-XAttrNameParam(modifiers-final), xattrValue-XAttrValueParam(modifiers-final), xattrSetFlag-XAttrSetFlagParam(modifiers-final), snapshotName-SnapshotNameParam(modifiers-final), oldSnapshotName-OldSnapshotNameParam(modifiers-final), exclDatanodes-ExcludeDatanodesParam(modifiers-final), createFlagParam-CreateFlagParam(modifiers-final), noredirectParam-NoRedirectParam(modifiers-final), policyName-StoragePolicyParam(modifiers-final), ecpolicy-ECPolicyParam(modifiers-final), namespaceQuota-NameSpaceQuotaParam(modifiers-final), storagespaceQuota-StorageSpaceQuotaParam(modifiers-final), storageType-StorageTypeParam(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8631. WebHDFS : Support setQuota. Contributed by Chao Sun.\n",
          "commitDate": "28/08/19 11:28 AM",
          "commitName": "29bd6f3fc3bd78b439d61768885c9f3e7f31a540",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "24/06/19 9:33 AM",
          "commitNameOld": "021a43b1a4bbc8a68c31461e206214a5eadc38dd",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 65.08,
          "commitsBetweenForRepo": 547,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,89 +1,92 @@\n   protected Response put(\n       final UserGroupInformation ugi,\n       final DelegationParam delegation,\n       final UserParam username,\n       final DoAsParam doAsUser,\n       final String fullpath,\n       final PutOpParam op,\n       final DestinationParam destination,\n       final OwnerParam owner,\n       final GroupParam group,\n       final PermissionParam permission,\n       final UnmaskedPermissionParam unmaskedPermission,\n       final OverwriteParam overwrite,\n       final BufferSizeParam bufferSize,\n       final ReplicationParam replication,\n       final BlockSizeParam blockSize,\n       final ModificationTimeParam modificationTime,\n       final AccessTimeParam accessTime,\n       final RenameOptionSetParam renameOptions,\n       final CreateParentParam createParent,\n       final TokenArgumentParam delegationTokenArgument,\n       final AclPermissionParam aclPermission,\n       final XAttrNameParam xattrName,\n       final XAttrValueParam xattrValue,\n       final XAttrSetFlagParam xattrSetFlag,\n       final SnapshotNameParam snapshotName,\n       final OldSnapshotNameParam oldSnapshotName,\n       final ExcludeDatanodesParam exclDatanodes,\n       final CreateFlagParam createFlagParam,\n       final NoRedirectParam noredirectParam,\n       final StoragePolicyParam policyName,\n-      final ECPolicyParam ecpolicy\n+      final ECPolicyParam ecpolicy,\n+      final NameSpaceQuotaParam namespaceQuota,\n+      final StorageSpaceQuotaParam storagespaceQuota,\n+      final StorageTypeParam storageType\n   ) throws IOException, URISyntaxException {\n \n     switch(op.getValue()) {\n     case CREATE:\n     {\n       final Router router \u003d getRouter();\n       final URI uri \u003d redirectURI(router, ugi, delegation, username,\n           doAsUser, fullpath, op.getValue(), -1L,\n           exclDatanodes.getValue(), permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, createParent,\n           createFlagParam);\n       if (!noredirectParam.getValue()) {\n         return Response.temporaryRedirect(uri)\n             .type(MediaType.APPLICATION_OCTET_STREAM).build();\n       } else {\n         final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n         return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n       }\n     }\n     case MKDIRS:\n     case CREATESYMLINK:\n     case RENAME:\n     case SETREPLICATION:\n     case SETOWNER:\n     case SETPERMISSION:\n     case SETTIMES:\n     case RENEWDELEGATIONTOKEN:\n     case CANCELDELEGATIONTOKEN:\n     case MODIFYACLENTRIES:\n     case REMOVEACLENTRIES:\n     case REMOVEDEFAULTACL:\n     case REMOVEACL:\n     case SETACL:\n     case SETXATTR:\n     case REMOVEXATTR:\n     case ALLOWSNAPSHOT:\n     case CREATESNAPSHOT:\n     case RENAMESNAPSHOT:\n     case DISALLOWSNAPSHOT:\n     case SETSTORAGEPOLICY:\n     case ENABLEECPOLICY:\n     case DISABLEECPOLICY:\n     case SATISFYSTORAGEPOLICY:\n     {\n       // Whitelist operations that can handled by NamenodeWebHdfsMethods\n       return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n           destination, owner, group, permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, modificationTime,\n           accessTime, renameOptions, createParent, delegationTokenArgument,\n           aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n           oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n-          policyName, ecpolicy);\n+          policyName, ecpolicy, namespaceQuota, storagespaceQuota, storageType);\n     }\n     default:\n       throw new UnsupportedOperationException(op + \" is not supported\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Response put(\n      final UserGroupInformation ugi,\n      final DelegationParam delegation,\n      final UserParam username,\n      final DoAsParam doAsUser,\n      final String fullpath,\n      final PutOpParam op,\n      final DestinationParam destination,\n      final OwnerParam owner,\n      final GroupParam group,\n      final PermissionParam permission,\n      final UnmaskedPermissionParam unmaskedPermission,\n      final OverwriteParam overwrite,\n      final BufferSizeParam bufferSize,\n      final ReplicationParam replication,\n      final BlockSizeParam blockSize,\n      final ModificationTimeParam modificationTime,\n      final AccessTimeParam accessTime,\n      final RenameOptionSetParam renameOptions,\n      final CreateParentParam createParent,\n      final TokenArgumentParam delegationTokenArgument,\n      final AclPermissionParam aclPermission,\n      final XAttrNameParam xattrName,\n      final XAttrValueParam xattrValue,\n      final XAttrSetFlagParam xattrSetFlag,\n      final SnapshotNameParam snapshotName,\n      final OldSnapshotNameParam oldSnapshotName,\n      final ExcludeDatanodesParam exclDatanodes,\n      final CreateFlagParam createFlagParam,\n      final NoRedirectParam noredirectParam,\n      final StoragePolicyParam policyName,\n      final ECPolicyParam ecpolicy,\n      final NameSpaceQuotaParam namespaceQuota,\n      final StorageSpaceQuotaParam storagespaceQuota,\n      final StorageTypeParam storageType\n  ) throws IOException, URISyntaxException {\n\n    switch(op.getValue()) {\n    case CREATE:\n    {\n      final Router router \u003d getRouter();\n      final URI uri \u003d redirectURI(router, ugi, delegation, username,\n          doAsUser, fullpath, op.getValue(), -1L,\n          exclDatanodes.getValue(), permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, createParent,\n          createFlagParam);\n      if (!noredirectParam.getValue()) {\n        return Response.temporaryRedirect(uri)\n            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n      } else {\n        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n      }\n    }\n    case MKDIRS:\n    case CREATESYMLINK:\n    case RENAME:\n    case SETREPLICATION:\n    case SETOWNER:\n    case SETPERMISSION:\n    case SETTIMES:\n    case RENEWDELEGATIONTOKEN:\n    case CANCELDELEGATIONTOKEN:\n    case MODIFYACLENTRIES:\n    case REMOVEACLENTRIES:\n    case REMOVEDEFAULTACL:\n    case REMOVEACL:\n    case SETACL:\n    case SETXATTR:\n    case REMOVEXATTR:\n    case ALLOWSNAPSHOT:\n    case CREATESNAPSHOT:\n    case RENAMESNAPSHOT:\n    case DISALLOWSNAPSHOT:\n    case SETSTORAGEPOLICY:\n    case ENABLEECPOLICY:\n    case DISABLEECPOLICY:\n    case SATISFYSTORAGEPOLICY:\n    {\n      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n          destination, owner, group, permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, modificationTime,\n          accessTime, renameOptions, createParent, delegationTokenArgument,\n          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n          policyName, ecpolicy, namespaceQuota, storagespaceQuota, storageType);\n    }\n    default:\n      throw new UnsupportedOperationException(op + \" is not supported\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
          "extendedDetails": {}
        }
      ]
    },
    "021a43b1a4bbc8a68c31461e206214a5eadc38dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13972. RBF: Support for Delegation Token (WebHDFS). Contributed by CR Hota.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "021a43b1a4bbc8a68c31461e206214a5eadc38dd",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "26/03/19 11:27 AM",
      "commitNameOld": "55fb3c32fb48ca26a629d4d5f3f07e2858d09594",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 89.92,
      "commitsBetweenForRepo": 632,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,85 +1,89 @@\n   protected Response put(\n       final UserGroupInformation ugi,\n       final DelegationParam delegation,\n       final UserParam username,\n       final DoAsParam doAsUser,\n       final String fullpath,\n       final PutOpParam op,\n       final DestinationParam destination,\n       final OwnerParam owner,\n       final GroupParam group,\n       final PermissionParam permission,\n       final UnmaskedPermissionParam unmaskedPermission,\n       final OverwriteParam overwrite,\n       final BufferSizeParam bufferSize,\n       final ReplicationParam replication,\n       final BlockSizeParam blockSize,\n       final ModificationTimeParam modificationTime,\n       final AccessTimeParam accessTime,\n       final RenameOptionSetParam renameOptions,\n       final CreateParentParam createParent,\n       final TokenArgumentParam delegationTokenArgument,\n       final AclPermissionParam aclPermission,\n       final XAttrNameParam xattrName,\n       final XAttrValueParam xattrValue,\n       final XAttrSetFlagParam xattrSetFlag,\n       final SnapshotNameParam snapshotName,\n       final OldSnapshotNameParam oldSnapshotName,\n       final ExcludeDatanodesParam exclDatanodes,\n       final CreateFlagParam createFlagParam,\n       final NoRedirectParam noredirectParam,\n       final StoragePolicyParam policyName,\n       final ECPolicyParam ecpolicy\n   ) throws IOException, URISyntaxException {\n \n     switch(op.getValue()) {\n     case CREATE:\n     {\n       final Router router \u003d getRouter();\n-      final URI uri \u003d redirectURI(router, fullpath);\n+      final URI uri \u003d redirectURI(router, ugi, delegation, username,\n+          doAsUser, fullpath, op.getValue(), -1L,\n+          exclDatanodes.getValue(), permission, unmaskedPermission,\n+          overwrite, bufferSize, replication, blockSize, createParent,\n+          createFlagParam);\n       if (!noredirectParam.getValue()) {\n         return Response.temporaryRedirect(uri)\n             .type(MediaType.APPLICATION_OCTET_STREAM).build();\n       } else {\n         final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n         return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n       }\n     }\n     case MKDIRS:\n     case CREATESYMLINK:\n     case RENAME:\n     case SETREPLICATION:\n     case SETOWNER:\n     case SETPERMISSION:\n     case SETTIMES:\n     case RENEWDELEGATIONTOKEN:\n     case CANCELDELEGATIONTOKEN:\n     case MODIFYACLENTRIES:\n     case REMOVEACLENTRIES:\n     case REMOVEDEFAULTACL:\n     case REMOVEACL:\n     case SETACL:\n     case SETXATTR:\n     case REMOVEXATTR:\n     case ALLOWSNAPSHOT:\n     case CREATESNAPSHOT:\n     case RENAMESNAPSHOT:\n     case DISALLOWSNAPSHOT:\n     case SETSTORAGEPOLICY:\n     case ENABLEECPOLICY:\n     case DISABLEECPOLICY:\n     case SATISFYSTORAGEPOLICY:\n     {\n       // Whitelist operations that can handled by NamenodeWebHdfsMethods\n       return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n           destination, owner, group, permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, modificationTime,\n           accessTime, renameOptions, createParent, delegationTokenArgument,\n           aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n           oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n           policyName, ecpolicy);\n     }\n     default:\n       throw new UnsupportedOperationException(op + \" is not supported\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Response put(\n      final UserGroupInformation ugi,\n      final DelegationParam delegation,\n      final UserParam username,\n      final DoAsParam doAsUser,\n      final String fullpath,\n      final PutOpParam op,\n      final DestinationParam destination,\n      final OwnerParam owner,\n      final GroupParam group,\n      final PermissionParam permission,\n      final UnmaskedPermissionParam unmaskedPermission,\n      final OverwriteParam overwrite,\n      final BufferSizeParam bufferSize,\n      final ReplicationParam replication,\n      final BlockSizeParam blockSize,\n      final ModificationTimeParam modificationTime,\n      final AccessTimeParam accessTime,\n      final RenameOptionSetParam renameOptions,\n      final CreateParentParam createParent,\n      final TokenArgumentParam delegationTokenArgument,\n      final AclPermissionParam aclPermission,\n      final XAttrNameParam xattrName,\n      final XAttrValueParam xattrValue,\n      final XAttrSetFlagParam xattrSetFlag,\n      final SnapshotNameParam snapshotName,\n      final OldSnapshotNameParam oldSnapshotName,\n      final ExcludeDatanodesParam exclDatanodes,\n      final CreateFlagParam createFlagParam,\n      final NoRedirectParam noredirectParam,\n      final StoragePolicyParam policyName,\n      final ECPolicyParam ecpolicy\n  ) throws IOException, URISyntaxException {\n\n    switch(op.getValue()) {\n    case CREATE:\n    {\n      final Router router \u003d getRouter();\n      final URI uri \u003d redirectURI(router, ugi, delegation, username,\n          doAsUser, fullpath, op.getValue(), -1L,\n          exclDatanodes.getValue(), permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, createParent,\n          createFlagParam);\n      if (!noredirectParam.getValue()) {\n        return Response.temporaryRedirect(uri)\n            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n      } else {\n        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n      }\n    }\n    case MKDIRS:\n    case CREATESYMLINK:\n    case RENAME:\n    case SETREPLICATION:\n    case SETOWNER:\n    case SETPERMISSION:\n    case SETTIMES:\n    case RENEWDELEGATIONTOKEN:\n    case CANCELDELEGATIONTOKEN:\n    case MODIFYACLENTRIES:\n    case REMOVEACLENTRIES:\n    case REMOVEDEFAULTACL:\n    case REMOVEACL:\n    case SETACL:\n    case SETXATTR:\n    case REMOVEXATTR:\n    case ALLOWSNAPSHOT:\n    case CREATESNAPSHOT:\n    case RENAMESNAPSHOT:\n    case DISALLOWSNAPSHOT:\n    case SETSTORAGEPOLICY:\n    case ENABLEECPOLICY:\n    case DISABLEECPOLICY:\n    case SATISFYSTORAGEPOLICY:\n    {\n      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n          destination, owner, group, permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, modificationTime,\n          accessTime, renameOptions, createParent, delegationTokenArgument,\n          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n          policyName, ecpolicy);\n    }\n    default:\n      throw new UnsupportedOperationException(op + \" is not supported\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "221e308cb5ea13053652981ef43144a168bb7e83": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14153. [SPS] : Add Support for Storage Policy Satisfier in WEBHDFS. Contributed by Ayush Saxena.\n",
      "commitDate": "23/01/19 3:30 AM",
      "commitName": "221e308cb5ea13053652981ef43144a168bb7e83",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "21/11/18 10:43 AM",
      "commitNameOld": "892b33e054efdcfb6127f20b7468fb08b0e2b8aa",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 62.7,
      "commitsBetweenForRepo": 399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,84 +1,85 @@\n   protected Response put(\n       final UserGroupInformation ugi,\n       final DelegationParam delegation,\n       final UserParam username,\n       final DoAsParam doAsUser,\n       final String fullpath,\n       final PutOpParam op,\n       final DestinationParam destination,\n       final OwnerParam owner,\n       final GroupParam group,\n       final PermissionParam permission,\n       final UnmaskedPermissionParam unmaskedPermission,\n       final OverwriteParam overwrite,\n       final BufferSizeParam bufferSize,\n       final ReplicationParam replication,\n       final BlockSizeParam blockSize,\n       final ModificationTimeParam modificationTime,\n       final AccessTimeParam accessTime,\n       final RenameOptionSetParam renameOptions,\n       final CreateParentParam createParent,\n       final TokenArgumentParam delegationTokenArgument,\n       final AclPermissionParam aclPermission,\n       final XAttrNameParam xattrName,\n       final XAttrValueParam xattrValue,\n       final XAttrSetFlagParam xattrSetFlag,\n       final SnapshotNameParam snapshotName,\n       final OldSnapshotNameParam oldSnapshotName,\n       final ExcludeDatanodesParam exclDatanodes,\n       final CreateFlagParam createFlagParam,\n       final NoRedirectParam noredirectParam,\n       final StoragePolicyParam policyName,\n       final ECPolicyParam ecpolicy\n   ) throws IOException, URISyntaxException {\n \n     switch(op.getValue()) {\n     case CREATE:\n     {\n       final Router router \u003d getRouter();\n       final URI uri \u003d redirectURI(router, fullpath);\n       if (!noredirectParam.getValue()) {\n         return Response.temporaryRedirect(uri)\n             .type(MediaType.APPLICATION_OCTET_STREAM).build();\n       } else {\n         final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n         return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n       }\n     }\n     case MKDIRS:\n     case CREATESYMLINK:\n     case RENAME:\n     case SETREPLICATION:\n     case SETOWNER:\n     case SETPERMISSION:\n     case SETTIMES:\n     case RENEWDELEGATIONTOKEN:\n     case CANCELDELEGATIONTOKEN:\n     case MODIFYACLENTRIES:\n     case REMOVEACLENTRIES:\n     case REMOVEDEFAULTACL:\n     case REMOVEACL:\n     case SETACL:\n     case SETXATTR:\n     case REMOVEXATTR:\n     case ALLOWSNAPSHOT:\n     case CREATESNAPSHOT:\n     case RENAMESNAPSHOT:\n     case DISALLOWSNAPSHOT:\n     case SETSTORAGEPOLICY:\n     case ENABLEECPOLICY:\n     case DISABLEECPOLICY:\n+    case SATISFYSTORAGEPOLICY:\n     {\n       // Whitelist operations that can handled by NamenodeWebHdfsMethods\n       return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n           destination, owner, group, permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, modificationTime,\n           accessTime, renameOptions, createParent, delegationTokenArgument,\n           aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n           oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n           policyName, ecpolicy);\n     }\n     default:\n       throw new UnsupportedOperationException(op + \" is not supported\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Response put(\n      final UserGroupInformation ugi,\n      final DelegationParam delegation,\n      final UserParam username,\n      final DoAsParam doAsUser,\n      final String fullpath,\n      final PutOpParam op,\n      final DestinationParam destination,\n      final OwnerParam owner,\n      final GroupParam group,\n      final PermissionParam permission,\n      final UnmaskedPermissionParam unmaskedPermission,\n      final OverwriteParam overwrite,\n      final BufferSizeParam bufferSize,\n      final ReplicationParam replication,\n      final BlockSizeParam blockSize,\n      final ModificationTimeParam modificationTime,\n      final AccessTimeParam accessTime,\n      final RenameOptionSetParam renameOptions,\n      final CreateParentParam createParent,\n      final TokenArgumentParam delegationTokenArgument,\n      final AclPermissionParam aclPermission,\n      final XAttrNameParam xattrName,\n      final XAttrValueParam xattrValue,\n      final XAttrSetFlagParam xattrSetFlag,\n      final SnapshotNameParam snapshotName,\n      final OldSnapshotNameParam oldSnapshotName,\n      final ExcludeDatanodesParam exclDatanodes,\n      final CreateFlagParam createFlagParam,\n      final NoRedirectParam noredirectParam,\n      final StoragePolicyParam policyName,\n      final ECPolicyParam ecpolicy\n  ) throws IOException, URISyntaxException {\n\n    switch(op.getValue()) {\n    case CREATE:\n    {\n      final Router router \u003d getRouter();\n      final URI uri \u003d redirectURI(router, fullpath);\n      if (!noredirectParam.getValue()) {\n        return Response.temporaryRedirect(uri)\n            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n      } else {\n        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n      }\n    }\n    case MKDIRS:\n    case CREATESYMLINK:\n    case RENAME:\n    case SETREPLICATION:\n    case SETOWNER:\n    case SETPERMISSION:\n    case SETTIMES:\n    case RENEWDELEGATIONTOKEN:\n    case CANCELDELEGATIONTOKEN:\n    case MODIFYACLENTRIES:\n    case REMOVEACLENTRIES:\n    case REMOVEDEFAULTACL:\n    case REMOVEACL:\n    case SETACL:\n    case SETXATTR:\n    case REMOVEXATTR:\n    case ALLOWSNAPSHOT:\n    case CREATESNAPSHOT:\n    case RENAMESNAPSHOT:\n    case DISALLOWSNAPSHOT:\n    case SETSTORAGEPOLICY:\n    case ENABLEECPOLICY:\n    case DISABLEECPOLICY:\n    case SATISFYSTORAGEPOLICY:\n    {\n      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n          destination, owner, group, permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, modificationTime,\n          accessTime, renameOptions, createParent, delegationTokenArgument,\n          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n          policyName, ecpolicy);\n    }\n    default:\n      throw new UnsupportedOperationException(op + \" is not supported\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "892b33e054efdcfb6127f20b7468fb08b0e2b8aa": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-14064. WEBHDFS: Support Enable/Disable EC Policy. Contributed by Ayush Saxena.\n",
      "commitDate": "21/11/18 10:43 AM",
      "commitName": "892b33e054efdcfb6127f20b7468fb08b0e2b8aa",
      "commitAuthor": "Brahma Reddy Battula",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14064. WEBHDFS: Support Enable/Disable EC Policy. Contributed by Ayush Saxena.\n",
          "commitDate": "21/11/18 10:43 AM",
          "commitName": "892b33e054efdcfb6127f20b7468fb08b0e2b8aa",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "23/03/18 8:32 AM",
          "commitNameOld": "6e31a090842f8aeedb331b653b075499f8df6c60",
          "commitAuthorOld": "weiy",
          "daysBetweenCommits": 243.13,
          "commitsBetweenForRepo": 2422,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,81 +1,84 @@\n   protected Response put(\n       final UserGroupInformation ugi,\n       final DelegationParam delegation,\n       final UserParam username,\n       final DoAsParam doAsUser,\n       final String fullpath,\n       final PutOpParam op,\n       final DestinationParam destination,\n       final OwnerParam owner,\n       final GroupParam group,\n       final PermissionParam permission,\n       final UnmaskedPermissionParam unmaskedPermission,\n       final OverwriteParam overwrite,\n       final BufferSizeParam bufferSize,\n       final ReplicationParam replication,\n       final BlockSizeParam blockSize,\n       final ModificationTimeParam modificationTime,\n       final AccessTimeParam accessTime,\n       final RenameOptionSetParam renameOptions,\n       final CreateParentParam createParent,\n       final TokenArgumentParam delegationTokenArgument,\n       final AclPermissionParam aclPermission,\n       final XAttrNameParam xattrName,\n       final XAttrValueParam xattrValue,\n       final XAttrSetFlagParam xattrSetFlag,\n       final SnapshotNameParam snapshotName,\n       final OldSnapshotNameParam oldSnapshotName,\n       final ExcludeDatanodesParam exclDatanodes,\n       final CreateFlagParam createFlagParam,\n       final NoRedirectParam noredirectParam,\n-      final StoragePolicyParam policyName\n+      final StoragePolicyParam policyName,\n+      final ECPolicyParam ecpolicy\n   ) throws IOException, URISyntaxException {\n \n     switch(op.getValue()) {\n     case CREATE:\n     {\n       final Router router \u003d getRouter();\n       final URI uri \u003d redirectURI(router, fullpath);\n       if (!noredirectParam.getValue()) {\n         return Response.temporaryRedirect(uri)\n             .type(MediaType.APPLICATION_OCTET_STREAM).build();\n       } else {\n         final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n         return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n       }\n     }\n     case MKDIRS:\n     case CREATESYMLINK:\n     case RENAME:\n     case SETREPLICATION:\n     case SETOWNER:\n     case SETPERMISSION:\n     case SETTIMES:\n     case RENEWDELEGATIONTOKEN:\n     case CANCELDELEGATIONTOKEN:\n     case MODIFYACLENTRIES:\n     case REMOVEACLENTRIES:\n     case REMOVEDEFAULTACL:\n     case REMOVEACL:\n     case SETACL:\n     case SETXATTR:\n     case REMOVEXATTR:\n     case ALLOWSNAPSHOT:\n     case CREATESNAPSHOT:\n     case RENAMESNAPSHOT:\n     case DISALLOWSNAPSHOT:\n     case SETSTORAGEPOLICY:\n+    case ENABLEECPOLICY:\n+    case DISABLEECPOLICY:\n     {\n       // Whitelist operations that can handled by NamenodeWebHdfsMethods\n       return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n           destination, owner, group, permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, modificationTime,\n           accessTime, renameOptions, createParent, delegationTokenArgument,\n           aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n           oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n-          policyName);\n+          policyName, ecpolicy);\n     }\n     default:\n       throw new UnsupportedOperationException(op + \" is not supported\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Response put(\n      final UserGroupInformation ugi,\n      final DelegationParam delegation,\n      final UserParam username,\n      final DoAsParam doAsUser,\n      final String fullpath,\n      final PutOpParam op,\n      final DestinationParam destination,\n      final OwnerParam owner,\n      final GroupParam group,\n      final PermissionParam permission,\n      final UnmaskedPermissionParam unmaskedPermission,\n      final OverwriteParam overwrite,\n      final BufferSizeParam bufferSize,\n      final ReplicationParam replication,\n      final BlockSizeParam blockSize,\n      final ModificationTimeParam modificationTime,\n      final AccessTimeParam accessTime,\n      final RenameOptionSetParam renameOptions,\n      final CreateParentParam createParent,\n      final TokenArgumentParam delegationTokenArgument,\n      final AclPermissionParam aclPermission,\n      final XAttrNameParam xattrName,\n      final XAttrValueParam xattrValue,\n      final XAttrSetFlagParam xattrSetFlag,\n      final SnapshotNameParam snapshotName,\n      final OldSnapshotNameParam oldSnapshotName,\n      final ExcludeDatanodesParam exclDatanodes,\n      final CreateFlagParam createFlagParam,\n      final NoRedirectParam noredirectParam,\n      final StoragePolicyParam policyName,\n      final ECPolicyParam ecpolicy\n  ) throws IOException, URISyntaxException {\n\n    switch(op.getValue()) {\n    case CREATE:\n    {\n      final Router router \u003d getRouter();\n      final URI uri \u003d redirectURI(router, fullpath);\n      if (!noredirectParam.getValue()) {\n        return Response.temporaryRedirect(uri)\n            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n      } else {\n        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n      }\n    }\n    case MKDIRS:\n    case CREATESYMLINK:\n    case RENAME:\n    case SETREPLICATION:\n    case SETOWNER:\n    case SETPERMISSION:\n    case SETTIMES:\n    case RENEWDELEGATIONTOKEN:\n    case CANCELDELEGATIONTOKEN:\n    case MODIFYACLENTRIES:\n    case REMOVEACLENTRIES:\n    case REMOVEDEFAULTACL:\n    case REMOVEACL:\n    case SETACL:\n    case SETXATTR:\n    case REMOVEXATTR:\n    case ALLOWSNAPSHOT:\n    case CREATESNAPSHOT:\n    case RENAMESNAPSHOT:\n    case DISALLOWSNAPSHOT:\n    case SETSTORAGEPOLICY:\n    case ENABLEECPOLICY:\n    case DISABLEECPOLICY:\n    {\n      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n          destination, owner, group, permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, modificationTime,\n          accessTime, renameOptions, createParent, delegationTokenArgument,\n          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n          policyName, ecpolicy);\n    }\n    default:\n      throw new UnsupportedOperationException(op + \" is not supported\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
          "extendedDetails": {
            "oldValue": "[ugi-UserGroupInformation(modifiers-final), delegation-DelegationParam(modifiers-final), username-UserParam(modifiers-final), doAsUser-DoAsParam(modifiers-final), fullpath-String(modifiers-final), op-PutOpParam(modifiers-final), destination-DestinationParam(modifiers-final), owner-OwnerParam(modifiers-final), group-GroupParam(modifiers-final), permission-PermissionParam(modifiers-final), unmaskedPermission-UnmaskedPermissionParam(modifiers-final), overwrite-OverwriteParam(modifiers-final), bufferSize-BufferSizeParam(modifiers-final), replication-ReplicationParam(modifiers-final), blockSize-BlockSizeParam(modifiers-final), modificationTime-ModificationTimeParam(modifiers-final), accessTime-AccessTimeParam(modifiers-final), renameOptions-RenameOptionSetParam(modifiers-final), createParent-CreateParentParam(modifiers-final), delegationTokenArgument-TokenArgumentParam(modifiers-final), aclPermission-AclPermissionParam(modifiers-final), xattrName-XAttrNameParam(modifiers-final), xattrValue-XAttrValueParam(modifiers-final), xattrSetFlag-XAttrSetFlagParam(modifiers-final), snapshotName-SnapshotNameParam(modifiers-final), oldSnapshotName-OldSnapshotNameParam(modifiers-final), exclDatanodes-ExcludeDatanodesParam(modifiers-final), createFlagParam-CreateFlagParam(modifiers-final), noredirectParam-NoRedirectParam(modifiers-final), policyName-StoragePolicyParam(modifiers-final)]",
            "newValue": "[ugi-UserGroupInformation(modifiers-final), delegation-DelegationParam(modifiers-final), username-UserParam(modifiers-final), doAsUser-DoAsParam(modifiers-final), fullpath-String(modifiers-final), op-PutOpParam(modifiers-final), destination-DestinationParam(modifiers-final), owner-OwnerParam(modifiers-final), group-GroupParam(modifiers-final), permission-PermissionParam(modifiers-final), unmaskedPermission-UnmaskedPermissionParam(modifiers-final), overwrite-OverwriteParam(modifiers-final), bufferSize-BufferSizeParam(modifiers-final), replication-ReplicationParam(modifiers-final), blockSize-BlockSizeParam(modifiers-final), modificationTime-ModificationTimeParam(modifiers-final), accessTime-AccessTimeParam(modifiers-final), renameOptions-RenameOptionSetParam(modifiers-final), createParent-CreateParentParam(modifiers-final), delegationTokenArgument-TokenArgumentParam(modifiers-final), aclPermission-AclPermissionParam(modifiers-final), xattrName-XAttrNameParam(modifiers-final), xattrValue-XAttrValueParam(modifiers-final), xattrSetFlag-XAttrSetFlagParam(modifiers-final), snapshotName-SnapshotNameParam(modifiers-final), oldSnapshotName-OldSnapshotNameParam(modifiers-final), exclDatanodes-ExcludeDatanodesParam(modifiers-final), createFlagParam-CreateFlagParam(modifiers-final), noredirectParam-NoRedirectParam(modifiers-final), policyName-StoragePolicyParam(modifiers-final), ecpolicy-ECPolicyParam(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14064. WEBHDFS: Support Enable/Disable EC Policy. Contributed by Ayush Saxena.\n",
          "commitDate": "21/11/18 10:43 AM",
          "commitName": "892b33e054efdcfb6127f20b7468fb08b0e2b8aa",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "23/03/18 8:32 AM",
          "commitNameOld": "6e31a090842f8aeedb331b653b075499f8df6c60",
          "commitAuthorOld": "weiy",
          "daysBetweenCommits": 243.13,
          "commitsBetweenForRepo": 2422,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,81 +1,84 @@\n   protected Response put(\n       final UserGroupInformation ugi,\n       final DelegationParam delegation,\n       final UserParam username,\n       final DoAsParam doAsUser,\n       final String fullpath,\n       final PutOpParam op,\n       final DestinationParam destination,\n       final OwnerParam owner,\n       final GroupParam group,\n       final PermissionParam permission,\n       final UnmaskedPermissionParam unmaskedPermission,\n       final OverwriteParam overwrite,\n       final BufferSizeParam bufferSize,\n       final ReplicationParam replication,\n       final BlockSizeParam blockSize,\n       final ModificationTimeParam modificationTime,\n       final AccessTimeParam accessTime,\n       final RenameOptionSetParam renameOptions,\n       final CreateParentParam createParent,\n       final TokenArgumentParam delegationTokenArgument,\n       final AclPermissionParam aclPermission,\n       final XAttrNameParam xattrName,\n       final XAttrValueParam xattrValue,\n       final XAttrSetFlagParam xattrSetFlag,\n       final SnapshotNameParam snapshotName,\n       final OldSnapshotNameParam oldSnapshotName,\n       final ExcludeDatanodesParam exclDatanodes,\n       final CreateFlagParam createFlagParam,\n       final NoRedirectParam noredirectParam,\n-      final StoragePolicyParam policyName\n+      final StoragePolicyParam policyName,\n+      final ECPolicyParam ecpolicy\n   ) throws IOException, URISyntaxException {\n \n     switch(op.getValue()) {\n     case CREATE:\n     {\n       final Router router \u003d getRouter();\n       final URI uri \u003d redirectURI(router, fullpath);\n       if (!noredirectParam.getValue()) {\n         return Response.temporaryRedirect(uri)\n             .type(MediaType.APPLICATION_OCTET_STREAM).build();\n       } else {\n         final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n         return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n       }\n     }\n     case MKDIRS:\n     case CREATESYMLINK:\n     case RENAME:\n     case SETREPLICATION:\n     case SETOWNER:\n     case SETPERMISSION:\n     case SETTIMES:\n     case RENEWDELEGATIONTOKEN:\n     case CANCELDELEGATIONTOKEN:\n     case MODIFYACLENTRIES:\n     case REMOVEACLENTRIES:\n     case REMOVEDEFAULTACL:\n     case REMOVEACL:\n     case SETACL:\n     case SETXATTR:\n     case REMOVEXATTR:\n     case ALLOWSNAPSHOT:\n     case CREATESNAPSHOT:\n     case RENAMESNAPSHOT:\n     case DISALLOWSNAPSHOT:\n     case SETSTORAGEPOLICY:\n+    case ENABLEECPOLICY:\n+    case DISABLEECPOLICY:\n     {\n       // Whitelist operations that can handled by NamenodeWebHdfsMethods\n       return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n           destination, owner, group, permission, unmaskedPermission,\n           overwrite, bufferSize, replication, blockSize, modificationTime,\n           accessTime, renameOptions, createParent, delegationTokenArgument,\n           aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n           oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n-          policyName);\n+          policyName, ecpolicy);\n     }\n     default:\n       throw new UnsupportedOperationException(op + \" is not supported\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Response put(\n      final UserGroupInformation ugi,\n      final DelegationParam delegation,\n      final UserParam username,\n      final DoAsParam doAsUser,\n      final String fullpath,\n      final PutOpParam op,\n      final DestinationParam destination,\n      final OwnerParam owner,\n      final GroupParam group,\n      final PermissionParam permission,\n      final UnmaskedPermissionParam unmaskedPermission,\n      final OverwriteParam overwrite,\n      final BufferSizeParam bufferSize,\n      final ReplicationParam replication,\n      final BlockSizeParam blockSize,\n      final ModificationTimeParam modificationTime,\n      final AccessTimeParam accessTime,\n      final RenameOptionSetParam renameOptions,\n      final CreateParentParam createParent,\n      final TokenArgumentParam delegationTokenArgument,\n      final AclPermissionParam aclPermission,\n      final XAttrNameParam xattrName,\n      final XAttrValueParam xattrValue,\n      final XAttrSetFlagParam xattrSetFlag,\n      final SnapshotNameParam snapshotName,\n      final OldSnapshotNameParam oldSnapshotName,\n      final ExcludeDatanodesParam exclDatanodes,\n      final CreateFlagParam createFlagParam,\n      final NoRedirectParam noredirectParam,\n      final StoragePolicyParam policyName,\n      final ECPolicyParam ecpolicy\n  ) throws IOException, URISyntaxException {\n\n    switch(op.getValue()) {\n    case CREATE:\n    {\n      final Router router \u003d getRouter();\n      final URI uri \u003d redirectURI(router, fullpath);\n      if (!noredirectParam.getValue()) {\n        return Response.temporaryRedirect(uri)\n            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n      } else {\n        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n      }\n    }\n    case MKDIRS:\n    case CREATESYMLINK:\n    case RENAME:\n    case SETREPLICATION:\n    case SETOWNER:\n    case SETPERMISSION:\n    case SETTIMES:\n    case RENEWDELEGATIONTOKEN:\n    case CANCELDELEGATIONTOKEN:\n    case MODIFYACLENTRIES:\n    case REMOVEACLENTRIES:\n    case REMOVEDEFAULTACL:\n    case REMOVEACL:\n    case SETACL:\n    case SETXATTR:\n    case REMOVEXATTR:\n    case ALLOWSNAPSHOT:\n    case CREATESNAPSHOT:\n    case RENAMESNAPSHOT:\n    case DISALLOWSNAPSHOT:\n    case SETSTORAGEPOLICY:\n    case ENABLEECPOLICY:\n    case DISABLEECPOLICY:\n    {\n      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n          destination, owner, group, permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, modificationTime,\n          accessTime, renameOptions, createParent, delegationTokenArgument,\n          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n          policyName, ecpolicy);\n    }\n    default:\n      throw new UnsupportedOperationException(op + \" is not supported\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
          "extendedDetails": {}
        }
      ]
    },
    "6e31a090842f8aeedb331b653b075499f8df6c60": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12512. RBF: Add WebHDFS.\n",
      "commitDate": "23/03/18 8:32 AM",
      "commitName": "6e31a090842f8aeedb331b653b075499f8df6c60",
      "commitAuthor": "weiy",
      "diff": "@@ -0,0 +1,81 @@\n+  protected Response put(\n+      final UserGroupInformation ugi,\n+      final DelegationParam delegation,\n+      final UserParam username,\n+      final DoAsParam doAsUser,\n+      final String fullpath,\n+      final PutOpParam op,\n+      final DestinationParam destination,\n+      final OwnerParam owner,\n+      final GroupParam group,\n+      final PermissionParam permission,\n+      final UnmaskedPermissionParam unmaskedPermission,\n+      final OverwriteParam overwrite,\n+      final BufferSizeParam bufferSize,\n+      final ReplicationParam replication,\n+      final BlockSizeParam blockSize,\n+      final ModificationTimeParam modificationTime,\n+      final AccessTimeParam accessTime,\n+      final RenameOptionSetParam renameOptions,\n+      final CreateParentParam createParent,\n+      final TokenArgumentParam delegationTokenArgument,\n+      final AclPermissionParam aclPermission,\n+      final XAttrNameParam xattrName,\n+      final XAttrValueParam xattrValue,\n+      final XAttrSetFlagParam xattrSetFlag,\n+      final SnapshotNameParam snapshotName,\n+      final OldSnapshotNameParam oldSnapshotName,\n+      final ExcludeDatanodesParam exclDatanodes,\n+      final CreateFlagParam createFlagParam,\n+      final NoRedirectParam noredirectParam,\n+      final StoragePolicyParam policyName\n+  ) throws IOException, URISyntaxException {\n+\n+    switch(op.getValue()) {\n+    case CREATE:\n+    {\n+      final Router router \u003d getRouter();\n+      final URI uri \u003d redirectURI(router, fullpath);\n+      if (!noredirectParam.getValue()) {\n+        return Response.temporaryRedirect(uri)\n+            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n+      } else {\n+        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n+        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n+      }\n+    }\n+    case MKDIRS:\n+    case CREATESYMLINK:\n+    case RENAME:\n+    case SETREPLICATION:\n+    case SETOWNER:\n+    case SETPERMISSION:\n+    case SETTIMES:\n+    case RENEWDELEGATIONTOKEN:\n+    case CANCELDELEGATIONTOKEN:\n+    case MODIFYACLENTRIES:\n+    case REMOVEACLENTRIES:\n+    case REMOVEDEFAULTACL:\n+    case REMOVEACL:\n+    case SETACL:\n+    case SETXATTR:\n+    case REMOVEXATTR:\n+    case ALLOWSNAPSHOT:\n+    case CREATESNAPSHOT:\n+    case RENAMESNAPSHOT:\n+    case DISALLOWSNAPSHOT:\n+    case SETSTORAGEPOLICY:\n+    {\n+      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n+      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n+          destination, owner, group, permission, unmaskedPermission,\n+          overwrite, bufferSize, replication, blockSize, modificationTime,\n+          accessTime, renameOptions, createParent, delegationTokenArgument,\n+          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n+          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n+          policyName);\n+    }\n+    default:\n+      throw new UnsupportedOperationException(op + \" is not supported\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Response put(\n      final UserGroupInformation ugi,\n      final DelegationParam delegation,\n      final UserParam username,\n      final DoAsParam doAsUser,\n      final String fullpath,\n      final PutOpParam op,\n      final DestinationParam destination,\n      final OwnerParam owner,\n      final GroupParam group,\n      final PermissionParam permission,\n      final UnmaskedPermissionParam unmaskedPermission,\n      final OverwriteParam overwrite,\n      final BufferSizeParam bufferSize,\n      final ReplicationParam replication,\n      final BlockSizeParam blockSize,\n      final ModificationTimeParam modificationTime,\n      final AccessTimeParam accessTime,\n      final RenameOptionSetParam renameOptions,\n      final CreateParentParam createParent,\n      final TokenArgumentParam delegationTokenArgument,\n      final AclPermissionParam aclPermission,\n      final XAttrNameParam xattrName,\n      final XAttrValueParam xattrValue,\n      final XAttrSetFlagParam xattrSetFlag,\n      final SnapshotNameParam snapshotName,\n      final OldSnapshotNameParam oldSnapshotName,\n      final ExcludeDatanodesParam exclDatanodes,\n      final CreateFlagParam createFlagParam,\n      final NoRedirectParam noredirectParam,\n      final StoragePolicyParam policyName\n  ) throws IOException, URISyntaxException {\n\n    switch(op.getValue()) {\n    case CREATE:\n    {\n      final Router router \u003d getRouter();\n      final URI uri \u003d redirectURI(router, fullpath);\n      if (!noredirectParam.getValue()) {\n        return Response.temporaryRedirect(uri)\n            .type(MediaType.APPLICATION_OCTET_STREAM).build();\n      } else {\n        final String js \u003d JsonUtil.toJsonString(\"Location\", uri);\n        return Response.ok(js).type(MediaType.APPLICATION_JSON).build();\n      }\n    }\n    case MKDIRS:\n    case CREATESYMLINK:\n    case RENAME:\n    case SETREPLICATION:\n    case SETOWNER:\n    case SETPERMISSION:\n    case SETTIMES:\n    case RENEWDELEGATIONTOKEN:\n    case CANCELDELEGATIONTOKEN:\n    case MODIFYACLENTRIES:\n    case REMOVEACLENTRIES:\n    case REMOVEDEFAULTACL:\n    case REMOVEACL:\n    case SETACL:\n    case SETXATTR:\n    case REMOVEXATTR:\n    case ALLOWSNAPSHOT:\n    case CREATESNAPSHOT:\n    case RENAMESNAPSHOT:\n    case DISALLOWSNAPSHOT:\n    case SETSTORAGEPOLICY:\n    {\n      // Whitelist operations that can handled by NamenodeWebHdfsMethods\n      return super.put(ugi, delegation, username, doAsUser, fullpath, op,\n          destination, owner, group, permission, unmaskedPermission,\n          overwrite, bufferSize, replication, blockSize, modificationTime,\n          accessTime, renameOptions, createParent, delegationTokenArgument,\n          aclPermission, xattrName, xattrValue, xattrSetFlag, snapshotName,\n          oldSnapshotName, exclDatanodes, createFlagParam, noredirectParam,\n          policyName);\n    }\n    default:\n      throw new UnsupportedOperationException(op + \" is not supported\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java"
    }
  }
}