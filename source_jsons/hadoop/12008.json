{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "checkReplicaFiles",
  "functionId": "checkReplicaFiles___r-ReplicaInfo(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 2104,
  "functionEndLine": 2121,
  "numCommitsSeen": 230,
  "timeTaken": 9793,
  "changeHistory": [
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ybodychange",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "10/09/16 6:22 PM",
      "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n-    //check replica\u0027s file\n-    final File f \u003d r.getBlockFile();\n-    if (!f.exists()) {\n-      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n+    //check replica\u0027s data exists\n+    if (!r.blockDataExists()) {\n+      throw new FileNotFoundException(\"Block data not found, r\u003d\" + r);\n     }\n-    if (r.getBytesOnDisk() !\u003d f.length()) {\n-      throw new IOException(\"File length mismatched.  The length of \"\n-          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n+    if (r.getBytesOnDisk() !\u003d r.getBlockDataLength()) {\n+      throw new IOException(\"Block length mismatch, len\u003d\"\n+          + r.getBlockDataLength() + \" but r\u003d\" + r);\n     }\n \n     //check replica\u0027s meta file\n-    final File metafile \u003d FsDatasetUtil.getMetaFile(f, r.getGenerationStamp());\n-    if (!metafile.exists()) {\n-      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n+    if (!r.metadataExists()) {\n+      throw new IOException(r.getMetadataURI() + \" does not exist, r\u003d\" + r);\n     }\n-    if (metafile.length() \u003d\u003d 0) {\n-      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n+    if (r.getMetadataLength() \u003d\u003d 0) {\n+      throw new IOException(\"Metafile is empty, r\u003d\" + r);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n    //check replica\u0027s data exists\n    if (!r.blockDataExists()) {\n      throw new FileNotFoundException(\"Block data not found, r\u003d\" + r);\n    }\n    if (r.getBytesOnDisk() !\u003d r.getBlockDataLength()) {\n      throw new IOException(\"Block length mismatch, len\u003d\"\n          + r.getBlockDataLength() + \" but r\u003d\" + r);\n    }\n\n    //check replica\u0027s meta file\n    if (!r.metadataExists()) {\n      throw new IOException(r.getMetadataURI() + \" does not exist, r\u003d\" + r);\n    }\n    if (r.getMetadataLength() \u003d\u003d 0) {\n      throw new IOException(\"Metafile is empty, r\u003d\" + r);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n     //check replica\u0027s file\n     final File f \u003d r.getBlockFile();\n     if (!f.exists()) {\n       throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n     }\n     if (r.getBytesOnDisk() !\u003d f.length()) {\n       throw new IOException(\"File length mismatched.  The length of \"\n           + f + \" is \" + f.length() + \" but r\u003d\" + r);\n     }\n \n     //check replica\u0027s meta file\n-    final File metafile \u003d DatanodeUtil.getMetaFile(f, r.getGenerationStamp());\n+    final File metafile \u003d FsDatasetUtil.getMetaFile(f, r.getGenerationStamp());\n     if (!metafile.exists()) {\n       throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n     }\n     if (metafile.length() \u003d\u003d 0) {\n       throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n    //check replica\u0027s file\n    final File f \u003d r.getBlockFile();\n    if (!f.exists()) {\n      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n    }\n    if (r.getBytesOnDisk() !\u003d f.length()) {\n      throw new IOException(\"File length mismatched.  The length of \"\n          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n    }\n\n    //check replica\u0027s meta file\n    final File metafile \u003d FsDatasetUtil.getMetaFile(f, r.getGenerationStamp());\n    if (!metafile.exists()) {\n      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n    }\n    if (metafile.length() \u003d\u003d 0) {\n      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
            "oldMethodName": "checkReplicaFiles",
            "newMethodName": "checkReplicaFiles"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n     //check replica\u0027s file\n     final File f \u003d r.getBlockFile();\n     if (!f.exists()) {\n       throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n     }\n     if (r.getBytesOnDisk() !\u003d f.length()) {\n       throw new IOException(\"File length mismatched.  The length of \"\n           + f + \" is \" + f.length() + \" but r\u003d\" + r);\n     }\n \n     //check replica\u0027s meta file\n-    final File metafile \u003d DatanodeUtil.getMetaFile(f, r.getGenerationStamp());\n+    final File metafile \u003d FsDatasetUtil.getMetaFile(f, r.getGenerationStamp());\n     if (!metafile.exists()) {\n       throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n     }\n     if (metafile.length() \u003d\u003d 0) {\n       throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n    //check replica\u0027s file\n    final File f \u003d r.getBlockFile();\n    if (!f.exists()) {\n      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n    }\n    if (r.getBytesOnDisk() !\u003d f.length()) {\n      throw new IOException(\"File length mismatched.  The length of \"\n          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n    }\n\n    //check replica\u0027s meta file\n    final File metafile \u003d FsDatasetUtil.getMetaFile(f, r.getGenerationStamp());\n    if (!metafile.exists()) {\n      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n    }\n    if (metafile.length() \u003d\u003d 0) {\n      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2887. FSVolume, is a part of FSDatasetInterface implementation, should not be referred outside FSDataset.  A new FSVolumeInterface is defined.  The BlockVolumeChoosingPolicy.chooseVolume(..) method signature is also updated.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1242087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/02/12 12:58 PM",
      "commitName": "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "02/02/12 11:26 PM",
      "commitNameOld": "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.56,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n     //check replica\u0027s file\n     final File f \u003d r.getBlockFile();\n     if (!f.exists()) {\n       throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n     }\n     if (r.getBytesOnDisk() !\u003d f.length()) {\n       throw new IOException(\"File length mismatched.  The length of \"\n           + f + \" is \" + f.length() + \" but r\u003d\" + r);\n     }\n \n     //check replica\u0027s meta file\n-    final File metafile \u003d getMetaFile(f, r.getGenerationStamp());\n+    final File metafile \u003d DatanodeUtil.getMetaFile(f, r.getGenerationStamp());\n     if (!metafile.exists()) {\n       throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n     }\n     if (metafile.length() \u003d\u003d 0) {\n       throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n    //check replica\u0027s file\n    final File f \u003d r.getBlockFile();\n    if (!f.exists()) {\n      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n    }\n    if (r.getBytesOnDisk() !\u003d f.length()) {\n      throw new IOException(\"File length mismatched.  The length of \"\n          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n    }\n\n    //check replica\u0027s meta file\n    final File metafile \u003d DatanodeUtil.getMetaFile(f, r.getGenerationStamp());\n    if (!metafile.exists()) {\n      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n    }\n    if (metafile.length() \u003d\u003d 0) {\n      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n    //check replica\u0027s file\n    final File f \u003d r.getBlockFile();\n    if (!f.exists()) {\n      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n    }\n    if (r.getBytesOnDisk() !\u003d f.length()) {\n      throw new IOException(\"File length mismatched.  The length of \"\n          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n    }\n\n    //check replica\u0027s meta file\n    final File metafile \u003d getMetaFile(f, r.getGenerationStamp());\n    if (!metafile.exists()) {\n      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n    }\n    if (metafile.length() \u003d\u003d 0) {\n      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n    //check replica\u0027s file\n    final File f \u003d r.getBlockFile();\n    if (!f.exists()) {\n      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n    }\n    if (r.getBytesOnDisk() !\u003d f.length()) {\n      throw new IOException(\"File length mismatched.  The length of \"\n          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n    }\n\n    //check replica\u0027s meta file\n    final File metafile \u003d getMetaFile(f, r.getGenerationStamp());\n    if (!metafile.exists()) {\n      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n    }\n    if (metafile.length() \u003d\u003d 0) {\n      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n+    //check replica\u0027s file\n+    final File f \u003d r.getBlockFile();\n+    if (!f.exists()) {\n+      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n+    }\n+    if (r.getBytesOnDisk() !\u003d f.length()) {\n+      throw new IOException(\"File length mismatched.  The length of \"\n+          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n+    }\n+\n+    //check replica\u0027s meta file\n+    final File metafile \u003d getMetaFile(f, r.getGenerationStamp());\n+    if (!metafile.exists()) {\n+      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n+    }\n+    if (metafile.length() \u003d\u003d 0) {\n+      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkReplicaFiles(final ReplicaInfo r) throws IOException {\n    //check replica\u0027s file\n    final File f \u003d r.getBlockFile();\n    if (!f.exists()) {\n      throw new FileNotFoundException(\"File \" + f + \" not found, r\u003d\" + r);\n    }\n    if (r.getBytesOnDisk() !\u003d f.length()) {\n      throw new IOException(\"File length mismatched.  The length of \"\n          + f + \" is \" + f.length() + \" but r\u003d\" + r);\n    }\n\n    //check replica\u0027s meta file\n    final File metafile \u003d getMetaFile(f, r.getGenerationStamp());\n    if (!metafile.exists()) {\n      throw new IOException(\"Metafile \" + metafile + \" does not exist, r\u003d\" + r);\n    }\n    if (metafile.length() \u003d\u003d 0) {\n      throw new IOException(\"Metafile \" + metafile + \" is empty, r\u003d\" + r);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
    }
  }
}