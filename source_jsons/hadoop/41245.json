{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPreemptionThread.java",
  "functionName": "addContainer",
  "functionId": "addContainer___container-RMContainer__appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
  "functionStartLine": 315,
  "functionEndLine": 329,
  "numCommitsSeen": 21,
  "timeTaken": 2805,
  "changeHistory": [
    "2bde3aedf139368fc71f053d8dd6580b498ff46d",
    "abedb8a9d86b4593a37fd3d2313fbcb057c7846a"
  ],
  "changeHistoryShort": {
    "2bde3aedf139368fc71f053d8dd6580b498ff46d": "Ymultichange(Yparameterchange,Ybodychange)",
    "abedb8a9d86b4593a37fd3d2313fbcb057c7846a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2bde3aedf139368fc71f053d8dd6580b498ff46d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7290. Method canContainerBePreempted can return true when it shouldn\u0027t. (Contributed by Steven Rand)\n",
      "commitDate": "24/11/17 11:32 PM",
      "commitName": "2bde3aedf139368fc71f053d8dd6580b498ff46d",
      "commitAuthor": "Yufei Gu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7290. Method canContainerBePreempted can return true when it shouldn\u0027t. (Contributed by Steven Rand)\n",
          "commitDate": "24/11/17 11:32 PM",
          "commitName": "2bde3aedf139368fc71f053d8dd6580b498ff46d",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "27/07/17 11:19 PM",
          "commitNameOld": "9902be72cbf7a170caa5cb1f13c227d881a39064",
          "commitAuthorOld": "Yufei Gu",
          "daysBetweenCommits": 120.05,
          "commitsBetweenForRepo": 1058,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-    private boolean addContainer(RMContainer container) {\n+    private boolean addContainer(RMContainer container, ApplicationId appId) {\n       if (container.isAMContainer()) {\n         numAMContainers++;\n         if (numAMContainers \u003e\u003d maxAMContainers) {\n           return false;\n         }\n       }\n \n-      containers.add(container);\n+      if (!containersByApp.containsKey(appId)) {\n+        containersByApp.put(appId, new ArrayList\u003c\u003e());\n+      }\n+\n+      containersByApp.get(appId).add(container);\n       return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean addContainer(RMContainer container, ApplicationId appId) {\n      if (container.isAMContainer()) {\n        numAMContainers++;\n        if (numAMContainers \u003e\u003d maxAMContainers) {\n          return false;\n        }\n      }\n\n      if (!containersByApp.containsKey(appId)) {\n        containersByApp.put(appId, new ArrayList\u003c\u003e());\n      }\n\n      containersByApp.get(appId).add(container);\n      return true;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
          "extendedDetails": {
            "oldValue": "[container-RMContainer]",
            "newValue": "[container-RMContainer, appId-ApplicationId]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7290. Method canContainerBePreempted can return true when it shouldn\u0027t. (Contributed by Steven Rand)\n",
          "commitDate": "24/11/17 11:32 PM",
          "commitName": "2bde3aedf139368fc71f053d8dd6580b498ff46d",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "27/07/17 11:19 PM",
          "commitNameOld": "9902be72cbf7a170caa5cb1f13c227d881a39064",
          "commitAuthorOld": "Yufei Gu",
          "daysBetweenCommits": 120.05,
          "commitsBetweenForRepo": 1058,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-    private boolean addContainer(RMContainer container) {\n+    private boolean addContainer(RMContainer container, ApplicationId appId) {\n       if (container.isAMContainer()) {\n         numAMContainers++;\n         if (numAMContainers \u003e\u003d maxAMContainers) {\n           return false;\n         }\n       }\n \n-      containers.add(container);\n+      if (!containersByApp.containsKey(appId)) {\n+        containersByApp.put(appId, new ArrayList\u003c\u003e());\n+      }\n+\n+      containersByApp.get(appId).add(container);\n       return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean addContainer(RMContainer container, ApplicationId appId) {\n      if (container.isAMContainer()) {\n        numAMContainers++;\n        if (numAMContainers \u003e\u003d maxAMContainers) {\n          return false;\n        }\n      }\n\n      if (!containersByApp.containsKey(appId)) {\n        containersByApp.put(appId, new ArrayList\u003c\u003e());\n      }\n\n      containersByApp.get(appId).add(container);\n      return true;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
          "extendedDetails": {}
        }
      ]
    },
    "abedb8a9d86b4593a37fd3d2313fbcb057c7846a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5830. FairScheduler: Avoid preempting AM containers. (Yufei Gu via kasha)\n",
      "commitDate": "25/01/17 12:17 PM",
      "commitName": "abedb8a9d86b4593a37fd3d2313fbcb057c7846a",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,11 @@\n+    private boolean addContainer(RMContainer container) {\n+      if (container.isAMContainer()) {\n+        numAMContainers++;\n+        if (numAMContainers \u003e\u003d maxAMContainers) {\n+          return false;\n+        }\n+      }\n+\n+      containers.add(container);\n+      return true;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean addContainer(RMContainer container) {\n      if (container.isAMContainer()) {\n        numAMContainers++;\n        if (numAMContainers \u003e\u003d maxAMContainers) {\n          return false;\n        }\n      }\n\n      containers.add(container);\n      return true;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java"
    }
  }
}