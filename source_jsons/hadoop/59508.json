{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationRequestPBImpl.java",
  "functionName": "addLocalResourcesToProto",
  "functionId": "addLocalResourcesToProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/ResourceLocalizationRequestPBImpl.java",
  "functionStartLine": 81,
  "functionEndLine": 115,
  "numCommitsSeen": 2,
  "timeTaken": 834,
  "changeHistory": [
    "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d"
  ],
  "changeHistoryShort": {
    "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5557. Add localize API to the ContainerManagementProtocol. Contributed by Jian He.\n",
      "commitDate": "26/08/16 9:04 AM",
      "commitName": "9ef632f3b0b0e0808116cd1c7482a205b7ebef7d",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,35 @@\n+  private void addLocalResourcesToProto() {\n+    maybeInitBuilder();\n+    builder.clearLocalResources();\n+    if (localResources \u003d\u003d null) {\n+      return;\n+    }\n+    Iterable\u003cYarnProtos.StringLocalResourceMapProto\u003e iterable \u003d\n+        new Iterable\u003cYarnProtos.StringLocalResourceMapProto\u003e() {\n+\n+          @Override\n+          public Iterator\u003cYarnProtos.StringLocalResourceMapProto\u003e iterator() {\n+            return new Iterator\u003cYarnProtos.StringLocalResourceMapProto\u003e() {\n+\n+              Iterator\u003cString\u003e keyIter \u003d localResources.keySet().iterator();\n+\n+              @Override public void remove() {\n+                throw new UnsupportedOperationException();\n+              }\n+\n+              @Override public YarnProtos.StringLocalResourceMapProto next() {\n+                String key \u003d keyIter.next();\n+                return YarnProtos.StringLocalResourceMapProto.newBuilder()\n+                    .setKey(key).\n+                        setValue(convertToProtoFormat(localResources.get(key)))\n+                    .build();\n+              }\n+\n+              @Override public boolean hasNext() {\n+                return keyIter.hasNext();\n+              }\n+            };\n+          }\n+        };\n+    builder.addAllLocalResources(iterable);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addLocalResourcesToProto() {\n    maybeInitBuilder();\n    builder.clearLocalResources();\n    if (localResources \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cYarnProtos.StringLocalResourceMapProto\u003e iterable \u003d\n        new Iterable\u003cYarnProtos.StringLocalResourceMapProto\u003e() {\n\n          @Override\n          public Iterator\u003cYarnProtos.StringLocalResourceMapProto\u003e iterator() {\n            return new Iterator\u003cYarnProtos.StringLocalResourceMapProto\u003e() {\n\n              Iterator\u003cString\u003e keyIter \u003d localResources.keySet().iterator();\n\n              @Override public void remove() {\n                throw new UnsupportedOperationException();\n              }\n\n              @Override public YarnProtos.StringLocalResourceMapProto next() {\n                String key \u003d keyIter.next();\n                return YarnProtos.StringLocalResourceMapProto.newBuilder()\n                    .setKey(key).\n                        setValue(convertToProtoFormat(localResources.get(key)))\n                    .build();\n              }\n\n              @Override public boolean hasNext() {\n                return keyIter.hasNext();\n              }\n            };\n          }\n        };\n    builder.addAllLocalResources(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/ResourceLocalizationRequestPBImpl.java"
    }
  }
}