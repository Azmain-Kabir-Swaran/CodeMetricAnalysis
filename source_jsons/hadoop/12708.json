{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InMemoryAliasMap.java",
  "functionName": "init",
  "functionId": "init___conf-Configuration__blockPoolID-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryAliasMap.java",
  "functionStartLine": 92,
  "functionEndLine": 120,
  "numCommitsSeen": 10,
  "timeTaken": 2285,
  "changeHistory": [
    "8fc0d04517912766a3102f3e611f7d0fabd2f815",
    "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
    "352f994b6484524cdcfcda021046c59905b62f31"
  ],
  "changeHistoryShort": {
    "8fc0d04517912766a3102f3e611f7d0fabd2f815": "Ybodychange",
    "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7": "Ymultichange(Yparameterchange,Ybodychange)",
    "352f994b6484524cdcfcda021046c59905b62f31": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8fc0d04517912766a3102f3e611f7d0fabd2f815": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14001. [PROVIDED Storage] bootstrapStandby should manage the InMemoryAliasMap. Contributed by Virajith Jalaparti.\n",
      "commitDate": "07/12/18 6:30 PM",
      "commitName": "8fc0d04517912766a3102f3e611f7d0fabd2f815",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 357.03,
      "commitsBetweenForRepo": 3219,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,29 @@\n   public static @Nonnull InMemoryAliasMap init(Configuration conf,\n       String blockPoolID) throws IOException {\n     Options options \u003d new Options();\n     options.createIfMissing(true);\n     String directory \u003d\n         conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n-    LOG.info(\"Attempting to load InMemoryAliasMap from \\\"{}\\\"\", directory);\n+    if (directory \u003d\u003d null) {\n+      throw new IOException(\"InMemoryAliasMap location is null\");\n+    }\n     File levelDBpath;\n     if (blockPoolID !\u003d null) {\n       levelDBpath \u003d new File(directory, blockPoolID);\n     } else {\n       levelDBpath \u003d new File(directory);\n     }\n     if (!levelDBpath.exists()) {\n-      String error \u003d createPathErrorMessage(directory);\n-      throw new IOException(error);\n+      LOG.warn(\"InMemoryAliasMap location {} is missing. Creating it.\",\n+          levelDBpath);\n+      if(!levelDBpath.mkdirs()) {\n+        throw new IOException(\n+            \"Unable to create missing aliasmap location: \" + levelDBpath);\n+      }\n     }\n     DB levelDb \u003d JniDBFactory.factory.open(levelDBpath, options);\n-    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb, blockPoolID);\n+    InMemoryAliasMap aliasMap \u003d  new InMemoryAliasMap(levelDBpath.toURI(),\n+        levelDb, blockPoolID);\n     aliasMap.setConf(conf);\n     return aliasMap;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static @Nonnull InMemoryAliasMap init(Configuration conf,\n      String blockPoolID) throws IOException {\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    String directory \u003d\n        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n    if (directory \u003d\u003d null) {\n      throw new IOException(\"InMemoryAliasMap location is null\");\n    }\n    File levelDBpath;\n    if (blockPoolID !\u003d null) {\n      levelDBpath \u003d new File(directory, blockPoolID);\n    } else {\n      levelDBpath \u003d new File(directory);\n    }\n    if (!levelDBpath.exists()) {\n      LOG.warn(\"InMemoryAliasMap location {} is missing. Creating it.\",\n          levelDBpath);\n      if(!levelDBpath.mkdirs()) {\n        throw new IOException(\n            \"Unable to create missing aliasmap location: \" + levelDBpath);\n      }\n    }\n    DB levelDb \u003d JniDBFactory.factory.open(levelDBpath, options);\n    InMemoryAliasMap aliasMap \u003d  new InMemoryAliasMap(levelDBpath.toURI(),\n        levelDb, blockPoolID);\n    aliasMap.setConf(conf);\n    return aliasMap;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryAliasMap.java",
      "extendedDetails": {}
    },
    "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12912. [READ] Fix configuration and implementation of LevelDB-based alias maps\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
      "commitAuthor": "Virajith Jalaparti",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12912. [READ] Fix configuration and implementation of LevelDB-based alias maps\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "15/12/17 5:51 PM",
          "commitNameOld": "9c35be86e17021202823bfd3c2067ff3b312ce5c",
          "commitAuthorOld": "Virajith Jalaparti",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  public static @Nonnull InMemoryAliasMap init(Configuration conf)\n-      throws IOException {\n+  public static @Nonnull InMemoryAliasMap init(Configuration conf,\n+      String blockPoolID) throws IOException {\n     Options options \u003d new Options();\n     options.createIfMissing(true);\n     String directory \u003d\n         conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n     LOG.info(\"Attempting to load InMemoryAliasMap from \\\"{}\\\"\", directory);\n-    File path \u003d new File(directory);\n-    if (!path.exists()) {\n+    File levelDBpath;\n+    if (blockPoolID !\u003d null) {\n+      levelDBpath \u003d new File(directory, blockPoolID);\n+    } else {\n+      levelDBpath \u003d new File(directory);\n+    }\n+    if (!levelDBpath.exists()) {\n       String error \u003d createPathErrorMessage(directory);\n       throw new IOException(error);\n     }\n-    DB levelDb \u003d JniDBFactory.factory.open(path, options);\n-    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb);\n+    DB levelDb \u003d JniDBFactory.factory.open(levelDBpath, options);\n+    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb, blockPoolID);\n     aliasMap.setConf(conf);\n     return aliasMap;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static @Nonnull InMemoryAliasMap init(Configuration conf,\n      String blockPoolID) throws IOException {\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    String directory \u003d\n        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n    LOG.info(\"Attempting to load InMemoryAliasMap from \\\"{}\\\"\", directory);\n    File levelDBpath;\n    if (blockPoolID !\u003d null) {\n      levelDBpath \u003d new File(directory, blockPoolID);\n    } else {\n      levelDBpath \u003d new File(directory);\n    }\n    if (!levelDBpath.exists()) {\n      String error \u003d createPathErrorMessage(directory);\n      throw new IOException(error);\n    }\n    DB levelDb \u003d JniDBFactory.factory.open(levelDBpath, options);\n    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb, blockPoolID);\n    aliasMap.setConf(conf);\n    return aliasMap;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryAliasMap.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[conf-Configuration, blockPoolID-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12912. [READ] Fix configuration and implementation of LevelDB-based alias maps\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "15/12/17 5:51 PM",
          "commitNameOld": "9c35be86e17021202823bfd3c2067ff3b312ce5c",
          "commitAuthorOld": "Virajith Jalaparti",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  public static @Nonnull InMemoryAliasMap init(Configuration conf)\n-      throws IOException {\n+  public static @Nonnull InMemoryAliasMap init(Configuration conf,\n+      String blockPoolID) throws IOException {\n     Options options \u003d new Options();\n     options.createIfMissing(true);\n     String directory \u003d\n         conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n     LOG.info(\"Attempting to load InMemoryAliasMap from \\\"{}\\\"\", directory);\n-    File path \u003d new File(directory);\n-    if (!path.exists()) {\n+    File levelDBpath;\n+    if (blockPoolID !\u003d null) {\n+      levelDBpath \u003d new File(directory, blockPoolID);\n+    } else {\n+      levelDBpath \u003d new File(directory);\n+    }\n+    if (!levelDBpath.exists()) {\n       String error \u003d createPathErrorMessage(directory);\n       throw new IOException(error);\n     }\n-    DB levelDb \u003d JniDBFactory.factory.open(path, options);\n-    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb);\n+    DB levelDb \u003d JniDBFactory.factory.open(levelDBpath, options);\n+    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb, blockPoolID);\n     aliasMap.setConf(conf);\n     return aliasMap;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static @Nonnull InMemoryAliasMap init(Configuration conf,\n      String blockPoolID) throws IOException {\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    String directory \u003d\n        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n    LOG.info(\"Attempting to load InMemoryAliasMap from \\\"{}\\\"\", directory);\n    File levelDBpath;\n    if (blockPoolID !\u003d null) {\n      levelDBpath \u003d new File(directory, blockPoolID);\n    } else {\n      levelDBpath \u003d new File(directory);\n    }\n    if (!levelDBpath.exists()) {\n      String error \u003d createPathErrorMessage(directory);\n      throw new IOException(error);\n    }\n    DB levelDb \u003d JniDBFactory.factory.open(levelDBpath, options);\n    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb, blockPoolID);\n    aliasMap.setConf(conf);\n    return aliasMap;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryAliasMap.java",
          "extendedDetails": {}
        }
      ]
    },
    "352f994b6484524cdcfcda021046c59905b62f31": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12665. [AliasMap] Create a version of the AliasMap that runs in memory in the Namenode (leveldb). Contributed by Ewan Higgs.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "352f994b6484524cdcfcda021046c59905b62f31",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,17 @@\n+  public static @Nonnull InMemoryAliasMap init(Configuration conf)\n+      throws IOException {\n+    Options options \u003d new Options();\n+    options.createIfMissing(true);\n+    String directory \u003d\n+        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n+    LOG.info(\"Attempting to load InMemoryAliasMap from \\\"{}\\\"\", directory);\n+    File path \u003d new File(directory);\n+    if (!path.exists()) {\n+      String error \u003d createPathErrorMessage(directory);\n+      throw new IOException(error);\n+    }\n+    DB levelDb \u003d JniDBFactory.factory.open(path, options);\n+    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb);\n+    aliasMap.setConf(conf);\n+    return aliasMap;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static @Nonnull InMemoryAliasMap init(Configuration conf)\n      throws IOException {\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    String directory \u003d\n        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_LEVELDB_DIR);\n    LOG.info(\"Attempting to load InMemoryAliasMap from \\\"{}\\\"\", directory);\n    File path \u003d new File(directory);\n    if (!path.exists()) {\n      String error \u003d createPathErrorMessage(directory);\n      throw new IOException(error);\n    }\n    DB levelDb \u003d JniDBFactory.factory.open(path, options);\n    InMemoryAliasMap aliasMap \u003d new InMemoryAliasMap(levelDb);\n    aliasMap.setConf(conf);\n    return aliasMap;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryAliasMap.java"
    }
  }
}