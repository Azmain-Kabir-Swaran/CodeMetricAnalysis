{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObserverReadProxyProvider.java",
  "functionName": "getProxy",
  "functionId": "getProxy",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
  "functionStartLine": 232,
  "functionEndLine": 234,
  "numCommitsSeen": 24,
  "timeTaken": 1836,
  "changeHistory": [
    "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847",
    "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a",
    "64b7cf59bde66bc58f67d2c3a97324ef679fb60a"
  ],
  "changeHistoryShort": {
    "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847": "Ymultichange(Ymodifierchange,Ybodychange)",
    "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a": "Ybodychange",
    "64b7cf59bde66bc58f67d2c3a97324ef679fb60a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-13779. [SBN read] Implement proper failover and observer failure handling logic for for ObserverReadProxyProvider. Contributed by Erik Krogen.\n",
      "commitDate": "24/12/18 9:34 AM",
      "commitName": "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847",
      "commitAuthor": "Erik Krogen",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-13779. [SBN read] Implement proper failover and observer failure handling logic for for ObserverReadProxyProvider. Contributed by Erik Krogen.\n",
          "commitDate": "24/12/18 9:34 AM",
          "commitName": "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "24/12/18 9:34 AM",
          "commitNameOld": "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,3 @@\n-  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n-    // We just create a wrapped proxy containing all the proxies\n-    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n-\n-    for (int i \u003d 0; i \u003c this.observerProxies.size(); i++) {\n-      if (i \u003e 0) {\n-        combinedInfo.append(\",\");\n-      }\n-      combinedInfo.append(observerProxies.get(i).proxyInfo);\n-    }\n-\n-    combinedInfo.append(\u0027]\u0027);\n-    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n-        ObserverReadInvocationHandler.class.getClassLoader(),\n-        new Class\u003c?\u003e[]{xface},\n-        new ObserverReadInvocationHandler(observerProxies));\n-    return new ProxyInfo\u003c\u003e(wrappedProxy, combinedInfo.toString());\n+  public ProxyInfo\u003cT\u003e getProxy() {\n+    return combinedProxy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ProxyInfo\u003cT\u003e getProxy() {\n    return combinedProxy;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13779. [SBN read] Implement proper failover and observer failure handling logic for for ObserverReadProxyProvider. Contributed by Erik Krogen.\n",
          "commitDate": "24/12/18 9:34 AM",
          "commitName": "aa42fb0db78454e5cadc2df7b6fdaa8d913ae847",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "24/12/18 9:34 AM",
          "commitNameOld": "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,3 @@\n-  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n-    // We just create a wrapped proxy containing all the proxies\n-    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n-\n-    for (int i \u003d 0; i \u003c this.observerProxies.size(); i++) {\n-      if (i \u003e 0) {\n-        combinedInfo.append(\",\");\n-      }\n-      combinedInfo.append(observerProxies.get(i).proxyInfo);\n-    }\n-\n-    combinedInfo.append(\u0027]\u0027);\n-    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n-        ObserverReadInvocationHandler.class.getClassLoader(),\n-        new Class\u003c?\u003e[]{xface},\n-        new ObserverReadInvocationHandler(observerProxies));\n-    return new ProxyInfo\u003c\u003e(wrappedProxy, combinedInfo.toString());\n+  public ProxyInfo\u003cT\u003e getProxy() {\n+    return combinedProxy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ProxyInfo\u003cT\u003e getProxy() {\n    return combinedProxy;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13782. ObserverReadProxyProvider should work with IPFailoverProxyProvider. Contributed by Konstantin Shvachko.",
      "commitDate": "24/12/18 9:34 AM",
      "commitName": "f9fc01cd7fef2fab1a6f696653b5de1d821b4d2a",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "24/12/18 9:34 AM",
      "commitNameOld": "25d8e39b5c7477338344a8d9aadd100cd08cd9a5",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,18 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     // We just create a wrapped proxy containing all the proxies\n-    List\u003cProxyInfo\u003cT\u003e\u003e observerProxies \u003d new ArrayList\u003c\u003e();\n     StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n \n     for (int i \u003d 0; i \u003c this.observerProxies.size(); i++) {\n       if (i \u003e 0) {\n         combinedInfo.append(\",\");\n       }\n-      AddressRpcProxyPair\u003cT\u003e p \u003d this.observerProxies.get(i);\n-      ProxyInfo\u003cT\u003e pInfo \u003d getProxy(p);\n-      observerProxies.add(pInfo);\n-      combinedInfo.append(pInfo.proxyInfo);\n+      combinedInfo.append(observerProxies.get(i).proxyInfo);\n     }\n \n     combinedInfo.append(\u0027]\u0027);\n     T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n         ObserverReadInvocationHandler.class.getClassLoader(),\n         new Class\u003c?\u003e[]{xface},\n         new ObserverReadInvocationHandler(observerProxies));\n     return new ProxyInfo\u003c\u003e(wrappedProxy, combinedInfo.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    // We just create a wrapped proxy containing all the proxies\n    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n\n    for (int i \u003d 0; i \u003c this.observerProxies.size(); i++) {\n      if (i \u003e 0) {\n        combinedInfo.append(\",\");\n      }\n      combinedInfo.append(observerProxies.get(i).proxyInfo);\n    }\n\n    combinedInfo.append(\u0027]\u0027);\n    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n        ObserverReadInvocationHandler.class.getClassLoader(),\n        new Class\u003c?\u003e[]{xface},\n        new ObserverReadInvocationHandler(observerProxies));\n    return new ProxyInfo\u003c\u003e(wrappedProxy, combinedInfo.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
      "extendedDetails": {}
    },
    "64b7cf59bde66bc58f67d2c3a97324ef679fb60a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12976. [SBN read] Introduce ObserverReadProxyProvider. Contributed by Chao Sun.",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "64b7cf59bde66bc58f67d2c3a97324ef679fb60a",
      "commitAuthor": "Chao Sun",
      "diff": "@@ -0,0 +1,22 @@\n+  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n+    // We just create a wrapped proxy containing all the proxies\n+    List\u003cProxyInfo\u003cT\u003e\u003e observerProxies \u003d new ArrayList\u003c\u003e();\n+    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n+\n+    for (int i \u003d 0; i \u003c this.observerProxies.size(); i++) {\n+      if (i \u003e 0) {\n+        combinedInfo.append(\",\");\n+      }\n+      AddressRpcProxyPair\u003cT\u003e p \u003d this.observerProxies.get(i);\n+      ProxyInfo\u003cT\u003e pInfo \u003d getProxy(p);\n+      observerProxies.add(pInfo);\n+      combinedInfo.append(pInfo.proxyInfo);\n+    }\n+\n+    combinedInfo.append(\u0027]\u0027);\n+    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n+        ObserverReadInvocationHandler.class.getClassLoader(),\n+        new Class\u003c?\u003e[]{xface},\n+        new ObserverReadInvocationHandler(observerProxies));\n+    return new ProxyInfo\u003c\u003e(wrappedProxy, combinedInfo.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    // We just create a wrapped proxy containing all the proxies\n    List\u003cProxyInfo\u003cT\u003e\u003e observerProxies \u003d new ArrayList\u003c\u003e();\n    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n\n    for (int i \u003d 0; i \u003c this.observerProxies.size(); i++) {\n      if (i \u003e 0) {\n        combinedInfo.append(\",\");\n      }\n      AddressRpcProxyPair\u003cT\u003e p \u003d this.observerProxies.get(i);\n      ProxyInfo\u003cT\u003e pInfo \u003d getProxy(p);\n      observerProxies.add(pInfo);\n      combinedInfo.append(pInfo.proxyInfo);\n    }\n\n    combinedInfo.append(\u0027]\u0027);\n    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n        ObserverReadInvocationHandler.class.getClassLoader(),\n        new Class\u003c?\u003e[]{xface},\n        new ObserverReadInvocationHandler(observerProxies));\n    return new ProxyInfo\u003c\u003e(wrappedProxy, combinedInfo.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java"
    }
  }
}