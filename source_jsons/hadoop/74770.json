{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKDelegationTokenSecretManager.java",
  "functionName": "cancelToken",
  "functionId": "cancelToken___token-Token__TokenIdent____canceller-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
  "functionStartLine": 870,
  "functionEndLine": 879,
  "numCommitsSeen": 16,
  "timeTaken": 1258,
  "changeHistory": [
    "ba75bc759334c8987e5f7dd4b21d025f0cccbde7",
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e"
  ],
  "changeHistoryShort": {
    "ba75bc759334c8987e5f7dd4b21d025f0cccbde7": "Ybodychange",
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ba75bc759334c8987e5f7dd4b21d025f0cccbde7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14044. Synchronization issue in delegation token cancel functionality. Contributed by Hrishikesh Gadre.\n",
      "commitDate": "03/02/17 5:13 PM",
      "commitName": "ba75bc759334c8987e5f7dd4b21d025f0cccbde7",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "22/08/16 2:42 PM",
      "commitNameOld": "f4d4d3474cfd2d1f2d243f5ae5cec17af38270b1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 165.15,
      "commitsBetweenForRepo": 1052,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,10 @@\n   public synchronized TokenIdent cancelToken(Token\u003cTokenIdent\u003e token,\n       String canceller) throws IOException {\n     ByteArrayInputStream buf \u003d new ByteArrayInputStream(token.getIdentifier());\n     DataInputStream in \u003d new DataInputStream(buf);\n     TokenIdent id \u003d createIdentifier();\n     id.readFields(in);\n-    try {\n-      if (!currentTokens.containsKey(id)) {\n-        // See if token can be retrieved and placed in currentTokens\n-        getTokenInfo(id);\n-      }\n-      return super.cancelToken(token, canceller);\n-    } catch (Exception e) {\n-      LOG.error(\"Exception while checking if token exist !!\", e);\n-      return id;\n-    }\n+\n+    syncLocalCacheWithZk(id);\n+    return super.cancelToken(token, canceller);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized TokenIdent cancelToken(Token\u003cTokenIdent\u003e token,\n      String canceller) throws IOException {\n    ByteArrayInputStream buf \u003d new ByteArrayInputStream(token.getIdentifier());\n    DataInputStream in \u003d new DataInputStream(buf);\n    TokenIdent id \u003d createIdentifier();\n    id.readFields(in);\n\n    syncLocalCacheWithZk(id);\n    return super.cancelToken(token, canceller);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11157. ZKDelegationTokenSecretManager never shuts down listenerThreadPool. Contributed by Arun Suresh.\n",
      "commitDate": "17/11/14 1:02 PM",
      "commitName": "bd8196e85e49d44de57237a59bcd7ceae4332c2e",
      "commitAuthor": "Aaron T. Myers",
      "diff": "@@ -0,0 +1,17 @@\n+  public synchronized TokenIdent cancelToken(Token\u003cTokenIdent\u003e token,\n+      String canceller) throws IOException {\n+    ByteArrayInputStream buf \u003d new ByteArrayInputStream(token.getIdentifier());\n+    DataInputStream in \u003d new DataInputStream(buf);\n+    TokenIdent id \u003d createIdentifier();\n+    id.readFields(in);\n+    try {\n+      if (!currentTokens.containsKey(id)) {\n+        // See if token can be retrieved and placed in currentTokens\n+        getTokenInfo(id);\n+      }\n+      return super.cancelToken(token, canceller);\n+    } catch (Exception e) {\n+      LOG.error(\"Exception while checking if token exist !!\", e);\n+      return id;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized TokenIdent cancelToken(Token\u003cTokenIdent\u003e token,\n      String canceller) throws IOException {\n    ByteArrayInputStream buf \u003d new ByteArrayInputStream(token.getIdentifier());\n    DataInputStream in \u003d new DataInputStream(buf);\n    TokenIdent id \u003d createIdentifier();\n    id.readFields(in);\n    try {\n      if (!currentTokens.containsKey(id)) {\n        // See if token can be retrieved and placed in currentTokens\n        getTokenInfo(id);\n      }\n      return super.cancelToken(token, canceller);\n    } catch (Exception e) {\n      LOG.error(\"Exception while checking if token exist !!\", e);\n      return id;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java"
    }
  }
}