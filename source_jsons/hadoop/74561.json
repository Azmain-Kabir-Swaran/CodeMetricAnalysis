{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Groups.java",
  "functionName": "parseStaticMapping",
  "functionId": "parseStaticMapping___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java",
  "functionStartLine": 165,
  "functionEndLine": 193,
  "numCommitsSeen": 18,
  "timeTaken": 1211,
  "changeHistory": [
    "94225152399e6e89fa7b4cff6d17d33e544329a3",
    "7f059104d293614f3250bd1408874e97f659c92b"
  ],
  "changeHistoryShort": {
    "94225152399e6e89fa7b4cff6d17d33e544329a3": "Ybodychange",
    "7f059104d293614f3250bd1408874e97f659c92b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "94225152399e6e89fa7b4cff6d17d33e544329a3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13442. Optimize UGI group lookups. Contributed by Daryn Sharp.\n",
      "commitDate": "04/08/16 8:45 AM",
      "commitName": "94225152399e6e89fa7b4cff6d17d33e544329a3",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "27/06/16 9:36 AM",
      "commitNameOld": "9683eab0e1ee42c159cf678254c464d97bc3ff57",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 37.97,
      "commitsBetweenForRepo": 353,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n   private void parseStaticMapping(Configuration conf) {\n     String staticMapping \u003d conf.get(\n         CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES,\n         CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES_DEFAULT);\n     Collection\u003cString\u003e mappings \u003d StringUtils.getStringCollection(\n         staticMapping, \";\");\n+    Map\u003cString, List\u003cString\u003e\u003e staticUserToGroupsMap \u003d\n+        new HashMap\u003cString, List\u003cString\u003e\u003e();\n     for (String users : mappings) {\n       Collection\u003cString\u003e userToGroups \u003d StringUtils.getStringCollection(users,\n           \"\u003d\");\n       if (userToGroups.size() \u003c 1 || userToGroups.size() \u003e 2) {\n         throw new HadoopIllegalArgumentException(\"Configuration \"\n             + CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES\n             + \" is invalid\");\n       }\n       String[] userToGroupsArray \u003d userToGroups.toArray(new String[userToGroups\n           .size()]);\n       String user \u003d userToGroupsArray[0];\n       List\u003cString\u003e groups \u003d Collections.emptyList();\n       if (userToGroupsArray.length \u003d\u003d 2) {\n         groups \u003d (List\u003cString\u003e) StringUtils\n             .getStringCollection(userToGroupsArray[1]);\n       }\n       staticUserToGroupsMap.put(user, groups);\n     }\n+    staticMapRef.set(\n+        staticUserToGroupsMap.isEmpty() ? null : staticUserToGroupsMap);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void parseStaticMapping(Configuration conf) {\n    String staticMapping \u003d conf.get(\n        CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES,\n        CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES_DEFAULT);\n    Collection\u003cString\u003e mappings \u003d StringUtils.getStringCollection(\n        staticMapping, \";\");\n    Map\u003cString, List\u003cString\u003e\u003e staticUserToGroupsMap \u003d\n        new HashMap\u003cString, List\u003cString\u003e\u003e();\n    for (String users : mappings) {\n      Collection\u003cString\u003e userToGroups \u003d StringUtils.getStringCollection(users,\n          \"\u003d\");\n      if (userToGroups.size() \u003c 1 || userToGroups.size() \u003e 2) {\n        throw new HadoopIllegalArgumentException(\"Configuration \"\n            + CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES\n            + \" is invalid\");\n      }\n      String[] userToGroupsArray \u003d userToGroups.toArray(new String[userToGroups\n          .size()]);\n      String user \u003d userToGroupsArray[0];\n      List\u003cString\u003e groups \u003d Collections.emptyList();\n      if (userToGroupsArray.length \u003d\u003d 2) {\n        groups \u003d (List\u003cString\u003e) StringUtils\n            .getStringCollection(userToGroupsArray[1]);\n      }\n      staticUserToGroupsMap.put(user, groups);\n    }\n    staticMapRef.set(\n        staticUserToGroupsMap.isEmpty() ? null : staticUserToGroupsMap);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java",
      "extendedDetails": {}
    },
    "7f059104d293614f3250bd1408874e97f659c92b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10142. Avoid groups lookup for unprivileged users such as dr.who (vinay via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548763 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/13 4:11 PM",
      "commitName": "7f059104d293614f3250bd1408874e97f659c92b",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,25 @@\n+  private void parseStaticMapping(Configuration conf) {\n+    String staticMapping \u003d conf.get(\n+        CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES,\n+        CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES_DEFAULT);\n+    Collection\u003cString\u003e mappings \u003d StringUtils.getStringCollection(\n+        staticMapping, \";\");\n+    for (String users : mappings) {\n+      Collection\u003cString\u003e userToGroups \u003d StringUtils.getStringCollection(users,\n+          \"\u003d\");\n+      if (userToGroups.size() \u003c 1 || userToGroups.size() \u003e 2) {\n+        throw new HadoopIllegalArgumentException(\"Configuration \"\n+            + CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES\n+            + \" is invalid\");\n+      }\n+      String[] userToGroupsArray \u003d userToGroups.toArray(new String[userToGroups\n+          .size()]);\n+      String user \u003d userToGroupsArray[0];\n+      List\u003cString\u003e groups \u003d Collections.emptyList();\n+      if (userToGroupsArray.length \u003d\u003d 2) {\n+        groups \u003d (List\u003cString\u003e) StringUtils\n+            .getStringCollection(userToGroupsArray[1]);\n+      }\n+      staticUserToGroupsMap.put(user, groups);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void parseStaticMapping(Configuration conf) {\n    String staticMapping \u003d conf.get(\n        CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES,\n        CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES_DEFAULT);\n    Collection\u003cString\u003e mappings \u003d StringUtils.getStringCollection(\n        staticMapping, \";\");\n    for (String users : mappings) {\n      Collection\u003cString\u003e userToGroups \u003d StringUtils.getStringCollection(users,\n          \"\u003d\");\n      if (userToGroups.size() \u003c 1 || userToGroups.size() \u003e 2) {\n        throw new HadoopIllegalArgumentException(\"Configuration \"\n            + CommonConfigurationKeys.HADOOP_USER_GROUP_STATIC_OVERRIDES\n            + \" is invalid\");\n      }\n      String[] userToGroupsArray \u003d userToGroups.toArray(new String[userToGroups\n          .size()]);\n      String user \u003d userToGroupsArray[0];\n      List\u003cString\u003e groups \u003d Collections.emptyList();\n      if (userToGroupsArray.length \u003d\u003d 2) {\n        groups \u003d (List\u003cString\u003e) StringUtils\n            .getStringCollection(userToGroupsArray[1]);\n      }\n      staticUserToGroupsMap.put(user, groups);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java"
    }
  }
}