{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AllContainersPage.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
  "functionStartLine": 80,
  "functionEndLine": 105,
  "numCommitsSeen": 11,
  "timeTaken": 7953,
  "changeHistory": [
    "05c347fe51c01494ed8110f8f116a01c90205f13",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "05c347fe51c01494ed8110f8f116a01c90205f13": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "05c347fe51c01494ed8110f8f116a01c90205f13": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7611. Node manager web UI should display container type in containers page. Contributed by Weiwei Yang.\n",
      "commitDate": "05/12/17 8:21 PM",
      "commitName": "05c347fe51c01494ed8110f8f116a01c90205f13",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 131.17,
      "commitsBetweenForRepo": 1115,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n         .table(\"#containers\")\n           .thead()\n             .tr()\n               .td().__(\"ContainerId\").__()\n+              .td().__(\"ExecutionType\").__()\n               .td().__(\"ContainerState\").__()\n               .td().__(\"logs\").__()\n             .__()\n           .__().tbody();\n       for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n           .getContainers().entrySet()) {\n         ContainerInfo info \u003d new ContainerInfo(this.nmContext, entry.getValue());\n         tableBody\n           .tr()\n             .td().a(url(\"container\", info.getId()), info.getId())\n             .__()\n+            .td().__(info.getExecutionType()).__()\n             .td().__(info.getState()).__()\n             .td()\n                 .a(url(info.getShortLogLink()), \"logs\").__()\n           .__();\n       }\n       tableBody.__().__().__();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n        .table(\"#containers\")\n          .thead()\n            .tr()\n              .td().__(\"ContainerId\").__()\n              .td().__(\"ExecutionType\").__()\n              .td().__(\"ContainerState\").__()\n              .td().__(\"logs\").__()\n            .__()\n          .__().tbody();\n      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n          .getContainers().entrySet()) {\n        ContainerInfo info \u003d new ContainerInfo(this.nmContext, entry.getValue());\n        tableBody\n          .tr()\n            .td().a(url(\"container\", info.getId()), info.getId())\n            .__()\n            .td().__(info.getExecutionType()).__()\n            .td().__(info.getState()).__()\n            .td()\n                .a(url(info.getShortLogLink()), \"logs\").__()\n          .__();\n      }\n      tableBody.__().__().__();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "03/12/15 12:48 PM",
      "commitNameOld": "9f77ccad735f4843ce2c38355de9f434838d4507",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 602.14,
      "commitsBetweenForRepo": 3792,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n         .table(\"#containers\")\n           .thead()\n             .tr()\n-              .td()._(\"ContainerId\")._()\n-              .td()._(\"ContainerState\")._()\n-              .td()._(\"logs\")._()\n-            ._()\n-          ._().tbody();\n+              .td().__(\"ContainerId\").__()\n+              .td().__(\"ContainerState\").__()\n+              .td().__(\"logs\").__()\n+            .__()\n+          .__().tbody();\n       for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n           .getContainers().entrySet()) {\n         ContainerInfo info \u003d new ContainerInfo(this.nmContext, entry.getValue());\n         tableBody\n           .tr()\n             .td().a(url(\"container\", info.getId()), info.getId())\n-            ._()\n-            .td()._(info.getState())._()\n+            .__()\n+            .td().__(info.getState()).__()\n             .td()\n-                .a(url(info.getShortLogLink()), \"logs\")._()\n-          ._();\n+                .a(url(info.getShortLogLink()), \"logs\").__()\n+          .__();\n       }\n-      tableBody._()._()._();\n+      tableBody.__().__().__();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n        .table(\"#containers\")\n          .thead()\n            .tr()\n              .td().__(\"ContainerId\").__()\n              .td().__(\"ContainerState\").__()\n              .td().__(\"logs\").__()\n            .__()\n          .__().tbody();\n      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n          .getContainers().entrySet()) {\n        ContainerInfo info \u003d new ContainerInfo(this.nmContext, entry.getValue());\n        tableBody\n          .tr()\n            .td().a(url(\"container\", info.getId()), info.getId())\n            .__()\n            .td().__(info.getState()).__()\n            .td()\n                .a(url(info.getShortLogLink()), \"logs\").__()\n          .__();\n      }\n      tableBody.__().__().__();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n        .table(\"#containers\")\n          .thead()\n            .tr()\n              .td()._(\"ContainerId\")._()\n              .td()._(\"ContainerState\")._()\n              .td()._(\"logs\")._()\n            ._()\n          ._().tbody();\n      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n          .getContainers().entrySet()) {\n        ContainerInfo info \u003d new ContainerInfo(this.nmContext, entry.getValue());\n        tableBody\n          .tr()\n            .td().a(url(\"container\", info.getId()), info.getId())\n            ._()\n            .td()._(info.getState())._()\n            .td()\n                .a(url(info.getShortLogLink()), \"logs\")._()\n          ._();\n      }\n      tableBody._()._()._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java"
      }
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/11/11 1:02 AM",
      "commitNameOld": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 40.63,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,24 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n         .table(\"#containers\")\n           .thead()\n             .tr()\n               .td()._(\"ContainerId\")._()\n               .td()._(\"ContainerState\")._()\n               .td()._(\"logs\")._()\n             ._()\n           ._().tbody();\n       for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n           .getContainers().entrySet()) {\n-        ContainerId containerId \u003d entry.getKey();\n-        Container container \u003d entry.getValue();\n-        String containerIdStr \u003d ConverterUtils.toString(containerId);\n+        ContainerInfo info \u003d new ContainerInfo(this.nmContext, entry.getValue());\n         tableBody\n           .tr()\n-            .td().a(url(\"container\", containerIdStr), containerIdStr)\n+            .td().a(url(\"container\", info.getId()), info.getId())\n             ._()\n-            .td()._(container.getContainerState())._()\n+            .td()._(info.getState())._()\n             .td()\n-                .a(url(\"containerlogs\", containerIdStr, container.getUser()),\n-                    \"logs\")._()\n+                .a(url(info.getShortLogLink()), \"logs\")._()\n           ._();\n       }\n       tableBody._()._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n        .table(\"#containers\")\n          .thead()\n            .tr()\n              .td()._(\"ContainerId\")._()\n              .td()._(\"ContainerState\")._()\n              .td()._(\"logs\")._()\n            ._()\n          ._().tbody();\n      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n          .getContainers().entrySet()) {\n        ContainerInfo info \u003d new ContainerInfo(this.nmContext, entry.getValue());\n        tableBody\n          .tr()\n            .td().a(url(\"container\", info.getId()), info.getId())\n            ._()\n            .td()._(info.getState())._()\n            .td()\n                .a(url(info.getShortLogLink()), \"logs\")._()\n          ._();\n      }\n      tableBody._()._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
      "extendedDetails": {}
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 64.27,
      "commitsBetweenForRepo": 481,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n     protected void render(Block html) {\n       TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n         .table(\"#containers\")\n           .thead()\n             .tr()\n               .td()._(\"ContainerId\")._()\n               .td()._(\"ContainerState\")._()\n               .td()._(\"logs\")._()\n             ._()\n           ._().tbody();\n       for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n           .getContainers().entrySet()) {\n         ContainerId containerId \u003d entry.getKey();\n         Container container \u003d entry.getValue();\n         String containerIdStr \u003d ConverterUtils.toString(containerId);\n         tableBody\n           .tr()\n             .td().a(url(\"container\", containerIdStr), containerIdStr)\n             ._()\n             .td()._(container.getContainerState())._()\n             .td()\n-                .a(url(\"containerlogs\", containerIdStr), \"logs\")._()\n+                .a(url(\"containerlogs\", containerIdStr, container.getUser()),\n+                    \"logs\")._()\n           ._();\n       }\n       tableBody._()._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n        .table(\"#containers\")\n          .thead()\n            .tr()\n              .td()._(\"ContainerId\")._()\n              .td()._(\"ContainerState\")._()\n              .td()._(\"logs\")._()\n            ._()\n          ._().tbody();\n      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n          .getContainers().entrySet()) {\n        ContainerId containerId \u003d entry.getKey();\n        Container container \u003d entry.getValue();\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        tableBody\n          .tr()\n            .td().a(url(\"container\", containerIdStr), containerIdStr)\n            ._()\n            .td()._(container.getContainerState())._()\n            .td()\n                .a(url(\"containerlogs\", containerIdStr, container.getUser()),\n                    \"logs\")._()\n          ._();\n      }\n      tableBody._()._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n        .table(\"#containers\")\n          .thead()\n            .tr()\n              .td()._(\"ContainerId\")._()\n              .td()._(\"ContainerState\")._()\n              .td()._(\"logs\")._()\n            ._()\n          ._().tbody();\n      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n          .getContainers().entrySet()) {\n        ContainerId containerId \u003d entry.getKey();\n        Container container \u003d entry.getValue();\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        tableBody\n          .tr()\n            .td().a(url(\"container\", containerIdStr), containerIdStr)\n            ._()\n            .td()._(container.getContainerState())._()\n            .td()\n                .a(url(\"containerlogs\", containerIdStr), \"logs\")._()\n          ._();\n      }\n      tableBody._()._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,26 @@\n+    protected void render(Block html) {\n+      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n+        .table(\"#containers\")\n+          .thead()\n+            .tr()\n+              .td()._(\"ContainerId\")._()\n+              .td()._(\"ContainerState\")._()\n+              .td()._(\"logs\")._()\n+            ._()\n+          ._().tbody();\n+      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n+          .getContainers().entrySet()) {\n+        ContainerId containerId \u003d entry.getKey();\n+        Container container \u003d entry.getValue();\n+        String containerIdStr \u003d ConverterUtils.toString(containerId);\n+        tableBody\n+          .tr()\n+            .td().a(url(\"container\", containerIdStr), containerIdStr)\n+            ._()\n+            .td()._(container.getContainerState())._()\n+            .td()\n+                .a(url(\"containerlogs\", containerIdStr), \"logs\")._()\n+          ._();\n+      }\n+      tableBody._()._()._();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      TBODY\u003cTABLE\u003cBODY\u003cHamlet\u003e\u003e\u003e tableBody \u003d html.body()\n        .table(\"#containers\")\n          .thead()\n            .tr()\n              .td()._(\"ContainerId\")._()\n              .td()._(\"ContainerState\")._()\n              .td()._(\"logs\")._()\n            ._()\n          ._().tbody();\n      for (Entry\u003cContainerId, Container\u003e entry : this.nmContext\n          .getContainers().entrySet()) {\n        ContainerId containerId \u003d entry.getKey();\n        Container container \u003d entry.getValue();\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        tableBody\n          .tr()\n            .td().a(url(\"container\", containerIdStr), containerIdStr)\n            ._()\n            .td()._(container.getContainerState())._()\n            .td()\n                .a(url(\"containerlogs\", containerIdStr), \"logs\")._()\n          ._();\n      }\n      tableBody._()._()._();\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/AllContainersPage.java"
    }
  }
}