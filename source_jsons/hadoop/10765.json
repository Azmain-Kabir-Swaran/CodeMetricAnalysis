{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPoolSliceStorage.java",
  "functionName": "doFinalize",
  "functionId": "doFinalize___dnCurDir-File",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
  "functionStartLine": 650,
  "functionEndLine": 688,
  "numCommitsSeen": 41,
  "timeTaken": 6440,
  "changeHistory": [
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
    "b668eb91556b8c85c2b4925808ccb1f769031c20",
    "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": "Ybodychange",
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7": "Ybodychange",
    "b668eb91556b8c85c2b4925808ccb1f769031c20": "Ybodychange",
    "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12997. Move logging to slf4j in BlockPoolSliceStorage and Storage. Contributed by Ajay Kumar.\n",
      "commitDate": "01/02/18 10:45 AM",
      "commitName": "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 47.7,
      "commitsBetweenForRepo": 240,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   void doFinalize(File dnCurDir) throws IOException {\n     if (dnCurDir \u003d\u003d null) {\n       return; //we do nothing if the directory is null\n     }\n     File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n     StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n     // block pool level previous directory\n     File prevDir \u003d bpSd.getPreviousDir();\n     if (!prevDir.exists()) {\n       return; // already finalized\n     }\n     final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n-    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n-        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n-        + this.getCTime());\n+    LOG.info(\"Finalizing upgrade for storage directory {}.\\n   cur LV \u003d {}; \"\n+            + \"cur CTime \u003d {}\", dataDirPath, this.getLayoutVersion(),\n+        this.getCTime());\n     assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n     \n     // rename previous to finalized.tmp\n     final File tmpDir \u003d bpSd.getFinalizedTmp();\n     rename(prevDir, tmpDir);\n \n     // delete finalized.tmp dir in a separate thread\n     new Daemon(new Runnable() {\n       @Override\n       public void run() {\n         try {\n           deleteDir(tmpDir);\n         } catch (IOException ex) {\n-          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n+          LOG.error(\"Finalize upgrade for {} failed.\", dataDirPath, ex);\n         }\n-        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n+        LOG.info(\"Finalize upgrade for {} is complete.\", dataDirPath);\n       }\n \n       @Override\n       public String toString() {\n         return \"Finalize \" + dataDirPath;\n       }\n     }).start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void doFinalize(File dnCurDir) throws IOException {\n    if (dnCurDir \u003d\u003d null) {\n      return; //we do nothing if the directory is null\n    }\n    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n    // block pool level previous directory\n    File prevDir \u003d bpSd.getPreviousDir();\n    if (!prevDir.exists()) {\n      return; // already finalized\n    }\n    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n    LOG.info(\"Finalizing upgrade for storage directory {}.\\n   cur LV \u003d {}; \"\n            + \"cur CTime \u003d {}\", dataDirPath, this.getLayoutVersion(),\n        this.getCTime());\n    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n    \n    // rename previous to finalized.tmp\n    final File tmpDir \u003d bpSd.getFinalizedTmp();\n    rename(prevDir, tmpDir);\n\n    // delete finalized.tmp dir in a separate thread\n    new Daemon(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          deleteDir(tmpDir);\n        } catch (IOException ex) {\n          LOG.error(\"Finalize upgrade for {} failed.\", dataDirPath, ex);\n        }\n        LOG.info(\"Finalize upgrade for {} is complete.\", dataDirPath);\n      }\n\n      @Override\n      public String toString() {\n        return \"Finalize \" + dataDirPath;\n      }\n    }).start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12712. [9806] Code style cleanup\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,39 @@\n   void doFinalize(File dnCurDir) throws IOException {\n-    LOG.info(\"doFinalize: \" + dnCurDir);\n     if (dnCurDir \u003d\u003d null) {\n       return; //we do nothing if the directory is null\n     }\n     File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n     StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n     // block pool level previous directory\n     File prevDir \u003d bpSd.getPreviousDir();\n     if (!prevDir.exists()) {\n       return; // already finalized\n     }\n     final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n     LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n         + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n         + this.getCTime());\n     assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n     \n     // rename previous to finalized.tmp\n     final File tmpDir \u003d bpSd.getFinalizedTmp();\n     rename(prevDir, tmpDir);\n \n     // delete finalized.tmp dir in a separate thread\n     new Daemon(new Runnable() {\n       @Override\n       public void run() {\n         try {\n           deleteDir(tmpDir);\n         } catch (IOException ex) {\n           LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n         }\n         LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n       }\n \n       @Override\n       public String toString() {\n         return \"Finalize \" + dataDirPath;\n       }\n     }).start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void doFinalize(File dnCurDir) throws IOException {\n    if (dnCurDir \u003d\u003d null) {\n      return; //we do nothing if the directory is null\n    }\n    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n    // block pool level previous directory\n    File prevDir \u003d bpSd.getPreviousDir();\n    if (!prevDir.exists()) {\n      return; // already finalized\n    }\n    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n        + this.getCTime());\n    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n    \n    // rename previous to finalized.tmp\n    final File tmpDir \u003d bpSd.getFinalizedTmp();\n    rename(prevDir, tmpDir);\n\n    // delete finalized.tmp dir in a separate thread\n    new Daemon(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          deleteDir(tmpDir);\n        } catch (IOException ex) {\n          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n        }\n        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n      }\n\n      @Override\n      public String toString() {\n        return \"Finalize \" + dataDirPath;\n      }\n    }).start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "b668eb91556b8c85c2b4925808ccb1f769031c20": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "18/01/17 11:38 PM",
      "commitNameOld": "63320d1daab7ce846bb180623378efe431ad8c52",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 330.76,
      "commitsBetweenForRepo": 2183,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n   void doFinalize(File dnCurDir) throws IOException {\n+    LOG.info(\"doFinalize: \" + dnCurDir);\n+    if (dnCurDir \u003d\u003d null) {\n+      return; //we do nothing if the directory is null\n+    }\n     File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n     StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n     // block pool level previous directory\n     File prevDir \u003d bpSd.getPreviousDir();\n     if (!prevDir.exists()) {\n       return; // already finalized\n     }\n     final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n     LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n         + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n         + this.getCTime());\n     assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n     \n     // rename previous to finalized.tmp\n     final File tmpDir \u003d bpSd.getFinalizedTmp();\n     rename(prevDir, tmpDir);\n \n     // delete finalized.tmp dir in a separate thread\n     new Daemon(new Runnable() {\n       @Override\n       public void run() {\n         try {\n           deleteDir(tmpDir);\n         } catch (IOException ex) {\n           LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n         }\n         LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n       }\n \n       @Override\n       public String toString() {\n         return \"Finalize \" + dataDirPath;\n       }\n     }).start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void doFinalize(File dnCurDir) throws IOException {\n    LOG.info(\"doFinalize: \" + dnCurDir);\n    if (dnCurDir \u003d\u003d null) {\n      return; //we do nothing if the directory is null\n    }\n    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n    // block pool level previous directory\n    File prevDir \u003d bpSd.getPreviousDir();\n    if (!prevDir.exists()) {\n      return; // already finalized\n    }\n    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n        + this.getCTime());\n    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n    \n    // rename previous to finalized.tmp\n    final File tmpDir \u003d bpSd.getFinalizedTmp();\n    rename(prevDir, tmpDir);\n\n    // delete finalized.tmp dir in a separate thread\n    new Daemon(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          deleteDir(tmpDir);\n        } catch (IOException ex) {\n          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n        }\n        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n      }\n\n      @Override\n      public String toString() {\n        return \"Finalize \" + dataDirPath;\n      }\n    }).start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3659. Add missing @Override to methods across the hadoop-hdfs project. Contributed by Brandon Li. (harsh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361894 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/12 7:58 PM",
      "commitName": "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
      "commitAuthor": "Harsh J",
      "commitDateOld": "04/09/11 12:30 PM",
      "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 315.31,
      "commitsBetweenForRepo": 2161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   void doFinalize(File dnCurDir) throws IOException {\n     File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n     StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n     // block pool level previous directory\n     File prevDir \u003d bpSd.getPreviousDir();\n     if (!prevDir.exists()) {\n       return; // already finalized\n     }\n     final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n     LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n         + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n         + this.getCTime());\n     assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n     \n     // rename previous to finalized.tmp\n     final File tmpDir \u003d bpSd.getFinalizedTmp();\n     rename(prevDir, tmpDir);\n \n     // delete finalized.tmp dir in a separate thread\n     new Daemon(new Runnable() {\n+      @Override\n       public void run() {\n         try {\n           deleteDir(tmpDir);\n         } catch (IOException ex) {\n           LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n         }\n         LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n       }\n \n+      @Override\n       public String toString() {\n         return \"Finalize \" + dataDirPath;\n       }\n     }).start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void doFinalize(File dnCurDir) throws IOException {\n    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n    // block pool level previous directory\n    File prevDir \u003d bpSd.getPreviousDir();\n    if (!prevDir.exists()) {\n      return; // already finalized\n    }\n    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n        + this.getCTime());\n    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n    \n    // rename previous to finalized.tmp\n    final File tmpDir \u003d bpSd.getFinalizedTmp();\n    rename(prevDir, tmpDir);\n\n    // delete finalized.tmp dir in a separate thread\n    new Daemon(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          deleteDir(tmpDir);\n        } catch (IOException ex) {\n          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n        }\n        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n      }\n\n      @Override\n      public String toString() {\n        return \"Finalize \" + dataDirPath;\n      }\n    }).start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void doFinalize(File dnCurDir) throws IOException {\n    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n    // block pool level previous directory\n    File prevDir \u003d bpSd.getPreviousDir();\n    if (!prevDir.exists()) {\n      return; // already finalized\n    }\n    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n        + this.getCTime());\n    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n    \n    // rename previous to finalized.tmp\n    final File tmpDir \u003d bpSd.getFinalizedTmp();\n    rename(prevDir, tmpDir);\n\n    // delete finalized.tmp dir in a separate thread\n    new Daemon(new Runnable() {\n      public void run() {\n        try {\n          deleteDir(tmpDir);\n        } catch (IOException ex) {\n          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n        }\n        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n      }\n\n      public String toString() {\n        return \"Finalize \" + dataDirPath;\n      }\n    }).start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void doFinalize(File dnCurDir) throws IOException {\n    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n    // block pool level previous directory\n    File prevDir \u003d bpSd.getPreviousDir();\n    if (!prevDir.exists()) {\n      return; // already finalized\n    }\n    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n        + this.getCTime());\n    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n    \n    // rename previous to finalized.tmp\n    final File tmpDir \u003d bpSd.getFinalizedTmp();\n    rename(prevDir, tmpDir);\n\n    // delete finalized.tmp dir in a separate thread\n    new Daemon(new Runnable() {\n      public void run() {\n        try {\n          deleteDir(tmpDir);\n        } catch (IOException ex) {\n          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n        }\n        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n      }\n\n      public String toString() {\n        return \"Finalize \" + dataDirPath;\n      }\n    }).start();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,34 @@\n+  void doFinalize(File dnCurDir) throws IOException {\n+    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n+    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n+    // block pool level previous directory\n+    File prevDir \u003d bpSd.getPreviousDir();\n+    if (!prevDir.exists()) {\n+      return; // already finalized\n+    }\n+    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n+    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n+        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n+        + this.getCTime());\n+    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n+    \n+    // rename previous to finalized.tmp\n+    final File tmpDir \u003d bpSd.getFinalizedTmp();\n+    rename(prevDir, tmpDir);\n+\n+    // delete finalized.tmp dir in a separate thread\n+    new Daemon(new Runnable() {\n+      public void run() {\n+        try {\n+          deleteDir(tmpDir);\n+        } catch (IOException ex) {\n+          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n+        }\n+        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n+      }\n+\n+      public String toString() {\n+        return \"Finalize \" + dataDirPath;\n+      }\n+    }).start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void doFinalize(File dnCurDir) throws IOException {\n    File bpRoot \u003d getBpRoot(blockpoolID, dnCurDir);\n    StorageDirectory bpSd \u003d new StorageDirectory(bpRoot);\n    // block pool level previous directory\n    File prevDir \u003d bpSd.getPreviousDir();\n    if (!prevDir.exists()) {\n      return; // already finalized\n    }\n    final String dataDirPath \u003d bpSd.getRoot().getCanonicalPath();\n    LOG.info(\"Finalizing upgrade for storage directory \" + dataDirPath\n        + \".\\n   cur LV \u003d \" + this.getLayoutVersion() + \"; cur CTime \u003d \"\n        + this.getCTime());\n    assert bpSd.getCurrentDir().exists() : \"Current directory must exist.\";\n    \n    // rename previous to finalized.tmp\n    final File tmpDir \u003d bpSd.getFinalizedTmp();\n    rename(prevDir, tmpDir);\n\n    // delete finalized.tmp dir in a separate thread\n    new Daemon(new Runnable() {\n      public void run() {\n        try {\n          deleteDir(tmpDir);\n        } catch (IOException ex) {\n          LOG.error(\"Finalize upgrade for \" + dataDirPath + \" failed.\", ex);\n        }\n        LOG.info(\"Finalize upgrade for \" + dataDirPath + \" is complete.\");\n      }\n\n      public String toString() {\n        return \"Finalize \" + dataDirPath;\n      }\n    }).start();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java"
    }
  }
}