{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "setSafeMode",
  "functionId": "setSafeMode___action-SafeModeAction",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 4946,
  "functionEndLine": 4970,
  "numCommitsSeen": 899,
  "timeTaken": 51874,
  "changeHistory": [
    "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2",
    "67c9780609f707c11626f05028ddfd28f1b878f1",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
    "5cdb7e5ce7f0c3129749be8f29e2f11c0e0f2269",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2": "Ybodychange",
    "67c9780609f707c11626f05028ddfd28f1b878f1": "Ybodychange",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": "Ybodychange",
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": "Ybodychange",
    "5cdb7e5ce7f0c3129749be8f29e2f11c0e0f2269": "Ybodychange",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5040.Audit log for admin commands/ logging output of all DFS admin commands. Contributed by Kuhu Shukla.\n",
      "commitDate": "26/09/17 9:29 AM",
      "commitName": "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "24/09/17 9:03 PM",
      "commitNameOld": "d0b2c5850b523a3888b2fadcfcdf6edbed33f221",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 1.52,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,25 @@\n   boolean setSafeMode(SafeModeAction action) throws IOException {\n+    String operationName \u003d action.toString().toLowerCase();\n+    boolean error \u003d false;\n     if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n-      checkSuperuserPrivilege();\n+      checkSuperuserPrivilege(operationName);\n       switch(action) {\n       case SAFEMODE_LEAVE: // leave safe mode\n         leaveSafeMode(false);\n         break;\n       case SAFEMODE_ENTER: // enter safe mode\n         enterSafeMode(false);\n         break;\n       case SAFEMODE_FORCE_EXIT:\n         leaveSafeMode(true);\n         break;\n       default:\n         LOG.error(\"Unexpected safe mode action\");\n+        error \u003d true;\n       }\n     }\n+    if (!error) {\n+      logAuditEvent(true, operationName, null);\n+    }\n     return isInSafeMode();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    String operationName \u003d action.toString().toLowerCase();\n    boolean error \u003d false;\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege(operationName);\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        leaveSafeMode(false);\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      case SAFEMODE_FORCE_EXIT:\n        leaveSafeMode(true);\n        break;\n      default:\n        LOG.error(\"Unexpected safe mode action\");\n        error \u003d true;\n      }\n    }\n    if (!error) {\n      logAuditEvent(true, operationName, null);\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "67c9780609f707c11626f05028ddfd28f1b878f1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9498. Move code that tracks blocks with future generation stamps to BlockManagerSafeMode. (Contributed by Mingliang Liu)\n",
      "commitDate": "06/01/16 10:30 AM",
      "commitName": "67c9780609f707c11626f05028ddfd28f1b878f1",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "18/12/15 3:57 PM",
      "commitNameOld": "61ab0440f7eaff0f631cbae0378403912f88d7ad",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 18.77,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,19 @@\n   boolean setSafeMode(SafeModeAction action) throws IOException {\n     if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n       checkSuperuserPrivilege();\n       switch(action) {\n       case SAFEMODE_LEAVE: // leave safe mode\n-        if (blockManager.getBytesInFuture() \u003e 0) {\n-          LOG.error(\"Refusing to leave safe mode without a force flag. \" +\n-              \"Exiting safe mode will cause a deletion of \" + blockManager\n-              .getBytesInFuture() + \" byte(s). Please use \" +\n-              \"-forceExit flag to exit safe mode forcefully and data loss is \" +\n-              \"acceptable.\");\n-        } else {\n-          leaveSafeMode();\n-        }\n+        leaveSafeMode(false);\n         break;\n       case SAFEMODE_ENTER: // enter safe mode\n         enterSafeMode(false);\n         break;\n       case SAFEMODE_FORCE_EXIT:\n-        if (blockManager.getBytesInFuture() \u003e 0) {\n-          LOG.warn(\"Leaving safe mode due to forceExit. This will cause a data \"\n-              + \"loss of \" + blockManager.getBytesInFuture() + \" byte(s).\");\n-          blockManager.clearBytesInFuture();\n-        } else {\n-          LOG.warn(\"forceExit used when normal exist would suffice. Treating \" +\n-              \"force exit as normal safe mode exit.\");\n-        }\n-        leaveSafeMode();\n+        leaveSafeMode(true);\n         break;\n       default:\n         LOG.error(\"Unexpected safe mode action\");\n       }\n     }\n     return isInSafeMode();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        leaveSafeMode(false);\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      case SAFEMODE_FORCE_EXIT:\n        leaveSafeMode(true);\n        break;\n      default:\n        LOG.error(\"Unexpected safe mode action\");\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
      "commitDate": "01/12/15 4:09 PM",
      "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "25/11/15 2:22 PM",
      "commitNameOld": "e556c35b0596700f9ec9d0a51cf5027259d531b5",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 6.07,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,35 @@\n   boolean setSafeMode(SafeModeAction action) throws IOException {\n     if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n       checkSuperuserPrivilege();\n       switch(action) {\n       case SAFEMODE_LEAVE: // leave safe mode\n         if (blockManager.getBytesInFuture() \u003e 0) {\n           LOG.error(\"Refusing to leave safe mode without a force flag. \" +\n               \"Exiting safe mode will cause a deletion of \" + blockManager\n               .getBytesInFuture() + \" byte(s). Please use \" +\n               \"-forceExit flag to exit safe mode forcefully and data loss is \" +\n               \"acceptable.\");\n-          return isInSafeMode();\n+        } else {\n+          leaveSafeMode();\n         }\n-        leaveSafeMode();\n         break;\n       case SAFEMODE_ENTER: // enter safe mode\n         enterSafeMode(false);\n         break;\n       case SAFEMODE_FORCE_EXIT:\n         if (blockManager.getBytesInFuture() \u003e 0) {\n           LOG.warn(\"Leaving safe mode due to forceExit. This will cause a data \"\n               + \"loss of \" + blockManager.getBytesInFuture() + \" byte(s).\");\n-          safeMode.leave(true);\n           blockManager.clearBytesInFuture();\n         } else {\n           LOG.warn(\"forceExit used when normal exist would suffice. Treating \" +\n               \"force exit as normal safe mode exit.\");\n         }\n         leaveSafeMode();\n         break;\n       default:\n         LOG.error(\"Unexpected safe mode action\");\n       }\n     }\n     return isInSafeMode();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        if (blockManager.getBytesInFuture() \u003e 0) {\n          LOG.error(\"Refusing to leave safe mode without a force flag. \" +\n              \"Exiting safe mode will cause a deletion of \" + blockManager\n              .getBytesInFuture() + \" byte(s). Please use \" +\n              \"-forceExit flag to exit safe mode forcefully and data loss is \" +\n              \"acceptable.\");\n        } else {\n          leaveSafeMode();\n        }\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      case SAFEMODE_FORCE_EXIT:\n        if (blockManager.getBytesInFuture() \u003e 0) {\n          LOG.warn(\"Leaving safe mode due to forceExit. This will cause a data \"\n              + \"loss of \" + blockManager.getBytesInFuture() + \" byte(s).\");\n          blockManager.clearBytesInFuture();\n        } else {\n          LOG.warn(\"forceExit used when normal exist would suffice. Treating \" +\n              \"force exit as normal safe mode exit.\");\n        }\n        leaveSafeMode();\n        break;\n      default:\n        LOG.error(\"Unexpected safe mode action\");\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4015. Safemode should count and report orphaned blocks. (Contributed by Anu Engineer)\n",
      "commitDate": "23/10/15 6:07 PM",
      "commitName": "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "23/10/15 12:15 PM",
      "commitNameOld": "600ad7bf4104bcaeec00a4089d59bb1fdf423299",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,36 @@\n   boolean setSafeMode(SafeModeAction action) throws IOException {\n     if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n       checkSuperuserPrivilege();\n       switch(action) {\n       case SAFEMODE_LEAVE: // leave safe mode\n+        if (blockManager.getBytesInFuture() \u003e 0) {\n+          LOG.error(\"Refusing to leave safe mode without a force flag. \" +\n+              \"Exiting safe mode will cause a deletion of \" + blockManager\n+              .getBytesInFuture() + \" byte(s). Please use \" +\n+              \"-forceExit flag to exit safe mode forcefully and data loss is \" +\n+              \"acceptable.\");\n+          return isInSafeMode();\n+        }\n         leaveSafeMode();\n         break;\n       case SAFEMODE_ENTER: // enter safe mode\n         enterSafeMode(false);\n         break;\n+      case SAFEMODE_FORCE_EXIT:\n+        if (blockManager.getBytesInFuture() \u003e 0) {\n+          LOG.warn(\"Leaving safe mode due to forceExit. This will cause a data \"\n+              + \"loss of \" + blockManager.getBytesInFuture() + \" byte(s).\");\n+          safeMode.leave(true);\n+          blockManager.clearBytesInFuture();\n+        } else {\n+          LOG.warn(\"forceExit used when normal exist would suffice. Treating \" +\n+              \"force exit as normal safe mode exit.\");\n+        }\n+        leaveSafeMode();\n+        break;\n       default:\n         LOG.error(\"Unexpected safe mode action\");\n       }\n     }\n     return isInSafeMode();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        if (blockManager.getBytesInFuture() \u003e 0) {\n          LOG.error(\"Refusing to leave safe mode without a force flag. \" +\n              \"Exiting safe mode will cause a deletion of \" + blockManager\n              .getBytesInFuture() + \" byte(s). Please use \" +\n              \"-forceExit flag to exit safe mode forcefully and data loss is \" +\n              \"acceptable.\");\n          return isInSafeMode();\n        }\n        leaveSafeMode();\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      case SAFEMODE_FORCE_EXIT:\n        if (blockManager.getBytesInFuture() \u003e 0) {\n          LOG.warn(\"Leaving safe mode due to forceExit. This will cause a data \"\n              + \"loss of \" + blockManager.getBytesInFuture() + \" byte(s).\");\n          safeMode.leave(true);\n          blockManager.clearBytesInFuture();\n        } else {\n          LOG.warn(\"forceExit used when normal exist would suffice. Treating \" +\n              \"force exit as normal safe mode exit.\");\n        }\n        leaveSafeMode();\n        break;\n      default:\n        LOG.error(\"Unexpected safe mode action\");\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "5cdb7e5ce7f0c3129749be8f29e2f11c0e0f2269": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4033. Miscellaneous findbugs 2 fixes. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1430534 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/01/13 1:05 PM",
      "commitName": "5cdb7e5ce7f0c3129749be8f29e2f11c0e0f2269",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "02/01/13 9:12 PM",
      "commitNameOld": "36c5fe9961a905385282d1a05ced08c83684dd02",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.66,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   boolean setSafeMode(SafeModeAction action) throws IOException {\n     if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n       checkSuperuserPrivilege();\n       switch(action) {\n       case SAFEMODE_LEAVE: // leave safe mode\n         leaveSafeMode();\n         break;\n       case SAFEMODE_ENTER: // enter safe mode\n         enterSafeMode(false);\n         break;\n+      default:\n+        LOG.error(\"Unexpected safe mode action\");\n       }\n     }\n     return isInSafeMode();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        leaveSafeMode();\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      default:\n        LOG.error(\"Unexpected safe mode action\");\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2686. Remove DistributedUpgrade related code. Contributed by Suresh Srinivas\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 2:18 PM",
      "commitName": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "18/08/12 10:46 PM",
      "commitNameOld": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.65,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   boolean setSafeMode(SafeModeAction action) throws IOException {\n     if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n       checkSuperuserPrivilege();\n       switch(action) {\n       case SAFEMODE_LEAVE: // leave safe mode\n-        leaveSafeMode(false);\n+        leaveSafeMode();\n         break;\n       case SAFEMODE_ENTER: // enter safe mode\n         enterSafeMode(false);\n         break;\n       }\n     }\n     return isInSafeMode();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        leaveSafeMode();\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        leaveSafeMode(false);\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        leaveSafeMode(false);\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+  boolean setSafeMode(SafeModeAction action) throws IOException {\n+    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n+      checkSuperuserPrivilege();\n+      switch(action) {\n+      case SAFEMODE_LEAVE: // leave safe mode\n+        leaveSafeMode(false);\n+        break;\n+      case SAFEMODE_ENTER: // enter safe mode\n+        enterSafeMode(false);\n+        break;\n+      }\n+    }\n+    return isInSafeMode();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean setSafeMode(SafeModeAction action) throws IOException {\n    if (action !\u003d SafeModeAction.SAFEMODE_GET) {\n      checkSuperuserPrivilege();\n      switch(action) {\n      case SAFEMODE_LEAVE: // leave safe mode\n        leaveSafeMode(false);\n        break;\n      case SAFEMODE_ENTER: // enter safe mode\n        enterSafeMode(false);\n        break;\n      }\n    }\n    return isInSafeMode();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}