{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EncryptionZoneManager.java",
  "functionName": "checkMoveValidity",
  "functionId": "checkMoveValidity___srcIIP-INodesInPath__dstIIP-INodesInPath",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
  "functionStartLine": 477,
  "functionEndLine": 512,
  "numCommitsSeen": 403,
  "timeTaken": 6942,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4",
    "1000a2af04b24c123a3b08168f36b4e90420cab7",
    "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
    "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c",
    "b0b9084433d5e80131429e6e76858b099deb2dda",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "b57ec165674143daf4fa50378446a9f831d3b9d3",
    "d79f27b429410daa6770a51867d7ecea728dff89",
    "ceed0f6c46736323bd1b077125ff4e217c649208",
    "c38665282884122d3c82b6f68376cce036aee748",
    "31617733aca2025cff1ffb841a533a5b1de016a5"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4": "Ybodychange",
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Ybodychange",
    "f32e9fc8f7150f0e889c0774b3ad712af26fbd65": "Ymultichange(Yparameterchange,Ybodychange)",
    "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c": "Ybodychange",
    "b0b9084433d5e80131429e6e76858b099deb2dda": "Ybodychange",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange",
    "b57ec165674143daf4fa50378446a9f831d3b9d3": "Ybodychange",
    "d79f27b429410daa6770a51867d7ecea728dff89": "Ybodychange",
    "ceed0f6c46736323bd1b077125ff4e217c649208": "Ymultichange(Ymovefromfile,Ymodifierchange,Yrename)",
    "c38665282884122d3c82b6f68376cce036aee748": "Ymultichange(Yparameterchange,Ybodychange)",
    "31617733aca2025cff1ffb841a533a5b1de016a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "30/10/18 10:43 PM",
      "commitNameOld": "fac9f91b2944cee641049fffcafa6b65e0cf68f2",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 72.55,
      "commitsBetweenForRepo": 463,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,36 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n       throws IOException {\n     assert dir.hasReadLock();\n     if (!hasCreatedEncryptionZone()) {\n       return;\n     }\n     final EncryptionZoneInt srcParentEZI \u003d\n         getParentEncryptionZoneForPath(srcIIP);\n     final EncryptionZoneInt dstParentEZI \u003d\n         getParentEncryptionZoneForPath(dstIIP);\n     final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n     final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n     if (srcInEZ \u0026\u0026 !dstInEZ) {\n       throw new IOException(\n           srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n     } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n       throw new IOException(\n           srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n     }\n \n     if (srcInEZ) {\n       if (!srcParentEZI.equals(dstParentEZI)) {\n         final String srcEZPath \u003d getFullPathName(srcParentEZI.getINodeId());\n         final String dstEZPath \u003d getFullPathName(dstParentEZI.getINodeId());\n         final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n-        sb.append(\" can\u0027t be moved from encryption zone \");\n-        sb.append(srcEZPath);\n-        sb.append(\" to encryption zone \");\n-        sb.append(dstEZPath);\n-        sb.append(\".\");\n+        sb.append(\" can\u0027t be moved from encryption zone \").append(srcEZPath)\n+            .append(\" to encryption zone \").append(dstEZPath).append(\".\");\n         throw new IOException(sb.toString());\n       }\n       checkMoveValidityForReencryption(srcIIP.getPath(),\n           srcParentEZI.getINodeId());\n     } else if (dstInEZ) {\n       checkMoveValidityForReencryption(dstIIP.getPath(),\n           dstParentEZI.getINodeId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n      throws IOException {\n    assert dir.hasReadLock();\n    if (!hasCreatedEncryptionZone()) {\n      return;\n    }\n    final EncryptionZoneInt srcParentEZI \u003d\n        getParentEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstParentEZI \u003d\n        getParentEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n    if (srcInEZ \u0026\u0026 !dstInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n    } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n    }\n\n    if (srcInEZ) {\n      if (!srcParentEZI.equals(dstParentEZI)) {\n        final String srcEZPath \u003d getFullPathName(srcParentEZI.getINodeId());\n        final String dstEZPath \u003d getFullPathName(dstParentEZI.getINodeId());\n        final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n        sb.append(\" can\u0027t be moved from encryption zone \").append(srcEZPath)\n            .append(\" to encryption zone \").append(dstEZPath).append(\".\");\n        throw new IOException(sb.toString());\n      }\n      checkMoveValidityForReencryption(srcIIP.getPath(),\n          srcParentEZI.getINodeId());\n    } else if (dstInEZ) {\n      checkMoveValidityForReencryption(dstIIP.getPath(),\n          dstParentEZI.getINodeId());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13087. Snapshotted encryption zone information should be immutable. Contributed by LiXin Ge.\n",
      "commitDate": "29/03/18 3:46 PM",
      "commitName": "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "22/02/18 11:32 AM",
      "commitNameOld": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 35.13,
      "commitsBetweenForRepo": 385,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n       throws IOException {\n     assert dir.hasReadLock();\n     if (!hasCreatedEncryptionZone()) {\n       return;\n     }\n     final EncryptionZoneInt srcParentEZI \u003d\n         getParentEncryptionZoneForPath(srcIIP);\n     final EncryptionZoneInt dstParentEZI \u003d\n         getParentEncryptionZoneForPath(dstIIP);\n     final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n     final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n     if (srcInEZ \u0026\u0026 !dstInEZ) {\n       throw new IOException(\n           srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n     } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n       throw new IOException(\n           srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n     }\n \n     if (srcInEZ) {\n-      if (srcParentEZI !\u003d dstParentEZI) {\n+      if (!srcParentEZI.equals(dstParentEZI)) {\n         final String srcEZPath \u003d getFullPathName(srcParentEZI.getINodeId());\n         final String dstEZPath \u003d getFullPathName(dstParentEZI.getINodeId());\n         final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n       checkMoveValidityForReencryption(srcIIP.getPath(),\n           srcParentEZI.getINodeId());\n     } else if (dstInEZ) {\n       checkMoveValidityForReencryption(dstIIP.getPath(),\n           dstParentEZI.getINodeId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n      throws IOException {\n    assert dir.hasReadLock();\n    if (!hasCreatedEncryptionZone()) {\n      return;\n    }\n    final EncryptionZoneInt srcParentEZI \u003d\n        getParentEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstParentEZI \u003d\n        getParentEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n    if (srcInEZ \u0026\u0026 !dstInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n    } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n    }\n\n    if (srcInEZ) {\n      if (!srcParentEZI.equals(dstParentEZI)) {\n        final String srcEZPath \u003d getFullPathName(srcParentEZI.getINodeId());\n        final String dstEZPath \u003d getFullPathName(dstParentEZI.getINodeId());\n        final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n      checkMoveValidityForReencryption(srcIIP.getPath(),\n          srcParentEZI.getINodeId());\n    } else if (dstInEZ) {\n      checkMoveValidityForReencryption(dstIIP.getPath(),\n          dstParentEZI.getINodeId());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "25/07/17 9:03 AM",
      "commitNameOld": "a68b5b31cf846c0fc94c430bafd07a9bca369234",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 29.34,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,39 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n       throws IOException {\n     assert dir.hasReadLock();\n     if (!hasCreatedEncryptionZone()) {\n       return;\n     }\n     final EncryptionZoneInt srcParentEZI \u003d\n         getParentEncryptionZoneForPath(srcIIP);\n     final EncryptionZoneInt dstParentEZI \u003d\n         getParentEncryptionZoneForPath(dstIIP);\n     final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n     final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n     if (srcInEZ \u0026\u0026 !dstInEZ) {\n       throw new IOException(\n           srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n     } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n       throw new IOException(\n           srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n     }\n \n     if (srcInEZ) {\n       if (srcParentEZI !\u003d dstParentEZI) {\n-        final String srcEZPath \u003d getFullPathName(srcParentEZI);\n-        final String dstEZPath \u003d getFullPathName(dstParentEZI);\n+        final String srcEZPath \u003d getFullPathName(srcParentEZI.getINodeId());\n+        final String dstEZPath \u003d getFullPathName(dstParentEZI.getINodeId());\n         final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n+      checkMoveValidityForReencryption(srcIIP.getPath(),\n+          srcParentEZI.getINodeId());\n+    } else if (dstInEZ) {\n+      checkMoveValidityForReencryption(dstIIP.getPath(),\n+          dstParentEZI.getINodeId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n      throws IOException {\n    assert dir.hasReadLock();\n    if (!hasCreatedEncryptionZone()) {\n      return;\n    }\n    final EncryptionZoneInt srcParentEZI \u003d\n        getParentEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstParentEZI \u003d\n        getParentEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n    if (srcInEZ \u0026\u0026 !dstInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n    } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n    }\n\n    if (srcInEZ) {\n      if (srcParentEZI !\u003d dstParentEZI) {\n        final String srcEZPath \u003d getFullPathName(srcParentEZI.getINodeId());\n        final String dstEZPath \u003d getFullPathName(dstParentEZI.getINodeId());\n        final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n      checkMoveValidityForReencryption(srcIIP.getPath(),\n          srcParentEZI.getINodeId());\n    } else if (dstInEZ) {\n      checkMoveValidityForReencryption(dstIIP.getPath(),\n          dstParentEZI.getINodeId());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "f32e9fc8f7150f0e889c0774b3ad712af26fbd65": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10939. Reduce performance penalty of encryption zones. Contributed by Daryn sharp.\n",
      "commitDate": "06/10/16 1:11 PM",
      "commitName": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10939. Reduce performance penalty of encryption zones. Contributed by Daryn sharp.\n",
          "commitDate": "06/10/16 1:11 PM",
          "commitName": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "13/06/16 11:50 AM",
          "commitNameOld": "709a814fe0153e86a37806796ea27c8252d9c6d1",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 115.06,
          "commitsBetweenForRepo": 876,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,34 @@\n-  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n+  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n       throws IOException {\n     assert dir.hasReadLock();\n+    if (!hasCreatedEncryptionZone()) {\n+      return;\n+    }\n     final EncryptionZoneInt srcParentEZI \u003d\n         getParentEncryptionZoneForPath(srcIIP);\n     final EncryptionZoneInt dstParentEZI \u003d\n         getParentEncryptionZoneForPath(dstIIP);\n     final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n     final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n     if (srcInEZ \u0026\u0026 !dstInEZ) {\n       throw new IOException(\n-          src + \" can\u0027t be moved from an encryption zone.\");\n+          srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n     } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n       throw new IOException(\n-          src + \" can\u0027t be moved into an encryption zone.\");\n+          srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n     }\n \n     if (srcInEZ) {\n       if (srcParentEZI !\u003d dstParentEZI) {\n         final String srcEZPath \u003d getFullPathName(srcParentEZI);\n         final String dstEZPath \u003d getFullPathName(dstParentEZI);\n-        final StringBuilder sb \u003d new StringBuilder(src);\n+        final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n      throws IOException {\n    assert dir.hasReadLock();\n    if (!hasCreatedEncryptionZone()) {\n      return;\n    }\n    final EncryptionZoneInt srcParentEZI \u003d\n        getParentEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstParentEZI \u003d\n        getParentEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n    if (srcInEZ \u0026\u0026 !dstInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n    } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n    }\n\n    if (srcInEZ) {\n      if (srcParentEZI !\u003d dstParentEZI) {\n        final String srcEZPath \u003d getFullPathName(srcParentEZI);\n        final String dstEZPath \u003d getFullPathName(dstParentEZI);\n        final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {
            "oldValue": "[srcIIP-INodesInPath, dstIIP-INodesInPath, src-String]",
            "newValue": "[srcIIP-INodesInPath, dstIIP-INodesInPath]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10939. Reduce performance penalty of encryption zones. Contributed by Daryn sharp.\n",
          "commitDate": "06/10/16 1:11 PM",
          "commitName": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "13/06/16 11:50 AM",
          "commitNameOld": "709a814fe0153e86a37806796ea27c8252d9c6d1",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 115.06,
          "commitsBetweenForRepo": 876,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,34 @@\n-  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n+  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n       throws IOException {\n     assert dir.hasReadLock();\n+    if (!hasCreatedEncryptionZone()) {\n+      return;\n+    }\n     final EncryptionZoneInt srcParentEZI \u003d\n         getParentEncryptionZoneForPath(srcIIP);\n     final EncryptionZoneInt dstParentEZI \u003d\n         getParentEncryptionZoneForPath(dstIIP);\n     final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n     final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n     if (srcInEZ \u0026\u0026 !dstInEZ) {\n       throw new IOException(\n-          src + \" can\u0027t be moved from an encryption zone.\");\n+          srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n     } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n       throw new IOException(\n-          src + \" can\u0027t be moved into an encryption zone.\");\n+          srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n     }\n \n     if (srcInEZ) {\n       if (srcParentEZI !\u003d dstParentEZI) {\n         final String srcEZPath \u003d getFullPathName(srcParentEZI);\n         final String dstEZPath \u003d getFullPathName(dstParentEZI);\n-        final StringBuilder sb \u003d new StringBuilder(src);\n+        final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP)\n      throws IOException {\n    assert dir.hasReadLock();\n    if (!hasCreatedEncryptionZone()) {\n      return;\n    }\n    final EncryptionZoneInt srcParentEZI \u003d\n        getParentEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstParentEZI \u003d\n        getParentEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n    if (srcInEZ \u0026\u0026 !dstInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved from an encryption zone.\");\n    } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n      throw new IOException(\n          srcIIP.getPath() + \" can\u0027t be moved into an encryption zone.\");\n    }\n\n    if (srcInEZ) {\n      if (srcParentEZI !\u003d dstParentEZI) {\n        final String srcEZPath \u003d getFullPathName(srcParentEZI);\n        final String dstEZPath \u003d getFullPathName(dstParentEZI);\n        final StringBuilder sb \u003d new StringBuilder(srcIIP.getPath());\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9244. Support nested encryption zones.\n\nChange-Id: I43a13035a8b27956e90967ee82058efb647c3415\n",
      "commitDate": "08/02/16 4:30 PM",
      "commitName": "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c",
      "commitAuthor": "zhezhang",
      "commitDateOld": "21/09/15 6:53 PM",
      "commitNameOld": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 139.94,
      "commitsBetweenForRepo": 972,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,31 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n       throws IOException {\n     assert dir.hasReadLock();\n-    final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n-    final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n-    final boolean srcInEZ \u003d (srcEZI !\u003d null);\n-    final boolean dstInEZ \u003d (dstEZI !\u003d null);\n-    if (srcInEZ) {\n-      if (!dstInEZ) {\n-        if (srcEZI.getINodeId() \u003d\u003d srcIIP.getLastINode().getId()) {\n-          // src is ez root and dest is not in an ez. Allow the rename.\n-          return;\n-        }\n-        throw new IOException(\n-            src + \" can\u0027t be moved from an encryption zone.\");\n-      }\n-    } else {\n-      if (dstInEZ) {\n-        throw new IOException(\n-            src + \" can\u0027t be moved into an encryption zone.\");\n-      }\n+    final EncryptionZoneInt srcParentEZI \u003d\n+        getParentEncryptionZoneForPath(srcIIP);\n+    final EncryptionZoneInt dstParentEZI \u003d\n+        getParentEncryptionZoneForPath(dstIIP);\n+    final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n+    final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n+    if (srcInEZ \u0026\u0026 !dstInEZ) {\n+      throw new IOException(\n+          src + \" can\u0027t be moved from an encryption zone.\");\n+    } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n+      throw new IOException(\n+          src + \" can\u0027t be moved into an encryption zone.\");\n     }\n \n     if (srcInEZ) {\n-      if (srcEZI !\u003d dstEZI) {\n-        final String srcEZPath \u003d getFullPathName(srcEZI);\n-        final String dstEZPath \u003d getFullPathName(dstEZI);\n+      if (srcParentEZI !\u003d dstParentEZI) {\n+        final String srcEZPath \u003d getFullPathName(srcParentEZI);\n+        final String dstEZPath \u003d getFullPathName(dstParentEZI);\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    assert dir.hasReadLock();\n    final EncryptionZoneInt srcParentEZI \u003d\n        getParentEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstParentEZI \u003d\n        getParentEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcParentEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstParentEZI !\u003d null);\n    if (srcInEZ \u0026\u0026 !dstInEZ) {\n      throw new IOException(\n          src + \" can\u0027t be moved from an encryption zone.\");\n    } else if (dstInEZ \u0026\u0026 !srcInEZ) {\n      throw new IOException(\n          src + \" can\u0027t be moved into an encryption zone.\");\n    }\n\n    if (srcInEZ) {\n      if (srcParentEZI !\u003d dstParentEZI) {\n        final String srcEZPath \u003d getFullPathName(srcParentEZI);\n        final String dstEZPath \u003d getFullPathName(dstParentEZI);\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "b0b9084433d5e80131429e6e76858b099deb2dda": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7530. Allow renaming of encryption zone roots. Contributed by Charles Lamb.\n",
      "commitDate": "18/12/14 2:06 PM",
      "commitName": "b0b9084433d5e80131429e6e76858b099deb2dda",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "09/12/14 11:37 AM",
      "commitNameOld": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 9.1,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,37 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n       throws IOException {\n     assert dir.hasReadLock();\n     final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n     final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n     final boolean srcInEZ \u003d (srcEZI !\u003d null);\n     final boolean dstInEZ \u003d (dstEZI !\u003d null);\n     if (srcInEZ) {\n       if (!dstInEZ) {\n+        if (srcEZI.getINodeId() \u003d\u003d srcIIP.getLastINode().getId()) {\n+          // src is ez root and dest is not in an ez. Allow the rename.\n+          return;\n+        }\n         throw new IOException(\n             src + \" can\u0027t be moved from an encryption zone.\");\n       }\n     } else {\n       if (dstInEZ) {\n         throw new IOException(\n             src + \" can\u0027t be moved into an encryption zone.\");\n       }\n     }\n \n     if (srcInEZ) {\n       if (srcEZI !\u003d dstEZI) {\n         final String srcEZPath \u003d getFullPathName(srcEZI);\n         final String dstEZPath \u003d getFullPathName(dstEZI);\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    assert dir.hasReadLock();\n    final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstEZI !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        if (srcEZI.getINodeId() \u003d\u003d srcIIP.getLastINode().getId()) {\n          // src is ez root and dest is not in an ez. Allow the rename.\n          return;\n        }\n        throw new IOException(\n            src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(\n            src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ) {\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d getFullPathName(srcEZI);\n        final String dstEZPath \u003d getFullPathName(dstEZI);\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/12/14 11:52 AM",
      "commitNameOld": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,33 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n       throws IOException {\n     assert dir.hasReadLock();\n     final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n     final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n     final boolean srcInEZ \u003d (srcEZI !\u003d null);\n     final boolean dstInEZ \u003d (dstEZI !\u003d null);\n     if (srcInEZ) {\n       if (!dstInEZ) {\n         throw new IOException(\n             src + \" can\u0027t be moved from an encryption zone.\");\n       }\n     } else {\n       if (dstInEZ) {\n         throw new IOException(\n             src + \" can\u0027t be moved into an encryption zone.\");\n       }\n     }\n \n-    if (srcInEZ || dstInEZ) {\n-      Preconditions.checkState(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n-      Preconditions.checkState(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n+    if (srcInEZ) {\n       if (srcEZI !\u003d dstEZI) {\n         final String srcEZPath \u003d getFullPathName(srcEZI);\n         final String dstEZPath \u003d getFullPathName(dstEZI);\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    assert dir.hasReadLock();\n    final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstEZI !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(\n            src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(\n            src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ) {\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d getFullPathName(srcEZI);\n        final String dstEZPath \u003d getFullPathName(dstEZI);\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "b57ec165674143daf4fa50378446a9f831d3b9d3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6718. Remove EncryptionZoneManager lock. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/14 5:55 PM",
      "commitName": "b57ec165674143daf4fa50378446a9f831d3b9d3",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/07/14 5:27 PM",
      "commitNameOld": "7b466b3b7087a7b8c6e4e466600f6e13284e0dee",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,35 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n       throws IOException {\n     assert dir.hasReadLock();\n-    readLock();\n-    try {\n-      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n-      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n-      final boolean srcInEZ \u003d (srcEZI !\u003d null);\n-      final boolean dstInEZ \u003d (dstEZI !\u003d null);\n-      if (srcInEZ) {\n-        if (!dstInEZ) {\n-          throw new IOException(\n-              src + \" can\u0027t be moved from an encryption zone.\");\n-        }\n-      } else {\n-        if (dstInEZ) {\n-          throw new IOException(\n-              src + \" can\u0027t be moved into an encryption zone.\");\n-        }\n+    final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n+    final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n+    final boolean srcInEZ \u003d (srcEZI !\u003d null);\n+    final boolean dstInEZ \u003d (dstEZI !\u003d null);\n+    if (srcInEZ) {\n+      if (!dstInEZ) {\n+        throw new IOException(\n+            src + \" can\u0027t be moved from an encryption zone.\");\n       }\n+    } else {\n+      if (dstInEZ) {\n+        throw new IOException(\n+            src + \" can\u0027t be moved into an encryption zone.\");\n+      }\n+    }\n \n-      if (srcInEZ || dstInEZ) {\n-        Preconditions.checkState(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n-        Preconditions.checkState(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n-        if (srcEZI !\u003d dstEZI) {\n-          final String srcEZPath \u003d getFullPathName(srcEZI);\n-          final String dstEZPath \u003d getFullPathName(dstEZI);\n-          final StringBuilder sb \u003d new StringBuilder(src);\n-          sb.append(\" can\u0027t be moved from encryption zone \");\n-          sb.append(srcEZPath);\n-          sb.append(\" to encryption zone \");\n-          sb.append(dstEZPath);\n-          sb.append(\".\");\n-          throw new IOException(sb.toString());\n-        }\n+    if (srcInEZ || dstInEZ) {\n+      Preconditions.checkState(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n+      Preconditions.checkState(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n+      if (srcEZI !\u003d dstEZI) {\n+        final String srcEZPath \u003d getFullPathName(srcEZI);\n+        final String dstEZPath \u003d getFullPathName(dstEZI);\n+        final StringBuilder sb \u003d new StringBuilder(src);\n+        sb.append(\" can\u0027t be moved from encryption zone \");\n+        sb.append(srcEZPath);\n+        sb.append(\" to encryption zone \");\n+        sb.append(dstEZPath);\n+        sb.append(\".\");\n+        throw new IOException(sb.toString());\n       }\n-    } finally {\n-      readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    assert dir.hasReadLock();\n    final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n    final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n    final boolean srcInEZ \u003d (srcEZI !\u003d null);\n    final boolean dstInEZ \u003d (dstEZI !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(\n            src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(\n            src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ || dstInEZ) {\n      Preconditions.checkState(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n      Preconditions.checkState(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d getFullPathName(srcEZI);\n        final String dstEZPath \u003d getFullPathName(dstEZI);\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "d79f27b429410daa6770a51867d7ecea728dff89": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6474. Namenode needs to get the actual keys and iv from the KeyProvider. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1609833 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/14 1:54 PM",
      "commitName": "d79f27b429410daa6770a51867d7ecea728dff89",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/07/14 9:34 PM",
      "commitNameOld": "ceed0f6c46736323bd1b077125ff4e217c649208",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.68,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,40 @@\n   void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n       throws IOException {\n-    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n-    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n-    if (srcInEZ) {\n-      if (!dstInEZ) {\n-        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n-      }\n-    } else {\n-      if (dstInEZ) {\n-        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n-      }\n-    }\n-\n-    if (srcInEZ || dstInEZ) {\n+    assert dir.hasReadLock();\n+    readLock();\n+    try {\n       final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n       final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n-      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n-      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n-      if (srcEZI !\u003d dstEZI) {\n-        final String srcEZPath \u003d srcEZI.getFullPathName();\n-        final String dstEZPath \u003d dstEZI.getFullPathName();\n-        final StringBuilder sb \u003d new StringBuilder(src);\n-        sb.append(\" can\u0027t be moved from encryption zone \");\n-        sb.append(srcEZPath);\n-        sb.append(\" to encryption zone \");\n-        sb.append(dstEZPath);\n-        sb.append(\".\");\n-        throw new IOException(sb.toString());\n+      final boolean srcInEZ \u003d (srcEZI !\u003d null);\n+      final boolean dstInEZ \u003d (dstEZI !\u003d null);\n+      if (srcInEZ) {\n+        if (!dstInEZ) {\n+          throw new IOException(\n+              src + \" can\u0027t be moved from an encryption zone.\");\n+        }\n+      } else {\n+        if (dstInEZ) {\n+          throw new IOException(\n+              src + \" can\u0027t be moved into an encryption zone.\");\n+        }\n       }\n+\n+      if (srcInEZ || dstInEZ) {\n+        Preconditions.checkState(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n+        Preconditions.checkState(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n+        if (srcEZI !\u003d dstEZI) {\n+          final String srcEZPath \u003d getFullPathName(srcEZI);\n+          final String dstEZPath \u003d getFullPathName(dstEZI);\n+          final StringBuilder sb \u003d new StringBuilder(src);\n+          sb.append(\" can\u0027t be moved from encryption zone \");\n+          sb.append(srcEZPath);\n+          sb.append(\" to encryption zone \");\n+          sb.append(dstEZPath);\n+          sb.append(\".\");\n+          throw new IOException(sb.toString());\n+        }\n+      }\n+    } finally {\n+      readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    assert dir.hasReadLock();\n    readLock();\n    try {\n      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n      final boolean srcInEZ \u003d (srcEZI !\u003d null);\n      final boolean dstInEZ \u003d (dstEZI !\u003d null);\n      if (srcInEZ) {\n        if (!dstInEZ) {\n          throw new IOException(\n              src + \" can\u0027t be moved from an encryption zone.\");\n        }\n      } else {\n        if (dstInEZ) {\n          throw new IOException(\n              src + \" can\u0027t be moved into an encryption zone.\");\n        }\n      }\n\n      if (srcInEZ || dstInEZ) {\n        Preconditions.checkState(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n        Preconditions.checkState(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n        if (srcEZI !\u003d dstEZI) {\n          final String srcEZPath \u003d getFullPathName(srcEZI);\n          final String dstEZPath \u003d getFullPathName(dstEZI);\n          final StringBuilder sb \u003d new StringBuilder(src);\n          sb.append(\" can\u0027t be moved from encryption zone \");\n          sb.append(srcEZPath);\n          sb.append(\" to encryption zone \");\n          sb.append(dstEZPath);\n          sb.append(\".\");\n          throw new IOException(sb.toString());\n        }\n      }\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "ceed0f6c46736323bd1b077125ff4e217c649208": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yrename)",
      "commitMessage": "HDFS-6635. Refactor encryption zone functionality into new EncryptionZoneManager class. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 9:34 PM",
      "commitName": "ceed0f6c46736323bd1b077125ff4e217c649208",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-6635. Refactor encryption zone functionality into new EncryptionZoneManager class. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608657 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 9:34 PM",
          "commitName": "ceed0f6c46736323bd1b077125ff4e217c649208",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "07/07/14 1:43 PM",
          "commitNameOld": "dda85637df2c970d905b550c89208ac6ca63994d",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,32 @@\n-  private void checkEncryptionZoneMoveValidity(INodesInPath srcIIP,\n-    INodesInPath dstIIP, String src)\n-    throws IOException {\n+  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n+      throws IOException {\n     final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n     final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n     if (srcInEZ) {\n       if (!dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n       }\n     } else {\n       if (dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n       }\n     }\n \n     if (srcInEZ || dstInEZ) {\n       final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n       final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n       Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n       Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n       if (srcEZI !\u003d dstEZI) {\n         final String srcEZPath \u003d srcEZI.getFullPathName();\n         final String dstEZPath \u003d dstEZI.getFullPathName();\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ || dstInEZ) {\n      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d srcEZI.getFullPathName();\n        final String dstEZPath \u003d dstEZI.getFullPathName();\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
            "oldMethodName": "checkEncryptionZoneMoveValidity",
            "newMethodName": "checkMoveValidity"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6635. Refactor encryption zone functionality into new EncryptionZoneManager class. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608657 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 9:34 PM",
          "commitName": "ceed0f6c46736323bd1b077125ff4e217c649208",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "07/07/14 1:43 PM",
          "commitNameOld": "dda85637df2c970d905b550c89208ac6ca63994d",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,32 @@\n-  private void checkEncryptionZoneMoveValidity(INodesInPath srcIIP,\n-    INodesInPath dstIIP, String src)\n-    throws IOException {\n+  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n+      throws IOException {\n     final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n     final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n     if (srcInEZ) {\n       if (!dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n       }\n     } else {\n       if (dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n       }\n     }\n \n     if (srcInEZ || dstInEZ) {\n       final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n       final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n       Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n       Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n       if (srcEZI !\u003d dstEZI) {\n         final String srcEZPath \u003d srcEZI.getFullPathName();\n         final String dstEZPath \u003d dstEZI.getFullPathName();\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ || dstInEZ) {\n      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d srcEZI.getFullPathName();\n        final String dstEZPath \u003d dstEZI.getFullPathName();\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6635. Refactor encryption zone functionality into new EncryptionZoneManager class. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608657 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 9:34 PM",
          "commitName": "ceed0f6c46736323bd1b077125ff4e217c649208",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "07/07/14 1:43 PM",
          "commitNameOld": "dda85637df2c970d905b550c89208ac6ca63994d",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,32 @@\n-  private void checkEncryptionZoneMoveValidity(INodesInPath srcIIP,\n-    INodesInPath dstIIP, String src)\n-    throws IOException {\n+  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n+      throws IOException {\n     final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n     final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n     if (srcInEZ) {\n       if (!dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n       }\n     } else {\n       if (dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n       }\n     }\n \n     if (srcInEZ || dstInEZ) {\n       final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n       final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n       Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n       Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n       if (srcEZI !\u003d dstEZI) {\n         final String srcEZPath \u003d srcEZI.getFullPathName();\n         final String dstEZPath \u003d dstEZI.getFullPathName();\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n         sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n         sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkMoveValidity(INodesInPath srcIIP, INodesInPath dstIIP, String src)\n      throws IOException {\n    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ || dstInEZ) {\n      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d srcEZI.getFullPathName();\n        final String dstEZPath \u003d dstEZI.getFullPathName();\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {
            "oldValue": "checkEncryptionZoneMoveValidity",
            "newValue": "checkMoveValidity"
          }
        }
      ]
    },
    "c38665282884122d3c82b6f68376cce036aee748": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:24 PM",
      "commitName": "c38665282884122d3c82b6f68376cce036aee748",
      "commitAuthor": "Charles Lamb",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/07/14 5:24 PM",
          "commitName": "c38665282884122d3c82b6f68376cce036aee748",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "02/07/14 5:58 PM",
          "commitNameOld": "2a3bccddd939ee0d6941aa2d22edc67dea85fe35",
          "commitAuthorOld": "Charles Lamb",
          "daysBetweenCommits": 0.98,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,33 @@\n-  private void checkEncryptionZoneMoveValidity(String src, String dst)\n+  private void checkEncryptionZoneMoveValidity(INodesInPath srcIIP,\n+    INodesInPath dstIIP, String src)\n     throws IOException {\n-    final EncryptionZone srcEZ \u003d\n-      getFSNamesystem().getEncryptionZoneForPath(src);\n-    final EncryptionZone dstEZ \u003d\n-      getFSNamesystem().getEncryptionZoneForPath(dst);\n-    final boolean srcInEZ \u003d srcEZ !\u003d null;\n-    final boolean dstInEZ \u003d dstEZ !\u003d null;\n+    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n+    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n     if (srcInEZ) {\n       if (!dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n       }\n     } else {\n       if (dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n       }\n     }\n \n     if (srcInEZ || dstInEZ) {\n-      if (!srcEZ.getPath().equals(dstEZ.getPath())) {\n+      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n+      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n+      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n+      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n+      if (srcEZI !\u003d dstEZI) {\n+        final String srcEZPath \u003d srcEZI.getFullPathName();\n+        final String dstEZPath \u003d dstEZI.getFullPathName();\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n-        sb.append(srcEZ.getPath());\n+        sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n-        sb.append(dstEZ.getPath());\n+        sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkEncryptionZoneMoveValidity(INodesInPath srcIIP,\n    INodesInPath dstIIP, String src)\n    throws IOException {\n    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ || dstInEZ) {\n      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d srcEZI.getFullPathName();\n        final String dstEZPath \u003d dstEZI.getFullPathName();\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[src-String, dst-String]",
            "newValue": "[srcIIP-INodesInPath, dstIIP-INodesInPath, src-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/07/14 5:24 PM",
          "commitName": "c38665282884122d3c82b6f68376cce036aee748",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "02/07/14 5:58 PM",
          "commitNameOld": "2a3bccddd939ee0d6941aa2d22edc67dea85fe35",
          "commitAuthorOld": "Charles Lamb",
          "daysBetweenCommits": 0.98,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,33 @@\n-  private void checkEncryptionZoneMoveValidity(String src, String dst)\n+  private void checkEncryptionZoneMoveValidity(INodesInPath srcIIP,\n+    INodesInPath dstIIP, String src)\n     throws IOException {\n-    final EncryptionZone srcEZ \u003d\n-      getFSNamesystem().getEncryptionZoneForPath(src);\n-    final EncryptionZone dstEZ \u003d\n-      getFSNamesystem().getEncryptionZoneForPath(dst);\n-    final boolean srcInEZ \u003d srcEZ !\u003d null;\n-    final boolean dstInEZ \u003d dstEZ !\u003d null;\n+    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n+    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n     if (srcInEZ) {\n       if (!dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n       }\n     } else {\n       if (dstInEZ) {\n         throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n       }\n     }\n \n     if (srcInEZ || dstInEZ) {\n-      if (!srcEZ.getPath().equals(dstEZ.getPath())) {\n+      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n+      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n+      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n+      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n+      if (srcEZI !\u003d dstEZI) {\n+        final String srcEZPath \u003d srcEZI.getFullPathName();\n+        final String dstEZPath \u003d dstEZI.getFullPathName();\n         final StringBuilder sb \u003d new StringBuilder(src);\n         sb.append(\" can\u0027t be moved from encryption zone \");\n-        sb.append(srcEZ.getPath());\n+        sb.append(srcEZPath);\n         sb.append(\" to encryption zone \");\n-        sb.append(dstEZ.getPath());\n+        sb.append(dstEZPath);\n         sb.append(\".\");\n         throw new IOException(sb.toString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkEncryptionZoneMoveValidity(INodesInPath srcIIP,\n    INodesInPath dstIIP, String src)\n    throws IOException {\n    final boolean srcInEZ \u003d (getEncryptionZoneForPath(srcIIP) !\u003d null);\n    final boolean dstInEZ \u003d (getEncryptionZoneForPath(dstIIP) !\u003d null);\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ || dstInEZ) {\n      final EncryptionZoneInt srcEZI \u003d getEncryptionZoneForPath(srcIIP);\n      final EncryptionZoneInt dstEZI \u003d getEncryptionZoneForPath(dstIIP);\n      Preconditions.checkArgument(srcEZI !\u003d null, \"couldn\u0027t find src EZ?\");\n      Preconditions.checkArgument(dstEZI !\u003d null, \"couldn\u0027t find dst EZ?\");\n      if (srcEZI !\u003d dstEZI) {\n        final String srcEZPath \u003d srcEZI.getFullPathName();\n        final String dstEZPath \u003d dstEZI.getFullPathName();\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZPath);\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZPath);\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "31617733aca2025cff1ffb841a533a5b1de016a5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6389. Rename restrictions for encryption zones. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1606253 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/14 2:45 PM",
      "commitName": "31617733aca2025cff1ffb841a533a5b1de016a5",
      "commitAuthor": "Charles Lamb",
      "diff": "@@ -0,0 +1,30 @@\n+  private void checkEncryptionZoneMoveValidity(String src, String dst)\n+    throws IOException {\n+    final EncryptionZone srcEZ \u003d\n+      getFSNamesystem().getEncryptionZoneForPath(src);\n+    final EncryptionZone dstEZ \u003d\n+      getFSNamesystem().getEncryptionZoneForPath(dst);\n+    final boolean srcInEZ \u003d srcEZ !\u003d null;\n+    final boolean dstInEZ \u003d dstEZ !\u003d null;\n+    if (srcInEZ) {\n+      if (!dstInEZ) {\n+        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n+      }\n+    } else {\n+      if (dstInEZ) {\n+        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n+      }\n+    }\n+\n+    if (srcInEZ || dstInEZ) {\n+      if (!srcEZ.getPath().equals(dstEZ.getPath())) {\n+        final StringBuilder sb \u003d new StringBuilder(src);\n+        sb.append(\" can\u0027t be moved from encryption zone \");\n+        sb.append(srcEZ.getPath());\n+        sb.append(\" to encryption zone \");\n+        sb.append(dstEZ.getPath());\n+        sb.append(\".\");\n+        throw new IOException(sb.toString());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkEncryptionZoneMoveValidity(String src, String dst)\n    throws IOException {\n    final EncryptionZone srcEZ \u003d\n      getFSNamesystem().getEncryptionZoneForPath(src);\n    final EncryptionZone dstEZ \u003d\n      getFSNamesystem().getEncryptionZoneForPath(dst);\n    final boolean srcInEZ \u003d srcEZ !\u003d null;\n    final boolean dstInEZ \u003d dstEZ !\u003d null;\n    if (srcInEZ) {\n      if (!dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved from an encryption zone.\");\n      }\n    } else {\n      if (dstInEZ) {\n        throw new IOException(src + \" can\u0027t be moved into an encryption zone.\");\n      }\n    }\n\n    if (srcInEZ || dstInEZ) {\n      if (!srcEZ.getPath().equals(dstEZ.getPath())) {\n        final StringBuilder sb \u003d new StringBuilder(src);\n        sb.append(\" can\u0027t be moved from encryption zone \");\n        sb.append(srcEZ.getPath());\n        sb.append(\" to encryption zone \");\n        sb.append(dstEZ.getPath());\n        sb.append(\".\");\n        throw new IOException(sb.toString());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
    }
  }
}