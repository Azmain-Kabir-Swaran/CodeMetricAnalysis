{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSConfigToCSConfigRuleHandler.java",
  "functionName": "handle",
  "functionId": "handle___actionName-String__fsSetting-String__message-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigRuleHandler.java",
  "functionStartLine": 231,
  "functionEndLine": 256,
  "numCommitsSeen": 7,
  "timeTaken": 1680,
  "changeHistory": [
    "24e6a9e43a210cdecaa8e87926eef09c869988f9",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d"
  ],
  "changeHistoryShort": {
    "24e6a9e43a210cdecaa8e87926eef09c869988f9": "Ybodychange",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "24e6a9e43a210cdecaa8e87926eef09c869988f9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10067. Add dry-run feature to FS-CS converter tool. Contributed by Peter Bacsko\n",
      "commitDate": "12/01/20 4:48 AM",
      "commitName": "24e6a9e43a210cdecaa8e87926eef09c869988f9",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "21/10/19 1:16 PM",
      "commitNameOld": "3f7756dc6cd541918eec2b221891864d29b174d3",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 82.69,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   private void handle(String actionName, String fsSetting, String message) {\n     RuleAction action \u003d actions.get(actionName);\n \n     if (action !\u003d null) {\n       switch (action) {\n       case ABORT:\n         String exceptionMessage;\n         if (message !\u003d null) {\n           exceptionMessage \u003d message;\n         } else {\n           exceptionMessage \u003d format(\"Setting %s is not supported\", fsSetting);\n         }\n-        throw new UnsupportedPropertyException(exceptionMessage);\n+        conversionOptions.handleError(exceptionMessage);\n+        break;\n       case WARNING:\n-        if (message !\u003d null) {\n-          LOG.warn(message);\n-        } else {\n-          LOG.warn(\"Setting {} is not supported, ignoring conversion\",\n-              fsSetting);\n-        }\n+        String loggedMsg \u003d (message !\u003d null) ? message :\n+            format(\"Setting %s is not supported, ignoring conversion\",\n+                fsSetting);\n+        conversionOptions.handleWarning(loggedMsg, LOG);\n         break;\n       default:\n         throw new IllegalArgumentException(\n             \"Unknown action \" + action);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handle(String actionName, String fsSetting, String message) {\n    RuleAction action \u003d actions.get(actionName);\n\n    if (action !\u003d null) {\n      switch (action) {\n      case ABORT:\n        String exceptionMessage;\n        if (message !\u003d null) {\n          exceptionMessage \u003d message;\n        } else {\n          exceptionMessage \u003d format(\"Setting %s is not supported\", fsSetting);\n        }\n        conversionOptions.handleError(exceptionMessage);\n        break;\n      case WARNING:\n        String loggedMsg \u003d (message !\u003d null) ? message :\n            format(\"Setting %s is not supported, ignoring conversion\",\n                fsSetting);\n        conversionOptions.handleWarning(loggedMsg, LOG);\n        break;\n      default:\n        throw new IllegalArgumentException(\n            \"Unknown action \" + action);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigRuleHandler.java",
      "extendedDetails": {}
    },
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,27 @@\n+  private void handle(String actionName, String fsSetting, String message) {\n+    RuleAction action \u003d actions.get(actionName);\n+\n+    if (action !\u003d null) {\n+      switch (action) {\n+      case ABORT:\n+        String exceptionMessage;\n+        if (message !\u003d null) {\n+          exceptionMessage \u003d message;\n+        } else {\n+          exceptionMessage \u003d format(\"Setting %s is not supported\", fsSetting);\n+        }\n+        throw new UnsupportedPropertyException(exceptionMessage);\n+      case WARNING:\n+        if (message !\u003d null) {\n+          LOG.warn(message);\n+        } else {\n+          LOG.warn(\"Setting {} is not supported, ignoring conversion\",\n+              fsSetting);\n+        }\n+        break;\n+      default:\n+        throw new IllegalArgumentException(\n+            \"Unknown action \" + action);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handle(String actionName, String fsSetting, String message) {\n    RuleAction action \u003d actions.get(actionName);\n\n    if (action !\u003d null) {\n      switch (action) {\n      case ABORT:\n        String exceptionMessage;\n        if (message !\u003d null) {\n          exceptionMessage \u003d message;\n        } else {\n          exceptionMessage \u003d format(\"Setting %s is not supported\", fsSetting);\n        }\n        throw new UnsupportedPropertyException(exceptionMessage);\n      case WARNING:\n        if (message !\u003d null) {\n          LOG.warn(message);\n        } else {\n          LOG.warn(\"Setting {} is not supported, ignoring conversion\",\n              fsSetting);\n        }\n        break;\n      default:\n        throw new IllegalArgumentException(\n            \"Unknown action \" + action);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigRuleHandler.java"
    }
  }
}