{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "decResourceRequest",
  "functionId": "decResourceRequest___priority-Priority__resourceName-String__execTypeReq-ExecutionTypeRequest__capability-Resource__req-T",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 953,
  "functionEndLine": 987,
  "numCommitsSeen": 201,
  "timeTaken": 5651,
  "changeHistory": [
    "aae629913cee0157c945a2c7384c7bf398f10616",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
    "19c743c1bbcaf3df8f1d63e557143c960a538c42",
    "51432779588fdd741b4840601f5db637ec783d92",
    "dfd807afab0fae3839c9cc5d552aa0304444f956",
    "ac914f79bc80b152e71e7de5497b73f22824f4a7",
    "3520039979188c4ca6e69654223b3ac794e8bf8f",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "3492f5eff1a22aba0d09d72a9dfd3353525c072e",
    "0a61990855c23ebfa065145fa01084e84781b51c"
  ],
  "changeHistoryShort": {
    "aae629913cee0157c945a2c7384c7bf398f10616": "Yparameterchange",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": "Ymultichange(Yparameterchange,Ybodychange)",
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": "Ybodychange",
    "51432779588fdd741b4840601f5db637ec783d92": "Ymultichange(Yparameterchange,Ybodychange)",
    "dfd807afab0fae3839c9cc5d552aa0304444f956": "Ybodychange",
    "ac914f79bc80b152e71e7de5497b73f22824f4a7": "Ybodychange",
    "3520039979188c4ca6e69654223b3ac794e8bf8f": "Ymultichange(Yparameterchange,Ybodychange)",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "3492f5eff1a22aba0d09d72a9dfd3353525c072e": "Ymultichange(Yparameterchange,Ybodychange)",
    "0a61990855c23ebfa065145fa01084e84781b51c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aae629913cee0157c945a2c7384c7bf398f10616": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 11:07 PM",
      "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthor": "Sunil G",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 15.9,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   private void decResourceRequest(Priority priority, String resourceName,\n-      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req) {\n+      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n     RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n         getTable(req.getAllocationRequestId());\n     if (remoteRequestsTable !\u003d null) {\n       @SuppressWarnings(\"unchecked\")\n       ResourceRequestInfo resourceRequestInfo \u003d\n           remoteRequestsTable.decResourceRequest(priority, resourceName,\n               execTypeReq, capability, req);\n       // send the ResourceRequest to RM even if is 0 because it needs to\n       // override a previously sent value. If ResourceRequest was not sent\n       // previously then sending 0 aught to be a no-op on RM\n       if (resourceRequestInfo !\u003d null) {\n         addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n         // delete entry from map if no longer needed\n         if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n           remoteRequestsTable.remove(priority, resourceName,\n               execTypeReq.getExecutionType(), capability);\n         }\n \n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"AFTER decResourceRequest:\"\n               + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n               + \" priority\u003d\" + priority.getPriority()\n               + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n               + resourceRequestInfo.remoteRequest.getNumContainers()\n               + \" #asks\u003d\" + ask.size());\n         }\n       }\n     } else {\n       LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n           + req.getAllocationRequestId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void decResourceRequest(Priority priority, String resourceName,\n      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n    RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n        getTable(req.getAllocationRequestId());\n    if (remoteRequestsTable !\u003d null) {\n      @SuppressWarnings(\"unchecked\")\n      ResourceRequestInfo resourceRequestInfo \u003d\n          remoteRequestsTable.decResourceRequest(priority, resourceName,\n              execTypeReq, capability, req);\n      // send the ResourceRequest to RM even if is 0 because it needs to\n      // override a previously sent value. If ResourceRequest was not sent\n      // previously then sending 0 aught to be a no-op on RM\n      if (resourceRequestInfo !\u003d null) {\n        addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n        // delete entry from map if no longer needed\n        if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n          remoteRequestsTable.remove(priority, resourceName,\n              execTypeReq.getExecutionType(), capability);\n        }\n\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"AFTER decResourceRequest:\"\n              + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n              + \" priority\u003d\" + priority.getPriority()\n              + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n              + resourceRequestInfo.remoteRequest.getNumContainers()\n              + \" #asks\u003d\" + ask.size());\n        }\n      }\n    } else {\n      LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n          + req.getAllocationRequestId());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {
        "oldValue": "[priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-ProfileCapability, req-T]",
        "newValue": "[priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-Resource, req-T]"
      }
    },
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "24/07/17 12:03 PM",
          "commitNameOld": "4c40cd451cbdbce5d2b94ad0e7e3cc991c3439c5",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 49.89,
          "commitsBetweenForRepo": 442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n   private void decResourceRequest(Priority priority, String resourceName,\n-      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n+      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req) {\n     RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n         getTable(req.getAllocationRequestId());\n     if (remoteRequestsTable !\u003d null) {\n       @SuppressWarnings(\"unchecked\")\n       ResourceRequestInfo resourceRequestInfo \u003d\n           remoteRequestsTable.decResourceRequest(priority, resourceName,\n               execTypeReq, capability, req);\n       // send the ResourceRequest to RM even if is 0 because it needs to\n       // override a previously sent value. If ResourceRequest was not sent\n-      // previously then sending 0 ought to be a no-op on RM\n+      // previously then sending 0 aught to be a no-op on RM\n       if (resourceRequestInfo !\u003d null) {\n         addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n         // delete entry from map if no longer needed\n         if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n           remoteRequestsTable.remove(priority, resourceName,\n               execTypeReq.getExecutionType(), capability);\n         }\n \n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"AFTER decResourceRequest:\"\n               + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n               + \" priority\u003d\" + priority.getPriority()\n               + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n               + resourceRequestInfo.remoteRequest.getNumContainers()\n               + \" #asks\u003d\" + ask.size());\n         }\n       }\n     } else {\n       LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n           + req.getAllocationRequestId());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, String resourceName,\n      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req) {\n    RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n        getTable(req.getAllocationRequestId());\n    if (remoteRequestsTable !\u003d null) {\n      @SuppressWarnings(\"unchecked\")\n      ResourceRequestInfo resourceRequestInfo \u003d\n          remoteRequestsTable.decResourceRequest(priority, resourceName,\n              execTypeReq, capability, req);\n      // send the ResourceRequest to RM even if is 0 because it needs to\n      // override a previously sent value. If ResourceRequest was not sent\n      // previously then sending 0 aught to be a no-op on RM\n      if (resourceRequestInfo !\u003d null) {\n        addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n        // delete entry from map if no longer needed\n        if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n          remoteRequestsTable.remove(priority, resourceName,\n              execTypeReq.getExecutionType(), capability);\n        }\n\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"AFTER decResourceRequest:\"\n              + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n              + \" priority\u003d\" + priority.getPriority()\n              + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n              + resourceRequestInfo.remoteRequest.getNumContainers()\n              + \" #asks\u003d\" + ask.size());\n        }\n      }\n    } else {\n      LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n          + req.getAllocationRequestId());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-Resource, req-T]",
            "newValue": "[priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-ProfileCapability, req-T]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "24/07/17 12:03 PM",
          "commitNameOld": "4c40cd451cbdbce5d2b94ad0e7e3cc991c3439c5",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 49.89,
          "commitsBetweenForRepo": 442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n   private void decResourceRequest(Priority priority, String resourceName,\n-      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n+      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req) {\n     RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n         getTable(req.getAllocationRequestId());\n     if (remoteRequestsTable !\u003d null) {\n       @SuppressWarnings(\"unchecked\")\n       ResourceRequestInfo resourceRequestInfo \u003d\n           remoteRequestsTable.decResourceRequest(priority, resourceName,\n               execTypeReq, capability, req);\n       // send the ResourceRequest to RM even if is 0 because it needs to\n       // override a previously sent value. If ResourceRequest was not sent\n-      // previously then sending 0 ought to be a no-op on RM\n+      // previously then sending 0 aught to be a no-op on RM\n       if (resourceRequestInfo !\u003d null) {\n         addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n         // delete entry from map if no longer needed\n         if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n           remoteRequestsTable.remove(priority, resourceName,\n               execTypeReq.getExecutionType(), capability);\n         }\n \n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"AFTER decResourceRequest:\"\n               + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n               + \" priority\u003d\" + priority.getPriority()\n               + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n               + resourceRequestInfo.remoteRequest.getNumContainers()\n               + \" #asks\u003d\" + ask.size());\n         }\n       }\n     } else {\n       LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n           + req.getAllocationRequestId());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, String resourceName,\n      ExecutionTypeRequest execTypeReq, ProfileCapability capability, T req) {\n    RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n        getTable(req.getAllocationRequestId());\n    if (remoteRequestsTable !\u003d null) {\n      @SuppressWarnings(\"unchecked\")\n      ResourceRequestInfo resourceRequestInfo \u003d\n          remoteRequestsTable.decResourceRequest(priority, resourceName,\n              execTypeReq, capability, req);\n      // send the ResourceRequest to RM even if is 0 because it needs to\n      // override a previously sent value. If ResourceRequest was not sent\n      // previously then sending 0 aught to be a no-op on RM\n      if (resourceRequestInfo !\u003d null) {\n        addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n        // delete entry from map if no longer needed\n        if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n          remoteRequestsTable.remove(priority, resourceName,\n              execTypeReq.getExecutionType(), capability);\n        }\n\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"AFTER decResourceRequest:\"\n              + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n              + \" priority\u003d\" + priority.getPriority()\n              + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n              + resourceRequestInfo.remoteRequest.getNumContainers()\n              + \" #asks\u003d\" + ask.size());\n        }\n      }\n    } else {\n      LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n          + req.getAllocationRequestId());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4889. Changes in AMRMClient for identifying resource-requests explicitly. (Arun Suresh via wangda)\n",
      "commitDate": "26/08/16 5:14 PM",
      "commitName": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/06/16 9:42 AM",
      "commitNameOld": "51432779588fdd741b4840601f5db637ec783d92",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 75.31,
      "commitsBetweenForRepo": 650,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,35 @@\n   private void decResourceRequest(Priority priority, String resourceName,\n       ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n-    @SuppressWarnings(\"unchecked\")\n-    ResourceRequestInfo resourceRequestInfo \u003d\n-        remoteRequestsTable.decResourceRequest(priority, resourceName,\n-            execTypeReq, capability, req);\n-    // send the ResourceRequest to RM even if is 0 because it needs to override\n-    // a previously sent value. If ResourceRequest was not sent previously then\n-    // sending 0 aught to be a no-op on RM\n-    if (resourceRequestInfo !\u003d null) {\n-      addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n+    RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n+        getTable(req.getAllocationRequestId());\n+    if (remoteRequestsTable !\u003d null) {\n+      @SuppressWarnings(\"unchecked\")\n+      ResourceRequestInfo resourceRequestInfo \u003d\n+          remoteRequestsTable.decResourceRequest(priority, resourceName,\n+              execTypeReq, capability, req);\n+      // send the ResourceRequest to RM even if is 0 because it needs to\n+      // override a previously sent value. If ResourceRequest was not sent\n+      // previously then sending 0 ought to be a no-op on RM\n+      if (resourceRequestInfo !\u003d null) {\n+        addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n-      // delete entry from map if no longer needed\n-      if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n-        this.remoteRequestsTable.remove(priority, resourceName,\n-            execTypeReq.getExecutionType(), capability);\n-      }\n+        // delete entry from map if no longer needed\n+        if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n+          remoteRequestsTable.remove(priority, resourceName,\n+              execTypeReq.getExecutionType(), capability);\n+        }\n \n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n-            + \" priority\u003d\" + priority.getPriority()\n-            + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-            + resourceRequestInfo.remoteRequest.getNumContainers()\n-            + \" #asks\u003d\" + ask.size());\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"AFTER decResourceRequest:\"\n+              + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n+              + \" priority\u003d\" + priority.getPriority()\n+              + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n+              + resourceRequestInfo.remoteRequest.getNumContainers()\n+              + \" #asks\u003d\" + ask.size());\n+        }\n       }\n+    } else {\n+      LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n+          + req.getAllocationRequestId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void decResourceRequest(Priority priority, String resourceName,\n      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n    RemoteRequestsTable\u003cT\u003e remoteRequestsTable \u003d\n        getTable(req.getAllocationRequestId());\n    if (remoteRequestsTable !\u003d null) {\n      @SuppressWarnings(\"unchecked\")\n      ResourceRequestInfo resourceRequestInfo \u003d\n          remoteRequestsTable.decResourceRequest(priority, resourceName,\n              execTypeReq, capability, req);\n      // send the ResourceRequest to RM even if is 0 because it needs to\n      // override a previously sent value. If ResourceRequest was not sent\n      // previously then sending 0 ought to be a no-op on RM\n      if (resourceRequestInfo !\u003d null) {\n        addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n        // delete entry from map if no longer needed\n        if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n          remoteRequestsTable.remove(priority, resourceName,\n              execTypeReq.getExecutionType(), capability);\n        }\n\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"AFTER decResourceRequest:\"\n              + \" allocationRequestId\u003d\" + req.getAllocationRequestId()\n              + \" priority\u003d\" + priority.getPriority()\n              + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n              + resourceRequestInfo.remoteRequest.getNumContainers()\n              + \" #asks\u003d\" + ask.size());\n        }\n      }\n    } else {\n      LOG.info(\"No remoteRequestTable found with allocationRequestId\u003d\"\n          + req.getAllocationRequestId());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "51432779588fdd741b4840601f5db637ec783d92": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5124. Modify AMRMClient to set the ExecutionType in the ResourceRequest. (asuresh)\n",
      "commitDate": "12/06/16 9:42 AM",
      "commitName": "51432779588fdd741b4840601f5db637ec783d92",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5124. Modify AMRMClient to set the ExecutionType in the ResourceRequest. (asuresh)\n",
          "commitDate": "12/06/16 9:42 AM",
          "commitName": "51432779588fdd741b4840601f5db637ec783d92",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/05/16 8:54 AM",
          "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 14.03,
          "commitsBetweenForRepo": 85,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,66 +1,27 @@\n-  private void decResourceRequest(Priority priority, \n-                                   String resourceName,\n-                                   Resource capability, \n-                                   T req) {\n-    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n-      this.remoteRequestsTable.get(priority);\n-    \n-    if(remoteRequests \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Not decrementing resource as priority \" + priority \n-            + \" is not present in request table\");\n-      }\n-      return;\n-    }\n-    \n-    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n-    if (reqMap \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Not decrementing resource as \" + resourceName\n-            + \" is not present in request table\");\n-      }\n-      return;\n-    }\n-    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n-          + \" priority\u003d\" + priority.getPriority()\n-          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + resourceRequestInfo.remoteRequest.getNumContainers() \n-          + \" #asks\u003d\" + ask.size());\n-    }\n-\n-    resourceRequestInfo.remoteRequest.setNumContainers(\n-        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n-\n-    resourceRequestInfo.containerRequests.remove(req);\n-    \n-    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n-      // guard against spurious removals\n-      resourceRequestInfo.remoteRequest.setNumContainers(0);\n-    }\n+  private void decResourceRequest(Priority priority, String resourceName,\n+      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n+    @SuppressWarnings(\"unchecked\")\n+    ResourceRequestInfo resourceRequestInfo \u003d\n+        remoteRequestsTable.decResourceRequest(priority, resourceName,\n+            execTypeReq, capability, req);\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n-    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n+    if (resourceRequestInfo !\u003d null) {\n+      addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n-    // delete entries from map if no longer needed\n-    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n-      reqMap.remove(capability);\n-      if (reqMap.size() \u003d\u003d 0) {\n-        remoteRequests.remove(resourceName);\n+      // delete entry from map if no longer needed\n+      if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n+        this.remoteRequestsTable.remove(priority, resourceName,\n+            execTypeReq.getExecutionType(), capability);\n       }\n-      if (remoteRequests.size() \u003d\u003d 0) {\n-        remoteRequestsTable.remove(priority);\n-      }\n-    }\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n-          + \" priority\u003d\" + priority.getPriority()\n-          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + resourceRequestInfo.remoteRequest.getNumContainers() \n-          + \" #asks\u003d\" + ask.size());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n+            + \" priority\u003d\" + priority.getPriority()\n+            + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n+            + resourceRequestInfo.remoteRequest.getNumContainers()\n+            + \" #asks\u003d\" + ask.size());\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, String resourceName,\n      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n    @SuppressWarnings(\"unchecked\")\n    ResourceRequestInfo resourceRequestInfo \u003d\n        remoteRequestsTable.decResourceRequest(priority, resourceName,\n            execTypeReq, capability, req);\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    if (resourceRequestInfo !\u003d null) {\n      addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n      // delete entry from map if no longer needed\n      if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n        this.remoteRequestsTable.remove(priority, resourceName,\n            execTypeReq.getExecutionType(), capability);\n      }\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n            + \" priority\u003d\" + priority.getPriority()\n            + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n            + resourceRequestInfo.remoteRequest.getNumContainers()\n            + \" #asks\u003d\" + ask.size());\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, resourceName-String, capability-Resource, req-T]",
            "newValue": "[priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-Resource, req-T]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5124. Modify AMRMClient to set the ExecutionType in the ResourceRequest. (asuresh)\n",
          "commitDate": "12/06/16 9:42 AM",
          "commitName": "51432779588fdd741b4840601f5db637ec783d92",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/05/16 8:54 AM",
          "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 14.03,
          "commitsBetweenForRepo": 85,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,66 +1,27 @@\n-  private void decResourceRequest(Priority priority, \n-                                   String resourceName,\n-                                   Resource capability, \n-                                   T req) {\n-    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n-      this.remoteRequestsTable.get(priority);\n-    \n-    if(remoteRequests \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Not decrementing resource as priority \" + priority \n-            + \" is not present in request table\");\n-      }\n-      return;\n-    }\n-    \n-    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n-    if (reqMap \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Not decrementing resource as \" + resourceName\n-            + \" is not present in request table\");\n-      }\n-      return;\n-    }\n-    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n-          + \" priority\u003d\" + priority.getPriority()\n-          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + resourceRequestInfo.remoteRequest.getNumContainers() \n-          + \" #asks\u003d\" + ask.size());\n-    }\n-\n-    resourceRequestInfo.remoteRequest.setNumContainers(\n-        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n-\n-    resourceRequestInfo.containerRequests.remove(req);\n-    \n-    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n-      // guard against spurious removals\n-      resourceRequestInfo.remoteRequest.setNumContainers(0);\n-    }\n+  private void decResourceRequest(Priority priority, String resourceName,\n+      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n+    @SuppressWarnings(\"unchecked\")\n+    ResourceRequestInfo resourceRequestInfo \u003d\n+        remoteRequestsTable.decResourceRequest(priority, resourceName,\n+            execTypeReq, capability, req);\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n-    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n+    if (resourceRequestInfo !\u003d null) {\n+      addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n-    // delete entries from map if no longer needed\n-    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n-      reqMap.remove(capability);\n-      if (reqMap.size() \u003d\u003d 0) {\n-        remoteRequests.remove(resourceName);\n+      // delete entry from map if no longer needed\n+      if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n+        this.remoteRequestsTable.remove(priority, resourceName,\n+            execTypeReq.getExecutionType(), capability);\n       }\n-      if (remoteRequests.size() \u003d\u003d 0) {\n-        remoteRequestsTable.remove(priority);\n-      }\n-    }\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n-          + \" priority\u003d\" + priority.getPriority()\n-          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + resourceRequestInfo.remoteRequest.getNumContainers() \n-          + \" #asks\u003d\" + ask.size());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n+            + \" priority\u003d\" + priority.getPriority()\n+            + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n+            + resourceRequestInfo.remoteRequest.getNumContainers()\n+            + \" #asks\u003d\" + ask.size());\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, String resourceName,\n      ExecutionTypeRequest execTypeReq, Resource capability, T req) {\n    @SuppressWarnings(\"unchecked\")\n    ResourceRequestInfo resourceRequestInfo \u003d\n        remoteRequestsTable.decResourceRequest(priority, resourceName,\n            execTypeReq, capability, req);\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    if (resourceRequestInfo !\u003d null) {\n      addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n      // delete entry from map if no longer needed\n      if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n        this.remoteRequestsTable.remove(priority, resourceName,\n            execTypeReq.getExecutionType(), capability);\n      }\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n            + \" priority\u003d\" + priority.getPriority()\n            + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n            + resourceRequestInfo.remoteRequest.getNumContainers()\n            + \" #asks\u003d\" + ask.size());\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "dfd807afab0fae3839c9cc5d552aa0304444f956": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12428. Fix inconsistency between log-level guards and statements. Contributed by Jagadesh Kiran N and Jackie Chang.\n",
      "commitDate": "21/09/15 8:54 PM",
      "commitName": "dfd807afab0fae3839c9cc5d552aa0304444f956",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "06/02/15 11:34 AM",
      "commitNameOld": "c1957fef29b07fea70938e971b30532a1e131fd0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 227.35,
      "commitsBetweenForRepo": 1773,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,66 @@\n   private void decResourceRequest(Priority priority, \n                                    String resourceName,\n                                    Resource capability, \n                                    T req) {\n     Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     \n     if(remoteRequests \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as priority \" + priority \n             + \" is not present in request table\");\n       }\n       return;\n     }\n     \n     Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as \" + resourceName\n             + \" is not present in request table\");\n       }\n       return;\n     }\n     ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n           + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n \n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n \n     resourceRequestInfo.containerRequests.remove(req);\n     \n     if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n       // guard against spurious removals\n       resourceRequestInfo.remoteRequest.setNumContainers(0);\n     }\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n     addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n     // delete entries from map if no longer needed\n     if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n       reqMap.remove(capability);\n       if (reqMap.size() \u003d\u003d 0) {\n         remoteRequests.remove(resourceName);\n       }\n       if (remoteRequests.size() \u003d\u003d 0) {\n         remoteRequestsTable.remove(priority);\n       }\n     }\n \n     if (LOG.isDebugEnabled()) {\n-      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n+      LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n           + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void decResourceRequest(Priority priority, \n                                   String resourceName,\n                                   Resource capability, \n                                   T req) {\n    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n\n    resourceRequestInfo.containerRequests.remove(req);\n    \n    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      resourceRequestInfo.remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "ac914f79bc80b152e71e7de5497b73f22824f4a7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-918. Remove ApplicationAttemptId from RegisterApplicationMasterRequestProto. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/13 5:57 PM",
      "commitName": "ac914f79bc80b152e71e7de5497b73f22824f4a7",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "16/07/13 5:47 PM",
      "commitNameOld": "3520039979188c4ca6e69654223b3ac794e8bf8f",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 2.01,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,66 @@\n   private void decResourceRequest(Priority priority, \n                                    String resourceName,\n                                    Resource capability, \n                                    T req) {\n     Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     \n     if(remoteRequests \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as priority \" + priority \n             + \" is not present in request table\");\n       }\n       return;\n     }\n     \n     Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as \" + resourceName\n             + \" is not present in request table\");\n       }\n       return;\n     }\n     ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n-          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n+          + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n \n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n \n     resourceRequestInfo.containerRequests.remove(req);\n     \n     if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n       // guard against spurious removals\n       resourceRequestInfo.remoteRequest.setNumContainers(0);\n     }\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n     addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n     // delete entries from map if no longer needed\n     if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n       reqMap.remove(capability);\n       if (reqMap.size() \u003d\u003d 0) {\n         remoteRequests.remove(resourceName);\n       }\n       if (remoteRequests.size() \u003d\u003d 0) {\n         remoteRequestsTable.remove(priority);\n       }\n     }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n-          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n+          + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void decResourceRequest(Priority priority, \n                                   String resourceName,\n                                   Resource capability, \n                                   T req) {\n    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n\n    resourceRequestInfo.containerRequests.remove(req);\n    \n    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      resourceRequestInfo.remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "3520039979188c4ca6e69654223b3ac794e8bf8f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-927. Change ContainerRequest to not have more than 1 container count and remove StoreContainerRequest (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503960 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 5:47 PM",
      "commitName": "3520039979188c4ca6e69654223b3ac794e8bf8f",
      "commitAuthor": "Bikas Saha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-927. Change ContainerRequest to not have more than 1 container count and remove StoreContainerRequest (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/13 5:47 PM",
          "commitName": "3520039979188c4ca6e69654223b3ac794e8bf8f",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "16/07/13 3:47 PM",
          "commitNameOld": "33b5a81509ed08e88bb692682e75fb779f8e2e19",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,69 +1,66 @@\n   private void decResourceRequest(Priority priority, \n                                    String resourceName,\n                                    Resource capability, \n-                                   int containerCount, \n                                    T req) {\n     Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     \n     if(remoteRequests \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as priority \" + priority \n             + \" is not present in request table\");\n       }\n       return;\n     }\n     \n     Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as \" + resourceName\n             + \" is not present in request table\");\n       }\n       return;\n     }\n     ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n \n     resourceRequestInfo.remoteRequest.setNumContainers(\n-        resourceRequestInfo.remoteRequest.getNumContainers() - containerCount);\n+        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n \n-    if(req instanceof StoredContainerRequest) {\n-      resourceRequestInfo.containerRequests.remove(req);\n-    }\n+    resourceRequestInfo.containerRequests.remove(req);\n     \n     if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n       // guard against spurious removals\n       resourceRequestInfo.remoteRequest.setNumContainers(0);\n     }\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n     addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n     // delete entries from map if no longer needed\n     if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n       reqMap.remove(capability);\n       if (reqMap.size() \u003d\u003d 0) {\n         remoteRequests.remove(resourceName);\n       }\n       if (remoteRequests.size() \u003d\u003d 0) {\n         remoteRequestsTable.remove(priority);\n       }\n     }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, \n                                   String resourceName,\n                                   Resource capability, \n                                   T req) {\n    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n\n    resourceRequestInfo.containerRequests.remove(req);\n    \n    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      resourceRequestInfo.remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, resourceName-String, capability-Resource, containerCount-int, req-T]",
            "newValue": "[priority-Priority, resourceName-String, capability-Resource, req-T]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-927. Change ContainerRequest to not have more than 1 container count and remove StoreContainerRequest (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/13 5:47 PM",
          "commitName": "3520039979188c4ca6e69654223b3ac794e8bf8f",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "16/07/13 3:47 PM",
          "commitNameOld": "33b5a81509ed08e88bb692682e75fb779f8e2e19",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,69 +1,66 @@\n   private void decResourceRequest(Priority priority, \n                                    String resourceName,\n                                    Resource capability, \n-                                   int containerCount, \n                                    T req) {\n     Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     \n     if(remoteRequests \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as priority \" + priority \n             + \" is not present in request table\");\n       }\n       return;\n     }\n     \n     Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as \" + resourceName\n             + \" is not present in request table\");\n       }\n       return;\n     }\n     ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n \n     resourceRequestInfo.remoteRequest.setNumContainers(\n-        resourceRequestInfo.remoteRequest.getNumContainers() - containerCount);\n+        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n \n-    if(req instanceof StoredContainerRequest) {\n-      resourceRequestInfo.containerRequests.remove(req);\n-    }\n+    resourceRequestInfo.containerRequests.remove(req);\n     \n     if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n       // guard against spurious removals\n       resourceRequestInfo.remoteRequest.setNumContainers(0);\n     }\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n     addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n     // delete entries from map if no longer needed\n     if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n       reqMap.remove(capability);\n       if (reqMap.size() \u003d\u003d 0) {\n         remoteRequests.remove(resourceName);\n       }\n       if (remoteRequests.size() \u003d\u003d 0) {\n         remoteRequestsTable.remove(priority);\n       }\n     }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + resourceRequestInfo.remoteRequest.getNumContainers() \n           + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, \n                                   String resourceName,\n                                   Resource capability, \n                                   T req) {\n    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() - 1);\n\n    resourceRequestInfo.containerRequests.remove(req);\n    \n    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      resourceRequestInfo.remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void decResourceRequest(Priority priority, \n                                   String resourceName,\n                                   Resource capability, \n                                   int containerCount, \n                                   T req) {\n    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() - containerCount);\n\n    if(req instanceof StoredContainerRequest) {\n      resourceRequestInfo.containerRequests.remove(req);\n    }\n    \n    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      resourceRequestInfo.remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
      }
    },
    "3492f5eff1a22aba0d09d72a9dfd3353525c072e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-660. Improve AMRMClient with matching requests (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488485 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/06/13 1:23 AM",
      "commitName": "3492f5eff1a22aba0d09d72a9dfd3353525c072e",
      "commitAuthor": "Bikas Saha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-660. Improve AMRMClient with matching requests (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488485 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/06/13 1:23 AM",
          "commitName": "3492f5eff1a22aba0d09d72a9dfd3353525c072e",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "08/05/13 10:32 PM",
          "commitNameOld": "9c4f86879cad6d6e19255d4ae8f28b61328bd10b",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 23.12,
          "commitsBetweenForRepo": 117,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,59 +1,69 @@\n-  private void decResourceRequest(Priority priority, String resourceName,\n-      Resource capability, int containerCount) {\n-    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n+  private void decResourceRequest(Priority priority, \n+                                   String resourceName,\n+                                   Resource capability, \n+                                   int containerCount, \n+                                   T req) {\n+    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     \n     if(remoteRequests \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as priority \" + priority \n             + \" is not present in request table\");\n       }\n       return;\n     }\n     \n-    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n+    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as \" + resourceName\n             + \" is not present in request table\");\n       }\n       return;\n     }\n-    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n+    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+          + resourceRequestInfo.remoteRequest.getNumContainers() \n+          + \" #asks\u003d\" + ask.size());\n     }\n \n-    remoteRequest.\n-        setNumContainers(remoteRequest.getNumContainers() - containerCount);\n-    if(remoteRequest.getNumContainers() \u003c 0) {\n+    resourceRequestInfo.remoteRequest.setNumContainers(\n+        resourceRequestInfo.remoteRequest.getNumContainers() - containerCount);\n+\n+    if(req instanceof StoredContainerRequest) {\n+      resourceRequestInfo.containerRequests.remove(req);\n+    }\n+    \n+    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n       // guard against spurious removals\n-      remoteRequest.setNumContainers(0);\n+      resourceRequestInfo.remoteRequest.setNumContainers(0);\n     }\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n-    addResourceRequestToAsk(remoteRequest);\n+    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n     // delete entries from map if no longer needed\n-    if (remoteRequest.getNumContainers() \u003d\u003d 0) {\n+    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n       reqMap.remove(capability);\n       if (reqMap.size() \u003d\u003d 0) {\n         remoteRequests.remove(resourceName);\n       }\n       if (remoteRequests.size() \u003d\u003d 0) {\n         remoteRequestsTable.remove(priority);\n       }\n     }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+          + resourceRequestInfo.remoteRequest.getNumContainers() \n+          + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, \n                                   String resourceName,\n                                   Resource capability, \n                                   int containerCount, \n                                   T req) {\n    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() - containerCount);\n\n    if(req instanceof StoredContainerRequest) {\n      resourceRequestInfo.containerRequests.remove(req);\n    }\n    \n    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      resourceRequestInfo.remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, resourceName-String, capability-Resource, containerCount-int]",
            "newValue": "[priority-Priority, resourceName-String, capability-Resource, containerCount-int, req-T]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-660. Improve AMRMClient with matching requests (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488485 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/06/13 1:23 AM",
          "commitName": "3492f5eff1a22aba0d09d72a9dfd3353525c072e",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "08/05/13 10:32 PM",
          "commitNameOld": "9c4f86879cad6d6e19255d4ae8f28b61328bd10b",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 23.12,
          "commitsBetweenForRepo": 117,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,59 +1,69 @@\n-  private void decResourceRequest(Priority priority, String resourceName,\n-      Resource capability, int containerCount) {\n-    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n+  private void decResourceRequest(Priority priority, \n+                                   String resourceName,\n+                                   Resource capability, \n+                                   int containerCount, \n+                                   T req) {\n+    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     \n     if(remoteRequests \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as priority \" + priority \n             + \" is not present in request table\");\n       }\n       return;\n     }\n     \n-    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n+    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Not decrementing resource as \" + resourceName\n             + \" is not present in request table\");\n       }\n       return;\n     }\n-    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n+    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+          + resourceRequestInfo.remoteRequest.getNumContainers() \n+          + \" #asks\u003d\" + ask.size());\n     }\n \n-    remoteRequest.\n-        setNumContainers(remoteRequest.getNumContainers() - containerCount);\n-    if(remoteRequest.getNumContainers() \u003c 0) {\n+    resourceRequestInfo.remoteRequest.setNumContainers(\n+        resourceRequestInfo.remoteRequest.getNumContainers() - containerCount);\n+\n+    if(req instanceof StoredContainerRequest) {\n+      resourceRequestInfo.containerRequests.remove(req);\n+    }\n+    \n+    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n       // guard against spurious removals\n-      remoteRequest.setNumContainers(0);\n+      resourceRequestInfo.remoteRequest.setNumContainers(0);\n     }\n     // send the ResourceRequest to RM even if is 0 because it needs to override\n     // a previously sent value. If ResourceRequest was not sent previously then\n     // sending 0 aught to be a no-op on RM\n-    addResourceRequestToAsk(remoteRequest);\n+    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n \n     // delete entries from map if no longer needed\n-    if (remoteRequest.getNumContainers() \u003d\u003d 0) {\n+    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n       reqMap.remove(capability);\n       if (reqMap.size() \u003d\u003d 0) {\n         remoteRequests.remove(resourceName);\n       }\n       if (remoteRequests.size() \u003d\u003d 0) {\n         remoteRequestsTable.remove(priority);\n       }\n     }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n           + appAttemptId + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+          + resourceRequestInfo.remoteRequest.getNumContainers() \n+          + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void decResourceRequest(Priority priority, \n                                   String resourceName,\n                                   Resource capability, \n                                   int containerCount, \n                                   T req) {\n    Map\u003cString, TreeMap\u003cResource, ResourceRequestInfo\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequestInfo\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequestInfo resourceRequestInfo \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() - containerCount);\n\n    if(req instanceof StoredContainerRequest) {\n      resourceRequestInfo.containerRequests.remove(req);\n    }\n    \n    if(resourceRequestInfo.remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      resourceRequestInfo.remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(resourceRequestInfo.remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (resourceRequestInfo.remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + resourceRequestInfo.remoteRequest.getNumContainers() \n          + \" #asks\u003d\" + ask.size());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "0a61990855c23ebfa065145fa01084e84781b51c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-103. Add a yarn AM-RM client module. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/13 11:11 AM",
      "commitName": "0a61990855c23ebfa065145fa01084e84781b51c",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,59 @@\n+  private void decResourceRequest(Priority priority, String resourceName,\n+      Resource capability, int containerCount) {\n+    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n+      this.remoteRequestsTable.get(priority);\n+    \n+    if(remoteRequests \u003d\u003d null) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Not decrementing resource as priority \" + priority \n+            + \" is not present in request table\");\n+      }\n+      return;\n+    }\n+    \n+    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n+    if (reqMap \u003d\u003d null) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Not decrementing resource as \" + resourceName\n+            + \" is not present in request table\");\n+      }\n+      return;\n+    }\n+    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n+          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n+          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n+          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+    }\n+\n+    remoteRequest.\n+        setNumContainers(remoteRequest.getNumContainers() - containerCount);\n+    if(remoteRequest.getNumContainers() \u003c 0) {\n+      // guard against spurious removals\n+      remoteRequest.setNumContainers(0);\n+    }\n+    // send the ResourceRequest to RM even if is 0 because it needs to override\n+    // a previously sent value. If ResourceRequest was not sent previously then\n+    // sending 0 aught to be a no-op on RM\n+    addResourceRequestToAsk(remoteRequest);\n+\n+    // delete entries from map if no longer needed\n+    if (remoteRequest.getNumContainers() \u003d\u003d 0) {\n+      reqMap.remove(capability);\n+      if (reqMap.size() \u003d\u003d 0) {\n+        remoteRequests.remove(resourceName);\n+      }\n+      if (remoteRequests.size() \u003d\u003d 0) {\n+        remoteRequestsTable.remove(priority);\n+      }\n+    }\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n+          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n+          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n+          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void decResourceRequest(Priority priority, String resourceName,\n      Resource capability, int containerCount) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    \n    if(remoteRequests \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as priority \" + priority \n            + \" is not present in request table\");\n      }\n      return;\n    }\n    \n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Not decrementing resource as \" + resourceName\n            + \" is not present in request table\");\n      }\n      return;\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"BEFORE decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n\n    remoteRequest.\n        setNumContainers(remoteRequest.getNumContainers() - containerCount);\n    if(remoteRequest.getNumContainers() \u003c 0) {\n      // guard against spurious removals\n      remoteRequest.setNumContainers(0);\n    }\n    // send the ResourceRequest to RM even if is 0 because it needs to override\n    // a previously sent value. If ResourceRequest was not sent previously then\n    // sending 0 aught to be a no-op on RM\n    addResourceRequestToAsk(remoteRequest);\n\n    // delete entries from map if no longer needed\n    if (remoteRequest.getNumContainers() \u003d\u003d 0) {\n      reqMap.remove(capability);\n      if (reqMap.size() \u003d\u003d 0) {\n        remoteRequests.remove(resourceName);\n      }\n      if (remoteRequests.size() \u003d\u003d 0) {\n        remoteRequestsTable.remove(priority);\n      }\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.info(\"AFTER decResourceRequest:\" + \" applicationId\u003d\"\n          + appAttemptId + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java"
    }
  }
}