{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "write",
  "functionId": "write___fs-FileSystem(modifiers-final)__path-Path(modifiers-final)__lines-Iterable__? extends CharSequence__(modifiers-final)__cs-Charset(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 1715,
  "functionEndLine": 1733,
  "numCommitsSeen": 52,
  "timeTaken": 783,
  "changeHistory": [
    "5d180463dcb689fa3b7c69b097a86398a03b41ad"
  ],
  "changeHistoryShort": {
    "5d180463dcb689fa3b7c69b097a86398a03b41ad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5d180463dcb689fa3b7c69b097a86398a03b41ad": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16790. Add Write Convenience Methods.\n\nContributed by David Mollitor.\n\nThis adds operations in FileUtil to write text to a file via\neither a FileSystem or FileContext instance.\n\nChange-Id: I5fe8fcf1bdbdbc734e137f922a75a822f2b88410\n",
      "commitDate": "15/01/20 10:38 AM",
      "commitName": "5d180463dcb689fa3b7c69b097a86398a03b41ad",
      "commitAuthor": "David Mollitor",
      "diff": "@@ -0,0 +1,19 @@\n+  public static FileSystem write(final FileSystem fs, final Path path,\n+      final Iterable\u003c? extends CharSequence\u003e lines, final Charset cs)\n+      throws IOException {\n+\n+    Objects.requireNonNull(path);\n+    Objects.requireNonNull(lines);\n+    Objects.requireNonNull(cs);\n+\n+    CharsetEncoder encoder \u003d cs.newEncoder();\n+    try (FSDataOutputStream out \u003d fs.createFile(path).overwrite(true).build();\n+        BufferedWriter writer \u003d\n+            new BufferedWriter(new OutputStreamWriter(out, encoder))) {\n+      for (CharSequence line : lines) {\n+        writer.append(line);\n+        writer.newLine();\n+      }\n+    }\n+    return fs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileSystem write(final FileSystem fs, final Path path,\n      final Iterable\u003c? extends CharSequence\u003e lines, final Charset cs)\n      throws IOException {\n\n    Objects.requireNonNull(path);\n    Objects.requireNonNull(lines);\n    Objects.requireNonNull(cs);\n\n    CharsetEncoder encoder \u003d cs.newEncoder();\n    try (FSDataOutputStream out \u003d fs.createFile(path).overwrite(true).build();\n        BufferedWriter writer \u003d\n            new BufferedWriter(new OutputStreamWriter(out, encoder))) {\n      for (CharSequence line : lines) {\n        writer.append(line);\n        writer.newLine();\n      }\n    }\n    return fs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}