{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSUtils.java",
  "functionName": "generateNodes",
  "functionId": "generateNodes___numNodes-int__numRacks-int",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
  "functionStartLine": 210,
  "functionEndLine": 226,
  "numCommitsSeen": 23,
  "timeTaken": 2651,
  "changeHistory": [
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
    "3082552b3b991df846caf572b58e44308ddf8eeb",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b"
  ],
  "changeHistoryShort": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": "Ymultichange(Yreturntypechange,Ybodychange)",
    "3082552b3b991df846caf572b58e44308ddf8eeb": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "31/07/18 9:36 AM",
      "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/04/18 1:11 PM",
          "commitNameOld": "78860372bd8048168c6aa27a9526c40f5869cf2c",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 104.85,
          "commitsBetweenForRepo": 1242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n+  public static Set\u003cNodeDetails\u003e generateNodes(int numNodes,\n       int numRacks){\n-    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n+    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n     if (numRacks \u003c 1) {\n       numRacks \u003d 1;\n     }\n \n     if (numRacks \u003e numNodes) {\n       numRacks \u003d numNodes;\n     }\n \n     for (int i \u003d 0; i \u003c numNodes; i++) {\n-      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n+      nodeSet.add(new NodeDetails(\n+          \"/rack\" + i % numRacks + \"/node\" + i));\n     }\n     return nodeSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cNodeDetails\u003e generateNodes(int numNodes,\n      int numRacks){\n    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n    if (numRacks \u003c 1) {\n      numRacks \u003d 1;\n    }\n\n    if (numRacks \u003e numNodes) {\n      numRacks \u003d numNodes;\n    }\n\n    for (int i \u003d 0; i \u003c numNodes; i++) {\n      nodeSet.add(new NodeDetails(\n          \"/rack\" + i % numRacks + \"/node\" + i));\n    }\n    return nodeSet;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {
            "oldValue": "Set\u003c? extends String\u003e",
            "newValue": "Set\u003cNodeDetails\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/04/18 1:11 PM",
          "commitNameOld": "78860372bd8048168c6aa27a9526c40f5869cf2c",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 104.85,
          "commitsBetweenForRepo": 1242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n+  public static Set\u003cNodeDetails\u003e generateNodes(int numNodes,\n       int numRacks){\n-    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n+    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n     if (numRacks \u003c 1) {\n       numRacks \u003d 1;\n     }\n \n     if (numRacks \u003e numNodes) {\n       numRacks \u003d numNodes;\n     }\n \n     for (int i \u003d 0; i \u003c numNodes; i++) {\n-      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n+      nodeSet.add(new NodeDetails(\n+          \"/rack\" + i % numRacks + \"/node\" + i));\n     }\n     return nodeSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003cNodeDetails\u003e generateNodes(int numNodes,\n      int numRacks){\n    Set\u003cNodeDetails\u003e nodeSet \u003d new HashSet\u003c\u003e();\n    if (numRacks \u003c 1) {\n      numRacks \u003d 1;\n    }\n\n    if (numRacks \u003e numNodes) {\n      numRacks \u003d numNodes;\n    }\n\n    for (int i \u003d 0; i \u003c numNodes; i++) {\n      nodeSet.add(new NodeDetails(\n          \"/rack\" + i % numRacks + \"/node\" + i));\n    }\n    return nodeSet;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "3082552b3b991df846caf572b58e44308ddf8eeb": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6522. Make SLS JSON input file format simple and scalable (yufeigu via rkanter)\n",
      "commitDate": "04/05/17 5:21 PM",
      "commitName": "3082552b3b991df846caf572b58e44308ddf8eeb",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-6522. Make SLS JSON input file format simple and scalable (yufeigu via rkanter)\n",
          "commitDate": "04/05/17 5:21 PM",
          "commitName": "3082552b3b991df846caf572b58e44308ddf8eeb",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "25/04/17 4:26 PM",
          "commitNameOld": "475f933b41276b1bdeeec09e30369120f7eccdb8",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 9.04,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,16 @@\n-  public static Set\u003c? extends String\u003e generateNodesFromSynth(\n-      int numNodes, int nodesPerRack) {\n-    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n+  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n+      int numRacks){\n+    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n+    if (numRacks \u003c 1) {\n+      numRacks \u003d 1;\n+    }\n+\n+    if (numRacks \u003e numNodes) {\n+      numRacks \u003d numNodes;\n+    }\n+\n     for (int i \u003d 0; i \u003c numNodes; i++) {\n-      nodeSet.add(\"/rack\" + i % nodesPerRack + \"/node\" + i);\n+      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n     }\n     return nodeSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n      int numRacks){\n    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n    if (numRacks \u003c 1) {\n      numRacks \u003d 1;\n    }\n\n    if (numRacks \u003e numNodes) {\n      numRacks \u003d numNodes;\n    }\n\n    for (int i \u003d 0; i \u003c numNodes; i++) {\n      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n    }\n    return nodeSet;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {
            "oldValue": "generateNodesFromSynth",
            "newValue": "generateNodes"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6522. Make SLS JSON input file format simple and scalable (yufeigu via rkanter)\n",
          "commitDate": "04/05/17 5:21 PM",
          "commitName": "3082552b3b991df846caf572b58e44308ddf8eeb",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "25/04/17 4:26 PM",
          "commitNameOld": "475f933b41276b1bdeeec09e30369120f7eccdb8",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 9.04,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,16 @@\n-  public static Set\u003c? extends String\u003e generateNodesFromSynth(\n-      int numNodes, int nodesPerRack) {\n-    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n+  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n+      int numRacks){\n+    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n+    if (numRacks \u003c 1) {\n+      numRacks \u003d 1;\n+    }\n+\n+    if (numRacks \u003e numNodes) {\n+      numRacks \u003d numNodes;\n+    }\n+\n     for (int i \u003d 0; i \u003c numNodes; i++) {\n-      nodeSet.add(\"/rack\" + i % nodesPerRack + \"/node\" + i);\n+      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n     }\n     return nodeSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n      int numRacks){\n    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n    if (numRacks \u003c 1) {\n      numRacks \u003d 1;\n    }\n\n    if (numRacks \u003e numNodes) {\n      numRacks \u003d numNodes;\n    }\n\n    for (int i \u003d 0; i \u003c numNodes; i++) {\n      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n    }\n    return nodeSet;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {
            "oldValue": "[numNodes-int, nodesPerRack-int]",
            "newValue": "[numNodes-int, numRacks-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6522. Make SLS JSON input file format simple and scalable (yufeigu via rkanter)\n",
          "commitDate": "04/05/17 5:21 PM",
          "commitName": "3082552b3b991df846caf572b58e44308ddf8eeb",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "25/04/17 4:26 PM",
          "commitNameOld": "475f933b41276b1bdeeec09e30369120f7eccdb8",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 9.04,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,16 @@\n-  public static Set\u003c? extends String\u003e generateNodesFromSynth(\n-      int numNodes, int nodesPerRack) {\n-    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n+  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n+      int numRacks){\n+    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n+    if (numRacks \u003c 1) {\n+      numRacks \u003d 1;\n+    }\n+\n+    if (numRacks \u003e numNodes) {\n+      numRacks \u003d numNodes;\n+    }\n+\n     for (int i \u003d 0; i \u003c numNodes; i++) {\n-      nodeSet.add(\"/rack\" + i % nodesPerRack + \"/node\" + i);\n+      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n     }\n     return nodeSet;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Set\u003c? extends String\u003e generateNodes(int numNodes,\n      int numRacks){\n    Set\u003cString\u003e nodeSet \u003d new HashSet\u003c\u003e();\n    if (numRacks \u003c 1) {\n      numRacks \u003d 1;\n    }\n\n    if (numRacks \u003e numNodes) {\n      numRacks \u003d numNodes;\n    }\n\n    for (int i \u003d 0; i \u003c numNodes; i++) {\n      nodeSet.add(\"/rack\" + i % numRacks + \"/node\" + i);\n    }\n    return nodeSet;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,8 @@\n+  public static Set\u003c? extends String\u003e generateNodesFromSynth(\n+      int numNodes, int nodesPerRack) {\n+    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n+    for (int i \u003d 0; i \u003c numNodes; i++) {\n+      nodeSet.add(\"/rack\" + i % nodesPerRack + \"/node\" + i);\n+    }\n+    return nodeSet;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003c? extends String\u003e generateNodesFromSynth(\n      int numNodes, int nodesPerRack) {\n    Set\u003cString\u003e nodeSet \u003d new HashSet\u003cString\u003e();\n    for (int i \u003d 0; i \u003c numNodes; i++) {\n      nodeSet.add(\"/rack\" + i % nodesPerRack + \"/node\" + i);\n    }\n    return nodeSet;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java"
    }
  }
}