{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SwiftNativeInputStream.java",
  "functionName": "read",
  "functionId": "read___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeInputStream.java",
  "functionStartLine": 162,
  "functionEndLine": 189,
  "numCommitsSeen": 4,
  "timeTaken": 940,
  "changeHistory": [
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874"
  ],
  "changeHistoryShort": {
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7": "Ybodychange",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13017. Implementations of InputStream.read(buffer, offset, bytes) to exit 0 if bytes\u003d\u003d0. Contributed by Steve Loughran.\n",
      "commitDate": "26/10/16 11:46 PM",
      "commitName": "0bdd263d82a4510f16df49238d57c9f78ac28ae7",
      "commitAuthor": "Masatake Iwasaki",
      "commitDateOld": "03/07/14 5:10 AM",
      "commitNameOld": "becc23fb65a5c2b632034b8b2c4c08832d47fd96",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 846.78,
      "commitsBetweenForRepo": 6654,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   public synchronized int read(byte[] b, int off, int len) throws IOException {\n     SwiftUtils.debug(LOG, \"read(buffer, %d, %d)\", off, len);\n     SwiftUtils.validateReadArgs(b, off, len);\n+    if (len \u003d\u003d 0) {\n+      return 0;\n+    }\n     int result \u003d -1;\n     try {\n       verifyOpen();\n       result \u003d httpStream.read(b, off, len);\n     } catch (IOException e) {\n       //other IO problems are viewed as transient and re-attempted\n       LOG.info(\"Received IOException while reading \u0027\" + path +\n                \"\u0027, attempting to reopen: \" + e);\n       LOG.debug(\"IOE on read()\" + e, e);\n       if (reopenBuffer()) {\n         result \u003d httpStream.read(b, off, len);\n       }\n     }\n     if (result \u003e 0) {\n       incPos(result);\n       if (statistics !\u003d null) {\n         statistics.incrementBytesRead(result);\n       }\n     }\n \n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int read(byte[] b, int off, int len) throws IOException {\n    SwiftUtils.debug(LOG, \"read(buffer, %d, %d)\", off, len);\n    SwiftUtils.validateReadArgs(b, off, len);\n    if (len \u003d\u003d 0) {\n      return 0;\n    }\n    int result \u003d -1;\n    try {\n      verifyOpen();\n      result \u003d httpStream.read(b, off, len);\n    } catch (IOException e) {\n      //other IO problems are viewed as transient and re-attempted\n      LOG.info(\"Received IOException while reading \u0027\" + path +\n               \"\u0027, attempting to reopen: \" + e);\n      LOG.debug(\"IOE on read()\" + e, e);\n      if (reopenBuffer()) {\n        result \u003d httpStream.read(b, off, len);\n      }\n    }\n    if (result \u003e 0) {\n      incPos(result);\n      if (statistics !\u003d null) {\n        statistics.incrementBytesRead(result);\n      }\n    }\n\n    return result;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeInputStream.java",
      "extendedDetails": {}
    },
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8545. Filesystem Implementation for OpenStack Swift\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 4:32 AM",
      "commitName": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,25 @@\n+  public synchronized int read(byte[] b, int off, int len) throws IOException {\n+    SwiftUtils.debug(LOG, \"read(buffer, %d, %d)\", off, len);\n+    SwiftUtils.validateReadArgs(b, off, len);\n+    int result \u003d -1;\n+    try {\n+      verifyOpen();\n+      result \u003d httpStream.read(b, off, len);\n+    } catch (IOException e) {\n+      //other IO problems are viewed as transient and re-attempted\n+      LOG.info(\"Received IOException while reading \u0027\" + path +\n+               \"\u0027, attempting to reopen: \" + e);\n+      LOG.debug(\"IOE on read()\" + e, e);\n+      if (reopenBuffer()) {\n+        result \u003d httpStream.read(b, off, len);\n+      }\n+    }\n+    if (result \u003e 0) {\n+      incPos(result);\n+      if (statistics !\u003d null) {\n+        statistics.incrementBytesRead(result);\n+      }\n+    }\n+\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int read(byte[] b, int off, int len) throws IOException {\n    SwiftUtils.debug(LOG, \"read(buffer, %d, %d)\", off, len);\n    SwiftUtils.validateReadArgs(b, off, len);\n    int result \u003d -1;\n    try {\n      verifyOpen();\n      result \u003d httpStream.read(b, off, len);\n    } catch (IOException e) {\n      //other IO problems are viewed as transient and re-attempted\n      LOG.info(\"Received IOException while reading \u0027\" + path +\n               \"\u0027, attempting to reopen: \" + e);\n      LOG.debug(\"IOE on read()\" + e, e);\n      if (reopenBuffer()) {\n        result \u003d httpStream.read(b, off, len);\n      }\n    }\n    if (result \u003e 0) {\n      incPos(result);\n      if (statistics !\u003d null) {\n        statistics.incrementBytesRead(result);\n      }\n    }\n\n    return result;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeInputStream.java"
    }
  }
}