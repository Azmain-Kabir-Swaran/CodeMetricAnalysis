{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReflectionUtils.java",
  "functionName": "logThreadInfo",
  "functionId": "logThreadInfo___log-Logger__title-String__minInterval-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
  "functionStartLine": 240,
  "functionEndLine": 261,
  "numCommitsSeen": 12,
  "timeTaken": 1150,
  "changeHistory": [
    "1c4a798505a2bc8285b709188f6492dbb33a0968",
    "b17e655b7069a6e9dab28d9f5fc34bc95a27e5d5"
  ],
  "changeHistoryShort": {
    "1c4a798505a2bc8285b709188f6492dbb33a0968": "Ybodychange",
    "b17e655b7069a6e9dab28d9f5fc34bc95a27e5d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1c4a798505a2bc8285b709188f6492dbb33a0968": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14894. ReflectionUtils should use Time.monotonicNow to mesaure duration. Contributed by Bharat Viswanadham.\n",
      "commitDate": "23/09/17 11:56 AM",
      "commitName": "1c4a798505a2bc8285b709188f6492dbb33a0968",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "04/07/17 3:41 AM",
      "commitNameOld": "b17e655b7069a6e9dab28d9f5fc34bc95a27e5d5",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 81.34,
      "commitsBetweenForRepo": 667,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public static void logThreadInfo(Logger log,\n                                    String title,\n                                    long minInterval) {\n     boolean dumpStack \u003d false;\n     if (log.isInfoEnabled()) {\n       synchronized (ReflectionUtils.class) {\n-        long now \u003d Time.now();\n+        long now \u003d Time.monotonicNow();\n         if (now - previousLogTime \u003e\u003d minInterval * 1000) {\n           previousLogTime \u003d now;\n           dumpStack \u003d true;\n         }\n       }\n       if (dumpStack) {\n         try {\n           ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();\n           printThreadInfo(new PrintStream(buffer, false, \"UTF-8\"), title);\n           log.info(buffer.toString(Charset.defaultCharset().name()));\n         } catch (UnsupportedEncodingException ignored) {\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void logThreadInfo(Logger log,\n                                   String title,\n                                   long minInterval) {\n    boolean dumpStack \u003d false;\n    if (log.isInfoEnabled()) {\n      synchronized (ReflectionUtils.class) {\n        long now \u003d Time.monotonicNow();\n        if (now - previousLogTime \u003e\u003d minInterval * 1000) {\n          previousLogTime \u003d now;\n          dumpStack \u003d true;\n        }\n      }\n      if (dumpStack) {\n        try {\n          ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();\n          printThreadInfo(new PrintStream(buffer, false, \"UTF-8\"), title);\n          log.info(buffer.toString(Charset.defaultCharset().name()));\n        } catch (UnsupportedEncodingException ignored) {\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {}
    },
    "b17e655b7069a6e9dab28d9f5fc34bc95a27e5d5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14617. Add ReflectionUtils.logThreadInfo that accept slf4j logger API.\nContributed by Wenxin He.\n",
      "commitDate": "04/07/17 3:41 AM",
      "commitName": "b17e655b7069a6e9dab28d9f5fc34bc95a27e5d5",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,22 @@\n+  public static void logThreadInfo(Logger log,\n+                                   String title,\n+                                   long minInterval) {\n+    boolean dumpStack \u003d false;\n+    if (log.isInfoEnabled()) {\n+      synchronized (ReflectionUtils.class) {\n+        long now \u003d Time.now();\n+        if (now - previousLogTime \u003e\u003d minInterval * 1000) {\n+          previousLogTime \u003d now;\n+          dumpStack \u003d true;\n+        }\n+      }\n+      if (dumpStack) {\n+        try {\n+          ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();\n+          printThreadInfo(new PrintStream(buffer, false, \"UTF-8\"), title);\n+          log.info(buffer.toString(Charset.defaultCharset().name()));\n+        } catch (UnsupportedEncodingException ignored) {\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void logThreadInfo(Logger log,\n                                   String title,\n                                   long minInterval) {\n    boolean dumpStack \u003d false;\n    if (log.isInfoEnabled()) {\n      synchronized (ReflectionUtils.class) {\n        long now \u003d Time.now();\n        if (now - previousLogTime \u003e\u003d minInterval * 1000) {\n          previousLogTime \u003d now;\n          dumpStack \u003d true;\n        }\n      }\n      if (dumpStack) {\n        try {\n          ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();\n          printThreadInfo(new PrintStream(buffer, false, \"UTF-8\"), title);\n          log.info(buffer.toString(Charset.defaultCharset().name()));\n        } catch (UnsupportedEncodingException ignored) {\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java"
    }
  }
}