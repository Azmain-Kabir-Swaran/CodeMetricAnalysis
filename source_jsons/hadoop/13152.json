{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockUnderConstructionFeature.java",
  "functionName": "setExpectedLocations",
  "functionId": "setExpectedLocations___block-Block__targets-DatanodeStorageInfo[]__blockType-BlockType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java",
  "functionStartLine": 74,
  "functionEndLine": 99,
  "numCommitsSeen": 20,
  "timeTaken": 3445,
  "changeHistory": [
    "a2a5d7b5bca715835d92816e7b267b59f7270708",
    "6419900ac24a5493827abf9b5d90373bc1043e0b",
    "164cbe643988f878f0f4100a4de51783e5b6738e"
  ],
  "changeHistoryShort": {
    "a2a5d7b5bca715835d92816e7b267b59f7270708": "Ymultichange(Yparameterchange,Ybodychange)",
    "6419900ac24a5493827abf9b5d90373bc1043e0b": "Ybodychange",
    "164cbe643988f878f0f4100a4de51783e5b6738e": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)"
  },
  "changeHistoryDetails": {
    "a2a5d7b5bca715835d92816e7b267b59f7270708": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10759. Change fsimage bool isStriped from boolean to an enum. Contributed by Ewan Higgs.\n",
      "commitDate": "18/01/17 1:31 PM",
      "commitName": "a2a5d7b5bca715835d92816e7b267b59f7270708",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10759. Change fsimage bool isStriped from boolean to an enum. Contributed by Ewan Higgs.\n",
          "commitDate": "18/01/17 1:31 PM",
          "commitName": "a2a5d7b5bca715835d92816e7b267b59f7270708",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "14/03/16 9:54 AM",
          "commitNameOld": "5644137adad30c84e40d2c4719627b3aabc73628",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 310.19,
          "commitsBetweenForRepo": 2154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n   public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n-      boolean isStriped) {\n+      BlockType blockType) {\n     if (targets \u003d\u003d null) {\n       return;\n     }\n     int numLocations \u003d 0;\n     for (DatanodeStorageInfo target : targets) {\n       if (target !\u003d null) {\n         numLocations++;\n       }\n     }\n \n     this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n     int offset \u003d 0;\n     for(int i \u003d 0; i \u003c targets.length; i++) {\n       if (targets[i] !\u003d null) {\n         // when creating a new striped block we simply sequentially assign block\n         // index to each storage\n-        Block replicaBlock \u003d isStriped ?\n+        Block replicaBlock \u003d blockType \u003d\u003d BlockType.STRIPED ?\n             new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n             block;\n         replicas[offset++] \u003d new ReplicaUnderConstruction(replicaBlock,\n             targets[i], ReplicaState.RBW);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n      BlockType blockType) {\n    if (targets \u003d\u003d null) {\n      return;\n    }\n    int numLocations \u003d 0;\n    for (DatanodeStorageInfo target : targets) {\n      if (target !\u003d null) {\n        numLocations++;\n      }\n    }\n\n    this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n    int offset \u003d 0;\n    for(int i \u003d 0; i \u003c targets.length; i++) {\n      if (targets[i] !\u003d null) {\n        // when creating a new striped block we simply sequentially assign block\n        // index to each storage\n        Block replicaBlock \u003d blockType \u003d\u003d BlockType.STRIPED ?\n            new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n            block;\n        replicas[offset++] \u003d new ReplicaUnderConstruction(replicaBlock,\n            targets[i], ReplicaState.RBW);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java",
          "extendedDetails": {
            "oldValue": "[block-Block, targets-DatanodeStorageInfo[], isStriped-boolean]",
            "newValue": "[block-Block, targets-DatanodeStorageInfo[], blockType-BlockType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10759. Change fsimage bool isStriped from boolean to an enum. Contributed by Ewan Higgs.\n",
          "commitDate": "18/01/17 1:31 PM",
          "commitName": "a2a5d7b5bca715835d92816e7b267b59f7270708",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "14/03/16 9:54 AM",
          "commitNameOld": "5644137adad30c84e40d2c4719627b3aabc73628",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 310.19,
          "commitsBetweenForRepo": 2154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n   public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n-      boolean isStriped) {\n+      BlockType blockType) {\n     if (targets \u003d\u003d null) {\n       return;\n     }\n     int numLocations \u003d 0;\n     for (DatanodeStorageInfo target : targets) {\n       if (target !\u003d null) {\n         numLocations++;\n       }\n     }\n \n     this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n     int offset \u003d 0;\n     for(int i \u003d 0; i \u003c targets.length; i++) {\n       if (targets[i] !\u003d null) {\n         // when creating a new striped block we simply sequentially assign block\n         // index to each storage\n-        Block replicaBlock \u003d isStriped ?\n+        Block replicaBlock \u003d blockType \u003d\u003d BlockType.STRIPED ?\n             new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n             block;\n         replicas[offset++] \u003d new ReplicaUnderConstruction(replicaBlock,\n             targets[i], ReplicaState.RBW);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n      BlockType blockType) {\n    if (targets \u003d\u003d null) {\n      return;\n    }\n    int numLocations \u003d 0;\n    for (DatanodeStorageInfo target : targets) {\n      if (target !\u003d null) {\n        numLocations++;\n      }\n    }\n\n    this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n    int offset \u003d 0;\n    for(int i \u003d 0; i \u003c targets.length; i++) {\n      if (targets[i] !\u003d null) {\n        // when creating a new striped block we simply sequentially assign block\n        // index to each storage\n        Block replicaBlock \u003d blockType \u003d\u003d BlockType.STRIPED ?\n            new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n            block;\n        replicas[offset++] \u003d new ReplicaUnderConstruction(replicaBlock,\n            targets[i], ReplicaState.RBW);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "6419900ac24a5493827abf9b5d90373bc1043e0b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9040. Erasure coding: coordinate data streamers in DFSStripedOutputStream. Contributed by Jing Zhao and Walter Su.\n",
      "commitDate": "28/09/15 2:40 PM",
      "commitName": "6419900ac24a5493827abf9b5d90373bc1043e0b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "01/09/15 2:30 PM",
      "commitNameOld": "ab56fcdb1219d03713b408dd3a95d7405635254d",
      "commitAuthorOld": "",
      "daysBetweenCommits": 27.01,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,26 @@\n   public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n       boolean isStriped) {\n-    int numLocations \u003d targets \u003d\u003d null ? 0 : targets.length;\n+    if (targets \u003d\u003d null) {\n+      return;\n+    }\n+    int numLocations \u003d 0;\n+    for (DatanodeStorageInfo target : targets) {\n+      if (target !\u003d null) {\n+        numLocations++;\n+      }\n+    }\n+\n     this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n-    for(int i \u003d 0; i \u003c numLocations; i++) {\n-      // when creating a new striped block we simply sequentially assign block\n-      // index to each storage\n-      Block replicaBlock \u003d isStriped ?\n-          new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n-          block;\n-      replicas[i] \u003d new ReplicaUnderConstruction(replicaBlock, targets[i],\n-          ReplicaState.RBW);\n+    int offset \u003d 0;\n+    for(int i \u003d 0; i \u003c targets.length; i++) {\n+      if (targets[i] !\u003d null) {\n+        // when creating a new striped block we simply sequentially assign block\n+        // index to each storage\n+        Block replicaBlock \u003d isStriped ?\n+            new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n+            block;\n+        replicas[offset++] \u003d new ReplicaUnderConstruction(replicaBlock,\n+            targets[i], ReplicaState.RBW);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n      boolean isStriped) {\n    if (targets \u003d\u003d null) {\n      return;\n    }\n    int numLocations \u003d 0;\n    for (DatanodeStorageInfo target : targets) {\n      if (target !\u003d null) {\n        numLocations++;\n      }\n    }\n\n    this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n    int offset \u003d 0;\n    for(int i \u003d 0; i \u003c targets.length; i++) {\n      if (targets[i] !\u003d null) {\n        // when creating a new striped block we simply sequentially assign block\n        // index to each storage\n        Block replicaBlock \u003d isStriped ?\n            new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n            block;\n        replicas[offset++] \u003d new ReplicaUnderConstruction(replicaBlock,\n            targets[i], ReplicaState.RBW);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java",
      "extendedDetails": {}
    },
    "164cbe643988f878f0f4100a4de51783e5b6738e": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-8909. Erasure coding: update BlockInfoContiguousUC and BlockInfoStripedUC to use BlockUnderConstructionFeature. Contributed by Jing Zhao.\n",
      "commitDate": "27/08/15 1:02 AM",
      "commitName": "164cbe643988f878f0f4100a4de51783e5b6738e",
      "commitAuthor": "Walter Su",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8909. Erasure coding: update BlockInfoContiguousUC and BlockInfoStripedUC to use BlockUnderConstructionFeature. Contributed by Jing Zhao.\n",
          "commitDate": "27/08/15 1:02 AM",
          "commitName": "164cbe643988f878f0f4100a4de51783e5b6738e",
          "commitAuthor": "Walter Su",
          "commitDateOld": "26/08/15 6:11 PM",
          "commitNameOld": "067ec8c2b14fb0929dc348b763383838e06ff8a5",
          "commitAuthorOld": "Walter Su",
          "daysBetweenCommits": 0.29,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,14 @@\n-  public void setExpectedLocations(DatanodeStorageInfo[] targets) {\n+  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n+      boolean isStriped) {\n     int numLocations \u003d targets \u003d\u003d null ? 0 : targets.length;\n     this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n     for(int i \u003d 0; i \u003c numLocations; i++) {\n-      // when creating a new block we simply sequentially assign block index to\n-      // each storage\n-      Block blk \u003d new Block(this.getBlockId() + i, 0, this.getGenerationStamp());\n-      replicas[i] \u003d new ReplicaUnderConstruction(blk, targets[i],\n+      // when creating a new striped block we simply sequentially assign block\n+      // index to each storage\n+      Block replicaBlock \u003d isStriped ?\n+          new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n+          block;\n+      replicas[i] \u003d new ReplicaUnderConstruction(replicaBlock, targets[i],\n           ReplicaState.RBW);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n      boolean isStriped) {\n    int numLocations \u003d targets \u003d\u003d null ? 0 : targets.length;\n    this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n    for(int i \u003d 0; i \u003c numLocations; i++) {\n      // when creating a new striped block we simply sequentially assign block\n      // index to each storage\n      Block replicaBlock \u003d isStriped ?\n          new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n          block;\n      replicas[i] \u003d new ReplicaUnderConstruction(replicaBlock, targets[i],\n          ReplicaState.RBW);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoStripedUnderConstruction.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8909. Erasure coding: update BlockInfoContiguousUC and BlockInfoStripedUC to use BlockUnderConstructionFeature. Contributed by Jing Zhao.\n",
          "commitDate": "27/08/15 1:02 AM",
          "commitName": "164cbe643988f878f0f4100a4de51783e5b6738e",
          "commitAuthor": "Walter Su",
          "commitDateOld": "26/08/15 6:11 PM",
          "commitNameOld": "067ec8c2b14fb0929dc348b763383838e06ff8a5",
          "commitAuthorOld": "Walter Su",
          "daysBetweenCommits": 0.29,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,14 @@\n-  public void setExpectedLocations(DatanodeStorageInfo[] targets) {\n+  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n+      boolean isStriped) {\n     int numLocations \u003d targets \u003d\u003d null ? 0 : targets.length;\n     this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n     for(int i \u003d 0; i \u003c numLocations; i++) {\n-      // when creating a new block we simply sequentially assign block index to\n-      // each storage\n-      Block blk \u003d new Block(this.getBlockId() + i, 0, this.getGenerationStamp());\n-      replicas[i] \u003d new ReplicaUnderConstruction(blk, targets[i],\n+      // when creating a new striped block we simply sequentially assign block\n+      // index to each storage\n+      Block replicaBlock \u003d isStriped ?\n+          new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n+          block;\n+      replicas[i] \u003d new ReplicaUnderConstruction(replicaBlock, targets[i],\n           ReplicaState.RBW);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n      boolean isStriped) {\n    int numLocations \u003d targets \u003d\u003d null ? 0 : targets.length;\n    this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n    for(int i \u003d 0; i \u003c numLocations; i++) {\n      // when creating a new striped block we simply sequentially assign block\n      // index to each storage\n      Block replicaBlock \u003d isStriped ?\n          new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n          block;\n      replicas[i] \u003d new ReplicaUnderConstruction(replicaBlock, targets[i],\n          ReplicaState.RBW);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8909. Erasure coding: update BlockInfoContiguousUC and BlockInfoStripedUC to use BlockUnderConstructionFeature. Contributed by Jing Zhao.\n",
          "commitDate": "27/08/15 1:02 AM",
          "commitName": "164cbe643988f878f0f4100a4de51783e5b6738e",
          "commitAuthor": "Walter Su",
          "commitDateOld": "26/08/15 6:11 PM",
          "commitNameOld": "067ec8c2b14fb0929dc348b763383838e06ff8a5",
          "commitAuthorOld": "Walter Su",
          "daysBetweenCommits": 0.29,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,14 @@\n-  public void setExpectedLocations(DatanodeStorageInfo[] targets) {\n+  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n+      boolean isStriped) {\n     int numLocations \u003d targets \u003d\u003d null ? 0 : targets.length;\n     this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n     for(int i \u003d 0; i \u003c numLocations; i++) {\n-      // when creating a new block we simply sequentially assign block index to\n-      // each storage\n-      Block blk \u003d new Block(this.getBlockId() + i, 0, this.getGenerationStamp());\n-      replicas[i] \u003d new ReplicaUnderConstruction(blk, targets[i],\n+      // when creating a new striped block we simply sequentially assign block\n+      // index to each storage\n+      Block replicaBlock \u003d isStriped ?\n+          new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n+          block;\n+      replicas[i] \u003d new ReplicaUnderConstruction(replicaBlock, targets[i],\n           ReplicaState.RBW);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setExpectedLocations(Block block, DatanodeStorageInfo[] targets,\n      boolean isStriped) {\n    int numLocations \u003d targets \u003d\u003d null ? 0 : targets.length;\n    this.replicas \u003d new ReplicaUnderConstruction[numLocations];\n    for(int i \u003d 0; i \u003c numLocations; i++) {\n      // when creating a new striped block we simply sequentially assign block\n      // index to each storage\n      Block replicaBlock \u003d isStriped ?\n          new Block(block.getBlockId() + i, 0, block.getGenerationStamp()) :\n          block;\n      replicas[i] \u003d new ReplicaUnderConstruction(replicaBlock, targets[i],\n          ReplicaState.RBW);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockUnderConstructionFeature.java",
          "extendedDetails": {
            "oldValue": "[targets-DatanodeStorageInfo[]]",
            "newValue": "[block-Block, targets-DatanodeStorageInfo[], isStriped-boolean]"
          }
        }
      ]
    }
  }
}