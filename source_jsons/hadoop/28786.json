{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpportunisticContainerAllocator.java",
  "functionName": "setMaxAllocationsPerAMHeartbeat",
  "functionId": "setMaxAllocationsPerAMHeartbeat___maxAllocationsPerAMHeartbeat-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerAllocator.java",
  "functionStartLine": 321,
  "functionEndLine": 324,
  "numCommitsSeen": 18,
  "timeTaken": 1549,
  "changeHistory": [
    "fb512f50877438acb01fe6b3ec96c12b4db61694",
    "96e3027e46a953ca995e4b44ef50bc2a30c7e838"
  ],
  "changeHistoryShort": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": "Ymodifierchange",
    "96e3027e46a953ca995e4b44ef50bc2a30c7e838": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-9697. Efficient allocation of Opportunistic containers. Contributed by Abhishek Modi.\n",
      "commitDate": "12/11/19 3:04 AM",
      "commitName": "fb512f50877438acb01fe6b3ec96c12b4db61694",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "30/09/19 11:10 AM",
      "commitNameOld": "4d3c580b03475a6ec9323d11e6875c542f8e3f6d",
      "commitAuthorOld": "Abhishek Modi",
      "daysBetweenCommits": 42.7,
      "commitsBetweenForRepo": 210,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,4 @@\n-  void setMaxAllocationsPerAMHeartbeat(int maxAllocationsPerAMHeartbeat) {\n+  public void setMaxAllocationsPerAMHeartbeat(\n+      int maxAllocationsPerAMHeartbeat) {\n     this.maxAllocationsPerAMHeartbeat \u003d maxAllocationsPerAMHeartbeat;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setMaxAllocationsPerAMHeartbeat(\n      int maxAllocationsPerAMHeartbeat) {\n    this.maxAllocationsPerAMHeartbeat \u003d maxAllocationsPerAMHeartbeat;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerAllocator.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "96e3027e46a953ca995e4b44ef50bc2a30c7e838": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2889. Limit the number of opportunistic container allocated per AM heartbeat. Contributed by Abhishek Modi.\n",
      "commitDate": "22/04/19 9:49 AM",
      "commitName": "96e3027e46a953ca995e4b44ef50bc2a30c7e838",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,3 @@\n+  void setMaxAllocationsPerAMHeartbeat(int maxAllocationsPerAMHeartbeat) {\n+    this.maxAllocationsPerAMHeartbeat \u003d maxAllocationsPerAMHeartbeat;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void setMaxAllocationsPerAMHeartbeat(int maxAllocationsPerAMHeartbeat) {\n    this.maxAllocationsPerAMHeartbeat \u003d maxAllocationsPerAMHeartbeat;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerAllocator.java"
    }
  }
}