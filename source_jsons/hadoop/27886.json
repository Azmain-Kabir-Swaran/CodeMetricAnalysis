{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SubClusterInfo.java",
  "functionName": "equals",
  "functionId": "equals___obj-Object",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/records/SubClusterInfo.java",
  "functionStartLine": 265,
  "functionEndLine": 300,
  "numCommitsSeen": 2,
  "timeTaken": 795,
  "changeHistory": [
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9"
  ],
  "changeHistoryShort": {
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5602. Utils for Federation State and Policy Store. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 326a2e6bde1cf266ecc7d3b513cdaac6abcebbe4)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,36 @@\n+  public boolean equals(Object obj) {\n+    if (this \u003d\u003d obj) {\n+      return true;\n+    }\n+    if (obj \u003d\u003d null) {\n+      return false;\n+    }\n+    if (getClass() !\u003d obj.getClass()) {\n+      return false;\n+    }\n+    SubClusterInfo other \u003d (SubClusterInfo) obj;\n+    if (!this.getSubClusterId().equals(other.getSubClusterId())) {\n+      return false;\n+    }\n+    if (!this.getAMRMServiceAddress().equals(other.getAMRMServiceAddress())) {\n+      return false;\n+    }\n+    if (!this.getClientRMServiceAddress()\n+        .equals(other.getClientRMServiceAddress())) {\n+      return false;\n+    }\n+    if (!this.getRMAdminServiceAddress()\n+        .equals(other.getRMAdminServiceAddress())) {\n+      return false;\n+    }\n+    if (!this.getRMWebServiceAddress().equals(other.getRMWebServiceAddress())) {\n+      return false;\n+    }\n+    if (!this.getState().equals(other.getState())) {\n+      return false;\n+    }\n+    return this.getLastStartTime() \u003d\u003d other.getLastStartTime();\n+    // Capability and HeartBeat fields are not included as they are temporal\n+    // (i.e. timestamps), so they change during the lifetime of the same\n+    // sub-cluster\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj) {\n      return true;\n    }\n    if (obj \u003d\u003d null) {\n      return false;\n    }\n    if (getClass() !\u003d obj.getClass()) {\n      return false;\n    }\n    SubClusterInfo other \u003d (SubClusterInfo) obj;\n    if (!this.getSubClusterId().equals(other.getSubClusterId())) {\n      return false;\n    }\n    if (!this.getAMRMServiceAddress().equals(other.getAMRMServiceAddress())) {\n      return false;\n    }\n    if (!this.getClientRMServiceAddress()\n        .equals(other.getClientRMServiceAddress())) {\n      return false;\n    }\n    if (!this.getRMAdminServiceAddress()\n        .equals(other.getRMAdminServiceAddress())) {\n      return false;\n    }\n    if (!this.getRMWebServiceAddress().equals(other.getRMWebServiceAddress())) {\n      return false;\n    }\n    if (!this.getState().equals(other.getState())) {\n      return false;\n    }\n    return this.getLastStartTime() \u003d\u003d other.getLastStartTime();\n    // Capability and HeartBeat fields are not included as they are temporal\n    // (i.e. timestamps), so they change during the lifetime of the same\n    // sub-cluster\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/records/SubClusterInfo.java"
    }
  }
}