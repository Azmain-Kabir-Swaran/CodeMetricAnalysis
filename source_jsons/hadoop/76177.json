{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CBZip2InputStream.java",
  "functionName": "skipToNextMarker",
  "functionId": "skipToNextMarker___marker-long__markerBitLength-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
  "functionStartLine": 215,
  "functionEndLine": 255,
  "numCommitsSeen": 10,
  "timeTaken": 1769,
  "changeHistory": [
    "2fae63aa60c43b62bd908a9499562fe528603185",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "86724941c5144a06113090d40c50c289e7ebd290"
  ],
  "changeHistoryShort": {
    "2fae63aa60c43b62bd908a9499562fe528603185": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "86724941c5144a06113090d40c50c289e7ebd290": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2fae63aa60c43b62bd908a9499562fe528603185": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14919. BZip2 drops records when reading data in splits. Contributed by Jason Lowe\n",
      "commitDate": "31/10/17 7:30 AM",
      "commitName": "2fae63aa60c43b62bd908a9499562fe528603185",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "22/04/15 1:48 PM",
      "commitNameOld": "e54a3e1f4f3ea4dbba14f3fab0c395a235763c54",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 922.74,
      "commitsBetweenForRepo": 6477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,41 @@\n   public boolean skipToNextMarker(long marker, int markerBitLength)\n       throws IOException, IllegalArgumentException {\n     try {\n       if (markerBitLength \u003e 63) {\n         throw new IllegalArgumentException(\n             \"skipToNextMarker can not find patterns greater than 63 bits\");\n       }\n       // pick next marketBitLength bits in the stream\n       long bytes \u003d 0;\n       bytes \u003d this.bsR(markerBitLength);\n       if (bytes \u003d\u003d -1) {\n+        this.reportedBytesReadFromCompressedStream \u003d\n+            this.bytesReadFromCompressedStream;\n         return false;\n       }\n       while (true) {\n         if (bytes \u003d\u003d marker) {\n+          // Report the byte position where the marker starts\n+          long markerBytesRead \u003d (markerBitLength + this.bsLive + 7) / 8;\n+          this.reportedBytesReadFromCompressedStream \u003d\n+              this.bytesReadFromCompressedStream - markerBytesRead;\n           return true;\n-\n         } else {\n           bytes \u003d bytes \u003c\u003c 1;\n           bytes \u003d bytes \u0026 ((1L \u003c\u003c markerBitLength) - 1);\n           int oneBit \u003d (int) this.bsR(1);\n           if (oneBit !\u003d -1) {\n             bytes \u003d bytes | oneBit;\n-          } else\n+          } else {\n+            this.reportedBytesReadFromCompressedStream \u003d\n+                this.bytesReadFromCompressedStream;\n             return false;\n+          }\n         }\n       }\n     } catch (IOException ex) {\n+      this.reportedBytesReadFromCompressedStream \u003d\n+          this.bytesReadFromCompressedStream;\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean skipToNextMarker(long marker, int markerBitLength)\n      throws IOException, IllegalArgumentException {\n    try {\n      if (markerBitLength \u003e 63) {\n        throw new IllegalArgumentException(\n            \"skipToNextMarker can not find patterns greater than 63 bits\");\n      }\n      // pick next marketBitLength bits in the stream\n      long bytes \u003d 0;\n      bytes \u003d this.bsR(markerBitLength);\n      if (bytes \u003d\u003d -1) {\n        this.reportedBytesReadFromCompressedStream \u003d\n            this.bytesReadFromCompressedStream;\n        return false;\n      }\n      while (true) {\n        if (bytes \u003d\u003d marker) {\n          // Report the byte position where the marker starts\n          long markerBytesRead \u003d (markerBitLength + this.bsLive + 7) / 8;\n          this.reportedBytesReadFromCompressedStream \u003d\n              this.bytesReadFromCompressedStream - markerBytesRead;\n          return true;\n        } else {\n          bytes \u003d bytes \u003c\u003c 1;\n          bytes \u003d bytes \u0026 ((1L \u003c\u003c markerBitLength) - 1);\n          int oneBit \u003d (int) this.bsR(1);\n          if (oneBit !\u003d -1) {\n            bytes \u003d bytes | oneBit;\n          } else {\n            this.reportedBytesReadFromCompressedStream \u003d\n                this.bytesReadFromCompressedStream;\n            return false;\n          }\n        }\n      }\n    } catch (IOException ex) {\n      this.reportedBytesReadFromCompressedStream \u003d\n          this.bytesReadFromCompressedStream;\n      return false;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean skipToNextMarker(long marker, int markerBitLength)\n      throws IOException, IllegalArgumentException {\n    try {\n      if (markerBitLength \u003e 63) {\n        throw new IllegalArgumentException(\n            \"skipToNextMarker can not find patterns greater than 63 bits\");\n      }\n      // pick next marketBitLength bits in the stream\n      long bytes \u003d 0;\n      bytes \u003d this.bsR(markerBitLength);\n      if (bytes \u003d\u003d -1) {\n        return false;\n      }\n      while (true) {\n        if (bytes \u003d\u003d marker) {\n          return true;\n\n        } else {\n          bytes \u003d bytes \u003c\u003c 1;\n          bytes \u003d bytes \u0026 ((1L \u003c\u003c markerBitLength) - 1);\n          int oneBit \u003d (int) this.bsR(1);\n          if (oneBit !\u003d -1) {\n            bytes \u003d bytes | oneBit;\n          } else\n            return false;\n        }\n      }\n    } catch (IOException ex) {\n      return false;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean skipToNextMarker(long marker, int markerBitLength)\n      throws IOException, IllegalArgumentException {\n    try {\n      if (markerBitLength \u003e 63) {\n        throw new IllegalArgumentException(\n            \"skipToNextMarker can not find patterns greater than 63 bits\");\n      }\n      // pick next marketBitLength bits in the stream\n      long bytes \u003d 0;\n      bytes \u003d this.bsR(markerBitLength);\n      if (bytes \u003d\u003d -1) {\n        return false;\n      }\n      while (true) {\n        if (bytes \u003d\u003d marker) {\n          return true;\n\n        } else {\n          bytes \u003d bytes \u003c\u003c 1;\n          bytes \u003d bytes \u0026 ((1L \u003c\u003c markerBitLength) - 1);\n          int oneBit \u003d (int) this.bsR(1);\n          if (oneBit !\u003d -1) {\n            bytes \u003d bytes | oneBit;\n          } else\n            return false;\n        }\n      }\n    } catch (IOException ex) {\n      return false;\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean skipToNextMarker(long marker, int markerBitLength)\n      throws IOException, IllegalArgumentException {\n    try {\n      if (markerBitLength \u003e 63) {\n        throw new IllegalArgumentException(\n            \"skipToNextMarker can not find patterns greater than 63 bits\");\n      }\n      // pick next marketBitLength bits in the stream\n      long bytes \u003d 0;\n      bytes \u003d this.bsR(markerBitLength);\n      if (bytes \u003d\u003d -1) {\n        return false;\n      }\n      while (true) {\n        if (bytes \u003d\u003d marker) {\n          return true;\n\n        } else {\n          bytes \u003d bytes \u003c\u003c 1;\n          bytes \u003d bytes \u0026 ((1L \u003c\u003c markerBitLength) - 1);\n          int oneBit \u003d (int) this.bsR(1);\n          if (oneBit !\u003d -1) {\n            bytes \u003d bytes | oneBit;\n          } else\n            return false;\n        }\n      }\n    } catch (IOException ex) {\n      return false;\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
        "newPath": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
      }
    },
    "86724941c5144a06113090d40c50c289e7ebd290": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4012. Provide splitting support for bzip2 compressed files. Contributed by Abdul Qadeer\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@813581 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/09 1:51 PM",
      "commitName": "86724941c5144a06113090d40c50c289e7ebd290",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,31 @@\n+  public boolean skipToNextMarker(long marker, int markerBitLength)\n+      throws IOException, IllegalArgumentException {\n+    try {\n+      if (markerBitLength \u003e 63) {\n+        throw new IllegalArgumentException(\n+            \"skipToNextMarker can not find patterns greater than 63 bits\");\n+      }\n+      // pick next marketBitLength bits in the stream\n+      long bytes \u003d 0;\n+      bytes \u003d this.bsR(markerBitLength);\n+      if (bytes \u003d\u003d -1) {\n+        return false;\n+      }\n+      while (true) {\n+        if (bytes \u003d\u003d marker) {\n+          return true;\n+\n+        } else {\n+          bytes \u003d bytes \u003c\u003c 1;\n+          bytes \u003d bytes \u0026 ((1L \u003c\u003c markerBitLength) - 1);\n+          int oneBit \u003d (int) this.bsR(1);\n+          if (oneBit !\u003d -1) {\n+            bytes \u003d bytes | oneBit;\n+          } else\n+            return false;\n+        }\n+      }\n+    } catch (IOException ex) {\n+      return false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean skipToNextMarker(long marker, int markerBitLength)\n      throws IOException, IllegalArgumentException {\n    try {\n      if (markerBitLength \u003e 63) {\n        throw new IllegalArgumentException(\n            \"skipToNextMarker can not find patterns greater than 63 bits\");\n      }\n      // pick next marketBitLength bits in the stream\n      long bytes \u003d 0;\n      bytes \u003d this.bsR(markerBitLength);\n      if (bytes \u003d\u003d -1) {\n        return false;\n      }\n      while (true) {\n        if (bytes \u003d\u003d marker) {\n          return true;\n\n        } else {\n          bytes \u003d bytes \u003c\u003c 1;\n          bytes \u003d bytes \u0026 ((1L \u003c\u003c markerBitLength) - 1);\n          int oneBit \u003d (int) this.bsR(1);\n          if (oneBit !\u003d -1) {\n            bytes \u003d bytes | oneBit;\n          } else\n            return false;\n        }\n      }\n    } catch (IOException ex) {\n      return false;\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
    }
  }
}