{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineWebServices.java",
  "functionName": "parseFieldsStr",
  "functionId": "parseFieldsStr___str-String__delimiter-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java",
  "functionStartLine": 405,
  "functionEndLine": 436,
  "numCommitsSeen": 29,
  "timeTaken": 2106,
  "changeHistory": [
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
    "9cedad11d8d2197a54732667a15344983de5c437",
    "946456c6d88780abe0251b098dd771e9e1e93ab3",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
    "33714d9ad66622f545a030a7d3df94f4b0e73794",
    "84425fb435cb603fd8adcc2f76631c0244175310",
    "23b2e43f5d678517e33590d15dec73225b9c5682",
    "484faadffec97f8e454cf18b821f6ef12a27616c"
  ],
  "changeHistoryShort": {
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": "Ybodychange",
    "9cedad11d8d2197a54732667a15344983de5c437": "Ybodychange",
    "946456c6d88780abe0251b098dd771e9e1e93ab3": "Ybodychange",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": "Yfilerename",
    "33714d9ad66622f545a030a7d3df94f4b0e73794": "Ybodychange",
    "84425fb435cb603fd8adcc2f76631c0244175310": "Yfilerename",
    "23b2e43f5d678517e33590d15dec73225b9c5682": "Ybodychange",
    "484faadffec97f8e454cf18b821f6ef12a27616c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "02/03/15 9:17 PM",
      "commitName": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n     if (str \u003d\u003d null) {\n       return null;\n     }\n     String[] strs \u003d str.split(delimiter);\n     List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n     for (String s : strs) {\n-      s \u003d s.trim().toUpperCase();\n+      s \u003d StringUtils.toUpperCase(s.trim());\n       if (s.equals(\"EVENTS\")) {\n         fieldList.add(Field.EVENTS);\n       } else if (s.equals(\"LASTEVENTONLY\")) {\n         fieldList.add(Field.LAST_EVENT_ONLY);\n       } else if (s.equals(\"RELATEDENTITIES\")) {\n         fieldList.add(Field.RELATED_ENTITIES);\n       } else if (s.equals(\"PRIMARYFILTERS\")) {\n         fieldList.add(Field.PRIMARY_FILTERS);\n       } else if (s.equals(\"OTHERINFO\")) {\n         fieldList.add(Field.OTHER_INFO);\n       } else {\n         throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n       }\n     }\n     if (fieldList.size() \u003d\u003d 0) {\n       return null;\n     }\n     Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n     if (fieldList.size() \u003d\u003d 0) {\n       return EnumSet.of(f1);\n     } else {\n       return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      s \u003d StringUtils.toUpperCase(s.trim());\n      if (s.equals(\"EVENTS\")) {\n        fieldList.add(Field.EVENTS);\n      } else if (s.equals(\"LASTEVENTONLY\")) {\n        fieldList.add(Field.LAST_EVENT_ONLY);\n      } else if (s.equals(\"RELATEDENTITIES\")) {\n        fieldList.add(Field.RELATED_ENTITIES);\n      } else if (s.equals(\"PRIMARYFILTERS\")) {\n        fieldList.add(Field.PRIMARY_FILTERS);\n      } else if (s.equals(\"OTHERINFO\")) {\n        fieldList.add(Field.OTHER_INFO);\n      } else {\n        throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n      }\n    }\n    if (fieldList.size() \u003d\u003d 0) {\n      return null;\n    }\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0) {\n      return EnumSet.of(f1);\n    } else {\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java",
      "extendedDetails": {}
    },
    "9cedad11d8d2197a54732667a15344983de5c437": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\"\n\nThis reverts commit 946456c6d88780abe0251b098dd771e9e1e93ab3.\n\nConflicts:\n\thadoop-common-project/hadoop-common/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/QuotaByStorageTypeEntry.java\n",
      "commitDate": "24/02/15 7:32 AM",
      "commitName": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "18/02/15 8:06 PM",
      "commitNameOld": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 5.48,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n     if (str \u003d\u003d null) {\n       return null;\n     }\n     String[] strs \u003d str.split(delimiter);\n     List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n     for (String s : strs) {\n-      s \u003d s.trim().toUpperCase(Locale.ENGLISH);\n+      s \u003d s.trim().toUpperCase();\n       if (s.equals(\"EVENTS\")) {\n         fieldList.add(Field.EVENTS);\n       } else if (s.equals(\"LASTEVENTONLY\")) {\n         fieldList.add(Field.LAST_EVENT_ONLY);\n       } else if (s.equals(\"RELATEDENTITIES\")) {\n         fieldList.add(Field.RELATED_ENTITIES);\n       } else if (s.equals(\"PRIMARYFILTERS\")) {\n         fieldList.add(Field.PRIMARY_FILTERS);\n       } else if (s.equals(\"OTHERINFO\")) {\n         fieldList.add(Field.OTHER_INFO);\n       } else {\n         throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n       }\n     }\n     if (fieldList.size() \u003d\u003d 0) {\n       return null;\n     }\n     Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n     if (fieldList.size() \u003d\u003d 0) {\n       return EnumSet.of(f1);\n     } else {\n       return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      s \u003d s.trim().toUpperCase();\n      if (s.equals(\"EVENTS\")) {\n        fieldList.add(Field.EVENTS);\n      } else if (s.equals(\"LASTEVENTONLY\")) {\n        fieldList.add(Field.LAST_EVENT_ONLY);\n      } else if (s.equals(\"RELATEDENTITIES\")) {\n        fieldList.add(Field.RELATED_ENTITIES);\n      } else if (s.equals(\"PRIMARYFILTERS\")) {\n        fieldList.add(Field.PRIMARY_FILTERS);\n      } else if (s.equals(\"OTHERINFO\")) {\n        fieldList.add(Field.OTHER_INFO);\n      } else {\n        throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n      }\n    }\n    if (fieldList.size() \u003d\u003d 0) {\n      return null;\n    }\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0) {\n      return EnumSet.of(f1);\n    } else {\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java",
      "extendedDetails": {}
    },
    "946456c6d88780abe0251b098dd771e9e1e93ab3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "18/02/15 8:06 PM",
      "commitName": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "04/11/14 6:00 PM",
      "commitNameOld": "b76179895dd2ef4d56e8de31e9f673375faa2afa",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 106.09,
      "commitsBetweenForRepo": 809,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n     if (str \u003d\u003d null) {\n       return null;\n     }\n     String[] strs \u003d str.split(delimiter);\n     List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n     for (String s : strs) {\n-      s \u003d s.trim().toUpperCase();\n+      s \u003d s.trim().toUpperCase(Locale.ENGLISH);\n       if (s.equals(\"EVENTS\")) {\n         fieldList.add(Field.EVENTS);\n       } else if (s.equals(\"LASTEVENTONLY\")) {\n         fieldList.add(Field.LAST_EVENT_ONLY);\n       } else if (s.equals(\"RELATEDENTITIES\")) {\n         fieldList.add(Field.RELATED_ENTITIES);\n       } else if (s.equals(\"PRIMARYFILTERS\")) {\n         fieldList.add(Field.PRIMARY_FILTERS);\n       } else if (s.equals(\"OTHERINFO\")) {\n         fieldList.add(Field.OTHER_INFO);\n       } else {\n         throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n       }\n     }\n     if (fieldList.size() \u003d\u003d 0) {\n       return null;\n     }\n     Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n     if (fieldList.size() \u003d\u003d 0) {\n       return EnumSet.of(f1);\n     } else {\n       return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      s \u003d s.trim().toUpperCase(Locale.ENGLISH);\n      if (s.equals(\"EVENTS\")) {\n        fieldList.add(Field.EVENTS);\n      } else if (s.equals(\"LASTEVENTONLY\")) {\n        fieldList.add(Field.LAST_EVENT_ONLY);\n      } else if (s.equals(\"RELATEDENTITIES\")) {\n        fieldList.add(Field.RELATED_ENTITIES);\n      } else if (s.equals(\"PRIMARYFILTERS\")) {\n        fieldList.add(Field.PRIMARY_FILTERS);\n      } else if (s.equals(\"OTHERINFO\")) {\n        fieldList.add(Field.OTHER_INFO);\n      } else {\n        throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n      }\n    }\n    if (fieldList.size() \u003d\u003d 0) {\n      return null;\n    }\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0) {\n      return EnumSet.of(f1);\n    } else {\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java",
      "extendedDetails": {}
    },
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2107. Refactored timeline classes into o.a.h.y.s.timeline package. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/14 11:09 AM",
      "commitName": "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "28/05/14 10:44 AM",
      "commitNameOld": "cfd8647d0f20c08761f908be1f5b718c1c372498",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      s \u003d s.trim().toUpperCase();\n      if (s.equals(\"EVENTS\")) {\n        fieldList.add(Field.EVENTS);\n      } else if (s.equals(\"LASTEVENTONLY\")) {\n        fieldList.add(Field.LAST_EVENT_ONLY);\n      } else if (s.equals(\"RELATEDENTITIES\")) {\n        fieldList.add(Field.RELATED_ENTITIES);\n      } else if (s.equals(\"PRIMARYFILTERS\")) {\n        fieldList.add(Field.PRIMARY_FILTERS);\n      } else if (s.equals(\"OTHERINFO\")) {\n        fieldList.add(Field.OTHER_INFO);\n      } else {\n        throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n      }\n    }\n    if (fieldList.size() \u003d\u003d 0) {\n      return null;\n    }\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0) {\n      return EnumSet.of(f1);\n    } else {\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/TimelineWebServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java"
      }
    },
    "33714d9ad66622f545a030a7d3df94f4b0e73794": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1729. Made TimelineWebServices deserialize the string primary- and secondary-filters param into the JSON-compatible object. Contributed by Billie Rinaldi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573825 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/03/14 4:20 PM",
      "commitName": "33714d9ad66622f545a030a7d3df94f4b0e73794",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "22/02/14 12:55 PM",
      "commitNameOld": "84425fb435cb603fd8adcc2f76631c0244175310",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.14,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n   private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n     if (str \u003d\u003d null) {\n       return null;\n     }\n     String[] strs \u003d str.split(delimiter);\n     List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n     for (String s : strs) {\n       s \u003d s.trim().toUpperCase();\n-      if (s.equals(\"EVENTS\"))\n+      if (s.equals(\"EVENTS\")) {\n         fieldList.add(Field.EVENTS);\n-      else if (s.equals(\"LASTEVENTONLY\"))\n+      } else if (s.equals(\"LASTEVENTONLY\")) {\n         fieldList.add(Field.LAST_EVENT_ONLY);\n-      else if (s.equals(\"RELATEDENTITIES\"))\n+      } else if (s.equals(\"RELATEDENTITIES\")) {\n         fieldList.add(Field.RELATED_ENTITIES);\n-      else if (s.equals(\"PRIMARYFILTERS\"))\n+      } else if (s.equals(\"PRIMARYFILTERS\")) {\n         fieldList.add(Field.PRIMARY_FILTERS);\n-      else if (s.equals(\"OTHERINFO\"))\n+      } else if (s.equals(\"OTHERINFO\")) {\n         fieldList.add(Field.OTHER_INFO);\n+      } else {\n+        throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n+      }\n     }\n-    if (fieldList.size() \u003d\u003d 0)\n+    if (fieldList.size() \u003d\u003d 0) {\n       return null;\n+    }\n     Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n-    if (fieldList.size() \u003d\u003d 0)\n+    if (fieldList.size() \u003d\u003d 0) {\n       return EnumSet.of(f1);\n-    else\n+    } else {\n       return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      s \u003d s.trim().toUpperCase();\n      if (s.equals(\"EVENTS\")) {\n        fieldList.add(Field.EVENTS);\n      } else if (s.equals(\"LASTEVENTONLY\")) {\n        fieldList.add(Field.LAST_EVENT_ONLY);\n      } else if (s.equals(\"RELATEDENTITIES\")) {\n        fieldList.add(Field.RELATED_ENTITIES);\n      } else if (s.equals(\"PRIMARYFILTERS\")) {\n        fieldList.add(Field.PRIMARY_FILTERS);\n      } else if (s.equals(\"OTHERINFO\")) {\n        fieldList.add(Field.OTHER_INFO);\n      } else {\n        throw new IllegalArgumentException(\"Requested nonexistent field \" + s);\n      }\n    }\n    if (fieldList.size() \u003d\u003d 0) {\n      return null;\n    }\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0) {\n      return EnumSet.of(f1);\n    } else {\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/TimelineWebServices.java",
      "extendedDetails": {}
    },
    "84425fb435cb603fd8adcc2f76631c0244175310": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 12:55 PM",
      "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/02/14 12:46 PM",
      "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      s \u003d s.trim().toUpperCase();\n      if (s.equals(\"EVENTS\"))\n        fieldList.add(Field.EVENTS);\n      else if (s.equals(\"LASTEVENTONLY\"))\n        fieldList.add(Field.LAST_EVENT_ONLY);\n      else if (s.equals(\"RELATEDENTITIES\"))\n        fieldList.add(Field.RELATED_ENTITIES);\n      else if (s.equals(\"PRIMARYFILTERS\"))\n        fieldList.add(Field.PRIMARY_FILTERS);\n      else if (s.equals(\"OTHERINFO\"))\n        fieldList.add(Field.OTHER_INFO);\n    }\n    if (fieldList.size() \u003d\u003d 0)\n      return null;\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0)\n      return EnumSet.of(f1);\n    else\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/TimelineWebServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/ATSWebServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/TimelineWebServices.java"
      }
    },
    "23b2e43f5d678517e33590d15dec73225b9c5682": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1635. Implemented a Leveldb based ApplicationTimelineStore. Contributed by Billie Rinaldi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1565868 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/14 6:15 PM",
      "commitName": "23b2e43f5d678517e33590d15dec73225b9c5682",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "05/02/14 9:02 AM",
      "commitNameOld": "484faadffec97f8e454cf18b821f6ef12a27616c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.38,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,27 @@\n   private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n     if (str \u003d\u003d null) {\n       return null;\n     }\n     String[] strs \u003d str.split(delimiter);\n     List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n     for (String s : strs) {\n-      fieldList.add(Field.valueOf(s.toUpperCase()));\n+      s \u003d s.trim().toUpperCase();\n+      if (s.equals(\"EVENTS\"))\n+        fieldList.add(Field.EVENTS);\n+      else if (s.equals(\"LASTEVENTONLY\"))\n+        fieldList.add(Field.LAST_EVENT_ONLY);\n+      else if (s.equals(\"RELATEDENTITIES\"))\n+        fieldList.add(Field.RELATED_ENTITIES);\n+      else if (s.equals(\"PRIMARYFILTERS\"))\n+        fieldList.add(Field.PRIMARY_FILTERS);\n+      else if (s.equals(\"OTHERINFO\"))\n+        fieldList.add(Field.OTHER_INFO);\n     }\n     if (fieldList.size() \u003d\u003d 0)\n       return null;\n     Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n     if (fieldList.size() \u003d\u003d 0)\n       return EnumSet.of(f1);\n     else\n       return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      s \u003d s.trim().toUpperCase();\n      if (s.equals(\"EVENTS\"))\n        fieldList.add(Field.EVENTS);\n      else if (s.equals(\"LASTEVENTONLY\"))\n        fieldList.add(Field.LAST_EVENT_ONLY);\n      else if (s.equals(\"RELATEDENTITIES\"))\n        fieldList.add(Field.RELATED_ENTITIES);\n      else if (s.equals(\"PRIMARYFILTERS\"))\n        fieldList.add(Field.PRIMARY_FILTERS);\n      else if (s.equals(\"OTHERINFO\"))\n        fieldList.add(Field.OTHER_INFO);\n    }\n    if (fieldList.size() \u003d\u003d 0)\n      return null;\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0)\n      return EnumSet.of(f1);\n    else\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/ATSWebServices.java",
      "extendedDetails": {}
    },
    "484faadffec97f8e454cf18b821f6ef12a27616c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1636. Augmented Application-history server\u0027s web-services to also expose new APIs for retrieving and storing timeline information. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/02/14 9:02 AM",
      "commitName": "484faadffec97f8e454cf18b821f6ef12a27616c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n+    if (str \u003d\u003d null) {\n+      return null;\n+    }\n+    String[] strs \u003d str.split(delimiter);\n+    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n+    for (String s : strs) {\n+      fieldList.add(Field.valueOf(s.toUpperCase()));\n+    }\n+    if (fieldList.size() \u003d\u003d 0)\n+      return null;\n+    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n+    if (fieldList.size() \u003d\u003d 0)\n+      return EnumSet.of(f1);\n+    else\n+      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static EnumSet\u003cField\u003e parseFieldsStr(String str, String delimiter) {\n    if (str \u003d\u003d null) {\n      return null;\n    }\n    String[] strs \u003d str.split(delimiter);\n    List\u003cField\u003e fieldList \u003d new ArrayList\u003cField\u003e();\n    for (String s : strs) {\n      fieldList.add(Field.valueOf(s.toUpperCase()));\n    }\n    if (fieldList.size() \u003d\u003d 0)\n      return null;\n    Field f1 \u003d fieldList.remove(fieldList.size() - 1);\n    if (fieldList.size() \u003d\u003d 0)\n      return EnumSet.of(f1);\n    else\n      return EnumSet.of(f1, fieldList.toArray(new Field[fieldList.size()]));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/ATSWebServices.java"
    }
  }
}