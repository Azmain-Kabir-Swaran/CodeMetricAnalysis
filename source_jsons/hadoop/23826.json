{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryServerLeveldbStateStoreService.java",
  "functionName": "loadTokens",
  "functionId": "loadTokens___state-HistoryServerState",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerLeveldbStateStoreService.java",
  "functionStartLine": 164,
  "functionEndLine": 194,
  "numCommitsSeen": 3,
  "timeTaken": 453,
  "changeHistory": [
    "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf"
  ],
  "changeHistoryShort": {
    "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6141. History server leveldb recovery store. Contributed by Jason Lowe\n",
      "commitDate": "26/01/15 8:28 AM",
      "commitName": "56b7ec71a69820ae12b4b9e2eb04b7368f721dbf",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,31 @@\n+  private int loadTokens(HistoryServerState state) throws IOException {\n+    int numTokens \u003d 0;\n+    LeveldbIterator iter \u003d null;\n+    try {\n+      iter \u003d new LeveldbIterator(db);\n+      iter.seek(bytes(TOKEN_STATE_KEY_PREFIX));\n+      while (iter.hasNext()) {\n+        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.next();\n+        String key \u003d asString(entry.getKey());\n+        if (!key.startsWith(TOKEN_STATE_KEY_PREFIX)) {\n+          break;\n+        }\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Loading token from \" + key);\n+        }\n+        try {\n+          loadToken(state, entry.getValue());\n+        } catch (IOException e) {\n+          throw new IOException(\"Error loading token state from \" + key, e);\n+        }\n+        ++numTokens;\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    } finally {\n+      if (iter !\u003d null) {\n+        iter.close();\n+      }\n+    }\n+    return numTokens;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int loadTokens(HistoryServerState state) throws IOException {\n    int numTokens \u003d 0;\n    LeveldbIterator iter \u003d null;\n    try {\n      iter \u003d new LeveldbIterator(db);\n      iter.seek(bytes(TOKEN_STATE_KEY_PREFIX));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.next();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(TOKEN_STATE_KEY_PREFIX)) {\n          break;\n        }\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Loading token from \" + key);\n        }\n        try {\n          loadToken(state, entry.getValue());\n        } catch (IOException e) {\n          throw new IOException(\"Error loading token state from \" + key, e);\n        }\n        ++numTokens;\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      if (iter !\u003d null) {\n        iter.close();\n      }\n    }\n    return numTokens;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerLeveldbStateStoreService.java"
    }
  }
}