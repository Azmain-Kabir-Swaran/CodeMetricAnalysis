{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SQLFederationStateStore.java",
  "functionName": "addApplicationHomeSubCluster",
  "functionId": "addApplicationHomeSubCluster___request-AddApplicationHomeSubClusterRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/SQLFederationStateStore.java",
  "functionStartLine": 520,
  "functionEndLine": 604,
  "numCommitsSeen": 6,
  "timeTaken": 1677,
  "changeHistory": [
    "79091cf76f6e966f64ac1d65e43e95782695e678",
    "75abc9a8e2cf1c7d2c574ede720df59421512be3",
    "5272af8c7eab76d779c621eb0208bf29ffa25613"
  ],
  "changeHistoryShort": {
    "79091cf76f6e966f64ac1d65e43e95782695e678": "Ybodychange",
    "75abc9a8e2cf1c7d2c574ede720df59421512be3": "Ybodychange",
    "5272af8c7eab76d779c621eb0208bf29ffa25613": "Yintroduced"
  },
  "changeHistoryDetails": {
    "79091cf76f6e966f64ac1d65e43e95782695e678": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8596. Allow SQLFederationStateStore to submit the same app in the same subcluster. Contributed by Giovanni Matteo Fumarola.\n",
      "commitDate": "27/07/18 3:23 PM",
      "commitName": "79091cf76f6e966f64ac1d65e43e95782695e678",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "12/06/18 8:35 AM",
      "commitNameOld": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 45.28,
      "commitsBetweenForRepo": 281,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,85 +1,85 @@\n   public AddApplicationHomeSubClusterResponse addApplicationHomeSubCluster(\n       AddApplicationHomeSubClusterRequest request) throws YarnException {\n \n     // Input validator\n     FederationApplicationHomeSubClusterStoreInputValidator.validate(request);\n \n     CallableStatement cstmt \u003d null;\n     Connection conn \u003d null;\n \n     String subClusterHome \u003d null;\n     ApplicationId appId \u003d\n         request.getApplicationHomeSubCluster().getApplicationId();\n     SubClusterId subClusterId \u003d\n         request.getApplicationHomeSubCluster().getHomeSubCluster();\n \n     try {\n       conn \u003d getConnection();\n       cstmt \u003d conn.prepareCall(CALL_SP_ADD_APPLICATION_HOME_SUBCLUSTER);\n \n       // Set the parameters for the stored procedure\n       cstmt.setString(1, appId.toString());\n       cstmt.setString(2, subClusterId.getId());\n       cstmt.registerOutParameter(3, java.sql.Types.VARCHAR);\n       cstmt.registerOutParameter(4, java.sql.Types.INTEGER);\n \n       // Execute the query\n       long startTime \u003d clock.getTime();\n       cstmt.executeUpdate();\n       long stopTime \u003d clock.getTime();\n \n       subClusterHome \u003d cstmt.getString(3);\n       SubClusterId subClusterIdHome \u003d SubClusterId.newInstance(subClusterHome);\n \n       FederationStateStoreClientMetrics\n           .succeededStateStoreCall(stopTime - startTime);\n \n       // For failover reason, we check the returned SubClusterId.\n       // If it is equal to the subclusterId we sent, the call added the new\n       // application into FederationStateStore. If the call returns a different\n       // SubClusterId it means we already tried to insert this application but a\n       // component (Router/StateStore/RM) failed during the submission.\n       if (subClusterId.equals(subClusterIdHome)) {\n         // Check the ROWCOUNT value, if it is equal to 0 it means the call\n         // did not add a new application into FederationStateStore\n         if (cstmt.getInt(4) \u003d\u003d 0) {\n-          String errMsg \u003d \"The application \" + appId\n-              + \" was not insert into the StateStore\";\n-          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n-        }\n-        // Check the ROWCOUNT value, if it is different from 1 it means the call\n-        // had a wrong behavior. Maybe the database is not set correctly.\n-        if (cstmt.getInt(4) !\u003d 1) {\n+          LOG.info(\n+              \"The application {} was not inserted in the StateStore because it\"\n+                  + \" was already present in SubCluster {}\",\n+              appId, subClusterHome);\n+        } else if (cstmt.getInt(4) !\u003d 1) {\n+          // Check the ROWCOUNT value, if it is different from 1 it means the\n+          // call had a wrong behavior. Maybe the database is not set correctly.\n           String errMsg \u003d \"Wrong behavior during the insertion of SubCluster \"\n               + subClusterId;\n           FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n         }\n \n         LOG.info(\"Insert into the StateStore the application: \" + appId\n             + \" in SubCluster:  \" + subClusterHome);\n       } else {\n         // Check the ROWCOUNT value, if it is different from 0 it means the call\n         // did edited the table\n         if (cstmt.getInt(4) !\u003d 0) {\n           String errMsg \u003d\n               \"The application \" + appId + \" does exist but was overwritten\";\n           FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n         }\n         LOG.info(\"Application: \" + appId + \" already present with SubCluster:  \"\n             + subClusterHome);\n       }\n \n     } catch (SQLException e) {\n       FederationStateStoreClientMetrics.failedStateStoreCall();\n       FederationStateStoreUtils\n           .logAndThrowRetriableException(LOG,\n               \"Unable to insert the newly generated application \"\n                   + request.getApplicationHomeSubCluster().getApplicationId(),\n               e);\n     } finally {\n       // Return to the pool the CallableStatement and the Connection\n       FederationStateStoreUtils.returnToPool(LOG, cstmt, conn);\n     }\n     return AddApplicationHomeSubClusterResponse\n         .newInstance(SubClusterId.newInstance(subClusterHome));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AddApplicationHomeSubClusterResponse addApplicationHomeSubCluster(\n      AddApplicationHomeSubClusterRequest request) throws YarnException {\n\n    // Input validator\n    FederationApplicationHomeSubClusterStoreInputValidator.validate(request);\n\n    CallableStatement cstmt \u003d null;\n    Connection conn \u003d null;\n\n    String subClusterHome \u003d null;\n    ApplicationId appId \u003d\n        request.getApplicationHomeSubCluster().getApplicationId();\n    SubClusterId subClusterId \u003d\n        request.getApplicationHomeSubCluster().getHomeSubCluster();\n\n    try {\n      conn \u003d getConnection();\n      cstmt \u003d conn.prepareCall(CALL_SP_ADD_APPLICATION_HOME_SUBCLUSTER);\n\n      // Set the parameters for the stored procedure\n      cstmt.setString(1, appId.toString());\n      cstmt.setString(2, subClusterId.getId());\n      cstmt.registerOutParameter(3, java.sql.Types.VARCHAR);\n      cstmt.registerOutParameter(4, java.sql.Types.INTEGER);\n\n      // Execute the query\n      long startTime \u003d clock.getTime();\n      cstmt.executeUpdate();\n      long stopTime \u003d clock.getTime();\n\n      subClusterHome \u003d cstmt.getString(3);\n      SubClusterId subClusterIdHome \u003d SubClusterId.newInstance(subClusterHome);\n\n      FederationStateStoreClientMetrics\n          .succeededStateStoreCall(stopTime - startTime);\n\n      // For failover reason, we check the returned SubClusterId.\n      // If it is equal to the subclusterId we sent, the call added the new\n      // application into FederationStateStore. If the call returns a different\n      // SubClusterId it means we already tried to insert this application but a\n      // component (Router/StateStore/RM) failed during the submission.\n      if (subClusterId.equals(subClusterIdHome)) {\n        // Check the ROWCOUNT value, if it is equal to 0 it means the call\n        // did not add a new application into FederationStateStore\n        if (cstmt.getInt(4) \u003d\u003d 0) {\n          LOG.info(\n              \"The application {} was not inserted in the StateStore because it\"\n                  + \" was already present in SubCluster {}\",\n              appId, subClusterHome);\n        } else if (cstmt.getInt(4) !\u003d 1) {\n          // Check the ROWCOUNT value, if it is different from 1 it means the\n          // call had a wrong behavior. Maybe the database is not set correctly.\n          String errMsg \u003d \"Wrong behavior during the insertion of SubCluster \"\n              + subClusterId;\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n\n        LOG.info(\"Insert into the StateStore the application: \" + appId\n            + \" in SubCluster:  \" + subClusterHome);\n      } else {\n        // Check the ROWCOUNT value, if it is different from 0 it means the call\n        // did edited the table\n        if (cstmt.getInt(4) !\u003d 0) {\n          String errMsg \u003d\n              \"The application \" + appId + \" does exist but was overwritten\";\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n        LOG.info(\"Application: \" + appId + \" already present with SubCluster:  \"\n            + subClusterHome);\n      }\n\n    } catch (SQLException e) {\n      FederationStateStoreClientMetrics.failedStateStoreCall();\n      FederationStateStoreUtils\n          .logAndThrowRetriableException(LOG,\n              \"Unable to insert the newly generated application \"\n                  + request.getApplicationHomeSubCluster().getApplicationId(),\n              e);\n    } finally {\n      // Return to the pool the CallableStatement and the Connection\n      FederationStateStoreUtils.returnToPool(LOG, cstmt, conn);\n    }\n    return AddApplicationHomeSubClusterResponse\n        .newInstance(SubClusterId.newInstance(subClusterHome));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/SQLFederationStateStore.java",
      "extendedDetails": {}
    },
    "75abc9a8e2cf1c7d2c574ede720df59421512be3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5603. Metrics for Federation StateStore. (Ellen Hui via asuresh)\n",
      "commitDate": "21/08/17 10:43 PM",
      "commitName": "75abc9a8e2cf1c7d2c574ede720df59421512be3",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "825108d08a9b49d7c19915624f9167101528cb95",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 20.22,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,79 +1,85 @@\n   public AddApplicationHomeSubClusterResponse addApplicationHomeSubCluster(\n       AddApplicationHomeSubClusterRequest request) throws YarnException {\n \n     // Input validator\n     FederationApplicationHomeSubClusterStoreInputValidator.validate(request);\n \n     CallableStatement cstmt \u003d null;\n     Connection conn \u003d null;\n \n     String subClusterHome \u003d null;\n     ApplicationId appId \u003d\n         request.getApplicationHomeSubCluster().getApplicationId();\n     SubClusterId subClusterId \u003d\n         request.getApplicationHomeSubCluster().getHomeSubCluster();\n \n     try {\n       conn \u003d getConnection();\n       cstmt \u003d conn.prepareCall(CALL_SP_ADD_APPLICATION_HOME_SUBCLUSTER);\n \n       // Set the parameters for the stored procedure\n       cstmt.setString(1, appId.toString());\n       cstmt.setString(2, subClusterId.getId());\n       cstmt.registerOutParameter(3, java.sql.Types.VARCHAR);\n       cstmt.registerOutParameter(4, java.sql.Types.INTEGER);\n \n       // Execute the query\n+      long startTime \u003d clock.getTime();\n       cstmt.executeUpdate();\n+      long stopTime \u003d clock.getTime();\n \n       subClusterHome \u003d cstmt.getString(3);\n       SubClusterId subClusterIdHome \u003d SubClusterId.newInstance(subClusterHome);\n \n+      FederationStateStoreClientMetrics\n+          .succeededStateStoreCall(stopTime - startTime);\n+\n       // For failover reason, we check the returned SubClusterId.\n       // If it is equal to the subclusterId we sent, the call added the new\n       // application into FederationStateStore. If the call returns a different\n       // SubClusterId it means we already tried to insert this application but a\n       // component (Router/StateStore/RM) failed during the submission.\n       if (subClusterId.equals(subClusterIdHome)) {\n         // Check the ROWCOUNT value, if it is equal to 0 it means the call\n         // did not add a new application into FederationStateStore\n         if (cstmt.getInt(4) \u003d\u003d 0) {\n           String errMsg \u003d \"The application \" + appId\n               + \" was not insert into the StateStore\";\n           FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n         }\n         // Check the ROWCOUNT value, if it is different from 1 it means the call\n         // had a wrong behavior. Maybe the database is not set correctly.\n         if (cstmt.getInt(4) !\u003d 1) {\n           String errMsg \u003d \"Wrong behavior during the insertion of SubCluster \"\n               + subClusterId;\n           FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n         }\n \n         LOG.info(\"Insert into the StateStore the application: \" + appId\n             + \" in SubCluster:  \" + subClusterHome);\n       } else {\n         // Check the ROWCOUNT value, if it is different from 0 it means the call\n         // did edited the table\n         if (cstmt.getInt(4) !\u003d 0) {\n           String errMsg \u003d\n               \"The application \" + appId + \" does exist but was overwritten\";\n           FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n         }\n         LOG.info(\"Application: \" + appId + \" already present with SubCluster:  \"\n             + subClusterHome);\n       }\n \n     } catch (SQLException e) {\n+      FederationStateStoreClientMetrics.failedStateStoreCall();\n       FederationStateStoreUtils\n           .logAndThrowRetriableException(LOG,\n               \"Unable to insert the newly generated application \"\n                   + request.getApplicationHomeSubCluster().getApplicationId(),\n               e);\n     } finally {\n       // Return to the pool the CallableStatement and the Connection\n       FederationStateStoreUtils.returnToPool(LOG, cstmt, conn);\n     }\n     return AddApplicationHomeSubClusterResponse\n         .newInstance(SubClusterId.newInstance(subClusterHome));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AddApplicationHomeSubClusterResponse addApplicationHomeSubCluster(\n      AddApplicationHomeSubClusterRequest request) throws YarnException {\n\n    // Input validator\n    FederationApplicationHomeSubClusterStoreInputValidator.validate(request);\n\n    CallableStatement cstmt \u003d null;\n    Connection conn \u003d null;\n\n    String subClusterHome \u003d null;\n    ApplicationId appId \u003d\n        request.getApplicationHomeSubCluster().getApplicationId();\n    SubClusterId subClusterId \u003d\n        request.getApplicationHomeSubCluster().getHomeSubCluster();\n\n    try {\n      conn \u003d getConnection();\n      cstmt \u003d conn.prepareCall(CALL_SP_ADD_APPLICATION_HOME_SUBCLUSTER);\n\n      // Set the parameters for the stored procedure\n      cstmt.setString(1, appId.toString());\n      cstmt.setString(2, subClusterId.getId());\n      cstmt.registerOutParameter(3, java.sql.Types.VARCHAR);\n      cstmt.registerOutParameter(4, java.sql.Types.INTEGER);\n\n      // Execute the query\n      long startTime \u003d clock.getTime();\n      cstmt.executeUpdate();\n      long stopTime \u003d clock.getTime();\n\n      subClusterHome \u003d cstmt.getString(3);\n      SubClusterId subClusterIdHome \u003d SubClusterId.newInstance(subClusterHome);\n\n      FederationStateStoreClientMetrics\n          .succeededStateStoreCall(stopTime - startTime);\n\n      // For failover reason, we check the returned SubClusterId.\n      // If it is equal to the subclusterId we sent, the call added the new\n      // application into FederationStateStore. If the call returns a different\n      // SubClusterId it means we already tried to insert this application but a\n      // component (Router/StateStore/RM) failed during the submission.\n      if (subClusterId.equals(subClusterIdHome)) {\n        // Check the ROWCOUNT value, if it is equal to 0 it means the call\n        // did not add a new application into FederationStateStore\n        if (cstmt.getInt(4) \u003d\u003d 0) {\n          String errMsg \u003d \"The application \" + appId\n              + \" was not insert into the StateStore\";\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n        // Check the ROWCOUNT value, if it is different from 1 it means the call\n        // had a wrong behavior. Maybe the database is not set correctly.\n        if (cstmt.getInt(4) !\u003d 1) {\n          String errMsg \u003d \"Wrong behavior during the insertion of SubCluster \"\n              + subClusterId;\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n\n        LOG.info(\"Insert into the StateStore the application: \" + appId\n            + \" in SubCluster:  \" + subClusterHome);\n      } else {\n        // Check the ROWCOUNT value, if it is different from 0 it means the call\n        // did edited the table\n        if (cstmt.getInt(4) !\u003d 0) {\n          String errMsg \u003d\n              \"The application \" + appId + \" does exist but was overwritten\";\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n        LOG.info(\"Application: \" + appId + \" already present with SubCluster:  \"\n            + subClusterHome);\n      }\n\n    } catch (SQLException e) {\n      FederationStateStoreClientMetrics.failedStateStoreCall();\n      FederationStateStoreUtils\n          .logAndThrowRetriableException(LOG,\n              \"Unable to insert the newly generated application \"\n                  + request.getApplicationHomeSubCluster().getApplicationId(),\n              e);\n    } finally {\n      // Return to the pool the CallableStatement and the Connection\n      FederationStateStoreUtils.returnToPool(LOG, cstmt, conn);\n    }\n    return AddApplicationHomeSubClusterResponse\n        .newInstance(SubClusterId.newInstance(subClusterHome));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/SQLFederationStateStore.java",
      "extendedDetails": {}
    },
    "5272af8c7eab76d779c621eb0208bf29ffa25613": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3663. Federation State and Policy Store (DBMS implementation). (Giovanni Matteo Fumarola via curino).\n\n(cherry picked from commit be99c1fe2eb150fabd69902118d65941f82971f6)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "5272af8c7eab76d779c621eb0208bf29ffa25613",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,79 @@\n+  public AddApplicationHomeSubClusterResponse addApplicationHomeSubCluster(\n+      AddApplicationHomeSubClusterRequest request) throws YarnException {\n+\n+    // Input validator\n+    FederationApplicationHomeSubClusterStoreInputValidator.validate(request);\n+\n+    CallableStatement cstmt \u003d null;\n+    Connection conn \u003d null;\n+\n+    String subClusterHome \u003d null;\n+    ApplicationId appId \u003d\n+        request.getApplicationHomeSubCluster().getApplicationId();\n+    SubClusterId subClusterId \u003d\n+        request.getApplicationHomeSubCluster().getHomeSubCluster();\n+\n+    try {\n+      conn \u003d getConnection();\n+      cstmt \u003d conn.prepareCall(CALL_SP_ADD_APPLICATION_HOME_SUBCLUSTER);\n+\n+      // Set the parameters for the stored procedure\n+      cstmt.setString(1, appId.toString());\n+      cstmt.setString(2, subClusterId.getId());\n+      cstmt.registerOutParameter(3, java.sql.Types.VARCHAR);\n+      cstmt.registerOutParameter(4, java.sql.Types.INTEGER);\n+\n+      // Execute the query\n+      cstmt.executeUpdate();\n+\n+      subClusterHome \u003d cstmt.getString(3);\n+      SubClusterId subClusterIdHome \u003d SubClusterId.newInstance(subClusterHome);\n+\n+      // For failover reason, we check the returned SubClusterId.\n+      // If it is equal to the subclusterId we sent, the call added the new\n+      // application into FederationStateStore. If the call returns a different\n+      // SubClusterId it means we already tried to insert this application but a\n+      // component (Router/StateStore/RM) failed during the submission.\n+      if (subClusterId.equals(subClusterIdHome)) {\n+        // Check the ROWCOUNT value, if it is equal to 0 it means the call\n+        // did not add a new application into FederationStateStore\n+        if (cstmt.getInt(4) \u003d\u003d 0) {\n+          String errMsg \u003d \"The application \" + appId\n+              + \" was not insert into the StateStore\";\n+          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n+        }\n+        // Check the ROWCOUNT value, if it is different from 1 it means the call\n+        // had a wrong behavior. Maybe the database is not set correctly.\n+        if (cstmt.getInt(4) !\u003d 1) {\n+          String errMsg \u003d \"Wrong behavior during the insertion of SubCluster \"\n+              + subClusterId;\n+          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n+        }\n+\n+        LOG.info(\"Insert into the StateStore the application: \" + appId\n+            + \" in SubCluster:  \" + subClusterHome);\n+      } else {\n+        // Check the ROWCOUNT value, if it is different from 0 it means the call\n+        // did edited the table\n+        if (cstmt.getInt(4) !\u003d 0) {\n+          String errMsg \u003d\n+              \"The application \" + appId + \" does exist but was overwritten\";\n+          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n+        }\n+        LOG.info(\"Application: \" + appId + \" already present with SubCluster:  \"\n+            + subClusterHome);\n+      }\n+\n+    } catch (SQLException e) {\n+      FederationStateStoreUtils\n+          .logAndThrowRetriableException(LOG,\n+              \"Unable to insert the newly generated application \"\n+                  + request.getApplicationHomeSubCluster().getApplicationId(),\n+              e);\n+    } finally {\n+      // Return to the pool the CallableStatement and the Connection\n+      FederationStateStoreUtils.returnToPool(LOG, cstmt, conn);\n+    }\n+    return AddApplicationHomeSubClusterResponse\n+        .newInstance(SubClusterId.newInstance(subClusterHome));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AddApplicationHomeSubClusterResponse addApplicationHomeSubCluster(\n      AddApplicationHomeSubClusterRequest request) throws YarnException {\n\n    // Input validator\n    FederationApplicationHomeSubClusterStoreInputValidator.validate(request);\n\n    CallableStatement cstmt \u003d null;\n    Connection conn \u003d null;\n\n    String subClusterHome \u003d null;\n    ApplicationId appId \u003d\n        request.getApplicationHomeSubCluster().getApplicationId();\n    SubClusterId subClusterId \u003d\n        request.getApplicationHomeSubCluster().getHomeSubCluster();\n\n    try {\n      conn \u003d getConnection();\n      cstmt \u003d conn.prepareCall(CALL_SP_ADD_APPLICATION_HOME_SUBCLUSTER);\n\n      // Set the parameters for the stored procedure\n      cstmt.setString(1, appId.toString());\n      cstmt.setString(2, subClusterId.getId());\n      cstmt.registerOutParameter(3, java.sql.Types.VARCHAR);\n      cstmt.registerOutParameter(4, java.sql.Types.INTEGER);\n\n      // Execute the query\n      cstmt.executeUpdate();\n\n      subClusterHome \u003d cstmt.getString(3);\n      SubClusterId subClusterIdHome \u003d SubClusterId.newInstance(subClusterHome);\n\n      // For failover reason, we check the returned SubClusterId.\n      // If it is equal to the subclusterId we sent, the call added the new\n      // application into FederationStateStore. If the call returns a different\n      // SubClusterId it means we already tried to insert this application but a\n      // component (Router/StateStore/RM) failed during the submission.\n      if (subClusterId.equals(subClusterIdHome)) {\n        // Check the ROWCOUNT value, if it is equal to 0 it means the call\n        // did not add a new application into FederationStateStore\n        if (cstmt.getInt(4) \u003d\u003d 0) {\n          String errMsg \u003d \"The application \" + appId\n              + \" was not insert into the StateStore\";\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n        // Check the ROWCOUNT value, if it is different from 1 it means the call\n        // had a wrong behavior. Maybe the database is not set correctly.\n        if (cstmt.getInt(4) !\u003d 1) {\n          String errMsg \u003d \"Wrong behavior during the insertion of SubCluster \"\n              + subClusterId;\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n\n        LOG.info(\"Insert into the StateStore the application: \" + appId\n            + \" in SubCluster:  \" + subClusterHome);\n      } else {\n        // Check the ROWCOUNT value, if it is different from 0 it means the call\n        // did edited the table\n        if (cstmt.getInt(4) !\u003d 0) {\n          String errMsg \u003d\n              \"The application \" + appId + \" does exist but was overwritten\";\n          FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n        }\n        LOG.info(\"Application: \" + appId + \" already present with SubCluster:  \"\n            + subClusterHome);\n      }\n\n    } catch (SQLException e) {\n      FederationStateStoreUtils\n          .logAndThrowRetriableException(LOG,\n              \"Unable to insert the newly generated application \"\n                  + request.getApplicationHomeSubCluster().getApplicationId(),\n              e);\n    } finally {\n      // Return to the pool the CallableStatement and the Connection\n      FederationStateStoreUtils.returnToPool(LOG, cstmt, conn);\n    }\n    return AddApplicationHomeSubClusterResponse\n        .newInstance(SubClusterId.newInstance(subClusterHome));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/SQLFederationStateStore.java"
    }
  }
}