{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UTF8.java",
  "functionName": "set",
  "functionId": "set___string-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
  "functionStartLine": 87,
  "functionEndLine": 109,
  "numCommitsSeen": 13,
  "timeTaken": 878,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "b1ec35e60c248773adc6b00f722d307cb9f660db",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "b1ec35e60c248773adc6b00f722d307cb9f660db": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void set(String string) {\n    if (string.length() \u003e 0xffff/3) {             // maybe too long\n      LOG.warn(\"truncating long string: \" + string.length()\n               + \" chars, starting with \" + string.substring(0, 20));\n      string \u003d string.substring(0, 0xffff/3);\n    }\n\n    length \u003d utf8Length(string);                  // compute length\n    if (length \u003e 0xffff)                          // double-check length\n      throw new RuntimeException(\"string too long!\");\n\n    if (bytes \u003d\u003d null || length \u003e bytes.length)   // grow buffer\n      bytes \u003d new byte[length];\n\n    try {                                         // avoid sync\u0027d allocations\n      DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n      obuf.reset();\n      writeChars(obuf, string, 0, string.length());\n      System.arraycopy(obuf.getData(), 0, bytes, 0, length);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void set(String string) {\n    if (string.length() \u003e 0xffff/3) {             // maybe too long\n      LOG.warn(\"truncating long string: \" + string.length()\n               + \" chars, starting with \" + string.substring(0, 20));\n      string \u003d string.substring(0, 0xffff/3);\n    }\n\n    length \u003d utf8Length(string);                  // compute length\n    if (length \u003e 0xffff)                          // double-check length\n      throw new RuntimeException(\"string too long!\");\n\n    if (bytes \u003d\u003d null || length \u003e bytes.length)   // grow buffer\n      bytes \u003d new byte[length];\n\n    try {                                         // avoid sync\u0027d allocations\n      DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n      obuf.reset();\n      writeChars(obuf, string, 0, string.length());\n      System.arraycopy(obuf.getData(), 0, bytes, 0, length);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/UTF8.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/UTF8.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void set(String string) {\n    if (string.length() \u003e 0xffff/3) {             // maybe too long\n      LOG.warn(\"truncating long string: \" + string.length()\n               + \" chars, starting with \" + string.substring(0, 20));\n      string \u003d string.substring(0, 0xffff/3);\n    }\n\n    length \u003d utf8Length(string);                  // compute length\n    if (length \u003e 0xffff)                          // double-check length\n      throw new RuntimeException(\"string too long!\");\n\n    if (bytes \u003d\u003d null || length \u003e bytes.length)   // grow buffer\n      bytes \u003d new byte[length];\n\n    try {                                         // avoid sync\u0027d allocations\n      DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n      obuf.reset();\n      writeChars(obuf, string, 0, string.length());\n      System.arraycopy(obuf.getData(), 0, bytes, 0, length);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/UTF8.java",
        "newPath": "common/src/java/org/apache/hadoop/io/UTF8.java"
      }
    },
    "b1ec35e60c248773adc6b00f722d307cb9f660db": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6609. Fixed deadlock in RPC by replacing shared static \nDataOutputBuffer in the UTF8 class with a thread local variable. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@918880 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/03/10 11:20 PM",
      "commitName": "b1ec35e60c248773adc6b00f722d307cb9f660db",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "10/02/10 1:58 PM",
      "commitNameOld": "8061821ca2d83dcc98358ff0239289ec2f3f42f4",
      "commitAuthorOld": "Doug Cutting",
      "daysBetweenCommits": 21.39,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   public void set(String string) {\n     if (string.length() \u003e 0xffff/3) {             // maybe too long\n       LOG.warn(\"truncating long string: \" + string.length()\n                + \" chars, starting with \" + string.substring(0, 20));\n       string \u003d string.substring(0, 0xffff/3);\n     }\n \n     length \u003d utf8Length(string);                  // compute length\n     if (length \u003e 0xffff)                          // double-check length\n       throw new RuntimeException(\"string too long!\");\n \n     if (bytes \u003d\u003d null || length \u003e bytes.length)   // grow buffer\n       bytes \u003d new byte[length];\n \n     try {                                         // avoid sync\u0027d allocations\n-      synchronized (OBUF) {\n-        OBUF.reset();\n-        writeChars(OBUF, string, 0, string.length());\n-        System.arraycopy(OBUF.getData(), 0, bytes, 0, length);\n-      }\n+      DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n+      obuf.reset();\n+      writeChars(obuf, string, 0, string.length());\n+      System.arraycopy(obuf.getData(), 0, bytes, 0, length);\n     } catch (IOException e) {\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void set(String string) {\n    if (string.length() \u003e 0xffff/3) {             // maybe too long\n      LOG.warn(\"truncating long string: \" + string.length()\n               + \" chars, starting with \" + string.substring(0, 20));\n      string \u003d string.substring(0, 0xffff/3);\n    }\n\n    length \u003d utf8Length(string);                  // compute length\n    if (length \u003e 0xffff)                          // double-check length\n      throw new RuntimeException(\"string too long!\");\n\n    if (bytes \u003d\u003d null || length \u003e bytes.length)   // grow buffer\n      bytes \u003d new byte[length];\n\n    try {                                         // avoid sync\u0027d allocations\n      DataOutputBuffer obuf \u003d OBUF_FACTORY.get();\n      obuf.reset();\n      writeChars(obuf, string, 0, string.length());\n      System.arraycopy(obuf.getData(), 0, bytes, 0, length);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/UTF8.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,24 @@\n+  public void set(String string) {\n+    if (string.length() \u003e 0xffff/3) {             // maybe too long\n+      LOG.warn(\"truncating long string: \" + string.length()\n+               + \" chars, starting with \" + string.substring(0, 20));\n+      string \u003d string.substring(0, 0xffff/3);\n+    }\n+\n+    length \u003d utf8Length(string);                  // compute length\n+    if (length \u003e 0xffff)                          // double-check length\n+      throw new RuntimeException(\"string too long!\");\n+\n+    if (bytes \u003d\u003d null || length \u003e bytes.length)   // grow buffer\n+      bytes \u003d new byte[length];\n+\n+    try {                                         // avoid sync\u0027d allocations\n+      synchronized (OBUF) {\n+        OBUF.reset();\n+        writeChars(OBUF, string, 0, string.length());\n+        System.arraycopy(OBUF.getData(), 0, bytes, 0, length);\n+      }\n+    } catch (IOException e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void set(String string) {\n    if (string.length() \u003e 0xffff/3) {             // maybe too long\n      LOG.warn(\"truncating long string: \" + string.length()\n               + \" chars, starting with \" + string.substring(0, 20));\n      string \u003d string.substring(0, 0xffff/3);\n    }\n\n    length \u003d utf8Length(string);                  // compute length\n    if (length \u003e 0xffff)                          // double-check length\n      throw new RuntimeException(\"string too long!\");\n\n    if (bytes \u003d\u003d null || length \u003e bytes.length)   // grow buffer\n      bytes \u003d new byte[length];\n\n    try {                                         // avoid sync\u0027d allocations\n      synchronized (OBUF) {\n        OBUF.reset();\n        writeChars(OBUF, string, 0, string.length());\n        System.arraycopy(OBUF.getData(), 0, bytes, 0, length);\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/UTF8.java"
    }
  }
}