{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PerNodeTimelineCollectorsAuxService.java",
  "functionName": "initializeContainer",
  "functionId": "initializeContainer___context-ContainerInitializationContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
  "functionStartLine": 153,
  "functionEndLine": 169,
  "numCommitsSeen": 22,
  "timeTaken": 2659,
  "changeHistory": [
    "4aacbfff605262aaf3dbd926258afcadc86c72c0",
    "d1274c3b71549cb000868500c293cafd880b3713",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
    "57e2498cd49686ce231fff2e0c8df142bbbf58d2",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "bf54d32750f8b27a170d7a0a8d8f022430327341",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68"
  ],
  "changeHistoryShort": {
    "4aacbfff605262aaf3dbd926258afcadc86c72c0": "Ybodychange",
    "d1274c3b71549cb000868500c293cafd880b3713": "Ybodychange",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": "Ybodychange",
    "57e2498cd49686ce231fff2e0c8df142bbbf58d2": "Ybodychange",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ymultichange(Yfilerename,Ybodychange)",
    "bf54d32750f8b27a170d7a0a8d8f022430327341": "Ymovefromfile",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4aacbfff605262aaf3dbd926258afcadc86c72c0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8679. [ATSv2] If HBase cluster is down for long time, high chances that NM ContainerManager dispatcher get blocked. Contributed by Wangda Tan.\n",
      "commitDate": "17/08/18 9:56 PM",
      "commitName": "4aacbfff605262aaf3dbd926258afcadc86c72c0",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "28/02/18 9:10 PM",
      "commitNameOld": "d1274c3b71549cb000868500c293cafd880b3713",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 169.99,
      "commitsBetweenForRepo": 1880,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void initializeContainer(ContainerInitializationContext context) {\n     // intercept the event of the AM container being created and initialize the\n     // app level collector service\n     if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n       ApplicationId appId \u003d context.getContainerId().\n           getApplicationAttemptId().getApplicationId();\n-      synchronized (appIdToContainerId) {\n+      synchronized (appIdToContainerId){\n         Set\u003cContainerId\u003e masterContainers \u003d appIdToContainerId.get(appId);\n         if (masterContainers \u003d\u003d null) {\n           masterContainers \u003d new HashSet\u003c\u003e();\n           appIdToContainerId.put(appId, masterContainers);\n         }\n         masterContainers.add(context.getContainerId());\n-        addApplication(appId, context.getUser());\n       }\n+      addApplicationIfAbsent(appId, context.getUser());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level collector service\n    if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      synchronized (appIdToContainerId){\n        Set\u003cContainerId\u003e masterContainers \u003d appIdToContainerId.get(appId);\n        if (masterContainers \u003d\u003d null) {\n          masterContainers \u003d new HashSet\u003c\u003e();\n          appIdToContainerId.put(appId, masterContainers);\n        }\n        masterContainers.add(context.getContainerId());\n      }\n      addApplicationIfAbsent(appId, context.getUser());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "d1274c3b71549cb000868500c293cafd880b3713": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7835. Race condition in NM while publishing events if second attempt is launched on the same node. (Rohith Sharma K S via Haibo Chen)\n",
      "commitDate": "28/02/18 9:10 PM",
      "commitName": "d1274c3b71549cb000868500c293cafd880b3713",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 182.97,
      "commitsBetweenForRepo": 1325,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,17 @@\n   public void initializeContainer(ContainerInitializationContext context) {\n     // intercept the event of the AM container being created and initialize the\n     // app level collector service\n     if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n       ApplicationId appId \u003d context.getContainerId().\n           getApplicationAttemptId().getApplicationId();\n-      addApplication(appId, context.getUser());\n+      synchronized (appIdToContainerId) {\n+        Set\u003cContainerId\u003e masterContainers \u003d appIdToContainerId.get(appId);\n+        if (masterContainers \u003d\u003d null) {\n+          masterContainers \u003d new HashSet\u003c\u003e();\n+          appIdToContainerId.put(appId, masterContainers);\n+        }\n+        masterContainers.add(context.getContainerId());\n+        addApplication(appId, context.getUser());\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level collector service\n    if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      synchronized (appIdToContainerId) {\n        Set\u003cContainerId\u003e masterContainers \u003d appIdToContainerId.get(appId);\n        if (masterContainers \u003d\u003d null) {\n          masterContainers \u003d new HashSet\u003c\u003e();\n          appIdToContainerId.put(appId, masterContainers);\n        }\n        masterContainers.add(context.getContainerId());\n        addApplication(appId, context.getUser());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "3fb71b1393018e1001da55b794dda7d26491cf35",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public void initializeContainer(ContainerInitializationContext context) {\n     // intercept the event of the AM container being created and initialize the\n     // app level collector service\n     if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n       ApplicationId appId \u003d context.getContainerId().\n           getApplicationAttemptId().getApplicationId();\n-      addApplication(appId);\n+      addApplication(appId, context.getUser());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level collector service\n    if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      addApplication(appId, context.getUser());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "57e2498cd49686ce231fff2e0c8df142bbbf58d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3993. Changed to use the AM flag in ContainerContext determine AM container in TestPerNodeTimelineCollectorsAuxService. Contributed by Sunil G.\n\n(cherry picked from commit 9e48f9ff2ce08f3dcdd8d60bacb697664b92196f)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "57e2498cd49686ce231fff2e0c8df142bbbf58d2",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "22e7ae57715cedb1dcba736e357e8daaf5133e5c",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public void initializeContainer(ContainerInitializationContext context) {\n     // intercept the event of the AM container being created and initialize the\n     // app level collector service\n-    if (isApplicationMaster(context)) {\n+    if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n       ApplicationId appId \u003d context.getContainerId().\n           getApplicationAttemptId().getApplicationId();\n       addApplication(appId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level collector service\n    if (context.getContainerType() \u003d\u003d ContainerType.APPLICATION_MASTER) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      addApplication(appId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n   public void initializeContainer(ContainerInitializationContext context) {\n     // intercept the event of the AM container being created and initialize the\n-    // app level aggregator service\n+    // app level collector service\n     if (isApplicationMaster(context)) {\n       ApplicationId appId \u003d context.getContainerId().\n           getApplicationAttemptId().getApplicationId();\n       addApplication(appId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level collector service\n    if (isApplicationMaster(context)) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      addApplication(appId);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n   public void initializeContainer(ContainerInitializationContext context) {\n     // intercept the event of the AM container being created and initialize the\n-    // app level aggregator service\n+    // app level collector service\n     if (isApplicationMaster(context)) {\n       ApplicationId appId \u003d context.getContainerId().\n           getApplicationAttemptId().getApplicationId();\n       addApplication(appId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level collector service\n    if (isApplicationMaster(context)) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      addApplication(appId);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf54d32750f8b27a170d7a0a8d8f022430327341": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level aggregator service\n    if (isApplicationMaster(context)) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      addApplication(appId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeAggregatorServer.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
        "oldMethodName": "initializeContainer",
        "newMethodName": "initializeContainer"
      }
    },
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3030. Set up TS aggregator with basic request serving structure and lifecycle. Contributed by Sangjin Lee.\n\n(cherry picked from commit f26941b39028ac30c77547e2be2d657bb5bf044a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,9 @@\n+  public void initializeContainer(ContainerInitializationContext context) {\n+    // intercept the event of the AM container being created and initialize the\n+    // app level aggregator service\n+    if (isApplicationMaster(context)) {\n+      ApplicationId appId \u003d context.getContainerId().\n+          getApplicationAttemptId().getApplicationId();\n+      addApplication(appId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initializeContainer(ContainerInitializationContext context) {\n    // intercept the event of the AM container being created and initialize the\n    // app level aggregator service\n    if (isApplicationMaster(context)) {\n      ApplicationId appId \u003d context.getContainerId().\n          getApplicationAttemptId().getApplicationId();\n      addApplication(appId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeAggregatorServer.java"
    }
  }
}