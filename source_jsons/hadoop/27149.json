{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemTimelineWriterImpl.java",
  "functionName": "write",
  "functionId": "write___context-TimelineCollectorContext__entities-TimelineEntities__callerUgi-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
  "functionStartLine": 95,
  "functionEndLine": 111,
  "numCommitsSeen": 31,
  "timeTaken": 3977,
  "changeHistory": [
    "ea3cdc60b39d96702c0bce292829914c25bc0d8e",
    "9f6540535d9148abbea836d54a9e94d25319c5d5",
    "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
    "f0e752c14b0b441955cdfc94f95937c90f1f055d"
  ],
  "changeHistoryShort": {
    "ea3cdc60b39d96702c0bce292829914c25bc0d8e": "Ybodychange",
    "9f6540535d9148abbea836d54a9e94d25319c5d5": "Ymultichange(Yparameterchange,Ybodychange)",
    "47f35a30bb4d99349593e9d6e1c9e76e71341c40": "Ymultichange(Yparameterchange,Ybodychange)",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": "Ymultichange(Yparameterchange,Ybodychange)",
    "f0e752c14b0b441955cdfc94f95937c90f1f055d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ea3cdc60b39d96702c0bce292829914c25bc0d8e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3841 [atsv2 Storage implementation] Adding retry semantics to HDFS backing storage. Contributed by Abhishek Modi.\n",
      "commitDate": "27/02/19 2:55 PM",
      "commitName": "ea3cdc60b39d96702c0bce292829914c25bc0d8e",
      "commitAuthor": "Vrushali C",
      "commitDateOld": "16/05/18 1:00 PM",
      "commitNameOld": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 287.12,
      "commitsBetweenForRepo": 2234,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public TimelineWriteResponse write(TimelineCollectorContext context,\n       TimelineEntities entities, UserGroupInformation callerUgi)\n       throws IOException {\n     TimelineWriteResponse response \u003d new TimelineWriteResponse();\n     String clusterId \u003d context.getClusterId();\n     String userId \u003d context.getUserId();\n     String flowName \u003d context.getFlowName();\n     String flowVersion \u003d context.getFlowVersion();\n     long flowRunId \u003d context.getFlowRunId();\n     String appId \u003d context.getAppId();\n \n     for (TimelineEntity entity : entities.getEntities()) {\n-      write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n-          response);\n+      writeInternal(clusterId, userId, flowName, flowVersion,\n+              flowRunId, appId, entity, response);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse write(TimelineCollectorContext context,\n      TimelineEntities entities, UserGroupInformation callerUgi)\n      throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    String clusterId \u003d context.getClusterId();\n    String userId \u003d context.getUserId();\n    String flowName \u003d context.getFlowName();\n    String flowVersion \u003d context.getFlowVersion();\n    long flowRunId \u003d context.getFlowRunId();\n    String appId \u003d context.getAppId();\n\n    for (TimelineEntity entity : entities.getEntities()) {\n      writeInternal(clusterId, userId, flowName, flowVersion,\n              flowRunId, appId, entity, response);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "9f6540535d9148abbea836d54a9e94d25319c5d5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6734. Ensure sub-application user is extracted \u0026 sent to timeline service (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "9f6540535d9148abbea836d54a9e94d25319c5d5",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6734. Ensure sub-application user is extracted \u0026 sent to timeline service (Rohith Sharma K S via Varun Saxena)\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "9f6540535d9148abbea836d54a9e94d25319c5d5",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "13/07/16 8:45 AM",
          "commitNameOld": "56142171b9528646f26072e022902549a16c8f27",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 412.59,
          "commitsBetweenForRepo": 2554,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,17 @@\n-  public TimelineWriteResponse write(String clusterId, String userId,\n-      String flowName, String flowVersion, long flowRunId, String appId,\n-      TimelineEntities entities) throws IOException {\n+  public TimelineWriteResponse write(TimelineCollectorContext context,\n+      TimelineEntities entities, UserGroupInformation callerUgi)\n+      throws IOException {\n     TimelineWriteResponse response \u003d new TimelineWriteResponse();\n+    String clusterId \u003d context.getClusterId();\n+    String userId \u003d context.getUserId();\n+    String flowName \u003d context.getFlowName();\n+    String flowVersion \u003d context.getFlowVersion();\n+    long flowRunId \u003d context.getFlowRunId();\n+    String appId \u003d context.getAppId();\n+\n     for (TimelineEntity entity : entities.getEntities()) {\n       write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n           response);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse write(TimelineCollectorContext context,\n      TimelineEntities entities, UserGroupInformation callerUgi)\n      throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    String clusterId \u003d context.getClusterId();\n    String userId \u003d context.getUserId();\n    String flowName \u003d context.getFlowName();\n    String flowVersion \u003d context.getFlowVersion();\n    long flowRunId \u003d context.getFlowRunId();\n    String appId \u003d context.getAppId();\n\n    for (TimelineEntity entity : entities.getEntities()) {\n      write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n          response);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
          "extendedDetails": {
            "oldValue": "[clusterId-String, userId-String, flowName-String, flowVersion-String, flowRunId-long, appId-String, entities-TimelineEntities]",
            "newValue": "[context-TimelineCollectorContext, entities-TimelineEntities, callerUgi-UserGroupInformation]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6734. Ensure sub-application user is extracted \u0026 sent to timeline service (Rohith Sharma K S via Varun Saxena)\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "9f6540535d9148abbea836d54a9e94d25319c5d5",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "13/07/16 8:45 AM",
          "commitNameOld": "56142171b9528646f26072e022902549a16c8f27",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 412.59,
          "commitsBetweenForRepo": 2554,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,17 @@\n-  public TimelineWriteResponse write(String clusterId, String userId,\n-      String flowName, String flowVersion, long flowRunId, String appId,\n-      TimelineEntities entities) throws IOException {\n+  public TimelineWriteResponse write(TimelineCollectorContext context,\n+      TimelineEntities entities, UserGroupInformation callerUgi)\n+      throws IOException {\n     TimelineWriteResponse response \u003d new TimelineWriteResponse();\n+    String clusterId \u003d context.getClusterId();\n+    String userId \u003d context.getUserId();\n+    String flowName \u003d context.getFlowName();\n+    String flowVersion \u003d context.getFlowVersion();\n+    long flowRunId \u003d context.getFlowRunId();\n+    String appId \u003d context.getAppId();\n+\n     for (TimelineEntity entity : entities.getEntities()) {\n       write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n           response);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse write(TimelineCollectorContext context,\n      TimelineEntities entities, UserGroupInformation callerUgi)\n      throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    String clusterId \u003d context.getClusterId();\n    String userId \u003d context.getUserId();\n    String flowName \u003d context.getFlowName();\n    String flowVersion \u003d context.getFlowVersion();\n    long flowRunId \u003d context.getFlowRunId();\n    String appId \u003d context.getAppId();\n\n    for (TimelineEntity entity : entities.getEntities()) {\n      write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n          response);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "47f35a30bb4d99349593e9d6e1c9e76e71341c40": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3391. Clearly define flow ID/ flow run / flow version in API and storage. Contributed by Zhijie Shen\n\n(cherry picked from commit 68c6232f8423e55b4d152ef3d1d66aeb2d6a555e)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3391. Clearly define flow ID/ flow run / flow version in API and storage. Contributed by Zhijie Shen\n\n(cherry picked from commit 68c6232f8423e55b4d152ef3d1d66aeb2d6a555e)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n   public TimelineWriteResponse write(String clusterId, String userId,\n-      String flowId, String flowRunId, String appId,\n+      String flowName, String flowVersion, long flowRunId, String appId,\n       TimelineEntities entities) throws IOException {\n     TimelineWriteResponse response \u003d new TimelineWriteResponse();\n     for (TimelineEntity entity : entities.getEntities()) {\n-      write(clusterId, userId, flowId, flowRunId, appId, entity, response);\n+      write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n+          response);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse write(String clusterId, String userId,\n      String flowName, String flowVersion, long flowRunId, String appId,\n      TimelineEntities entities) throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    for (TimelineEntity entity : entities.getEntities()) {\n      write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n          response);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
          "extendedDetails": {
            "oldValue": "[clusterId-String, userId-String, flowId-String, flowRunId-String, appId-String, entities-TimelineEntities]",
            "newValue": "[clusterId-String, userId-String, flowName-String, flowVersion-String, flowRunId-long, appId-String, entities-TimelineEntities]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3391. Clearly define flow ID/ flow run / flow version in API and storage. Contributed by Zhijie Shen\n\n(cherry picked from commit 68c6232f8423e55b4d152ef3d1d66aeb2d6a555e)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n   public TimelineWriteResponse write(String clusterId, String userId,\n-      String flowId, String flowRunId, String appId,\n+      String flowName, String flowVersion, long flowRunId, String appId,\n       TimelineEntities entities) throws IOException {\n     TimelineWriteResponse response \u003d new TimelineWriteResponse();\n     for (TimelineEntity entity : entities.getEntities()) {\n-      write(clusterId, userId, flowId, flowRunId, appId, entity, response);\n+      write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n+          response);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse write(String clusterId, String userId,\n      String flowName, String flowVersion, long flowRunId, String appId,\n      TimelineEntities entities) throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    for (TimelineEntity entity : entities.getEntities()) {\n      write(clusterId, userId, flowName, flowVersion, flowRunId, appId, entity,\n          response);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public TimelineWriteResponse write(TimelineEntities entities)\n-      throws IOException {\n+  public TimelineWriteResponse write(String clusterId, String userId,\n+      String flowId, String flowRunId, String appId,\n+      TimelineEntities entities) throws IOException {\n     TimelineWriteResponse response \u003d new TimelineWriteResponse();\n     for (TimelineEntity entity : entities.getEntities()) {\n-      write(entity, response);\n+      write(clusterId, userId, flowId, flowRunId, appId, entity, response);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse write(String clusterId, String userId,\n      String flowId, String flowRunId, String appId,\n      TimelineEntities entities) throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    for (TimelineEntity entity : entities.getEntities()) {\n      write(clusterId, userId, flowId, flowRunId, appId, entity, response);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
          "extendedDetails": {
            "oldValue": "[entities-TimelineEntities]",
            "newValue": "[clusterId-String, userId-String, flowId-String, flowRunId-String, appId-String, entities-TimelineEntities]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public TimelineWriteResponse write(TimelineEntities entities)\n-      throws IOException {\n+  public TimelineWriteResponse write(String clusterId, String userId,\n+      String flowId, String flowRunId, String appId,\n+      TimelineEntities entities) throws IOException {\n     TimelineWriteResponse response \u003d new TimelineWriteResponse();\n     for (TimelineEntity entity : entities.getEntities()) {\n-      write(entity, response);\n+      write(clusterId, userId, flowId, flowRunId, appId, entity, response);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse write(String clusterId, String userId,\n      String flowId, String flowRunId, String appId,\n      TimelineEntities entities) throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    for (TimelineEntity entity : entities.getEntities()) {\n      write(clusterId, userId, flowId, flowRunId, appId, entity, response);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "f0e752c14b0b441955cdfc94f95937c90f1f055d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3264. Created backing storage write interface and a POC only FS based storage implementation. Contributed by Vrushali C.\n\n(cherry picked from commit 821b68d05d246fd57d7b7286eb2ccc075ed1eae8)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f0e752c14b0b441955cdfc94f95937c90f1f055d",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,8 @@\n+  public TimelineWriteResponse write(TimelineEntities entities)\n+      throws IOException {\n+    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n+    for (TimelineEntity entity : entities.getEntities()) {\n+      write(entity, response);\n+    }\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse write(TimelineEntities entities)\n      throws IOException {\n    TimelineWriteResponse response \u003d new TimelineWriteResponse();\n    for (TimelineEntity entity : entities.getEntities()) {\n      write(entity, response);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineWriterImpl.java"
    }
  }
}