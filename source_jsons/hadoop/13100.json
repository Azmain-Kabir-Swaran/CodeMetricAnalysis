{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManagerSafeMode.java",
  "functionName": "checkSafeMode",
  "functionId": "checkSafeMode",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
  "functionStartLine": 204,
  "functionEndLine": 237,
  "numCommitsSeen": 14,
  "timeTaken": 2185,
  "changeHistory": [
    "0b50aa29fd5dc114b3e0fc54b5c393bbc9f3102e",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553"
  ],
  "changeHistoryShort": {
    "0b50aa29fd5dc114b3e0fc54b5c393bbc9f3102e": "Ybodychange",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b50aa29fd5dc114b3e0fc54b5c393bbc9f3102e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14952. Skip safemode if blockTotal is 0 in new NN. Contributed by Xiaoqiao He.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nReviewed-by: Mukul Kumar Singh \u003cmsingh@apache.org\u003e\n",
      "commitDate": "19/11/19 12:16 PM",
      "commitName": "0b50aa29fd5dc114b3e0fc54b5c393bbc9f3102e",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "08/10/19 1:44 AM",
      "commitNameOld": "91320b446171013ad47783d7400d646d2d71ca3d",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 42.48,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   void checkSafeMode() {\n     assert namesystem.hasWriteLock();\n     if (namesystem.inTransitionToActive()) {\n       return;\n     }\n \n     switch (status) {\n     case PENDING_THRESHOLD:\n       if (areThresholdsMet()) {\n-        if (extension \u003e 0) {\n+        if (blockTotal \u003e 0 \u0026\u0026 extension \u003e 0) {\n           // PENDING_THRESHOLD -\u003e EXTENSION\n           status \u003d BMSafeModeStatus.EXTENSION;\n           reachedTime.set(monotonicNow());\n           smmthread.start();\n           initializeReplQueuesIfNecessary();\n           reportStatus(\"STATE* Safe mode extension entered.\", true);\n         } else {\n           // PENDING_THRESHOLD -\u003e OFF\n           leaveSafeMode(false);\n         }\n       } else {\n         initializeReplQueuesIfNecessary();\n         reportStatus(\"STATE* Safe mode ON.\", false);\n       }\n       break;\n     case EXTENSION:\n       reportStatus(\"STATE* Safe mode ON.\", false);\n       break;\n     case OFF:\n       break;\n     default:\n       assert false : \"Non-recognized block manager safe mode status: \" + status;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkSafeMode() {\n    assert namesystem.hasWriteLock();\n    if (namesystem.inTransitionToActive()) {\n      return;\n    }\n\n    switch (status) {\n    case PENDING_THRESHOLD:\n      if (areThresholdsMet()) {\n        if (blockTotal \u003e 0 \u0026\u0026 extension \u003e 0) {\n          // PENDING_THRESHOLD -\u003e EXTENSION\n          status \u003d BMSafeModeStatus.EXTENSION;\n          reachedTime.set(monotonicNow());\n          smmthread.start();\n          initializeReplQueuesIfNecessary();\n          reportStatus(\"STATE* Safe mode extension entered.\", true);\n        } else {\n          // PENDING_THRESHOLD -\u003e OFF\n          leaveSafeMode(false);\n        }\n      } else {\n        initializeReplQueuesIfNecessary();\n        reportStatus(\"STATE* Safe mode ON.\", false);\n      }\n      break;\n    case EXTENSION:\n      reportStatus(\"STATE* Safe mode ON.\", false);\n      break;\n    case OFF:\n      break;\n    default:\n      assert false : \"Non-recognized block manager safe mode status: \" + status;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
      "extendedDetails": {}
    },
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
      "commitDate": "01/12/15 4:09 PM",
      "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,34 @@\n+  void checkSafeMode() {\n+    assert namesystem.hasWriteLock();\n+    if (namesystem.inTransitionToActive()) {\n+      return;\n+    }\n+\n+    switch (status) {\n+    case PENDING_THRESHOLD:\n+      if (areThresholdsMet()) {\n+        if (extension \u003e 0) {\n+          // PENDING_THRESHOLD -\u003e EXTENSION\n+          status \u003d BMSafeModeStatus.EXTENSION;\n+          reachedTime.set(monotonicNow());\n+          smmthread.start();\n+          initializeReplQueuesIfNecessary();\n+          reportStatus(\"STATE* Safe mode extension entered.\", true);\n+        } else {\n+          // PENDING_THRESHOLD -\u003e OFF\n+          leaveSafeMode(false);\n+        }\n+      } else {\n+        initializeReplQueuesIfNecessary();\n+        reportStatus(\"STATE* Safe mode ON.\", false);\n+      }\n+      break;\n+    case EXTENSION:\n+      reportStatus(\"STATE* Safe mode ON.\", false);\n+      break;\n+    case OFF:\n+      break;\n+    default:\n+      assert false : \"Non-recognized block manager safe mode status: \" + status;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void checkSafeMode() {\n    assert namesystem.hasWriteLock();\n    if (namesystem.inTransitionToActive()) {\n      return;\n    }\n\n    switch (status) {\n    case PENDING_THRESHOLD:\n      if (areThresholdsMet()) {\n        if (extension \u003e 0) {\n          // PENDING_THRESHOLD -\u003e EXTENSION\n          status \u003d BMSafeModeStatus.EXTENSION;\n          reachedTime.set(monotonicNow());\n          smmthread.start();\n          initializeReplQueuesIfNecessary();\n          reportStatus(\"STATE* Safe mode extension entered.\", true);\n        } else {\n          // PENDING_THRESHOLD -\u003e OFF\n          leaveSafeMode(false);\n        }\n      } else {\n        initializeReplQueuesIfNecessary();\n        reportStatus(\"STATE* Safe mode ON.\", false);\n      }\n      break;\n    case EXTENSION:\n      reportStatus(\"STATE* Safe mode ON.\", false);\n      break;\n    case OFF:\n      break;\n    default:\n      assert false : \"Non-recognized block manager safe mode status: \" + status;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java"
    }
  }
}