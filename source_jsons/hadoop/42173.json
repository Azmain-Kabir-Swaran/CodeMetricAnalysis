{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemRMStateStore.java",
  "functionName": "storeOrUpdateRMDelegationTokenState",
  "functionId": "storeOrUpdateRMDelegationTokenState___identifier-RMDelegationTokenIdentifier__renewDate-Long__isUpdate-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
  "functionStartLine": 552,
  "functionEndLine": 585,
  "numCommitsSeen": 91,
  "timeTaken": 3466,
  "changeHistory": [
    "9a2a9553eee454ecd18120535d3e845f86fc3584",
    "01a1621930df17a745dd37892996c68fca3447d1",
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
    "018664550507981297fd9f91e29408e6b7801ea9",
    "ea26cc0b4ac02b8af686dfda80f540e5aa70c358",
    "ce56616037fc160ba875b496bdc369411bb873be"
  ],
  "changeHistoryShort": {
    "9a2a9553eee454ecd18120535d3e845f86fc3584": "Ybodychange",
    "01a1621930df17a745dd37892996c68fca3447d1": "Ybodychange",
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "018664550507981297fd9f91e29408e6b7801ea9": "Ybodychange",
    "ea26cc0b4ac02b8af686dfda80f540e5aa70c358": "Ybodychange",
    "ce56616037fc160ba875b496bdc369411bb873be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a2a9553eee454ecd18120535d3e845f86fc3584": {
      "type": "Ybodychange",
      "commitMessage": "Fixing HDFS state-store. Contributed by Arun Suresh.\n",
      "commitDate": "14/05/15 4:13 PM",
      "commitName": "9a2a9553eee454ecd18120535d3e845f86fc3584",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/04/15 5:51 PM",
      "commitNameOld": "e71d0d87d9b388f211a8eb3d2cd9af347abf9bda",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 22.93,
      "commitsBetweenForRepo": 295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   private void storeOrUpdateRMDelegationTokenState(\n       RMDelegationTokenIdentifier identifier, Long renewDate,\n       boolean isUpdate) throws Exception {\n     Path nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n     RMDelegationTokenIdentifierData identifierData \u003d\n         new RMDelegationTokenIdentifierData(identifier, renewDate);\n     if (isUpdate) {\n       LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n-      updateFile(nodeCreatePath, identifierData.toByteArray());\n+      updateFile(nodeCreatePath, identifierData.toByteArray(), true);\n     } else {\n       LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n-      writeFileWithRetries(nodeCreatePath, identifierData.toByteArray());\n+      writeFileWithRetries(nodeCreatePath, identifierData.toByteArray(), true);\n \n       // store sequence number\n       Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n             DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n             + identifier.getSequenceNumber());\n       LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n           + identifier.getSequenceNumber());\n       if (dtSequenceNumberPath \u003d\u003d null) {\n         if (!createFileWithRetries(latestSequenceNumberPath)) {\n           throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n         }\n       } else {\n         if (!renameFileWithRetries(dtSequenceNumberPath,\n             latestSequenceNumberPath)) {\n           throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n         }\n       }\n       dtSequenceNumberPath \u003d latestSequenceNumberPath;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeOrUpdateRMDelegationTokenState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(identifier, renewDate);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, identifierData.toByteArray(), true);\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFileWithRetries(nodeCreatePath, identifierData.toByteArray(), true);\n\n      // store sequence number\n      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n            + identifier.getSequenceNumber());\n      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n          + identifier.getSequenceNumber());\n      if (dtSequenceNumberPath \u003d\u003d null) {\n        if (!createFileWithRetries(latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n        }\n      } else {\n        if (!renameFileWithRetries(dtSequenceNumberPath,\n            latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n        }\n      }\n      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "01a1621930df17a745dd37892996c68fca3447d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2820. Retry in FileSystemRMStateStore when FS\u0027s operations fail due to IOException. Contributed by Zhihai Xu.\n",
      "commitDate": "27/02/15 7:56 AM",
      "commitName": "01a1621930df17a745dd37892996c68fca3447d1",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "08/01/15 9:47 AM",
      "commitNameOld": "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 49.92,
      "commitsBetweenForRepo": 453,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n   private void storeOrUpdateRMDelegationTokenState(\n       RMDelegationTokenIdentifier identifier, Long renewDate,\n       boolean isUpdate) throws Exception {\n     Path nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n     RMDelegationTokenIdentifierData identifierData \u003d\n         new RMDelegationTokenIdentifierData(identifier, renewDate);\n     if (isUpdate) {\n       LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n       updateFile(nodeCreatePath, identifierData.toByteArray());\n     } else {\n       LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n-      writeFile(nodeCreatePath, identifierData.toByteArray());\n+      writeFileWithRetries(nodeCreatePath, identifierData.toByteArray());\n \n       // store sequence number\n       Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n             DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n             + identifier.getSequenceNumber());\n       LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n           + identifier.getSequenceNumber());\n       if (dtSequenceNumberPath \u003d\u003d null) {\n-        if (!createFile(latestSequenceNumberPath)) {\n+        if (!createFileWithRetries(latestSequenceNumberPath)) {\n           throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n         }\n       } else {\n-        if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n+        if (!renameFileWithRetries(dtSequenceNumberPath,\n+            latestSequenceNumberPath)) {\n           throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n         }\n       }\n       dtSequenceNumberPath \u003d latestSequenceNumberPath;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeOrUpdateRMDelegationTokenState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(identifier, renewDate);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, identifierData.toByteArray());\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFileWithRetries(nodeCreatePath, identifierData.toByteArray());\n\n      // store sequence number\n      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n            + identifier.getSequenceNumber());\n      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n          + identifier.getSequenceNumber());\n      if (dtSequenceNumberPath \u003d\u003d null) {\n        if (!createFileWithRetries(latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n        }\n      } else {\n        if (!renameFileWithRetries(dtSequenceNumberPath,\n            latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n        }\n      }\n      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
      "commitDate": "05/01/15 1:33 PM",
      "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/12/14 10:14 PM",
          "commitNameOld": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n-  private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n+  private void storeOrUpdateRMDelegationTokenState(\n       RMDelegationTokenIdentifier identifier, Long renewDate,\n-      int latestSequenceNumber, boolean isUpdate) throws Exception {\n+      boolean isUpdate) throws Exception {\n     Path nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n     RMDelegationTokenIdentifierData identifierData \u003d\n         new RMDelegationTokenIdentifierData(identifier, renewDate);\n     if (isUpdate) {\n       LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n       updateFile(nodeCreatePath, identifierData.toByteArray());\n     } else {\n       LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n       writeFile(nodeCreatePath, identifierData.toByteArray());\n-    }\n \n-    // store sequence number\n-    Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n-          DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n-    LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n-        + latestSequenceNumber);\n-    if (dtSequenceNumberPath \u003d\u003d null) {\n-      if (!createFile(latestSequenceNumberPath)) {\n-        throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n+      // store sequence number\n+      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n+            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n+            + identifier.getSequenceNumber());\n+      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n+          + identifier.getSequenceNumber());\n+      if (dtSequenceNumberPath \u003d\u003d null) {\n+        if (!createFile(latestSequenceNumberPath)) {\n+          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n+        }\n+      } else {\n+        if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n+          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n+        }\n       }\n-    } else {\n-      if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n-        throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n-      }\n+      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n     }\n-    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeOrUpdateRMDelegationTokenState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(identifier, renewDate);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, identifierData.toByteArray());\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFile(nodeCreatePath, identifierData.toByteArray());\n\n      // store sequence number\n      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n            + identifier.getSequenceNumber());\n      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n          + identifier.getSequenceNumber());\n      if (dtSequenceNumberPath \u003d\u003d null) {\n        if (!createFile(latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n        }\n      } else {\n        if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n        }\n      }\n      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
          "extendedDetails": {
            "oldValue": "storeOrUpdateRMDelegationTokenAndSequenceNumberState",
            "newValue": "storeOrUpdateRMDelegationTokenState"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/12/14 10:14 PM",
          "commitNameOld": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n-  private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n+  private void storeOrUpdateRMDelegationTokenState(\n       RMDelegationTokenIdentifier identifier, Long renewDate,\n-      int latestSequenceNumber, boolean isUpdate) throws Exception {\n+      boolean isUpdate) throws Exception {\n     Path nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n     RMDelegationTokenIdentifierData identifierData \u003d\n         new RMDelegationTokenIdentifierData(identifier, renewDate);\n     if (isUpdate) {\n       LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n       updateFile(nodeCreatePath, identifierData.toByteArray());\n     } else {\n       LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n       writeFile(nodeCreatePath, identifierData.toByteArray());\n-    }\n \n-    // store sequence number\n-    Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n-          DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n-    LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n-        + latestSequenceNumber);\n-    if (dtSequenceNumberPath \u003d\u003d null) {\n-      if (!createFile(latestSequenceNumberPath)) {\n-        throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n+      // store sequence number\n+      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n+            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n+            + identifier.getSequenceNumber());\n+      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n+          + identifier.getSequenceNumber());\n+      if (dtSequenceNumberPath \u003d\u003d null) {\n+        if (!createFile(latestSequenceNumberPath)) {\n+          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n+        }\n+      } else {\n+        if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n+          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n+        }\n       }\n-    } else {\n-      if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n-        throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n-      }\n+      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n     }\n-    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeOrUpdateRMDelegationTokenState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(identifier, renewDate);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, identifierData.toByteArray());\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFile(nodeCreatePath, identifierData.toByteArray());\n\n      // store sequence number\n      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n            + identifier.getSequenceNumber());\n      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n          + identifier.getSequenceNumber());\n      if (dtSequenceNumberPath \u003d\u003d null) {\n        if (!createFile(latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n        }\n      } else {\n        if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n        }\n      }\n      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[identifier-RMDelegationTokenIdentifier, renewDate-Long, latestSequenceNumber-int, isUpdate-boolean]",
            "newValue": "[identifier-RMDelegationTokenIdentifier, renewDate-Long, isUpdate-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/12/14 10:14 PM",
          "commitNameOld": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n-  private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n+  private void storeOrUpdateRMDelegationTokenState(\n       RMDelegationTokenIdentifier identifier, Long renewDate,\n-      int latestSequenceNumber, boolean isUpdate) throws Exception {\n+      boolean isUpdate) throws Exception {\n     Path nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n     RMDelegationTokenIdentifierData identifierData \u003d\n         new RMDelegationTokenIdentifierData(identifier, renewDate);\n     if (isUpdate) {\n       LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n       updateFile(nodeCreatePath, identifierData.toByteArray());\n     } else {\n       LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n       writeFile(nodeCreatePath, identifierData.toByteArray());\n-    }\n \n-    // store sequence number\n-    Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n-          DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n-    LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n-        + latestSequenceNumber);\n-    if (dtSequenceNumberPath \u003d\u003d null) {\n-      if (!createFile(latestSequenceNumberPath)) {\n-        throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n+      // store sequence number\n+      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n+            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n+            + identifier.getSequenceNumber());\n+      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n+          + identifier.getSequenceNumber());\n+      if (dtSequenceNumberPath \u003d\u003d null) {\n+        if (!createFile(latestSequenceNumberPath)) {\n+          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n+        }\n+      } else {\n+        if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n+          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n+        }\n       }\n-    } else {\n-      if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n-        throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n-      }\n+      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n     }\n-    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeOrUpdateRMDelegationTokenState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(identifier, renewDate);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, identifierData.toByteArray());\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFile(nodeCreatePath, identifierData.toByteArray());\n\n      // store sequence number\n      Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n            DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n            + identifier.getSequenceNumber());\n      LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n          + identifier.getSequenceNumber());\n      if (dtSequenceNumberPath \u003d\u003d null) {\n        if (!createFile(latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n        }\n      } else {\n        if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n          throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n        }\n      }\n      dtSequenceNumberPath \u003d latestSequenceNumberPath;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "018664550507981297fd9f91e29408e6b7801ea9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2743. Fixed a bug in ResourceManager that was causing RMDelegationToken identifiers to be tampered and thus causing app submission failures in secure mode. Contributed by Jian He.\n",
      "commitDate": "26/10/14 11:14 AM",
      "commitName": "018664550507981297fd9f91e29408e6b7801ea9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/10/14 10:47 AM",
      "commitNameOld": "ea26cc0b4ac02b8af686dfda80f540e5aa70c358",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,32 @@\n   private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n       RMDelegationTokenIdentifier identifier, Long renewDate,\n       int latestSequenceNumber, boolean isUpdate) throws Exception {\n     Path nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n-    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n-    DataOutputStream fsOut \u003d new DataOutputStream(os);\n-    identifier.setRenewDate(renewDate);\n-    identifier.write(fsOut);\n+    RMDelegationTokenIdentifierData identifierData \u003d\n+        new RMDelegationTokenIdentifierData(identifier, renewDate);\n     if (isUpdate) {\n       LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n-      updateFile(nodeCreatePath, os.toByteArray());\n+      updateFile(nodeCreatePath, identifierData.toByteArray());\n     } else {\n       LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n-      writeFile(nodeCreatePath, os.toByteArray());\n+      writeFile(nodeCreatePath, identifierData.toByteArray());\n     }\n-    fsOut.close();\n \n     // store sequence number\n     Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n     LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n         + latestSequenceNumber);\n     if (dtSequenceNumberPath \u003d\u003d null) {\n       if (!createFile(latestSequenceNumberPath)) {\n         throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n       }\n     } else {\n       if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n         throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n       }\n     }\n     dtSequenceNumberPath \u003d latestSequenceNumberPath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      int latestSequenceNumber, boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    RMDelegationTokenIdentifierData identifierData \u003d\n        new RMDelegationTokenIdentifierData(identifier, renewDate);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, identifierData.toByteArray());\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFile(nodeCreatePath, identifierData.toByteArray());\n    }\n\n    // store sequence number\n    Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n    LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n        + latestSequenceNumber);\n    if (dtSequenceNumberPath \u003d\u003d null) {\n      if (!createFile(latestSequenceNumberPath)) {\n        throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n      }\n    } else {\n      if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n        throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n      }\n    }\n    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "ea26cc0b4ac02b8af686dfda80f540e5aa70c358": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2615. Changed ClientToAMTokenIdentifier/RM(Timeline)DelegationTokenIdentifier to use protobuf as payload. Contributed by Junping Du\n",
      "commitDate": "06/10/14 10:47 AM",
      "commitName": "ea26cc0b4ac02b8af686dfda80f540e5aa70c358",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/09/14 6:04 PM",
      "commitNameOld": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 22.7,
      "commitsBetweenForRepo": 259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n       RMDelegationTokenIdentifier identifier, Long renewDate,\n       int latestSequenceNumber, boolean isUpdate) throws Exception {\n     Path nodeCreatePath \u003d\n         getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n     ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n     DataOutputStream fsOut \u003d new DataOutputStream(os);\n+    identifier.setRenewDate(renewDate);\n     identifier.write(fsOut);\n-    fsOut.writeLong(renewDate);\n     if (isUpdate) {\n       LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n       updateFile(nodeCreatePath, os.toByteArray());\n     } else {\n       LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n       writeFile(nodeCreatePath, os.toByteArray());\n     }\n     fsOut.close();\n \n     // store sequence number\n     Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n           DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n     LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n         + latestSequenceNumber);\n     if (dtSequenceNumberPath \u003d\u003d null) {\n       if (!createFile(latestSequenceNumberPath)) {\n         throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n       }\n     } else {\n       if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n         throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n       }\n     }\n     dtSequenceNumberPath \u003d latestSequenceNumberPath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      int latestSequenceNumber, boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    DataOutputStream fsOut \u003d new DataOutputStream(os);\n    identifier.setRenewDate(renewDate);\n    identifier.write(fsOut);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, os.toByteArray());\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFile(nodeCreatePath, os.toByteArray());\n    }\n    fsOut.close();\n\n    // store sequence number\n    Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n    LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n        + latestSequenceNumber);\n    if (dtSequenceNumberPath \u003d\u003d null) {\n      if (!createFile(latestSequenceNumberPath)) {\n        throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n      }\n    } else {\n      if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n        throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n      }\n    }\n    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "ce56616037fc160ba875b496bdc369411bb873be": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1776. Fixed DelegationToken renewal to survive RM failover. Contributed by Zhijie Shen\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580154 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/14 9:12 PM",
      "commitName": "ce56616037fc160ba875b496bdc369411bb873be",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,35 @@\n+  private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n+      RMDelegationTokenIdentifier identifier, Long renewDate,\n+      int latestSequenceNumber, boolean isUpdate) throws Exception {\n+    Path nodeCreatePath \u003d\n+        getNodePath(rmDTSecretManagerRoot,\n+          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n+    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n+    DataOutputStream fsOut \u003d new DataOutputStream(os);\n+    identifier.write(fsOut);\n+    fsOut.writeLong(renewDate);\n+    if (isUpdate) {\n+      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n+      updateFile(nodeCreatePath, os.toByteArray());\n+    } else {\n+      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n+      writeFile(nodeCreatePath, os.toByteArray());\n+    }\n+    fsOut.close();\n+\n+    // store sequence number\n+    Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n+          DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n+    LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n+        + latestSequenceNumber);\n+    if (dtSequenceNumberPath \u003d\u003d null) {\n+      if (!createFile(latestSequenceNumberPath)) {\n+        throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n+      }\n+    } else {\n+      if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n+        throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n+      }\n+    }\n+    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeOrUpdateRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier identifier, Long renewDate,\n      int latestSequenceNumber, boolean isUpdate) throws Exception {\n    Path nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_PREFIX + identifier.getSequenceNumber());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    DataOutputStream fsOut \u003d new DataOutputStream(os);\n    identifier.write(fsOut);\n    fsOut.writeLong(renewDate);\n    if (isUpdate) {\n      LOG.info(\"Updating RMDelegationToken_\" + identifier.getSequenceNumber());\n      updateFile(nodeCreatePath, os.toByteArray());\n    } else {\n      LOG.info(\"Storing RMDelegationToken_\" + identifier.getSequenceNumber());\n      writeFile(nodeCreatePath, os.toByteArray());\n    }\n    fsOut.close();\n\n    // store sequence number\n    Path latestSequenceNumberPath \u003d getNodePath(rmDTSecretManagerRoot,\n          DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX + latestSequenceNumber);\n    LOG.info(\"Storing \" + DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX\n        + latestSequenceNumber);\n    if (dtSequenceNumberPath \u003d\u003d null) {\n      if (!createFile(latestSequenceNumberPath)) {\n        throw new Exception(\"Failed to create \" + latestSequenceNumberPath);\n      }\n    } else {\n      if (!renameFile(dtSequenceNumberPath, latestSequenceNumberPath)) {\n        throw new Exception(\"Failed to rename \" + dtSequenceNumberPath);\n      }\n    }\n    dtSequenceNumberPath \u003d latestSequenceNumberPath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java"
    }
  }
}