{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeAttributesManagerImpl.java",
  "functionName": "getClusterNodeAttributes",
  "functionId": "getClusterNodeAttributes___prefix-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
  "functionStartLine": 380,
  "functionEndLine": 399,
  "numCommitsSeen": 18,
  "timeTaken": 2016,
  "changeHistory": [
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
    "86d024ef2a5844ac723c7b597689afa4b598ee27",
    "2f7712be09d5b68978547f95b1be2352cdd46266"
  ],
  "changeHistoryShort": {
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f": "Ybodychange",
    "86d024ef2a5844ac723c7b597689afa4b598ee27": "Ybodychange",
    "2f7712be09d5b68978547f95b1be2352cdd46266": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7892. Revisit NodeAttribute class structure. Contributed by  Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n-  public Set\u003cNodeAttribute\u003e getClusterNodeAttributes(Set\u003cString\u003e prefix) {\n+  public Set\u003cNodeAttribute\u003e getClusterNodeAttributes(\n+      Set\u003cString\u003e prefix) {\n     Set\u003cNodeAttribute\u003e attributes \u003d new HashSet\u003c\u003e();\n-    KeySetView\u003cNodeAttribute, RMNodeAttribute\u003e allAttributes \u003d\n-        clusterAttributes.keySet();\n+    Set\u003cEntry\u003cNodeAttributeKey, RMNodeAttribute\u003e\u003e allAttributes \u003d\n+        clusterAttributes.entrySet();\n     // Return all if prefix is not given.\n-    if (prefix \u003d\u003d null || prefix.isEmpty()) {\n-      attributes.addAll(allAttributes);\n-      return attributes;\n-    }\n+    boolean forAllPrefix \u003d prefix \u003d\u003d null || prefix.isEmpty();\n     // Try search attributes by prefix and return valid ones.\n-    Iterator\u003cNodeAttribute\u003e iterator \u003d allAttributes.iterator();\n+    Iterator\u003cEntry\u003cNodeAttributeKey, RMNodeAttribute\u003e\u003e iterator \u003d\n+        allAttributes.iterator();\n     while (iterator.hasNext()) {\n-      NodeAttribute current \u003d iterator.next();\n-      if (prefix.contains(current.getAttributePrefix())) {\n-        attributes.add(current);\n+      Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e current \u003d iterator.next();\n+      NodeAttributeKey attrID \u003d current.getKey();\n+      RMNodeAttribute rmAttr \u003d current.getValue();\n+      if (forAllPrefix || prefix.contains(attrID.getAttributePrefix())) {\n+        attributes.add(rmAttr.getAttribute());\n       }\n     }\n     return attributes;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cNodeAttribute\u003e getClusterNodeAttributes(\n      Set\u003cString\u003e prefix) {\n    Set\u003cNodeAttribute\u003e attributes \u003d new HashSet\u003c\u003e();\n    Set\u003cEntry\u003cNodeAttributeKey, RMNodeAttribute\u003e\u003e allAttributes \u003d\n        clusterAttributes.entrySet();\n    // Return all if prefix is not given.\n    boolean forAllPrefix \u003d prefix \u003d\u003d null || prefix.isEmpty();\n    // Try search attributes by prefix and return valid ones.\n    Iterator\u003cEntry\u003cNodeAttributeKey, RMNodeAttribute\u003e\u003e iterator \u003d\n        allAttributes.iterator();\n    while (iterator.hasNext()) {\n      Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e current \u003d iterator.next();\n      NodeAttributeKey attrID \u003d current.getKey();\n      RMNodeAttribute rmAttr \u003d current.getValue();\n      if (forAllPrefix || prefix.contains(attrID.getAttributePrefix())) {\n        attributes.add(rmAttr.getAttribute());\n      }\n    }\n    return attributes;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
      "extendedDetails": {}
    },
    "86d024ef2a5844ac723c7b597689afa4b598ee27": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7965. NodeAttributeManager add/get API is not working properly. Contributed by Weiwei Yang.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "86d024ef2a5844ac723c7b597689afa4b598ee27",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "2f7712be09d5b68978547f95b1be2352cdd46266",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public Set\u003cNodeAttribute\u003e getClusterNodeAttributes(Set\u003cString\u003e prefix) {\n     Set\u003cNodeAttribute\u003e attributes \u003d new HashSet\u003c\u003e();\n-    try {\n-      readLock.lock();\n-      attributes.addAll(clusterAttributes.keySet());\n-    } finally {\n-      readLock.unlock();\n+    KeySetView\u003cNodeAttribute, RMNodeAttribute\u003e allAttributes \u003d\n+        clusterAttributes.keySet();\n+    // Return all if prefix is not given.\n+    if (prefix \u003d\u003d null || prefix.isEmpty()) {\n+      attributes.addAll(allAttributes);\n+      return attributes;\n     }\n-    if (prefix !\u003d null \u0026\u0026 prefix.isEmpty()) {\n-      Iterator\u003cNodeAttribute\u003e iterator \u003d attributes.iterator();\n-      while (iterator.hasNext()) {\n-        NodeAttribute attribute \u003d iterator.next();\n-        if (!prefix.contains(attribute.getAttributePrefix())) {\n-          iterator.remove();\n-        }\n+    // Try search attributes by prefix and return valid ones.\n+    Iterator\u003cNodeAttribute\u003e iterator \u003d allAttributes.iterator();\n+    while (iterator.hasNext()) {\n+      NodeAttribute current \u003d iterator.next();\n+      if (prefix.contains(current.getAttributePrefix())) {\n+        attributes.add(current);\n       }\n     }\n     return attributes;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cNodeAttribute\u003e getClusterNodeAttributes(Set\u003cString\u003e prefix) {\n    Set\u003cNodeAttribute\u003e attributes \u003d new HashSet\u003c\u003e();\n    KeySetView\u003cNodeAttribute, RMNodeAttribute\u003e allAttributes \u003d\n        clusterAttributes.keySet();\n    // Return all if prefix is not given.\n    if (prefix \u003d\u003d null || prefix.isEmpty()) {\n      attributes.addAll(allAttributes);\n      return attributes;\n    }\n    // Try search attributes by prefix and return valid ones.\n    Iterator\u003cNodeAttribute\u003e iterator \u003d allAttributes.iterator();\n    while (iterator.hasNext()) {\n      NodeAttribute current \u003d iterator.next();\n      if (prefix.contains(current.getAttributePrefix())) {\n        attributes.add(current);\n      }\n    }\n    return attributes;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
      "extendedDetails": {}
    },
    "2f7712be09d5b68978547f95b1be2352cdd46266": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6858. Attribute Manager to store and provide node attributes in RM. Contributed by Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "2f7712be09d5b68978547f95b1be2352cdd46266",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,19 @@\n+  public Set\u003cNodeAttribute\u003e getClusterNodeAttributes(Set\u003cString\u003e prefix) {\n+    Set\u003cNodeAttribute\u003e attributes \u003d new HashSet\u003c\u003e();\n+    try {\n+      readLock.lock();\n+      attributes.addAll(clusterAttributes.keySet());\n+    } finally {\n+      readLock.unlock();\n+    }\n+    if (prefix !\u003d null \u0026\u0026 prefix.isEmpty()) {\n+      Iterator\u003cNodeAttribute\u003e iterator \u003d attributes.iterator();\n+      while (iterator.hasNext()) {\n+        NodeAttribute attribute \u003d iterator.next();\n+        if (!prefix.contains(attribute.getAttributePrefix())) {\n+          iterator.remove();\n+        }\n+      }\n+    }\n+    return attributes;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cNodeAttribute\u003e getClusterNodeAttributes(Set\u003cString\u003e prefix) {\n    Set\u003cNodeAttribute\u003e attributes \u003d new HashSet\u003c\u003e();\n    try {\n      readLock.lock();\n      attributes.addAll(clusterAttributes.keySet());\n    } finally {\n      readLock.unlock();\n    }\n    if (prefix !\u003d null \u0026\u0026 prefix.isEmpty()) {\n      Iterator\u003cNodeAttribute\u003e iterator \u003d attributes.iterator();\n      while (iterator.hasNext()) {\n        NodeAttribute attribute \u003d iterator.next();\n        if (!prefix.contains(attribute.getAttributePrefix())) {\n          iterator.remove();\n        }\n      }\n    }\n    return attributes;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java"
    }
  }
}