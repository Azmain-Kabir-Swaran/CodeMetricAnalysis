{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ECAdmin.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/ECAdmin.java",
  "functionStartLine": 67,
  "functionEndLine": 92,
  "numCommitsSeen": 25,
  "timeTaken": 1047,
  "changeHistory": [
    "132f758e3dbe3a3f11c0d9b2de8edbee594fb475"
  ],
  "changeHistoryShort": {
    "132f758e3dbe3a3f11c0d9b2de8edbee594fb475": "Yintroduced"
  },
  "changeHistoryDetails": {
    "132f758e3dbe3a3f11c0d9b2de8edbee594fb475": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11426. Refactor EC CLI to be similar to storage policies CLI.\n",
      "commitDate": "23/02/17 4:00 PM",
      "commitName": "132f758e3dbe3a3f11c0d9b2de8edbee594fb475",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,26 @@\n+  public int run(String[] args) throws Exception {\n+    if (args.length \u003d\u003d 0) {\n+      AdminHelper.printUsage(false, NAME, COMMANDS);\n+      ToolRunner.printGenericCommandUsage(System.err);\n+      return 1;\n+    }\n+    final AdminHelper.Command command \u003d AdminHelper.determineCommand(args[0],\n+        COMMANDS);\n+    if (command \u003d\u003d null) {\n+      System.err.println(\"Can\u0027t understand command \u0027\" + args[0] + \"\u0027\");\n+      if (!args[0].startsWith(\"-\")) {\n+        System.err.println(\"Command names must start with dashes.\");\n+      }\n+      AdminHelper.printUsage(false, NAME, COMMANDS);\n+      ToolRunner.printGenericCommandUsage(System.err);\n+      return 1;\n+    }\n+    final List\u003cString\u003e argsList \u003d new LinkedList\u003c\u003e();\n+    argsList.addAll(Arrays.asList(args).subList(1, args.length));\n+    try {\n+      return command.run(getConf(), argsList);\n+    } catch (IllegalArgumentException e) {\n+      System.err.println(AdminHelper.prettifyException(e));\n+      return -1;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length \u003d\u003d 0) {\n      AdminHelper.printUsage(false, NAME, COMMANDS);\n      ToolRunner.printGenericCommandUsage(System.err);\n      return 1;\n    }\n    final AdminHelper.Command command \u003d AdminHelper.determineCommand(args[0],\n        COMMANDS);\n    if (command \u003d\u003d null) {\n      System.err.println(\"Can\u0027t understand command \u0027\" + args[0] + \"\u0027\");\n      if (!args[0].startsWith(\"-\")) {\n        System.err.println(\"Command names must start with dashes.\");\n      }\n      AdminHelper.printUsage(false, NAME, COMMANDS);\n      ToolRunner.printGenericCommandUsage(System.err);\n      return 1;\n    }\n    final List\u003cString\u003e argsList \u003d new LinkedList\u003c\u003e();\n    argsList.addAll(Arrays.asList(args).subList(1, args.length));\n    try {\n      return command.run(getConf(), argsList);\n    } catch (IllegalArgumentException e) {\n      System.err.println(AdminHelper.prettifyException(e));\n      return -1;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/ECAdmin.java"
    }
  }
}