{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RestCsrfPreventionFilterHandler.java",
  "functionName": "initializeState",
  "functionId": "initializeState___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/RestCsrfPreventionFilterHandler.java",
  "functionStartLine": 164,
  "functionEndLine": 182,
  "numCommitsSeen": 6,
  "timeTaken": 1581,
  "changeHistory": [
    "101d5b5f865f94e4772051ea8ce4ee0f92ddedca"
  ],
  "changeHistoryShort": {
    "101d5b5f865f94e4772051ea8ce4ee0f92ddedca": "Yintroduced"
  },
  "changeHistoryDetails": {
    "101d5b5f865f94e4772051ea8ce4ee0f92ddedca": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14234. Limit WebHDFS to specifc user, host, directory triples.\nContributed by Clay B.\n",
      "commitDate": "10/06/19 5:55 PM",
      "commitName": "101d5b5f865f94e4772051ea8ce4ee0f92ddedca",
      "commitAuthor": "Anu Engineer",
      "diff": "@@ -0,0 +1,19 @@\n+  public static RestCsrfPreventionFilter initializeState(\n+      Configuration conf) {\n+    if (!conf.getBoolean(DFS_WEBHDFS_REST_CSRF_ENABLED_KEY,\n+        DFS_WEBHDFS_REST_CSRF_ENABLED_DEFAULT)) {\n+      return null;\n+    }\n+    String restCsrfClassName \u003d RestCsrfPreventionFilter.class.getName();\n+    Map\u003cString, String\u003e restCsrfParams \u003d RestCsrfPreventionFilter\n+        .getFilterParams(conf, \"dfs.webhdfs.rest-csrf.\");\n+    RestCsrfPreventionFilter filter \u003d new RestCsrfPreventionFilter();\n+    try {\n+      filter.init(new DatanodeHttpServer\n+          .MapBasedFilterConfig(restCsrfClassName, restCsrfParams));\n+    } catch (ServletException e) {\n+      throw new IllegalStateException(\n+          \"Failed to initialize RestCsrfPreventionFilter.\", e);\n+    }\n+    return(filter);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static RestCsrfPreventionFilter initializeState(\n      Configuration conf) {\n    if (!conf.getBoolean(DFS_WEBHDFS_REST_CSRF_ENABLED_KEY,\n        DFS_WEBHDFS_REST_CSRF_ENABLED_DEFAULT)) {\n      return null;\n    }\n    String restCsrfClassName \u003d RestCsrfPreventionFilter.class.getName();\n    Map\u003cString, String\u003e restCsrfParams \u003d RestCsrfPreventionFilter\n        .getFilterParams(conf, \"dfs.webhdfs.rest-csrf.\");\n    RestCsrfPreventionFilter filter \u003d new RestCsrfPreventionFilter();\n    try {\n      filter.init(new DatanodeHttpServer\n          .MapBasedFilterConfig(restCsrfClassName, restCsrfParams));\n    } catch (ServletException e) {\n      throw new IllegalStateException(\n          \"Failed to initialize RestCsrfPreventionFilter.\", e);\n    }\n    return(filter);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/RestCsrfPreventionFilterHandler.java"
    }
  }
}