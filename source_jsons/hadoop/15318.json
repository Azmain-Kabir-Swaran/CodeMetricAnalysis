{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSZKFailoverController.java",
  "functionName": "dataToTarget",
  "functionId": "dataToTarget___data-byte[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSZKFailoverController.java",
  "functionStartLine": 74,
  "functionEndLine": 95,
  "numCommitsSeen": 24,
  "timeTaken": 870,
  "changeHistory": [
    "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5",
    "9d5799553fea81920edfab611e5d485a97841848",
    "789ed57e7171b6813a212af977bfc2134dc90f65"
  ],
  "changeHistoryShort": {
    "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5": "Ybodychange",
    "9d5799553fea81920edfab611e5d485a97841848": "Ybodychange",
    "789ed57e7171b6813a212af977bfc2134dc90f65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3412. Fix findbugs warnings in auto-HA branch. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1338817 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/05/12 11:16 AM",
      "commitName": "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "02/05/12 6:56 PM",
      "commitNameOld": "9d5799553fea81920edfab611e5d485a97841848",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 12.68,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   protected HAServiceTarget dataToTarget(byte[] data) {\n     ActiveNodeInfo proto;\n     try {\n       proto \u003d ActiveNodeInfo.parseFrom(data);\n     } catch (InvalidProtocolBufferException e) {\n       throw new RuntimeException(\"Invalid data in ZK: \" +\n           StringUtils.byteToHexString(data));\n     }\n     NNHAServiceTarget ret \u003d new NNHAServiceTarget(\n-        getConf(), proto.getNameserviceId(), proto.getNamenodeId());\n+        conf, proto.getNameserviceId(), proto.getNamenodeId());\n     InetSocketAddress addressFromProtobuf \u003d new InetSocketAddress(\n         proto.getHostname(), proto.getPort());\n     \n     if (!addressFromProtobuf.equals(ret.getAddress())) {\n       throw new RuntimeException(\"Mismatched address stored in ZK for \" +\n           ret + \": Stored protobuf was \" + proto + \", address from our own \" +\n           \"configuration for this NameNode was \" + ret.getAddress());\n     }\n     \n     ret.setZkfcPort(proto.getZkfcPort());\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected HAServiceTarget dataToTarget(byte[] data) {\n    ActiveNodeInfo proto;\n    try {\n      proto \u003d ActiveNodeInfo.parseFrom(data);\n    } catch (InvalidProtocolBufferException e) {\n      throw new RuntimeException(\"Invalid data in ZK: \" +\n          StringUtils.byteToHexString(data));\n    }\n    NNHAServiceTarget ret \u003d new NNHAServiceTarget(\n        conf, proto.getNameserviceId(), proto.getNamenodeId());\n    InetSocketAddress addressFromProtobuf \u003d new InetSocketAddress(\n        proto.getHostname(), proto.getPort());\n    \n    if (!addressFromProtobuf.equals(ret.getAddress())) {\n      throw new RuntimeException(\"Mismatched address stored in ZK for \" +\n          ret + \": Stored protobuf was \" + proto + \", address from our own \" +\n          \"configuration for this NameNode was \" + ret.getAddress());\n    }\n    \n    ret.setZkfcPort(proto.getZkfcPort());\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSZKFailoverController.java",
      "extendedDetails": {}
    },
    "9d5799553fea81920edfab611e5d485a97841848": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8279. Allow manual failover to be invoked when auto-failover is enabled. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1333288 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/12 6:56 PM",
      "commitName": "9d5799553fea81920edfab611e5d485a97841848",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "07/04/12 4:24 PM",
      "commitNameOld": "693ec453d2b8a07dede2b931d698c702e12fc935",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 25.11,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   protected HAServiceTarget dataToTarget(byte[] data) {\n     ActiveNodeInfo proto;\n     try {\n       proto \u003d ActiveNodeInfo.parseFrom(data);\n     } catch (InvalidProtocolBufferException e) {\n       throw new RuntimeException(\"Invalid data in ZK: \" +\n           StringUtils.byteToHexString(data));\n     }\n     NNHAServiceTarget ret \u003d new NNHAServiceTarget(\n         getConf(), proto.getNameserviceId(), proto.getNamenodeId());\n     InetSocketAddress addressFromProtobuf \u003d new InetSocketAddress(\n         proto.getHostname(), proto.getPort());\n     \n     if (!addressFromProtobuf.equals(ret.getAddress())) {\n       throw new RuntimeException(\"Mismatched address stored in ZK for \" +\n           ret + \": Stored protobuf was \" + proto + \", address from our own \" +\n           \"configuration for this NameNode was \" + ret.getAddress());\n     }\n+    \n+    ret.setZkfcPort(proto.getZkfcPort());\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected HAServiceTarget dataToTarget(byte[] data) {\n    ActiveNodeInfo proto;\n    try {\n      proto \u003d ActiveNodeInfo.parseFrom(data);\n    } catch (InvalidProtocolBufferException e) {\n      throw new RuntimeException(\"Invalid data in ZK: \" +\n          StringUtils.byteToHexString(data));\n    }\n    NNHAServiceTarget ret \u003d new NNHAServiceTarget(\n        getConf(), proto.getNameserviceId(), proto.getNamenodeId());\n    InetSocketAddress addressFromProtobuf \u003d new InetSocketAddress(\n        proto.getHostname(), proto.getPort());\n    \n    if (!addressFromProtobuf.equals(ret.getAddress())) {\n      throw new RuntimeException(\"Mismatched address stored in ZK for \" +\n          ret + \": Stored protobuf was \" + proto + \", address from our own \" +\n          \"configuration for this NameNode was \" + ret.getAddress());\n    }\n    \n    ret.setZkfcPort(proto.getZkfcPort());\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSZKFailoverController.java",
      "extendedDetails": {}
    },
    "789ed57e7171b6813a212af977bfc2134dc90f65": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2185. HDFS portion of ZK-based FailoverController. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1308637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 5:59 PM",
      "commitName": "789ed57e7171b6813a212af977bfc2134dc90f65",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  protected HAServiceTarget dataToTarget(byte[] data) {\n+    ActiveNodeInfo proto;\n+    try {\n+      proto \u003d ActiveNodeInfo.parseFrom(data);\n+    } catch (InvalidProtocolBufferException e) {\n+      throw new RuntimeException(\"Invalid data in ZK: \" +\n+          StringUtils.byteToHexString(data));\n+    }\n+    NNHAServiceTarget ret \u003d new NNHAServiceTarget(\n+        getConf(), proto.getNameserviceId(), proto.getNamenodeId());\n+    InetSocketAddress addressFromProtobuf \u003d new InetSocketAddress(\n+        proto.getHostname(), proto.getPort());\n+    \n+    if (!addressFromProtobuf.equals(ret.getAddress())) {\n+      throw new RuntimeException(\"Mismatched address stored in ZK for \" +\n+          ret + \": Stored protobuf was \" + proto + \", address from our own \" +\n+          \"configuration for this NameNode was \" + ret.getAddress());\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected HAServiceTarget dataToTarget(byte[] data) {\n    ActiveNodeInfo proto;\n    try {\n      proto \u003d ActiveNodeInfo.parseFrom(data);\n    } catch (InvalidProtocolBufferException e) {\n      throw new RuntimeException(\"Invalid data in ZK: \" +\n          StringUtils.byteToHexString(data));\n    }\n    NNHAServiceTarget ret \u003d new NNHAServiceTarget(\n        getConf(), proto.getNameserviceId(), proto.getNamenodeId());\n    InetSocketAddress addressFromProtobuf \u003d new InetSocketAddress(\n        proto.getHostname(), proto.getPort());\n    \n    if (!addressFromProtobuf.equals(ret.getAddress())) {\n      throw new RuntimeException(\"Mismatched address stored in ZK for \" +\n          ret + \": Stored protobuf was \" + proto + \", address from our own \" +\n          \"configuration for this NameNode was \" + ret.getAddress());\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSZKFailoverController.java"
    }
  }
}