{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LdapGroupsMapping.java",
  "functionName": "lookupPosixGroup",
  "functionId": "lookupPosixGroup___result-SearchResult__c-DirContext",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
  "functionStartLine": 421,
  "functionEndLine": 448,
  "numCommitsSeen": 29,
  "timeTaken": 1203,
  "changeHistory": [
    "a2121cb0d907be439d19cd1165a0371b37a5fe68",
    "182fc1986a984ed0be6bed297390a830c2305af1"
  ],
  "changeHistoryShort": {
    "a2121cb0d907be439d19cd1165a0371b37a5fe68": "Ybodychange",
    "182fc1986a984ed0be6bed297390a830c2305af1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a2121cb0d907be439d19cd1165a0371b37a5fe68": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14465. LdapGroupsMapping - support user and group search base. Contributed by Shwetha G S and Mingliang Liu\n",
      "commitDate": "09/06/17 2:55 PM",
      "commitName": "a2121cb0d907be439d19cd1165a0371b37a5fe68",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "05/08/16 4:32 PM",
      "commitNameOld": "49ba09a9221ad1e25e89800f6c455bbaad41483b",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 307.93,
      "commitsBetweenForRepo": 1866,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private NamingEnumeration\u003cSearchResult\u003e lookupPosixGroup(SearchResult result,\n       DirContext c) throws NamingException {\n     String gidNumber \u003d null;\n     String uidNumber \u003d null;\n     Attribute gidAttribute \u003d result.getAttributes().get(posixGidAttr);\n     Attribute uidAttribute \u003d result.getAttributes().get(posixUidAttr);\n     String reason \u003d \"\";\n     if (gidAttribute \u003d\u003d null) {\n       reason \u003d \"Can\u0027t find attribute \u0027\" + posixGidAttr + \"\u0027.\";\n     } else {\n       gidNumber \u003d gidAttribute.get().toString();\n     }\n     if (uidAttribute \u003d\u003d null) {\n       reason \u003d \"Can\u0027t find attribute \u0027\" + posixUidAttr + \"\u0027.\";\n     } else {\n       uidNumber \u003d uidAttribute.get().toString();\n     }\n     if (uidNumber !\u003d null \u0026\u0026 gidNumber !\u003d null) {\n-      return c.search(baseDN,\n+      return c.search(groupbaseDN,\n               \"(\u0026\"+ groupSearchFilter + \"(|(\" + posixGidAttr + \"\u003d{0})\" +\n                   \"(\" + groupMemberAttr + \"\u003d{1})))\",\n               new Object[] {gidNumber, uidNumber},\n               SEARCH_CONTROLS);\n     }\n     throw new NamingException(\"The server does not support posixGroups \" +\n         \"semantics. Reason: \" + reason +\n         \" Returned user object: \" + result.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NamingEnumeration\u003cSearchResult\u003e lookupPosixGroup(SearchResult result,\n      DirContext c) throws NamingException {\n    String gidNumber \u003d null;\n    String uidNumber \u003d null;\n    Attribute gidAttribute \u003d result.getAttributes().get(posixGidAttr);\n    Attribute uidAttribute \u003d result.getAttributes().get(posixUidAttr);\n    String reason \u003d \"\";\n    if (gidAttribute \u003d\u003d null) {\n      reason \u003d \"Can\u0027t find attribute \u0027\" + posixGidAttr + \"\u0027.\";\n    } else {\n      gidNumber \u003d gidAttribute.get().toString();\n    }\n    if (uidAttribute \u003d\u003d null) {\n      reason \u003d \"Can\u0027t find attribute \u0027\" + posixUidAttr + \"\u0027.\";\n    } else {\n      uidNumber \u003d uidAttribute.get().toString();\n    }\n    if (uidNumber !\u003d null \u0026\u0026 gidNumber !\u003d null) {\n      return c.search(groupbaseDN,\n              \"(\u0026\"+ groupSearchFilter + \"(|(\" + posixGidAttr + \"\u003d{0})\" +\n                  \"(\" + groupMemberAttr + \"\u003d{1})))\",\n              new Object[] {gidNumber, uidNumber},\n              SEARCH_CONTROLS);\n    }\n    throw new NamingException(\"The server does not support posixGroups \" +\n        \"semantics. Reason: \" + reason +\n        \" Returned user object: \" + result.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
      "extendedDetails": {}
    },
    "182fc1986a984ed0be6bed297390a830c2305af1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12782. Faster LDAP group name resolution with ActiveDirectory. Contributed by Wei-Chiu Chuang\n",
      "commitDate": "19/05/16 7:15 AM",
      "commitName": "182fc1986a984ed0be6bed297390a830c2305af1",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,28 @@\n+  private NamingEnumeration\u003cSearchResult\u003e lookupPosixGroup(SearchResult result,\n+      DirContext c) throws NamingException {\n+    String gidNumber \u003d null;\n+    String uidNumber \u003d null;\n+    Attribute gidAttribute \u003d result.getAttributes().get(posixGidAttr);\n+    Attribute uidAttribute \u003d result.getAttributes().get(posixUidAttr);\n+    String reason \u003d \"\";\n+    if (gidAttribute \u003d\u003d null) {\n+      reason \u003d \"Can\u0027t find attribute \u0027\" + posixGidAttr + \"\u0027.\";\n+    } else {\n+      gidNumber \u003d gidAttribute.get().toString();\n+    }\n+    if (uidAttribute \u003d\u003d null) {\n+      reason \u003d \"Can\u0027t find attribute \u0027\" + posixUidAttr + \"\u0027.\";\n+    } else {\n+      uidNumber \u003d uidAttribute.get().toString();\n+    }\n+    if (uidNumber !\u003d null \u0026\u0026 gidNumber !\u003d null) {\n+      return c.search(baseDN,\n+              \"(\u0026\"+ groupSearchFilter + \"(|(\" + posixGidAttr + \"\u003d{0})\" +\n+                  \"(\" + groupMemberAttr + \"\u003d{1})))\",\n+              new Object[] {gidNumber, uidNumber},\n+              SEARCH_CONTROLS);\n+    }\n+    throw new NamingException(\"The server does not support posixGroups \" +\n+        \"semantics. Reason: \" + reason +\n+        \" Returned user object: \" + result.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private NamingEnumeration\u003cSearchResult\u003e lookupPosixGroup(SearchResult result,\n      DirContext c) throws NamingException {\n    String gidNumber \u003d null;\n    String uidNumber \u003d null;\n    Attribute gidAttribute \u003d result.getAttributes().get(posixGidAttr);\n    Attribute uidAttribute \u003d result.getAttributes().get(posixUidAttr);\n    String reason \u003d \"\";\n    if (gidAttribute \u003d\u003d null) {\n      reason \u003d \"Can\u0027t find attribute \u0027\" + posixGidAttr + \"\u0027.\";\n    } else {\n      gidNumber \u003d gidAttribute.get().toString();\n    }\n    if (uidAttribute \u003d\u003d null) {\n      reason \u003d \"Can\u0027t find attribute \u0027\" + posixUidAttr + \"\u0027.\";\n    } else {\n      uidNumber \u003d uidAttribute.get().toString();\n    }\n    if (uidNumber !\u003d null \u0026\u0026 gidNumber !\u003d null) {\n      return c.search(baseDN,\n              \"(\u0026\"+ groupSearchFilter + \"(|(\" + posixGidAttr + \"\u003d{0})\" +\n                  \"(\" + groupMemberAttr + \"\u003d{1})))\",\n              new Object[] {gidNumber, uidNumber},\n              SEARCH_CONTROLS);\n    }\n    throw new NamingException(\"The server does not support posixGroups \" +\n        \"semantics. Reason: \" + reason +\n        \" Returned user object: \" + result.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java"
    }
  }
}