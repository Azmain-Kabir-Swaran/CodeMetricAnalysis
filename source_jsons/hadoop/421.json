{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockReaderRemote.java",
  "functionName": "checkSuccess",
  "functionId": "checkSuccess___status-BlockOpResponseProto__peer-Peer__block-ExtendedBlock__file-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote.java",
  "functionStartLine": 437,
  "functionEndLine": 448,
  "numCommitsSeen": 45,
  "timeTaken": 2514,
  "changeHistory": [
    "8b281bce85474501868d68f8d5590a6086abb7b7",
    "f308561f1d885491b88db73ac63003202056d661",
    "826ae1c26d31f87d88efc920b271bec7eec2e17a",
    "67ed59348d638d56e6752ba2c71fdcd69567546d"
  ],
  "changeHistoryShort": {
    "8b281bce85474501868d68f8d5590a6086abb7b7": "Ymovefromfile",
    "f308561f1d885491b88db73ac63003202056d661": "Yfilerename",
    "826ae1c26d31f87d88efc920b271bec7eec2e17a": "Yfilerename",
    "67ed59348d638d56e6752ba2c71fdcd69567546d": "Ybodychange"
  },
  "changeHistoryDetails": {
    "8b281bce85474501868d68f8d5590a6086abb7b7": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-10548. Remove the long deprecated BlockReaderRemote. Contributed by Kai Zheng\n",
      "commitDate": "02/07/16 8:56 PM",
      "commitName": "8b281bce85474501868d68f8d5590a6086abb7b7",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "01/07/16 3:53 PM",
      "commitNameOld": "0a5def155eff4564b5dc7685e7460952f51bbd24",
      "commitAuthorOld": "Ray Chiang",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void checkSuccess(\n      BlockOpResponseProto status, Peer peer,\n      ExtendedBlock block, String file)\n      throws IOException {\n    String logInfo \u003d \"for OP_READ_BLOCK\"\n        + \", self\u003d\" + peer.getLocalAddressString()\n        + \", remote\u003d\" + peer.getRemoteAddressString()\n        + \", for file \" + file\n        + \", for pool \" + block.getBlockPoolId()\n        + \" block \" + block.getBlockId() + \"_\" + block.getGenerationStamp();\n    DataTransferProtoUtil.checkBlockOpStatus(status, logInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote2.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote.java",
        "oldMethodName": "checkSuccess",
        "newMethodName": "checkSuccess"
      }
    },
    "f308561f1d885491b88db73ac63003202056d661": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8057 Move BlockReader implementation to the client implementation package.  Contributed by Takanobu Asanuma\n",
      "commitDate": "25/04/16 12:01 PM",
      "commitName": "f308561f1d885491b88db73ac63003202056d661",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "25/04/16 9:38 AM",
      "commitNameOld": "10f0f7851a3255caab775777e8fb6c2781d97062",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void checkSuccess(\n      BlockOpResponseProto status, Peer peer,\n      ExtendedBlock block, String file)\n      throws IOException {\n    String logInfo \u003d \"for OP_READ_BLOCK\"\n        + \", self\u003d\" + peer.getLocalAddressString()\n        + \", remote\u003d\" + peer.getRemoteAddressString()\n        + \", for file \" + file\n        + \", for pool \" + block.getBlockPoolId()\n        + \" block \" + block.getBlockId() + \"_\" + block.getGenerationStamp();\n    DataTransferProtoUtil.checkBlockOpStatus(status, logInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote2.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader2.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote2.java"
      }
    },
    "826ae1c26d31f87d88efc920b271bec7eec2e17a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8990. Move RemoteBlockReader to hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "31/08/15 1:54 PM",
      "commitName": "826ae1c26d31f87d88efc920b271bec7eec2e17a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "31/08/15 11:48 AM",
      "commitNameOld": "caa04de149030691b7bc952b534c6128db217ed2",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void checkSuccess(\n      BlockOpResponseProto status, Peer peer,\n      ExtendedBlock block, String file)\n      throws IOException {\n    String logInfo \u003d \"for OP_READ_BLOCK\"\n      + \", self\u003d\" + peer.getLocalAddressString()\n      + \", remote\u003d\" + peer.getRemoteAddressString()\n      + \", for file \" + file\n      + \", for pool \" + block.getBlockPoolId()\n      + \" block \" + block.getBlockId() + \"_\" + block.getGenerationStamp();\n    DataTransferProtoUtil.checkBlockOpStatus(status, logInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader2.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader2.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader2.java"
      }
    },
    "67ed59348d638d56e6752ba2c71fdcd69567546d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7439. Add BlockOpResponseProto\u0027s message to the exception messages.  Contributed by Takanobu Asanuma\n",
      "commitDate": "01/03/15 11:03 PM",
      "commitName": "67ed59348d638d56e6752ba2c71fdcd69567546d",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "30/01/15 4:01 PM",
      "commitNameOld": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 30.29,
      "commitsBetweenForRepo": 305,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,12 @@\n   static void checkSuccess(\n       BlockOpResponseProto status, Peer peer,\n       ExtendedBlock block, String file)\n       throws IOException {\n-    if (status.getStatus() !\u003d Status.SUCCESS) {\n-      if (status.getStatus() \u003d\u003d Status.ERROR_ACCESS_TOKEN) {\n-        throw new InvalidBlockTokenException(\n-            \"Got access token error for OP_READ_BLOCK, self\u003d\"\n-                + peer.getLocalAddressString() + \", remote\u003d\"\n-                + peer.getRemoteAddressString() + \", for file \" + file\n-                + \", for pool \" + block.getBlockPoolId() + \" block \" \n-                + block.getBlockId() + \"_\" + block.getGenerationStamp());\n-      } else {\n-        throw new IOException(\"Got error for OP_READ_BLOCK, self\u003d\"\n-            + peer.getLocalAddressString() + \", remote\u003d\"\n-            + peer.getRemoteAddressString() + \", for file \" + file\n-            + \", for pool \" + block.getBlockPoolId() + \" block \" \n-            + block.getBlockId() + \"_\" + block.getGenerationStamp());\n-      }\n-    }\n+    String logInfo \u003d \"for OP_READ_BLOCK\"\n+      + \", self\u003d\" + peer.getLocalAddressString()\n+      + \", remote\u003d\" + peer.getRemoteAddressString()\n+      + \", for file \" + file\n+      + \", for pool \" + block.getBlockPoolId()\n+      + \" block \" + block.getBlockId() + \"_\" + block.getGenerationStamp();\n+    DataTransferProtoUtil.checkBlockOpStatus(status, logInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkSuccess(\n      BlockOpResponseProto status, Peer peer,\n      ExtendedBlock block, String file)\n      throws IOException {\n    String logInfo \u003d \"for OP_READ_BLOCK\"\n      + \", self\u003d\" + peer.getLocalAddressString()\n      + \", remote\u003d\" + peer.getRemoteAddressString()\n      + \", for file \" + file\n      + \", for pool \" + block.getBlockPoolId()\n      + \" block \" + block.getBlockId() + \"_\" + block.getGenerationStamp();\n    DataTransferProtoUtil.checkBlockOpStatus(status, logInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader2.java",
      "extendedDetails": {}
    }
  }
}