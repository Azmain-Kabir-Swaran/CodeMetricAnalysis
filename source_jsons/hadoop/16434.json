{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterHttpServer.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java",
  "functionStartLine": 81,
  "functionEndLine": 109,
  "numCommitsSeen": 8,
  "timeTaken": 3120,
  "changeHistory": [
    "c4b1fa91faf5ada6eea6b39d52e92c06816bd2c8",
    "6f2c871b05b97ea0e18f3c431af8b0d606f88561",
    "f0ce072934515d39e9bf61744058ecad3393291e",
    "6e31a090842f8aeedb331b653b075499f8df6c60",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "81601dac8ec7650bec14700b174910390a92fe1f"
  ],
  "changeHistoryShort": {
    "c4b1fa91faf5ada6eea6b39d52e92c06816bd2c8": "Ybodychange",
    "6f2c871b05b97ea0e18f3c431af8b0d606f88561": "Ybodychange",
    "f0ce072934515d39e9bf61744058ecad3393291e": "Ybodychange",
    "6e31a090842f8aeedb331b653b075499f8df6c60": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "81601dac8ec7650bec14700b174910390a92fe1f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c4b1fa91faf5ada6eea6b39d52e92c06816bd2c8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14052. RBF: Use Router keytab for WebHDFS. Contributed by CR Hota.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "c4b1fa91faf5ada6eea6b39d52e92c06816bd2c8",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "6f2c871b05b97ea0e18f3c431af8b0d606f88561",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n   protected void serviceStart() throws Exception {\n     // Build and start server\n     String webApp \u003d \"router\";\n     HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n         this.conf, this.httpAddress, this.httpsAddress, webApp,\n         RBFConfigKeys.DFS_ROUTER_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n         RBFConfigKeys.DFS_ROUTER_KEYTAB_FILE_KEY);\n \n     this.httpServer \u003d builder.build();\n \n-    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), null,\n+    String httpKeytab \u003d conf.get(DFSUtil.getSpnegoKeytabKey(conf,\n+        RBFConfigKeys.DFS_ROUTER_KEYTAB_FILE_KEY));\n+    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), httpKeytab,\n         httpServer, RouterWebHdfsMethods.class.getPackage().getName());\n \n     this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n     this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n     setupServlets(this.httpServer, this.conf);\n \n     this.httpServer.start();\n \n     // The server port can be ephemeral... ensure we have the correct info\n     InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n     if (listenAddress !\u003d null) {\n       this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n           listenAddress.getPort());\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Build and start server\n    String webApp \u003d \"router\";\n    HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n        this.conf, this.httpAddress, this.httpsAddress, webApp,\n        RBFConfigKeys.DFS_ROUTER_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n        RBFConfigKeys.DFS_ROUTER_KEYTAB_FILE_KEY);\n\n    this.httpServer \u003d builder.build();\n\n    String httpKeytab \u003d conf.get(DFSUtil.getSpnegoKeytabKey(conf,\n        RBFConfigKeys.DFS_ROUTER_KEYTAB_FILE_KEY));\n    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), httpKeytab,\n        httpServer, RouterWebHdfsMethods.class.getPackage().getName());\n\n    this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n    this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n    setupServlets(this.httpServer, this.conf);\n\n    this.httpServer.start();\n\n    // The server port can be ephemeral... ensure we have the correct info\n    InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n    if (listenAddress !\u003d null) {\n      this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n          listenAddress.getPort());\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java",
      "extendedDetails": {}
    },
    "6f2c871b05b97ea0e18f3c431af8b0d606f88561": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12284. RBF: Support for Kerberos authentication. Contributed by Sherwood Zheng and Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "6f2c871b05b97ea0e18f3c431af8b0d606f88561",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "06/11/18 10:05 AM",
      "commitNameOld": "f0ce072934515d39e9bf61744058ecad3393291e",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 229.94,
      "commitsBetweenForRepo": 1588,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   protected void serviceStart() throws Exception {\n     // Build and start server\n     String webApp \u003d \"router\";\n     HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n         this.conf, this.httpAddress, this.httpsAddress, webApp,\n-        DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n-        DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n+        RBFConfigKeys.DFS_ROUTER_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n+        RBFConfigKeys.DFS_ROUTER_KEYTAB_FILE_KEY);\n \n     this.httpServer \u003d builder.build();\n \n     NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), null,\n         httpServer, RouterWebHdfsMethods.class.getPackage().getName());\n \n     this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n     this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n     setupServlets(this.httpServer, this.conf);\n \n     this.httpServer.start();\n \n     // The server port can be ephemeral... ensure we have the correct info\n     InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n     if (listenAddress !\u003d null) {\n       this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n           listenAddress.getPort());\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Build and start server\n    String webApp \u003d \"router\";\n    HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n        this.conf, this.httpAddress, this.httpsAddress, webApp,\n        RBFConfigKeys.DFS_ROUTER_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n        RBFConfigKeys.DFS_ROUTER_KEYTAB_FILE_KEY);\n\n    this.httpServer \u003d builder.build();\n\n    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), null,\n        httpServer, RouterWebHdfsMethods.class.getPackage().getName());\n\n    this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n    this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n    setupServlets(this.httpServer, this.conf);\n\n    this.httpServer.start();\n\n    // The server port can be ephemeral... ensure we have the correct info\n    InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n    if (listenAddress !\u003d null) {\n      this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n          listenAddress.getPort());\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java",
      "extendedDetails": {}
    },
    "f0ce072934515d39e9bf61744058ecad3393291e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14051. Refactor NameNodeHttpServer#initWebHdfs to specify local keytab. Contributed by CR Hota.\n",
      "commitDate": "06/11/18 10:05 AM",
      "commitName": "f0ce072934515d39e9bf61744058ecad3393291e",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "05/09/18 10:50 AM",
      "commitNameOld": "9af96d4ed4b6f80d3ca53a2b003d2ef768650dd4",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 62.01,
      "commitsBetweenForRepo": 624,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   protected void serviceStart() throws Exception {\n     // Build and start server\n     String webApp \u003d \"router\";\n     HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n         this.conf, this.httpAddress, this.httpsAddress, webApp,\n         DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n         DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n \n     this.httpServer \u003d builder.build();\n \n-    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), httpServer,\n-        RouterWebHdfsMethods.class.getPackage().getName());\n+    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), null,\n+        httpServer, RouterWebHdfsMethods.class.getPackage().getName());\n \n     this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n     this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n     setupServlets(this.httpServer, this.conf);\n \n     this.httpServer.start();\n \n     // The server port can be ephemeral... ensure we have the correct info\n     InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n     if (listenAddress !\u003d null) {\n       this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n           listenAddress.getPort());\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Build and start server\n    String webApp \u003d \"router\";\n    HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n        this.conf, this.httpAddress, this.httpsAddress, webApp,\n        DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n        DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n\n    this.httpServer \u003d builder.build();\n\n    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), null,\n        httpServer, RouterWebHdfsMethods.class.getPackage().getName());\n\n    this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n    this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n    setupServlets(this.httpServer, this.conf);\n\n    this.httpServer.start();\n\n    // The server port can be ephemeral... ensure we have the correct info\n    InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n    if (listenAddress !\u003d null) {\n      this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n          listenAddress.getPort());\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java",
      "extendedDetails": {}
    },
    "6e31a090842f8aeedb331b653b075499f8df6c60": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12512. RBF: Add WebHDFS.\n",
      "commitDate": "23/03/18 8:32 AM",
      "commitName": "6e31a090842f8aeedb331b653b075499f8df6c60",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 10:13 PM",
      "commitNameOld": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthorOld": "weiy",
      "daysBetweenCommits": 3.43,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n   protected void serviceStart() throws Exception {\n     // Build and start server\n     String webApp \u003d \"router\";\n     HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n         this.conf, this.httpAddress, this.httpsAddress, webApp,\n         DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n         DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n \n     this.httpServer \u003d builder.build();\n \n+    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), httpServer,\n+        RouterWebHdfsMethods.class.getPackage().getName());\n+\n     this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n     this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n     setupServlets(this.httpServer, this.conf);\n \n     this.httpServer.start();\n \n     // The server port can be ephemeral... ensure we have the correct info\n     InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n     if (listenAddress !\u003d null) {\n       this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n           listenAddress.getPort());\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Build and start server\n    String webApp \u003d \"router\";\n    HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n        this.conf, this.httpAddress, this.httpsAddress, webApp,\n        DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n        DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n\n    this.httpServer \u003d builder.build();\n\n    NameNodeHttpServer.initWebHdfs(conf, httpAddress.getHostName(), httpServer,\n        RouterWebHdfsMethods.class.getPackage().getName());\n\n    this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n    this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n    setupServlets(this.httpServer, this.conf);\n\n    this.httpServer.start();\n\n    // The server port can be ephemeral... ensure we have the correct info\n    InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n    if (listenAddress !\u003d null) {\n      this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n          listenAddress.getPort());\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Build and start server\n    String webApp \u003d \"router\";\n    HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n        this.conf, this.httpAddress, this.httpsAddress, webApp,\n        DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n        DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n\n    this.httpServer \u003d builder.build();\n\n    this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n    this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n    setupServlets(this.httpServer, this.conf);\n\n    this.httpServer.start();\n\n    // The server port can be ephemeral... ensure we have the correct info\n    InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n    if (listenAddress !\u003d null) {\n      this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n          listenAddress.getPort());\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java"
      }
    },
    "81601dac8ec7650bec14700b174910390a92fe1f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12273. Federation UI. Contributed by Inigo Goiri.\n\n(cherry picked from commit adbb2e00c7b85524fd43bd68895d49814c16680a)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "81601dac8ec7650bec14700b174910390a92fe1f",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,24 @@\n+  protected void serviceStart() throws Exception {\n+    // Build and start server\n+    String webApp \u003d \"router\";\n+    HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n+        this.conf, this.httpAddress, this.httpsAddress, webApp,\n+        DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n+        DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n+\n+    this.httpServer \u003d builder.build();\n+\n+    this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n+    this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n+    setupServlets(this.httpServer, this.conf);\n+\n+    this.httpServer.start();\n+\n+    // The server port can be ephemeral... ensure we have the correct info\n+    InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n+    if (listenAddress !\u003d null) {\n+      this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n+          listenAddress.getPort());\n+    }\n+    super.serviceStart();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Build and start server\n    String webApp \u003d \"router\";\n    HttpServer2.Builder builder \u003d DFSUtil.httpServerTemplateForNNAndJN(\n        this.conf, this.httpAddress, this.httpsAddress, webApp,\n        DFSConfigKeys.DFS_NAMENODE_KERBEROS_INTERNAL_SPNEGO_PRINCIPAL_KEY,\n        DFSConfigKeys.DFS_NAMENODE_KEYTAB_FILE_KEY);\n\n    this.httpServer \u003d builder.build();\n\n    this.httpServer.setAttribute(NAMENODE_ATTRIBUTE_KEY, this.router);\n    this.httpServer.setAttribute(JspHelper.CURRENT_CONF, this.conf);\n    setupServlets(this.httpServer, this.conf);\n\n    this.httpServer.start();\n\n    // The server port can be ephemeral... ensure we have the correct info\n    InetSocketAddress listenAddress \u003d this.httpServer.getConnectorAddress(0);\n    if (listenAddress !\u003d null) {\n      this.httpAddress \u003d new InetSocketAddress(this.httpAddress.getHostName(),\n          listenAddress.getPort());\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterHttpServer.java"
    }
  }
}