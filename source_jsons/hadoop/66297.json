{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerMetrics.java",
  "functionName": "init",
  "functionId": "init___resourceScheduler-ResourceScheduler__config-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
  "functionStartLine": 148,
  "functionEndLine": 187,
  "numCommitsSeen": 11,
  "timeTaken": 2660,
  "changeHistory": [
    "8563fd67befeb0026a95ae268395baf04cd3c22f",
    "6a5516c2381f107d96b8326939514de3c6e53d3d",
    "cc938e99ec0904824c8072184eff75619fcaf040",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "8563fd67befeb0026a95ae268395baf04cd3c22f": "Ybodychange",
    "6a5516c2381f107d96b8326939514de3c6e53d3d": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "cc938e99ec0904824c8072184eff75619fcaf040": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8563fd67befeb0026a95ae268395baf04cd3c22f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8632. Threads in SLS quit without logging exception. Contributed by Xianghao Lu.\n",
      "commitDate": "24/08/18 11:23 AM",
      "commitName": "8563fd67befeb0026a95ae268395baf04cd3c22f",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "27/04/18 12:36 AM",
      "commitNameOld": "ba2db39c655600d00d2d3d3951e0c780f4d6f622",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 119.45,
      "commitsBetweenForRepo": 884,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   void init(ResourceScheduler resourceScheduler, Configuration config)\n       throws Exception {\n     this.scheduler \u003d resourceScheduler;\n     this.conf \u003d config;\n \n     metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n \n     // register various metrics\n     registerJvmMetrics();\n     registerClusterResourceMetrics();\n     registerContainerAppNumMetrics();\n     registerSchedulerMetrics();\n \n     // .csv output\n     initMetricsCSVOutput();\n \n     // start web app to provide real-time tracking\n     int metricsWebAddressPort \u003d conf.getInt(\n         SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n         SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n     web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n     web.start();\n \n     // a thread to update histogram timer\n-    pool \u003d new ScheduledThreadPoolExecutor(2);\n+    pool \u003d new HadoopScheduledThreadPoolExecutor(2);\n     pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n         TimeUnit.MILLISECONDS);\n \n     // a thread to output metrics for real-tiem tracking\n     pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n         TimeUnit.MILLISECONDS);\n \n     // application running information\n     jobRuntimeLogBW \u003d\n         new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n             metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n     jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n         \"simulate_start_time,simulate_end_time\" + EOL);\n     jobRuntimeLogBW.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void init(ResourceScheduler resourceScheduler, Configuration config)\n      throws Exception {\n    this.scheduler \u003d resourceScheduler;\n    this.conf \u003d config;\n\n    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n\n    // register various metrics\n    registerJvmMetrics();\n    registerClusterResourceMetrics();\n    registerContainerAppNumMetrics();\n    registerSchedulerMetrics();\n\n    // .csv output\n    initMetricsCSVOutput();\n\n    // start web app to provide real-time tracking\n    int metricsWebAddressPort \u003d conf.getInt(\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n    web.start();\n\n    // a thread to update histogram timer\n    pool \u003d new HadoopScheduledThreadPoolExecutor(2);\n    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // a thread to output metrics for real-tiem tracking\n    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // application running information\n    jobRuntimeLogBW \u003d\n        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n        \"simulate_start_time,simulate_end_time\" + EOL);\n    jobRuntimeLogBW.flush();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
      "extendedDetails": {}
    },
    "6a5516c2381f107d96b8326939514de3c6e53d3d": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
      "commitDate": "29/03/17 4:18 PM",
      "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "21/03/17 3:21 PM",
          "commitNameOld": "cc938e99ec0904824c8072184eff75619fcaf040",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,40 @@\n-  public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n-    this.scheduler \u003d scheduler;\n-    this.trackedQueues \u003d new HashSet\u003c\u003e();\n-    this.metrics \u003d metrics;\n+  void init(ResourceScheduler resourceScheduler, Configuration config)\n+      throws Exception {\n+    this.scheduler \u003d resourceScheduler;\n+    this.conf \u003d config;\n+\n+    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n+\n+    // register various metrics\n+    registerJvmMetrics();\n+    registerClusterResourceMetrics();\n+    registerContainerAppNumMetrics();\n+    registerSchedulerMetrics();\n+\n+    // .csv output\n+    initMetricsCSVOutput();\n+\n+    // start web app to provide real-time tracking\n+    int metricsWebAddressPort \u003d conf.getInt(\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n+    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n+    web.start();\n+\n+    // a thread to update histogram timer\n+    pool \u003d new ScheduledThreadPoolExecutor(2);\n+    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // a thread to output metrics for real-tiem tracking\n+    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // application running information\n+    jobRuntimeLogBW \u003d\n+        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n+            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n+    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n+        \"simulate_start_time,simulate_end_time\" + EOL);\n+    jobRuntimeLogBW.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void init(ResourceScheduler resourceScheduler, Configuration config)\n      throws Exception {\n    this.scheduler \u003d resourceScheduler;\n    this.conf \u003d config;\n\n    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n\n    // register various metrics\n    registerJvmMetrics();\n    registerClusterResourceMetrics();\n    registerContainerAppNumMetrics();\n    registerSchedulerMetrics();\n\n    // .csv output\n    initMetricsCSVOutput();\n\n    // start web app to provide real-time tracking\n    int metricsWebAddressPort \u003d conf.getInt(\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n    web.start();\n\n    // a thread to update histogram timer\n    pool \u003d new ScheduledThreadPoolExecutor(2);\n    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // a thread to output metrics for real-tiem tracking\n    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // application running information\n    jobRuntimeLogBW \u003d\n        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n        \"simulate_start_time,simulate_end_time\" + EOL);\n    jobRuntimeLogBW.flush();\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {
            "oldValue": "[scheduler-ResourceScheduler, metrics-MetricRegistry]",
            "newValue": "[resourceScheduler-ResourceScheduler, config-Configuration]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "21/03/17 3:21 PM",
          "commitNameOld": "cc938e99ec0904824c8072184eff75619fcaf040",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,40 @@\n-  public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n-    this.scheduler \u003d scheduler;\n-    this.trackedQueues \u003d new HashSet\u003c\u003e();\n-    this.metrics \u003d metrics;\n+  void init(ResourceScheduler resourceScheduler, Configuration config)\n+      throws Exception {\n+    this.scheduler \u003d resourceScheduler;\n+    this.conf \u003d config;\n+\n+    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n+\n+    // register various metrics\n+    registerJvmMetrics();\n+    registerClusterResourceMetrics();\n+    registerContainerAppNumMetrics();\n+    registerSchedulerMetrics();\n+\n+    // .csv output\n+    initMetricsCSVOutput();\n+\n+    // start web app to provide real-time tracking\n+    int metricsWebAddressPort \u003d conf.getInt(\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n+    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n+    web.start();\n+\n+    // a thread to update histogram timer\n+    pool \u003d new ScheduledThreadPoolExecutor(2);\n+    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // a thread to output metrics for real-tiem tracking\n+    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // application running information\n+    jobRuntimeLogBW \u003d\n+        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n+            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n+    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n+        \"simulate_start_time,simulate_end_time\" + EOL);\n+    jobRuntimeLogBW.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void init(ResourceScheduler resourceScheduler, Configuration config)\n      throws Exception {\n    this.scheduler \u003d resourceScheduler;\n    this.conf \u003d config;\n\n    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n\n    // register various metrics\n    registerJvmMetrics();\n    registerClusterResourceMetrics();\n    registerContainerAppNumMetrics();\n    registerSchedulerMetrics();\n\n    // .csv output\n    initMetricsCSVOutput();\n\n    // start web app to provide real-time tracking\n    int metricsWebAddressPort \u003d conf.getInt(\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n    web.start();\n\n    // a thread to update histogram timer\n    pool \u003d new ScheduledThreadPoolExecutor(2);\n    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // a thread to output metrics for real-tiem tracking\n    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // application running information\n    jobRuntimeLogBW \u003d\n        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n        \"simulate_start_time,simulate_end_time\" + EOL);\n    jobRuntimeLogBW.flush();\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "21/03/17 3:21 PM",
          "commitNameOld": "cc938e99ec0904824c8072184eff75619fcaf040",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,40 @@\n-  public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n-    this.scheduler \u003d scheduler;\n-    this.trackedQueues \u003d new HashSet\u003c\u003e();\n-    this.metrics \u003d metrics;\n+  void init(ResourceScheduler resourceScheduler, Configuration config)\n+      throws Exception {\n+    this.scheduler \u003d resourceScheduler;\n+    this.conf \u003d config;\n+\n+    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n+\n+    // register various metrics\n+    registerJvmMetrics();\n+    registerClusterResourceMetrics();\n+    registerContainerAppNumMetrics();\n+    registerSchedulerMetrics();\n+\n+    // .csv output\n+    initMetricsCSVOutput();\n+\n+    // start web app to provide real-time tracking\n+    int metricsWebAddressPort \u003d conf.getInt(\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n+    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n+    web.start();\n+\n+    // a thread to update histogram timer\n+    pool \u003d new ScheduledThreadPoolExecutor(2);\n+    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // a thread to output metrics for real-tiem tracking\n+    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // application running information\n+    jobRuntimeLogBW \u003d\n+        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n+            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n+    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n+        \"simulate_start_time,simulate_end_time\" + EOL);\n+    jobRuntimeLogBW.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void init(ResourceScheduler resourceScheduler, Configuration config)\n      throws Exception {\n    this.scheduler \u003d resourceScheduler;\n    this.conf \u003d config;\n\n    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n\n    // register various metrics\n    registerJvmMetrics();\n    registerClusterResourceMetrics();\n    registerContainerAppNumMetrics();\n    registerSchedulerMetrics();\n\n    // .csv output\n    initMetricsCSVOutput();\n\n    // start web app to provide real-time tracking\n    int metricsWebAddressPort \u003d conf.getInt(\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n    web.start();\n\n    // a thread to update histogram timer\n    pool \u003d new ScheduledThreadPoolExecutor(2);\n    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // a thread to output metrics for real-tiem tracking\n    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // application running information\n    jobRuntimeLogBW \u003d\n        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n        \"simulate_start_time,simulate_end_time\" + EOL);\n    jobRuntimeLogBW.flush();\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "21/03/17 3:21 PM",
          "commitNameOld": "cc938e99ec0904824c8072184eff75619fcaf040",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 8.04,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,40 @@\n-  public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n-    this.scheduler \u003d scheduler;\n-    this.trackedQueues \u003d new HashSet\u003c\u003e();\n-    this.metrics \u003d metrics;\n+  void init(ResourceScheduler resourceScheduler, Configuration config)\n+      throws Exception {\n+    this.scheduler \u003d resourceScheduler;\n+    this.conf \u003d config;\n+\n+    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n+\n+    // register various metrics\n+    registerJvmMetrics();\n+    registerClusterResourceMetrics();\n+    registerContainerAppNumMetrics();\n+    registerSchedulerMetrics();\n+\n+    // .csv output\n+    initMetricsCSVOutput();\n+\n+    // start web app to provide real-time tracking\n+    int metricsWebAddressPort \u003d conf.getInt(\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n+        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n+    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n+    web.start();\n+\n+    // a thread to update histogram timer\n+    pool \u003d new ScheduledThreadPoolExecutor(2);\n+    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // a thread to output metrics for real-tiem tracking\n+    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n+        TimeUnit.MILLISECONDS);\n+\n+    // application running information\n+    jobRuntimeLogBW \u003d\n+        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n+            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n+    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n+        \"simulate_start_time,simulate_end_time\" + EOL);\n+    jobRuntimeLogBW.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void init(ResourceScheduler resourceScheduler, Configuration config)\n      throws Exception {\n    this.scheduler \u003d resourceScheduler;\n    this.conf \u003d config;\n\n    metricsOutputDir \u003d conf.get(SLSConfiguration.METRICS_OUTPUT_DIR);\n\n    // register various metrics\n    registerJvmMetrics();\n    registerClusterResourceMetrics();\n    registerContainerAppNumMetrics();\n    registerSchedulerMetrics();\n\n    // .csv output\n    initMetricsCSVOutput();\n\n    // start web app to provide real-time tracking\n    int metricsWebAddressPort \u003d conf.getInt(\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT,\n        SLSConfiguration.METRICS_WEB_ADDRESS_PORT_DEFAULT);\n    web \u003d new SLSWebApp((SchedulerWrapper)scheduler, metricsWebAddressPort);\n    web.start();\n\n    // a thread to update histogram timer\n    pool \u003d new ScheduledThreadPoolExecutor(2);\n    pool.scheduleAtFixedRate(new HistogramsRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // a thread to output metrics for real-tiem tracking\n    pool.scheduleAtFixedRate(new MetricsLogRunnable(), 0, 1000,\n        TimeUnit.MILLISECONDS);\n\n    // application running information\n    jobRuntimeLogBW \u003d\n        new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\n            metricsOutputDir + \"/jobruntime.csv\"), \"UTF-8\"));\n    jobRuntimeLogBW.write(\"JobID,real_start_time,real_end_time,\" +\n        \"simulate_start_time,simulate_end_time\" + EOL);\n    jobRuntimeLogBW.flush();\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "cc938e99ec0904824c8072184eff75619fcaf040": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6326. Shouldn\u0027t use AppAttemptIds to fetch applications while AM Simulator tracks app in SLS (yufeigu via rkanter)\n",
      "commitDate": "21/03/17 3:21 PM",
      "commitName": "cc938e99ec0904824c8072184eff75619fcaf040",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "25/07/14 10:12 AM",
      "commitNameOld": "77363b9d839e47bef2325b8682eabe00d4c83354",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 970.21,
      "commitsBetweenForRepo": 7319,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n   public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n     this.scheduler \u003d scheduler;\n-    this.trackedQueues \u003d new HashSet\u003cString\u003e();\n+    this.trackedQueues \u003d new HashSet\u003c\u003e();\n     this.metrics \u003d metrics;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n    this.scheduler \u003d scheduler;\n    this.trackedQueues \u003d new HashSet\u003c\u003e();\n    this.metrics \u003d metrics;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,5 @@\n+  public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n+    this.scheduler \u003d scheduler;\n+    this.trackedQueues \u003d new HashSet\u003cString\u003e();\n+    this.metrics \u003d metrics;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(ResourceScheduler scheduler, MetricRegistry metrics) {\n    this.scheduler \u003d scheduler;\n    this.trackedQueues \u003d new HashSet\u003cString\u003e();\n    this.metrics \u003d metrics;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java"
    }
  }
}