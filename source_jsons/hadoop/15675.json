{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LightWeightHashSet.java",
  "functionName": "pollN",
  "functionId": "pollN___n-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/LightWeightHashSet.java",
  "functionStartLine": 340,
  "functionEndLine": 368,
  "numCommitsSeen": 9,
  "timeTaken": 1126,
  "changeHistory": [
    "9a3f147fdd5421460889b266ead3a2300323cda2"
  ],
  "changeHistoryShort": {
    "9a3f147fdd5421460889b266ead3a2300323cda2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a3f147fdd5421460889b266ead3a2300323cda2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2476. More CPU efficient data structure for under-replicated, over-replicated, and invalidated blocks. Contributed by Tomasz Nykiel.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1201991 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/11 5:13 PM",
      "commitName": "9a3f147fdd5421460889b266ead3a2300323cda2",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,29 @@\n+  public List\u003cT\u003e pollN(int n) {\n+    if (n \u003e\u003d size) {\n+      return pollAll();\n+    }\n+    List\u003cT\u003e retList \u003d new ArrayList\u003cT\u003e(n);\n+    if (n \u003d\u003d 0) {\n+      return retList;\n+    }\n+    boolean done \u003d false;\n+    int currentBucketIndex \u003d 0;\n+\n+    while (!done) {\n+      LinkedElement\u003cT\u003e current \u003d entries[currentBucketIndex];\n+      while (current !\u003d null) {\n+        retList.add(current.element);\n+        current \u003d current.next;\n+        entries[currentBucketIndex] \u003d current;\n+        size--;\n+        modification++;\n+        if (--n \u003d\u003d 0) {\n+          done \u003d true;\n+          break;\n+        }\n+      }\n+      currentBucketIndex++;\n+    }\n+    shrinkIfNecessary();\n+    return retList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cT\u003e pollN(int n) {\n    if (n \u003e\u003d size) {\n      return pollAll();\n    }\n    List\u003cT\u003e retList \u003d new ArrayList\u003cT\u003e(n);\n    if (n \u003d\u003d 0) {\n      return retList;\n    }\n    boolean done \u003d false;\n    int currentBucketIndex \u003d 0;\n\n    while (!done) {\n      LinkedElement\u003cT\u003e current \u003d entries[currentBucketIndex];\n      while (current !\u003d null) {\n        retList.add(current.element);\n        current \u003d current.next;\n        entries[currentBucketIndex] \u003d current;\n        size--;\n        modification++;\n        if (--n \u003d\u003d 0) {\n          done \u003d true;\n          break;\n        }\n      }\n      currentBucketIndex++;\n    }\n    shrinkIfNecessary();\n    return retList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/LightWeightHashSet.java"
    }
  }
}