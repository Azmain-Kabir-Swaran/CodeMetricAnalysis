{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RawLocalFileSystem.java",
  "functionName": "create",
  "functionId": "create___f-Path__overwrite-boolean__createParent-boolean__bufferSize-int__replication-short__blockSize-long__progress-Progressable__permission-FsPermission",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
  "functionStartLine": 311,
  "functionEndLine": 324,
  "numCommitsSeen": 81,
  "timeTaken": 2242,
  "changeHistory": [
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
    "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
    "2deaca4415863fb20cee539878fd9acc3fc2fa82"
  ],
  "changeHistoryShort": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": "Ymultichange(Yparameterchange,Ybodychange)",
    "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5": "Ybodychange",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": "Ybodychange",
    "2deaca4415863fb20cee539878fd9acc3fc2fa82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
      "commitDate": "16/12/14 3:29 PM",
      "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
          "commitDate": "16/12/14 3:29 PM",
          "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
          "commitAuthor": "cnauroth",
          "commitDateOld": "09/12/14 2:31 PM",
          "commitNameOld": "03867eb1bb173c66b5eb3bebf2fe03a1188635b5",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 7.04,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   private FSDataOutputStream create(Path f, boolean overwrite,\n       boolean createParent, int bufferSize, short replication, long blockSize,\n-      Progressable progress) throws IOException {\n+      Progressable progress, FsPermission permission) throws IOException {\n     if (exists(f) \u0026\u0026 !overwrite) {\n       throw new FileAlreadyExistsException(\"File already exists: \" + f);\n     }\n     Path parent \u003d f.getParent();\n     if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n       throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n     }\n     return new FSDataOutputStream(new BufferedOutputStream(\n-        createOutputStream(f, false), bufferSize), statistics);\n+        createOutputStreamWithMode(f, false, permission), bufferSize),\n+        statistics);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private FSDataOutputStream create(Path f, boolean overwrite,\n      boolean createParent, int bufferSize, short replication, long blockSize,\n      Progressable progress, FsPermission permission) throws IOException {\n    if (exists(f) \u0026\u0026 !overwrite) {\n      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n    }\n    Path parent \u003d f.getParent();\n    if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n      throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        createOutputStreamWithMode(f, false, permission), bufferSize),\n        statistics);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
          "extendedDetails": {
            "oldValue": "[f-Path, overwrite-boolean, createParent-boolean, bufferSize-int, replication-short, blockSize-long, progress-Progressable]",
            "newValue": "[f-Path, overwrite-boolean, createParent-boolean, bufferSize-int, replication-short, blockSize-long, progress-Progressable, permission-FsPermission]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
          "commitDate": "16/12/14 3:29 PM",
          "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
          "commitAuthor": "cnauroth",
          "commitDateOld": "09/12/14 2:31 PM",
          "commitNameOld": "03867eb1bb173c66b5eb3bebf2fe03a1188635b5",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 7.04,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   private FSDataOutputStream create(Path f, boolean overwrite,\n       boolean createParent, int bufferSize, short replication, long blockSize,\n-      Progressable progress) throws IOException {\n+      Progressable progress, FsPermission permission) throws IOException {\n     if (exists(f) \u0026\u0026 !overwrite) {\n       throw new FileAlreadyExistsException(\"File already exists: \" + f);\n     }\n     Path parent \u003d f.getParent();\n     if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n       throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n     }\n     return new FSDataOutputStream(new BufferedOutputStream(\n-        createOutputStream(f, false), bufferSize), statistics);\n+        createOutputStreamWithMode(f, false, permission), bufferSize),\n+        statistics);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private FSDataOutputStream create(Path f, boolean overwrite,\n      boolean createParent, int bufferSize, short replication, long blockSize,\n      Progressable progress, FsPermission permission) throws IOException {\n    if (exists(f) \u0026\u0026 !overwrite) {\n      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n    }\n    Path parent \u003d f.getParent();\n    if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n      throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        createOutputStreamWithMode(f, false, permission), bufferSize),\n        statistics);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2198. Remove the need to run NodeManager as privileged account for Windows Secure Container Executor. Contributed by Remus Rusanu\n",
      "commitDate": "22/10/14 3:57 PM",
      "commitName": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/09/14 10:27 PM",
      "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 22.73,
      "commitsBetweenForRepo": 197,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private FSDataOutputStream create(Path f, boolean overwrite,\n       boolean createParent, int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n     if (exists(f) \u0026\u0026 !overwrite) {\n       throw new FileAlreadyExistsException(\"File already exists: \" + f);\n     }\n     Path parent \u003d f.getParent();\n     if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n       throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n     }\n     return new FSDataOutputStream(new BufferedOutputStream(\n-        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n+        createOutputStream(f, false), bufferSize), statistics);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FSDataOutputStream create(Path f, boolean overwrite,\n      boolean createParent, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    if (exists(f) \u0026\u0026 !overwrite) {\n      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n    }\n    Path parent \u003d f.getParent();\n    if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n      throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        createOutputStream(f, false), bufferSize), statistics);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9361: Strictly define FileSystem APIs\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:04 AM",
      "commitName": "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "21/02/14 10:42 AM",
      "commitNameOld": "58fb83d98299bfeb2de9899140e2cb626b9f8327",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 131.72,
      "commitsBetweenForRepo": 877,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private FSDataOutputStream create(Path f, boolean overwrite,\n       boolean createParent, int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n     if (exists(f) \u0026\u0026 !overwrite) {\n-      throw new IOException(\"File already exists: \"+f);\n+      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n     }\n     Path parent \u003d f.getParent();\n     if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n       throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n     }\n     return new FSDataOutputStream(new BufferedOutputStream(\n         new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FSDataOutputStream create(Path f, boolean overwrite,\n      boolean createParent, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    if (exists(f) \u0026\u0026 !overwrite) {\n      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n    }\n    Path parent \u003d f.getParent();\n    if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n      throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "2deaca4415863fb20cee539878fd9acc3fc2fa82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6886. LocalFileSystem Needs createNonRecursive API. Contributed by Nicolas Spiegelberg and Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212073 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:57 AM",
      "commitName": "2deaca4415863fb20cee539878fd9acc3fc2fa82",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,13 @@\n+  private FSDataOutputStream create(Path f, boolean overwrite,\n+      boolean createParent, int bufferSize, short replication, long blockSize,\n+      Progressable progress) throws IOException {\n+    if (exists(f) \u0026\u0026 !overwrite) {\n+      throw new IOException(\"File already exists: \"+f);\n+    }\n+    Path parent \u003d f.getParent();\n+    if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n+      throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n+    }\n+    return new FSDataOutputStream(new BufferedOutputStream(\n+        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FSDataOutputStream create(Path f, boolean overwrite,\n      boolean createParent, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    if (exists(f) \u0026\u0026 !overwrite) {\n      throw new IOException(\"File already exists: \"+f);\n    }\n    Path parent \u003d f.getParent();\n    if (parent !\u003d null \u0026\u0026 !mkdirs(parent)) {\n      throw new IOException(\"Mkdirs failed to create \" + parent.toString());\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
    }
  }
}