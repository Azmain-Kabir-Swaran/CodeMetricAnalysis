{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKFailoverController.java",
  "functionName": "fenceOldActive",
  "functionId": "fenceOldActive___data-byte[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
  "functionStartLine": 512,
  "functionEndLine": 521,
  "numCommitsSeen": 35,
  "timeTaken": 1188,
  "changeHistory": [
    "9d5799553fea81920edfab611e5d485a97841848",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
    "578f413778a6f005a35d18d7f015df128aeded5b"
  ],
  "changeHistoryShort": {
    "9d5799553fea81920edfab611e5d485a97841848": "Ybodychange",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": "Ybodychange",
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529": "Ybodychange",
    "578f413778a6f005a35d18d7f015df128aeded5b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d5799553fea81920edfab611e5d485a97841848": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8279. Allow manual failover to be invoked when auto-failover is enabled. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1333288 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/12 6:56 PM",
      "commitName": "9d5799553fea81920edfab611e5d485a97841848",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "24/04/12 12:34 PM",
      "commitNameOld": "c6e132124591362657e6f1722acca376747ea254",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 8.27,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,3 @@\n     public void fenceOldActive(byte[] data) {\n-      HAServiceTarget target \u003d dataToTarget(data);\n-      \n-      LOG.info(\"Should fence: \" + target);\n-      boolean gracefulWorked \u003d new FailoverController(conf,\n-          RequestSource.REQUEST_BY_ZKFC).tryGracefulFence(target);\n-      if (gracefulWorked) {\n-        // It\u0027s possible that it\u0027s in standby but just about to go into active,\n-        // no? Is there some race here?\n-        LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n-            \"state without fencing\");\n-        return;\n-      }\n-      \n-      try {\n-        target.checkFencingConfigured();\n-      } catch (BadFencingConfigurationException e) {\n-        LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n-        // TODO: see below todo\n-        throw new RuntimeException(e);\n-      }\n-      \n-      if (!target.getFencer().fence(target)) {\n-        // TODO: this will end up in some kind of tight loop,\n-        // won\u0027t it? We need some kind of backoff\n-        throw new RuntimeException(\"Unable to fence \" + target);\n-      }\n+      ZKFailoverController.this.fenceOldActive(data);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void fenceOldActive(byte[] data) {\n      ZKFailoverController.this.fenceOldActive(data);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8247. Add a config to enable auto-HA, which disables manual FailoverController. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1324566 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 10:40 PM",
      "commitName": "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "07/04/12 4:24 PM",
      "commitNameOld": "693ec453d2b8a07dede2b931d698c702e12fc935",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 3.26,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     public void fenceOldActive(byte[] data) {\n       HAServiceTarget target \u003d dataToTarget(data);\n       \n       LOG.info(\"Should fence: \" + target);\n-      boolean gracefulWorked \u003d new FailoverController(conf)\n-          .tryGracefulFence(target);\n+      boolean gracefulWorked \u003d new FailoverController(conf,\n+          RequestSource.REQUEST_BY_ZKFC).tryGracefulFence(target);\n       if (gracefulWorked) {\n         // It\u0027s possible that it\u0027s in standby but just about to go into active,\n         // no? Is there some race here?\n         LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n             \"state without fencing\");\n         return;\n       }\n       \n       try {\n         target.checkFencingConfigured();\n       } catch (BadFencingConfigurationException e) {\n         LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n         // TODO: see below todo\n         throw new RuntimeException(e);\n       }\n       \n       if (!target.getFencer().fence(target)) {\n         // TODO: this will end up in some kind of tight loop,\n         // won\u0027t it? We need some kind of backoff\n         throw new RuntimeException(\"Unable to fence \" + target);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void fenceOldActive(byte[] data) {\n      HAServiceTarget target \u003d dataToTarget(data);\n      \n      LOG.info(\"Should fence: \" + target);\n      boolean gracefulWorked \u003d new FailoverController(conf,\n          RequestSource.REQUEST_BY_ZKFC).tryGracefulFence(target);\n      if (gracefulWorked) {\n        // It\u0027s possible that it\u0027s in standby but just about to go into active,\n        // no? Is there some race here?\n        LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n            \"state without fencing\");\n        return;\n      }\n      \n      try {\n        target.checkFencingConfigured();\n      } catch (BadFencingConfigurationException e) {\n        LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n        // TODO: see below todo\n        throw new RuntimeException(e);\n      }\n      \n      if (!target.getFencer().fence(target)) {\n        // TODO: this will end up in some kind of tight loop,\n        // won\u0027t it? We need some kind of backoff\n        throw new RuntimeException(\"Unable to fence \" + target);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8236. haadmin should have configurable timeouts for failover commands. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308235 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/12 8:48 PM",
      "commitName": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "26/03/12 4:37 PM",
      "commitNameOld": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 6.17,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     public void fenceOldActive(byte[] data) {\n       HAServiceTarget target \u003d dataToTarget(data);\n       \n       LOG.info(\"Should fence: \" + target);\n-      boolean gracefulWorked \u003d\n-        FailoverController.tryGracefulFence(conf, target);\n+      boolean gracefulWorked \u003d new FailoverController(conf)\n+          .tryGracefulFence(target);\n       if (gracefulWorked) {\n         // It\u0027s possible that it\u0027s in standby but just about to go into active,\n         // no? Is there some race here?\n         LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n             \"state without fencing\");\n         return;\n       }\n       \n       try {\n         target.checkFencingConfigured();\n       } catch (BadFencingConfigurationException e) {\n         LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n         // TODO: see below todo\n         throw new RuntimeException(e);\n       }\n       \n       if (!target.getFencer().fence(target)) {\n         // TODO: this will end up in some kind of tight loop,\n         // won\u0027t it? We need some kind of backoff\n         throw new RuntimeException(\"Unable to fence \" + target);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void fenceOldActive(byte[] data) {\n      HAServiceTarget target \u003d dataToTarget(data);\n      \n      LOG.info(\"Should fence: \" + target);\n      boolean gracefulWorked \u003d new FailoverController(conf)\n          .tryGracefulFence(target);\n      if (gracefulWorked) {\n        // It\u0027s possible that it\u0027s in standby but just about to go into active,\n        // no? Is there some race here?\n        LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n            \"state without fencing\");\n        return;\n      }\n      \n      try {\n        target.checkFencingConfigured();\n      } catch (BadFencingConfigurationException e) {\n        LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n        // TODO: see below todo\n        throw new RuntimeException(e);\n      }\n      \n      if (!target.getFencer().fence(target)) {\n        // TODO: this will end up in some kind of tight loop,\n        // won\u0027t it? We need some kind of backoff\n        throw new RuntimeException(\"Unable to fence \" + target);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "578f413778a6f005a35d18d7f015df128aeded5b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 4:37 PM",
      "commitName": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+    public void fenceOldActive(byte[] data) {\n+      HAServiceTarget target \u003d dataToTarget(data);\n+      \n+      LOG.info(\"Should fence: \" + target);\n+      boolean gracefulWorked \u003d\n+        FailoverController.tryGracefulFence(conf, target);\n+      if (gracefulWorked) {\n+        // It\u0027s possible that it\u0027s in standby but just about to go into active,\n+        // no? Is there some race here?\n+        LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n+            \"state without fencing\");\n+        return;\n+      }\n+      \n+      try {\n+        target.checkFencingConfigured();\n+      } catch (BadFencingConfigurationException e) {\n+        LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n+        // TODO: see below todo\n+        throw new RuntimeException(e);\n+      }\n+      \n+      if (!target.getFencer().fence(target)) {\n+        // TODO: this will end up in some kind of tight loop,\n+        // won\u0027t it? We need some kind of backoff\n+        throw new RuntimeException(\"Unable to fence \" + target);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void fenceOldActive(byte[] data) {\n      HAServiceTarget target \u003d dataToTarget(data);\n      \n      LOG.info(\"Should fence: \" + target);\n      boolean gracefulWorked \u003d\n        FailoverController.tryGracefulFence(conf, target);\n      if (gracefulWorked) {\n        // It\u0027s possible that it\u0027s in standby but just about to go into active,\n        // no? Is there some race here?\n        LOG.info(\"Successfully transitioned \" + target + \" to standby \" +\n            \"state without fencing\");\n        return;\n      }\n      \n      try {\n        target.checkFencingConfigured();\n      } catch (BadFencingConfigurationException e) {\n        LOG.error(\"Couldn\u0027t fence old active \" + target, e);\n        // TODO: see below todo\n        throw new RuntimeException(e);\n      }\n      \n      if (!target.getFencer().fence(target)) {\n        // TODO: this will end up in some kind of tight loop,\n        // won\u0027t it? We need some kind of backoff\n        throw new RuntimeException(\"Unable to fence \" + target);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java"
    }
  }
}