{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystem.java",
  "functionName": "newInstance",
  "functionId": "newInstance___uri-URI__config-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
  "functionStartLine": 562,
  "functionEndLine": 579,
  "numCommitsSeen": 292,
  "timeTaken": 5506,
  "changeHistory": [
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
      "commitDate": "23/11/16 4:42 PM",
      "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
          "commitDate": "23/11/16 4:42 PM",
          "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "16/11/16 8:08 PM",
          "commitNameOld": "aab9737a058c0bdeeb17c173e530b7e571315a56",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 6.86,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static FileSystem newInstance(URI uri, Configuration conf) throws IOException {\n+  public static FileSystem newInstance(URI uri, Configuration config)\n+      throws IOException {\n     String scheme \u003d uri.getScheme();\n     String authority \u003d uri.getAuthority();\n \n     if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n-      return newInstance(conf);\n+      return newInstance(config);\n     }\n \n     if (authority \u003d\u003d null) {                       // no authority\n-      URI defaultUri \u003d getDefaultUri(conf);\n+      URI defaultUri \u003d getDefaultUri(config);\n       if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n           \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n-        return newInstance(defaultUri, conf);              // return default\n+        return newInstance(defaultUri, config);              // return default\n       }\n     }\n-    return CACHE.getUnique(uri, conf);\n+    return CACHE.getUnique(uri, config);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FileSystem newInstance(URI uri, Configuration config)\n      throws IOException {\n    String scheme \u003d uri.getScheme();\n    String authority \u003d uri.getAuthority();\n\n    if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n      return newInstance(config);\n    }\n\n    if (authority \u003d\u003d null) {                       // no authority\n      URI defaultUri \u003d getDefaultUri(config);\n      if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n          \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n        return newInstance(defaultUri, config);              // return default\n      }\n    }\n    return CACHE.getUnique(uri, config);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {
            "oldValue": "[uri-URI, conf-Configuration]",
            "newValue": "[uri-URI, config-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
          "commitDate": "23/11/16 4:42 PM",
          "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "16/11/16 8:08 PM",
          "commitNameOld": "aab9737a058c0bdeeb17c173e530b7e571315a56",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 6.86,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static FileSystem newInstance(URI uri, Configuration conf) throws IOException {\n+  public static FileSystem newInstance(URI uri, Configuration config)\n+      throws IOException {\n     String scheme \u003d uri.getScheme();\n     String authority \u003d uri.getAuthority();\n \n     if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n-      return newInstance(conf);\n+      return newInstance(config);\n     }\n \n     if (authority \u003d\u003d null) {                       // no authority\n-      URI defaultUri \u003d getDefaultUri(conf);\n+      URI defaultUri \u003d getDefaultUri(config);\n       if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n           \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n-        return newInstance(defaultUri, conf);              // return default\n+        return newInstance(defaultUri, config);              // return default\n       }\n     }\n-    return CACHE.getUnique(uri, conf);\n+    return CACHE.getUnique(uri, config);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FileSystem newInstance(URI uri, Configuration config)\n      throws IOException {\n    String scheme \u003d uri.getScheme();\n    String authority \u003d uri.getAuthority();\n\n    if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n      return newInstance(config);\n    }\n\n    if (authority \u003d\u003d null) {                       // no authority\n      URI defaultUri \u003d getDefaultUri(config);\n      if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n          \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n        return newInstance(defaultUri, config);              // return default\n      }\n    }\n    return CACHE.getUnique(uri, config);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FileSystem newInstance(URI uri, Configuration conf) throws IOException {\n    String scheme \u003d uri.getScheme();\n    String authority \u003d uri.getAuthority();\n\n    if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n      return newInstance(conf);\n    }\n\n    if (authority \u003d\u003d null) {                       // no authority\n      URI defaultUri \u003d getDefaultUri(conf);\n      if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n          \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n        return newInstance(defaultUri, conf);              // return default\n      }\n    }\n    return CACHE.getUnique(uri, conf);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FileSystem newInstance(URI uri, Configuration conf) throws IOException {\n    String scheme \u003d uri.getScheme();\n    String authority \u003d uri.getAuthority();\n\n    if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n      return newInstance(conf);\n    }\n\n    if (authority \u003d\u003d null) {                       // no authority\n      URI defaultUri \u003d getDefaultUri(conf);\n      if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n          \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n        return newInstance(defaultUri, conf);              // return default\n      }\n    }\n    return CACHE.getUnique(uri, conf);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FileSystem newInstance(URI uri, Configuration conf) throws IOException {\n    String scheme \u003d uri.getScheme();\n    String authority \u003d uri.getAuthority();\n\n    if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n      return newInstance(conf);\n    }\n\n    if (authority \u003d\u003d null) {                       // no authority\n      URI defaultUri \u003d getDefaultUri(conf);\n      if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n          \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n        return newInstance(defaultUri, conf);              // return default\n      }\n    }\n    return CACHE.getUnique(uri, conf);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,17 @@\n+  public static FileSystem newInstance(URI uri, Configuration conf) throws IOException {\n+    String scheme \u003d uri.getScheme();\n+    String authority \u003d uri.getAuthority();\n+\n+    if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n+      return newInstance(conf);\n+    }\n+\n+    if (authority \u003d\u003d null) {                       // no authority\n+      URI defaultUri \u003d getDefaultUri(conf);\n+      if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n+          \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n+        return newInstance(defaultUri, conf);              // return default\n+      }\n+    }\n+    return CACHE.getUnique(uri, conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileSystem newInstance(URI uri, Configuration conf) throws IOException {\n    String scheme \u003d uri.getScheme();\n    String authority \u003d uri.getAuthority();\n\n    if (scheme \u003d\u003d null) {                       // no scheme: use default FS\n      return newInstance(conf);\n    }\n\n    if (authority \u003d\u003d null) {                       // no authority\n      URI defaultUri \u003d getDefaultUri(conf);\n      if (scheme.equals(defaultUri.getScheme())    // if scheme matches default\n          \u0026\u0026 defaultUri.getAuthority() !\u003d null) {  // \u0026 default has authority\n        return newInstance(defaultUri, conf);              // return default\n      }\n    }\n    return CACHE.getUnique(uri, conf);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileSystem.java"
    }
  }
}