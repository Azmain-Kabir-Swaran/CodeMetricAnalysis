{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CountersBlock.java",
  "functionName": "getCounters",
  "functionId": "getCounters___ctx-AppContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
  "functionStartLine": 152,
  "functionEndLine": 203,
  "numCommitsSeen": 10,
  "timeTaken": 6715,
  "changeHistory": [
    "7e3d0168453b1c9193f593ff1560f199848b559e",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
    "34e6de8f856648b4d74997410d9cc8da4010d7c9",
    "71886657f89f64b289c6f426bd9f557ed0e53590",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "7e3d0168453b1c9193f593ff1560f199848b559e": "Ybodychange",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": "Ybodychange",
    "34e6de8f856648b4d74997410d9cc8da4010d7c9": "Ybodychange",
    "71886657f89f64b289c6f426bd9f557ed0e53590": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7e3d0168453b1c9193f593ff1560f199848b559e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4102. job counters not available in Jobhistory webui for killed jobs (Bhallamudi Venkata Siva Kamesh via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/12 7:08 AM",
      "commitName": "7e3d0168453b1c9193f593ff1560f199848b559e",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "09/01/12 1:04 PM",
      "commitNameOld": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 127.71,
      "commitsBetweenForRepo": 964,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,52 @@\n   private void getCounters(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n       if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       total \u003d task.getCounters();\n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n     total \u003d job.getAllCounters();\n+    boolean needTotalCounters \u003d false;\n+    if (total \u003d\u003d null) {\n+      total \u003d new Counters();\n+      needTotalCounters \u003d true;\n+    }\n     map \u003d new Counters();\n     reduce \u003d new Counters();\n     for (Task t : tasks.values()) {\n       Counters counters \u003d t.getCounters();\n+      if (counters \u003d\u003d null) {\n+        continue;\n+      }\n       switch (t.getType()) {\n         case MAP:     map.incrAllCounters(counters);     break;\n         case REDUCE:  reduce.incrAllCounters(counters);  break;\n       }\n+      if (needTotalCounters) {\n+        total.incrAllCounters(counters);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void getCounters(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      total \u003d task.getCounters();\n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    total \u003d job.getAllCounters();\n    boolean needTotalCounters \u003d false;\n    if (total \u003d\u003d null) {\n      total \u003d new Counters();\n      needTotalCounters \u003d true;\n    }\n    map \u003d new Counters();\n    reduce \u003d new Counters();\n    for (Task t : tasks.values()) {\n      Counters counters \u003d t.getCounters();\n      if (counters \u003d\u003d null) {\n        continue;\n      }\n      switch (t.getType()) {\n        case MAP:     map.incrAllCounters(counters);     break;\n        case REDUCE:  reduce.incrAllCounters(counters);  break;\n      }\n      if (needTotalCounters) {\n        total.incrAllCounters(counters);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3511. Removed a multitude of cloned/duplicate counters in the AM thereby reducing the AM heap size and preventing full GCs. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229347 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/12 1:04 PM",
      "commitName": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/12/11 5:51 PM",
      "commitNameOld": "c2fe4a7e83775589481210383f62faa2dcb00ecc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 24.8,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private void getCounters(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n       if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       total \u003d task.getCounters();\n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n-    total \u003d job.getCounters();\n-    map \u003d JobImpl.newCounters();\n-    reduce \u003d JobImpl.newCounters();\n+    total \u003d job.getAllCounters();\n+    map \u003d new Counters();\n+    reduce \u003d new Counters();\n     for (Task t : tasks.values()) {\n       Counters counters \u003d t.getCounters();\n       switch (t.getType()) {\n-        case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n-        case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n+        case MAP:     map.incrAllCounters(counters);     break;\n+        case REDUCE:  reduce.incrAllCounters(counters);  break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void getCounters(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      total \u003d task.getCounters();\n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    total \u003d job.getAllCounters();\n    map \u003d new Counters();\n    reduce \u003d new Counters();\n    for (Task t : tasks.values()) {\n      Counters counters \u003d t.getCounters();\n      switch (t.getType()) {\n        case MAP:     map.incrAllCounters(counters);     break;\n        case REDUCE:  reduce.incrAllCounters(counters);  break;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "34e6de8f856648b4d74997410d9cc8da4010d7c9": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3258. Fixed AM \u0026 JobHistory web-ui to display counters properly. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190160 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 10:08 PM",
      "commitName": "34e6de8f856648b4d74997410d9cc8da4010d7c9",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "29/09/11 1:08 AM",
      "commitNameOld": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 28.87,
      "commitsBetweenForRepo": 249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,41 @@\n   private void getCounters(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n       if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       total \u003d task.getCounters();\n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n-    total \u003d JobImpl.newCounters();\n+    total \u003d job.getCounters();\n     map \u003d JobImpl.newCounters();\n     reduce \u003d JobImpl.newCounters();\n     for (Task t : tasks.values()) {\n       Counters counters \u003d t.getCounters();\n-      JobImpl.incrAllCounters(total, counters);\n       switch (t.getType()) {\n         case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n         case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void getCounters(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      total \u003d task.getCounters();\n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    total \u003d job.getCounters();\n    map \u003d JobImpl.newCounters();\n    reduce \u003d JobImpl.newCounters();\n    for (Task t : tasks.values()) {\n      Counters counters \u003d t.getCounters();\n      switch (t.getType()) {\n        case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n        case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "71886657f89f64b289c6f426bd9f557ed0e53590": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3001. Added task-specific counters to AppMaster and JobHistory web-UIs. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 1:08 AM",
      "commitName": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 35.33,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n   private void getCounters(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n-      if (!jid.isEmpty()) {\n+      if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       total \u003d task.getCounters();\n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n     total \u003d JobImpl.newCounters();\n     map \u003d JobImpl.newCounters();\n     reduce \u003d JobImpl.newCounters();\n     for (Task t : tasks.values()) {\n       Counters counters \u003d t.getCounters();\n       JobImpl.incrAllCounters(total, counters);\n       switch (t.getType()) {\n         case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n         case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void getCounters(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (jid !\u003d null \u0026\u0026 !jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      total \u003d task.getCounters();\n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    total \u003d JobImpl.newCounters();\n    map \u003d JobImpl.newCounters();\n    reduce \u003d JobImpl.newCounters();\n    for (Task t : tasks.values()) {\n      Counters counters \u003d t.getCounters();\n      JobImpl.incrAllCounters(total, counters);\n      switch (t.getType()) {\n        case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n        case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void getCounters(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (!jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      total \u003d task.getCounters();\n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    total \u003d JobImpl.newCounters();\n    map \u003d JobImpl.newCounters();\n    reduce \u003d JobImpl.newCounters();\n    for (Task t : tasks.values()) {\n      Counters counters \u003d t.getCounters();\n      JobImpl.incrAllCounters(total, counters);\n      switch (t.getType()) {\n        case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n        case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,42 @@\n+  private void getCounters(AppContext ctx) {\n+    JobId jobID \u003d null;\n+    TaskId taskID \u003d null;\n+    String tid \u003d $(TASK_ID);\n+    if (!tid.isEmpty()) {\n+      taskID \u003d MRApps.toTaskID(tid);\n+      jobID \u003d taskID.getJobId();\n+    } else {\n+      String jid \u003d $(JOB_ID);\n+      if (!jid.isEmpty()) {\n+        jobID \u003d MRApps.toJobID(jid);\n+      }\n+    }\n+    if (jobID \u003d\u003d null) {\n+      return;\n+    }\n+    job \u003d ctx.getJob(jobID);\n+    if (job \u003d\u003d null) {\n+      return;\n+    }\n+    if (taskID !\u003d null) {\n+      task \u003d job.getTask(taskID);\n+      if (task \u003d\u003d null) {\n+        return;\n+      }\n+      total \u003d task.getCounters();\n+      return;\n+    }\n+    // Get all types of counters\n+    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n+    total \u003d JobImpl.newCounters();\n+    map \u003d JobImpl.newCounters();\n+    reduce \u003d JobImpl.newCounters();\n+    for (Task t : tasks.values()) {\n+      Counters counters \u003d t.getCounters();\n+      JobImpl.incrAllCounters(total, counters);\n+      switch (t.getType()) {\n+        case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n+        case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void getCounters(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (!jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      total \u003d task.getCounters();\n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    total \u003d JobImpl.newCounters();\n    map \u003d JobImpl.newCounters();\n    reduce \u003d JobImpl.newCounters();\n    for (Task t : tasks.values()) {\n      Counters counters \u003d t.getCounters();\n      JobImpl.incrAllCounters(total, counters);\n      switch (t.getType()) {\n        case MAP:     JobImpl.incrAllCounters(map, counters);     break;\n        case REDUCE:  JobImpl.incrAllCounters(reduce, counters);  break;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/CountersBlock.java"
    }
  }
}