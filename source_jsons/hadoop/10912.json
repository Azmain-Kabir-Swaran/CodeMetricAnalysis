{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StripedReader.java",
  "functionName": "paddingBufferToLen",
  "functionId": "paddingBufferToLen___buffer-ByteBuffer__len-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReader.java",
  "functionStartLine": 243,
  "functionEndLine": 251,
  "numCommitsSeen": 35,
  "timeTaken": 2589,
  "changeHistory": [
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f",
    "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932",
    "6616de24cb14f1c2d0d6568fd4382062618834bd"
  ],
  "changeHistoryShort": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": "Ymovefromfile",
    "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932": "Ybodychange",
    "6616de24cb14f1c2d0d6568fd4382062618834bd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-9719. Refactoring ErasureCodingWorker into smaller reusable constructs. Contributed by Kai Zheng.\n",
      "commitDate": "06/04/16 10:50 PM",
      "commitName": "3c18a53cbd2efabb2ad108d63a0b0b558424115f",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "06/04/16 9:45 PM",
      "commitNameOld": "8d29e2451f5ca60f864c7ece16722c0abdd1c657",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n-    private void paddingBufferToLen(ByteBuffer buffer, int len) {\n-      if (len \u003e buffer.limit()) {\n-        buffer.limit(len);\n-      }\n-      int toPadding \u003d len - buffer.position();\n-      for (int i \u003d 0; i \u003c toPadding; i++) {\n-        buffer.put((byte) 0);\n-      }\n-    }\n\\ No newline at end of file\n+  private void paddingBufferToLen(ByteBuffer buffer, int len) {\n+    if (len \u003e buffer.limit()) {\n+      buffer.limit(len);\n+    }\n+    int toPadding \u003d len - buffer.position();\n+    for (int i \u003d 0; i \u003c toPadding; i++) {\n+      buffer.put((byte) 0);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void paddingBufferToLen(ByteBuffer buffer, int len) {\n    if (len \u003e buffer.limit()) {\n      buffer.limit(len);\n    }\n    int toPadding \u003d len - buffer.position();\n    for (int i \u003d 0; i \u003c toPadding; i++) {\n      buffer.put((byte) 0);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/ErasureCodingWorker.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReader.java",
        "oldMethodName": "paddingBufferToLen",
        "newMethodName": "paddingBufferToLen"
      }
    },
    "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9646. ErasureCodingWorker may fail when recovering data blocks with length less than the first internal block. Contributed by Jing Zhao.\n",
      "commitDate": "22/01/16 9:46 AM",
      "commitName": "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "21/12/15 10:47 PM",
      "commitNameOld": "70d6f201260086a3f12beaa317fede2a99639fef",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 31.46,
      "commitsBetweenForRepo": 179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,9 @@\n     private void paddingBufferToLen(ByteBuffer buffer, int len) {\n+      if (len \u003e buffer.limit()) {\n+        buffer.limit(len);\n+      }\n       int toPadding \u003d len - buffer.position();\n       for (int i \u003d 0; i \u003c toPadding; i++) {\n         buffer.put((byte) 0);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void paddingBufferToLen(ByteBuffer buffer, int len) {\n      if (len \u003e buffer.limit()) {\n        buffer.limit(len);\n      }\n      int toPadding \u003d len - buffer.position();\n      for (int i \u003d 0; i \u003c toPadding; i++) {\n        buffer.put((byte) 0);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/ErasureCodingWorker.java",
      "extendedDetails": {}
    },
    "6616de24cb14f1c2d0d6568fd4382062618834bd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7348. Erasure Coding: DataNode reconstruct striped blocks. Contributed by Yi Liu.\n",
      "commitDate": "26/05/15 12:01 PM",
      "commitName": "6616de24cb14f1c2d0d6568fd4382062618834bd",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,6 @@\n+    private void paddingBufferToLen(ByteBuffer buffer, int len) {\n+      int toPadding \u003d len - buffer.position();\n+      for (int i \u003d 0; i \u003c toPadding; i++) {\n+        buffer.put((byte) 0);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void paddingBufferToLen(ByteBuffer buffer, int len) {\n      int toPadding \u003d len - buffer.position();\n      for (int i \u003d 0; i \u003c toPadding; i++) {\n        buffer.put((byte) 0);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/ErasureCodingWorker.java"
    }
  }
}