{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataStreamer.java",
  "functionName": "isLazyPersist",
  "functionId": "isLazyPersist___stat-HdfsFileStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
  "functionStartLine": 271,
  "functionEndLine": 273,
  "numCommitsSeen": 224,
  "timeTaken": 6755,
  "changeHistory": [
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "15a557fcfec5eceedde9f1597385d5d3b01b2cd7",
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66",
    "463aec11718e47d4aabb86a7a539cb973460aae6",
    "7dcad84143a9eef059688570cd0f9cf73747f2de",
    "bb84f1fccb18c6c7373851e05d2451d55e908242"
  ],
  "changeHistoryShort": {
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "15a557fcfec5eceedde9f1597385d5d3b01b2cd7": "Ybodychange",
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "463aec11718e47d4aabb86a7a539cb973460aae6": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename)",
    "7dcad84143a9eef059688570cd0f9cf73747f2de": "Ybodychange",
    "bb84f1fccb18c6c7373851e05d2451d55e908242": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static boolean isLazyPersist(HdfsFileStatus stat) {\n    return stat.getStoragePolicy() \u003d\u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java"
      }
    },
    "15a557fcfec5eceedde9f1597385d5d3b01b2cd7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9027. Refactor o.a.h.hdfs.DataStreamer#isLazyPersist() method. (Contributed by Mingliang Liu)\n",
      "commitDate": "11/09/15 10:11 AM",
      "commitName": "15a557fcfec5eceedde9f1597385d5d3b01b2cd7",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/08/15 1:31 PM",
      "commitNameOld": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 19.86,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,3 @@\n   static boolean isLazyPersist(HdfsFileStatus stat) {\n-    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n-        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n-    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n+    return stat.getStoragePolicy() \u003d\u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isLazyPersist(HdfsFileStatus stat) {\n    return stat.getStoragePolicy() \u003d\u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {}
    },
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HDFS-7854. Separate class DataStreamer out of DFSOutputStream. Contributed by Li Bo.\n",
      "commitDate": "24/03/15 11:06 AM",
      "commitName": "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7854. Separate class DataStreamer out of DFSOutputStream. Contributed by Li Bo.\n",
          "commitDate": "24/03/15 11:06 AM",
          "commitName": "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/03/15 10:49 AM",
          "commitNameOld": "570a83ae80faf2076966acf30588733803327844",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-  private static boolean isLazyPersist(HdfsFileStatus stat) {\n+  static boolean isLazyPersist(HdfsFileStatus stat) {\n     final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n         HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n     return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean isLazyPersist(HdfsFileStatus stat) {\n    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
            "oldMethodName": "isLazyPersist",
            "newMethodName": "isLazyPersist"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7854. Separate class DataStreamer out of DFSOutputStream. Contributed by Li Bo.\n",
          "commitDate": "24/03/15 11:06 AM",
          "commitName": "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/03/15 10:49 AM",
          "commitNameOld": "570a83ae80faf2076966acf30588733803327844",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-  private static boolean isLazyPersist(HdfsFileStatus stat) {\n+  static boolean isLazyPersist(HdfsFileStatus stat) {\n     final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n         HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n     return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean isLazyPersist(HdfsFileStatus stat) {\n    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[static]"
          }
        }
      ]
    },
    "463aec11718e47d4aabb86a7a539cb973460aae6": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename)",
      "commitMessage": "HDFS-6934. Move checksum computation off the hot path when writing to RAM disk. Contributed by Chris Nauroth.\n",
      "commitDate": "27/10/14 9:38 AM",
      "commitName": "463aec11718e47d4aabb86a7a539cb973460aae6",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-6934. Move checksum computation off the hot path when writing to RAM disk. Contributed by Chris Nauroth.\n",
          "commitDate": "27/10/14 9:38 AM",
          "commitName": "463aec11718e47d4aabb86a7a539cb973460aae6",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/14 6:54 AM",
          "commitNameOld": "0058eadbd3149a5dee1ffc69c2d9f21caa916fb5",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,5 @@\n-    private boolean initLazyPersist(HdfsFileStatus stat) {\n-      final BlockStoragePolicy lpPolicy \u003d blockStoragePolicySuite\n-          .getPolicy(HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n-      return lpPolicy !\u003d null \u0026\u0026\n-             stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n-    }\n\\ No newline at end of file\n+  private static boolean isLazyPersist(HdfsFileStatus stat) {\n+    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n+        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n+    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean isLazyPersist(HdfsFileStatus stat) {\n    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
            "oldMethodName": "initLazyPersist",
            "newMethodName": "isLazyPersist"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6934. Move checksum computation off the hot path when writing to RAM disk. Contributed by Chris Nauroth.\n",
          "commitDate": "27/10/14 9:38 AM",
          "commitName": "463aec11718e47d4aabb86a7a539cb973460aae6",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/14 6:54 AM",
          "commitNameOld": "0058eadbd3149a5dee1ffc69c2d9f21caa916fb5",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,5 @@\n-    private boolean initLazyPersist(HdfsFileStatus stat) {\n-      final BlockStoragePolicy lpPolicy \u003d blockStoragePolicySuite\n-          .getPolicy(HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n-      return lpPolicy !\u003d null \u0026\u0026\n-             stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n-    }\n\\ No newline at end of file\n+  private static boolean isLazyPersist(HdfsFileStatus stat) {\n+    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n+        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n+    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean isLazyPersist(HdfsFileStatus stat) {\n    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6934. Move checksum computation off the hot path when writing to RAM disk. Contributed by Chris Nauroth.\n",
          "commitDate": "27/10/14 9:38 AM",
          "commitName": "463aec11718e47d4aabb86a7a539cb973460aae6",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/14 6:54 AM",
          "commitNameOld": "0058eadbd3149a5dee1ffc69c2d9f21caa916fb5",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,5 @@\n-    private boolean initLazyPersist(HdfsFileStatus stat) {\n-      final BlockStoragePolicy lpPolicy \u003d blockStoragePolicySuite\n-          .getPolicy(HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n-      return lpPolicy !\u003d null \u0026\u0026\n-             stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n-    }\n\\ No newline at end of file\n+  private static boolean isLazyPersist(HdfsFileStatus stat) {\n+    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n+        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n+    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean isLazyPersist(HdfsFileStatus stat) {\n    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6934. Move checksum computation off the hot path when writing to RAM disk. Contributed by Chris Nauroth.\n",
          "commitDate": "27/10/14 9:38 AM",
          "commitName": "463aec11718e47d4aabb86a7a539cb973460aae6",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/14 6:54 AM",
          "commitNameOld": "0058eadbd3149a5dee1ffc69c2d9f21caa916fb5",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,5 @@\n-    private boolean initLazyPersist(HdfsFileStatus stat) {\n-      final BlockStoragePolicy lpPolicy \u003d blockStoragePolicySuite\n-          .getPolicy(HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n-      return lpPolicy !\u003d null \u0026\u0026\n-             stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n-    }\n\\ No newline at end of file\n+  private static boolean isLazyPersist(HdfsFileStatus stat) {\n+    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n+        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n+    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean isLazyPersist(HdfsFileStatus stat) {\n    final BlockStoragePolicy p \u003d blockStoragePolicySuite.getPolicy(\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n    return p !\u003d null \u0026\u0026 stat.getStoragePolicy() \u003d\u003d p.getId();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
          "extendedDetails": {
            "oldValue": "initLazyPersist",
            "newValue": "isLazyPersist"
          }
        }
      ]
    },
    "7dcad84143a9eef059688570cd0f9cf73747f2de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7228. Add an SSD policy into the default BlockStoragePolicySuite. Contributed by Jing Zhao.\n",
      "commitDate": "14/10/14 10:22 AM",
      "commitName": "7dcad84143a9eef059688570cd0f9cf73747f2de",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "29/09/14 10:27 PM",
      "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 14.5,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     private boolean initLazyPersist(HdfsFileStatus stat) {\n-      final BlockStoragePolicy lpPolicy \u003d\n-          blockStoragePolicySuite.getPolicy(\"LAZY_PERSIST\");\n+      final BlockStoragePolicy lpPolicy \u003d blockStoragePolicySuite\n+          .getPolicy(HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n       return lpPolicy !\u003d null \u0026\u0026\n              stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean initLazyPersist(HdfsFileStatus stat) {\n      final BlockStoragePolicy lpPolicy \u003d blockStoragePolicySuite\n          .getPolicy(HdfsConstants.MEMORY_STORAGE_POLICY_NAME);\n      return lpPolicy !\u003d null \u0026\u0026\n             stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
      "extendedDetails": {}
    },
    "bb84f1fccb18c6c7373851e05d2451d55e908242": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7159. Use block storage policy to set lazy persist preference. (Arpit Agarwal)\n",
      "commitDate": "29/09/14 10:27 PM",
      "commitName": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthor": "arp",
      "diff": "@@ -0,0 +1,6 @@\n+    private boolean initLazyPersist(HdfsFileStatus stat) {\n+      final BlockStoragePolicy lpPolicy \u003d\n+          blockStoragePolicySuite.getPolicy(\"LAZY_PERSIST\");\n+      return lpPolicy !\u003d null \u0026\u0026\n+             stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean initLazyPersist(HdfsFileStatus stat) {\n      final BlockStoragePolicy lpPolicy \u003d\n          blockStoragePolicySuite.getPolicy(\"LAZY_PERSIST\");\n      return lpPolicy !\u003d null \u0026\u0026\n             stat.getStoragePolicy() \u003d\u003d lpPolicy.getId();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java"
    }
  }
}