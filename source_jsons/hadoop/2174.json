{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "create",
  "functionId": "create___src-String__permission-FsPermission__flag-EnumSet__CreateFlag____createParent-boolean__replication-short__blockSize-long__progress-Progressable__buffersize-int__checksumOpt-ChecksumOpt__favoredNodes-InetSocketAddress[]__ecPolicyName-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 1237,
  "functionEndLine": 1244,
  "numCommitsSeen": 97,
  "timeTaken": 3846,
  "changeHistory": [
    "0d7a5ac5f526801367a9ec963e6d72783b637d55",
    "a7312715a66dec5173c3a0a78dff4e0333e7f0b1"
  ],
  "changeHistoryShort": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": "Ybodychange",
    "a7312715a66dec5173c3a0a78dff4e0333e7f0b1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13209. DistributedFileSystem.create should allow an option to provide StoragePolicy. Contributed by Ayush Saxena.\n",
      "commitDate": "14/02/19 8:43 AM",
      "commitName": "0d7a5ac5f526801367a9ec963e6d72783b637d55",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "24/12/18 9:34 AM",
      "commitNameOld": "652b257478f723a9e119e5e9181f3c7450ac92b5",
      "commitAuthorOld": "Chen Liang",
      "daysBetweenCommits": 51.96,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,8 @@\n   public DFSOutputStream create(String src, FsPermission permission,\n       EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n       long blockSize, Progressable progress, int buffersize,\n       ChecksumOpt checksumOpt, InetSocketAddress[] favoredNodes,\n       String ecPolicyName) throws IOException {\n-    checkOpen();\n-    final FsPermission masked \u003d applyUMask(permission);\n-    LOG.debug(\"{}: masked\u003d{}\", src, masked);\n-    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n-        src, masked, flag, createParent, replication, blockSize, progress,\n-        dfsClientConf.createChecksum(checksumOpt),\n-        getFavoredNodesStr(favoredNodes), ecPolicyName);\n-    beginFileLease(result.getFileId(), result);\n-    return result;\n+    return create(src, permission, flag, createParent, replication, blockSize,\n+        progress, buffersize, checksumOpt, favoredNodes, ecPolicyName, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, FsPermission permission,\n      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n      long blockSize, Progressable progress, int buffersize,\n      ChecksumOpt checksumOpt, InetSocketAddress[] favoredNodes,\n      String ecPolicyName) throws IOException {\n    return create(src, permission, flag, createParent, replication, blockSize,\n        progress, buffersize, checksumOpt, favoredNodes, ecPolicyName, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "a7312715a66dec5173c3a0a78dff4e0333e7f0b1": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10996. Ability to specify per-file EC policy at create time. Contributed by SammiChen.\n",
      "commitDate": "12/04/17 12:27 PM",
      "commitName": "a7312715a66dec5173c3a0a78dff4e0333e7f0b1",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,15 @@\n+  public DFSOutputStream create(String src, FsPermission permission,\n+      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n+      long blockSize, Progressable progress, int buffersize,\n+      ChecksumOpt checksumOpt, InetSocketAddress[] favoredNodes,\n+      String ecPolicyName) throws IOException {\n+    checkOpen();\n+    final FsPermission masked \u003d applyUMask(permission);\n+    LOG.debug(\"{}: masked\u003d{}\", src, masked);\n+    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n+        src, masked, flag, createParent, replication, blockSize, progress,\n+        dfsClientConf.createChecksum(checksumOpt),\n+        getFavoredNodesStr(favoredNodes), ecPolicyName);\n+    beginFileLease(result.getFileId(), result);\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, FsPermission permission,\n      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n      long blockSize, Progressable progress, int buffersize,\n      ChecksumOpt checksumOpt, InetSocketAddress[] favoredNodes,\n      String ecPolicyName) throws IOException {\n    checkOpen();\n    final FsPermission masked \u003d applyUMask(permission);\n    LOG.debug(\"{}: masked\u003d{}\", src, masked);\n    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n        src, masked, flag, createParent, replication, blockSize, progress,\n        dfsClientConf.createChecksum(checksumOpt),\n        getFavoredNodesStr(favoredNodes), ecPolicyName);\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}