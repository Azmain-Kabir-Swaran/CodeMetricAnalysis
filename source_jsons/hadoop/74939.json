{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenIssuer.java",
  "functionName": "addDelegationTokens",
  "functionId": "addDelegationTokens___renewer-String(modifiers-final)__credentials-Credentials",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DelegationTokenIssuer.java",
  "functionStartLine": 70,
  "functionEndLine": 78,
  "numCommitsSeen": 147,
  "timeTaken": 6902,
  "changeHistory": [
    "41b3603b5bcb74a7d78a314a4a5c177d941af27f",
    "5ec86b445cc492f52c33639efb6a09a0d2f27475",
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
    "7ee3e072b8ede446512137d623158edad21b4c46"
  ],
  "changeHistoryShort": {
    "41b3603b5bcb74a7d78a314a4a5c177d941af27f": "Yfilerename",
    "5ec86b445cc492f52c33639efb6a09a0d2f27475": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": "Ybodychange",
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Yparametermetachange)",
    "7ee3e072b8ede446512137d623158edad21b4c46": "Yintroduced"
  },
  "changeHistoryDetails": {
    "41b3603b5bcb74a7d78a314a4a5c177d941af27f": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15861. Move DelegationTokenIssuer to the right path.\nContributed by Wei-Chiu Chuang.\n",
      "commitDate": "17/10/18 3:01 AM",
      "commitName": "41b3603b5bcb74a7d78a314a4a5c177d941af27f",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/10/18 2:29 AM",
      "commitNameOld": "b738cb148cb2a15e72a5c27200eca2d4b383bf9c",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  default Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n    collectDelegationTokens(this, renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DelegationTokenIssuer.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/org/apache/hadoop/security/token/DelegationTokenIssuer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DelegationTokenIssuer.java"
      }
    },
    "5ec86b445cc492f52c33639efb6a09a0d2f27475": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-14445. Use DelegationTokenIssuer to create KMS delegation tokens that can authenticate to all KMS instances.\nContributed by Daryn Sharp, Xiao Chen, Rushabh S Shah.\n",
      "commitDate": "12/10/18 9:35 AM",
      "commitName": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-14445. Use DelegationTokenIssuer to create KMS delegation tokens that can authenticate to all KMS instances.\nContributed by Daryn Sharp, Xiao Chen, Rushabh S Shah.\n",
          "commitDate": "12/10/18 9:35 AM",
          "commitName": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "12/10/18 5:04 AM",
          "commitNameOld": "6e0e6daaf3215213c32cdffa79f3730d40e981ea",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  public Token\u003c?\u003e[] addDelegationTokens(\n+  default Token\u003c?\u003e[] addDelegationTokens(\n       final String renewer, Credentials credentials) throws IOException {\n     if (credentials \u003d\u003d null) {\n       credentials \u003d new Credentials();\n     }\n     final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n-    collectDelegationTokens(renewer, credentials, tokens);\n+    collectDelegationTokens(this, renewer, credentials, tokens);\n     return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  default Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n    collectDelegationTokens(this, renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/org/apache/hadoop/security/token/DelegationTokenIssuer.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/org/apache/hadoop/security/token/DelegationTokenIssuer.java",
            "oldMethodName": "addDelegationTokens",
            "newMethodName": "addDelegationTokens"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-14445. Use DelegationTokenIssuer to create KMS delegation tokens that can authenticate to all KMS instances.\nContributed by Daryn Sharp, Xiao Chen, Rushabh S Shah.\n",
          "commitDate": "12/10/18 9:35 AM",
          "commitName": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "12/10/18 5:04 AM",
          "commitNameOld": "6e0e6daaf3215213c32cdffa79f3730d40e981ea",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  public Token\u003c?\u003e[] addDelegationTokens(\n+  default Token\u003c?\u003e[] addDelegationTokens(\n       final String renewer, Credentials credentials) throws IOException {\n     if (credentials \u003d\u003d null) {\n       credentials \u003d new Credentials();\n     }\n     final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n-    collectDelegationTokens(renewer, credentials, tokens);\n+    collectDelegationTokens(this, renewer, credentials, tokens);\n     return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  default Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n    collectDelegationTokens(this, renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/org/apache/hadoop/security/token/DelegationTokenIssuer.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[default]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14445. Use DelegationTokenIssuer to create KMS delegation tokens that can authenticate to all KMS instances.\nContributed by Daryn Sharp, Xiao Chen, Rushabh S Shah.\n",
          "commitDate": "12/10/18 9:35 AM",
          "commitName": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "12/10/18 5:04 AM",
          "commitNameOld": "6e0e6daaf3215213c32cdffa79f3730d40e981ea",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  public Token\u003c?\u003e[] addDelegationTokens(\n+  default Token\u003c?\u003e[] addDelegationTokens(\n       final String renewer, Credentials credentials) throws IOException {\n     if (credentials \u003d\u003d null) {\n       credentials \u003d new Credentials();\n     }\n     final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n-    collectDelegationTokens(renewer, credentials, tokens);\n+    collectDelegationTokens(this, renewer, credentials, tokens);\n     return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  default Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n    collectDelegationTokens(this, renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/org/apache/hadoop/security/token/DelegationTokenIssuer.java",
          "extendedDetails": {}
        }
      ]
    },
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
      "commitDate": "23/11/16 4:42 PM",
      "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "16/11/16 8:08 PM",
      "commitNameOld": "aab9737a058c0bdeeb17c173e530b7e571315a56",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 6.86,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public Token\u003c?\u003e[] addDelegationTokens(\n       final String renewer, Credentials credentials) throws IOException {\n     if (credentials \u003d\u003d null) {\n       credentials \u003d new Credentials();\n     }\n-    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n+    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n     collectDelegationTokens(renewer, credentials, tokens);\n     return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003c\u003e();\n    collectDelegationTokens(renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-7967. Need generalized multi-token filesystem support (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/12 7:05 AM",
      "commitName": "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
      "commitAuthor": "Daryn Sharp",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-7967. Need generalized multi-token filesystem support (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374271 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/08/12 7:05 AM",
          "commitName": "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "07/08/12 9:40 AM",
          "commitNameOld": "9b4a7900c7dfc0590316eedaa97144f938885651",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 9.89,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,9 @@\n-  public List\u003cToken\u003c?\u003e\u003e getDelegationTokens(String renewer,\n-      Credentials credentials) throws IOException {\n-    List\u003cToken\u003c?\u003e\u003e allTokens \u003d getDelegationTokens(renewer);\n-    List\u003cToken\u003c?\u003e\u003e newTokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n-    if (allTokens !\u003d null) {\n-      for (Token\u003c?\u003e token : allTokens) {\n-        Token\u003c?\u003e knownToken \u003d credentials.getToken(token.getService());\n-        if (knownToken \u003d\u003d null) {\n-          newTokens.add(token);\n-        } else {\n-          newTokens.add(knownToken);\n-        }\n-      }\n+  public Token\u003c?\u003e[] addDelegationTokens(\n+      final String renewer, Credentials credentials) throws IOException {\n+    if (credentials \u003d\u003d null) {\n+      credentials \u003d new Credentials();\n     }\n-    return newTokens;\n+    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n+    collectDelegationTokens(renewer, credentials, tokens);\n+    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n    collectDelegationTokens(renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {
            "oldValue": "getDelegationTokens",
            "newValue": "addDelegationTokens"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-7967. Need generalized multi-token filesystem support (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374271 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/08/12 7:05 AM",
          "commitName": "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "07/08/12 9:40 AM",
          "commitNameOld": "9b4a7900c7dfc0590316eedaa97144f938885651",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 9.89,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,9 @@\n-  public List\u003cToken\u003c?\u003e\u003e getDelegationTokens(String renewer,\n-      Credentials credentials) throws IOException {\n-    List\u003cToken\u003c?\u003e\u003e allTokens \u003d getDelegationTokens(renewer);\n-    List\u003cToken\u003c?\u003e\u003e newTokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n-    if (allTokens !\u003d null) {\n-      for (Token\u003c?\u003e token : allTokens) {\n-        Token\u003c?\u003e knownToken \u003d credentials.getToken(token.getService());\n-        if (knownToken \u003d\u003d null) {\n-          newTokens.add(token);\n-        } else {\n-          newTokens.add(knownToken);\n-        }\n-      }\n+  public Token\u003c?\u003e[] addDelegationTokens(\n+      final String renewer, Credentials credentials) throws IOException {\n+    if (credentials \u003d\u003d null) {\n+      credentials \u003d new Credentials();\n     }\n-    return newTokens;\n+    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n+    collectDelegationTokens(renewer, credentials, tokens);\n+    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n    collectDelegationTokens(renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {
            "oldValue": "List\u003cToken\u003c?\u003e\u003e",
            "newValue": "Token\u003c?\u003e[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7967. Need generalized multi-token filesystem support (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374271 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/08/12 7:05 AM",
          "commitName": "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "07/08/12 9:40 AM",
          "commitNameOld": "9b4a7900c7dfc0590316eedaa97144f938885651",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 9.89,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,9 @@\n-  public List\u003cToken\u003c?\u003e\u003e getDelegationTokens(String renewer,\n-      Credentials credentials) throws IOException {\n-    List\u003cToken\u003c?\u003e\u003e allTokens \u003d getDelegationTokens(renewer);\n-    List\u003cToken\u003c?\u003e\u003e newTokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n-    if (allTokens !\u003d null) {\n-      for (Token\u003c?\u003e token : allTokens) {\n-        Token\u003c?\u003e knownToken \u003d credentials.getToken(token.getService());\n-        if (knownToken \u003d\u003d null) {\n-          newTokens.add(token);\n-        } else {\n-          newTokens.add(knownToken);\n-        }\n-      }\n+  public Token\u003c?\u003e[] addDelegationTokens(\n+      final String renewer, Credentials credentials) throws IOException {\n+    if (credentials \u003d\u003d null) {\n+      credentials \u003d new Credentials();\n     }\n-    return newTokens;\n+    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n+    collectDelegationTokens(renewer, credentials, tokens);\n+    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n    collectDelegationTokens(renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-7967. Need generalized multi-token filesystem support (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374271 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/08/12 7:05 AM",
          "commitName": "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "07/08/12 9:40 AM",
          "commitNameOld": "9b4a7900c7dfc0590316eedaa97144f938885651",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 9.89,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,9 @@\n-  public List\u003cToken\u003c?\u003e\u003e getDelegationTokens(String renewer,\n-      Credentials credentials) throws IOException {\n-    List\u003cToken\u003c?\u003e\u003e allTokens \u003d getDelegationTokens(renewer);\n-    List\u003cToken\u003c?\u003e\u003e newTokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n-    if (allTokens !\u003d null) {\n-      for (Token\u003c?\u003e token : allTokens) {\n-        Token\u003c?\u003e knownToken \u003d credentials.getToken(token.getService());\n-        if (knownToken \u003d\u003d null) {\n-          newTokens.add(token);\n-        } else {\n-          newTokens.add(knownToken);\n-        }\n-      }\n+  public Token\u003c?\u003e[] addDelegationTokens(\n+      final String renewer, Credentials credentials) throws IOException {\n+    if (credentials \u003d\u003d null) {\n+      credentials \u003d new Credentials();\n     }\n-    return newTokens;\n+    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n+    collectDelegationTokens(renewer, credentials, tokens);\n+    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c?\u003e[] addDelegationTokens(\n      final String renewer, Credentials credentials) throws IOException {\n    if (credentials \u003d\u003d null) {\n      credentials \u003d new Credentials();\n    }\n    final List\u003cToken\u003c?\u003e\u003e tokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n    collectDelegationTokens(renewer, credentials, tokens);\n    return tokens.toArray(new Token\u003c?\u003e[tokens.size()]);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {
            "oldValue": "[renewer-String, credentials-Credentials]",
            "newValue": "[renewer-String(modifiers-final), credentials-Credentials]"
          }
        }
      ]
    },
    "7ee3e072b8ede446512137d623158edad21b4c46": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7933. Add a getDelegationTokens api to FileSystem which checks for known tokens in the passed Credentials object. (sseth)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1226916 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/12 10:58 AM",
      "commitName": "7ee3e072b8ede446512137d623158edad21b4c46",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,16 @@\n+  public List\u003cToken\u003c?\u003e\u003e getDelegationTokens(String renewer,\n+      Credentials credentials) throws IOException {\n+    List\u003cToken\u003c?\u003e\u003e allTokens \u003d getDelegationTokens(renewer);\n+    List\u003cToken\u003c?\u003e\u003e newTokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n+    if (allTokens !\u003d null) {\n+      for (Token\u003c?\u003e token : allTokens) {\n+        Token\u003c?\u003e knownToken \u003d credentials.getToken(token.getService());\n+        if (knownToken \u003d\u003d null) {\n+          newTokens.add(token);\n+        } else {\n+          newTokens.add(knownToken);\n+        }\n+      }\n+    }\n+    return newTokens;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cToken\u003c?\u003e\u003e getDelegationTokens(String renewer,\n      Credentials credentials) throws IOException {\n    List\u003cToken\u003c?\u003e\u003e allTokens \u003d getDelegationTokens(renewer);\n    List\u003cToken\u003c?\u003e\u003e newTokens \u003d new ArrayList\u003cToken\u003c?\u003e\u003e();\n    if (allTokens !\u003d null) {\n      for (Token\u003c?\u003e token : allTokens) {\n        Token\u003c?\u003e knownToken \u003d credentials.getToken(token.getService());\n        if (knownToken \u003d\u003d null) {\n          newTokens.add(token);\n        } else {\n          newTokens.add(knownToken);\n        }\n      }\n    }\n    return newTokens;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
    }
  }
}