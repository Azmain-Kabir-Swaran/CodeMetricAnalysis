{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobStatus.java",
  "functionName": "write",
  "functionId": "write___out-DataOutput",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java",
  "functionStartLine": 452,
  "functionEndLine": 477,
  "numCommitsSeen": 12,
  "timeTaken": 4361,
  "changeHistory": [
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213987 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:35 PM",
      "commitName": "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "12/10/11 4:29 PM",
      "commitNameOld": "26d63ecdae0f1e27606301f90ca93b3a0f62c5d4",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 62.0,
      "commitsBetweenForRepo": 432,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public synchronized void write(DataOutput out) throws IOException {\n     jobid.write(out);\n     out.writeFloat(setupProgress);\n     out.writeFloat(mapProgress);\n     out.writeFloat(reduceProgress);\n     out.writeFloat(cleanupProgress);\n     WritableUtils.writeEnum(out, runState);\n     out.writeLong(startTime);\n     Text.writeString(out, user);\n     WritableUtils.writeEnum(out, priority);\n     Text.writeString(out, schedulingInfo);\n     out.writeLong(finishTime);\n     out.writeBoolean(isRetired);\n     Text.writeString(out, historyFile);\n     Text.writeString(out, jobName);\n     Text.writeString(out, trackingUrl);\n     Text.writeString(out, jobFile);\n+    out.writeBoolean(isUber);\n \n     // Serialize the job\u0027s ACLs\n     out.writeInt(jobACLs.size());\n     for (Entry\u003cJobACL, AccessControlList\u003e entry : jobACLs.entrySet()) {\n       WritableUtils.writeEnum(out, entry.getKey());\n       entry.getValue().write(out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    jobid.write(out);\n    out.writeFloat(setupProgress);\n    out.writeFloat(mapProgress);\n    out.writeFloat(reduceProgress);\n    out.writeFloat(cleanupProgress);\n    WritableUtils.writeEnum(out, runState);\n    out.writeLong(startTime);\n    Text.writeString(out, user);\n    WritableUtils.writeEnum(out, priority);\n    Text.writeString(out, schedulingInfo);\n    out.writeLong(finishTime);\n    out.writeBoolean(isRetired);\n    Text.writeString(out, historyFile);\n    Text.writeString(out, jobName);\n    Text.writeString(out, trackingUrl);\n    Text.writeString(out, jobFile);\n    out.writeBoolean(isUber);\n\n    // Serialize the job\u0027s ACLs\n    out.writeInt(jobACLs.size());\n    for (Entry\u003cJobACL, AccessControlList\u003e entry : jobACLs.entrySet()) {\n      WritableUtils.writeEnum(out, entry.getKey());\n      entry.getValue().write(out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    jobid.write(out);\n    out.writeFloat(setupProgress);\n    out.writeFloat(mapProgress);\n    out.writeFloat(reduceProgress);\n    out.writeFloat(cleanupProgress);\n    WritableUtils.writeEnum(out, runState);\n    out.writeLong(startTime);\n    Text.writeString(out, user);\n    WritableUtils.writeEnum(out, priority);\n    Text.writeString(out, schedulingInfo);\n    out.writeLong(finishTime);\n    out.writeBoolean(isRetired);\n    Text.writeString(out, historyFile);\n    Text.writeString(out, jobName);\n    Text.writeString(out, trackingUrl);\n    Text.writeString(out, jobFile);\n\n    // Serialize the job\u0027s ACLs\n    out.writeInt(jobACLs.size());\n    for (Entry\u003cJobACL, AccessControlList\u003e entry : jobACLs.entrySet()) {\n      WritableUtils.writeEnum(out, entry.getKey());\n      entry.getValue().write(out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    jobid.write(out);\n    out.writeFloat(setupProgress);\n    out.writeFloat(mapProgress);\n    out.writeFloat(reduceProgress);\n    out.writeFloat(cleanupProgress);\n    WritableUtils.writeEnum(out, runState);\n    out.writeLong(startTime);\n    Text.writeString(out, user);\n    WritableUtils.writeEnum(out, priority);\n    Text.writeString(out, schedulingInfo);\n    out.writeLong(finishTime);\n    out.writeBoolean(isRetired);\n    Text.writeString(out, historyFile);\n    Text.writeString(out, jobName);\n    Text.writeString(out, trackingUrl);\n    Text.writeString(out, jobFile);\n\n    // Serialize the job\u0027s ACLs\n    out.writeInt(jobACLs.size());\n    for (Entry\u003cJobACL, AccessControlList\u003e entry : jobACLs.entrySet()) {\n      WritableUtils.writeEnum(out, entry.getKey());\n      entry.getValue().write(out);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/JobStatus.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobStatus.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,25 @@\n+  public synchronized void write(DataOutput out) throws IOException {\n+    jobid.write(out);\n+    out.writeFloat(setupProgress);\n+    out.writeFloat(mapProgress);\n+    out.writeFloat(reduceProgress);\n+    out.writeFloat(cleanupProgress);\n+    WritableUtils.writeEnum(out, runState);\n+    out.writeLong(startTime);\n+    Text.writeString(out, user);\n+    WritableUtils.writeEnum(out, priority);\n+    Text.writeString(out, schedulingInfo);\n+    out.writeLong(finishTime);\n+    out.writeBoolean(isRetired);\n+    Text.writeString(out, historyFile);\n+    Text.writeString(out, jobName);\n+    Text.writeString(out, trackingUrl);\n+    Text.writeString(out, jobFile);\n+\n+    // Serialize the job\u0027s ACLs\n+    out.writeInt(jobACLs.size());\n+    for (Entry\u003cJobACL, AccessControlList\u003e entry : jobACLs.entrySet()) {\n+      WritableUtils.writeEnum(out, entry.getKey());\n+      entry.getValue().write(out);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void write(DataOutput out) throws IOException {\n    jobid.write(out);\n    out.writeFloat(setupProgress);\n    out.writeFloat(mapProgress);\n    out.writeFloat(reduceProgress);\n    out.writeFloat(cleanupProgress);\n    WritableUtils.writeEnum(out, runState);\n    out.writeLong(startTime);\n    Text.writeString(out, user);\n    WritableUtils.writeEnum(out, priority);\n    Text.writeString(out, schedulingInfo);\n    out.writeLong(finishTime);\n    out.writeBoolean(isRetired);\n    Text.writeString(out, historyFile);\n    Text.writeString(out, jobName);\n    Text.writeString(out, trackingUrl);\n    Text.writeString(out, jobFile);\n\n    // Serialize the job\u0027s ACLs\n    out.writeInt(jobACLs.size());\n    for (Entry\u003cJobACL, AccessControlList\u003e entry : jobACLs.entrySet()) {\n      WritableUtils.writeEnum(out, entry.getKey());\n      entry.getValue().write(out);\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/JobStatus.java"
    }
  }
}