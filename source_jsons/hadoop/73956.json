{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "scheduleIdleScanTask",
  "functionId": "scheduleIdleScanTask",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 3831,
  "functionEndLine": 3854,
  "numCommitsSeen": 162,
  "timeTaken": 4047,
  "changeHistory": [
    "1da81363fac49152ef34d2fcc536935bda0ba990"
  ],
  "changeHistoryShort": {
    "1da81363fac49152ef34d2fcc536935bda0ba990": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1da81363fac49152ef34d2fcc536935bda0ba990": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9955. RPC idle connection closing is extremely inefficient (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542111 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 2:55 PM",
      "commitName": "1da81363fac49152ef34d2fcc536935bda0ba990",
      "commitAuthor": "Daryn Sharp",
      "diff": "@@ -0,0 +1,24 @@\n+    private void scheduleIdleScanTask() {\n+      if (!running) {\n+        return;\n+      }\n+      TimerTask idleScanTask \u003d new TimerTask(){\n+        @Override\n+        public void run() {\n+          if (!running) {\n+            return;\n+          }\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(Thread.currentThread().getName()+\": task running\");\n+          }\n+          try {\n+            closeIdle(false);\n+          } finally {\n+            // explicitly reschedule so next execution occurs relative\n+            // to the end of this scan, not the beginning\n+            scheduleIdleScanTask();\n+          }\n+        }\n+      };\n+      idleScanTimer.schedule(idleScanTask, idleScanInterval);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void scheduleIdleScanTask() {\n      if (!running) {\n        return;\n      }\n      TimerTask idleScanTask \u003d new TimerTask(){\n        @Override\n        public void run() {\n          if (!running) {\n            return;\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(Thread.currentThread().getName()+\": task running\");\n          }\n          try {\n            closeIdle(false);\n          } finally {\n            // explicitly reschedule so next execution occurs relative\n            // to the end of this scan, not the beginning\n            scheduleIdleScanTask();\n          }\n        }\n      };\n      idleScanTimer.schedule(idleScanTask, idleScanInterval);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}