{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShortCircuitCache.java",
  "functionName": "demoteOldEvictableMmaped",
  "functionId": "demoteOldEvictableMmaped___now-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
  "functionStartLine": 518,
  "functionEndLine": 549,
  "numCommitsSeen": 31,
  "timeTaken": 3228,
  "changeHistory": [
    "daa1e147454c3f14704aca904aaae168b47f3de0",
    "607705c488fa5263d851cee578a2d319e6e52ecd",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "c992bcf9c136d3df686655a80e636bb7bb0664da",
    "f93d99990a9a02ce693cd74466c2e5f127c1f560",
    "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be"
  ],
  "changeHistoryShort": {
    "daa1e147454c3f14704aca904aaae168b47f3de0": "Ybodychange",
    "607705c488fa5263d851cee578a2d319e6e52ecd": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "c992bcf9c136d3df686655a80e636bb7bb0664da": "Yfilerename",
    "f93d99990a9a02ce693cd74466c2e5f127c1f560": "Yfilerename",
    "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "daa1e147454c3f14704aca904aaae168b47f3de0": {
      "type": "Ybodychange",
      "commitMessage": "when evictableMmapped or evictable size is zero, do not throw NoSuchElementException\n\nSigned-off-by: sunlisheng \u003csunlisheng@xiaomi.com\u003e\n",
      "commitDate": "24/06/19 5:17 AM",
      "commitName": "daa1e147454c3f14704aca904aaae168b47f3de0",
      "commitAuthor": "sunlisheng",
      "commitDateOld": "13/04/18 9:17 AM",
      "commitNameOld": "e66e287efe2b43e710137a628f03c7df3ebdf498",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 436.83,
      "commitsBetweenForRepo": 809,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,32 @@\n   private int demoteOldEvictableMmaped(long now) {\n     int numDemoted \u003d 0;\n     boolean needMoreSpace \u003d false;\n     Long evictionTimeNs;\n \n-    while (true) {\n-      Object eldestKey;\n-      try {\n-        eldestKey \u003d evictableMmapped.firstKey();\n-      } catch (NoSuchElementException e) {\n-        break;\n-      }\n+    while (!evictableMmapped.isEmpty()) {\n+      Object eldestKey \u003d evictableMmapped.firstKey();\n       evictionTimeNs \u003d (Long)eldestKey;\n       long evictionTimeMs \u003d\n           TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n       if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n         if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n           break;\n         }\n         needMoreSpace \u003d true;\n       }\n       ShortCircuitReplica replica \u003d (ShortCircuitReplica)evictableMmapped.get(\n           eldestKey);\n       if (LOG.isTraceEnabled()) {\n         String rationale \u003d needMoreSpace ? \"because we need more space\" :\n             \"because it\u0027s too old\";\n         LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n             rationale + \": \" +\n             StringUtils.getStackTrace(Thread.currentThread()));\n       }\n       removeEvictable(replica, evictableMmapped);\n       munmap(replica);\n       insertEvictable(evictionTimeNs, replica, evictable);\n       numDemoted++;\n     }\n     return numDemoted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int demoteOldEvictableMmaped(long now) {\n    int numDemoted \u003d 0;\n    boolean needMoreSpace \u003d false;\n    Long evictionTimeNs;\n\n    while (!evictableMmapped.isEmpty()) {\n      Object eldestKey \u003d evictableMmapped.firstKey();\n      evictionTimeNs \u003d (Long)eldestKey;\n      long evictionTimeMs \u003d\n          TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n      if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n        if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n          break;\n        }\n        needMoreSpace \u003d true;\n      }\n      ShortCircuitReplica replica \u003d (ShortCircuitReplica)evictableMmapped.get(\n          eldestKey);\n      if (LOG.isTraceEnabled()) {\n        String rationale \u003d needMoreSpace ? \"because we need more space\" :\n            \"because it\u0027s too old\";\n        LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n            rationale + \": \" +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n      removeEvictable(replica, evictableMmapped);\n      munmap(replica);\n      insertEvictable(evictionTimeNs, replica, evictable);\n      numDemoted++;\n    }\n    return numDemoted;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {}
    },
    "607705c488fa5263d851cee578a2d319e6e52ecd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10690. Optimize insertion/removal of replica in ShortCircuitCache. Contributed by Fenghua Hu.\n",
      "commitDate": "03/10/16 10:53 AM",
      "commitName": "607705c488fa5263d851cee578a2d319e6e52ecd",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "03/10/15 11:38 AM",
      "commitNameOld": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 365.97,
      "commitsBetweenForRepo": 2526,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,37 @@\n   private int demoteOldEvictableMmaped(long now) {\n     int numDemoted \u003d 0;\n     boolean needMoreSpace \u003d false;\n-    Long evictionTimeNs \u003d (long) 0;\n+    Long evictionTimeNs;\n \n     while (true) {\n-      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d\n-          evictableMmapped.ceilingEntry(evictionTimeNs);\n-      if (entry \u003d\u003d null) break;\n-      evictionTimeNs \u003d entry.getKey();\n+      Object eldestKey;\n+      try {\n+        eldestKey \u003d evictableMmapped.firstKey();\n+      } catch (NoSuchElementException e) {\n+        break;\n+      }\n+      evictionTimeNs \u003d (Long)eldestKey;\n       long evictionTimeMs \u003d\n           TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n       if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n         if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n           break;\n         }\n         needMoreSpace \u003d true;\n       }\n-      ShortCircuitReplica replica \u003d entry.getValue();\n+      ShortCircuitReplica replica \u003d (ShortCircuitReplica)evictableMmapped.get(\n+          eldestKey);\n       if (LOG.isTraceEnabled()) {\n         String rationale \u003d needMoreSpace ? \"because we need more space\" :\n             \"because it\u0027s too old\";\n         LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n             rationale + \": \" +\n             StringUtils.getStackTrace(Thread.currentThread()));\n       }\n       removeEvictable(replica, evictableMmapped);\n       munmap(replica);\n       insertEvictable(evictionTimeNs, replica, evictable);\n       numDemoted++;\n     }\n     return numDemoted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int demoteOldEvictableMmaped(long now) {\n    int numDemoted \u003d 0;\n    boolean needMoreSpace \u003d false;\n    Long evictionTimeNs;\n\n    while (true) {\n      Object eldestKey;\n      try {\n        eldestKey \u003d evictableMmapped.firstKey();\n      } catch (NoSuchElementException e) {\n        break;\n      }\n      evictionTimeNs \u003d (Long)eldestKey;\n      long evictionTimeMs \u003d\n          TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n      if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n        if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n          break;\n        }\n        needMoreSpace \u003d true;\n      }\n      ShortCircuitReplica replica \u003d (ShortCircuitReplica)evictableMmapped.get(\n          eldestKey);\n      if (LOG.isTraceEnabled()) {\n        String rationale \u003d needMoreSpace ? \"because we need more space\" :\n            \"because it\u0027s too old\";\n        LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n            rationale + \": \" +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n      removeEvictable(replica, evictableMmapped);\n      munmap(replica);\n      insertEvictable(evictionTimeNs, replica, evictable);\n      numDemoted++;\n    }\n    return numDemoted;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:52 PM",
      "commitNameOld": "39285e6a1978ea5e53bdc1b0aef62421382124a8",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.74,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   private int demoteOldEvictableMmaped(long now) {\n     int numDemoted \u003d 0;\n     boolean needMoreSpace \u003d false;\n-    Long evictionTimeNs \u003d Long.valueOf(0);\n+    Long evictionTimeNs \u003d (long) 0;\n \n     while (true) {\n-      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d \n+      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d\n           evictableMmapped.ceilingEntry(evictionTimeNs);\n       if (entry \u003d\u003d null) break;\n       evictionTimeNs \u003d entry.getKey();\n-      long evictionTimeMs \u003d \n+      long evictionTimeMs \u003d\n           TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n       if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n         if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n           break;\n         }\n         needMoreSpace \u003d true;\n       }\n       ShortCircuitReplica replica \u003d entry.getValue();\n       if (LOG.isTraceEnabled()) {\n-        String rationale \u003d needMoreSpace ? \"because we need more space\" : \n+        String rationale \u003d needMoreSpace ? \"because we need more space\" :\n             \"because it\u0027s too old\";\n         LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n             rationale + \": \" +\n             StringUtils.getStackTrace(Thread.currentThread()));\n       }\n       removeEvictable(replica, evictableMmapped);\n       munmap(replica);\n       insertEvictable(evictionTimeNs, replica, evictable);\n       numDemoted++;\n     }\n     return numDemoted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int demoteOldEvictableMmaped(long now) {\n    int numDemoted \u003d 0;\n    boolean needMoreSpace \u003d false;\n    Long evictionTimeNs \u003d (long) 0;\n\n    while (true) {\n      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d\n          evictableMmapped.ceilingEntry(evictionTimeNs);\n      if (entry \u003d\u003d null) break;\n      evictionTimeNs \u003d entry.getKey();\n      long evictionTimeMs \u003d\n          TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n      if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n        if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n          break;\n        }\n        needMoreSpace \u003d true;\n      }\n      ShortCircuitReplica replica \u003d entry.getValue();\n      if (LOG.isTraceEnabled()) {\n        String rationale \u003d needMoreSpace ? \"because we need more space\" :\n            \"because it\u0027s too old\";\n        LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n            rationale + \": \" +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n      removeEvictable(replica, evictableMmapped);\n      munmap(replica);\n      insertEvictable(evictionTimeNs, replica, evictable);\n      numDemoted++;\n    }\n    return numDemoted;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {}
    },
    "c992bcf9c136d3df686655a80e636bb7bb0664da": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8951. Move the shortcircuit package to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/08/15 2:02 PM",
      "commitName": "c992bcf9c136d3df686655a80e636bb7bb0664da",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/08/15 2:29 PM",
      "commitNameOld": "a4d9acc51d1a977bc333da17780c00c72e8546f1",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int demoteOldEvictableMmaped(long now) {\n    int numDemoted \u003d 0;\n    boolean needMoreSpace \u003d false;\n    Long evictionTimeNs \u003d Long.valueOf(0);\n\n    while (true) {\n      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d \n          evictableMmapped.ceilingEntry(evictionTimeNs);\n      if (entry \u003d\u003d null) break;\n      evictionTimeNs \u003d entry.getKey();\n      long evictionTimeMs \u003d \n          TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n      if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n        if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n          break;\n        }\n        needMoreSpace \u003d true;\n      }\n      ShortCircuitReplica replica \u003d entry.getValue();\n      if (LOG.isTraceEnabled()) {\n        String rationale \u003d needMoreSpace ? \"because we need more space\" : \n            \"because it\u0027s too old\";\n        LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n            rationale + \": \" +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n      removeEvictable(replica, evictableMmapped);\n      munmap(replica);\n      insertEvictable(evictionTimeNs, replica, evictable);\n      numDemoted++;\n    }\n    return numDemoted;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java"
      }
    },
    "f93d99990a9a02ce693cd74466c2e5f127c1f560": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-6167. Relocate the non-public API classes in the hdfs.client package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1583878 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/14 10:09 PM",
      "commitName": "f93d99990a9a02ce693cd74466c2e5f127c1f560",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "01/04/14 6:00 PM",
      "commitNameOld": "5c7cb51775bd3d4a6e3e1bd501b3a8d747733fe3",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int demoteOldEvictableMmaped(long now) {\n    int numDemoted \u003d 0;\n    boolean needMoreSpace \u003d false;\n    Long evictionTimeNs \u003d Long.valueOf(0);\n\n    while (true) {\n      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d \n          evictableMmapped.ceilingEntry(evictionTimeNs);\n      if (entry \u003d\u003d null) break;\n      evictionTimeNs \u003d entry.getKey();\n      long evictionTimeMs \u003d \n          TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n      if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n        if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n          break;\n        }\n        needMoreSpace \u003d true;\n      }\n      ShortCircuitReplica replica \u003d entry.getValue();\n      if (LOG.isTraceEnabled()) {\n        String rationale \u003d needMoreSpace ? \"because we need more space\" : \n            \"because it\u0027s too old\";\n        LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n            rationale + \": \" +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n      removeEvictable(replica, evictableMmapped);\n      munmap(replica);\n      insertEvictable(evictionTimeNs, replica, evictable);\n      numDemoted++;\n    }\n    return numDemoted;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java"
      }
    },
    "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5810. Unify mmap cache and short-circuit file descriptor cache (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1567720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/14 11:08 AM",
      "commitName": "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,33 @@\n+  private int demoteOldEvictableMmaped(long now) {\n+    int numDemoted \u003d 0;\n+    boolean needMoreSpace \u003d false;\n+    Long evictionTimeNs \u003d Long.valueOf(0);\n+\n+    while (true) {\n+      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d \n+          evictableMmapped.ceilingEntry(evictionTimeNs);\n+      if (entry \u003d\u003d null) break;\n+      evictionTimeNs \u003d entry.getKey();\n+      long evictionTimeMs \u003d \n+          TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n+      if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n+        if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n+          break;\n+        }\n+        needMoreSpace \u003d true;\n+      }\n+      ShortCircuitReplica replica \u003d entry.getValue();\n+      if (LOG.isTraceEnabled()) {\n+        String rationale \u003d needMoreSpace ? \"because we need more space\" : \n+            \"because it\u0027s too old\";\n+        LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n+            rationale + \": \" +\n+            StringUtils.getStackTrace(Thread.currentThread()));\n+      }\n+      removeEvictable(replica, evictableMmapped);\n+      munmap(replica);\n+      insertEvictable(evictionTimeNs, replica, evictable);\n+      numDemoted++;\n+    }\n+    return numDemoted;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int demoteOldEvictableMmaped(long now) {\n    int numDemoted \u003d 0;\n    boolean needMoreSpace \u003d false;\n    Long evictionTimeNs \u003d Long.valueOf(0);\n\n    while (true) {\n      Entry\u003cLong, ShortCircuitReplica\u003e entry \u003d \n          evictableMmapped.ceilingEntry(evictionTimeNs);\n      if (entry \u003d\u003d null) break;\n      evictionTimeNs \u003d entry.getKey();\n      long evictionTimeMs \u003d \n          TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS);\n      if (evictionTimeMs + maxEvictableMmapedLifespanMs \u003e\u003d now) {\n        if (evictableMmapped.size() \u003c maxEvictableMmapedSize) {\n          break;\n        }\n        needMoreSpace \u003d true;\n      }\n      ShortCircuitReplica replica \u003d entry.getValue();\n      if (LOG.isTraceEnabled()) {\n        String rationale \u003d needMoreSpace ? \"because we need more space\" : \n            \"because it\u0027s too old\";\n        LOG.trace(\"demoteOldEvictable: demoting \" + replica + \": \" +\n            rationale + \": \" +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n      removeEvictable(replica, evictableMmapped);\n      munmap(replica);\n      insertEvictable(evictionTimeNs, replica, evictable);\n      numDemoted++;\n    }\n    return numDemoted;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java"
    }
  }
}