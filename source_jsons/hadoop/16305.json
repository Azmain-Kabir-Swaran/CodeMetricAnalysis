{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "checkFaultTolerantRetry",
  "functionId": "checkFaultTolerantRetry___method-RemoteMethod(modifiers-final)__src-String(modifiers-final)__ioe-IOException(modifiers-final)__excludeLoc-RemoteLocation(modifiers-final)__locations-List__RemoteLocation__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 335,
  "functionEndLine": 366,
  "numCommitsSeen": 40,
  "timeTaken": 1494,
  "changeHistory": [
    "6c42d4050461ab71c88f123569649793dc53aebd"
  ],
  "changeHistoryShort": {
    "6c42d4050461ab71c88f123569649793dc53aebd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6c42d4050461ab71c88f123569649793dc53aebd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14316. RBF: Support unavailable subclusters for mount points with multiple destinations. Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "6c42d4050461ab71c88f123569649793dc53aebd",
      "commitAuthor": "Ayush Saxena",
      "diff": "@@ -0,0 +1,32 @@\n+  private List\u003cRemoteLocation\u003e checkFaultTolerantRetry(\n+      final RemoteMethod method, final String src, final IOException ioe,\n+      final RemoteLocation excludeLoc, final List\u003cRemoteLocation\u003e locations)\n+          throws IOException {\n+\n+    if (!isUnavailableSubclusterException(ioe)) {\n+      LOG.debug(\"{} exception cannot be retried\",\n+          ioe.getClass().getSimpleName());\n+      throw ioe;\n+    }\n+    if (!rpcServer.isPathFaultTolerant(src)) {\n+      LOG.debug(\"{} does not allow retrying a failed subcluster\", src);\n+      throw ioe;\n+    }\n+\n+    final List\u003cRemoteLocation\u003e newLocations;\n+    if (excludeLoc \u003d\u003d null) {\n+      LOG.error(\"Cannot invoke {} for {}: {}\", method, src, ioe.getMessage());\n+      newLocations \u003d locations;\n+    } else {\n+      LOG.error(\"Cannot invoke {} for {} in {}: {}\",\n+          method, src, excludeLoc, ioe.getMessage());\n+      newLocations \u003d new ArrayList\u003c\u003e();\n+      for (final RemoteLocation loc : locations) {\n+        if (!loc.equals(excludeLoc)) {\n+          newLocations.add(loc);\n+        }\n+      }\n+    }\n+    LOG.info(\"{} allows retrying failed subclusters in {}\", src, newLocations);\n+    return newLocations;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteLocation\u003e checkFaultTolerantRetry(\n      final RemoteMethod method, final String src, final IOException ioe,\n      final RemoteLocation excludeLoc, final List\u003cRemoteLocation\u003e locations)\n          throws IOException {\n\n    if (!isUnavailableSubclusterException(ioe)) {\n      LOG.debug(\"{} exception cannot be retried\",\n          ioe.getClass().getSimpleName());\n      throw ioe;\n    }\n    if (!rpcServer.isPathFaultTolerant(src)) {\n      LOG.debug(\"{} does not allow retrying a failed subcluster\", src);\n      throw ioe;\n    }\n\n    final List\u003cRemoteLocation\u003e newLocations;\n    if (excludeLoc \u003d\u003d null) {\n      LOG.error(\"Cannot invoke {} for {}: {}\", method, src, ioe.getMessage());\n      newLocations \u003d locations;\n    } else {\n      LOG.error(\"Cannot invoke {} for {} in {}: {}\",\n          method, src, excludeLoc, ioe.getMessage());\n      newLocations \u003d new ArrayList\u003c\u003e();\n      for (final RemoteLocation loc : locations) {\n        if (!loc.equals(excludeLoc)) {\n          newLocations.add(loc);\n        }\n      }\n    }\n    LOG.info(\"{} allows retrying failed subclusters in {}\", src, newLocations);\n    return newLocations;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java"
    }
  }
}