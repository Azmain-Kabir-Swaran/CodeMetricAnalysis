{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeviceMappingManager.java",
  "functionName": "getReleasingDevices",
  "functionId": "getReleasingDevices___resourceName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceMappingManager.java",
  "functionStartLine": 289,
  "functionEndLine": 302,
  "numCommitsSeen": 5,
  "timeTaken": 1158,
  "changeHistory": [
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
    "579ef4be063745c5211127eca83a393ceddc8b79"
  ],
  "changeHistoryShort": {
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": "Ybodychange",
    "579ef4be063745c5211127eca83a393ceddc8b79": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9060. [YARN-8851] Phase 1 - Support device isolation and use the Nvidia GPU plugin as an example. Contributed by Zhankun Tang.\n",
      "commitDate": "18/02/19 2:28 AM",
      "commitName": "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/12/18 11:44 AM",
      "commitNameOld": "61bdcb7b2bc3057a8fe2b9dfb2b8154a585eab87",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 67.61,
      "commitsBetweenForRepo": 454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n   private long getReleasingDevices(String resourceName) {\n     long releasingDevices \u003d 0;\n     Map\u003cDevice, ContainerId\u003e used \u003d allUsedDevices.get(resourceName);\n-    Iterator\u003cMap.Entry\u003cDevice, ContainerId\u003e\u003e iter \u003d used.entrySet()\n-        .iterator();\n-    while (iter.hasNext()) {\n-      ContainerId containerId \u003d iter.next().getValue();\n+    for (ContainerId containerId : ImmutableSet.copyOf(used.values())) {\n       Container container \u003d nmContext.getContainers().get(containerId);\n       if (container !\u003d null) {\n         if (container.isContainerInFinalStates()) {\n           releasingDevices \u003d releasingDevices + container.getResource()\n               .getResourceInformation(resourceName).getValue();\n         }\n       }\n     }\n     return releasingDevices;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getReleasingDevices(String resourceName) {\n    long releasingDevices \u003d 0;\n    Map\u003cDevice, ContainerId\u003e used \u003d allUsedDevices.get(resourceName);\n    for (ContainerId containerId : ImmutableSet.copyOf(used.values())) {\n      Container container \u003d nmContext.getContainers().get(containerId);\n      if (container !\u003d null) {\n        if (container.isContainerInFinalStates()) {\n          releasingDevices \u003d releasingDevices + container.getResource()\n              .getResourceInformation(resourceName).getValue();\n        }\n      }\n    }\n    return releasingDevices;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceMappingManager.java",
      "extendedDetails": {}
    },
    "579ef4be063745c5211127eca83a393ceddc8b79": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8882. [YARN-8851] Add a shared device mapping manager (scheduler) for device plugins. (Zhankun Tang via wangda)\n\nChange-Id: I9435136642c3d556971a357bf687f69df90bb45e\n",
      "commitDate": "28/11/18 2:09 PM",
      "commitName": "579ef4be063745c5211127eca83a393ceddc8b79",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,17 @@\n+  private long getReleasingDevices(String resourceName) {\n+    long releasingDevices \u003d 0;\n+    Map\u003cDevice, ContainerId\u003e used \u003d allUsedDevices.get(resourceName);\n+    Iterator\u003cMap.Entry\u003cDevice, ContainerId\u003e\u003e iter \u003d used.entrySet()\n+        .iterator();\n+    while (iter.hasNext()) {\n+      ContainerId containerId \u003d iter.next().getValue();\n+      Container container \u003d nmContext.getContainers().get(containerId);\n+      if (container !\u003d null) {\n+        if (container.isContainerInFinalStates()) {\n+          releasingDevices \u003d releasingDevices + container.getResource()\n+              .getResourceInformation(resourceName).getValue();\n+        }\n+      }\n+    }\n+    return releasingDevices;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long getReleasingDevices(String resourceName) {\n    long releasingDevices \u003d 0;\n    Map\u003cDevice, ContainerId\u003e used \u003d allUsedDevices.get(resourceName);\n    Iterator\u003cMap.Entry\u003cDevice, ContainerId\u003e\u003e iter \u003d used.entrySet()\n        .iterator();\n    while (iter.hasNext()) {\n      ContainerId containerId \u003d iter.next().getValue();\n      Container container \u003d nmContext.getContainers().get(containerId);\n      if (container !\u003d null) {\n        if (container.isContainerInFinalStates()) {\n          releasingDevices \u003d releasingDevices + container.getResource()\n              .getResourceInformation(resourceName).getValue();\n        }\n      }\n    }\n    return releasingDevices;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceMappingManager.java"
    }
  }
}