{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHealthCheckerService.java",
  "functionName": "getLastHealthReportTime",
  "functionId": "getLastHealthReportTime",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
  "functionStartLine": 144,
  "functionEndLine": 148,
  "numCommitsSeen": 9,
  "timeTaken": 4444,
  "changeHistory": [
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
    "46940d92e2b17c627eb17a9d8fc6cec9c3715592",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb"
  ],
  "changeHistoryShort": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "46940d92e2b17c627eb17a9d8fc6cec9c3715592": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
      "commitDate": "15/12/19 8:28 AM",
      "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,5 @@\n-  long getLastHealthReportTime() {\n-    return Collections.max(Arrays.asList(\n-        dirsHandler.getLastDisksCheckTime(),\n-        nodeHealthScriptRunner \u003d\u003d null ? 0 :\n-            nodeHealthScriptRunner.getLastReportedTime(),\n-        nodeHealthExceptionReportTime));\n+  public long getLastHealthReportTime() {\n+    Optional\u003cLong\u003e max \u003d reporters.stream()\n+        .map(HealthReporter::getLastHealthReportTime).max(Long::compareTo);\n+    return max.orElse(0L);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public long getLastHealthReportTime() {\n    Optional\u003cLong\u003e max \u003d reporters.stream()\n        .map(HealthReporter::getLastHealthReportTime).max(Long::compareTo);\n    return max.orElse(0L);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
            "oldMethodName": "getLastHealthReportTime",
            "newMethodName": "getLastHealthReportTime"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,5 @@\n-  long getLastHealthReportTime() {\n-    return Collections.max(Arrays.asList(\n-        dirsHandler.getLastDisksCheckTime(),\n-        nodeHealthScriptRunner \u003d\u003d null ? 0 :\n-            nodeHealthScriptRunner.getLastReportedTime(),\n-        nodeHealthExceptionReportTime));\n+  public long getLastHealthReportTime() {\n+    Optional\u003cLong\u003e max \u003d reporters.stream()\n+        .map(HealthReporter::getLastHealthReportTime).max(Long::compareTo);\n+    return max.orElse(0L);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public long getLastHealthReportTime() {\n    Optional\u003cLong\u003e max \u003d reporters.stream()\n        .map(HealthReporter::getLastHealthReportTime).max(Long::compareTo);\n    return max.orElse(0L);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,5 @@\n-  long getLastHealthReportTime() {\n-    return Collections.max(Arrays.asList(\n-        dirsHandler.getLastDisksCheckTime(),\n-        nodeHealthScriptRunner \u003d\u003d null ? 0 :\n-            nodeHealthScriptRunner.getLastReportedTime(),\n-        nodeHealthExceptionReportTime));\n+  public long getLastHealthReportTime() {\n+    Optional\u003cLong\u003e max \u003d reporters.stream()\n+        .map(HealthReporter::getLastHealthReportTime).max(Long::compareTo);\n+    return max.orElse(0L);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public long getLastHealthReportTime() {\n    Optional\u003cLong\u003e max \u003d reporters.stream()\n        .map(HealthReporter::getLastHealthReportTime).max(Long::compareTo);\n    return max.orElse(0L);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthCheckerService.java",
          "extendedDetails": {}
        }
      ]
    },
    "46940d92e2b17c627eb17a9d8fc6cec9c3715592": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6302. Fail the node if Linux Container Executor is not configured properly\n(Contributed by Miklos Szegedi via Daniel Templeton)\n",
      "commitDate": "19/04/17 12:23 PM",
      "commitName": "46940d92e2b17c627eb17a9d8fc6cec9c3715592",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "04/05/15 3:49 PM",
      "commitNameOld": "71f4de220c74bf2c90630bd0442979d92380d304",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 715.86,
      "commitsBetweenForRepo": 5054,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   long getLastHealthReportTime() {\n-    long diskCheckTime \u003d dirsHandler.getLastDisksCheckTime();\n-    long lastReportTime \u003d (nodeHealthScriptRunner \u003d\u003d null)\n-        ? diskCheckTime\n-        : Math.max(nodeHealthScriptRunner.getLastReportedTime(), diskCheckTime);\n-    return lastReportTime;\n+    return Collections.max(Arrays.asList(\n+        dirsHandler.getLastDisksCheckTime(),\n+        nodeHealthScriptRunner \u003d\u003d null ? 0 :\n+            nodeHealthScriptRunner.getLastReportedTime(),\n+        nodeHealthExceptionReportTime));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  long getLastHealthReportTime() {\n    return Collections.max(Arrays.asList(\n        dirsHandler.getLastDisksCheckTime(),\n        nodeHealthScriptRunner \u003d\u003d null ? 0 :\n            nodeHealthScriptRunner.getLastReportedTime(),\n        nodeHealthExceptionReportTime));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  long getLastHealthReportTime() {\n    long diskCheckTime \u003d dirsHandler.getLastDisksCheckTime();\n    long lastReportTime \u003d (nodeHealthScriptRunner \u003d\u003d null)\n        ? diskCheckTime\n        : Math.max(nodeHealthScriptRunner.getLastReportedTime(), diskCheckTime);\n    return lastReportTime;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,7 @@\n+  long getLastHealthReportTime() {\n+    long diskCheckTime \u003d dirsHandler.getLastDisksCheckTime();\n+    long lastReportTime \u003d (nodeHealthScriptRunner \u003d\u003d null)\n+        ? diskCheckTime\n+        : Math.max(nodeHealthScriptRunner.getLastReportedTime(), diskCheckTime);\n+    return lastReportTime;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  long getLastHealthReportTime() {\n    long diskCheckTime \u003d dirsHandler.getLastDisksCheckTime();\n    long lastReportTime \u003d (nodeHealthScriptRunner \u003d\u003d null)\n        ? diskCheckTime\n        : Math.max(nodeHealthScriptRunner.getLastReportedTime(), diskCheckTime);\n    return lastReportTime;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthCheckerService.java"
    }
  }
}