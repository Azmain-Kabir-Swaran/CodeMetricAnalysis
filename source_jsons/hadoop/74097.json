{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProviderUtils.java",
  "functionName": "nestURIForLocalJavaKeyStoreProvider",
  "functionId": "nestURIForLocalJavaKeyStoreProvider___localFile-URI(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ProviderUtils.java",
  "functionStartLine": 113,
  "functionEndLine": 126,
  "numCommitsSeen": 8,
  "timeTaken": 1019,
  "changeHistory": [
    "2dbc40e6086026ef02747223982aa68f2d328ade"
  ],
  "changeHistoryShort": {
    "2dbc40e6086026ef02747223982aa68f2d328ade": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2dbc40e6086026ef02747223982aa68f2d328ade": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12059. S3Credentials should support use of CredentialProvider. Contributed by Sean Busbey.\n",
      "commitDate": "05/06/15 1:11 PM",
      "commitName": "2dbc40e6086026ef02747223982aa68f2d328ade",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,14 @@\n+  public static URI nestURIForLocalJavaKeyStoreProvider(final URI localFile)\n+      throws URISyntaxException {\n+    if (!(\"file\".equals(localFile.getScheme()))) {\n+      throw new IllegalArgumentException(\"passed URI had a scheme other than \" +\n+          \"file.\");\n+    }\n+    if (localFile.getAuthority() !\u003d null) {\n+      throw new IllegalArgumentException(\"passed URI must not have an \" +\n+          \"authority component. For non-local keystores, please use \" +\n+          JavaKeyStoreProvider.class.getName());\n+    }\n+    return new URI(LocalJavaKeyStoreProvider.SCHEME_NAME,\n+        \"//file\" + localFile.getSchemeSpecificPart(), localFile.getFragment());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static URI nestURIForLocalJavaKeyStoreProvider(final URI localFile)\n      throws URISyntaxException {\n    if (!(\"file\".equals(localFile.getScheme()))) {\n      throw new IllegalArgumentException(\"passed URI had a scheme other than \" +\n          \"file.\");\n    }\n    if (localFile.getAuthority() !\u003d null) {\n      throw new IllegalArgumentException(\"passed URI must not have an \" +\n          \"authority component. For non-local keystores, please use \" +\n          JavaKeyStoreProvider.class.getName());\n    }\n    return new URI(LocalJavaKeyStoreProvider.SCHEME_NAME,\n        \"//file\" + localFile.getSchemeSpecificPart(), localFile.getFragment());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ProviderUtils.java"
    }
  }
}