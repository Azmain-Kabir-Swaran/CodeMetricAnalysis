{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServer.java",
  "functionName": "upgradeService",
  "functionId": "upgradeService___service-Service__ugi-UserGroupInformation(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
  "functionStartLine": 721,
  "functionEndLine": 745,
  "numCommitsSeen": 30,
  "timeTaken": 2722,
  "changeHistory": [
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559",
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "4a7369b09547a78f532af66c763c6994a38b5d68",
    "27d60a16342fd39973d43b61008f54a8815a6237"
  ],
  "changeHistoryShort": {
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559": "Ybodychange",
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6": "Ybodychange",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Ybodychange",
    "27d60a16342fd39973d43b61008f54a8815a6237": "Yintroduced"
  },
  "changeHistoryDetails": {
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9067. YARN Resource Manager is running OOM because of leak of Configuration Object. Contributed by Eric Yang.\n",
      "commitDate": "28/11/18 5:34 PM",
      "commitName": "efc4d91cbeab8a13f6d61cb0e56443adb2d77559",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "12/11/18 4:53 PM",
      "commitNameOld": "4c465f5535054dad2ef0b18128fb115129f6939e",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 16.03,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   private Response upgradeService(Service service,\n       final UserGroupInformation ugi) throws IOException, InterruptedException {\n     ServiceStatus status \u003d new ServiceStatus();\n     ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n       ServiceClient sc \u003d getServiceClient();\n-      sc.init(YARN_CONFIG);\n-      sc.start();\n-      if (service.getState().equals(ServiceState.EXPRESS_UPGRADING)) {\n-        sc.actionUpgradeExpress(service);\n-      } else {\n-        sc.initiateUpgrade(service);\n+      try {\n+        sc.init(YARN_CONFIG);\n+        sc.start();\n+        if (service.getState().equals(ServiceState.EXPRESS_UPGRADING)) {\n+          sc.actionUpgradeExpress(service);\n+        } else {\n+          sc.initiateUpgrade(service);\n+        }\n+      } finally {\n+        sc.close();\n       }\n-      sc.close();\n       return null;\n     });\n     LOG.info(\"Service {} version {} upgrade initialized\", service.getName(),\n         service.getVersion());\n     status.setDiagnostics(\"Service \" + service.getName() +\n         \" version \" + service.getVersion() + \" saved.\");\n     status.setState(ServiceState.ACCEPTED);\n     return formatResponse(Status.ACCEPTED, status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response upgradeService(Service service,\n      final UserGroupInformation ugi) throws IOException, InterruptedException {\n    ServiceStatus status \u003d new ServiceStatus();\n    ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n      ServiceClient sc \u003d getServiceClient();\n      try {\n        sc.init(YARN_CONFIG);\n        sc.start();\n        if (service.getState().equals(ServiceState.EXPRESS_UPGRADING)) {\n          sc.actionUpgradeExpress(service);\n        } else {\n          sc.initiateUpgrade(service);\n        }\n      } finally {\n        sc.close();\n      }\n      return null;\n    });\n    LOG.info(\"Service {} version {} upgrade initialized\", service.getName(),\n        service.getVersion());\n    status.setDiagnostics(\"Service \" + service.getName() +\n        \" version \" + service.getVersion() + \" saved.\");\n    status.setState(ServiceState.ACCEPTED);\n    return formatResponse(Status.ACCEPTED, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {}
    },
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8298.  Added express upgrade for YARN service.\n            Contributed by Chandni Singh\n",
      "commitDate": "21/08/18 4:49 PM",
      "commitName": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/07/18 2:41 PM",
      "commitNameOld": "121865c3f96166e2190ed54b433ebcf8d053b91c",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 36.09,
      "commitsBetweenForRepo": 296,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n   private Response upgradeService(Service service,\n       final UserGroupInformation ugi) throws IOException, InterruptedException {\n     ServiceStatus status \u003d new ServiceStatus();\n     ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n       ServiceClient sc \u003d getServiceClient();\n       sc.init(YARN_CONFIG);\n       sc.start();\n-      sc.initiateUpgrade(service);\n+      if (service.getState().equals(ServiceState.EXPRESS_UPGRADING)) {\n+        sc.actionUpgradeExpress(service);\n+      } else {\n+        sc.initiateUpgrade(service);\n+      }\n       sc.close();\n       return null;\n     });\n     LOG.info(\"Service {} version {} upgrade initialized\", service.getName(),\n         service.getVersion());\n     status.setDiagnostics(\"Service \" + service.getName() +\n         \" version \" + service.getVersion() + \" saved.\");\n     status.setState(ServiceState.ACCEPTED);\n     return formatResponse(Status.ACCEPTED, status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response upgradeService(Service service,\n      final UserGroupInformation ugi) throws IOException, InterruptedException {\n    ServiceStatus status \u003d new ServiceStatus();\n    ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n      ServiceClient sc \u003d getServiceClient();\n      sc.init(YARN_CONFIG);\n      sc.start();\n      if (service.getState().equals(ServiceState.EXPRESS_UPGRADING)) {\n        sc.actionUpgradeExpress(service);\n      } else {\n        sc.initiateUpgrade(service);\n      }\n      sc.close();\n      return null;\n    });\n    LOG.info(\"Service {} version {} upgrade initialized\", service.getName(),\n        service.getVersion());\n    status.setDiagnostics(\"Service \" + service.getName() +\n        \" version \" + service.getVersion() + \" saved.\");\n    status.setState(ServiceState.ACCEPTED);\n    return formatResponse(Status.ACCEPTED, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {}
    },
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Response upgradeService(Service service,\n      final UserGroupInformation ugi) throws IOException, InterruptedException {\n    ServiceStatus status \u003d new ServiceStatus();\n    ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n      ServiceClient sc \u003d getServiceClient();\n      sc.init(YARN_CONFIG);\n      sc.start();\n      sc.initiateUpgrade(service);\n      sc.close();\n      return null;\n    });\n    LOG.info(\"Service {} version {} upgrade initialized\", service.getName(),\n        service.getVersion());\n    status.setDiagnostics(\"Service \" + service.getName() +\n        \" version \" + service.getVersion() + \" saved.\");\n    status.setState(ServiceState.ACCEPTED);\n    return formatResponse(Status.ACCEPTED, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java"
      }
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "10/04/18 2:40 PM",
      "commitNameOld": "d553799030a5a64df328319aceb35734d0b2de20",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 15.97,
      "commitsBetweenForRepo": 622,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   private Response upgradeService(Service service,\n       final UserGroupInformation ugi) throws IOException, InterruptedException {\n     ServiceStatus status \u003d new ServiceStatus();\n     ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n       ServiceClient sc \u003d getServiceClient();\n       sc.init(YARN_CONFIG);\n       sc.start();\n-      sc.actionUpgrade(service);\n+      sc.initiateUpgrade(service);\n       sc.close();\n       return null;\n     });\n-    LOG.info(\"Service {} version {} upgrade initialized\");\n+    LOG.info(\"Service {} version {} upgrade initialized\", service.getName(),\n+        service.getVersion());\n     status.setDiagnostics(\"Service \" + service.getName() +\n         \" version \" + service.getVersion() + \" saved.\");\n     status.setState(ServiceState.ACCEPTED);\n     return formatResponse(Status.ACCEPTED, status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response upgradeService(Service service,\n      final UserGroupInformation ugi) throws IOException, InterruptedException {\n    ServiceStatus status \u003d new ServiceStatus();\n    ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n      ServiceClient sc \u003d getServiceClient();\n      sc.init(YARN_CONFIG);\n      sc.start();\n      sc.initiateUpgrade(service);\n      sc.close();\n      return null;\n    });\n    LOG.info(\"Service {} version {} upgrade initialized\", service.getName(),\n        service.getVersion());\n    status.setDiagnostics(\"Service \" + service.getName() +\n        \" version \" + service.getVersion() + \" saved.\");\n    status.setState(ServiceState.ACCEPTED);\n    return formatResponse(Status.ACCEPTED, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {}
    },
    "27d60a16342fd39973d43b61008f54a8815a6237": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8018.  Added support for initiating yarn service upgrade.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/03/18 3:46 PM",
      "commitName": "27d60a16342fd39973d43b61008f54a8815a6237",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,17 @@\n+  private Response upgradeService(Service service,\n+      final UserGroupInformation ugi) throws IOException, InterruptedException {\n+    ServiceStatus status \u003d new ServiceStatus();\n+    ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n+      ServiceClient sc \u003d getServiceClient();\n+      sc.init(YARN_CONFIG);\n+      sc.start();\n+      sc.actionUpgrade(service);\n+      sc.close();\n+      return null;\n+    });\n+    LOG.info(\"Service {} version {} upgrade initialized\");\n+    status.setDiagnostics(\"Service \" + service.getName() +\n+        \" version \" + service.getVersion() + \" saved.\");\n+    status.setState(ServiceState.ACCEPTED);\n+    return formatResponse(Status.ACCEPTED, status);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Response upgradeService(Service service,\n      final UserGroupInformation ugi) throws IOException, InterruptedException {\n    ServiceStatus status \u003d new ServiceStatus();\n    ugi.doAs((PrivilegedExceptionAction\u003cVoid\u003e) () -\u003e {\n      ServiceClient sc \u003d getServiceClient();\n      sc.init(YARN_CONFIG);\n      sc.start();\n      sc.actionUpgrade(service);\n      sc.close();\n      return null;\n    });\n    LOG.info(\"Service {} version {} upgrade initialized\");\n    status.setDiagnostics(\"Service \" + service.getName() +\n        \" version \" + service.getVersion() + \" saved.\");\n    status.setState(ServiceState.ACCEPTED);\n    return formatResponse(Status.ACCEPTED, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java"
    }
  }
}