{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServerWebApp.java",
  "functionName": "addFilters",
  "functionId": "addFilters___conf-org.apache.hadoop.conf.Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServerWebApp.java",
  "functionStartLine": 101,
  "functionEndLine": 123,
  "numCommitsSeen": 4,
  "timeTaken": 2090,
  "changeHistory": [
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "40ab068eabe50875449d601471619a4e82fff86d"
  ],
  "changeHistoryShort": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void addFilters(org.apache.hadoop.conf.Configuration conf) {\n    // Always load pseudo authentication filter to parse \"user.name\" in an URL\n    // to identify a HTTP request\u0027s user.\n    boolean hasHadoopAuthFilterInitializer \u003d false;\n    String filterInitializerConfKey \u003d \"hadoop.http.filter.initializers\";\n    Class\u003c?\u003e[] initializersClasses \u003d\n        conf.getClasses(filterInitializerConfKey);\n    List\u003cString\u003e targets \u003d new ArrayList\u003cString\u003e();\n    if (initializersClasses !\u003d null) {\n      for (Class\u003c?\u003e initializer : initializersClasses) {\n        if (initializer.getName().equals(\n            AuthenticationFilterInitializer.class.getName())) {\n          hasHadoopAuthFilterInitializer \u003d true;\n          break;\n        }\n        targets.add(initializer.getName());\n      }\n    }\n    if (!hasHadoopAuthFilterInitializer) {\n      targets.add(AuthenticationFilterInitializer.class.getName());\n      conf.set(filterInitializerConfKey, StringUtils.join(\",\", targets));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServerWebApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServerWebApp.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServerWebApp.java"
      }
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,23 @@\n+  private void addFilters(org.apache.hadoop.conf.Configuration conf) {\n+    // Always load pseudo authentication filter to parse \"user.name\" in an URL\n+    // to identify a HTTP request\u0027s user.\n+    boolean hasHadoopAuthFilterInitializer \u003d false;\n+    String filterInitializerConfKey \u003d \"hadoop.http.filter.initializers\";\n+    Class\u003c?\u003e[] initializersClasses \u003d\n+        conf.getClasses(filterInitializerConfKey);\n+    List\u003cString\u003e targets \u003d new ArrayList\u003cString\u003e();\n+    if (initializersClasses !\u003d null) {\n+      for (Class\u003c?\u003e initializer : initializersClasses) {\n+        if (initializer.getName().equals(\n+            AuthenticationFilterInitializer.class.getName())) {\n+          hasHadoopAuthFilterInitializer \u003d true;\n+          break;\n+        }\n+        targets.add(initializer.getName());\n+      }\n+    }\n+    if (!hasHadoopAuthFilterInitializer) {\n+      targets.add(AuthenticationFilterInitializer.class.getName());\n+      conf.set(filterInitializerConfKey, StringUtils.join(\",\", targets));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addFilters(org.apache.hadoop.conf.Configuration conf) {\n    // Always load pseudo authentication filter to parse \"user.name\" in an URL\n    // to identify a HTTP request\u0027s user.\n    boolean hasHadoopAuthFilterInitializer \u003d false;\n    String filterInitializerConfKey \u003d \"hadoop.http.filter.initializers\";\n    Class\u003c?\u003e[] initializersClasses \u003d\n        conf.getClasses(filterInitializerConfKey);\n    List\u003cString\u003e targets \u003d new ArrayList\u003cString\u003e();\n    if (initializersClasses !\u003d null) {\n      for (Class\u003c?\u003e initializer : initializersClasses) {\n        if (initializer.getName().equals(\n            AuthenticationFilterInitializer.class.getName())) {\n          hasHadoopAuthFilterInitializer \u003d true;\n          break;\n        }\n        targets.add(initializer.getName());\n      }\n    }\n    if (!hasHadoopAuthFilterInitializer) {\n      targets.add(AuthenticationFilterInitializer.class.getName());\n      conf.set(filterInitializerConfKey, StringUtils.join(\",\", targets));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServerWebApp.java"
    }
  }
}