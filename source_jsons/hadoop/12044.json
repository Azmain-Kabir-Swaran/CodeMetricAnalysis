{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "onFailLazyPersist",
  "functionId": "onFailLazyPersist___bpId-String__blockId-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 3109,
  "functionEndLine": 3116,
  "numCommitsSeen": 197,
  "timeTaken": 5211,
  "changeHistory": [
    "1efd9c98258fbb973d2058dcf0850042e53bd02f"
  ],
  "changeHistoryShort": {
    "1efd9c98258fbb973d2058dcf0850042e53bd02f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1efd9c98258fbb973d2058dcf0850042e53bd02f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7112. LazyWriter should use either async IO or one thread per physical disk. Contributed by Xiaoyu Yao.\n",
      "commitDate": "07/10/14 8:25 PM",
      "commitName": "1efd9c98258fbb973d2058dcf0850042e53bd02f",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,8 @@\n+  public void onFailLazyPersist(String bpId, long blockId) {\n+    RamDiskReplica block \u003d null;\n+    block \u003d ramDiskReplicaTracker.getReplica(bpId, blockId);\n+    if (block !\u003d null) {\n+      LOG.warn(\"Failed to save replica \" + block + \". re-enqueueing it.\");\n+      ramDiskReplicaTracker.reenqueueReplicaNotPersisted(block);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void onFailLazyPersist(String bpId, long blockId) {\n    RamDiskReplica block \u003d null;\n    block \u003d ramDiskReplicaTracker.getReplica(bpId, blockId);\n    if (block !\u003d null) {\n      LOG.warn(\"Failed to save replica \" + block + \". re-enqueueing it.\");\n      ramDiskReplicaTracker.reenqueueReplicaNotPersisted(block);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java"
    }
  }
}