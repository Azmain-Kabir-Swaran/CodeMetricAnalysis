{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerUtils.java",
  "functionName": "createOpportunisticRmContainer",
  "functionId": "createOpportunisticRmContainer___rmContext-RMContext__container-Container__isRemotelyAllocated-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java",
  "functionStartLine": 587,
  "functionEndLine": 604,
  "numCommitsSeen": 51,
  "timeTaken": 2986,
  "changeHistory": [
    "cfe89e6f963ba25b5fff1ce48cad36d74b3c789c",
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4"
  ],
  "changeHistoryShort": {
    "cfe89e6f963ba25b5fff1ce48cad36d74b3c789c": "Ybodychange",
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cfe89e6f963ba25b5fff1ce48cad36d74b3c789c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9164. Shutdown NM may cause NPE when opportunistic container scheduling is enabled. Contributed by lujie.\n",
      "commitDate": "03/01/19 7:56 AM",
      "commitName": "cfe89e6f963ba25b5fff1ce48cad36d74b3c789c",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "29/09/18 2:47 AM",
      "commitNameOld": "fd6be5898ad1a650e3bceacb8169a53520da57e5",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 96.26,
      "commitsBetweenForRepo": 725,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n   public static RMContainer createOpportunisticRmContainer(RMContext rmContext,\n       Container container, boolean isRemotelyAllocated) {\n+    SchedulerNode node \u003d ((AbstractYarnScheduler) rmContext.getScheduler())\n+        .getNode(container.getNodeId());\n+    if (node \u003d\u003d null) {\n+      return null;\n+    }\n     SchedulerApplicationAttempt appAttempt \u003d\n         ((AbstractYarnScheduler) rmContext.getScheduler())\n             .getCurrentAttemptForContainer(container.getId());\n     RMContainer rmContainer \u003d new RMContainerImpl(container,\n         SchedulerRequestKey.extractFrom(container),\n         appAttempt.getApplicationAttemptId(), container.getNodeId(),\n         appAttempt.getUser(), rmContext, isRemotelyAllocated);\n     appAttempt.addRMContainer(container.getId(), rmContainer);\n-    ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(\n-        container.getNodeId()).allocateContainer(rmContainer);\n+    node.allocateContainer(rmContainer);\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RMContainer createOpportunisticRmContainer(RMContext rmContext,\n      Container container, boolean isRemotelyAllocated) {\n    SchedulerNode node \u003d ((AbstractYarnScheduler) rmContext.getScheduler())\n        .getNode(container.getNodeId());\n    if (node \u003d\u003d null) {\n      return null;\n    }\n    SchedulerApplicationAttempt appAttempt \u003d\n        ((AbstractYarnScheduler) rmContext.getScheduler())\n            .getCurrentAttemptForContainer(container.getId());\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container),\n        appAttempt.getApplicationAttemptId(), container.getNodeId(),\n        appAttempt.getUser(), rmContext, isRemotelyAllocated);\n    appAttempt.addRMContainer(container.getId(), rmContainer);\n    node.allocateContainer(rmContainer);\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java",
      "extendedDetails": {}
    },
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5959. RM changes to support change of container ExecutionType. (Arun Suresh via wangda)\n",
      "commitDate": "05/01/17 10:31 AM",
      "commitName": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,14 @@\n+  public static RMContainer createOpportunisticRmContainer(RMContext rmContext,\n+      Container container, boolean isRemotelyAllocated) {\n+    SchedulerApplicationAttempt appAttempt \u003d\n+        ((AbstractYarnScheduler) rmContext.getScheduler())\n+            .getCurrentAttemptForContainer(container.getId());\n+    RMContainer rmContainer \u003d new RMContainerImpl(container,\n+        SchedulerRequestKey.extractFrom(container),\n+        appAttempt.getApplicationAttemptId(), container.getNodeId(),\n+        appAttempt.getUser(), rmContext, isRemotelyAllocated);\n+    appAttempt.addRMContainer(container.getId(), rmContainer);\n+    ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(\n+        container.getNodeId()).allocateContainer(rmContainer);\n+    return rmContainer;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static RMContainer createOpportunisticRmContainer(RMContext rmContext,\n      Container container, boolean isRemotelyAllocated) {\n    SchedulerApplicationAttempt appAttempt \u003d\n        ((AbstractYarnScheduler) rmContext.getScheduler())\n            .getCurrentAttemptForContainer(container.getId());\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container),\n        appAttempt.getApplicationAttemptId(), container.getNodeId(),\n        appAttempt.getUser(), rmContext, isRemotelyAllocated);\n    appAttempt.addRMContainer(container.getId(), rmContainer);\n    ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(\n        container.getNodeId()).allocateContainer(rmContainer);\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java"
    }
  }
}