{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTopology.java",
  "functionName": "normalizeNetworkLocationPath",
  "functionId": "normalizeNetworkLocationPath___path-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
  "functionStartLine": 844,
  "functionEndLine": 859,
  "numCommitsSeen": 49,
  "timeTaken": 970,
  "changeHistory": [
    "c73e08a6dad46cad14b38a4a586a5cda1622b206"
  ],
  "changeHistoryShort": {
    "c73e08a6dad46cad14b38a4a586a5cda1622b206": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c73e08a6dad46cad14b38a4a586a5cda1622b206": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10206. Datanodes not sorted properly by distance when the reader isn\u0027t a datanode. (Nandakumar via mingma)\n",
      "commitDate": "07/12/16 8:26 AM",
      "commitName": "c73e08a6dad46cad14b38a4a586a5cda1622b206",
      "commitAuthor": "Ming Ma",
      "diff": "@@ -0,0 +1,16 @@\n+  private static String normalizeNetworkLocationPath(String path) {\n+    if (path \u003d\u003d null || path.length() \u003d\u003d 0) {\n+      return ROOT;\n+    }\n+\n+    if (path.charAt(0) !\u003d PATH_SEPARATOR) {\n+      throw new IllegalArgumentException(\"Network Location\"\n+          + \"path doesn\u0027t start with \" +PATH_SEPARATOR+ \": \"+path);\n+    }\n+\n+    int len \u003d path.length();\n+    if (path.charAt(len-1) \u003d\u003d PATH_SEPARATOR) {\n+      return path.substring(0, len-1);\n+    }\n+    return path;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String normalizeNetworkLocationPath(String path) {\n    if (path \u003d\u003d null || path.length() \u003d\u003d 0) {\n      return ROOT;\n    }\n\n    if (path.charAt(0) !\u003d PATH_SEPARATOR) {\n      throw new IllegalArgumentException(\"Network Location\"\n          + \"path doesn\u0027t start with \" +PATH_SEPARATOR+ \": \"+path);\n    }\n\n    int len \u003d path.length();\n    if (path.charAt(len-1) \u003d\u003d PATH_SEPARATOR) {\n      return path.substring(0, len-1);\n    }\n    return path;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java"
    }
  }
}