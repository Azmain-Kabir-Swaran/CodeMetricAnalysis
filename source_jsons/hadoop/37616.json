{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenRenewer.java",
  "functionName": "renewToken",
  "functionId": "renewToken___dttr-DelegationTokenToRenew(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
  "functionStartLine": 646,
  "functionEndLine": 663,
  "numCommitsSeen": 37,
  "timeTaken": 2094,
  "changeHistory": [
    "f10ebc67f57a4a2e3cc916c41154ab9b6a4635c9",
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54",
    "cd975d4b647acaf818cbb4f67656bcf19785da15",
    "a806a2aac6c955e35b930d677523637bf016ff7a"
  ],
  "changeHistoryShort": {
    "f10ebc67f57a4a2e3cc916c41154ab9b6a4635c9": "Ybodychange",
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca": "Ybodychange",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": "Ybodychange",
    "cd975d4b647acaf818cbb4f67656bcf19785da15": "Ymodifierchange",
    "a806a2aac6c955e35b930d677523637bf016ff7a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f10ebc67f57a4a2e3cc916c41154ab9b6a4635c9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5098. Fixed ResourceManager\u0027s DelegationTokenRenewer to replace expiring system-tokens if RM stops and only restarts after a long time. Contributed by Jian He.\n",
      "commitDate": "03/06/16 1:00 PM",
      "commitName": "f10ebc67f57a4a2e3cc916c41154ab9b6a4635c9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/05/16 9:50 PM",
      "commitNameOld": "47c41e7ac7e6b905a58550f8899f629c1cf8b138",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 27.63,
      "commitsBetweenForRepo": 183,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   protected void renewToken(final DelegationTokenToRenew dttr)\n       throws IOException {\n     // need to use doAs so that http can find the kerberos tgt\n     // NOTE: token renewers should be responsible for the correct UGI!\n     try {\n       dttr.expirationDate \u003d\n           UserGroupInformation.getLoginUser().doAs(\n             new PrivilegedExceptionAction\u003cLong\u003e() {\n               @Override\n               public Long run() throws Exception {\n                 return dttr.token.renew(dttr.conf);\n               }\n             });\n     } catch (InterruptedException e) {\n       throw new IOException(e);\n     }\n-    LOG.info(\"Renewed delegation-token\u003d [\" + dttr + \"], for \"\n-        + dttr.referringAppIds);\n+    LOG.info(\"Renewed delegation-token\u003d [\" + dttr + \"]\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renewToken(final DelegationTokenToRenew dttr)\n      throws IOException {\n    // need to use doAs so that http can find the kerberos tgt\n    // NOTE: token renewers should be responsible for the correct UGI!\n    try {\n      dttr.expirationDate \u003d\n          UserGroupInformation.getLoginUser().doAs(\n            new PrivilegedExceptionAction\u003cLong\u003e() {\n              @Override\n              public Long run() throws Exception {\n                return dttr.token.renew(dttr.conf);\n              }\n            });\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    }\n    LOG.info(\"Renewed delegation-token\u003d [\" + dttr + \"]\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3055. Fixed ResourceManager\u0027s DelegationTokenRenewer to not stop token renewal of applications part of a bigger workflow. Contributed by Daryn Sharp.\n",
      "commitDate": "09/04/15 1:08 PM",
      "commitName": "9c5911294e0ba71aefe4763731b0e780cde9d0ca",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/03/15 10:45 AM",
      "commitNameOld": "6ca1f12024fd7cec7b01df0f039ca59f3f365dc1",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 17.1,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected void renewToken(final DelegationTokenToRenew dttr)\n       throws IOException {\n     // need to use doAs so that http can find the kerberos tgt\n     // NOTE: token renewers should be responsible for the correct UGI!\n     try {\n       dttr.expirationDate \u003d\n           UserGroupInformation.getLoginUser().doAs(\n             new PrivilegedExceptionAction\u003cLong\u003e() {\n               @Override\n               public Long run() throws Exception {\n                 return dttr.token.renew(dttr.conf);\n               }\n             });\n     } catch (InterruptedException e) {\n       throw new IOException(e);\n     }\n     LOG.info(\"Renewed delegation-token\u003d [\" + dttr + \"], for \"\n-        + dttr.applicationId);\n+        + dttr.referringAppIds);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renewToken(final DelegationTokenToRenew dttr)\n      throws IOException {\n    // need to use doAs so that http can find the kerberos tgt\n    // NOTE: token renewers should be responsible for the correct UGI!\n    try {\n      dttr.expirationDate \u003d\n          UserGroupInformation.getLoginUser().doAs(\n            new PrivilegedExceptionAction\u003cLong\u003e() {\n              @Override\n              public Long run() throws Exception {\n                return dttr.token.renew(dttr.conf);\n              }\n            });\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    }\n    LOG.info(\"Renewed delegation-token\u003d [\" + dttr + \"], for \"\n        + dttr.referringAppIds);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2704. Changed ResourceManager to optionally obtain tokens itself for the sake of localization and log-aggregation for long-running services. Contributed by Jian He.\n",
      "commitDate": "27/10/14 3:49 PM",
      "commitName": "a16d022ca4313a41425c8e97841c841a2d6f2f54",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/08/14 11:16 AM",
      "commitNameOld": "3de66011c2e80d7c458a67f80042af986fcc677d",
      "commitAuthorOld": "Hitesh Shah",
      "daysBetweenCommits": 59.19,
      "commitsBetweenForRepo": 586,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   protected void renewToken(final DelegationTokenToRenew dttr)\n       throws IOException {\n     // need to use doAs so that http can find the kerberos tgt\n     // NOTE: token renewers should be responsible for the correct UGI!\n     try {\n-      dttr.expirationDate \u003d UserGroupInformation.getLoginUser().doAs(\n-          new PrivilegedExceptionAction\u003cLong\u003e(){          \n-            @Override\n-            public Long run() throws Exception {\n-              return dttr.token.renew(dttr.conf);\n-            }\n-          });\n+      dttr.expirationDate \u003d\n+          UserGroupInformation.getLoginUser().doAs(\n+            new PrivilegedExceptionAction\u003cLong\u003e() {\n+              @Override\n+              public Long run() throws Exception {\n+                return dttr.token.renew(dttr.conf);\n+              }\n+            });\n     } catch (InterruptedException e) {\n       throw new IOException(e);\n     }\n+    LOG.info(\"Renewed delegation-token\u003d [\" + dttr + \"], for \"\n+        + dttr.applicationId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renewToken(final DelegationTokenToRenew dttr)\n      throws IOException {\n    // need to use doAs so that http can find the kerberos tgt\n    // NOTE: token renewers should be responsible for the correct UGI!\n    try {\n      dttr.expirationDate \u003d\n          UserGroupInformation.getLoginUser().doAs(\n            new PrivilegedExceptionAction\u003cLong\u003e() {\n              @Override\n              public Long run() throws Exception {\n                return dttr.token.renew(dttr.conf);\n              }\n            });\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    }\n    LOG.info(\"Renewed delegation-token\u003d [\" + dttr + \"], for \"\n        + dttr.applicationId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "cd975d4b647acaf818cbb4f67656bcf19785da15": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-581. Added a test to verify that app delegation tokens are restored after RM restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1471187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/13 3:49 PM",
      "commitName": "cd975d4b647acaf818cbb4f67656bcf19785da15",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/02/13 4:26 PM",
      "commitNameOld": "5d679c4f43494eb4508edebc6cc5aa4ddc5a63d2",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 77.93,
      "commitsBetweenForRepo": 381,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  private void renewToken(final DelegationTokenToRenew dttr)\n+  protected void renewToken(final DelegationTokenToRenew dttr)\n       throws IOException {\n     // need to use doAs so that http can find the kerberos tgt\n     // NOTE: token renewers should be responsible for the correct UGI!\n     try {\n       dttr.expirationDate \u003d UserGroupInformation.getLoginUser().doAs(\n           new PrivilegedExceptionAction\u003cLong\u003e(){          \n             @Override\n             public Long run() throws Exception {\n               return dttr.token.renew(dttr.conf);\n             }\n           });\n     } catch (InterruptedException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void renewToken(final DelegationTokenToRenew dttr)\n      throws IOException {\n    // need to use doAs so that http can find the kerberos tgt\n    // NOTE: token renewers should be responsible for the correct UGI!\n    try {\n      dttr.expirationDate \u003d UserGroupInformation.getLoginUser().doAs(\n          new PrivilegedExceptionAction\u003cLong\u003e(){          \n            @Override\n            public Long run() throws Exception {\n              return dttr.token.renew(dttr.conf);\n            }\n          });\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "a806a2aac6c955e35b930d677523637bf016ff7a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-280. RM does not reject app submission with invalid tokens (Daryn Sharp via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1425079 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/12/12 10:49 AM",
      "commitName": "a806a2aac6c955e35b930d677523637bf016ff7a",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,16 @@\n+  private void renewToken(final DelegationTokenToRenew dttr)\n+      throws IOException {\n+    // need to use doAs so that http can find the kerberos tgt\n+    // NOTE: token renewers should be responsible for the correct UGI!\n+    try {\n+      dttr.expirationDate \u003d UserGroupInformation.getLoginUser().doAs(\n+          new PrivilegedExceptionAction\u003cLong\u003e(){          \n+            @Override\n+            public Long run() throws Exception {\n+              return dttr.token.renew(dttr.conf);\n+            }\n+          });\n+    } catch (InterruptedException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void renewToken(final DelegationTokenToRenew dttr)\n      throws IOException {\n    // need to use doAs so that http can find the kerberos tgt\n    // NOTE: token renewers should be responsible for the correct UGI!\n    try {\n      dttr.expirationDate \u003d UserGroupInformation.getLoginUser().doAs(\n          new PrivilegedExceptionAction\u003cLong\u003e(){          \n            @Override\n            public Long run() throws Exception {\n              return dttr.token.renew(dttr.conf);\n            }\n          });\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java"
    }
  }
}