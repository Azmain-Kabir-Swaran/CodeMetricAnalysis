{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SynthJob.java",
  "functionName": "getTaskAttemptInfo",
  "functionId": "getTaskAttemptInfo___taskType-TaskType__taskNumber-int__taskAttemptNumber-int",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthJob.java",
  "functionStartLine": 342,
  "functionEndLine": 365,
  "numCommitsSeen": 4,
  "timeTaken": 1086,
  "changeHistory": [
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b"
  ],
  "changeHistoryShort": {
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf": "Ybodychange",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7732. Support Generic AM Simulator from SynthGenerator. (Contributed by Young Chen via curino)\n",
      "commitDate": "20/02/18 5:00 PM",
      "commitName": "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "20/04/17 9:54 PM",
      "commitNameOld": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 305.84,
      "commitsBetweenForRepo": 2051,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public TaskAttemptInfo getTaskAttemptInfo(TaskType taskType, int taskNumber,\n       int taskAttemptNumber) {\n     switch (taskType) {\n     case MAP:\n       return new MapTaskAttemptInfo(State.SUCCEEDED,\n-          getTaskInfo(taskType, taskNumber), mapRuntime[taskNumber], null);\n-\n+          getTaskInfo(taskType, taskNumber),\n+          taskByType.get(MRAMSimulator.MAP_TYPE).get(taskNumber).time,\n+          null);\n     case REDUCE:\n       // We assume uniform split between pull/sort/reduce\n       // aligned with naive progress reporting assumptions\n       return new ReduceTaskAttemptInfo(State.SUCCEEDED,\n           getTaskInfo(taskType, taskNumber),\n-          (long) Math.round((reduceRuntime[taskNumber] / 3)),\n-          (long) Math.round((reduceRuntime[taskNumber] / 3)),\n-          (long) Math.round((reduceRuntime[taskNumber] / 3)), null);\n-\n+          taskByType.get(MRAMSimulator.MAP_TYPE)\n+              .get(taskNumber).time / 3,\n+          taskByType.get(MRAMSimulator.MAP_TYPE)\n+              .get(taskNumber).time / 3,\n+          taskByType.get(MRAMSimulator.MAP_TYPE)\n+              .get(taskNumber).time / 3, null);\n     default:\n       break;\n     }\n     throw new UnsupportedOperationException();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptInfo getTaskAttemptInfo(TaskType taskType, int taskNumber,\n      int taskAttemptNumber) {\n    switch (taskType) {\n    case MAP:\n      return new MapTaskAttemptInfo(State.SUCCEEDED,\n          getTaskInfo(taskType, taskNumber),\n          taskByType.get(MRAMSimulator.MAP_TYPE).get(taskNumber).time,\n          null);\n    case REDUCE:\n      // We assume uniform split between pull/sort/reduce\n      // aligned with naive progress reporting assumptions\n      return new ReduceTaskAttemptInfo(State.SUCCEEDED,\n          getTaskInfo(taskType, taskNumber),\n          taskByType.get(MRAMSimulator.MAP_TYPE)\n              .get(taskNumber).time / 3,\n          taskByType.get(MRAMSimulator.MAP_TYPE)\n              .get(taskNumber).time / 3,\n          taskByType.get(MRAMSimulator.MAP_TYPE)\n              .get(taskNumber).time / 3, null);\n    default:\n      break;\n    }\n    throw new UnsupportedOperationException();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthJob.java",
      "extendedDetails": {}
    },
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,21 @@\n+  public TaskAttemptInfo getTaskAttemptInfo(TaskType taskType, int taskNumber,\n+      int taskAttemptNumber) {\n+    switch (taskType) {\n+    case MAP:\n+      return new MapTaskAttemptInfo(State.SUCCEEDED,\n+          getTaskInfo(taskType, taskNumber), mapRuntime[taskNumber], null);\n+\n+    case REDUCE:\n+      // We assume uniform split between pull/sort/reduce\n+      // aligned with naive progress reporting assumptions\n+      return new ReduceTaskAttemptInfo(State.SUCCEEDED,\n+          getTaskInfo(taskType, taskNumber),\n+          (long) Math.round((reduceRuntime[taskNumber] / 3)),\n+          (long) Math.round((reduceRuntime[taskNumber] / 3)),\n+          (long) Math.round((reduceRuntime[taskNumber] / 3)), null);\n+\n+    default:\n+      break;\n+    }\n+    throw new UnsupportedOperationException();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptInfo getTaskAttemptInfo(TaskType taskType, int taskNumber,\n      int taskAttemptNumber) {\n    switch (taskType) {\n    case MAP:\n      return new MapTaskAttemptInfo(State.SUCCEEDED,\n          getTaskInfo(taskType, taskNumber), mapRuntime[taskNumber], null);\n\n    case REDUCE:\n      // We assume uniform split between pull/sort/reduce\n      // aligned with naive progress reporting assumptions\n      return new ReduceTaskAttemptInfo(State.SUCCEEDED,\n          getTaskInfo(taskType, taskNumber),\n          (long) Math.round((reduceRuntime[taskNumber] / 3)),\n          (long) Math.round((reduceRuntime[taskNumber] / 3)),\n          (long) Math.round((reduceRuntime[taskNumber] / 3)), null);\n\n    default:\n      break;\n    }\n    throw new UnsupportedOperationException();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/synthetic/SynthJob.java"
    }
  }
}