{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TargetApplicationsNamespace.java",
  "functionName": "normalize",
  "functionId": "normalize___namespaceStr-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/TargetApplicationsNamespace.java",
  "functionStartLine": 303,
  "functionEndLine": 325,
  "numCommitsSeen": 3,
  "timeTaken": 3011,
  "changeHistory": [
    "7853ec8d2fb8731b7f7c28fd87491a0a2d47967e",
    "a08921ca6cb1dad98935808c8f474b654f861263",
    "1054b48c27f3158110bd0512afecded36eecb8ad"
  ],
  "changeHistoryShort": {
    "7853ec8d2fb8731b7f7c28fd87491a0a2d47967e": "Yfilerename",
    "a08921ca6cb1dad98935808c8f474b654f861263": "Ymultichange(Yfilerename,Yexceptionschange,Ybodychange)",
    "1054b48c27f3158110bd0512afecded36eecb8ad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7853ec8d2fb8731b7f7c28fd87491a0a2d47967e": {
      "type": "Yfilerename",
      "commitMessage": "YARN-8013. Support application tags when defining application namespaces for placement constraints. Contributed by Weiwei Yang.\n",
      "commitDate": "04/04/18 10:51 AM",
      "commitName": "7853ec8d2fb8731b7f7c28fd87491a0a2d47967e",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "04/04/18 9:43 AM",
      "commitNameOld": "42cd367c9308b944bc71de6c07b6c3f028a0d874",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static List\u003cString\u003e normalize(String namespaceStr)\n      throws InvalidAllocationTagsQueryException {\n    List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n    if (namespaceStr \u003d\u003d null) {\n      return result;\n    }\n\n    String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n    for (String str : nsValues) {\n      if (!Strings.isNullOrEmpty(str)) {\n        result.add(str);\n      }\n    }\n\n    // Currently we only allow 1 or 2 values for a namespace string\n    if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n      throw new InvalidAllocationTagsQueryException(\"Invalid namespace string: \"\n          + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n          + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n    }\n\n    return result;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/TargetApplicationsNamespace.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/AllocationTagNamespace.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/TargetApplicationsNamespace.java"
      }
    },
    "a08921ca6cb1dad98935808c8f474b654f861263": {
      "type": "Ymultichange(Yfilerename,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-8002. Support NOT_SELF and ALL namespace types for allocation tag. (Weiwei Yang via wangda)\n\nChange-Id: I63b4e4192a95bf7ded98c54e46a2871c72869700\n",
      "commitDate": "19/03/18 11:04 AM",
      "commitName": "a08921ca6cb1dad98935808c8f474b654f861263",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-8002. Support NOT_SELF and ALL namespace types for allocation tag. (Weiwei Yang via wangda)\n\nChange-Id: I63b4e4192a95bf7ded98c54e46a2871c72869700\n",
          "commitDate": "19/03/18 11:04 AM",
          "commitName": "a08921ca6cb1dad98935808c8f474b654f861263",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "19/03/18 12:02 AM",
          "commitNameOld": "d67a5e2dec5c60d96b0c216182891cdfd7832ac5",
          "commitAuthorOld": "Sammi Chen",
          "daysBetweenCommits": 0.46,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   private static List\u003cString\u003e normalize(String namespaceStr)\n-      throws InvalidAllocationTagException {\n+      throws InvalidAllocationTagsQueryException {\n     List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n     if (namespaceStr \u003d\u003d null) {\n       return result;\n     }\n \n     String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n     for (String str : nsValues) {\n       if (!Strings.isNullOrEmpty(str)) {\n         result.add(str);\n       }\n     }\n \n     // Currently we only allow 1 or 2 values for a namespace string\n     if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n-      throw new InvalidAllocationTagException(\"Invalid namespace string: \"\n+      throw new InvalidAllocationTagsQueryException(\"Invalid namespace string: \"\n           + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n           + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n     }\n \n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cString\u003e normalize(String namespaceStr)\n      throws InvalidAllocationTagsQueryException {\n    List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n    if (namespaceStr \u003d\u003d null) {\n      return result;\n    }\n\n    String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n    for (String str : nsValues) {\n      if (!Strings.isNullOrEmpty(str)) {\n        result.add(str);\n      }\n    }\n\n    // Currently we only allow 1 or 2 values for a namespace string\n    if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n      throw new InvalidAllocationTagsQueryException(\"Invalid namespace string: \"\n          + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n          + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n    }\n\n    return result;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/AllocationTagNamespace.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/AllocationTagNamespace.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/AllocationTagNamespace.java"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-8002. Support NOT_SELF and ALL namespace types for allocation tag. (Weiwei Yang via wangda)\n\nChange-Id: I63b4e4192a95bf7ded98c54e46a2871c72869700\n",
          "commitDate": "19/03/18 11:04 AM",
          "commitName": "a08921ca6cb1dad98935808c8f474b654f861263",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "19/03/18 12:02 AM",
          "commitNameOld": "d67a5e2dec5c60d96b0c216182891cdfd7832ac5",
          "commitAuthorOld": "Sammi Chen",
          "daysBetweenCommits": 0.46,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   private static List\u003cString\u003e normalize(String namespaceStr)\n-      throws InvalidAllocationTagException {\n+      throws InvalidAllocationTagsQueryException {\n     List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n     if (namespaceStr \u003d\u003d null) {\n       return result;\n     }\n \n     String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n     for (String str : nsValues) {\n       if (!Strings.isNullOrEmpty(str)) {\n         result.add(str);\n       }\n     }\n \n     // Currently we only allow 1 or 2 values for a namespace string\n     if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n-      throw new InvalidAllocationTagException(\"Invalid namespace string: \"\n+      throw new InvalidAllocationTagsQueryException(\"Invalid namespace string: \"\n           + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n           + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n     }\n \n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cString\u003e normalize(String namespaceStr)\n      throws InvalidAllocationTagsQueryException {\n    List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n    if (namespaceStr \u003d\u003d null) {\n      return result;\n    }\n\n    String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n    for (String str : nsValues) {\n      if (!Strings.isNullOrEmpty(str)) {\n        result.add(str);\n      }\n    }\n\n    // Currently we only allow 1 or 2 values for a namespace string\n    if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n      throw new InvalidAllocationTagsQueryException(\"Invalid namespace string: \"\n          + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n          + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n    }\n\n    return result;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/AllocationTagNamespace.java",
          "extendedDetails": {
            "oldValue": "[InvalidAllocationTagException]",
            "newValue": "[InvalidAllocationTagsQueryException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8002. Support NOT_SELF and ALL namespace types for allocation tag. (Weiwei Yang via wangda)\n\nChange-Id: I63b4e4192a95bf7ded98c54e46a2871c72869700\n",
          "commitDate": "19/03/18 11:04 AM",
          "commitName": "a08921ca6cb1dad98935808c8f474b654f861263",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "19/03/18 12:02 AM",
          "commitNameOld": "d67a5e2dec5c60d96b0c216182891cdfd7832ac5",
          "commitAuthorOld": "Sammi Chen",
          "daysBetweenCommits": 0.46,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   private static List\u003cString\u003e normalize(String namespaceStr)\n-      throws InvalidAllocationTagException {\n+      throws InvalidAllocationTagsQueryException {\n     List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n     if (namespaceStr \u003d\u003d null) {\n       return result;\n     }\n \n     String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n     for (String str : nsValues) {\n       if (!Strings.isNullOrEmpty(str)) {\n         result.add(str);\n       }\n     }\n \n     // Currently we only allow 1 or 2 values for a namespace string\n     if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n-      throw new InvalidAllocationTagException(\"Invalid namespace string: \"\n+      throw new InvalidAllocationTagsQueryException(\"Invalid namespace string: \"\n           + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n           + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n     }\n \n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cString\u003e normalize(String namespaceStr)\n      throws InvalidAllocationTagsQueryException {\n    List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n    if (namespaceStr \u003d\u003d null) {\n      return result;\n    }\n\n    String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n    for (String str : nsValues) {\n      if (!Strings.isNullOrEmpty(str)) {\n        result.add(str);\n      }\n    }\n\n    // Currently we only allow 1 or 2 values for a namespace string\n    if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n      throw new InvalidAllocationTagsQueryException(\"Invalid namespace string: \"\n          + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n          + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n    }\n\n    return result;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/AllocationTagNamespace.java",
          "extendedDetails": {}
        }
      ]
    },
    "1054b48c27f3158110bd0512afecded36eecb8ad": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7972. Support inter-app placement constraints for allocation tags by application ID. (Weiwei Yang via asuresh)\n",
      "commitDate": "05/03/18 11:24 AM",
      "commitName": "1054b48c27f3158110bd0512afecded36eecb8ad",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,23 @@\n+  private static List\u003cString\u003e normalize(String namespaceStr)\n+      throws InvalidAllocationTagException {\n+    List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n+    if (namespaceStr \u003d\u003d null) {\n+      return result;\n+    }\n+\n+    String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n+    for (String str : nsValues) {\n+      if (!Strings.isNullOrEmpty(str)) {\n+        result.add(str);\n+      }\n+    }\n+\n+    // Currently we only allow 1 or 2 values for a namespace string\n+    if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n+      throw new InvalidAllocationTagException(\"Invalid namespace string: \"\n+          + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n+          + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n+    }\n+\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cString\u003e normalize(String namespaceStr)\n      throws InvalidAllocationTagException {\n    List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n    if (namespaceStr \u003d\u003d null) {\n      return result;\n    }\n\n    String[] nsValues \u003d namespaceStr.split(NAMESPACE_DELIMITER);\n    for (String str : nsValues) {\n      if (!Strings.isNullOrEmpty(str)) {\n        result.add(str);\n      }\n    }\n\n    // Currently we only allow 1 or 2 values for a namespace string\n    if (result.size() \u003d\u003d 0 || result.size() \u003e 2) {\n      throw new InvalidAllocationTagException(\"Invalid namespace string: \"\n          + namespaceStr + \", the syntax is \u003cnamespace_prefix\u003e or\"\n          + \" \u003cnamespace_prefix\u003e/\u003cnamespace_value\u003e\");\n    }\n\n    return result;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/AllocationTagNamespace.java"
    }
  }
}