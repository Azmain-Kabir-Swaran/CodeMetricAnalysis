{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetUtils.java",
  "functionName": "getIPs",
  "functionId": "getIPs___subnet-String__returnSubinterfaces-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
  "functionStartLine": 930,
  "functionEndLine": 957,
  "numCommitsSeen": 39,
  "timeTaken": 965,
  "changeHistory": [
    "950273bde4ccfc3721667898bbef39660fa0ad25"
  ],
  "changeHistoryShort": {
    "950273bde4ccfc3721667898bbef39660fa0ad25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "950273bde4ccfc3721667898bbef39660fa0ad25": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8210. Common side of HDFS-3148: The client should be able to use multiple local interfaces for data transfer. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308457 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 11:49 AM",
      "commitName": "950273bde4ccfc3721667898bbef39660fa0ad25",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,28 @@\n+  public static List\u003cInetAddress\u003e getIPs(String subnet,\n+      boolean returnSubinterfaces) {\n+    List\u003cInetAddress\u003e addrs \u003d new ArrayList\u003cInetAddress\u003e();\n+    SubnetInfo subnetInfo \u003d new SubnetUtils(subnet).getInfo();\n+    Enumeration\u003cNetworkInterface\u003e nifs;\n+\n+    try {\n+      nifs \u003d NetworkInterface.getNetworkInterfaces();\n+    } catch (SocketException e) {\n+      LOG.error(\"Unable to get host interfaces\", e);\n+      return addrs;\n+    }\n+\n+    while (nifs.hasMoreElements()) {\n+      NetworkInterface nif \u003d nifs.nextElement();\n+      // NB: adding addresses even if the nif is not up\n+      addMatchingAddrs(nif, subnetInfo, addrs);\n+\n+      if (!returnSubinterfaces) {\n+        continue;\n+      }\n+      Enumeration\u003cNetworkInterface\u003e subNifs \u003d nif.getSubInterfaces();\n+      while (subNifs.hasMoreElements()) {\n+        addMatchingAddrs(subNifs.nextElement(), subnetInfo, addrs);\n+      }\n+    }\n+    return addrs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cInetAddress\u003e getIPs(String subnet,\n      boolean returnSubinterfaces) {\n    List\u003cInetAddress\u003e addrs \u003d new ArrayList\u003cInetAddress\u003e();\n    SubnetInfo subnetInfo \u003d new SubnetUtils(subnet).getInfo();\n    Enumeration\u003cNetworkInterface\u003e nifs;\n\n    try {\n      nifs \u003d NetworkInterface.getNetworkInterfaces();\n    } catch (SocketException e) {\n      LOG.error(\"Unable to get host interfaces\", e);\n      return addrs;\n    }\n\n    while (nifs.hasMoreElements()) {\n      NetworkInterface nif \u003d nifs.nextElement();\n      // NB: adding addresses even if the nif is not up\n      addMatchingAddrs(nif, subnetInfo, addrs);\n\n      if (!returnSubinterfaces) {\n        continue;\n      }\n      Enumeration\u003cNetworkInterface\u003e subNifs \u003d nif.getSubInterfaces();\n      while (subNifs.hasMoreElements()) {\n        addMatchingAddrs(subNifs.nextElement(), subnetInfo, addrs);\n      }\n    }\n    return addrs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java"
    }
  }
}