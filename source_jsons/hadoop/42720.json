{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptImpl.java",
  "functionName": "amContainerFinished",
  "functionId": "amContainerFinished___appAttempt-RMAppAttemptImpl__containerFinishedEvent-RMAppAttemptContainerFinishedEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
  "functionStartLine": 2002,
  "functionEndLine": 2028,
  "numCommitsSeen": 155,
  "timeTaken": 3608,
  "changeHistory": [
    "bd96c4c235c15c1df6ba37544f8e15004ad1d09d",
    "e0b570dffb47ede298e0378a63350b699128d96e",
    "620325e81696fca140195b74929ed9eda2d5eb16"
  ],
  "changeHistoryShort": {
    "bd96c4c235c15c1df6ba37544f8e15004ad1d09d": "Ybodychange",
    "e0b570dffb47ede298e0378a63350b699128d96e": "Ybodychange",
    "620325e81696fca140195b74929ed9eda2d5eb16": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd96c4c235c15c1df6ba37544f8e15004ad1d09d": {
      "type": "Ybodychange",
      "commitMessage": "Rebase onto latest trunk. minor conflicts\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "bd96c4c235c15c1df6ba37544f8e15004ad1d09d",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/10/17 9:49 AM",
      "commitNameOld": "72d22b753abde4d07a727479d3f3d5d84d5dd6b2",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 31.2,
      "commitsBetweenForRepo": 298,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private static void amContainerFinished(RMAppAttemptImpl appAttempt,\n       RMAppAttemptContainerFinishedEvent containerFinishedEvent) {\n \n     NodeId nodeId \u003d containerFinishedEvent.getNodeId();\n \n     ContainerStatus containerStatus \u003d\n         containerFinishedEvent.getContainerStatus();\n     if (containerStatus !\u003d null) {\n       int exitStatus \u003d containerStatus.getExitStatus();\n-      if (shouldCountTowardsNodeBlacklisting(exitStatus)) {\n+      if (Apps.shouldCountTowardsNodeBlacklisting(exitStatus)) {\n         appAttempt.addAMNodeToBlackList(nodeId);\n       }\n     } else {\n       LOG.warn(\"No ContainerStatus in containerFinishedEvent\");\n     }\n \n     if (!appAttempt.getSubmissionContext()\n         .getKeepContainersAcrossApplicationAttempts()) {\n       appAttempt.finishedContainersSentToAM.putIfAbsent(nodeId,\n           new ArrayList\u003c\u003e());\n       appAttempt.finishedContainersSentToAM.get(nodeId).add(containerStatus);\n       appAttempt.sendFinishedContainersToNM();\n     } else {\n       appAttempt.sendFinishedAMContainerToNM(nodeId,\n           containerStatus.getContainerId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void amContainerFinished(RMAppAttemptImpl appAttempt,\n      RMAppAttemptContainerFinishedEvent containerFinishedEvent) {\n\n    NodeId nodeId \u003d containerFinishedEvent.getNodeId();\n\n    ContainerStatus containerStatus \u003d\n        containerFinishedEvent.getContainerStatus();\n    if (containerStatus !\u003d null) {\n      int exitStatus \u003d containerStatus.getExitStatus();\n      if (Apps.shouldCountTowardsNodeBlacklisting(exitStatus)) {\n        appAttempt.addAMNodeToBlackList(nodeId);\n      }\n    } else {\n      LOG.warn(\"No ContainerStatus in containerFinishedEvent\");\n    }\n\n    if (!appAttempt.getSubmissionContext()\n        .getKeepContainersAcrossApplicationAttempts()) {\n      appAttempt.finishedContainersSentToAM.putIfAbsent(nodeId,\n          new ArrayList\u003c\u003e());\n      appAttempt.finishedContainersSentToAM.get(nodeId).add(containerStatus);\n      appAttempt.sendFinishedContainersToNM();\n    } else {\n      appAttempt.sendFinishedAMContainerToNM(nodeId,\n          containerStatus.getContainerId());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "e0b570dffb47ede298e0378a63350b699128d96e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5483. Optimize RMAppAttempt#pullJustFinishedContainers. Contributed by sandflee\n",
      "commitDate": "10/08/16 11:04 AM",
      "commitName": "e0b570dffb47ede298e0378a63350b699128d96e",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "28/06/16 9:38 PM",
      "commitNameOld": "26b5e6116f392b6be91dca57968259f87554ce33",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 42.56,
      "commitsBetweenForRepo": 385,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private static void amContainerFinished(RMAppAttemptImpl appAttempt,\n       RMAppAttemptContainerFinishedEvent containerFinishedEvent) {\n \n     NodeId nodeId \u003d containerFinishedEvent.getNodeId();\n \n     ContainerStatus containerStatus \u003d\n         containerFinishedEvent.getContainerStatus();\n     if (containerStatus !\u003d null) {\n       int exitStatus \u003d containerStatus.getExitStatus();\n       if (shouldCountTowardsNodeBlacklisting(exitStatus)) {\n         appAttempt.addAMNodeToBlackList(nodeId);\n       }\n     } else {\n       LOG.warn(\"No ContainerStatus in containerFinishedEvent\");\n     }\n \n     if (!appAttempt.getSubmissionContext()\n         .getKeepContainersAcrossApplicationAttempts()) {\n       appAttempt.finishedContainersSentToAM.putIfAbsent(nodeId,\n-          new ArrayList\u003cContainerStatus\u003e());\n+          new ArrayList\u003c\u003e());\n       appAttempt.finishedContainersSentToAM.get(nodeId).add(containerStatus);\n       appAttempt.sendFinishedContainersToNM();\n     } else {\n       appAttempt.sendFinishedAMContainerToNM(nodeId,\n           containerStatus.getContainerId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void amContainerFinished(RMAppAttemptImpl appAttempt,\n      RMAppAttemptContainerFinishedEvent containerFinishedEvent) {\n\n    NodeId nodeId \u003d containerFinishedEvent.getNodeId();\n\n    ContainerStatus containerStatus \u003d\n        containerFinishedEvent.getContainerStatus();\n    if (containerStatus !\u003d null) {\n      int exitStatus \u003d containerStatus.getExitStatus();\n      if (shouldCountTowardsNodeBlacklisting(exitStatus)) {\n        appAttempt.addAMNodeToBlackList(nodeId);\n      }\n    } else {\n      LOG.warn(\"No ContainerStatus in containerFinishedEvent\");\n    }\n\n    if (!appAttempt.getSubmissionContext()\n        .getKeepContainersAcrossApplicationAttempts()) {\n      appAttempt.finishedContainersSentToAM.putIfAbsent(nodeId,\n          new ArrayList\u003c\u003e());\n      appAttempt.finishedContainersSentToAM.get(nodeId).add(containerStatus);\n      appAttempt.sendFinishedContainersToNM();\n    } else {\n      appAttempt.sendFinishedAMContainerToNM(nodeId,\n          containerStatus.getContainerId());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "620325e81696fca140195b74929ed9eda2d5eb16": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
      "commitDate": "07/06/16 3:06 PM",
      "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,27 @@\n+  private static void amContainerFinished(RMAppAttemptImpl appAttempt,\n+      RMAppAttemptContainerFinishedEvent containerFinishedEvent) {\n+\n+    NodeId nodeId \u003d containerFinishedEvent.getNodeId();\n+\n+    ContainerStatus containerStatus \u003d\n+        containerFinishedEvent.getContainerStatus();\n+    if (containerStatus !\u003d null) {\n+      int exitStatus \u003d containerStatus.getExitStatus();\n+      if (shouldCountTowardsNodeBlacklisting(exitStatus)) {\n+        appAttempt.addAMNodeToBlackList(nodeId);\n+      }\n+    } else {\n+      LOG.warn(\"No ContainerStatus in containerFinishedEvent\");\n+    }\n+\n+    if (!appAttempt.getSubmissionContext()\n+        .getKeepContainersAcrossApplicationAttempts()) {\n+      appAttempt.finishedContainersSentToAM.putIfAbsent(nodeId,\n+          new ArrayList\u003cContainerStatus\u003e());\n+      appAttempt.finishedContainersSentToAM.get(nodeId).add(containerStatus);\n+      appAttempt.sendFinishedContainersToNM();\n+    } else {\n+      appAttempt.sendFinishedAMContainerToNM(nodeId,\n+          containerStatus.getContainerId());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void amContainerFinished(RMAppAttemptImpl appAttempt,\n      RMAppAttemptContainerFinishedEvent containerFinishedEvent) {\n\n    NodeId nodeId \u003d containerFinishedEvent.getNodeId();\n\n    ContainerStatus containerStatus \u003d\n        containerFinishedEvent.getContainerStatus();\n    if (containerStatus !\u003d null) {\n      int exitStatus \u003d containerStatus.getExitStatus();\n      if (shouldCountTowardsNodeBlacklisting(exitStatus)) {\n        appAttempt.addAMNodeToBlackList(nodeId);\n      }\n    } else {\n      LOG.warn(\"No ContainerStatus in containerFinishedEvent\");\n    }\n\n    if (!appAttempt.getSubmissionContext()\n        .getKeepContainersAcrossApplicationAttempts()) {\n      appAttempt.finishedContainersSentToAM.putIfAbsent(nodeId,\n          new ArrayList\u003cContainerStatus\u003e());\n      appAttempt.finishedContainersSentToAM.get(nodeId).add(containerStatus);\n      appAttempt.sendFinishedContainersToNM();\n    } else {\n      appAttempt.sendFinishedAMContainerToNM(nodeId,\n          containerStatus.getContainerId());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
    }
  }
}