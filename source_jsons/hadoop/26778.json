{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobEndNotifier.java",
  "functionName": "setConf",
  "functionId": "setConf___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/JobEndNotifier.java",
  "functionStartLine": 67,
  "functionEndLine": 113,
  "numCommitsSeen": 11,
  "timeTaken": 1206,
  "changeHistory": [
    "5877f20f9c3f6f0afa505715e9a2ee312475af17",
    "794f9bb3e4f26adaef80e9249d651560930062c3",
    "cf6ab9b2e79369bf6224bd68c536f0be5eeb69d6",
    "44e0bb831b4f137e28fa0d83f1dd2968518420d1",
    "6288dfa873364d1bb735bdb811002f0080e9a1be"
  ],
  "changeHistoryShort": {
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Ybodychange",
    "794f9bb3e4f26adaef80e9249d651560930062c3": "Ybodychange",
    "cf6ab9b2e79369bf6224bd68c536f0be5eeb69d6": "Ybodychange",
    "44e0bb831b4f137e28fa0d83f1dd2968518420d1": "Ybodychange",
    "6288dfa873364d1bb735bdb811002f0080e9a1be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 604.59,
      "commitsBetweenForRepo": 4588,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,47 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     \n     numTries \u003d Math.min(\n       conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n       , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n     );\n     waitInterval \u003d Math.min(\n     conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5000)\n     , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5000)\n     );\n     waitInterval \u003d (waitInterval \u003c 0) ? 5000 : waitInterval;\n \n     timeout \u003d conf.getInt(JobContext.MR_JOB_END_NOTIFICATION_TIMEOUT,\n         JobContext.DEFAULT_MR_JOB_END_NOTIFICATION_TIMEOUT);\n \n     userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n \n     proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n \n     //Configure the proxy to use if its set. It should be set like\n     //proxyType@proxyHostname:port\n     if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n          proxyConf.lastIndexOf(\":\") !\u003d -1) {\n       int typeIndex \u003d proxyConf.indexOf(\"@\");\n       Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n       if(typeIndex !\u003d -1 \u0026\u0026\n         proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n         proxyType \u003d Proxy.Type.SOCKS;\n       }\n       String hostname \u003d proxyConf.substring(typeIndex + 1,\n         proxyConf.lastIndexOf(\":\"));\n       String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n       try {\n         int port \u003d Integer.parseInt(portConf);\n         proxyToUse \u003d new Proxy(proxyType,\n           new InetSocketAddress(hostname, port));\n-        Log.info(\"Job end notification using proxy type \\\"\" + proxyType + \n-        \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port + \"\\\"\");\n+        Log.getLog().info(\"Job end notification using proxy type \\\"\"\n+            + proxyType + \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port\n+            + \"\\\"\");\n       } catch(NumberFormatException nfe) {\n-        Log.warn(\"Job end notification couldn\u0027t parse configured proxy\u0027s port \"\n-          + portConf + \". Not going to use a proxy\");\n+        Log.getLog().warn(\"Job end notification couldn\u0027t parse configured\"\n+            + \"proxy\u0027s port \" + portConf + \". Not going to use a proxy\");\n       }\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    \n    numTries \u003d Math.min(\n      conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n      , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n    );\n    waitInterval \u003d Math.min(\n    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5000)\n    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5000)\n    );\n    waitInterval \u003d (waitInterval \u003c 0) ? 5000 : waitInterval;\n\n    timeout \u003d conf.getInt(JobContext.MR_JOB_END_NOTIFICATION_TIMEOUT,\n        JobContext.DEFAULT_MR_JOB_END_NOTIFICATION_TIMEOUT);\n\n    userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n\n    proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n\n    //Configure the proxy to use if its set. It should be set like\n    //proxyType@proxyHostname:port\n    if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n         proxyConf.lastIndexOf(\":\") !\u003d -1) {\n      int typeIndex \u003d proxyConf.indexOf(\"@\");\n      Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n      if(typeIndex !\u003d -1 \u0026\u0026\n        proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n        proxyType \u003d Proxy.Type.SOCKS;\n      }\n      String hostname \u003d proxyConf.substring(typeIndex + 1,\n        proxyConf.lastIndexOf(\":\"));\n      String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n      try {\n        int port \u003d Integer.parseInt(portConf);\n        proxyToUse \u003d new Proxy(proxyType,\n          new InetSocketAddress(hostname, port));\n        Log.getLog().info(\"Job end notification using proxy type \\\"\"\n            + proxyType + \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port\n            + \"\\\"\");\n      } catch(NumberFormatException nfe) {\n        Log.getLog().warn(\"Job end notification couldn\u0027t parse configured\"\n            + \"proxy\u0027s port \" + portConf + \". Not going to use a proxy\");\n      }\n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/JobEndNotifier.java",
      "extendedDetails": {}
    },
    "794f9bb3e4f26adaef80e9249d651560930062c3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5066. Added a timeout for the job.end.notification.url. Contributed by Ivan Mitic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1470216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/04/13 12:18 PM",
      "commitName": "794f9bb3e4f26adaef80e9249d651560930062c3",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/11/12 12:32 PM",
      "commitNameOld": "cf6ab9b2e79369bf6224bd68c536f0be5eeb69d6",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 158.95,
      "commitsBetweenForRepo": 756,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,46 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     \n     numTries \u003d Math.min(\n       conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n       , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n     );\n     waitInterval \u003d Math.min(\n     conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5000)\n     , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5000)\n     );\n     waitInterval \u003d (waitInterval \u003c 0) ? 5000 : waitInterval;\n \n+    timeout \u003d conf.getInt(JobContext.MR_JOB_END_NOTIFICATION_TIMEOUT,\n+        JobContext.DEFAULT_MR_JOB_END_NOTIFICATION_TIMEOUT);\n+\n     userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n \n     proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n \n     //Configure the proxy to use if its set. It should be set like\n     //proxyType@proxyHostname:port\n     if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n          proxyConf.lastIndexOf(\":\") !\u003d -1) {\n       int typeIndex \u003d proxyConf.indexOf(\"@\");\n       Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n       if(typeIndex !\u003d -1 \u0026\u0026\n         proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n         proxyType \u003d Proxy.Type.SOCKS;\n       }\n       String hostname \u003d proxyConf.substring(typeIndex + 1,\n         proxyConf.lastIndexOf(\":\"));\n       String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n       try {\n         int port \u003d Integer.parseInt(portConf);\n         proxyToUse \u003d new Proxy(proxyType,\n           new InetSocketAddress(hostname, port));\n         Log.info(\"Job end notification using proxy type \\\"\" + proxyType + \n         \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port + \"\\\"\");\n       } catch(NumberFormatException nfe) {\n         Log.warn(\"Job end notification couldn\u0027t parse configured proxy\u0027s port \"\n           + portConf + \". Not going to use a proxy\");\n       }\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    \n    numTries \u003d Math.min(\n      conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n      , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n    );\n    waitInterval \u003d Math.min(\n    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5000)\n    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5000)\n    );\n    waitInterval \u003d (waitInterval \u003c 0) ? 5000 : waitInterval;\n\n    timeout \u003d conf.getInt(JobContext.MR_JOB_END_NOTIFICATION_TIMEOUT,\n        JobContext.DEFAULT_MR_JOB_END_NOTIFICATION_TIMEOUT);\n\n    userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n\n    proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n\n    //Configure the proxy to use if its set. It should be set like\n    //proxyType@proxyHostname:port\n    if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n         proxyConf.lastIndexOf(\":\") !\u003d -1) {\n      int typeIndex \u003d proxyConf.indexOf(\"@\");\n      Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n      if(typeIndex !\u003d -1 \u0026\u0026\n        proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n        proxyType \u003d Proxy.Type.SOCKS;\n      }\n      String hostname \u003d proxyConf.substring(typeIndex + 1,\n        proxyConf.lastIndexOf(\":\"));\n      String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n      try {\n        int port \u003d Integer.parseInt(portConf);\n        proxyToUse \u003d new Proxy(proxyType,\n          new InetSocketAddress(hostname, port));\n        Log.info(\"Job end notification using proxy type \\\"\" + proxyType + \n        \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port + \"\\\"\");\n      } catch(NumberFormatException nfe) {\n        Log.warn(\"Job end notification couldn\u0027t parse configured proxy\u0027s port \"\n          + portConf + \". Not going to use a proxy\");\n      }\n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/JobEndNotifier.java",
      "extendedDetails": {}
    },
    "cf6ab9b2e79369bf6224bd68c536f0be5eeb69d6": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4786. Job End Notification retry interval is 5 milliseconds by default (Ravi Prakash via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1408444 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/12 12:32 PM",
      "commitName": "cf6ab9b2e79369bf6224bd68c536f0be5eeb69d6",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "08/02/12 9:31 AM",
      "commitNameOld": "b2d49acd08aeb158226bc5f99151fc411a450525",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 278.13,
      "commitsBetweenForRepo": 1728,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     \n     numTries \u003d Math.min(\n       conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n       , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n     );\n     waitInterval \u003d Math.min(\n-    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5)\n-    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5)\n+    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5000)\n+    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5000)\n     );\n-    waitInterval \u003d (waitInterval \u003c 0) ? 5 : waitInterval;\n+    waitInterval \u003d (waitInterval \u003c 0) ? 5000 : waitInterval;\n \n     userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n \n     proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n \n     //Configure the proxy to use if its set. It should be set like\n     //proxyType@proxyHostname:port\n     if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n          proxyConf.lastIndexOf(\":\") !\u003d -1) {\n       int typeIndex \u003d proxyConf.indexOf(\"@\");\n       Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n       if(typeIndex !\u003d -1 \u0026\u0026\n         proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n         proxyType \u003d Proxy.Type.SOCKS;\n       }\n       String hostname \u003d proxyConf.substring(typeIndex + 1,\n         proxyConf.lastIndexOf(\":\"));\n       String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n       try {\n         int port \u003d Integer.parseInt(portConf);\n         proxyToUse \u003d new Proxy(proxyType,\n           new InetSocketAddress(hostname, port));\n         Log.info(\"Job end notification using proxy type \\\"\" + proxyType + \n         \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port + \"\\\"\");\n       } catch(NumberFormatException nfe) {\n         Log.warn(\"Job end notification couldn\u0027t parse configured proxy\u0027s port \"\n           + portConf + \". Not going to use a proxy\");\n       }\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    \n    numTries \u003d Math.min(\n      conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n      , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n    );\n    waitInterval \u003d Math.min(\n    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5000)\n    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5000)\n    );\n    waitInterval \u003d (waitInterval \u003c 0) ? 5000 : waitInterval;\n\n    userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n\n    proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n\n    //Configure the proxy to use if its set. It should be set like\n    //proxyType@proxyHostname:port\n    if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n         proxyConf.lastIndexOf(\":\") !\u003d -1) {\n      int typeIndex \u003d proxyConf.indexOf(\"@\");\n      Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n      if(typeIndex !\u003d -1 \u0026\u0026\n        proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n        proxyType \u003d Proxy.Type.SOCKS;\n      }\n      String hostname \u003d proxyConf.substring(typeIndex + 1,\n        proxyConf.lastIndexOf(\":\"));\n      String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n      try {\n        int port \u003d Integer.parseInt(portConf);\n        proxyToUse \u003d new Proxy(proxyType,\n          new InetSocketAddress(hostname, port));\n        Log.info(\"Job end notification using proxy type \\\"\" + proxyType + \n        \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port + \"\\\"\");\n      } catch(NumberFormatException nfe) {\n        Log.warn(\"Job end notification couldn\u0027t parse configured proxy\u0027s port \"\n          + portConf + \". Not going to use a proxy\");\n      }\n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/JobEndNotifier.java",
      "extendedDetails": {}
    },
    "44e0bb831b4f137e28fa0d83f1dd2968518420d1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3382. Enhanced MR AM to use a proxy to ping the job-end notification URL. Contributed by Ravi Prakash.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229736 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/12 1:08 PM",
      "commitName": "44e0bb831b4f137e28fa0d83f1dd2968518420d1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "28/10/11 12:44 AM",
      "commitNameOld": "a39992ea6345a9f29814587604ac61b21c99fc3e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 74.56,
      "commitsBetweenForRepo": 390,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,43 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     \n     numTries \u003d Math.min(\n       conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n       , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n     );\n     waitInterval \u003d Math.min(\n     conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5)\n     , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5)\n     );\n     waitInterval \u003d (waitInterval \u003c 0) ? 5 : waitInterval;\n \n     userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n+\n+    proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n+\n+    //Configure the proxy to use if its set. It should be set like\n+    //proxyType@proxyHostname:port\n+    if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n+         proxyConf.lastIndexOf(\":\") !\u003d -1) {\n+      int typeIndex \u003d proxyConf.indexOf(\"@\");\n+      Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n+      if(typeIndex !\u003d -1 \u0026\u0026\n+        proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n+        proxyType \u003d Proxy.Type.SOCKS;\n+      }\n+      String hostname \u003d proxyConf.substring(typeIndex + 1,\n+        proxyConf.lastIndexOf(\":\"));\n+      String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n+      try {\n+        int port \u003d Integer.parseInt(portConf);\n+        proxyToUse \u003d new Proxy(proxyType,\n+          new InetSocketAddress(hostname, port));\n+        Log.info(\"Job end notification using proxy type \\\"\" + proxyType + \n+        \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port + \"\\\"\");\n+      } catch(NumberFormatException nfe) {\n+        Log.warn(\"Job end notification couldn\u0027t parse configured proxy\u0027s port \"\n+          + portConf + \". Not going to use a proxy\");\n+      }\n+    }\n+\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    \n    numTries \u003d Math.min(\n      conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n      , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n    );\n    waitInterval \u003d Math.min(\n    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5)\n    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5)\n    );\n    waitInterval \u003d (waitInterval \u003c 0) ? 5 : waitInterval;\n\n    userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n\n    proxyConf \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_PROXY);\n\n    //Configure the proxy to use if its set. It should be set like\n    //proxyType@proxyHostname:port\n    if(proxyConf !\u003d null \u0026\u0026 !proxyConf.equals(\"\") \u0026\u0026\n         proxyConf.lastIndexOf(\":\") !\u003d -1) {\n      int typeIndex \u003d proxyConf.indexOf(\"@\");\n      Proxy.Type proxyType \u003d Proxy.Type.HTTP;\n      if(typeIndex !\u003d -1 \u0026\u0026\n        proxyConf.substring(0, typeIndex).compareToIgnoreCase(\"socks\") \u003d\u003d 0) {\n        proxyType \u003d Proxy.Type.SOCKS;\n      }\n      String hostname \u003d proxyConf.substring(typeIndex + 1,\n        proxyConf.lastIndexOf(\":\"));\n      String portConf \u003d proxyConf.substring(proxyConf.lastIndexOf(\":\") + 1);\n      try {\n        int port \u003d Integer.parseInt(portConf);\n        proxyToUse \u003d new Proxy(proxyType,\n          new InetSocketAddress(hostname, port));\n        Log.info(\"Job end notification using proxy type \\\"\" + proxyType + \n        \"\\\" hostname \\\"\" + hostname + \"\\\" and port \\\"\" + port + \"\\\"\");\n      } catch(NumberFormatException nfe) {\n        Log.warn(\"Job end notification couldn\u0027t parse configured proxy\u0027s port \"\n          + portConf + \". Not going to use a proxy\");\n      }\n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/JobEndNotifier.java",
      "extendedDetails": {}
    },
    "6288dfa873364d1bb735bdb811002f0080e9a1be": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3028. Added job-end notification support. Contributed by Ravi Prakash.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188377 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 2:02 PM",
      "commitName": "6288dfa873364d1bb735bdb811002f0080e9a1be",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,15 @@\n+  public void setConf(Configuration conf) {\n+    this.conf \u003d conf;\n+    \n+    numTries \u003d Math.min(\n+      conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n+      , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n+    );\n+    waitInterval \u003d Math.min(\n+    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5)\n+    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5)\n+    );\n+    waitInterval \u003d (waitInterval \u003c 0) ? 5 : waitInterval;\n+\n+    userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    \n    numTries \u003d Math.min(\n      conf.getInt(MRJobConfig.MR_JOB_END_RETRY_ATTEMPTS, 0) + 1\n      , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_ATTEMPTS, 1)\n    );\n    waitInterval \u003d Math.min(\n    conf.getInt(MRJobConfig.MR_JOB_END_RETRY_INTERVAL, 5)\n    , conf.getInt(MRJobConfig.MR_JOB_END_NOTIFICATION_MAX_RETRY_INTERVAL, 5)\n    );\n    waitInterval \u003d (waitInterval \u003c 0) ? 5 : waitInterval;\n\n    userUrl \u003d conf.get(MRJobConfig.MR_JOB_END_NOTIFICATION_URL);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/JobEndNotifier.java"
    }
  }
}