{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SwiftRestClient.java",
  "functionName": "findObjects",
  "functionId": "findObjects___location-String__requestHeaders-Header[](modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/SwiftRestClient.java",
  "functionStartLine": 885,
  "functionEndLine": 920,
  "numCommitsSeen": 6,
  "timeTaken": 1016,
  "changeHistory": [
    "62579b69a0a294ba1ea14cf76c650b640f89f331",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874"
  ],
  "changeHistoryShort": {
    "62579b69a0a294ba1ea14cf76c650b640f89f331": "Ybodychange",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": "Yintroduced"
  },
  "changeHistoryDetails": {
    "62579b69a0a294ba1ea14cf76c650b640f89f331": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11614. Remove httpclient dependency from hadoop-openstack. Contributed by Akira Ajisaka, Brahma Reddy Battula, and Steve Loughran.\n",
      "commitDate": "27/04/17 12:57 AM",
      "commitName": "62579b69a0a294ba1ea14cf76c650b640f89f331",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "01/10/15 9:25 AM",
      "commitNameOld": "ecbfd68974691cc9103ae477d10c15c7f21b6dea",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 573.65,
      "commitsBetweenForRepo": 3812,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,36 @@\n-  private byte[] findObjects(String location, final Header[] requestHeaders) throws\n-          IOException {\n+  private byte[] findObjects(String location, final Header[] requestHeaders)\n+      throws IOException {\n     URI uri;\n     preRemoteCommand(\"findObjects\");\n     try {\n       uri \u003d new URI(location);\n     } catch (URISyntaxException e) {\n       throw new SwiftException(\"Bad URI: \" + location, e);\n     }\n \n-    return perform(\"findObjects\", uri, new GetMethodProcessor\u003cbyte[]\u003e() {\n-      @Override\n-      public byte[] extractResult(GetMethod method) throws IOException {\n-        if (method.getStatusCode() \u003d\u003d SC_NOT_FOUND) {\n-          //no result\n-          throw new FileNotFoundException(\"Not found \" + method.getURI());\n-        }\n-        return method.getResponseBody();\n-      }\n+    return perform(\"findObjects\", uri,\n+        new GetRequestProcessor\u003cbyte[]\u003e() {\n+          @Override\n+          public byte[] extractResult(HttpGet req, HttpResponse resp)\n+              throws IOException {\n+            if (resp.getStatusLine().getStatusCode() \u003d\u003d SC_NOT_FOUND) {\n+              //no result\n+              throw new FileNotFoundException(\"Not found \" + req.getURI());\n+            }\n+            return HttpResponseUtils.getResponseBody(resp);\n+          }\n \n-      @Override\n-      protected int[] getAllowedStatusCodes() {\n-        return new int[]{\n+          @Override\n+          protected int[] getAllowedStatusCodes() {\n+            return new int[]{\n                 SC_OK,\n                 SC_NOT_FOUND\n-        };\n-      }\n+            };\n+          }\n \n-      @Override\n-      protected void setup(GetMethod method)\n-        throws SwiftInternalStateException {\n-        setHeaders(method, requestHeaders);\n-      }\n-    });\n+          @Override\n+          protected void setup(HttpGet req) throws SwiftInternalStateException {\n+            setHeaders(req, requestHeaders);\n+          }\n+        });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private byte[] findObjects(String location, final Header[] requestHeaders)\n      throws IOException {\n    URI uri;\n    preRemoteCommand(\"findObjects\");\n    try {\n      uri \u003d new URI(location);\n    } catch (URISyntaxException e) {\n      throw new SwiftException(\"Bad URI: \" + location, e);\n    }\n\n    return perform(\"findObjects\", uri,\n        new GetRequestProcessor\u003cbyte[]\u003e() {\n          @Override\n          public byte[] extractResult(HttpGet req, HttpResponse resp)\n              throws IOException {\n            if (resp.getStatusLine().getStatusCode() \u003d\u003d SC_NOT_FOUND) {\n              //no result\n              throw new FileNotFoundException(\"Not found \" + req.getURI());\n            }\n            return HttpResponseUtils.getResponseBody(resp);\n          }\n\n          @Override\n          protected int[] getAllowedStatusCodes() {\n            return new int[]{\n                SC_OK,\n                SC_NOT_FOUND\n            };\n          }\n\n          @Override\n          protected void setup(HttpGet req) throws SwiftInternalStateException {\n            setHeaders(req, requestHeaders);\n          }\n        });\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/SwiftRestClient.java",
      "extendedDetails": {}
    },
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8545. Filesystem Implementation for OpenStack Swift\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 4:32 AM",
      "commitName": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,35 @@\n+  private byte[] findObjects(String location, final Header[] requestHeaders) throws\n+          IOException {\n+    URI uri;\n+    preRemoteCommand(\"findObjects\");\n+    try {\n+      uri \u003d new URI(location);\n+    } catch (URISyntaxException e) {\n+      throw new SwiftException(\"Bad URI: \" + location, e);\n+    }\n+\n+    return perform(\"findObjects\", uri, new GetMethodProcessor\u003cbyte[]\u003e() {\n+      @Override\n+      public byte[] extractResult(GetMethod method) throws IOException {\n+        if (method.getStatusCode() \u003d\u003d SC_NOT_FOUND) {\n+          //no result\n+          throw new FileNotFoundException(\"Not found \" + method.getURI());\n+        }\n+        return method.getResponseBody();\n+      }\n+\n+      @Override\n+      protected int[] getAllowedStatusCodes() {\n+        return new int[]{\n+                SC_OK,\n+                SC_NOT_FOUND\n+        };\n+      }\n+\n+      @Override\n+      protected void setup(GetMethod method)\n+        throws SwiftInternalStateException {\n+        setHeaders(method, requestHeaders);\n+      }\n+    });\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private byte[] findObjects(String location, final Header[] requestHeaders) throws\n          IOException {\n    URI uri;\n    preRemoteCommand(\"findObjects\");\n    try {\n      uri \u003d new URI(location);\n    } catch (URISyntaxException e) {\n      throw new SwiftException(\"Bad URI: \" + location, e);\n    }\n\n    return perform(\"findObjects\", uri, new GetMethodProcessor\u003cbyte[]\u003e() {\n      @Override\n      public byte[] extractResult(GetMethod method) throws IOException {\n        if (method.getStatusCode() \u003d\u003d SC_NOT_FOUND) {\n          //no result\n          throw new FileNotFoundException(\"Not found \" + method.getURI());\n        }\n        return method.getResponseBody();\n      }\n\n      @Override\n      protected int[] getAllowedStatusCodes() {\n        return new int[]{\n                SC_OK,\n                SC_NOT_FOUND\n        };\n      }\n\n      @Override\n      protected void setup(GetMethod method)\n        throws SwiftInternalStateException {\n        setHeaders(method, requestHeaders);\n      }\n    });\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/SwiftRestClient.java"
    }
  }
}