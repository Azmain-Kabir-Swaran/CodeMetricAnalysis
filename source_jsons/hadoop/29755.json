{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CleanerService.java",
  "functionName": "writeGlobalCleanerPidFile",
  "functionId": "writeGlobalCleanerPidFile",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-sharedcachemanager/src/main/java/org/apache/hadoop/yarn/server/sharedcachemanager/CleanerService.java",
  "functionStartLine": 148,
  "functionEndLine": 173,
  "numCommitsSeen": 4,
  "timeTaken": 659,
  "changeHistory": [
    "c51e53d7aad46059f52d4046a5fedfdfd3c37955"
  ],
  "changeHistoryShort": {
    "c51e53d7aad46059f52d4046a5fedfdfd3c37955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c51e53d7aad46059f52d4046a5fedfdfd3c37955": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2183. [YARN-1492] Cleaner service for cache manager. (Chris Trezzo and Sangjin Lee via kasha)\n",
      "commitDate": "25/10/14 10:31 AM",
      "commitName": "c51e53d7aad46059f52d4046a5fedfdfd3c37955",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,26 @@\n+  private boolean writeGlobalCleanerPidFile() throws YarnException {\n+    String root \u003d\n+        conf.get(YarnConfiguration.SHARED_CACHE_ROOT,\n+            YarnConfiguration.DEFAULT_SHARED_CACHE_ROOT);\n+    Path pidPath \u003d new Path(root, GLOBAL_CLEANER_PID);\n+    try {\n+      FileSystem fs \u003d FileSystem.get(this.conf);\n+\n+      if (fs.exists(pidPath)) {\n+        return false;\n+      }\n+\n+      FSDataOutputStream os \u003d fs.create(pidPath, false);\n+      // write the hostname and the process id in the global cleaner pid file\n+      final String ID \u003d ManagementFactory.getRuntimeMXBean().getName();\n+      os.writeUTF(ID);\n+      os.close();\n+      // add it to the delete-on-exit to ensure it gets deleted when the JVM\n+      // exits\n+      fs.deleteOnExit(pidPath);\n+    } catch (IOException e) {\n+      throw new YarnException(e);\n+    }\n+    LOG.info(\"Created the global cleaner pid file at \" + pidPath.toString());\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean writeGlobalCleanerPidFile() throws YarnException {\n    String root \u003d\n        conf.get(YarnConfiguration.SHARED_CACHE_ROOT,\n            YarnConfiguration.DEFAULT_SHARED_CACHE_ROOT);\n    Path pidPath \u003d new Path(root, GLOBAL_CLEANER_PID);\n    try {\n      FileSystem fs \u003d FileSystem.get(this.conf);\n\n      if (fs.exists(pidPath)) {\n        return false;\n      }\n\n      FSDataOutputStream os \u003d fs.create(pidPath, false);\n      // write the hostname and the process id in the global cleaner pid file\n      final String ID \u003d ManagementFactory.getRuntimeMXBean().getName();\n      os.writeUTF(ID);\n      os.close();\n      // add it to the delete-on-exit to ensure it gets deleted when the JVM\n      // exits\n      fs.deleteOnExit(pidPath);\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n    LOG.info(\"Created the global cleaner pid file at \" + pidPath.toString());\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-sharedcachemanager/src/main/java/org/apache/hadoop/yarn/server/sharedcachemanager/CleanerService.java"
    }
  }
}