{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavaKeyStoreProvider.java",
  "functionName": "rollNewVersion",
  "functionId": "rollNewVersion___name-String__material-byte[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
  "functionStartLine": 509,
  "functionEndLine": 527,
  "numCommitsSeen": 26,
  "timeTaken": 1170,
  "changeHistory": [
    "7b5295513dce9768083ae53282013e31d74573c6",
    "98a98ea0c57d01b875b820f53d43dbf885d07711",
    "77306291643838ed7b57b99d6497553314a525f2"
  ],
  "changeHistoryShort": {
    "7b5295513dce9768083ae53282013e31d74573c6": "Ybodychange",
    "98a98ea0c57d01b875b820f53d43dbf885d07711": "Ybodychange",
    "77306291643838ed7b57b99d6497553314a525f2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b5295513dce9768083ae53282013e31d74573c6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10757. KeyProvider KeyVersion should provide the key name. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/07/14 10:31 AM",
      "commitName": "7b5295513dce9768083ae53282013e31d74573c6",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "19/06/14 3:18 PM",
      "commitNameOld": "38e2322d84d54896eac23afec0a1434629b8c8b2",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 14.8,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public KeyVersion rollNewVersion(String name,\n                                     byte[] material) throws IOException {\n     writeLock.lock();\n     try {\n       Metadata meta \u003d getMetadata(name);\n       if (meta \u003d\u003d null) {\n         throw new IOException(\"Key \" + name + \" not found\");\n       }\n       if (meta.getBitLength() !\u003d 8 * material.length) {\n         throw new IOException(\"Wrong key length. Required \" +\n             meta.getBitLength() + \", but got \" + (8 * material.length));\n       }\n       int nextVersion \u003d meta.addVersion();\n       String versionName \u003d buildVersionName(name, nextVersion);\n-      return innerSetKeyVersion(versionName, material, meta.getCipher());\n+      return innerSetKeyVersion(name, versionName, material, meta.getCipher());\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public KeyVersion rollNewVersion(String name,\n                                    byte[] material) throws IOException {\n    writeLock.lock();\n    try {\n      Metadata meta \u003d getMetadata(name);\n      if (meta \u003d\u003d null) {\n        throw new IOException(\"Key \" + name + \" not found\");\n      }\n      if (meta.getBitLength() !\u003d 8 * material.length) {\n        throw new IOException(\"Wrong key length. Required \" +\n            meta.getBitLength() + \", but got \" + (8 * material.length));\n      }\n      int nextVersion \u003d meta.addVersion();\n      String versionName \u003d buildVersionName(name, nextVersion);\n      return innerSetKeyVersion(name, versionName, material, meta.getCipher());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "98a98ea0c57d01b875b820f53d43dbf885d07711": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10427. KeyProvider implementations should be thread safe. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/14 12:43 PM",
      "commitName": "98a98ea0c57d01b875b820f53d43dbf885d07711",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "28/03/14 8:57 AM",
      "commitNameOld": "92b9c6ff60bcfb270fc4d8631dcba2a3762212c2",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 12.16,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   public KeyVersion rollNewVersion(String name,\n                                     byte[] material) throws IOException {\n-    Metadata meta \u003d getMetadata(name);\n-    if (meta \u003d\u003d null) {\n-      throw new IOException(\"Key \" + name + \" not found\");\n+    writeLock.lock();\n+    try {\n+      Metadata meta \u003d getMetadata(name);\n+      if (meta \u003d\u003d null) {\n+        throw new IOException(\"Key \" + name + \" not found\");\n+      }\n+      if (meta.getBitLength() !\u003d 8 * material.length) {\n+        throw new IOException(\"Wrong key length. Required \" +\n+            meta.getBitLength() + \", but got \" + (8 * material.length));\n+      }\n+      int nextVersion \u003d meta.addVersion();\n+      String versionName \u003d buildVersionName(name, nextVersion);\n+      return innerSetKeyVersion(versionName, material, meta.getCipher());\n+    } finally {\n+      writeLock.unlock();\n     }\n-    if (meta.getBitLength() !\u003d 8 * material.length) {\n-      throw new IOException(\"Wrong key length. Required \" +\n-          meta.getBitLength() + \", but got \" + (8 * material.length));\n-    }\n-    int nextVersion \u003d meta.addVersion();\n-    String versionName \u003d buildVersionName(name, nextVersion);\n-    return innerSetKeyVersion(versionName, material, meta.getCipher());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public KeyVersion rollNewVersion(String name,\n                                    byte[] material) throws IOException {\n    writeLock.lock();\n    try {\n      Metadata meta \u003d getMetadata(name);\n      if (meta \u003d\u003d null) {\n        throw new IOException(\"Key \" + name + \" not found\");\n      }\n      if (meta.getBitLength() !\u003d 8 * material.length) {\n        throw new IOException(\"Wrong key length. Required \" +\n            meta.getBitLength() + \", but got \" + (8 * material.length));\n      }\n      int nextVersion \u003d meta.addVersion();\n      String versionName \u003d buildVersionName(name, nextVersion);\n      return innerSetKeyVersion(versionName, material, meta.getCipher());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "77306291643838ed7b57b99d6497553314a525f2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10141. Create KeyProvider API to separate encryption key storage\nfrom the applications. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552462 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/12/13 4:25 PM",
      "commitName": "77306291643838ed7b57b99d6497553314a525f2",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,14 @@\n+  public KeyVersion rollNewVersion(String name,\n+                                    byte[] material) throws IOException {\n+    Metadata meta \u003d getMetadata(name);\n+    if (meta \u003d\u003d null) {\n+      throw new IOException(\"Key \" + name + \" not found\");\n+    }\n+    if (meta.getBitLength() !\u003d 8 * material.length) {\n+      throw new IOException(\"Wrong key length. Required \" +\n+          meta.getBitLength() + \", but got \" + (8 * material.length));\n+    }\n+    int nextVersion \u003d meta.addVersion();\n+    String versionName \u003d buildVersionName(name, nextVersion);\n+    return innerSetKeyVersion(versionName, material, meta.getCipher());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public KeyVersion rollNewVersion(String name,\n                                    byte[] material) throws IOException {\n    Metadata meta \u003d getMetadata(name);\n    if (meta \u003d\u003d null) {\n      throw new IOException(\"Key \" + name + \" not found\");\n    }\n    if (meta.getBitLength() !\u003d 8 * material.length) {\n      throw new IOException(\"Wrong key length. Required \" +\n          meta.getBitLength() + \", but got \" + (8 * material.length));\n    }\n    int nextVersion \u003d meta.addVersion();\n    String versionName \u003d buildVersionName(name, nextVersion);\n    return innerSetKeyVersion(versionName, material, meta.getCipher());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java"
    }
  }
}