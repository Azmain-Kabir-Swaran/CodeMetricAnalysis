{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QuorumJournalManager.java",
  "functionName": "createLoggers",
  "functionId": "createLoggers___conf-Configuration__uri-URI__nsInfo-NamespaceInfo__factory-AsyncLogger.Factory__nameServiceId-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
  "functionStartLine": 410,
  "functionEndLine": 427,
  "numCommitsSeen": 71,
  "timeTaken": 3413,
  "changeHistory": [
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
    "13d4bcfe3535a2df79c2a56e7578716d15497ff4",
    "3a53ef4a802b51e1d5f268f669cd112c03607755",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": "Ymultichange(Yparameterchange,Ybodychange)",
    "13d4bcfe3535a2df79c2a56e7578716d15497ff4": "Ybodychange",
    "3a53ef4a802b51e1d5f268f669cd112c03607755": "Ymultichange(Yparameterchange,Ybodychange)",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
      "commitDate": "13/10/17 2:22 PM",
      "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/09/17 8:44 AM",
          "commitNameOld": "b9e423fa8d30ea89244f6ec018a8064cc87d94a9",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 22.23,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n   static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n-      URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n-          throws IOException {\n+                                         URI uri,\n+                                         NamespaceInfo nsInfo,\n+                                         AsyncLogger.Factory factory,\n+                                         String nameServiceId)\n+      throws IOException {\n     List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n     List\u003cInetSocketAddress\u003e addrs \u003d Util.getAddressesList(uri);\n     if (addrs.size() % 2 \u003d\u003d 0) {\n       LOG.warn(\"Quorum journal URI \u0027\" + uri + \"\u0027 has an even number \" +\n           \"of Journal Nodes specified. This is not recommended!\");\n     }\n     String jid \u003d parseJournalId(uri);\n     for (InetSocketAddress addr : addrs) {\n-      ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n+      ret.add(factory.createLogger(conf, nsInfo, jid, nameServiceId, addr));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n                                         URI uri,\n                                         NamespaceInfo nsInfo,\n                                         AsyncLogger.Factory factory,\n                                         String nameServiceId)\n      throws IOException {\n    List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n    List\u003cInetSocketAddress\u003e addrs \u003d Util.getAddressesList(uri);\n    if (addrs.size() % 2 \u003d\u003d 0) {\n      LOG.warn(\"Quorum journal URI \u0027\" + uri + \"\u0027 has an even number \" +\n          \"of Journal Nodes specified. This is not recommended!\");\n    }\n    String jid \u003d parseJournalId(uri);\n    for (InetSocketAddress addr : addrs) {\n      ret.add(factory.createLogger(conf, nsInfo, jid, nameServiceId, addr));\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, uri-URI, nsInfo-NamespaceInfo, factory-AsyncLogger.Factory]",
            "newValue": "[conf-Configuration, uri-URI, nsInfo-NamespaceInfo, factory-AsyncLogger.Factory, nameServiceId-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/09/17 8:44 AM",
          "commitNameOld": "b9e423fa8d30ea89244f6ec018a8064cc87d94a9",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 22.23,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n   static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n-      URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n-          throws IOException {\n+                                         URI uri,\n+                                         NamespaceInfo nsInfo,\n+                                         AsyncLogger.Factory factory,\n+                                         String nameServiceId)\n+      throws IOException {\n     List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n     List\u003cInetSocketAddress\u003e addrs \u003d Util.getAddressesList(uri);\n     if (addrs.size() % 2 \u003d\u003d 0) {\n       LOG.warn(\"Quorum journal URI \u0027\" + uri + \"\u0027 has an even number \" +\n           \"of Journal Nodes specified. This is not recommended!\");\n     }\n     String jid \u003d parseJournalId(uri);\n     for (InetSocketAddress addr : addrs) {\n-      ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n+      ret.add(factory.createLogger(conf, nsInfo, jid, nameServiceId, addr));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n                                         URI uri,\n                                         NamespaceInfo nsInfo,\n                                         AsyncLogger.Factory factory,\n                                         String nameServiceId)\n      throws IOException {\n    List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n    List\u003cInetSocketAddress\u003e addrs \u003d Util.getAddressesList(uri);\n    if (addrs.size() % 2 \u003d\u003d 0) {\n      LOG.warn(\"Quorum journal URI \u0027\" + uri + \"\u0027 has an even number \" +\n          \"of Journal Nodes specified. This is not recommended!\");\n    }\n    String jid \u003d parseJournalId(uri);\n    for (InetSocketAddress addr : addrs) {\n      ret.add(factory.createLogger(conf, nsInfo, jid, nameServiceId, addr));\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "13d4bcfe3535a2df79c2a56e7578716d15497ff4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4025. QJM: Sychronize past log segments to JNs that missed them. Contributed by Hanisha Koneru.\n",
      "commitDate": "22/02/17 4:33 PM",
      "commitName": "13d4bcfe3535a2df79c2a56e7578716d15497ff4",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "29/08/16 5:48 PM",
      "commitNameOld": "cd5e10ccca9b919d55ef7a500e61b44bd1a00171",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 176.99,
      "commitsBetweenForRepo": 1095,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,15 @@\n   static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n       URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n           throws IOException {\n     List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n-    List\u003cInetSocketAddress\u003e addrs \u003d getLoggerAddresses(uri);\n+    List\u003cInetSocketAddress\u003e addrs \u003d Util.getAddressesList(uri);\n+    if (addrs.size() % 2 \u003d\u003d 0) {\n+      LOG.warn(\"Quorum journal URI \u0027\" + uri + \"\u0027 has an even number \" +\n+          \"of Journal Nodes specified. This is not recommended!\");\n+    }\n     String jid \u003d parseJournalId(uri);\n     for (InetSocketAddress addr : addrs) {\n       ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n      URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n          throws IOException {\n    List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n    List\u003cInetSocketAddress\u003e addrs \u003d Util.getAddressesList(uri);\n    if (addrs.size() % 2 \u003d\u003d 0) {\n      LOG.warn(\"Quorum journal URI \u0027\" + uri + \"\u0027 has an even number \" +\n          \"of Journal Nodes specified. This is not recommended!\");\n    }\n    String jid \u003d parseJournalId(uri);\n    for (InetSocketAddress addr : addrs) {\n      ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
      "extendedDetails": {}
    },
    "3a53ef4a802b51e1d5f268f669cd112c03607755": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3741. Exhaustive failure injection test for skipped RPCs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1370497 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 1:24 PM",
      "commitName": "3a53ef4a802b51e1d5f268f669cd112c03607755",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3741. Exhaustive failure injection test for skipped RPCs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1370497 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/12 1:24 PM",
          "commitName": "3a53ef4a802b51e1d5f268f669cd112c03607755",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/07/12 2:44 PM",
          "commitNameOld": "d2d0736de40c2b2c7872d2438bf1695e23ded5af",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 12.94,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n   static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n-      URI uri, NamespaceInfo nsInfo) throws IOException {\n+      URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n+          throws IOException {\n     List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n     List\u003cInetSocketAddress\u003e addrs \u003d getLoggerAddresses(uri);\n     String jid \u003d parseJournalId(uri);\n     for (InetSocketAddress addr : addrs) {\n-      ret.add(new IPCLoggerChannel(conf, nsInfo, jid, addr));\n+      ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n      URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n          throws IOException {\n    List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n    List\u003cInetSocketAddress\u003e addrs \u003d getLoggerAddresses(uri);\n    String jid \u003d parseJournalId(uri);\n    for (InetSocketAddress addr : addrs) {\n      ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, uri-URI, nsInfo-NamespaceInfo]",
            "newValue": "[conf-Configuration, uri-URI, nsInfo-NamespaceInfo, factory-AsyncLogger.Factory]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3741. Exhaustive failure injection test for skipped RPCs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1370497 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/12 1:24 PM",
          "commitName": "3a53ef4a802b51e1d5f268f669cd112c03607755",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/07/12 2:44 PM",
          "commitNameOld": "d2d0736de40c2b2c7872d2438bf1695e23ded5af",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 12.94,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n   static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n-      URI uri, NamespaceInfo nsInfo) throws IOException {\n+      URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n+          throws IOException {\n     List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n     List\u003cInetSocketAddress\u003e addrs \u003d getLoggerAddresses(uri);\n     String jid \u003d parseJournalId(uri);\n     for (InetSocketAddress addr : addrs) {\n-      ret.add(new IPCLoggerChannel(conf, nsInfo, jid, addr));\n+      ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n      URI uri, NamespaceInfo nsInfo, AsyncLogger.Factory factory)\n          throws IOException {\n    List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n    List\u003cInetSocketAddress\u003e addrs \u003d getLoggerAddresses(uri);\n    String jid \u003d parseJournalId(uri);\n    for (InetSocketAddress addr : addrs) {\n      ret.add(factory.createLogger(conf, nsInfo, jid, addr));\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,10 @@\n+  static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n+      URI uri, NamespaceInfo nsInfo) throws IOException {\n+    List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n+    List\u003cInetSocketAddress\u003e addrs \u003d getLoggerAddresses(uri);\n+    String jid \u003d parseJournalId(uri);\n+    for (InetSocketAddress addr : addrs) {\n+      ret.add(new IPCLoggerChannel(conf, nsInfo, jid, addr));\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cAsyncLogger\u003e createLoggers(Configuration conf,\n      URI uri, NamespaceInfo nsInfo) throws IOException {\n    List\u003cAsyncLogger\u003e ret \u003d Lists.newArrayList();\n    List\u003cInetSocketAddress\u003e addrs \u003d getLoggerAddresses(uri);\n    String jid \u003d parseJournalId(uri);\n    for (InetSocketAddress addr : addrs) {\n      ret.add(new IPCLoggerChannel(conf, nsInfo, jid, addr));\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java"
    }
  }
}