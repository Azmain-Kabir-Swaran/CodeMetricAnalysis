{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CredentialShell.java",
  "functionName": "promptForCredential",
  "functionId": "promptForCredential",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java",
  "functionStartLine": 467,
  "functionEndLine": 493,
  "numCommitsSeen": 15,
  "timeTaken": 1408,
  "changeHistory": [
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
    "1e7ce76bbab08a153b285739de51c3de924e3580",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": "Ybodychange",
    "1e7ce76bbab08a153b285739de51c3de924e3580": "Ybodychange",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12942. hadoop credential commands non-obviously use password of \"none\" (Mike Yoder via lmccay)",
      "commitDate": "11/05/16 11:30 AM",
      "commitName": "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
      "commitAuthor": "Larry McCay",
      "commitDateOld": "24/03/15 4:57 AM",
      "commitNameOld": "6e891a921e00b122390a976dfd13838472a7fcc6",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 414.27,
      "commitsBetweenForRepo": 3094,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   protected char[] promptForCredential() throws IOException {\n     PasswordReader c \u003d getPasswordReader();\n     if (c \u003d\u003d null) {\n       throw new IOException(\"No console available for prompting user.\");\n     }\n     \n     char[] cred \u003d null;\n \n     boolean noMatch;\n     do {\n-      char[] newPassword1 \u003d c.readPassword(\"Enter password: \");\n-      char[] newPassword2 \u003d c.readPassword(\"Enter password again: \");\n+      char[] newPassword1 \u003d c.readPassword(\"Enter alias password: \");\n+      char[] newPassword2 \u003d c.readPassword(\"Enter alias password again: \");\n       noMatch \u003d !Arrays.equals(newPassword1, newPassword2);\n       if (noMatch) {\n-        if (newPassword1 !\u003d null) Arrays.fill(newPassword1, \u0027 \u0027);\n+        if (newPassword1 !\u003d null) {\n+          Arrays.fill(newPassword1, \u0027 \u0027);\n+        }\n         c.format(\"Passwords don\u0027t match. Try again.%n\");\n       } else {\n         cred \u003d newPassword1;\n       }\n-      if (newPassword2 !\u003d null) Arrays.fill(newPassword2, \u0027 \u0027);\n+      if (newPassword2 !\u003d null) {\n+        Arrays.fill(newPassword2, \u0027 \u0027);\n+      }\n     } while (noMatch);\n     return cred;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected char[] promptForCredential() throws IOException {\n    PasswordReader c \u003d getPasswordReader();\n    if (c \u003d\u003d null) {\n      throw new IOException(\"No console available for prompting user.\");\n    }\n    \n    char[] cred \u003d null;\n\n    boolean noMatch;\n    do {\n      char[] newPassword1 \u003d c.readPassword(\"Enter alias password: \");\n      char[] newPassword2 \u003d c.readPassword(\"Enter alias password again: \");\n      noMatch \u003d !Arrays.equals(newPassword1, newPassword2);\n      if (noMatch) {\n        if (newPassword1 !\u003d null) {\n          Arrays.fill(newPassword1, \u0027 \u0027);\n        }\n        c.format(\"Passwords don\u0027t match. Try again.%n\");\n      } else {\n        cred \u003d newPassword1;\n      }\n      if (newPassword2 !\u003d null) {\n        Arrays.fill(newPassword2, \u0027 \u0027);\n      }\n    } while (noMatch);\n    return cred;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java",
      "extendedDetails": {}
    },
    "1e7ce76bbab08a153b285739de51c3de924e3580": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10733. Fix potential null dereference in CredShell. (Ted Yu via\nomalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611419 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 11:09 AM",
      "commitName": "1e7ce76bbab08a153b285739de51c3de924e3580",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "15/07/14 11:22 AM",
      "commitNameOld": "317542f51ff7fa5d6122d664089ed451cf6497db",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 1.99,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   protected char[] promptForCredential() throws IOException {\n     PasswordReader c \u003d getPasswordReader();\n     if (c \u003d\u003d null) {\n       throw new IOException(\"No console available for prompting user.\");\n     }\n     \n     char[] cred \u003d null;\n \n     boolean noMatch;\n     do {\n       char[] newPassword1 \u003d c.readPassword(\"Enter password: \");\n       char[] newPassword2 \u003d c.readPassword(\"Enter password again: \");\n       noMatch \u003d !Arrays.equals(newPassword1, newPassword2);\n       if (noMatch) {\n-        Arrays.fill(newPassword1, \u0027 \u0027);\n+        if (newPassword1 !\u003d null) Arrays.fill(newPassword1, \u0027 \u0027);\n         c.format(\"Passwords don\u0027t match. Try again.%n\");\n       } else {\n         cred \u003d newPassword1;\n       }\n-      Arrays.fill(newPassword2, \u0027 \u0027);\n+      if (newPassword2 !\u003d null) Arrays.fill(newPassword2, \u0027 \u0027);\n     } while (noMatch);\n     return cred;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected char[] promptForCredential() throws IOException {\n    PasswordReader c \u003d getPasswordReader();\n    if (c \u003d\u003d null) {\n      throw new IOException(\"No console available for prompting user.\");\n    }\n    \n    char[] cred \u003d null;\n\n    boolean noMatch;\n    do {\n      char[] newPassword1 \u003d c.readPassword(\"Enter password: \");\n      char[] newPassword2 \u003d c.readPassword(\"Enter password again: \");\n      noMatch \u003d !Arrays.equals(newPassword1, newPassword2);\n      if (noMatch) {\n        if (newPassword1 !\u003d null) Arrays.fill(newPassword1, \u0027 \u0027);\n        c.format(\"Passwords don\u0027t match. Try again.%n\");\n      } else {\n        cred \u003d newPassword1;\n      }\n      if (newPassword2 !\u003d null) Arrays.fill(newPassword2, \u0027 \u0027);\n    } while (noMatch);\n    return cred;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java",
      "extendedDetails": {}
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,23 @@\n+  protected char[] promptForCredential() throws IOException {\n+    PasswordReader c \u003d getPasswordReader();\n+    if (c \u003d\u003d null) {\n+      throw new IOException(\"No console available for prompting user.\");\n+    }\n+    \n+    char[] cred \u003d null;\n+\n+    boolean noMatch;\n+    do {\n+      char[] newPassword1 \u003d c.readPassword(\"Enter password: \");\n+      char[] newPassword2 \u003d c.readPassword(\"Enter password again: \");\n+      noMatch \u003d !Arrays.equals(newPassword1, newPassword2);\n+      if (noMatch) {\n+        Arrays.fill(newPassword1, \u0027 \u0027);\n+        c.format(\"Passwords don\u0027t match. Try again.%n\");\n+      } else {\n+        cred \u003d newPassword1;\n+      }\n+      Arrays.fill(newPassword2, \u0027 \u0027);\n+    } while (noMatch);\n+    return cred;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected char[] promptForCredential() throws IOException {\n    PasswordReader c \u003d getPasswordReader();\n    if (c \u003d\u003d null) {\n      throw new IOException(\"No console available for prompting user.\");\n    }\n    \n    char[] cred \u003d null;\n\n    boolean noMatch;\n    do {\n      char[] newPassword1 \u003d c.readPassword(\"Enter password: \");\n      char[] newPassword2 \u003d c.readPassword(\"Enter password again: \");\n      noMatch \u003d !Arrays.equals(newPassword1, newPassword2);\n      if (noMatch) {\n        Arrays.fill(newPassword1, \u0027 \u0027);\n        c.format(\"Passwords don\u0027t match. Try again.%n\");\n      } else {\n        cred \u003d newPassword1;\n      }\n      Arrays.fill(newPassword2, \u0027 \u0027);\n    } while (noMatch);\n    return cred;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java"
    }
  }
}