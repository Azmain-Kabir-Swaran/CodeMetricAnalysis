{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FilterFileSystem.java",
  "functionName": "create",
  "functionId": "create___f-Path__permission-FsPermission__flags-EnumSet__CreateFlag____bufferSize-int__replication-short__blockSize-long__progress-Progressable__checksumOpt-ChecksumOpt",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FilterFileSystem.java",
  "functionStartLine": 200,
  "functionEndLine": 210,
  "numCommitsSeen": 50,
  "timeTaken": 1161,
  "changeHistory": [
    "b18d3830aca00f44d31e42839578f24eecedf2c8",
    "bbaa7dc28db75d9b3700c6ff95222d8e1de29c15"
  ],
  "changeHistoryShort": {
    "b18d3830aca00f44d31e42839578f24eecedf2c8": "Ybodychange",
    "bbaa7dc28db75d9b3700c6ff95222d8e1de29c15": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b18d3830aca00f44d31e42839578f24eecedf2c8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11605. FilterFileSystem#create with ChecksumOpt should propagate it to wrapped FS. (gera)\n",
      "commitDate": "02/03/15 6:09 PM",
      "commitName": "b18d3830aca00f44d31e42839578f24eecedf2c8",
      "commitAuthor": "Gera Shegalov",
      "commitDateOld": "21/01/15 4:00 PM",
      "commitNameOld": "a0521bc83a168a06f21314a9aff78630a576fc75",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 40.09,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public FSDataOutputStream create(Path f,\n         FsPermission permission,\n         EnumSet\u003cCreateFlag\u003e flags,\n         int bufferSize,\n         short replication,\n         long blockSize,\n         Progressable progress,\n         ChecksumOpt checksumOpt) throws IOException {\n     return fs.create(f, permission,\n-      flags, bufferSize, replication, blockSize, progress);\n+      flags, bufferSize, replication, blockSize, progress, checksumOpt);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n        FsPermission permission,\n        EnumSet\u003cCreateFlag\u003e flags,\n        int bufferSize,\n        short replication,\n        long blockSize,\n        Progressable progress,\n        ChecksumOpt checksumOpt) throws IOException {\n    return fs.create(f, permission,\n      flags, bufferSize, replication, blockSize, progress, checksumOpt);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FilterFileSystem.java",
      "extendedDetails": {}
    },
    "bbaa7dc28db75d9b3700c6ff95222d8e1de29c15": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6928. \u0027hdfs put\u0027 command should accept lazyPersist flag for testing. (Arpit Agarwal)\n",
      "commitDate": "28/08/14 3:53 PM",
      "commitName": "bbaa7dc28db75d9b3700c6ff95222d8e1de29c15",
      "commitAuthor": "arp",
      "diff": "@@ -0,0 +1,11 @@\n+  public FSDataOutputStream create(Path f,\n+        FsPermission permission,\n+        EnumSet\u003cCreateFlag\u003e flags,\n+        int bufferSize,\n+        short replication,\n+        long blockSize,\n+        Progressable progress,\n+        ChecksumOpt checksumOpt) throws IOException {\n+    return fs.create(f, permission,\n+      flags, bufferSize, replication, blockSize, progress);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n        FsPermission permission,\n        EnumSet\u003cCreateFlag\u003e flags,\n        int bufferSize,\n        short replication,\n        long blockSize,\n        Progressable progress,\n        ChecksumOpt checksumOpt) throws IOException {\n    return fs.create(f, permission,\n      flags, bufferSize, replication, blockSize, progress);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FilterFileSystem.java"
    }
  }
}