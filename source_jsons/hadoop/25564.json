{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptListenerImpl.java",
  "functionName": "update",
  "functionId": "update___progress-float(modifiers-final)",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
  "functionStartLine": 695,
  "functionEndLine": 714,
  "numCommitsSeen": 38,
  "timeTaken": 1555,
  "changeHistory": [
    "11d17417ceba0f1a2944e0c8b4286515c4883889"
  ],
  "changeHistoryShort": {
    "11d17417ceba0f1a2944e0c8b4286515c4883889": "Yintroduced"
  },
  "changeHistoryDetails": {
    "11d17417ceba0f1a2944e0c8b4286515c4883889": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-7272. TaskAttemptListenerImpl excessive log messages. Contributed by Ahmed Hussein (ahussein)\n",
      "commitDate": "13/04/20 11:20 AM",
      "commitName": "11d17417ceba0f1a2944e0c8b4286515c4883889",
      "commitAuthor": "Eric E Payne",
      "diff": "@@ -0,0 +1,20 @@\n+    public void update(final float progress) {\n+      final double processedProgress \u003d\n+          MRJobConfUtil.convertTaskProgressToFactor(progress);\n+      final double diffProgress \u003d processedProgress - prevProgress;\n+      final long currentTime \u003d Time.monotonicNow();\n+      boolean result \u003d\n+          (Double.compare(diffProgress,\n+              MRJobConfUtil.getTaskProgressMinDeltaThreshold()) \u003e\u003d 0);\n+      if (!result) {\n+        // check if time has expired.\n+        result \u003d ((currentTime - logTimeStamp)\n+            \u003e\u003d MRJobConfUtil.getTaskProgressWaitDeltaTimeThreshold());\n+      }\n+      // It is helpful to log the progress when it reaches 1.0F.\n+      if (Float.compare(progress, 1.0f) \u003d\u003d 0) {\n+        result \u003d true;\n+        taskAttemptLogProgressStamps.remove(taskAttemptID);\n+      }\n+      resetLog(result, progress, processedProgress, currentTime);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void update(final float progress) {\n      final double processedProgress \u003d\n          MRJobConfUtil.convertTaskProgressToFactor(progress);\n      final double diffProgress \u003d processedProgress - prevProgress;\n      final long currentTime \u003d Time.monotonicNow();\n      boolean result \u003d\n          (Double.compare(diffProgress,\n              MRJobConfUtil.getTaskProgressMinDeltaThreshold()) \u003e\u003d 0);\n      if (!result) {\n        // check if time has expired.\n        result \u003d ((currentTime - logTimeStamp)\n            \u003e\u003d MRJobConfUtil.getTaskProgressWaitDeltaTimeThreshold());\n      }\n      // It is helpful to log the progress when it reaches 1.0F.\n      if (Float.compare(progress, 1.0f) \u003d\u003d 0) {\n        result \u003d true;\n        taskAttemptLogProgressStamps.remove(taskAttemptID);\n      }\n      resetLog(result, progress, processedProgress, currentTime);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java"
    }
  }
}