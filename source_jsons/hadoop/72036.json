{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuthenticationHandlerUtil.java",
  "functionName": "getAuthenticationHandlerClassName",
  "functionId": "getAuthenticationHandlerClassName___authHandler-String",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationHandlerUtil.java",
  "functionStartLine": 46,
  "functionEndLine": 65,
  "numCommitsSeen": 1,
  "timeTaken": 558,
  "changeHistory": [
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492"
  ],
  "changeHistoryShort": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12082 Support multiple authentication schemes via AuthenticationFilter\n",
      "commitDate": "18/10/16 6:32 PM",
      "commitName": "4bca385241c0fc8ff168c7b0f2984a7aed2c7492",
      "commitAuthor": "Benoy Antony",
      "diff": "@@ -0,0 +1,20 @@\n+  public static String getAuthenticationHandlerClassName(String authHandler) {\n+    String handlerName \u003d\n+        Preconditions.checkNotNull(authHandler).toLowerCase(Locale.ENGLISH);\n+\n+    String authHandlerClassName \u003d null;\n+\n+    if (handlerName.equals(PseudoAuthenticationHandler.TYPE)) {\n+      authHandlerClassName \u003d PseudoAuthenticationHandler.class.getName();\n+    } else if (handlerName.equals(KerberosAuthenticationHandler.TYPE)) {\n+      authHandlerClassName \u003d KerberosAuthenticationHandler.class.getName();\n+    } else if (handlerName.equals(LdapAuthenticationHandler.TYPE)) {\n+      authHandlerClassName \u003d LdapAuthenticationHandler.class.getName();\n+    } else if (handlerName.equals(MultiSchemeAuthenticationHandler.TYPE)) {\n+      authHandlerClassName \u003d MultiSchemeAuthenticationHandler.class.getName();\n+    } else {\n+      authHandlerClassName \u003d authHandler;\n+    }\n+\n+    return authHandlerClassName;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getAuthenticationHandlerClassName(String authHandler) {\n    String handlerName \u003d\n        Preconditions.checkNotNull(authHandler).toLowerCase(Locale.ENGLISH);\n\n    String authHandlerClassName \u003d null;\n\n    if (handlerName.equals(PseudoAuthenticationHandler.TYPE)) {\n      authHandlerClassName \u003d PseudoAuthenticationHandler.class.getName();\n    } else if (handlerName.equals(KerberosAuthenticationHandler.TYPE)) {\n      authHandlerClassName \u003d KerberosAuthenticationHandler.class.getName();\n    } else if (handlerName.equals(LdapAuthenticationHandler.TYPE)) {\n      authHandlerClassName \u003d LdapAuthenticationHandler.class.getName();\n    } else if (handlerName.equals(MultiSchemeAuthenticationHandler.TYPE)) {\n      authHandlerClassName \u003d MultiSchemeAuthenticationHandler.class.getName();\n    } else {\n      authHandlerClassName \u003d authHandler;\n    }\n\n    return authHandlerClassName;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationHandlerUtil.java"
    }
  }
}