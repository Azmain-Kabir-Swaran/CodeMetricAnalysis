{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsConfig.java",
  "functionName": "getPluginLoader",
  "functionId": "getPluginLoader",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
  "functionStartLine": 224,
  "functionEndLine": 260,
  "numCommitsSeen": 18,
  "timeTaken": 1358,
  "changeHistory": [
    "33768724ff99d4966c24c9553eef207ed31a76d3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de"
  ],
  "changeHistoryShort": {
    "33768724ff99d4966c24c9553eef207ed31a76d3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "33768724ff99d4966c24c9553eef207ed31a76d3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15377. Improve debug messages in MetricsConfig.java\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "02/05/18 1:09 AM",
      "commitName": "33768724ff99d4966c24c9553eef207ed31a76d3",
      "commitAuthor": "BELUGA BEHR",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 288.15,
      "commitsBetweenForRepo": 2724,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,37 @@\n   ClassLoader getPluginLoader() {\n-    if (pluginLoader !\u003d null) return pluginLoader;\n+    if (pluginLoader !\u003d null) {\n+      return pluginLoader;\n+    }\n     final ClassLoader defaultLoader \u003d getClass().getClassLoader();\n     Object purls \u003d super.getProperty(PLUGIN_URLS_KEY);\n-    if (purls \u003d\u003d null) return defaultLoader;\n+    if (purls \u003d\u003d null) {\n+      return defaultLoader;\n+    }\n     Iterable\u003cString\u003e jars \u003d SPLITTER.split((String) purls);\n     int len \u003d Iterables.size(jars);\n-    if ( len \u003e 0) {\n+    if (len \u003e 0) {\n       final URL[] urls \u003d new URL[len];\n       try {\n         int i \u003d 0;\n         for (String jar : jars) {\n-          LOG.debug(jar);\n+          LOG.debug(\"Parsing URL for {}\", jar);\n           urls[i++] \u003d new URL(jar);\n         }\n       } catch (Exception e) {\n         throw new MetricsConfigException(e);\n       }\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"using plugin jars: \"+ Iterables.toString(jars));\n+        LOG.debug(\"Using plugin jars: {}\", Iterables.toString(jars));\n       }\n       pluginLoader \u003d doPrivileged(new PrivilegedAction\u003cClassLoader\u003e() {\n         @Override public ClassLoader run() {\n           return new URLClassLoader(urls, defaultLoader);\n         }\n       });\n       return pluginLoader;\n     }\n     if (parent instanceof MetricsConfig) {\n       return ((MetricsConfig) parent).getPluginLoader();\n     }\n     return defaultLoader;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  ClassLoader getPluginLoader() {\n    if (pluginLoader !\u003d null) {\n      return pluginLoader;\n    }\n    final ClassLoader defaultLoader \u003d getClass().getClassLoader();\n    Object purls \u003d super.getProperty(PLUGIN_URLS_KEY);\n    if (purls \u003d\u003d null) {\n      return defaultLoader;\n    }\n    Iterable\u003cString\u003e jars \u003d SPLITTER.split((String) purls);\n    int len \u003d Iterables.size(jars);\n    if (len \u003e 0) {\n      final URL[] urls \u003d new URL[len];\n      try {\n        int i \u003d 0;\n        for (String jar : jars) {\n          LOG.debug(\"Parsing URL for {}\", jar);\n          urls[i++] \u003d new URL(jar);\n        }\n      } catch (Exception e) {\n        throw new MetricsConfigException(e);\n      }\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Using plugin jars: {}\", Iterables.toString(jars));\n      }\n      pluginLoader \u003d doPrivileged(new PrivilegedAction\u003cClassLoader\u003e() {\n        @Override public ClassLoader run() {\n          return new URLClassLoader(urls, defaultLoader);\n        }\n      });\n      return pluginLoader;\n    }\n    if (parent instanceof MetricsConfig) {\n      return ((MetricsConfig) parent).getPluginLoader();\n    }\n    return defaultLoader;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  ClassLoader getPluginLoader() {\n    if (pluginLoader !\u003d null) return pluginLoader;\n    final ClassLoader defaultLoader \u003d getClass().getClassLoader();\n    Object purls \u003d super.getProperty(PLUGIN_URLS_KEY);\n    if (purls \u003d\u003d null) return defaultLoader;\n    Iterable\u003cString\u003e jars \u003d SPLITTER.split((String) purls);\n    int len \u003d Iterables.size(jars);\n    if ( len \u003e 0) {\n      final URL[] urls \u003d new URL[len];\n      try {\n        int i \u003d 0;\n        for (String jar : jars) {\n          LOG.debug(jar);\n          urls[i++] \u003d new URL(jar);\n        }\n      }\n      catch (Exception e) {\n        throw new MetricsConfigException(e);\n      }\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"using plugin jars: \"+ Iterables.toString(jars));\n      }\n      pluginLoader \u003d doPrivileged(new PrivilegedAction\u003cClassLoader\u003e() {\n        @Override public ClassLoader run() {\n          return new URLClassLoader(urls, defaultLoader);\n        }\n      });\n      return pluginLoader;\n    }\n    if (parent instanceof MetricsConfig) {\n      return ((MetricsConfig) parent).getPluginLoader();\n    }\n    return defaultLoader;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  ClassLoader getPluginLoader() {\n    if (pluginLoader !\u003d null) return pluginLoader;\n    final ClassLoader defaultLoader \u003d getClass().getClassLoader();\n    Object purls \u003d super.getProperty(PLUGIN_URLS_KEY);\n    if (purls \u003d\u003d null) return defaultLoader;\n    Iterable\u003cString\u003e jars \u003d SPLITTER.split((String) purls);\n    int len \u003d Iterables.size(jars);\n    if ( len \u003e 0) {\n      final URL[] urls \u003d new URL[len];\n      try {\n        int i \u003d 0;\n        for (String jar : jars) {\n          LOG.debug(jar);\n          urls[i++] \u003d new URL(jar);\n        }\n      }\n      catch (Exception e) {\n        throw new MetricsConfigException(e);\n      }\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"using plugin jars: \"+ Iterables.toString(jars));\n      }\n      pluginLoader \u003d doPrivileged(new PrivilegedAction\u003cClassLoader\u003e() {\n        @Override public ClassLoader run() {\n          return new URLClassLoader(urls, defaultLoader);\n        }\n      });\n      return pluginLoader;\n    }\n    if (parent instanceof MetricsConfig) {\n      return ((MetricsConfig) parent).getPluginLoader();\n    }\n    return defaultLoader;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  ClassLoader getPluginLoader() {\n    if (pluginLoader !\u003d null) return pluginLoader;\n    final ClassLoader defaultLoader \u003d getClass().getClassLoader();\n    Object purls \u003d super.getProperty(PLUGIN_URLS_KEY);\n    if (purls \u003d\u003d null) return defaultLoader;\n    Iterable\u003cString\u003e jars \u003d SPLITTER.split((String) purls);\n    int len \u003d Iterables.size(jars);\n    if ( len \u003e 0) {\n      final URL[] urls \u003d new URL[len];\n      try {\n        int i \u003d 0;\n        for (String jar : jars) {\n          LOG.debug(jar);\n          urls[i++] \u003d new URL(jar);\n        }\n      }\n      catch (Exception e) {\n        throw new MetricsConfigException(e);\n      }\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"using plugin jars: \"+ Iterables.toString(jars));\n      }\n      pluginLoader \u003d doPrivileged(new PrivilegedAction\u003cClassLoader\u003e() {\n        @Override public ClassLoader run() {\n          return new URLClassLoader(urls, defaultLoader);\n        }\n      });\n      return pluginLoader;\n    }\n    if (parent instanceof MetricsConfig) {\n      return ((MetricsConfig) parent).getPluginLoader();\n    }\n    return defaultLoader;\n  }",
      "path": "common/src/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java",
        "newPath": "common/src/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java"
      }
    },
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6919. New metrics2 framework. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1100113 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/11 12:28 AM",
      "commitName": "827401a9b1d85fe1f443d21ebe9d917ba23153de",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,34 @@\n+  ClassLoader getPluginLoader() {\n+    if (pluginLoader !\u003d null) return pluginLoader;\n+    final ClassLoader defaultLoader \u003d getClass().getClassLoader();\n+    Object purls \u003d super.getProperty(PLUGIN_URLS_KEY);\n+    if (purls \u003d\u003d null) return defaultLoader;\n+    Iterable\u003cString\u003e jars \u003d SPLITTER.split((String) purls);\n+    int len \u003d Iterables.size(jars);\n+    if ( len \u003e 0) {\n+      final URL[] urls \u003d new URL[len];\n+      try {\n+        int i \u003d 0;\n+        for (String jar : jars) {\n+          LOG.debug(jar);\n+          urls[i++] \u003d new URL(jar);\n+        }\n+      }\n+      catch (Exception e) {\n+        throw new MetricsConfigException(e);\n+      }\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"using plugin jars: \"+ Iterables.toString(jars));\n+      }\n+      pluginLoader \u003d doPrivileged(new PrivilegedAction\u003cClassLoader\u003e() {\n+        @Override public ClassLoader run() {\n+          return new URLClassLoader(urls, defaultLoader);\n+        }\n+      });\n+      return pluginLoader;\n+    }\n+    if (parent instanceof MetricsConfig) {\n+      return ((MetricsConfig) parent).getPluginLoader();\n+    }\n+    return defaultLoader;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  ClassLoader getPluginLoader() {\n    if (pluginLoader !\u003d null) return pluginLoader;\n    final ClassLoader defaultLoader \u003d getClass().getClassLoader();\n    Object purls \u003d super.getProperty(PLUGIN_URLS_KEY);\n    if (purls \u003d\u003d null) return defaultLoader;\n    Iterable\u003cString\u003e jars \u003d SPLITTER.split((String) purls);\n    int len \u003d Iterables.size(jars);\n    if ( len \u003e 0) {\n      final URL[] urls \u003d new URL[len];\n      try {\n        int i \u003d 0;\n        for (String jar : jars) {\n          LOG.debug(jar);\n          urls[i++] \u003d new URL(jar);\n        }\n      }\n      catch (Exception e) {\n        throw new MetricsConfigException(e);\n      }\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"using plugin jars: \"+ Iterables.toString(jars));\n      }\n      pluginLoader \u003d doPrivileged(new PrivilegedAction\u003cClassLoader\u003e() {\n        @Override public ClassLoader run() {\n          return new URLClassLoader(urls, defaultLoader);\n        }\n      });\n      return pluginLoader;\n    }\n    if (parent instanceof MetricsConfig) {\n      return ((MetricsConfig) parent).getPluginLoader();\n    }\n    return defaultLoader;\n  }",
      "path": "src/java/org/apache/hadoop/metrics2/impl/MetricsConfig.java"
    }
  }
}