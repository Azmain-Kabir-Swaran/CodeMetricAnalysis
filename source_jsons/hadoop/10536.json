{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 568,
  "functionEndLine": 580,
  "numCommitsSeen": 125,
  "timeTaken": 2959,
  "changeHistory": [
    "2759689d7d23001f007cb0dbe2521de90734dd5c",
    "1e346aa829519f8a2aa830e76d9856f914861805"
  ],
  "changeHistoryShort": {
    "2759689d7d23001f007cb0dbe2521de90734dd5c": "Ymultichange(Ymodifierchange,Ybodychange)",
    "1e346aa829519f8a2aa830e76d9856f914861805": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2759689d7d23001f007cb0dbe2521de90734dd5c": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-9239. DataNode Lifeline Protocol: an alternative protocol for reporting DataNode liveness. Contributed by Chris Nauroth.\n",
      "commitDate": "04/03/16 3:29 PM",
      "commitName": "2759689d7d23001f007cb0dbe2521de90734dd5c",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-9239. DataNode Lifeline Protocol: an alternative protocol for reporting DataNode liveness. Contributed by Chris Nauroth.\n",
          "commitDate": "04/03/16 3:29 PM",
          "commitName": "2759689d7d23001f007cb0dbe2521de90734dd5c",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "26/02/16 3:32 PM",
          "commitNameOld": "d1d4e16690cc85f7f22fbead9cf596260819b561",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 7.0,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,13 @@\n-  void start() {\n-    if ((bpThread !\u003d null) \u0026\u0026 (bpThread.isAlive())) {\n-      //Thread is started already\n-      return;\n-    }\n-    bpThread \u003d new Thread(this, formatThreadName());\n-    bpThread.setDaemon(true); // needed for JUnit testing\n-    bpThread.start();\n-  }\n\\ No newline at end of file\n+    public void start() {\n+      lifelineThread \u003d new Thread(this, formatThreadName(\"lifeline\",\n+          lifelineNnAddr));\n+      lifelineThread.setDaemon(true);\n+      lifelineThread.setUncaughtExceptionHandler(\n+          new Thread.UncaughtExceptionHandler() {\n+            @Override\n+            public void uncaughtException(Thread thread, Throwable t) {\n+              LOG.error(thread + \" terminating on unexpected exception\", t);\n+            }\n+          });\n+      lifelineThread.start();\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void start() {\n      lifelineThread \u003d new Thread(this, formatThreadName(\"lifeline\",\n          lifelineNnAddr));\n      lifelineThread.setDaemon(true);\n      lifelineThread.setUncaughtExceptionHandler(\n          new Thread.UncaughtExceptionHandler() {\n            @Override\n            public void uncaughtException(Thread thread, Throwable t) {\n              LOG.error(thread + \" terminating on unexpected exception\", t);\n            }\n          });\n      lifelineThread.start();\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9239. DataNode Lifeline Protocol: an alternative protocol for reporting DataNode liveness. Contributed by Chris Nauroth.\n",
          "commitDate": "04/03/16 3:29 PM",
          "commitName": "2759689d7d23001f007cb0dbe2521de90734dd5c",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "26/02/16 3:32 PM",
          "commitNameOld": "d1d4e16690cc85f7f22fbead9cf596260819b561",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 7.0,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,13 @@\n-  void start() {\n-    if ((bpThread !\u003d null) \u0026\u0026 (bpThread.isAlive())) {\n-      //Thread is started already\n-      return;\n-    }\n-    bpThread \u003d new Thread(this, formatThreadName());\n-    bpThread.setDaemon(true); // needed for JUnit testing\n-    bpThread.start();\n-  }\n\\ No newline at end of file\n+    public void start() {\n+      lifelineThread \u003d new Thread(this, formatThreadName(\"lifeline\",\n+          lifelineNnAddr));\n+      lifelineThread.setDaemon(true);\n+      lifelineThread.setUncaughtExceptionHandler(\n+          new Thread.UncaughtExceptionHandler() {\n+            @Override\n+            public void uncaughtException(Thread thread, Throwable t) {\n+              LOG.error(thread + \" terminating on unexpected exception\", t);\n+            }\n+          });\n+      lifelineThread.start();\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void start() {\n      lifelineThread \u003d new Thread(this, formatThreadName(\"lifeline\",\n          lifelineNnAddr));\n      lifelineThread.setDaemon(true);\n      lifelineThread.setUncaughtExceptionHandler(\n          new Thread.UncaughtExceptionHandler() {\n            @Override\n            public void uncaughtException(Thread thread, Throwable t) {\n              LOG.error(thread + \" terminating on unexpected exception\", t);\n            }\n          });\n      lifelineThread.start();\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
          "extendedDetails": {}
        }
      ]
    },
    "1e346aa829519f8a2aa830e76d9856f914861805": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 5:10 PM",
      "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,9 @@\n+  void start() {\n+    if ((bpThread !\u003d null) \u0026\u0026 (bpThread.isAlive())) {\n+      //Thread is started already\n+      return;\n+    }\n+    bpThread \u003d new Thread(this, formatThreadName());\n+    bpThread.setDaemon(true); // needed for JUnit testing\n+    bpThread.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    if ((bpThread !\u003d null) \u0026\u0026 (bpThread.isAlive())) {\n      //Thread is started already\n      return;\n    }\n    bpThread \u003d new Thread(this, formatThreadName());\n    bpThread.setDaemon(true); // needed for JUnit testing\n    bpThread.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java"
    }
  }
}