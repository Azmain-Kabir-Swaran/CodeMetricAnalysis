{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineServiceV2Publisher.java",
  "functionName": "containerFinished",
  "functionId": "containerFinished___container-RMContainer__finishedTime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
  "functionStartLine": 431,
  "functionEndLine": 455,
  "numCommitsSeen": 27,
  "timeTaken": 1751,
  "changeHistory": [
    "1f304b0c7f261369dd68839507bb609a949965ad",
    "6d943038f61211594d017f631710e6710ec71372",
    "c2055a97d55fc4305cf7d2762cd6bc676b97ca8c",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4"
  ],
  "changeHistoryShort": {
    "1f304b0c7f261369dd68839507bb609a949965ad": "Ybodychange",
    "6d943038f61211594d017f631710e6710ec71372": "Ybodychange",
    "c2055a97d55fc4305cf7d2762cd6bc676b97ca8c": "Ybodychange",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f304b0c7f261369dd68839507bb609a949965ad": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5699. Retrospect yarn entity fields which are publishing in events info fields. Contributed by Rohith Sharma K S.\n",
      "commitDate": "15/10/16 1:54 PM",
      "commitName": "1f304b0c7f261369dd68839507bb609a949965ad",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "28/09/16 3:40 AM",
      "commitNameOld": "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 17.43,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,25 @@\n   public void containerFinished(RMContainer container, long finishedTime) {\n     if (publishContainerEvents) {\n       TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n       TimelineEvent tEvent \u003d new TimelineEvent();\n       tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n       tEvent.setTimestamp(finishedTime);\n-      Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-      eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n-          container.getDiagnosticsInfo());\n-      eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n-          container.getContainerExitStatus());\n-      eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n-          container.getContainerState().toString());\n-      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-      entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n-          container.getAllocatedNode().getHost());\n-      entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n-          container.getAllocatedNode().getPort());\n-      entity.setInfo(entityInfo);\n-      tEvent.setInfo(eventInfo);\n-\n       entity.addEvent(tEvent);\n+\n+      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n+          container.getDiagnosticsInfo());\n+      entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n+          container.getContainerExitStatus());\n+      entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n+          container.getContainerState().toString());\n+      entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n+          finishedTime);\n+      entity.setInfo(entityInfo);\n+\n       getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n           SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n               .getContainerId().getApplicationAttemptId().getApplicationId()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    if (publishContainerEvents) {\n      TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n      TimelineEvent tEvent \u003d new TimelineEvent();\n      tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n      tEvent.setTimestamp(finishedTime);\n      entity.addEvent(tEvent);\n\n      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n          container.getDiagnosticsInfo());\n      entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n          container.getContainerExitStatus());\n      entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n          container.getContainerState().toString());\n      entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n          finishedTime);\n      entity.setInfo(entityInfo);\n\n      getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n          SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n              .getContainerId().getApplicationAttemptId().getApplicationId()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
      "extendedDetails": {}
    },
    "6d943038f61211594d017f631710e6710ec71372": {
      "type": "Ybodychange",
      "commitMessage": "Cleanup changes during rebase with trunk (Vrushali C)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "6d943038f61211594d017f631710e6710ec71372",
      "commitAuthor": "Vrushali",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "c2055a97d55fc4305cf7d2762cd6bc676b97ca8c",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,28 @@\n   public void containerFinished(RMContainer container, long finishedTime) {\n     if (publishContainerEvents) {\n       TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n       TimelineEvent tEvent \u003d new TimelineEvent();\n       tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n       tEvent.setTimestamp(finishedTime);\n       Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n       eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n           container.getDiagnosticsInfo());\n       eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n           container.getContainerExitStatus());\n       eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n           container.getContainerState().toString());\n+      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+      entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+          container.getAllocatedNode().getHost());\n+      entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+          container.getAllocatedNode().getPort());\n+      entity.setInfo(entityInfo);\n       tEvent.setInfo(eventInfo);\n \n       entity.addEvent(tEvent);\n       getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n           SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n               .getContainerId().getApplicationAttemptId().getApplicationId()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    if (publishContainerEvents) {\n      TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n      TimelineEvent tEvent \u003d new TimelineEvent();\n      tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n      tEvent.setTimestamp(finishedTime);\n      Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n      eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n          container.getDiagnosticsInfo());\n      eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n          container.getContainerExitStatus());\n      eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n          container.getContainerState().toString());\n      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n      entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n          container.getAllocatedNode().getHost());\n      entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n          container.getAllocatedNode().getPort());\n      entity.setInfo(entityInfo);\n      tEvent.setInfo(eventInfo);\n\n      entity.addEvent(tEvent);\n      getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n          SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n              .getContainerId().getApplicationAttemptId().getApplicationId()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
      "extendedDetails": {}
    },
    "c2055a97d55fc4305cf7d2762cd6bc676b97ca8c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3150. Documenting the timeline service v2. (Sangjin Lee and Vrushali C via gtcarrera9)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "c2055a97d55fc4305cf7d2762cd6bc676b97ca8c",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void containerFinished(RMContainer container, long finishedTime) {\n-    if (publishContainerMetrics) {\n+    if (publishContainerEvents) {\n       TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n       TimelineEvent tEvent \u003d new TimelineEvent();\n       tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n       tEvent.setTimestamp(finishedTime);\n       Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n       eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n           container.getDiagnosticsInfo());\n       eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n           container.getContainerExitStatus());\n       eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n           container.getContainerState().toString());\n       tEvent.setInfo(eventInfo);\n \n       entity.addEvent(tEvent);\n       getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n           SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n               .getContainerId().getApplicationAttemptId().getApplicationId()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    if (publishContainerEvents) {\n      TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n      TimelineEvent tEvent \u003d new TimelineEvent();\n      tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n      tEvent.setTimestamp(finishedTime);\n      Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n      eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n          container.getDiagnosticsInfo());\n      eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n          container.getContainerExitStatus());\n      eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n          container.getContainerState().toString());\n      tEvent.setInfo(eventInfo);\n\n      entity.addEvent(tEvent);\n      getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n          SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n              .getContainerId().getApplicationAttemptId().getApplicationId()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
      "extendedDetails": {}
    },
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,22 @@\n+  public void containerFinished(RMContainer container, long finishedTime) {\n+    if (publishContainerMetrics) {\n+      TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n+\n+      TimelineEvent tEvent \u003d new TimelineEvent();\n+      tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n+      tEvent.setTimestamp(finishedTime);\n+      Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n+      eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n+          container.getDiagnosticsInfo());\n+      eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n+          container.getContainerExitStatus());\n+      eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n+          container.getContainerState().toString());\n+      tEvent.setInfo(eventInfo);\n+\n+      entity.addEvent(tEvent);\n+      getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n+          SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+              .getContainerId().getApplicationAttemptId().getApplicationId()));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    if (publishContainerMetrics) {\n      TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n      TimelineEvent tEvent \u003d new TimelineEvent();\n      tEvent.setId(ContainerMetricsConstants.FINISHED_IN_RM_EVENT_TYPE);\n      tEvent.setTimestamp(finishedTime);\n      Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n      eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n          container.getDiagnosticsInfo());\n      eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n          container.getContainerExitStatus());\n      eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n          container.getContainerState().toString());\n      tEvent.setInfo(eventInfo);\n\n      entity.addEvent(tEvent);\n      getDispatcher().getEventHandler().handle(new TimelineV2PublishEvent(\n          SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n              .getContainerId().getApplicationAttemptId().getApplicationId()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java"
    }
  }
}