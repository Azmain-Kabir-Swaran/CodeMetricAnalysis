{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSAuthenticationFilter.java",
  "functionName": "getConfiguration",
  "functionId": "getConfiguration___configPrefix-String__filterConfig-FilterConfig",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
  "functionStartLine": 56,
  "functionEndLine": 61,
  "numCommitsSeen": 13,
  "timeTaken": 1933,
  "changeHistory": [
    "cd2158456db8c89eeea64b72654a736ea8607e23",
    "7154a20bcb1559c23aeb3b78b920bed03d834cb5",
    "713cb71820ad94a5436f35824d07aa12fcba5cc6",
    "123f20d42f6acffcde05392d689acd91a82462db",
    "8a7671d7539bff0566cb87f2b347f71bcf148977",
    "0a495bef5cd675dce4c928cb5331588bb198accf",
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "cd2158456db8c89eeea64b72654a736ea8607e23": "Ybodychange",
    "7154a20bcb1559c23aeb3b78b920bed03d834cb5": "Ybodychange",
    "713cb71820ad94a5436f35824d07aa12fcba5cc6": "Ybodychange",
    "123f20d42f6acffcde05392d689acd91a82462db": "Ybodychange",
    "8a7671d7539bff0566cb87f2b347f71bcf148977": "Ybodychange",
    "0a495bef5cd675dce4c928cb5331588bb198accf": "Ybodychange",
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd2158456db8c89eeea64b72654a736ea8607e23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15418. Hadoop KMSAuthenticationFilter needs to use getPropsByPrefix instead of iterator to avoid ConcurrentModificationException. Contributed by lqjack and Suma Shivaprasad\n",
      "commitDate": "18/10/18 5:28 PM",
      "commitName": "cd2158456db8c89eeea64b72654a736ea8607e23",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "06/03/17 10:47 AM",
      "commitNameOld": "ec839b94c0eb3f09e74f8a3b0bc9a08b3f5418b2",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 591.24,
      "commitsBetweenForRepo": 4843,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,6 @@\n   protected Properties getConfiguration(String configPrefix,\n       FilterConfig filterConfig) {\n-    Properties props \u003d new Properties();\n+\n     Configuration conf \u003d KMSWebApp.getConfiguration();\n-    for (Map.Entry\u003cString, String\u003e entry : conf) {\n-      String name \u003d entry.getKey();\n-      if (name.startsWith(CONFIG_PREFIX)) {\n-        String value \u003d conf.get(name);\n-        name \u003d name.substring(CONFIG_PREFIX.length());\n-        props.setProperty(name, value);\n-      }\n-    }\n-    String authType \u003d props.getProperty(AUTH_TYPE);\n-    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n-      props.setProperty(AUTH_TYPE,\n-          PseudoDelegationTokenAuthenticationHandler.class.getName());\n-    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n-      props.setProperty(AUTH_TYPE,\n-          KerberosDelegationTokenAuthenticationHandler.class.getName());\n-    }\n-    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n-        KMSDelegationToken.TOKEN_KIND_STR);\n-    return props;\n+    return getKMSConfiguration(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    return getKMSConfiguration(conf);\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "7154a20bcb1559c23aeb3b78b920bed03d834cb5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12453. Support decoding KMS Delegation Token with its own Identifier. Contributed by Xiaoyu Yao.\n",
      "commitDate": "03/11/16 1:09 PM",
      "commitName": "7154a20bcb1559c23aeb3b78b920bed03d834cb5",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "27/10/16 4:09 PM",
      "commitNameOld": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 6.88,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   protected Properties getConfiguration(String configPrefix,\n       FilterConfig filterConfig) {\n     Properties props \u003d new Properties();\n     Configuration conf \u003d KMSWebApp.getConfiguration();\n     for (Map.Entry\u003cString, String\u003e entry : conf) {\n       String name \u003d entry.getKey();\n       if (name.startsWith(CONFIG_PREFIX)) {\n         String value \u003d conf.get(name);\n         name \u003d name.substring(CONFIG_PREFIX.length());\n         props.setProperty(name, value);\n       }\n     }\n     String authType \u003d props.getProperty(AUTH_TYPE);\n     if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           PseudoDelegationTokenAuthenticationHandler.class.getName());\n     } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           KerberosDelegationTokenAuthenticationHandler.class.getName());\n     }\n     props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n-        KMSClientProvider.TOKEN_KIND_STR);\n+        KMSDelegationToken.TOKEN_KIND_STR);\n     return props;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n    Properties props \u003d new Properties();\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      String name \u003d entry.getKey();\n      if (name.startsWith(CONFIG_PREFIX)) {\n        String value \u003d conf.get(name);\n        name \u003d name.substring(CONFIG_PREFIX.length());\n        props.setProperty(name, value);\n      }\n    }\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n        KMSDelegationToken.TOKEN_KIND_STR);\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "713cb71820ad94a5436f35824d07aa12fcba5cc6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13155. Implement TokenRenewer to renew and cancel delegation tokens in KMS. Contributed by Xiao Chen.\n",
      "commitDate": "03/06/16 4:48 PM",
      "commitName": "713cb71820ad94a5436f35824d07aa12fcba5cc6",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "17/09/14 3:29 PM",
      "commitNameOld": "123f20d42f6acffcde05392d689acd91a82462db",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 625.06,
      "commitsBetweenForRepo": 4832,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   protected Properties getConfiguration(String configPrefix,\n       FilterConfig filterConfig) {\n     Properties props \u003d new Properties();\n     Configuration conf \u003d KMSWebApp.getConfiguration();\n     for (Map.Entry\u003cString, String\u003e entry : conf) {\n       String name \u003d entry.getKey();\n       if (name.startsWith(CONFIG_PREFIX)) {\n         String value \u003d conf.get(name);\n         name \u003d name.substring(CONFIG_PREFIX.length());\n         props.setProperty(name, value);\n       }\n     }\n     String authType \u003d props.getProperty(AUTH_TYPE);\n     if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           PseudoDelegationTokenAuthenticationHandler.class.getName());\n     } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           KerberosDelegationTokenAuthenticationHandler.class.getName());\n     }\n     props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n-        KMSClientProvider.TOKEN_KIND);\n+        KMSClientProvider.TOKEN_KIND_STR);\n     return props;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n    Properties props \u003d new Properties();\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      String name \u003d entry.getKey();\n      if (name.startsWith(CONFIG_PREFIX)) {\n        String value \u003d conf.get(name);\n        name \u003d name.substring(CONFIG_PREFIX.length());\n        props.setProperty(name, value);\n      }\n    }\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n        KMSClientProvider.TOKEN_KIND_STR);\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "123f20d42f6acffcde05392d689acd91a82462db": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11016. KMS should support signing cookies with zookeeper secret manager. (tucu)\n",
      "commitDate": "17/09/14 3:29 PM",
      "commitName": "123f20d42f6acffcde05392d689acd91a82462db",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "17/09/14 11:11 AM",
      "commitNameOld": "8a7671d7539bff0566cb87f2b347f71bcf148977",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   protected Properties getConfiguration(String configPrefix,\n       FilterConfig filterConfig) {\n     Properties props \u003d new Properties();\n     Configuration conf \u003d KMSWebApp.getConfiguration();\n     for (Map.Entry\u003cString, String\u003e entry : conf) {\n       String name \u003d entry.getKey();\n-      if (name.startsWith(CONF_PREFIX)) {\n+      if (name.startsWith(CONFIG_PREFIX)) {\n         String value \u003d conf.get(name);\n-        name \u003d name.substring(CONF_PREFIX.length());\n+        name \u003d name.substring(CONFIG_PREFIX.length());\n         props.setProperty(name, value);\n       }\n     }\n     String authType \u003d props.getProperty(AUTH_TYPE);\n     if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           PseudoDelegationTokenAuthenticationHandler.class.getName());\n     } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           KerberosDelegationTokenAuthenticationHandler.class.getName());\n     }\n     props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n         KMSClientProvider.TOKEN_KIND);\n     return props;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n    Properties props \u003d new Properties();\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      String name \u003d entry.getKey();\n      if (name.startsWith(CONFIG_PREFIX)) {\n        String value \u003d conf.get(name);\n        name \u003d name.substring(CONFIG_PREFIX.length());\n        props.setProperty(name, value);\n      }\n    }\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n        KMSClientProvider.TOKEN_KIND);\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "8a7671d7539bff0566cb87f2b347f71bcf148977": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11016. KMS should support signing cookies with zookeeper secret manager. (tucu)\"\n\nThis reverts commit 0a495bef5cd675dce4c928cb5331588bb198accf.\n",
      "commitDate": "17/09/14 11:11 AM",
      "commitName": "8a7671d7539bff0566cb87f2b347f71bcf148977",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "17/09/14 11:08 AM",
      "commitNameOld": "0a495bef5cd675dce4c928cb5331588bb198accf",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   protected Properties getConfiguration(String configPrefix,\n       FilterConfig filterConfig) {\n     Properties props \u003d new Properties();\n     Configuration conf \u003d KMSWebApp.getConfiguration();\n     for (Map.Entry\u003cString, String\u003e entry : conf) {\n       String name \u003d entry.getKey();\n-      if (name.startsWith(CONFIG_PREFIX)) {\n+      if (name.startsWith(CONF_PREFIX)) {\n         String value \u003d conf.get(name);\n-        name \u003d name.substring(CONFIG_PREFIX.length());\n+        name \u003d name.substring(CONF_PREFIX.length());\n         props.setProperty(name, value);\n       }\n     }\n     String authType \u003d props.getProperty(AUTH_TYPE);\n     if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           PseudoDelegationTokenAuthenticationHandler.class.getName());\n     } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           KerberosDelegationTokenAuthenticationHandler.class.getName());\n     }\n     props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n         KMSClientProvider.TOKEN_KIND);\n     return props;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n    Properties props \u003d new Properties();\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      String name \u003d entry.getKey();\n      if (name.startsWith(CONF_PREFIX)) {\n        String value \u003d conf.get(name);\n        name \u003d name.substring(CONF_PREFIX.length());\n        props.setProperty(name, value);\n      }\n    }\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n        KMSClientProvider.TOKEN_KIND);\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "0a495bef5cd675dce4c928cb5331588bb198accf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11016. KMS should support signing cookies with zookeeper secret manager. (tucu)\n",
      "commitDate": "17/09/14 11:08 AM",
      "commitName": "0a495bef5cd675dce4c928cb5331588bb198accf",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "15/08/14 8:53 AM",
      "commitNameOld": "e932365d6d46b5be16d0e79b751fac0b0b661400",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 33.09,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   protected Properties getConfiguration(String configPrefix,\n       FilterConfig filterConfig) {\n     Properties props \u003d new Properties();\n     Configuration conf \u003d KMSWebApp.getConfiguration();\n     for (Map.Entry\u003cString, String\u003e entry : conf) {\n       String name \u003d entry.getKey();\n-      if (name.startsWith(CONF_PREFIX)) {\n+      if (name.startsWith(CONFIG_PREFIX)) {\n         String value \u003d conf.get(name);\n-        name \u003d name.substring(CONF_PREFIX.length());\n+        name \u003d name.substring(CONFIG_PREFIX.length());\n         props.setProperty(name, value);\n       }\n     }\n     String authType \u003d props.getProperty(AUTH_TYPE);\n     if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           PseudoDelegationTokenAuthenticationHandler.class.getName());\n     } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n       props.setProperty(AUTH_TYPE,\n           KerberosDelegationTokenAuthenticationHandler.class.getName());\n     }\n     props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n         KMSClientProvider.TOKEN_KIND);\n     return props;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n    Properties props \u003d new Properties();\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      String name \u003d entry.getKey();\n      if (name.startsWith(CONFIG_PREFIX)) {\n        String value \u003d conf.get(name);\n        name \u003d name.substring(CONFIG_PREFIX.length());\n        props.setProperty(name, value);\n      }\n    }\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n        KMSClientProvider.TOKEN_KIND);\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10770. KMS add delegation token support. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 10:03 PM",
      "commitName": "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "30/07/14 10:54 AM",
      "commitNameOld": "bda9c584c828fdd18e9c066747d58dbf751a585d",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 15.47,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,24 @@\n   protected Properties getConfiguration(String configPrefix,\n       FilterConfig filterConfig) {\n     Properties props \u003d new Properties();\n     Configuration conf \u003d KMSWebApp.getConfiguration();\n     for (Map.Entry\u003cString, String\u003e entry : conf) {\n       String name \u003d entry.getKey();\n       if (name.startsWith(CONF_PREFIX)) {\n         String value \u003d conf.get(name);\n         name \u003d name.substring(CONF_PREFIX.length());\n         props.setProperty(name, value);\n       }\n     }\n+    String authType \u003d props.getProperty(AUTH_TYPE);\n+    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n+      props.setProperty(AUTH_TYPE,\n+          PseudoDelegationTokenAuthenticationHandler.class.getName());\n+    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n+      props.setProperty(AUTH_TYPE,\n+          KerberosDelegationTokenAuthenticationHandler.class.getName());\n+    }\n+    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n+        KMSClientProvider.TOKEN_KIND);\n     return props;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n    Properties props \u003d new Properties();\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      String name \u003d entry.getKey();\n      if (name.startsWith(CONF_PREFIX)) {\n        String value \u003d conf.get(name);\n        name \u003d name.substring(CONF_PREFIX.length());\n        props.setProperty(name, value);\n      }\n    }\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n        KMSClientProvider.TOKEN_KIND);\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,14 @@\n+  protected Properties getConfiguration(String configPrefix,\n+      FilterConfig filterConfig) {\n+    Properties props \u003d new Properties();\n+    Configuration conf \u003d KMSWebApp.getConfiguration();\n+    for (Map.Entry\u003cString, String\u003e entry : conf) {\n+      String name \u003d entry.getKey();\n+      if (name.startsWith(CONF_PREFIX)) {\n+        String value \u003d conf.get(name);\n+        name \u003d name.substring(CONF_PREFIX.length());\n+        props.setProperty(name, value);\n+      }\n+    }\n+    return props;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Properties getConfiguration(String configPrefix,\n      FilterConfig filterConfig) {\n    Properties props \u003d new Properties();\n    Configuration conf \u003d KMSWebApp.getConfiguration();\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      String name \u003d entry.getKey();\n      if (name.startsWith(CONF_PREFIX)) {\n        String value \u003d conf.get(name);\n        name \u003d name.substring(CONF_PREFIX.length());\n        props.setProperty(name, value);\n      }\n    }\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java"
    }
  }
}