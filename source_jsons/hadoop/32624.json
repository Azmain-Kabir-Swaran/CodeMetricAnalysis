{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultContainerExecutor.java",
  "functionName": "writeSessionScript",
  "functionId": "writeSessionScript___launchDst-Path__pidFile-Path",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
  "functionStartLine": 509,
  "functionEndLine": 527,
  "numCommitsSeen": 50,
  "timeTaken": 3185,
  "changeHistory": [
    "2abab1d7c53e64c160384fd5a3ac4cd8ffa57af4",
    "d5ff57a08fac983f8b5d201064ce07945f0f216e",
    "f5d92359145dfb820a9521e00e2d44c4ee96e67e",
    "41a548a916d4248164cb9495320f123ec215d70e",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b"
  ],
  "changeHistoryShort": {
    "2abab1d7c53e64c160384fd5a3ac4cd8ffa57af4": "Ybodychange",
    "d5ff57a08fac983f8b5d201064ce07945f0f216e": "Ybodychange",
    "f5d92359145dfb820a9521e00e2d44c4ee96e67e": "Ybodychange",
    "41a548a916d4248164cb9495320f123ec215d70e": "Ybodychange",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2abab1d7c53e64c160384fd5a3ac4cd8ffa57af4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7595. Container launching code suppresses close exceptions after writes. Contributed by Jim Brennan\n",
      "commitDate": "12/12/17 2:04 PM",
      "commitName": "2abab1d7c53e64c160384fd5a3ac4cd8ffa57af4",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "11/10/17 11:14 AM",
      "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 62.16,
      "commitsBetweenForRepo": 451,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,19 @@\n     private void writeSessionScript(Path launchDst, Path pidFile)\n         throws IOException {\n-      DataOutputStream out \u003d null;\n-      PrintStream pout \u003d null;\n-      try {\n-        out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n-        pout \u003d new PrintStream(out, false, \"UTF-8\");\n+      try (DataOutputStream out \u003d\n+               lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n+           PrintStream pout \u003d\n+               new PrintStream(out, false, \"UTF-8\")) {\n         // We need to do a move as writing to a file is not atomic\n         // Process reading a file being written to may get garbled data\n         // hence write pid to tmp file first followed by a mv\n         pout.println(\"#!/bin/bash\");\n         pout.println();\n         pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n         pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n         String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n         pout.printf(\"%s /bin/bash \\\"%s\\\"\", exec, launchDst.toUri().getPath());\n-      } finally {\n-        IOUtils.cleanupWithLogger(LOG, pout, out);\n       }\n       lfs.setPermission(sessionScriptPath,\n           ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void writeSessionScript(Path launchDst, Path pidFile)\n        throws IOException {\n      try (DataOutputStream out \u003d\n               lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n           PrintStream pout \u003d\n               new PrintStream(out, false, \"UTF-8\")) {\n        // We need to do a move as writing to a file is not atomic\n        // Process reading a file being written to may get garbled data\n        // hence write pid to tmp file first followed by a mv\n        pout.println(\"#!/bin/bash\");\n        pout.println();\n        pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n        pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n        String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n        pout.printf(\"%s /bin/bash \\\"%s\\\"\", exec, launchDst.toUri().getPath());\n      }\n      lfs.setPermission(sessionScriptPath,\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "d5ff57a08fac983f8b5d201064ce07945f0f216e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7047. Moving logging APIs over to slf4j in hadoop-yarn-server-nodemanager. Contributed by Yeliang Cang.\n",
      "commitDate": "22/08/17 1:14 AM",
      "commitName": "d5ff57a08fac983f8b5d201064ce07945f0f216e",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "19/04/17 12:23 PM",
      "commitNameOld": "46940d92e2b17c627eb17a9d8fc6cec9c3715592",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 124.53,
      "commitsBetweenForRepo": 702,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void writeSessionScript(Path launchDst, Path pidFile)\n         throws IOException {\n       DataOutputStream out \u003d null;\n       PrintStream pout \u003d null;\n       try {\n         out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n         pout \u003d new PrintStream(out, false, \"UTF-8\");\n         // We need to do a move as writing to a file is not atomic\n         // Process reading a file being written to may get garbled data\n         // hence write pid to tmp file first followed by a mv\n         pout.println(\"#!/bin/bash\");\n         pout.println();\n         pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n         pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n         String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n         pout.printf(\"%s /bin/bash \\\"%s\\\"\", exec, launchDst.toUri().getPath());\n       } finally {\n-        IOUtils.cleanup(LOG, pout, out);\n+        IOUtils.cleanupWithLogger(LOG, pout, out);\n       }\n       lfs.setPermission(sessionScriptPath,\n           ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void writeSessionScript(Path launchDst, Path pidFile)\n        throws IOException {\n      DataOutputStream out \u003d null;\n      PrintStream pout \u003d null;\n      try {\n        out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n        pout \u003d new PrintStream(out, false, \"UTF-8\");\n        // We need to do a move as writing to a file is not atomic\n        // Process reading a file being written to may get garbled data\n        // hence write pid to tmp file first followed by a mv\n        pout.println(\"#!/bin/bash\");\n        pout.println();\n        pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n        pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n        String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n        pout.printf(\"%s /bin/bash \\\"%s\\\"\", exec, launchDst.toUri().getPath());\n      } finally {\n        IOUtils.cleanupWithLogger(LOG, pout, out);\n      }\n      lfs.setPermission(sessionScriptPath,\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "f5d92359145dfb820a9521e00e2d44c4ee96e67e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5466. DefaultContainerExecutor needs JavaDocs (templedf via rkanter)\n",
      "commitDate": "17/10/16 2:29 PM",
      "commitName": "f5d92359145dfb820a9521e00e2d44c4ee96e67e",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "15/09/16 7:15 AM",
      "commitNameOld": "40b5a59b726733df456330a26f03d5174cc0bc1c",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 32.3,
      "commitsBetweenForRepo": 223,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n     private void writeSessionScript(Path launchDst, Path pidFile)\n         throws IOException {\n       DataOutputStream out \u003d null;\n       PrintStream pout \u003d null;\n       try {\n         out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n         pout \u003d new PrintStream(out, false, \"UTF-8\");\n         // We need to do a move as writing to a file is not atomic\n         // Process reading a file being written to may get garbled data\n         // hence write pid to tmp file first followed by a mv\n         pout.println(\"#!/bin/bash\");\n         pout.println();\n         pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n         pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n         String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n-        pout.println(exec + \" /bin/bash \\\"\" +\n-            launchDst.toUri().getPath().toString() + \"\\\"\");\n+        pout.printf(\"%s /bin/bash \\\"%s\\\"\", exec, launchDst.toUri().getPath());\n       } finally {\n         IOUtils.cleanup(LOG, pout, out);\n       }\n       lfs.setPermission(sessionScriptPath,\n           ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void writeSessionScript(Path launchDst, Path pidFile)\n        throws IOException {\n      DataOutputStream out \u003d null;\n      PrintStream pout \u003d null;\n      try {\n        out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n        pout \u003d new PrintStream(out, false, \"UTF-8\");\n        // We need to do a move as writing to a file is not atomic\n        // Process reading a file being written to may get garbled data\n        // hence write pid to tmp file first followed by a mv\n        pout.println(\"#!/bin/bash\");\n        pout.println();\n        pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n        pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n        String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n        pout.printf(\"%s /bin/bash \\\"%s\\\"\", exec, launchDst.toUri().getPath());\n      } finally {\n        IOUtils.cleanup(LOG, pout, out);\n      }\n      lfs.setPermission(sessionScriptPath,\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "41a548a916d4248164cb9495320f123ec215d70e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2937. Fixed new findbugs warnings in hadoop-yarn-nodemanager. Contributed by Varun Saxena.\n",
      "commitDate": "23/12/14 8:32 PM",
      "commitName": "41a548a916d4248164cb9495320f123ec215d70e",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "03/11/14 12:37 PM",
      "commitNameOld": "6157ace5475fff8d2513fd3cd99134b532b0b406",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 50.33,
      "commitsBetweenForRepo": 401,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void writeSessionScript(Path launchDst, Path pidFile)\n         throws IOException {\n       DataOutputStream out \u003d null;\n       PrintStream pout \u003d null;\n       try {\n         out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n-        pout \u003d new PrintStream(out);\n+        pout \u003d new PrintStream(out, false, \"UTF-8\");\n         // We need to do a move as writing to a file is not atomic\n         // Process reading a file being written to may get garbled data\n         // hence write pid to tmp file first followed by a mv\n         pout.println(\"#!/bin/bash\");\n         pout.println();\n         pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n         pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n         String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n         pout.println(exec + \" /bin/bash \\\"\" +\n             launchDst.toUri().getPath().toString() + \"\\\"\");\n       } finally {\n         IOUtils.cleanup(LOG, pout, out);\n       }\n       lfs.setPermission(sessionScriptPath,\n           ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void writeSessionScript(Path launchDst, Path pidFile)\n        throws IOException {\n      DataOutputStream out \u003d null;\n      PrintStream pout \u003d null;\n      try {\n        out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n        pout \u003d new PrintStream(out, false, \"UTF-8\");\n        // We need to do a move as writing to a file is not atomic\n        // Process reading a file being written to may get garbled data\n        // hence write pid to tmp file first followed by a mv\n        pout.println(\"#!/bin/bash\");\n        pout.println();\n        pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n        pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n        String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n        pout.println(exec + \" /bin/bash \\\"\" +\n            launchDst.toUri().getPath().toString() + \"\\\"\");\n      } finally {\n        IOUtils.cleanup(LOG, pout, out);\n      }\n      lfs.setPermission(sessionScriptPath,\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,23 @@\n+    private void writeSessionScript(Path launchDst, Path pidFile)\n+        throws IOException {\n+      DataOutputStream out \u003d null;\n+      PrintStream pout \u003d null;\n+      try {\n+        out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n+        pout \u003d new PrintStream(out);\n+        // We need to do a move as writing to a file is not atomic\n+        // Process reading a file being written to may get garbled data\n+        // hence write pid to tmp file first followed by a mv\n+        pout.println(\"#!/bin/bash\");\n+        pout.println();\n+        pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n+        pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n+        String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n+        pout.println(exec + \" /bin/bash \\\"\" +\n+            launchDst.toUri().getPath().toString() + \"\\\"\");\n+      } finally {\n+        IOUtils.cleanup(LOG, pout, out);\n+      }\n+      lfs.setPermission(sessionScriptPath,\n+          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void writeSessionScript(Path launchDst, Path pidFile)\n        throws IOException {\n      DataOutputStream out \u003d null;\n      PrintStream pout \u003d null;\n      try {\n        out \u003d lfs.create(sessionScriptPath, EnumSet.of(CREATE, OVERWRITE));\n        pout \u003d new PrintStream(out);\n        // We need to do a move as writing to a file is not atomic\n        // Process reading a file being written to may get garbled data\n        // hence write pid to tmp file first followed by a mv\n        pout.println(\"#!/bin/bash\");\n        pout.println();\n        pout.println(\"echo $$ \u003e \" + pidFile.toString() + \".tmp\");\n        pout.println(\"/bin/mv -f \" + pidFile.toString() + \".tmp \" + pidFile);\n        String exec \u003d Shell.isSetsidAvailable? \"exec setsid\" : \"exec\";\n        pout.println(exec + \" /bin/bash \\\"\" +\n            launchDst.toUri().getPath().toString() + \"\\\"\");\n      } finally {\n        IOUtils.cleanup(LOG, pout, out);\n      }\n      lfs.setPermission(sessionScriptPath,\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java"
    }
  }
}