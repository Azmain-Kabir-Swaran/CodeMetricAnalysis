{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RecordFactoryPBImpl.java",
  "functionName": "newRecordInstance",
  "functionId": "newRecordInstance___clazz-Class__T__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java",
  "functionStartLine": 50,
  "functionEndLine": 79,
  "numCommitsSeen": 7,
  "timeTaken": 7027,
  "changeHistory": [
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "1fac1ac98cf83e90d70004a27454bc2a64157c8c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "1fac1ac98cf83e90d70004a27454bc2a64157c8c": "Yexceptionschange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/05/13 3:51 PM",
      "commitNameOld": "1fac1ac98cf83e90d70004a27454bc2a64157c8c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 12.22,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) {\n     \n     Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n     if (constructor \u003d\u003d null) {\n       Class\u003c?\u003e pbClazz \u003d null;\n       try {\n         pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n       } catch (ClassNotFoundException e) {\n-        throw new YarnException(\"Failed to load class: [\"\n+        throw new YarnRuntimeException(\"Failed to load class: [\"\n             + getPBImplClassName(clazz) + \"]\", e);\n       }\n       try {\n         constructor \u003d pbClazz.getConstructor();\n         constructor.setAccessible(true);\n         cache.putIfAbsent(clazz, constructor);\n       } catch (NoSuchMethodException e) {\n-        throw new YarnException(\"Could not find 0 argument constructor\", e);\n+        throw new YarnRuntimeException(\"Could not find 0 argument constructor\", e);\n       }\n     }\n     try {\n       Object retObject \u003d constructor.newInstance();\n       return (T)retObject;\n     } catch (InvocationTargetException e) {\n-      throw new YarnException(e);\n+      throw new YarnRuntimeException(e);\n     } catch (IllegalAccessException e) {\n-      throw new YarnException(e);\n+      throw new YarnRuntimeException(e);\n     } catch (InstantiationException e) {\n-      throw new YarnException(e);\n+      throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) {\n    \n    Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n    if (constructor \u003d\u003d null) {\n      Class\u003c?\u003e pbClazz \u003d null;\n      try {\n        pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n      } catch (ClassNotFoundException e) {\n        throw new YarnRuntimeException(\"Failed to load class: [\"\n            + getPBImplClassName(clazz) + \"]\", e);\n      }\n      try {\n        constructor \u003d pbClazz.getConstructor();\n        constructor.setAccessible(true);\n        cache.putIfAbsent(clazz, constructor);\n      } catch (NoSuchMethodException e) {\n        throw new YarnRuntimeException(\"Could not find 0 argument constructor\", e);\n      }\n    }\n    try {\n      Object retObject \u003d constructor.newInstance();\n      return (T)retObject;\n    } catch (InvocationTargetException e) {\n      throw new YarnRuntimeException(e);\n    } catch (IllegalAccessException e) {\n      throw new YarnRuntimeException(e);\n    } catch (InstantiationException e) {\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java",
      "extendedDetails": {}
    },
    "1fac1ac98cf83e90d70004a27454bc2a64157c8c": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-708. Moved RecordFactory classes to hadoop-yarn-api, and put some miscellaneous fixes to the interfaces. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485478 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/13 3:51 PM",
      "commitName": "1fac1ac98cf83e90d70004a27454bc2a64157c8c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 287.73,
      "commitsBetweenForRepo": 1641,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n-  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) throws YarnException {\n+  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) {\n     \n     Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n     if (constructor \u003d\u003d null) {\n       Class\u003c?\u003e pbClazz \u003d null;\n       try {\n         pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n       } catch (ClassNotFoundException e) {\n         throw new YarnException(\"Failed to load class: [\"\n             + getPBImplClassName(clazz) + \"]\", e);\n       }\n       try {\n         constructor \u003d pbClazz.getConstructor();\n         constructor.setAccessible(true);\n         cache.putIfAbsent(clazz, constructor);\n       } catch (NoSuchMethodException e) {\n         throw new YarnException(\"Could not find 0 argument constructor\", e);\n       }\n     }\n     try {\n       Object retObject \u003d constructor.newInstance();\n       return (T)retObject;\n     } catch (InvocationTargetException e) {\n       throw new YarnException(e);\n     } catch (IllegalAccessException e) {\n       throw new YarnException(e);\n     } catch (InstantiationException e) {\n       throw new YarnException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) {\n    \n    Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n    if (constructor \u003d\u003d null) {\n      Class\u003c?\u003e pbClazz \u003d null;\n      try {\n        pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n      } catch (ClassNotFoundException e) {\n        throw new YarnException(\"Failed to load class: [\"\n            + getPBImplClassName(clazz) + \"]\", e);\n      }\n      try {\n        constructor \u003d pbClazz.getConstructor();\n        constructor.setAccessible(true);\n        cache.putIfAbsent(clazz, constructor);\n      } catch (NoSuchMethodException e) {\n        throw new YarnException(\"Could not find 0 argument constructor\", e);\n      }\n    }\n    try {\n      Object retObject \u003d constructor.newInstance();\n      return (T)retObject;\n    } catch (InvocationTargetException e) {\n      throw new YarnException(e);\n    } catch (IllegalAccessException e) {\n      throw new YarnException(e);\n    } catch (InstantiationException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java",
      "extendedDetails": {
        "oldValue": "[YarnException]",
        "newValue": "[]"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) throws YarnException {\n    \n    Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n    if (constructor \u003d\u003d null) {\n      Class\u003c?\u003e pbClazz \u003d null;\n      try {\n        pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n      } catch (ClassNotFoundException e) {\n        throw new YarnException(\"Failed to load class: [\"\n            + getPBImplClassName(clazz) + \"]\", e);\n      }\n      try {\n        constructor \u003d pbClazz.getConstructor();\n        constructor.setAccessible(true);\n        cache.putIfAbsent(clazz, constructor);\n      } catch (NoSuchMethodException e) {\n        throw new YarnException(\"Could not find 0 argument constructor\", e);\n      }\n    }\n    try {\n      Object retObject \u003d constructor.newInstance();\n      return (T)retObject;\n    } catch (InvocationTargetException e) {\n      throw new YarnException(e);\n    } catch (IllegalAccessException e) {\n      throw new YarnException(e);\n    } catch (InstantiationException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) throws YarnException {\n    \n    Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n    if (constructor \u003d\u003d null) {\n      Class\u003c?\u003e pbClazz \u003d null;\n      try {\n        pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n      } catch (ClassNotFoundException e) {\n        throw new YarnException(\"Failed to load class: [\"\n            + getPBImplClassName(clazz) + \"]\", e);\n      }\n      try {\n        constructor \u003d pbClazz.getConstructor();\n        constructor.setAccessible(true);\n        cache.putIfAbsent(clazz, constructor);\n      } catch (NoSuchMethodException e) {\n        throw new YarnException(\"Could not find 0 argument constructor\", e);\n      }\n    }\n    try {\n      Object retObject \u003d constructor.newInstance();\n      return (T)retObject;\n    } catch (InvocationTargetException e) {\n      throw new YarnException(e);\n    } catch (IllegalAccessException e) {\n      throw new YarnException(e);\n    } catch (InstantiationException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,30 @@\n+  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) throws YarnException {\n+    \n+    Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n+    if (constructor \u003d\u003d null) {\n+      Class\u003c?\u003e pbClazz \u003d null;\n+      try {\n+        pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n+      } catch (ClassNotFoundException e) {\n+        throw new YarnException(\"Failed to load class: [\"\n+            + getPBImplClassName(clazz) + \"]\", e);\n+      }\n+      try {\n+        constructor \u003d pbClazz.getConstructor();\n+        constructor.setAccessible(true);\n+        cache.putIfAbsent(clazz, constructor);\n+      } catch (NoSuchMethodException e) {\n+        throw new YarnException(\"Could not find 0 argument constructor\", e);\n+      }\n+    }\n+    try {\n+      Object retObject \u003d constructor.newInstance();\n+      return (T)retObject;\n+    } catch (InvocationTargetException e) {\n+      throw new YarnException(e);\n+    } catch (IllegalAccessException e) {\n+      throw new YarnException(e);\n+    } catch (InstantiationException e) {\n+      throw new YarnException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T newRecordInstance(Class\u003cT\u003e clazz) throws YarnException {\n    \n    Constructor\u003c?\u003e constructor \u003d cache.get(clazz);\n    if (constructor \u003d\u003d null) {\n      Class\u003c?\u003e pbClazz \u003d null;\n      try {\n        pbClazz \u003d localConf.getClassByName(getPBImplClassName(clazz));\n      } catch (ClassNotFoundException e) {\n        throw new YarnException(\"Failed to load class: [\"\n            + getPBImplClassName(clazz) + \"]\", e);\n      }\n      try {\n        constructor \u003d pbClazz.getConstructor();\n        constructor.setAccessible(true);\n        cache.putIfAbsent(clazz, constructor);\n      } catch (NoSuchMethodException e) {\n        throw new YarnException(\"Could not find 0 argument constructor\", e);\n      }\n    }\n    try {\n      Object retObject \u003d constructor.newInstance();\n      return (T)retObject;\n    } catch (InvocationTargetException e) {\n      throw new YarnException(e);\n    } catch (IllegalAccessException e) {\n      throw new YarnException(e);\n    } catch (InstantiationException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/factories/impl/pb/RecordFactoryPBImpl.java"
    }
  }
}