{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RunJar.java",
  "functionName": "unJar",
  "functionId": "unJar___jarFile-File__toDir-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
  "functionStartLine": 100,
  "functionEndLine": 102,
  "numCommitsSeen": 29,
  "timeTaken": 1382,
  "changeHistory": [
    "d14e26b31fe46fb47a8e99a212c70016fd15a4d9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "a473f3773342695cdb47e3ae4fe432b81e7787fd",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "d14e26b31fe46fb47a8e99a212c70016fd15a4d9": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "a473f3773342695cdb47e3ae4fe432b81e7787fd": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d14e26b31fe46fb47a8e99a212c70016fd15a4d9": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-15477. Make unjar in RunJar overrideable\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "28/05/18 1:29 AM",
      "commitName": "d14e26b31fe46fb47a8e99a212c70016fd15a4d9",
      "commitAuthor": "Johan Gustavsson",
      "commitDateOld": "08/02/18 10:55 AM",
      "commitNameOld": "996796f1048369e0f307f935ba01af64cc751a85",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 108.57,
      "commitsBetweenForRepo": 1378,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  public static void unJar(File jarFile, File toDir) throws IOException {\n+  public void unJar(File jarFile, File toDir) throws IOException {\n     unJar(jarFile, toDir, MATCH_ANY);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void unJar(File jarFile, File toDir) throws IOException {\n    unJar(jarFile, toDir, MATCH_ANY);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
      "extendedDetails": {
        "oldValue": "[public, static]",
        "newValue": "[public]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void unJar(File jarFile, File toDir) throws IOException {\n    unJar(jarFile, toDir, MATCH_ANY);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void unJar(File jarFile, File toDir) throws IOException {\n    unJar(jarFile, toDir, MATCH_ANY);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/RunJar.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void unJar(File jarFile, File toDir) throws IOException {\n    unJar(jarFile, toDir, MATCH_ANY);\n  }",
      "path": "common/src/java/org/apache/hadoop/util/RunJar.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/RunJar.java",
        "newPath": "common/src/java/org/apache/hadoop/util/RunJar.java"
      }
    },
    "a473f3773342695cdb47e3ae4fe432b81e7787fd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6346. Add support for specifying unpack pattern regex to RunJar.unJar. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@889018 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/09 3:25 PM",
      "commitName": "a473f3773342695cdb47e3ae4fe432b81e7787fd",
      "commitAuthor": "Thomas White",
      "commitDateOld": "15/06/09 1:28 PM",
      "commitNameOld": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 177.12,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,3 @@\n   public static void unJar(File jarFile, File toDir) throws IOException {\n-    JarFile jar \u003d new JarFile(jarFile);\n-    try {\n-      Enumeration entries \u003d jar.entries();\n-      while (entries.hasMoreElements()) {\n-        JarEntry entry \u003d (JarEntry)entries.nextElement();\n-        if (!entry.isDirectory()) {\n-          InputStream in \u003d jar.getInputStream(entry);\n-          try {\n-            File file \u003d new File(toDir, entry.getName());\n-            if (!file.getParentFile().mkdirs()) {\n-              if (!file.getParentFile().isDirectory()) {\n-                throw new IOException(\"Mkdirs failed to create \" + \n-                                      file.getParentFile().toString());\n-              }\n-            }\n-            OutputStream out \u003d new FileOutputStream(file);\n-            try {\n-              byte[] buffer \u003d new byte[8192];\n-              int i;\n-              while ((i \u003d in.read(buffer)) !\u003d -1) {\n-                out.write(buffer, 0, i);\n-              }\n-            } finally {\n-              out.close();\n-            }\n-          } finally {\n-            in.close();\n-          }\n-        }\n-      }\n-    } finally {\n-      jar.close();\n-    }\n+    unJar(jarFile, toDir, MATCH_ANY);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void unJar(File jarFile, File toDir) throws IOException {\n    unJar(jarFile, toDir, MATCH_ANY);\n  }",
      "path": "src/java/org/apache/hadoop/util/RunJar.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,35 @@\n+  public static void unJar(File jarFile, File toDir) throws IOException {\n+    JarFile jar \u003d new JarFile(jarFile);\n+    try {\n+      Enumeration entries \u003d jar.entries();\n+      while (entries.hasMoreElements()) {\n+        JarEntry entry \u003d (JarEntry)entries.nextElement();\n+        if (!entry.isDirectory()) {\n+          InputStream in \u003d jar.getInputStream(entry);\n+          try {\n+            File file \u003d new File(toDir, entry.getName());\n+            if (!file.getParentFile().mkdirs()) {\n+              if (!file.getParentFile().isDirectory()) {\n+                throw new IOException(\"Mkdirs failed to create \" + \n+                                      file.getParentFile().toString());\n+              }\n+            }\n+            OutputStream out \u003d new FileOutputStream(file);\n+            try {\n+              byte[] buffer \u003d new byte[8192];\n+              int i;\n+              while ((i \u003d in.read(buffer)) !\u003d -1) {\n+                out.write(buffer, 0, i);\n+              }\n+            } finally {\n+              out.close();\n+            }\n+          } finally {\n+            in.close();\n+          }\n+        }\n+      }\n+    } finally {\n+      jar.close();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void unJar(File jarFile, File toDir) throws IOException {\n    JarFile jar \u003d new JarFile(jarFile);\n    try {\n      Enumeration entries \u003d jar.entries();\n      while (entries.hasMoreElements()) {\n        JarEntry entry \u003d (JarEntry)entries.nextElement();\n        if (!entry.isDirectory()) {\n          InputStream in \u003d jar.getInputStream(entry);\n          try {\n            File file \u003d new File(toDir, entry.getName());\n            if (!file.getParentFile().mkdirs()) {\n              if (!file.getParentFile().isDirectory()) {\n                throw new IOException(\"Mkdirs failed to create \" + \n                                      file.getParentFile().toString());\n              }\n            }\n            OutputStream out \u003d new FileOutputStream(file);\n            try {\n              byte[] buffer \u003d new byte[8192];\n              int i;\n              while ((i \u003d in.read(buffer)) !\u003d -1) {\n                out.write(buffer, 0, i);\n              }\n            } finally {\n              out.close();\n            }\n          } finally {\n            in.close();\n          }\n        }\n      }\n    } finally {\n      jar.close();\n    }\n  }",
      "path": "src/java/org/apache/hadoop/util/RunJar.java"
    }
  }
}