{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceScheduler.java",
  "functionName": "onContainersCompleted",
  "functionId": "onContainersCompleted___statuses-List__ContainerStatus__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java",
  "functionStartLine": 732,
  "functionEndLine": 748,
  "numCommitsSeen": 34,
  "timeTaken": 3434,
  "changeHistory": [
    "40fad32824d2f8f960c779d78357e62103453da0",
    "b8a7ef1b64392094562e7782e0fd092934724ad2",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "40fad32824d2f8f960c779d78357e62103453da0": "Ybodychange",
    "b8a7ef1b64392094562e7782e0fd092934724ad2": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40fad32824d2f8f960c779d78357e62103453da0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8545.  Return allocated resource to RM for failed container.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/07/18 3:22 PM",
      "commitName": "40fad32824d2f8f960c779d78357e62103453da0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "17/05/18 2:16 PM",
      "commitNameOld": "7f083ed8699a720d3fb82e4ec310356902a6ac30",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 70.05,
      "commitsBetweenForRepo": 486,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     public void onContainersCompleted(List\u003cContainerStatus\u003e statuses) {\n       for (ContainerStatus status : statuses) {\n         ContainerId containerId \u003d status.getContainerId();\n         ComponentInstance instance \u003d liveInstances.get(status.getContainerId());\n         if (instance \u003d\u003d null) {\n           LOG.warn(\n               \"Container {} Completed. No component instance exists. exitStatus\u003d{}. diagnostics\u003d{} \",\n               containerId, status.getExitStatus(), status.getDiagnostics());\n           return;\n         }\n         ComponentEvent event \u003d\n             new ComponentEvent(instance.getCompName(), CONTAINER_COMPLETED)\n-                .setStatus(status).setInstance(instance);\n+                .setStatus(status).setInstance(instance)\n+                .setContainerId(containerId);\n         dispatcher.getEventHandler().handle(event);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainersCompleted(List\u003cContainerStatus\u003e statuses) {\n      for (ContainerStatus status : statuses) {\n        ContainerId containerId \u003d status.getContainerId();\n        ComponentInstance instance \u003d liveInstances.get(status.getContainerId());\n        if (instance \u003d\u003d null) {\n          LOG.warn(\n              \"Container {} Completed. No component instance exists. exitStatus\u003d{}. diagnostics\u003d{} \",\n              containerId, status.getExitStatus(), status.getDiagnostics());\n          return;\n        }\n        ComponentEvent event \u003d\n            new ComponentEvent(instance.getCompName(), CONTAINER_COMPLETED)\n                .setStatus(status).setInstance(instance)\n                .setContainerId(containerId);\n        dispatcher.getEventHandler().handle(event);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java",
      "extendedDetails": {}
    },
    "b8a7ef1b64392094562e7782e0fd092934724ad2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6744. Recover component information on YARN native services AM restart. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "b8a7ef1b64392094562e7782e0fd092934724ad2",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "ce74e64363abc64561263be70a923ab3e67f043f",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public void onContainersCompleted(List\u003cContainerStatus\u003e statuses) {\n       for (ContainerStatus status : statuses) {\n         ContainerId containerId \u003d status.getContainerId();\n         ComponentInstance instance \u003d liveInstances.get(status.getContainerId());\n         if (instance \u003d\u003d null) {\n-          LOG.error(\n+          LOG.warn(\n               \"Container {} Completed. No component instance exists. exitStatus\u003d{}. diagnostics\u003d{} \",\n               containerId, status.getExitStatus(), status.getDiagnostics());\n           return;\n         }\n         ComponentEvent event \u003d\n             new ComponentEvent(instance.getCompName(), CONTAINER_COMPLETED)\n                 .setStatus(status).setInstance(instance);\n         dispatcher.getEventHandler().handle(event);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainersCompleted(List\u003cContainerStatus\u003e statuses) {\n      for (ContainerStatus status : statuses) {\n        ContainerId containerId \u003d status.getContainerId();\n        ComponentInstance instance \u003d liveInstances.get(status.getContainerId());\n        if (instance \u003d\u003d null) {\n          LOG.warn(\n              \"Container {} Completed. No component instance exists. exitStatus\u003d{}. diagnostics\u003d{} \",\n              containerId, status.getExitStatus(), status.getDiagnostics());\n          return;\n        }\n        ComponentEvent event \u003d\n            new ComponentEvent(instance.getCompName(), CONTAINER_COMPLETED)\n                .setStatus(status).setInstance(instance);\n        dispatcher.getEventHandler().handle(event);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void onContainersCompleted(List\u003cContainerStatus\u003e statuses) {\n      for (ContainerStatus status : statuses) {\n        ContainerId containerId \u003d status.getContainerId();\n        ComponentInstance instance \u003d liveInstances.get(status.getContainerId());\n        if (instance \u003d\u003d null) {\n          LOG.error(\n              \"Container {} Completed. No component instance exists. exitStatus\u003d{}. diagnostics\u003d{} \",\n              containerId, status.getExitStatus(), status.getDiagnostics());\n          return;\n        }\n        ComponentEvent event \u003d\n            new ComponentEvent(instance.getCompName(), CONTAINER_COMPLETED)\n                .setStatus(status).setInstance(instance);\n        dispatcher.getEventHandler().handle(event);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,16 @@\n+    public void onContainersCompleted(List\u003cContainerStatus\u003e statuses) {\n+      for (ContainerStatus status : statuses) {\n+        ContainerId containerId \u003d status.getContainerId();\n+        ComponentInstance instance \u003d liveInstances.get(status.getContainerId());\n+        if (instance \u003d\u003d null) {\n+          LOG.error(\n+              \"Container {} Completed. No component instance exists. exitStatus\u003d{}. diagnostics\u003d{} \",\n+              containerId, status.getExitStatus(), status.getDiagnostics());\n+          return;\n+        }\n+        ComponentEvent event \u003d\n+            new ComponentEvent(instance.getCompName(), CONTAINER_COMPLETED)\n+                .setStatus(status).setInstance(instance);\n+        dispatcher.getEventHandler().handle(event);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainersCompleted(List\u003cContainerStatus\u003e statuses) {\n      for (ContainerStatus status : statuses) {\n        ContainerId containerId \u003d status.getContainerId();\n        ComponentInstance instance \u003d liveInstances.get(status.getContainerId());\n        if (instance \u003d\u003d null) {\n          LOG.error(\n              \"Container {} Completed. No component instance exists. exitStatus\u003d{}. diagnostics\u003d{} \",\n              containerId, status.getExitStatus(), status.getDiagnostics());\n          return;\n        }\n        ComponentEvent event \u003d\n            new ComponentEvent(instance.getCompName(), CONTAINER_COMPLETED)\n                .setStatus(status).setInstance(instance);\n        dispatcher.getEventHandler().handle(event);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java"
    }
  }
}