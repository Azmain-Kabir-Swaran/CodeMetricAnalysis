{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockingThreadPoolExecutorService.java",
  "functionName": "newThread",
  "functionId": "newThread___r-Runnable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java",
  "functionStartLine": 92,
  "functionEndLine": 101,
  "numCommitsSeen": 24,
  "timeTaken": 1961,
  "changeHistory": [
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
    "bff7c90a5686de106ca7a866982412c5dfa01632",
    "27d8395867f665fea1360087325cda5ed70efd0c"
  ],
  "changeHistoryShort": {
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7": "Yfilerename",
    "bff7c90a5686de106ca7a866982412c5dfa01632": "Ymovefromfile",
    "27d8395867f665fea1360087325cda5ed70efd0c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15039. Move SemaphoredDelegatingExecutor to hadoop-common. Contributed by Genmao Yu\n",
      "commitDate": "13/12/17 7:14 PM",
      "commitName": "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "13/12/17 7:05 PM",
      "commitNameOld": "28792b6b7f137df1db58496f27de23bbe99cdfd6",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java"
      }
    },
    "bff7c90a5686de106ca7a866982412c5dfa01632": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-11684. S3a to use thread pool that blocks clients. (Thomas Demoor and Aaron Fabbri via lei)\n",
      "commitDate": "05/11/15 6:35 PM",
      "commitName": "bff7c90a5686de106ca7a866982412c5dfa01632",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "05/11/15 4:57 PM",
      "commitNameOld": "19a0c2660cce0dccf968376bed249de94b58b8a2",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
        "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
        "oldMethodName": "newThread",
        "newMethodName": "newThread"
      }
    },
    "27d8395867f665fea1360087325cda5ed70efd0c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11446 S3AOutputStream should use shared thread pool to avoid OutOfMemoryError\n",
      "commitDate": "05/01/15 5:00 AM",
      "commitName": "27d8395867f665fea1360087325cda5ed70efd0c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,10 @@\n+      public Thread newThread(Runnable r) {\n+        Thread t \u003d namedFactory.newThread(r);\n+        if (!t.isDaemon()) {\n+          t.setDaemon(true);\n+        }\n+        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n+          t.setPriority(Thread.NORM_PRIORITY);\n+        }\n+        return t;\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}