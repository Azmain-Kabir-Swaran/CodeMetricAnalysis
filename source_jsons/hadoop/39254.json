{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "startSchedulerThreads",
  "functionId": "startSchedulerThreads",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 396,
  "functionEndLine": 412,
  "numCommitsSeen": 239,
  "timeTaken": 6963,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
    "a4ba451802c6c61a0c804809740d46dd76059f25"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ybodychange",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a4ba451802c6c61a0c804809740d46dd76059f25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void startSchedulerThreads() {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       activitiesManager.start();\n       if (scheduleAsynchronously) {\n         Preconditions.checkNotNull(asyncSchedulerThreads,\n             \"asyncSchedulerThreads is null\");\n         for (Thread t : asyncSchedulerThreads) {\n           t.start();\n         }\n \n         resourceCommitterService.start();\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void startSchedulerThreads() {\n    writeLock.lock();\n    try {\n      activitiesManager.start();\n      if (scheduleAsynchronously) {\n        Preconditions.checkNotNull(asyncSchedulerThreads,\n            \"asyncSchedulerThreads is null\");\n        for (Thread t : asyncSchedulerThreads) {\n          t.start();\n        }\n\n        resourceCommitterService.start();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/11/16 3:02 AM",
      "commitNameOld": "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 6.34,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   private void startSchedulerThreads() {\n     try {\n       writeLock.lock();\n       activitiesManager.start();\n       if (scheduleAsynchronously) {\n-        Preconditions.checkNotNull(asyncSchedulerThread,\n-            \"asyncSchedulerThread is null\");\n-        asyncSchedulerThread.start();\n+        Preconditions.checkNotNull(asyncSchedulerThreads,\n+            \"asyncSchedulerThreads is null\");\n+        for (Thread t : asyncSchedulerThreads) {\n+          t.start();\n+        }\n+\n+        resourceCommitterService.start();\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void startSchedulerThreads() {\n    try {\n      writeLock.lock();\n      activitiesManager.start();\n      if (scheduleAsynchronously) {\n        Preconditions.checkNotNull(asyncSchedulerThreads,\n            \"asyncSchedulerThreads is null\");\n        for (Thread t : asyncSchedulerThreads) {\n          t.start();\n        }\n\n        resourceCommitterService.start();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
      "commitDate": "04/10/16 5:23 PM",
      "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 35.06,
          "commitsBetweenForRepo": 195,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,13 @@\n-  private synchronized void startSchedulerThreads() {\n-    if (scheduleAsynchronously) {\n-      Preconditions.checkNotNull(asyncSchedulerThread,\n-          \"asyncSchedulerThread is null\");\n-      asyncSchedulerThread.start();\n+  private void startSchedulerThreads() {\n+    try {\n+      writeLock.lock();\n+      activitiesManager.start();\n+      if (scheduleAsynchronously) {\n+        Preconditions.checkNotNull(asyncSchedulerThread,\n+            \"asyncSchedulerThread is null\");\n+        asyncSchedulerThread.start();\n+      }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void startSchedulerThreads() {\n    try {\n      writeLock.lock();\n      activitiesManager.start();\n      if (scheduleAsynchronously) {\n        Preconditions.checkNotNull(asyncSchedulerThread,\n            \"asyncSchedulerThread is null\");\n        asyncSchedulerThread.start();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 35.06,
          "commitsBetweenForRepo": 195,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,13 @@\n-  private synchronized void startSchedulerThreads() {\n-    if (scheduleAsynchronously) {\n-      Preconditions.checkNotNull(asyncSchedulerThread,\n-          \"asyncSchedulerThread is null\");\n-      asyncSchedulerThread.start();\n+  private void startSchedulerThreads() {\n+    try {\n+      writeLock.lock();\n+      activitiesManager.start();\n+      if (scheduleAsynchronously) {\n+        Preconditions.checkNotNull(asyncSchedulerThread,\n+            \"asyncSchedulerThread is null\");\n+        asyncSchedulerThread.start();\n+      }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void startSchedulerThreads() {\n    try {\n      writeLock.lock();\n      activitiesManager.start();\n      if (scheduleAsynchronously) {\n        Preconditions.checkNotNull(asyncSchedulerThread,\n            \"asyncSchedulerThread is null\");\n        asyncSchedulerThread.start();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "a4ba451802c6c61a0c804809740d46dd76059f25": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1474. Make schedulers services. (Tsuyoshi Ozawa via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598908 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/05/14 12:33 PM",
      "commitName": "a4ba451802c6c61a0c804809740d46dd76059f25",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,7 @@\n+  private synchronized void startSchedulerThreads() {\n+    if (scheduleAsynchronously) {\n+      Preconditions.checkNotNull(asyncSchedulerThread,\n+          \"asyncSchedulerThread is null\");\n+      asyncSchedulerThread.start();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void startSchedulerThreads() {\n    if (scheduleAsynchronously) {\n      Preconditions.checkNotNull(asyncSchedulerThread,\n          \"asyncSchedulerThread is null\");\n      asyncSchedulerThread.start();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}