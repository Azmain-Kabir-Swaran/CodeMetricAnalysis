{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "getDataNodeBlockListingFiles",
  "functionId": "getDataNodeBlockListingFiles",
  "sourceFilePath": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java",
  "functionStartLine": 836,
  "functionEndLine": 852,
  "numCommitsSeen": 2,
  "timeTaken": 409,
  "changeHistory": [
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91"
  ],
  "changeHistoryShort": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12345 Add Dynamometer to hadoop-tools, a tool for scale testing the HDFS NameNode with real metadata and workloads. Contributed by Erik Krogen.\n",
      "commitDate": "25/06/19 8:07 AM",
      "commitName": "ab0b180ddb5d0775a2452d5eeb7badd252aadb91",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,17 @@\n+  private List\u003cLocalResource\u003e getDataNodeBlockListingFiles()\n+      throws IOException {\n+    Path blockListDirPath \u003d new Path(\n+        System.getenv().get(DynoConstants.BLOCK_LIST_PATH_ENV));\n+    LOG.info(\"Looking for block listing files in \" + blockListDirPath);\n+    FileSystem blockZipFS \u003d blockListDirPath.getFileSystem(conf);\n+    List\u003cLocalResource\u003e files \u003d new LinkedList\u003c\u003e();\n+    for (FileStatus stat : blockZipFS.listStatus(blockListDirPath,\n+        DynoConstants.BLOCK_LIST_FILE_FILTER)) {\n+      LocalResource blockListResource \u003d LocalResource.newInstance(\n+          URL.fromPath(stat.getPath()),\n+          LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,\n+          stat.getLen(), stat.getModificationTime());\n+      files.add(blockListResource);\n+    }\n+    return files;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cLocalResource\u003e getDataNodeBlockListingFiles()\n      throws IOException {\n    Path blockListDirPath \u003d new Path(\n        System.getenv().get(DynoConstants.BLOCK_LIST_PATH_ENV));\n    LOG.info(\"Looking for block listing files in \" + blockListDirPath);\n    FileSystem blockZipFS \u003d blockListDirPath.getFileSystem(conf);\n    List\u003cLocalResource\u003e files \u003d new LinkedList\u003c\u003e();\n    for (FileStatus stat : blockZipFS.listStatus(blockListDirPath,\n        DynoConstants.BLOCK_LIST_FILE_FILTER)) {\n      LocalResource blockListResource \u003d LocalResource.newInstance(\n          URL.fromPath(stat.getPath()),\n          LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,\n          stat.getLen(), stat.getModificationTime());\n      files.add(blockListResource);\n    }\n    return files;\n  }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java"
    }
  }
}