{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DecayRpcScheduler.java",
  "functionName": "computePriorityLevel",
  "functionId": "computePriorityLevel___cost-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
  "functionStartLine": 538,
  "functionEndLine": 555,
  "numCommitsSeen": 36,
  "timeTaken": 2668,
  "changeHistory": [
    "129576f628d370def74e56112aba3a93e97bbf70",
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
    "e0a9e1bfb724b60af322666b8267c7a9121f84a7"
  ],
  "changeHistoryShort": {
    "129576f628d370def74e56112aba3a93e97bbf70": "Ymultichange(Yparameterchange,Ybodychange)",
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5": "Ybodychange",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": "Ybodychange",
    "e0a9e1bfb724b60af322666b8267c7a9121f84a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "129576f628d370def74e56112aba3a93e97bbf70": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
      "commitDate": "24/06/19 12:09 PM",
      "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
      "commitAuthor": "Christopher Gregorian",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
          "commitDate": "24/06/19 12:09 PM",
          "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
          "commitAuthor": "Christopher Gregorian",
          "commitDateOld": "23/05/19 10:28 AM",
          "commitNameOld": "f96a2df38d889f29314c57f4d94227b2e419a11f",
          "commitAuthorOld": "Christopher Gregorian",
          "daysBetweenCommits": 32.07,
          "commitsBetweenForRepo": 314,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private int computePriorityLevel(long occurrences) {\n-    long totalCallSnapshot \u003d totalDecayedCallCount.get();\n+  private int computePriorityLevel(long cost) {\n+    long totalCallSnapshot \u003d totalDecayedCallCost.get();\n \n     double proportion \u003d 0;\n     if (totalCallSnapshot \u003e 0) {\n-      proportion \u003d (double) occurrences / totalCallSnapshot;\n+      proportion \u003d (double) cost / totalCallSnapshot;\n     }\n \n     // Start with low priority levels, since they will be most common\n     for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n       if (proportion \u003e\u003d this.thresholds[i - 1]) {\n         return i; // We\u0027ve found our level number\n       }\n     }\n \n     // If we get this far, we\u0027re at level 0\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int computePriorityLevel(long cost) {\n    long totalCallSnapshot \u003d totalDecayedCallCost.get();\n\n    double proportion \u003d 0;\n    if (totalCallSnapshot \u003e 0) {\n      proportion \u003d (double) cost / totalCallSnapshot;\n    }\n\n    // Start with low priority levels, since they will be most common\n    for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n      if (proportion \u003e\u003d this.thresholds[i - 1]) {\n        return i; // We\u0027ve found our level number\n      }\n    }\n\n    // If we get this far, we\u0027re at level 0\n    return 0;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
          "extendedDetails": {
            "oldValue": "[occurrences-long]",
            "newValue": "[cost-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
          "commitDate": "24/06/19 12:09 PM",
          "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
          "commitAuthor": "Christopher Gregorian",
          "commitDateOld": "23/05/19 10:28 AM",
          "commitNameOld": "f96a2df38d889f29314c57f4d94227b2e419a11f",
          "commitAuthorOld": "Christopher Gregorian",
          "daysBetweenCommits": 32.07,
          "commitsBetweenForRepo": 314,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private int computePriorityLevel(long occurrences) {\n-    long totalCallSnapshot \u003d totalDecayedCallCount.get();\n+  private int computePriorityLevel(long cost) {\n+    long totalCallSnapshot \u003d totalDecayedCallCost.get();\n \n     double proportion \u003d 0;\n     if (totalCallSnapshot \u003e 0) {\n-      proportion \u003d (double) occurrences / totalCallSnapshot;\n+      proportion \u003d (double) cost / totalCallSnapshot;\n     }\n \n     // Start with low priority levels, since they will be most common\n     for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n       if (proportion \u003e\u003d this.thresholds[i - 1]) {\n         return i; // We\u0027ve found our level number\n       }\n     }\n \n     // If we get this far, we\u0027re at level 0\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int computePriorityLevel(long cost) {\n    long totalCallSnapshot \u003d totalDecayedCallCost.get();\n\n    double proportion \u003d 0;\n    if (totalCallSnapshot \u003e 0) {\n      proportion \u003d (double) cost / totalCallSnapshot;\n    }\n\n    // Start with low priority levels, since they will be most common\n    for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n      if (proportion \u003e\u003d this.thresholds[i - 1]) {\n        return i; // We\u0027ve found our level number\n      }\n    }\n\n    // If we get this far, we\u0027re at level 0\n    return 0;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13197. Add non-decayed call metrics for DecayRpcScheduler. Contributed by Xiaoyu Yao.\n",
      "commitDate": "27/05/16 6:07 PM",
      "commitName": "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "17/05/16 2:58 PM",
      "commitNameOld": "94784848456a92a6502f3a3c0074e44fba4b19c9",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 10.13,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private int computePriorityLevel(long occurrences) {\n-    long totalCallSnapshot \u003d totalCalls.get();\n+    long totalCallSnapshot \u003d totalDecayedCallCount.get();\n \n     double proportion \u003d 0;\n     if (totalCallSnapshot \u003e 0) {\n       proportion \u003d (double) occurrences / totalCallSnapshot;\n     }\n \n     // Start with low priority levels, since they will be most common\n     for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n       if (proportion \u003e\u003d this.thresholds[i - 1]) {\n         return i; // We\u0027ve found our level number\n       }\n     }\n \n     // If we get this far, we\u0027re at level 0\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int computePriorityLevel(long occurrences) {\n    long totalCallSnapshot \u003d totalDecayedCallCount.get();\n\n    double proportion \u003d 0;\n    if (totalCallSnapshot \u003e 0) {\n      proportion \u003d (double) occurrences / totalCallSnapshot;\n    }\n\n    // Start with low priority levels, since they will be most common\n    for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n      if (proportion \u003e\u003d this.thresholds[i - 1]) {\n        return i; // We\u0027ve found our level number\n      }\n    }\n\n    // If we get this far, we\u0027re at level 0\n    return 0;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
      "commitDate": "31/03/16 8:42 AM",
      "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "01/12/15 9:27 AM",
      "commitNameOld": "485c3468a8520fcde14800af3e4a075231c946de",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 120.93,
      "commitsBetweenForRepo": 745,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private int computePriorityLevel(long occurrences) {\n     long totalCallSnapshot \u003d totalCalls.get();\n \n     double proportion \u003d 0;\n     if (totalCallSnapshot \u003e 0) {\n       proportion \u003d (double) occurrences / totalCallSnapshot;\n     }\n \n-    // Start with low priority queues, since they will be most common\n-    for(int i \u003d (numQueues - 1); i \u003e 0; i--) {\n+    // Start with low priority levels, since they will be most common\n+    for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n       if (proportion \u003e\u003d this.thresholds[i - 1]) {\n-        return i; // We\u0027ve found our queue number\n+        return i; // We\u0027ve found our level number\n       }\n     }\n \n-    // If we get this far, we\u0027re at queue 0\n+    // If we get this far, we\u0027re at level 0\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int computePriorityLevel(long occurrences) {\n    long totalCallSnapshot \u003d totalCalls.get();\n\n    double proportion \u003d 0;\n    if (totalCallSnapshot \u003e 0) {\n      proportion \u003d (double) occurrences / totalCallSnapshot;\n    }\n\n    // Start with low priority levels, since they will be most common\n    for(int i \u003d (numLevels - 1); i \u003e 0; i--) {\n      if (proportion \u003e\u003d this.thresholds[i - 1]) {\n        return i; // We\u0027ve found our level number\n      }\n    }\n\n    // If we get this far, we\u0027re at level 0\n    return 0;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "e0a9e1bfb724b60af322666b8267c7a9121f84a7": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10281. Create a scheduler, which assigns schedulables a priority level. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617643 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 5:54 PM",
      "commitName": "e0a9e1bfb724b60af322666b8267c7a9121f84a7",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,18 @@\n+  private int computePriorityLevel(long occurrences) {\n+    long totalCallSnapshot \u003d totalCalls.get();\n+\n+    double proportion \u003d 0;\n+    if (totalCallSnapshot \u003e 0) {\n+      proportion \u003d (double) occurrences / totalCallSnapshot;\n+    }\n+\n+    // Start with low priority queues, since they will be most common\n+    for(int i \u003d (numQueues - 1); i \u003e 0; i--) {\n+      if (proportion \u003e\u003d this.thresholds[i - 1]) {\n+        return i; // We\u0027ve found our queue number\n+      }\n+    }\n+\n+    // If we get this far, we\u0027re at queue 0\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int computePriorityLevel(long occurrences) {\n    long totalCallSnapshot \u003d totalCalls.get();\n\n    double proportion \u003d 0;\n    if (totalCallSnapshot \u003e 0) {\n      proportion \u003d (double) occurrences / totalCallSnapshot;\n    }\n\n    // Start with low priority queues, since they will be most common\n    for(int i \u003d (numQueues - 1); i \u003e 0; i--) {\n      if (proportion \u003e\u003d this.thresholds[i - 1]) {\n        return i; // We\u0027ve found our queue number\n      }\n    }\n\n    // If we get this far, we\u0027re at queue 0\n    return 0;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java"
    }
  }
}