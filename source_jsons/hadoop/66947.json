{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZombieJob.java",
  "functionName": "getTaskAttemptInfo",
  "functionId": "getTaskAttemptInfo___loggedTask-LoggedTask__loggedAttempt-LoggedTaskAttempt",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
  "functionStartLine": 589,
  "functionEndLine": 638,
  "numCommitsSeen": 10,
  "timeTaken": 4422,
  "changeHistory": [
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskAttemptInfo getTaskAttemptInfo(LoggedTask loggedTask,\n      LoggedTaskAttempt loggedAttempt) {\n    TaskInfo taskInfo \u003d getTaskInfo(loggedTask);\n    \n    List\u003cList\u003cInteger\u003e\u003e allSplitVectors \u003d loggedAttempt.allSplitVectors();\n\n    State state \u003d convertState(loggedAttempt.getResult());\n    if (loggedTask.getTaskType() \u003d\u003d Values.MAP) {\n      long taskTime;\n      if (loggedAttempt.getStartTime() \u003d\u003d 0) {\n        int locality \u003d getLocality(loggedTask, loggedAttempt);\n        taskTime \u003d makeUpMapRuntime(state, locality);\n      } else {\n        taskTime \u003d loggedAttempt.getFinishTime() - loggedAttempt.getStartTime();\n      }\n      taskTime \u003d sanitizeTaskRuntime(taskTime, loggedAttempt.getAttemptID());\n      return new MapTaskAttemptInfo(state, taskInfo, taskTime, allSplitVectors);\n    } else if (loggedTask.getTaskType() \u003d\u003d Values.REDUCE) {\n      long startTime \u003d loggedAttempt.getStartTime();\n      long mergeDone \u003d loggedAttempt.getSortFinished();\n      long shuffleDone \u003d loggedAttempt.getShuffleFinished();\n      long finishTime \u003d loggedAttempt.getFinishTime();\n      if (startTime \u003c\u003d 0 || startTime \u003e\u003d finishTime) {\n        // have seen startTime\u003efinishTime.\n        // haven\u0027t seen reduce task with startTime\u003d0 ever. But if this happens,\n        // make up a reduceTime with no shuffle/merge.\n        long reduceTime \u003d makeUpReduceRuntime(state);\n        return new ReduceTaskAttemptInfo\n          (state, taskInfo, 0, 0, reduceTime, allSplitVectors);\n      } else {\n        if (shuffleDone \u003c\u003d 0) {\n          shuffleDone \u003d startTime;\n        }\n        if (mergeDone \u003c\u003d 0) {\n          mergeDone \u003d finishTime;\n        }\n        long shuffleTime \u003d shuffleDone - startTime;\n        long mergeTime \u003d mergeDone - shuffleDone;\n        long reduceTime \u003d finishTime - mergeDone;\n        reduceTime \u003d sanitizeTaskRuntime(reduceTime, loggedAttempt.getAttemptID());\n        \n        return new ReduceTaskAttemptInfo(state, taskInfo, shuffleTime,\n            mergeTime, reduceTime, allSplitVectors);\n      }\n    } else {\n      throw new IllegalArgumentException(\"taskType for \"\n          + loggedTask.getTaskID() + \" is neither MAP nor REDUCE: \"\n          + loggedTask.getTaskType());\n    }\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskAttemptInfo getTaskAttemptInfo(LoggedTask loggedTask,\n      LoggedTaskAttempt loggedAttempt) {\n    TaskInfo taskInfo \u003d getTaskInfo(loggedTask);\n    \n    List\u003cList\u003cInteger\u003e\u003e allSplitVectors \u003d loggedAttempt.allSplitVectors();\n\n    State state \u003d convertState(loggedAttempt.getResult());\n    if (loggedTask.getTaskType() \u003d\u003d Values.MAP) {\n      long taskTime;\n      if (loggedAttempt.getStartTime() \u003d\u003d 0) {\n        int locality \u003d getLocality(loggedTask, loggedAttempt);\n        taskTime \u003d makeUpMapRuntime(state, locality);\n      } else {\n        taskTime \u003d loggedAttempt.getFinishTime() - loggedAttempt.getStartTime();\n      }\n      taskTime \u003d sanitizeTaskRuntime(taskTime, loggedAttempt.getAttemptID());\n      return new MapTaskAttemptInfo(state, taskInfo, taskTime, allSplitVectors);\n    } else if (loggedTask.getTaskType() \u003d\u003d Values.REDUCE) {\n      long startTime \u003d loggedAttempt.getStartTime();\n      long mergeDone \u003d loggedAttempt.getSortFinished();\n      long shuffleDone \u003d loggedAttempt.getShuffleFinished();\n      long finishTime \u003d loggedAttempt.getFinishTime();\n      if (startTime \u003c\u003d 0 || startTime \u003e\u003d finishTime) {\n        // have seen startTime\u003efinishTime.\n        // haven\u0027t seen reduce task with startTime\u003d0 ever. But if this happens,\n        // make up a reduceTime with no shuffle/merge.\n        long reduceTime \u003d makeUpReduceRuntime(state);\n        return new ReduceTaskAttemptInfo\n          (state, taskInfo, 0, 0, reduceTime, allSplitVectors);\n      } else {\n        if (shuffleDone \u003c\u003d 0) {\n          shuffleDone \u003d startTime;\n        }\n        if (mergeDone \u003c\u003d 0) {\n          mergeDone \u003d finishTime;\n        }\n        long shuffleTime \u003d shuffleDone - startTime;\n        long mergeTime \u003d mergeDone - shuffleDone;\n        long reduceTime \u003d finishTime - mergeDone;\n        reduceTime \u003d sanitizeTaskRuntime(reduceTime, loggedAttempt.getAttemptID());\n        \n        return new ReduceTaskAttemptInfo(state, taskInfo, shuffleTime,\n            mergeTime, reduceTime, allSplitVectors);\n      }\n    } else {\n      throw new IllegalArgumentException(\"taskType for \"\n          + loggedTask.getTaskID() + \" is neither MAP nor REDUCE: \"\n          + loggedTask.getTaskType());\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskAttemptInfo getTaskAttemptInfo(LoggedTask loggedTask,\n      LoggedTaskAttempt loggedAttempt) {\n    TaskInfo taskInfo \u003d getTaskInfo(loggedTask);\n    \n    List\u003cList\u003cInteger\u003e\u003e allSplitVectors \u003d loggedAttempt.allSplitVectors();\n\n    State state \u003d convertState(loggedAttempt.getResult());\n    if (loggedTask.getTaskType() \u003d\u003d Values.MAP) {\n      long taskTime;\n      if (loggedAttempt.getStartTime() \u003d\u003d 0) {\n        int locality \u003d getLocality(loggedTask, loggedAttempt);\n        taskTime \u003d makeUpMapRuntime(state, locality);\n      } else {\n        taskTime \u003d loggedAttempt.getFinishTime() - loggedAttempt.getStartTime();\n      }\n      taskTime \u003d sanitizeTaskRuntime(taskTime, loggedAttempt.getAttemptID());\n      return new MapTaskAttemptInfo(state, taskInfo, taskTime, allSplitVectors);\n    } else if (loggedTask.getTaskType() \u003d\u003d Values.REDUCE) {\n      long startTime \u003d loggedAttempt.getStartTime();\n      long mergeDone \u003d loggedAttempt.getSortFinished();\n      long shuffleDone \u003d loggedAttempt.getShuffleFinished();\n      long finishTime \u003d loggedAttempt.getFinishTime();\n      if (startTime \u003c\u003d 0 || startTime \u003e\u003d finishTime) {\n        // have seen startTime\u003efinishTime.\n        // haven\u0027t seen reduce task with startTime\u003d0 ever. But if this happens,\n        // make up a reduceTime with no shuffle/merge.\n        long reduceTime \u003d makeUpReduceRuntime(state);\n        return new ReduceTaskAttemptInfo\n          (state, taskInfo, 0, 0, reduceTime, allSplitVectors);\n      } else {\n        if (shuffleDone \u003c\u003d 0) {\n          shuffleDone \u003d startTime;\n        }\n        if (mergeDone \u003c\u003d 0) {\n          mergeDone \u003d finishTime;\n        }\n        long shuffleTime \u003d shuffleDone - startTime;\n        long mergeTime \u003d mergeDone - shuffleDone;\n        long reduceTime \u003d finishTime - mergeDone;\n        reduceTime \u003d sanitizeTaskRuntime(reduceTime, loggedAttempt.getAttemptID());\n        \n        return new ReduceTaskAttemptInfo(state, taskInfo, shuffleTime,\n            mergeTime, reduceTime, allSplitVectors);\n      }\n    } else {\n      throw new IllegalArgumentException(\"taskType for \"\n          + loggedTask.getTaskID() + \" is neither MAP nor REDUCE: \"\n          + loggedTask.getTaskType());\n    }\n  }",
      "path": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2037. Capture intermediate progress, CPU and memory usage for tasks. Contributed by Dick King. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157253 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 2:05 PM",
      "commitName": "989c5e90a58d06320e70d7746a97d9a8376c49e3",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 60.96,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,50 @@\n   private TaskAttemptInfo getTaskAttemptInfo(LoggedTask loggedTask,\n       LoggedTaskAttempt loggedAttempt) {\n     TaskInfo taskInfo \u003d getTaskInfo(loggedTask);\n+    \n+    List\u003cList\u003cInteger\u003e\u003e allSplitVectors \u003d loggedAttempt.allSplitVectors();\n+\n     State state \u003d convertState(loggedAttempt.getResult());\n     if (loggedTask.getTaskType() \u003d\u003d Values.MAP) {\n       long taskTime;\n       if (loggedAttempt.getStartTime() \u003d\u003d 0) {\n         int locality \u003d getLocality(loggedTask, loggedAttempt);\n         taskTime \u003d makeUpMapRuntime(state, locality);\n       } else {\n         taskTime \u003d loggedAttempt.getFinishTime() - loggedAttempt.getStartTime();\n       }\n       taskTime \u003d sanitizeTaskRuntime(taskTime, loggedAttempt.getAttemptID());\n-      return new MapTaskAttemptInfo(state, taskInfo, taskTime);\n+      return new MapTaskAttemptInfo(state, taskInfo, taskTime, allSplitVectors);\n     } else if (loggedTask.getTaskType() \u003d\u003d Values.REDUCE) {\n       long startTime \u003d loggedAttempt.getStartTime();\n       long mergeDone \u003d loggedAttempt.getSortFinished();\n       long shuffleDone \u003d loggedAttempt.getShuffleFinished();\n       long finishTime \u003d loggedAttempt.getFinishTime();\n       if (startTime \u003c\u003d 0 || startTime \u003e\u003d finishTime) {\n         // have seen startTime\u003efinishTime.\n         // haven\u0027t seen reduce task with startTime\u003d0 ever. But if this happens,\n         // make up a reduceTime with no shuffle/merge.\n         long reduceTime \u003d makeUpReduceRuntime(state);\n-        return new ReduceTaskAttemptInfo(state, taskInfo, 0, 0, reduceTime);\n+        return new ReduceTaskAttemptInfo\n+          (state, taskInfo, 0, 0, reduceTime, allSplitVectors);\n       } else {\n         if (shuffleDone \u003c\u003d 0) {\n           shuffleDone \u003d startTime;\n         }\n         if (mergeDone \u003c\u003d 0) {\n           mergeDone \u003d finishTime;\n         }\n         long shuffleTime \u003d shuffleDone - startTime;\n         long mergeTime \u003d mergeDone - shuffleDone;\n         long reduceTime \u003d finishTime - mergeDone;\n         reduceTime \u003d sanitizeTaskRuntime(reduceTime, loggedAttempt.getAttemptID());\n         \n         return new ReduceTaskAttemptInfo(state, taskInfo, shuffleTime,\n-            mergeTime, reduceTime);\n+            mergeTime, reduceTime, allSplitVectors);\n       }\n     } else {\n       throw new IllegalArgumentException(\"taskType for \"\n           + loggedTask.getTaskID() + \" is neither MAP nor REDUCE: \"\n           + loggedTask.getTaskType());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskAttemptInfo getTaskAttemptInfo(LoggedTask loggedTask,\n      LoggedTaskAttempt loggedAttempt) {\n    TaskInfo taskInfo \u003d getTaskInfo(loggedTask);\n    \n    List\u003cList\u003cInteger\u003e\u003e allSplitVectors \u003d loggedAttempt.allSplitVectors();\n\n    State state \u003d convertState(loggedAttempt.getResult());\n    if (loggedTask.getTaskType() \u003d\u003d Values.MAP) {\n      long taskTime;\n      if (loggedAttempt.getStartTime() \u003d\u003d 0) {\n        int locality \u003d getLocality(loggedTask, loggedAttempt);\n        taskTime \u003d makeUpMapRuntime(state, locality);\n      } else {\n        taskTime \u003d loggedAttempt.getFinishTime() - loggedAttempt.getStartTime();\n      }\n      taskTime \u003d sanitizeTaskRuntime(taskTime, loggedAttempt.getAttemptID());\n      return new MapTaskAttemptInfo(state, taskInfo, taskTime, allSplitVectors);\n    } else if (loggedTask.getTaskType() \u003d\u003d Values.REDUCE) {\n      long startTime \u003d loggedAttempt.getStartTime();\n      long mergeDone \u003d loggedAttempt.getSortFinished();\n      long shuffleDone \u003d loggedAttempt.getShuffleFinished();\n      long finishTime \u003d loggedAttempt.getFinishTime();\n      if (startTime \u003c\u003d 0 || startTime \u003e\u003d finishTime) {\n        // have seen startTime\u003efinishTime.\n        // haven\u0027t seen reduce task with startTime\u003d0 ever. But if this happens,\n        // make up a reduceTime with no shuffle/merge.\n        long reduceTime \u003d makeUpReduceRuntime(state);\n        return new ReduceTaskAttemptInfo\n          (state, taskInfo, 0, 0, reduceTime, allSplitVectors);\n      } else {\n        if (shuffleDone \u003c\u003d 0) {\n          shuffleDone \u003d startTime;\n        }\n        if (mergeDone \u003c\u003d 0) {\n          mergeDone \u003d finishTime;\n        }\n        long shuffleTime \u003d shuffleDone - startTime;\n        long mergeTime \u003d mergeDone - shuffleDone;\n        long reduceTime \u003d finishTime - mergeDone;\n        reduceTime \u003d sanitizeTaskRuntime(reduceTime, loggedAttempt.getAttemptID());\n        \n        return new ReduceTaskAttemptInfo(state, taskInfo, shuffleTime,\n            mergeTime, reduceTime, allSplitVectors);\n      }\n    } else {\n      throw new IllegalArgumentException(\"taskType for \"\n          + loggedTask.getTaskID() + \" is neither MAP nor REDUCE: \"\n          + loggedTask.getTaskType());\n    }\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,46 @@\n+  private TaskAttemptInfo getTaskAttemptInfo(LoggedTask loggedTask,\n+      LoggedTaskAttempt loggedAttempt) {\n+    TaskInfo taskInfo \u003d getTaskInfo(loggedTask);\n+    State state \u003d convertState(loggedAttempt.getResult());\n+    if (loggedTask.getTaskType() \u003d\u003d Values.MAP) {\n+      long taskTime;\n+      if (loggedAttempt.getStartTime() \u003d\u003d 0) {\n+        int locality \u003d getLocality(loggedTask, loggedAttempt);\n+        taskTime \u003d makeUpMapRuntime(state, locality);\n+      } else {\n+        taskTime \u003d loggedAttempt.getFinishTime() - loggedAttempt.getStartTime();\n+      }\n+      taskTime \u003d sanitizeTaskRuntime(taskTime, loggedAttempt.getAttemptID());\n+      return new MapTaskAttemptInfo(state, taskInfo, taskTime);\n+    } else if (loggedTask.getTaskType() \u003d\u003d Values.REDUCE) {\n+      long startTime \u003d loggedAttempt.getStartTime();\n+      long mergeDone \u003d loggedAttempt.getSortFinished();\n+      long shuffleDone \u003d loggedAttempt.getShuffleFinished();\n+      long finishTime \u003d loggedAttempt.getFinishTime();\n+      if (startTime \u003c\u003d 0 || startTime \u003e\u003d finishTime) {\n+        // have seen startTime\u003efinishTime.\n+        // haven\u0027t seen reduce task with startTime\u003d0 ever. But if this happens,\n+        // make up a reduceTime with no shuffle/merge.\n+        long reduceTime \u003d makeUpReduceRuntime(state);\n+        return new ReduceTaskAttemptInfo(state, taskInfo, 0, 0, reduceTime);\n+      } else {\n+        if (shuffleDone \u003c\u003d 0) {\n+          shuffleDone \u003d startTime;\n+        }\n+        if (mergeDone \u003c\u003d 0) {\n+          mergeDone \u003d finishTime;\n+        }\n+        long shuffleTime \u003d shuffleDone - startTime;\n+        long mergeTime \u003d mergeDone - shuffleDone;\n+        long reduceTime \u003d finishTime - mergeDone;\n+        reduceTime \u003d sanitizeTaskRuntime(reduceTime, loggedAttempt.getAttemptID());\n+        \n+        return new ReduceTaskAttemptInfo(state, taskInfo, shuffleTime,\n+            mergeTime, reduceTime);\n+      }\n+    } else {\n+      throw new IllegalArgumentException(\"taskType for \"\n+          + loggedTask.getTaskID() + \" is neither MAP nor REDUCE: \"\n+          + loggedTask.getTaskType());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskAttemptInfo getTaskAttemptInfo(LoggedTask loggedTask,\n      LoggedTaskAttempt loggedAttempt) {\n    TaskInfo taskInfo \u003d getTaskInfo(loggedTask);\n    State state \u003d convertState(loggedAttempt.getResult());\n    if (loggedTask.getTaskType() \u003d\u003d Values.MAP) {\n      long taskTime;\n      if (loggedAttempt.getStartTime() \u003d\u003d 0) {\n        int locality \u003d getLocality(loggedTask, loggedAttempt);\n        taskTime \u003d makeUpMapRuntime(state, locality);\n      } else {\n        taskTime \u003d loggedAttempt.getFinishTime() - loggedAttempt.getStartTime();\n      }\n      taskTime \u003d sanitizeTaskRuntime(taskTime, loggedAttempt.getAttemptID());\n      return new MapTaskAttemptInfo(state, taskInfo, taskTime);\n    } else if (loggedTask.getTaskType() \u003d\u003d Values.REDUCE) {\n      long startTime \u003d loggedAttempt.getStartTime();\n      long mergeDone \u003d loggedAttempt.getSortFinished();\n      long shuffleDone \u003d loggedAttempt.getShuffleFinished();\n      long finishTime \u003d loggedAttempt.getFinishTime();\n      if (startTime \u003c\u003d 0 || startTime \u003e\u003d finishTime) {\n        // have seen startTime\u003efinishTime.\n        // haven\u0027t seen reduce task with startTime\u003d0 ever. But if this happens,\n        // make up a reduceTime with no shuffle/merge.\n        long reduceTime \u003d makeUpReduceRuntime(state);\n        return new ReduceTaskAttemptInfo(state, taskInfo, 0, 0, reduceTime);\n      } else {\n        if (shuffleDone \u003c\u003d 0) {\n          shuffleDone \u003d startTime;\n        }\n        if (mergeDone \u003c\u003d 0) {\n          mergeDone \u003d finishTime;\n        }\n        long shuffleTime \u003d shuffleDone - startTime;\n        long mergeTime \u003d mergeDone - shuffleDone;\n        long reduceTime \u003d finishTime - mergeDone;\n        reduceTime \u003d sanitizeTaskRuntime(reduceTime, loggedAttempt.getAttemptID());\n        \n        return new ReduceTaskAttemptInfo(state, taskInfo, shuffleTime,\n            mergeTime, reduceTime);\n      }\n    } else {\n      throw new IllegalArgumentException(\"taskType for \"\n          + loggedTask.getTaskID() + \" is neither MAP nor REDUCE: \"\n          + loggedTask.getTaskType());\n    }\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
    }
  }
}