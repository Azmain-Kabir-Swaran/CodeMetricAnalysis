{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationHtmlBlock.java",
  "functionName": "verifyAndParseParameters",
  "functionId": "verifyAndParseParameters___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationHtmlBlock.java",
  "functionStartLine": 55,
  "functionEndLine": 131,
  "numCommitsSeen": 3,
  "timeTaken": 1419,
  "changeHistory": [
    "631b5c2db733b0733a779e843b8035f68d0fcdf3",
    "91cc070d67533ebb3325b982eba2135e0d175a82"
  ],
  "changeHistoryShort": {
    "631b5c2db733b0733a779e843b8035f68d0fcdf3": "Ybodychange",
    "91cc070d67533ebb3325b982eba2135e0d175a82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "631b5c2db733b0733a779e843b8035f68d0fcdf3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5418. When partial log aggregation is enabled, display the list of aggregated files on the container log page. (Xuan Gong via wangda)\n\nChange-Id: I1befb0bbaeb89fb315bafe3e2f3379663f8cf1ec\n",
      "commitDate": "15/12/17 3:38 PM",
      "commitName": "631b5c2db733b0733a779e843b8035f68d0fcdf3",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "31/08/17 4:41 PM",
      "commitNameOld": "91cc070d67533ebb3325b982eba2135e0d175a82",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 106.0,
      "commitsBetweenForRepo": 857,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,77 @@\n   protected BlockParameters verifyAndParseParameters(Block html) {\n     BlockParameters params \u003d new BlockParameters();\n     ContainerId containerId \u003d LogAggregationWebUtils\n         .verifyAndGetContainerId(html, $(CONTAINER_ID));\n     params.setContainerId(containerId);\n \n     NodeId nodeId \u003d LogAggregationWebUtils\n         .verifyAndGetNodeId(html, $(NM_NODENAME));\n     params.setNodeId(nodeId);\n \n     String appOwner \u003d LogAggregationWebUtils\n         .verifyAndGetAppOwner(html, $(APP_OWNER));\n     params.setAppOwner(appOwner);\n \n     boolean isValid \u003d true;\n     long start \u003d -4096;\n     try {\n       start \u003d LogAggregationWebUtils.getLogStartIndex(\n           html, $(\"start\"));\n     } catch (NumberFormatException ne) {\n       html.h1().__(\"Invalid log start value: \" + $(\"start\")).__();\n       isValid \u003d false;\n     }\n     params.setStartIndex(start);\n \n     long end \u003d Long.MAX_VALUE;\n     try {\n       end \u003d LogAggregationWebUtils.getLogEndIndex(\n           html, $(\"end\"));\n     } catch (NumberFormatException ne) {\n-      html.h1().__(\"Invalid log start value: \" + $(\"end\")).__();\n+      html.h1().__(\"Invalid log end value: \" + $(\"end\")).__();\n       isValid \u003d false;\n     }\n     params.setEndIndex(end);\n \n+    long startTime \u003d 0;\n+    try {\n+      startTime \u003d LogAggregationWebUtils.getLogStartTime(\n+          $(\"start.time\"));\n+    } catch (NumberFormatException ne) {\n+      html.h1().__(\"Invalid log start time value: \" + $(\"start.time\")).__();\n+      isValid \u003d false;\n+    }\n+    params.setStartTime(startTime);\n+\n+    long endTime \u003d Long.MAX_VALUE;\n+    try {\n+      endTime \u003d LogAggregationWebUtils.getLogEndTime(\n+          $(\"end.time\"));\n+      if (endTime \u003c startTime) {\n+        html.h1().__(\"Invalid log end time value: \" + $(\"end.time\") +\n+            \". It should be larger than start time value:\" + startTime).__();\n+        isValid \u003d false;\n+      }\n+    } catch (NumberFormatException ne) {\n+      html.h1().__(\"Invalid log end time value: \" + $(\"end.time\")).__();\n+      isValid \u003d false;\n+    }\n+    params.setEndTime(endTime);\n+\n     if (containerId \u003d\u003d null || nodeId \u003d\u003d null || appOwner \u003d\u003d null\n         || appOwner.isEmpty() || !isValid) {\n       return null;\n     }\n \n     ApplicationId appId \u003d containerId.getApplicationAttemptId()\n         .getApplicationId();\n     params.setAppId(appId);\n \n     String logEntity \u003d $(ENTITY_STRING);\n     if (logEntity \u003d\u003d null || logEntity.isEmpty()) {\n       logEntity \u003d containerId.toString();\n     }\n     params.setLogEntity(logEntity);\n \n     return params;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected BlockParameters verifyAndParseParameters(Block html) {\n    BlockParameters params \u003d new BlockParameters();\n    ContainerId containerId \u003d LogAggregationWebUtils\n        .verifyAndGetContainerId(html, $(CONTAINER_ID));\n    params.setContainerId(containerId);\n\n    NodeId nodeId \u003d LogAggregationWebUtils\n        .verifyAndGetNodeId(html, $(NM_NODENAME));\n    params.setNodeId(nodeId);\n\n    String appOwner \u003d LogAggregationWebUtils\n        .verifyAndGetAppOwner(html, $(APP_OWNER));\n    params.setAppOwner(appOwner);\n\n    boolean isValid \u003d true;\n    long start \u003d -4096;\n    try {\n      start \u003d LogAggregationWebUtils.getLogStartIndex(\n          html, $(\"start\"));\n    } catch (NumberFormatException ne) {\n      html.h1().__(\"Invalid log start value: \" + $(\"start\")).__();\n      isValid \u003d false;\n    }\n    params.setStartIndex(start);\n\n    long end \u003d Long.MAX_VALUE;\n    try {\n      end \u003d LogAggregationWebUtils.getLogEndIndex(\n          html, $(\"end\"));\n    } catch (NumberFormatException ne) {\n      html.h1().__(\"Invalid log end value: \" + $(\"end\")).__();\n      isValid \u003d false;\n    }\n    params.setEndIndex(end);\n\n    long startTime \u003d 0;\n    try {\n      startTime \u003d LogAggregationWebUtils.getLogStartTime(\n          $(\"start.time\"));\n    } catch (NumberFormatException ne) {\n      html.h1().__(\"Invalid log start time value: \" + $(\"start.time\")).__();\n      isValid \u003d false;\n    }\n    params.setStartTime(startTime);\n\n    long endTime \u003d Long.MAX_VALUE;\n    try {\n      endTime \u003d LogAggregationWebUtils.getLogEndTime(\n          $(\"end.time\"));\n      if (endTime \u003c startTime) {\n        html.h1().__(\"Invalid log end time value: \" + $(\"end.time\") +\n            \". It should be larger than start time value:\" + startTime).__();\n        isValid \u003d false;\n      }\n    } catch (NumberFormatException ne) {\n      html.h1().__(\"Invalid log end time value: \" + $(\"end.time\")).__();\n      isValid \u003d false;\n    }\n    params.setEndTime(endTime);\n\n    if (containerId \u003d\u003d null || nodeId \u003d\u003d null || appOwner \u003d\u003d null\n        || appOwner.isEmpty() || !isValid) {\n      return null;\n    }\n\n    ApplicationId appId \u003d containerId.getApplicationAttemptId()\n        .getApplicationId();\n    params.setAppId(appId);\n\n    String logEntity \u003d $(ENTITY_STRING);\n    if (logEntity \u003d\u003d null || logEntity.isEmpty()) {\n      logEntity \u003d containerId.toString();\n    }\n    params.setLogEntity(logEntity);\n\n    return params;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationHtmlBlock.java",
      "extendedDetails": {}
    },
    "91cc070d67533ebb3325b982eba2135e0d175a82": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6877. Create an abstract log reader for extendability. Contributed by Xuan Gong.\n",
      "commitDate": "31/08/17 4:41 PM",
      "commitName": "91cc070d67533ebb3325b982eba2135e0d175a82",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,52 @@\n+  protected BlockParameters verifyAndParseParameters(Block html) {\n+    BlockParameters params \u003d new BlockParameters();\n+    ContainerId containerId \u003d LogAggregationWebUtils\n+        .verifyAndGetContainerId(html, $(CONTAINER_ID));\n+    params.setContainerId(containerId);\n+\n+    NodeId nodeId \u003d LogAggregationWebUtils\n+        .verifyAndGetNodeId(html, $(NM_NODENAME));\n+    params.setNodeId(nodeId);\n+\n+    String appOwner \u003d LogAggregationWebUtils\n+        .verifyAndGetAppOwner(html, $(APP_OWNER));\n+    params.setAppOwner(appOwner);\n+\n+    boolean isValid \u003d true;\n+    long start \u003d -4096;\n+    try {\n+      start \u003d LogAggregationWebUtils.getLogStartIndex(\n+          html, $(\"start\"));\n+    } catch (NumberFormatException ne) {\n+      html.h1().__(\"Invalid log start value: \" + $(\"start\")).__();\n+      isValid \u003d false;\n+    }\n+    params.setStartIndex(start);\n+\n+    long end \u003d Long.MAX_VALUE;\n+    try {\n+      end \u003d LogAggregationWebUtils.getLogEndIndex(\n+          html, $(\"end\"));\n+    } catch (NumberFormatException ne) {\n+      html.h1().__(\"Invalid log start value: \" + $(\"end\")).__();\n+      isValid \u003d false;\n+    }\n+    params.setEndIndex(end);\n+\n+    if (containerId \u003d\u003d null || nodeId \u003d\u003d null || appOwner \u003d\u003d null\n+        || appOwner.isEmpty() || !isValid) {\n+      return null;\n+    }\n+\n+    ApplicationId appId \u003d containerId.getApplicationAttemptId()\n+        .getApplicationId();\n+    params.setAppId(appId);\n+\n+    String logEntity \u003d $(ENTITY_STRING);\n+    if (logEntity \u003d\u003d null || logEntity.isEmpty()) {\n+      logEntity \u003d containerId.toString();\n+    }\n+    params.setLogEntity(logEntity);\n+\n+    return params;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected BlockParameters verifyAndParseParameters(Block html) {\n    BlockParameters params \u003d new BlockParameters();\n    ContainerId containerId \u003d LogAggregationWebUtils\n        .verifyAndGetContainerId(html, $(CONTAINER_ID));\n    params.setContainerId(containerId);\n\n    NodeId nodeId \u003d LogAggregationWebUtils\n        .verifyAndGetNodeId(html, $(NM_NODENAME));\n    params.setNodeId(nodeId);\n\n    String appOwner \u003d LogAggregationWebUtils\n        .verifyAndGetAppOwner(html, $(APP_OWNER));\n    params.setAppOwner(appOwner);\n\n    boolean isValid \u003d true;\n    long start \u003d -4096;\n    try {\n      start \u003d LogAggregationWebUtils.getLogStartIndex(\n          html, $(\"start\"));\n    } catch (NumberFormatException ne) {\n      html.h1().__(\"Invalid log start value: \" + $(\"start\")).__();\n      isValid \u003d false;\n    }\n    params.setStartIndex(start);\n\n    long end \u003d Long.MAX_VALUE;\n    try {\n      end \u003d LogAggregationWebUtils.getLogEndIndex(\n          html, $(\"end\"));\n    } catch (NumberFormatException ne) {\n      html.h1().__(\"Invalid log start value: \" + $(\"end\")).__();\n      isValid \u003d false;\n    }\n    params.setEndIndex(end);\n\n    if (containerId \u003d\u003d null || nodeId \u003d\u003d null || appOwner \u003d\u003d null\n        || appOwner.isEmpty() || !isValid) {\n      return null;\n    }\n\n    ApplicationId appId \u003d containerId.getApplicationAttemptId()\n        .getApplicationId();\n    params.setAppId(appId);\n\n    String logEntity \u003d $(ENTITY_STRING);\n    if (logEntity \u003d\u003d null || logEntity.isEmpty()) {\n      logEntity \u003d containerId.toString();\n    }\n    params.setLogEntity(logEntity);\n\n    return params;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationHtmlBlock.java"
    }
  }
}