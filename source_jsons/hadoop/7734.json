{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormatProtobuf.java",
  "functionName": "save",
  "functionId": "save___file-File__compression-FSImageCompression",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
  "functionStartLine": 711,
  "functionEndLine": 727,
  "numCommitsSeen": 38,
  "timeTaken": 4125,
  "changeHistory": [
    "b67812ea2111fa11bdd76096b923c93e1bdf2923",
    "a991e899fb9f98d2089f37ac9ac7c485d3bbb959",
    "af9bdbe447b119bff10ec5281993bfc36b6dea71",
    "571e9c623241106dad5521a870fb8daef3f2b00a",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "b67812ea2111fa11bdd76096b923c93e1bdf2923": "Ybodychange",
    "a991e899fb9f98d2089f37ac9ac7c485d3bbb959": "Ymultichange(Yreturntypechange,Ybodychange)",
    "af9bdbe447b119bff10ec5281993bfc36b6dea71": "Ybodychange",
    "571e9c623241106dad5521a870fb8daef3f2b00a": "Ybodychange",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b67812ea2111fa11bdd76096b923c93e1bdf2923": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14617. Improve fsimage load time by writing sub-sections to the fsimage index (#1028). Contributed by  Stephen O\u0027Donnell.\n\nReviewed-by: He Xiaoqiao \u003chexiaoqiao@apache.org\u003e",
      "commitDate": "22/08/19 5:09 PM",
      "commitName": "b67812ea2111fa11bdd76096b923c93e1bdf2923",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "05/07/19 10:17 AM",
      "commitNameOld": "9c907294860a48f0d1676a31bda15795b7a6771a",
      "commitAuthorOld": "leosunli",
      "daysBetweenCommits": 48.29,
      "commitsBetweenForRepo": 420,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     long save(File file, FSImageCompression compression) throws IOException {\n+      enableSubSectionsIfRequired();\n       FileOutputStream fout \u003d new FileOutputStream(file);\n       fileChannel \u003d fout.getChannel();\n       try {\n         LOG.info(\"Saving image file {} using {}\", file, compression);\n         long startTime \u003d monotonicNow();\n         long numErrors \u003d saveInternal(\n             fout, compression, file.getAbsolutePath());\n         LOG.info(\"Image file {} of size {} bytes saved in {} seconds {}.\", file,\n             file.length(), (monotonicNow() - startTime) / 1000,\n             (numErrors \u003e 0 ? (\" with\" + numErrors + \" errors\") : \"\"));\n         return numErrors;\n       } finally {\n         fout.close();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    long save(File file, FSImageCompression compression) throws IOException {\n      enableSubSectionsIfRequired();\n      FileOutputStream fout \u003d new FileOutputStream(file);\n      fileChannel \u003d fout.getChannel();\n      try {\n        LOG.info(\"Saving image file {} using {}\", file, compression);\n        long startTime \u003d monotonicNow();\n        long numErrors \u003d saveInternal(\n            fout, compression, file.getAbsolutePath());\n        LOG.info(\"Image file {} of size {} bytes saved in {} seconds {}.\", file,\n            file.length(), (monotonicNow() - startTime) / 1000,\n            (numErrors \u003e 0 ? (\" with\" + numErrors + \" errors\") : \"\"));\n        return numErrors;\n      } finally {\n        fout.close();\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
      "extendedDetails": {}
    },
    "a991e899fb9f98d2089f37ac9ac7c485d3bbb959": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-13314. NameNode should optionally exit if it detects FsImage corruption. Contributed by Arpit Agarwal.\n",
      "commitDate": "28/03/18 12:49 PM",
      "commitName": "a991e899fb9f98d2089f37ac9ac7c485d3bbb959",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-13314. NameNode should optionally exit if it detects FsImage corruption. Contributed by Arpit Agarwal.\n",
          "commitDate": "28/03/18 12:49 PM",
          "commitName": "a991e899fb9f98d2089f37ac9ac7c485d3bbb959",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/11/17 9:27 PM",
          "commitNameOld": "e565b5277d5b890dad107fe85e295a3907e4bfc1",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 145.64,
          "commitsBetweenForRepo": 1105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-    void save(File file, FSImageCompression compression) throws IOException {\n+    long save(File file, FSImageCompression compression) throws IOException {\n       FileOutputStream fout \u003d new FileOutputStream(file);\n       fileChannel \u003d fout.getChannel();\n       try {\n         LOG.info(\"Saving image file {} using {}\", file, compression);\n         long startTime \u003d monotonicNow();\n-        saveInternal(fout, compression, file.getAbsolutePath());\n-        LOG.info(\"Image file {} of size {} bytes saved in {} seconds.\", file,\n-            file.length(), (monotonicNow() - startTime) / 1000);\n+        long numErrors \u003d saveInternal(\n+            fout, compression, file.getAbsolutePath());\n+        LOG.info(\"Image file {} of size {} bytes saved in {} seconds {}.\", file,\n+            file.length(), (monotonicNow() - startTime) / 1000,\n+            (numErrors \u003e 0 ? (\" with\" + numErrors + \" errors\") : \"\"));\n+        return numErrors;\n       } finally {\n         fout.close();\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    long save(File file, FSImageCompression compression) throws IOException {\n      FileOutputStream fout \u003d new FileOutputStream(file);\n      fileChannel \u003d fout.getChannel();\n      try {\n        LOG.info(\"Saving image file {} using {}\", file, compression);\n        long startTime \u003d monotonicNow();\n        long numErrors \u003d saveInternal(\n            fout, compression, file.getAbsolutePath());\n        LOG.info(\"Image file {} of size {} bytes saved in {} seconds {}.\", file,\n            file.length(), (monotonicNow() - startTime) / 1000,\n            (numErrors \u003e 0 ? (\" with\" + numErrors + \" errors\") : \"\"));\n        return numErrors;\n      } finally {\n        fout.close();\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "long"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13314. NameNode should optionally exit if it detects FsImage corruption. Contributed by Arpit Agarwal.\n",
          "commitDate": "28/03/18 12:49 PM",
          "commitName": "a991e899fb9f98d2089f37ac9ac7c485d3bbb959",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/11/17 9:27 PM",
          "commitNameOld": "e565b5277d5b890dad107fe85e295a3907e4bfc1",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 145.64,
          "commitsBetweenForRepo": 1105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-    void save(File file, FSImageCompression compression) throws IOException {\n+    long save(File file, FSImageCompression compression) throws IOException {\n       FileOutputStream fout \u003d new FileOutputStream(file);\n       fileChannel \u003d fout.getChannel();\n       try {\n         LOG.info(\"Saving image file {} using {}\", file, compression);\n         long startTime \u003d monotonicNow();\n-        saveInternal(fout, compression, file.getAbsolutePath());\n-        LOG.info(\"Image file {} of size {} bytes saved in {} seconds.\", file,\n-            file.length(), (monotonicNow() - startTime) / 1000);\n+        long numErrors \u003d saveInternal(\n+            fout, compression, file.getAbsolutePath());\n+        LOG.info(\"Image file {} of size {} bytes saved in {} seconds {}.\", file,\n+            file.length(), (monotonicNow() - startTime) / 1000,\n+            (numErrors \u003e 0 ? (\" with\" + numErrors + \" errors\") : \"\"));\n+        return numErrors;\n       } finally {\n         fout.close();\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    long save(File file, FSImageCompression compression) throws IOException {\n      FileOutputStream fout \u003d new FileOutputStream(file);\n      fileChannel \u003d fout.getChannel();\n      try {\n        LOG.info(\"Saving image file {} using {}\", file, compression);\n        long startTime \u003d monotonicNow();\n        long numErrors \u003d saveInternal(\n            fout, compression, file.getAbsolutePath());\n        LOG.info(\"Image file {} of size {} bytes saved in {} seconds {}.\", file,\n            file.length(), (monotonicNow() - startTime) / 1000,\n            (numErrors \u003e 0 ? (\" with\" + numErrors + \" errors\") : \"\"));\n        return numErrors;\n      } finally {\n        fout.close();\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
          "extendedDetails": {}
        }
      ]
    },
    "af9bdbe447b119bff10ec5281993bfc36b6dea71": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10264. Logging improvements in FSImageFormatProtobuf.Saver. (Contributed by Xiaobing Zhou)\n",
      "commitDate": "19/04/16 11:26 AM",
      "commitName": "af9bdbe447b119bff10ec5281993bfc36b6dea71",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "27/01/16 4:34 PM",
      "commitNameOld": "ec25c7f9c7e60c077d8c4143253c20445fcdaecf",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 82.74,
      "commitsBetweenForRepo": 524,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n     void save(File file, FSImageCompression compression) throws IOException {\n       FileOutputStream fout \u003d new FileOutputStream(file);\n       fileChannel \u003d fout.getChannel();\n       try {\n+        LOG.info(\"Saving image file {} using {}\", file, compression);\n+        long startTime \u003d monotonicNow();\n         saveInternal(fout, compression, file.getAbsolutePath());\n+        LOG.info(\"Image file {} of size {} bytes saved in {} seconds.\", file,\n+            file.length(), (monotonicNow() - startTime) / 1000);\n       } finally {\n         fout.close();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void save(File file, FSImageCompression compression) throws IOException {\n      FileOutputStream fout \u003d new FileOutputStream(file);\n      fileChannel \u003d fout.getChannel();\n      try {\n        LOG.info(\"Saving image file {} using {}\", file, compression);\n        long startTime \u003d monotonicNow();\n        saveInternal(fout, compression, file.getAbsolutePath());\n        LOG.info(\"Image file {} of size {} bytes saved in {} seconds.\", file,\n            file.length(), (monotonicNow() - startTime) / 1000);\n      } finally {\n        fout.close();\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
      "extendedDetails": {}
    },
    "571e9c623241106dad5521a870fb8daef3f2b00a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7381. Decouple the management of block id and gen stamps from FSNamesystem. Contributed by Haohui Mai.\n",
      "commitDate": "11/11/14 12:42 PM",
      "commitName": "571e9c623241106dad5521a870fb8daef3f2b00a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/11/14 3:39 PM",
      "commitNameOld": "6caa8100d5d2547e34356dc279fd5e65b81a925a",
      "commitAuthorOld": "Arun C. Murthy",
      "daysBetweenCommits": 2.88,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     void save(File file, FSImageCompression compression) throws IOException {\n       FileOutputStream fout \u003d new FileOutputStream(file);\n       fileChannel \u003d fout.getChannel();\n       try {\n-        saveInternal(fout, compression, file.getAbsolutePath().toString());\n+        saveInternal(fout, compression, file.getAbsolutePath());\n       } finally {\n         fout.close();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void save(File file, FSImageCompression compression) throws IOException {\n      FileOutputStream fout \u003d new FileOutputStream(file);\n      fileChannel \u003d fout.getChannel();\n      try {\n        saveInternal(fout, compression, file.getAbsolutePath());\n      } finally {\n        fout.close();\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
      "extendedDetails": {}
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,9 @@\n+    void save(File file, FSImageCompression compression) throws IOException {\n+      FileOutputStream fout \u003d new FileOutputStream(file);\n+      fileChannel \u003d fout.getChannel();\n+      try {\n+        saveInternal(fout, compression, file.getAbsolutePath().toString());\n+      } finally {\n+        fout.close();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void save(File file, FSImageCompression compression) throws IOException {\n      FileOutputStream fout \u003d new FileOutputStream(file);\n      fileChannel \u003d fout.getChannel();\n      try {\n        saveInternal(fout, compression, file.getAbsolutePath().toString());\n      } finally {\n        fout.close();\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java"
    }
  }
}