{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleCopyListing.java",
  "functionName": "writeToFileListingRoot",
  "functionId": "writeToFileListingRoot___fileListWriter-SequenceFile.Writer__fileStatus-LinkedList__CopyListingFileStatus____sourcePathRoot-Path__context-DistCpContext",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
  "functionStartLine": 691,
  "functionEndLine": 707,
  "numCommitsSeen": 121,
  "timeTaken": 5572,
  "changeHistory": [
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "bf3fb585aaf2b179836e139c041fc87920a3c886",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6",
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
    "640a097533e0883bf49504673228d5a327089b44"
  ],
  "changeHistoryShort": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ymultichange(Yparameterchange,Ybodychange)",
    "bf3fb585aaf2b179836e139c041fc87920a3c886": "Ymultichange(Yparameterchange,Ybodychange)",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": "Ymultichange(Yparameterchange,Ybodychange)",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": "Ymultichange(Yparameterchange,Ybodychange)",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": "Ybodychange",
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05": "Ymultichange(Yparameterchange,Ybodychange)",
    "640a097533e0883bf49504673228d5a327089b44": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n       LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n-      DistCpOptions options) throws IOException {\n-    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n-        options.shouldOverwrite();\n+      DistCpContext context) throws IOException {\n+    boolean syncOrOverwrite \u003d context.shouldSyncFolder() ||\n+        context.shouldOverwrite();\n     for (CopyListingFileStatus fs : fileStatus) {\n       if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n           fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n         // Skip the root-paths when syncOrOverwrite\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Skip \" + fs.getPath());\n         }\n         return;\n       }\n       writeToFileListing(fileListWriter, fs, sourcePathRoot);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n      DistCpContext context) throws IOException {\n    boolean syncOrOverwrite \u003d context.shouldSyncFolder() ||\n        context.shouldOverwrite();\n    for (CopyListingFileStatus fs : fileStatus) {\n      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n        // Skip the root-paths when syncOrOverwrite\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Skip \" + fs.getPath());\n        }\n        return;\n      }\n      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-LinkedList\u003cCopyListingFileStatus\u003e, sourcePathRoot-Path, options-DistCpOptions]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-LinkedList\u003cCopyListingFileStatus\u003e, sourcePathRoot-Path, context-DistCpContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n       LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n-      DistCpOptions options) throws IOException {\n-    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n-        options.shouldOverwrite();\n+      DistCpContext context) throws IOException {\n+    boolean syncOrOverwrite \u003d context.shouldSyncFolder() ||\n+        context.shouldOverwrite();\n     for (CopyListingFileStatus fs : fileStatus) {\n       if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n           fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n         // Skip the root-paths when syncOrOverwrite\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Skip \" + fs.getPath());\n         }\n         return;\n       }\n       writeToFileListing(fileListWriter, fs, sourcePathRoot);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n      DistCpContext context) throws IOException {\n    boolean syncOrOverwrite \u003d context.shouldSyncFolder() ||\n        context.shouldOverwrite();\n    for (CopyListingFileStatus fs : fileStatus) {\n      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n        // Skip the root-paths when syncOrOverwrite\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Skip \" + fs.getPath());\n        }\n        return;\n      }\n      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf3fb585aaf2b179836e139c041fc87920a3c886": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen, Rosie Li.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen, Rosie Li.\n",
          "commitDate": "30/03/17 5:38 PM",
          "commitName": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n+      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n-    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n-        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n-      // Skip the root-paths when syncOrOverwrite\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skip \" + fileStatus.getPath());\n-      }      \n-      return;\n+    for (CopyListingFileStatus fs : fileStatus) {\n+      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n+          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n+        // Skip the root-paths when syncOrOverwrite\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Skip \" + fs.getPath());\n+        }\n+        return;\n+      }\n+      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n     }\n-    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    for (CopyListingFileStatus fs : fileStatus) {\n      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n        // Skip the root-paths when syncOrOverwrite\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Skip \" + fs.getPath());\n        }\n        return;\n      }\n      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-CopyListingFileStatus, sourcePathRoot-Path, options-DistCpOptions]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-LinkedList\u003cCopyListingFileStatus\u003e, sourcePathRoot-Path, options-DistCpOptions]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen, Rosie Li.\n",
          "commitDate": "30/03/17 5:38 PM",
          "commitName": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n+      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n-    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n-        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n-      // Skip the root-paths when syncOrOverwrite\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skip \" + fileStatus.getPath());\n-      }      \n-      return;\n+    for (CopyListingFileStatus fs : fileStatus) {\n+      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n+          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n+        // Skip the root-paths when syncOrOverwrite\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Skip \" + fs.getPath());\n+        }\n+        return;\n+      }\n+      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n     }\n-    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    for (CopyListingFileStatus fs : fileStatus) {\n      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n        // Skip the root-paths when syncOrOverwrite\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Skip \" + fs.getPath());\n        }\n        return;\n      }\n      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Revert \"HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\"\n\nThis reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\"\n\nThis reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.\n",
          "commitDate": "30/03/17 5:38 PM",
          "commitName": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "30/03/17 5:01 PM",
          "commitNameOld": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n+      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n-    for (CopyListingFileStatus fs : fileStatus) {\n-      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n-          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n-        // Skip the root-paths when syncOrOverwrite\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Skip \" + fs.getPath());\n-        }\n-        return;\n-      }\n-      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n+    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n+        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n+      // Skip the root-paths when syncOrOverwrite\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skip \" + fileStatus.getPath());\n+      }      \n+      return;\n     }\n+    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n      // Skip the root-paths when syncOrOverwrite\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skip \" + fileStatus.getPath());\n      }      \n      return;\n    }\n    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-LinkedList\u003cCopyListingFileStatus\u003e, sourcePathRoot-Path, options-DistCpOptions]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-CopyListingFileStatus, sourcePathRoot-Path, options-DistCpOptions]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\"\n\nThis reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.\n",
          "commitDate": "30/03/17 5:38 PM",
          "commitName": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "30/03/17 5:01 PM",
          "commitNameOld": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n+      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n-    for (CopyListingFileStatus fs : fileStatus) {\n-      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n-          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n-        // Skip the root-paths when syncOrOverwrite\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Skip \" + fs.getPath());\n-        }\n-        return;\n-      }\n-      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n+    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n+        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n+      // Skip the root-paths when syncOrOverwrite\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skip \" + fileStatus.getPath());\n+      }      \n+      return;\n     }\n+    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n      // Skip the root-paths when syncOrOverwrite\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skip \" + fileStatus.getPath());\n      }      \n      return;\n    }\n    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\n",
      "commitDate": "30/03/17 5:01 PM",
      "commitName": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\n",
          "commitDate": "30/03/17 5:01 PM",
          "commitName": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "15/11/16 10:57 AM",
          "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 135.21,
          "commitsBetweenForRepo": 732,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n+      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n-    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n-        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n-      // Skip the root-paths when syncOrOverwrite\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skip \" + fileStatus.getPath());\n-      }      \n-      return;\n+    for (CopyListingFileStatus fs : fileStatus) {\n+      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n+          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n+        // Skip the root-paths when syncOrOverwrite\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Skip \" + fs.getPath());\n+        }\n+        return;\n+      }\n+      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n     }\n-    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    for (CopyListingFileStatus fs : fileStatus) {\n      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n        // Skip the root-paths when syncOrOverwrite\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Skip \" + fs.getPath());\n        }\n        return;\n      }\n      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-CopyListingFileStatus, sourcePathRoot-Path, options-DistCpOptions]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-LinkedList\u003cCopyListingFileStatus\u003e, sourcePathRoot-Path, options-DistCpOptions]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\n",
          "commitDate": "30/03/17 5:01 PM",
          "commitName": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "15/11/16 10:57 AM",
          "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 135.21,
          "commitsBetweenForRepo": 732,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n+      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n-    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n-        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n-      // Skip the root-paths when syncOrOverwrite\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skip \" + fileStatus.getPath());\n-      }      \n-      return;\n+    for (CopyListingFileStatus fs : fileStatus) {\n+      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n+          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n+        // Skip the root-paths when syncOrOverwrite\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Skip \" + fs.getPath());\n+        }\n+        return;\n+      }\n+      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n     }\n-    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      LinkedList\u003cCopyListingFileStatus\u003e fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    for (CopyListingFileStatus fs : fileStatus) {\n      if (fs.getPath().equals(sourcePathRoot) \u0026\u0026\n          fs.isDirectory() \u0026\u0026 syncOrOverwrite) {\n        // Skip the root-paths when syncOrOverwrite\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Skip \" + fs.getPath());\n        }\n        return;\n      }\n      writeToFileListing(fileListWriter, fs, sourcePathRoot);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-1540. Support file exclusion list in distcp. Contributed by Rich Haase.\n",
      "commitDate": "18/05/15 1:24 PM",
      "commitName": "0790275f058b0cf41780ad337c9150a1e8ebebc6",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/04/15 1:39 PM",
      "commitNameOld": "a287d2fb77d9873b61c6ab24134993d784ae8475",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 23.99,
      "commitsBetweenForRepo": 280,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n       CopyListingFileStatus fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n     if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n         fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n       // Skip the root-paths when syncOrOverwrite\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Skip \" + fileStatus.getPath());\n       }      \n       return;\n     }\n-    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, options);\n+    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n      // Skip the root-paths when syncOrOverwrite\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skip \" + fileStatus.getPath());\n      }      \n      return;\n    }\n    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot);\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5809. Enhance distcp to support preserving HDFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/14 11:25 AM",
      "commitName": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-5809. Enhance distcp to support preserving HDFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/05/14 11:25 AM",
          "commitName": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "02/04/14 5:32 PM",
          "commitNameOld": "640a097533e0883bf49504673228d5a327089b44",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 43.75,
          "commitsBetweenForRepo": 263,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      FileStatus fileStatus, Path sourcePathRoot,\n-      boolean localFile,\n+      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n     if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n         fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n       // Skip the root-paths when syncOrOverwrite\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Skip \" + fileStatus.getPath());\n       }      \n       return;\n     }\n-    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, localFile,\n-        options);\n+    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, options);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n      // Skip the root-paths when syncOrOverwrite\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skip \" + fileStatus.getPath());\n      }      \n      return;\n    }\n    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, options);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-FileStatus, sourcePathRoot-Path, localFile-boolean, options-DistCpOptions]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-CopyListingFileStatus, sourcePathRoot-Path, options-DistCpOptions]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5809. Enhance distcp to support preserving HDFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/05/14 11:25 AM",
          "commitName": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "02/04/14 5:32 PM",
          "commitNameOld": "640a097533e0883bf49504673228d5a327089b44",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 43.75,
          "commitsBetweenForRepo": 263,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n   private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n-      FileStatus fileStatus, Path sourcePathRoot,\n-      boolean localFile,\n+      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n       DistCpOptions options) throws IOException {\n     boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n         options.shouldOverwrite();\n     if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n         fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n       // Skip the root-paths when syncOrOverwrite\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Skip \" + fileStatus.getPath());\n       }      \n       return;\n     }\n-    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, localFile,\n-        options);\n+    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, options);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      CopyListingFileStatus fileStatus, Path sourcePathRoot,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n      // Skip the root-paths when syncOrOverwrite\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skip \" + fileStatus.getPath());\n      }      \n      return;\n    }\n    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, options);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "640a097533e0883bf49504673228d5a327089b44": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10459. distcp V2 doesn\u0027t preserve root dir\u0027s attributes when -p is specified. Contributed by Yongjun Zhang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1584227 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/14 5:32 PM",
      "commitName": "640a097533e0883bf49504673228d5a327089b44",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,17 @@\n+  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n+      FileStatus fileStatus, Path sourcePathRoot,\n+      boolean localFile,\n+      DistCpOptions options) throws IOException {\n+    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n+        options.shouldOverwrite();\n+    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n+        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n+      // Skip the root-paths when syncOrOverwrite\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skip \" + fileStatus.getPath());\n+      }      \n+      return;\n+    }\n+    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, localFile,\n+        options);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListingRoot(SequenceFile.Writer fileListWriter,\n      FileStatus fileStatus, Path sourcePathRoot,\n      boolean localFile,\n      DistCpOptions options) throws IOException {\n    boolean syncOrOverwrite \u003d options.shouldSyncFolder() ||\n        options.shouldOverwrite();\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 \n        fileStatus.isDirectory() \u0026\u0026 syncOrOverwrite) {\n      // Skip the root-paths when syncOrOverwrite\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skip \" + fileStatus.getPath());\n      }      \n      return;\n    }\n    writeToFileListing(fileListWriter, fileStatus, sourcePathRoot, localFile,\n        options);\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java"
    }
  }
}