{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MapFileOutputFormat.java",
  "functionName": "getReaders",
  "functionId": "getReaders___dir-Path__conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java",
  "functionStartLine": 89,
  "functionEndLine": 111,
  "numCommitsSeen": 5,
  "timeTaken": 4488,
  "changeHistory": [
    "b46c2bb51ae524e6640756620f70e5925cda7592",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b46c2bb51ae524e6640756620f70e5925cda7592": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b46c2bb51ae524e6640756620f70e5925cda7592": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5448. MapFileOutputFormat#getReaders bug with invisible files/folders. Contributed by Maysam Yabandeh.\n",
      "commitDate": "21/03/15 9:15 PM",
      "commitName": "b46c2bb51ae524e6640756620f70e5925cda7592",
      "commitAuthor": "Harsh J",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1305.17,
      "commitsBetweenForRepo": 8948,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,23 @@\n   public static MapFile.Reader[] getReaders(Path dir,\n       Configuration conf) throws IOException {\n     FileSystem fs \u003d dir.getFileSystem(conf);\n-    Path[] names \u003d FileUtil.stat2Paths(fs.listStatus(dir));\n+    PathFilter filter \u003d new PathFilter() {\n+      @Override\n+      public boolean accept(Path path) {\n+        String name \u003d path.getName();\n+        if (name.startsWith(\"_\") || name.startsWith(\".\"))\n+          return false;\n+        return true;\n+      }\n+    };\n+    Path[] names \u003d FileUtil.stat2Paths(fs.listStatus(dir, filter));\n \n     // sort names, so that hash partitioning works\n     Arrays.sort(names);\n     \n     MapFile.Reader[] parts \u003d new MapFile.Reader[names.length];\n     for (int i \u003d 0; i \u003c names.length; i++) {\n       parts[i] \u003d new MapFile.Reader(fs, names[i].toString(), conf);\n     }\n     return parts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MapFile.Reader[] getReaders(Path dir,\n      Configuration conf) throws IOException {\n    FileSystem fs \u003d dir.getFileSystem(conf);\n    PathFilter filter \u003d new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        String name \u003d path.getName();\n        if (name.startsWith(\"_\") || name.startsWith(\".\"))\n          return false;\n        return true;\n      }\n    };\n    Path[] names \u003d FileUtil.stat2Paths(fs.listStatus(dir, filter));\n\n    // sort names, so that hash partitioning works\n    Arrays.sort(names);\n    \n    MapFile.Reader[] parts \u003d new MapFile.Reader[names.length];\n    for (int i \u003d 0; i \u003c names.length; i++) {\n      parts[i] \u003d new MapFile.Reader(fs, names[i].toString(), conf);\n    }\n    return parts;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static MapFile.Reader[] getReaders(Path dir,\n      Configuration conf) throws IOException {\n    FileSystem fs \u003d dir.getFileSystem(conf);\n    Path[] names \u003d FileUtil.stat2Paths(fs.listStatus(dir));\n\n    // sort names, so that hash partitioning works\n    Arrays.sort(names);\n    \n    MapFile.Reader[] parts \u003d new MapFile.Reader[names.length];\n    for (int i \u003d 0; i \u003c names.length; i++) {\n      parts[i] \u003d new MapFile.Reader(fs, names[i].toString(), conf);\n    }\n    return parts;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static MapFile.Reader[] getReaders(Path dir,\n      Configuration conf) throws IOException {\n    FileSystem fs \u003d dir.getFileSystem(conf);\n    Path[] names \u003d FileUtil.stat2Paths(fs.listStatus(dir));\n\n    // sort names, so that hash partitioning works\n    Arrays.sort(names);\n    \n    MapFile.Reader[] parts \u003d new MapFile.Reader[names.length];\n    for (int i \u003d 0; i \u003c names.length; i++) {\n      parts[i] \u003d new MapFile.Reader(fs, names[i].toString(), conf);\n    }\n    return parts;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+  public static MapFile.Reader[] getReaders(Path dir,\n+      Configuration conf) throws IOException {\n+    FileSystem fs \u003d dir.getFileSystem(conf);\n+    Path[] names \u003d FileUtil.stat2Paths(fs.listStatus(dir));\n+\n+    // sort names, so that hash partitioning works\n+    Arrays.sort(names);\n+    \n+    MapFile.Reader[] parts \u003d new MapFile.Reader[names.length];\n+    for (int i \u003d 0; i \u003c names.length; i++) {\n+      parts[i] \u003d new MapFile.Reader(fs, names[i].toString(), conf);\n+    }\n+    return parts;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static MapFile.Reader[] getReaders(Path dir,\n      Configuration conf) throws IOException {\n    FileSystem fs \u003d dir.getFileSystem(conf);\n    Path[] names \u003d FileUtil.stat2Paths(fs.listStatus(dir));\n\n    // sort names, so that hash partitioning works\n    Arrays.sort(names);\n    \n    MapFile.Reader[] parts \u003d new MapFile.Reader[names.length];\n    for (int i \u003d 0; i \u003c names.length; i++) {\n      parts[i] \u003d new MapFile.Reader(fs, names[i].toString(), conf);\n    }\n    return parts;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/output/MapFileOutputFormat.java"
    }
  }
}