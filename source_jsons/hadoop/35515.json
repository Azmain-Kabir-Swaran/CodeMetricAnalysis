{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CgroupsLCEResourcesHandler.java",
  "functionName": "deleteCgroup",
  "functionId": "deleteCgroup___cgroupPath-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
  "functionStartLine": 295,
  "functionEndLine": 316,
  "numCommitsSeen": 27,
  "timeTaken": 2409,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049",
    "726c3538a7f0087fe99157019c2b90198de06ec7",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049": "Ybodychange",
    "726c3538a7f0087fe99157019c2b90198de06ec7": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "22/08/17 1:14 AM",
      "commitNameOld": "d5ff57a08fac983f8b5d201064ce07945f0f216e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 570.63,
      "commitsBetweenForRepo": 4960,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n   boolean deleteCgroup(String cgroupPath) {\n     boolean deleted \u003d false;\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n-    }\n+    LOG.debug(\"deleteCgroup: {}\", cgroupPath);\n     long start \u003d clock.getTime();\n     do {\n       try {\n         deleted \u003d checkAndDeleteCgroup(new File(cgroupPath));\n         if (!deleted) {\n           Thread.sleep(deleteCgroupDelay);\n         }\n       } catch (InterruptedException ex) {\n         // NOP\n       }\n     } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n \n     if (!deleted) {\n       LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n           \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n     }\n     return deleted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean deleteCgroup(String cgroupPath) {\n    boolean deleted \u003d false;\n\n    LOG.debug(\"deleteCgroup: {}\", cgroupPath);\n    long start \u003d clock.getTime();\n    do {\n      try {\n        deleted \u003d checkAndDeleteCgroup(new File(cgroupPath));\n        if (!deleted) {\n          Thread.sleep(deleteCgroupDelay);\n        }\n      } catch (InterruptedException ex) {\n        // NOP\n      }\n    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n\n    if (!deleted) {\n      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n    }\n    return deleted;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2809. Implement workaround for linux kernel panic when removing cgroup. Contributed by Nathan Roberts\n",
      "commitDate": "10/02/15 9:27 AM",
      "commitName": "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "23/12/14 8:32 PM",
      "commitNameOld": "41a548a916d4248164cb9495320f123ec215d70e",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 48.54,
      "commitsBetweenForRepo": 312,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   boolean deleteCgroup(String cgroupPath) {\n-    boolean deleted;\n-    \n+    boolean deleted \u003d false;\n+\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"deleteCgroup: \" + cgroupPath);\n     }\n-\n     long start \u003d clock.getTime();\n     do {\n-      deleted \u003d new File(cgroupPath).delete();\n-      if (!deleted) {\n-        try {\n-          Thread.sleep(20);\n-        } catch (InterruptedException ex) {\n-          // NOP        \n+      try {\n+        deleted \u003d checkAndDeleteCgroup(new File(cgroupPath));\n+        if (!deleted) {\n+          Thread.sleep(deleteCgroupDelay);\n         }\n+      } catch (InterruptedException ex) {\n+        // NOP\n       }\n     } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n \n     if (!deleted) {\n       LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n           \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n     }\n-\n     return deleted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean deleteCgroup(String cgroupPath) {\n    boolean deleted \u003d false;\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n    }\n    long start \u003d clock.getTime();\n    do {\n      try {\n        deleted \u003d checkAndDeleteCgroup(new File(cgroupPath));\n        if (!deleted) {\n          Thread.sleep(deleteCgroupDelay);\n        }\n      } catch (InterruptedException ex) {\n        // NOP\n      }\n    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n\n    if (!deleted) {\n      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n    }\n    return deleted;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "726c3538a7f0087fe99157019c2b90198de06ec7": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/10/13 10:05 PM",
      "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
      "commitAuthor": "Sanford Ryza",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,26 @@\n-  private void deleteCgroup(String controller, String groupName) {\n-    String path \u003d pathForCgroup(controller, groupName);\n-\n-    LOG.debug(\"deleteCgroup: \" + path);\n-\n-    if (! new File(path).delete()) {\n-      LOG.warn(\"Unable to delete cgroup at: \" + path);\n+  boolean deleteCgroup(String cgroupPath) {\n+    boolean deleted;\n+    \n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n     }\n+\n+    long start \u003d clock.getTime();\n+    do {\n+      deleted \u003d new File(cgroupPath).delete();\n+      if (!deleted) {\n+        try {\n+          Thread.sleep(20);\n+        } catch (InterruptedException ex) {\n+          // NOP        \n+        }\n+      }\n+    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n+\n+    if (!deleted) {\n+      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n+          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n+    }\n+\n+    return deleted;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean deleteCgroup(String cgroupPath) {\n    boolean deleted;\n    \n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n    }\n\n    long start \u003d clock.getTime();\n    do {\n      deleted \u003d new File(cgroupPath).delete();\n      if (!deleted) {\n        try {\n          Thread.sleep(20);\n        } catch (InterruptedException ex) {\n          // NOP        \n        }\n      }\n    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n\n    if (!deleted) {\n      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n    }\n\n    return deleted;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {
            "oldValue": "[controller-String, groupName-String]",
            "newValue": "[cgroupPath-String]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,26 @@\n-  private void deleteCgroup(String controller, String groupName) {\n-    String path \u003d pathForCgroup(controller, groupName);\n-\n-    LOG.debug(\"deleteCgroup: \" + path);\n-\n-    if (! new File(path).delete()) {\n-      LOG.warn(\"Unable to delete cgroup at: \" + path);\n+  boolean deleteCgroup(String cgroupPath) {\n+    boolean deleted;\n+    \n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n     }\n+\n+    long start \u003d clock.getTime();\n+    do {\n+      deleted \u003d new File(cgroupPath).delete();\n+      if (!deleted) {\n+        try {\n+          Thread.sleep(20);\n+        } catch (InterruptedException ex) {\n+          // NOP        \n+        }\n+      }\n+    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n+\n+    if (!deleted) {\n+      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n+          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n+    }\n+\n+    return deleted;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean deleteCgroup(String cgroupPath) {\n    boolean deleted;\n    \n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n    }\n\n    long start \u003d clock.getTime();\n    do {\n      deleted \u003d new File(cgroupPath).delete();\n      if (!deleted) {\n        try {\n          Thread.sleep(20);\n        } catch (InterruptedException ex) {\n          // NOP        \n        }\n      }\n    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n\n    if (!deleted) {\n      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n    }\n\n    return deleted;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,26 @@\n-  private void deleteCgroup(String controller, String groupName) {\n-    String path \u003d pathForCgroup(controller, groupName);\n-\n-    LOG.debug(\"deleteCgroup: \" + path);\n-\n-    if (! new File(path).delete()) {\n-      LOG.warn(\"Unable to delete cgroup at: \" + path);\n+  boolean deleteCgroup(String cgroupPath) {\n+    boolean deleted;\n+    \n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n     }\n+\n+    long start \u003d clock.getTime();\n+    do {\n+      deleted \u003d new File(cgroupPath).delete();\n+      if (!deleted) {\n+        try {\n+          Thread.sleep(20);\n+        } catch (InterruptedException ex) {\n+          // NOP        \n+        }\n+      }\n+    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n+\n+    if (!deleted) {\n+      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n+          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n+    }\n+\n+    return deleted;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean deleteCgroup(String cgroupPath) {\n    boolean deleted;\n    \n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n    }\n\n    long start \u003d clock.getTime();\n    do {\n      deleted \u003d new File(cgroupPath).delete();\n      if (!deleted) {\n        try {\n          Thread.sleep(20);\n        } catch (InterruptedException ex) {\n          // NOP        \n        }\n      }\n    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n\n    if (!deleted) {\n      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n    }\n\n    return deleted;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,26 @@\n-  private void deleteCgroup(String controller, String groupName) {\n-    String path \u003d pathForCgroup(controller, groupName);\n-\n-    LOG.debug(\"deleteCgroup: \" + path);\n-\n-    if (! new File(path).delete()) {\n-      LOG.warn(\"Unable to delete cgroup at: \" + path);\n+  boolean deleteCgroup(String cgroupPath) {\n+    boolean deleted;\n+    \n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n     }\n+\n+    long start \u003d clock.getTime();\n+    do {\n+      deleted \u003d new File(cgroupPath).delete();\n+      if (!deleted) {\n+        try {\n+          Thread.sleep(20);\n+        } catch (InterruptedException ex) {\n+          // NOP        \n+        }\n+      }\n+    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n+\n+    if (!deleted) {\n+      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n+          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n+    }\n+\n+    return deleted;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean deleteCgroup(String cgroupPath) {\n    boolean deleted;\n    \n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"deleteCgroup: \" + cgroupPath);\n    }\n\n    long start \u003d clock.getTime();\n    do {\n      deleted \u003d new File(cgroupPath).delete();\n      if (!deleted) {\n        try {\n          Thread.sleep(20);\n        } catch (InterruptedException ex) {\n          // NOP        \n        }\n      }\n    } while (!deleted \u0026\u0026 (clock.getTime() - start) \u003c deleteCgroupTimeout);\n\n    if (!deleted) {\n      LOG.warn(\"Unable to delete cgroup at: \" + cgroupPath +\n          \", tried to delete for \" + deleteCgroupTimeout + \"ms\");\n    }\n\n    return deleted;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3. Add support for CPU isolation/monitoring of containers. (adferguson via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 2:58 PM",
      "commitName": "5032a694ed250f65ade8c2b62c97b89ab45f53ea",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,9 @@\n+  private void deleteCgroup(String controller, String groupName) {\n+    String path \u003d pathForCgroup(controller, groupName);\n+\n+    LOG.debug(\"deleteCgroup: \" + path);\n+\n+    if (! new File(path).delete()) {\n+      LOG.warn(\"Unable to delete cgroup at: \" + path);\n+    }\n+  }\t\n\\ No newline at end of file\n",
      "actualSource": "  private void deleteCgroup(String controller, String groupName) {\n    String path \u003d pathForCgroup(controller, groupName);\n\n    LOG.debug(\"deleteCgroup: \" + path);\n\n    if (! new File(path).delete()) {\n      LOG.warn(\"Unable to delete cgroup at: \" + path);\n    }\n  }\t",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java"
    }
  }
}