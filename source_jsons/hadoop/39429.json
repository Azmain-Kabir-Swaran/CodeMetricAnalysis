{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PreemptableQueue.java",
  "functionName": "addKillableContainer",
  "functionId": "addKillableContainer___container-KillableContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/preemption/PreemptableQueue.java",
  "functionStartLine": 48,
  "functionEndLine": 64,
  "numCommitsSeen": 4,
  "timeTaken": 1937,
  "changeHistory": [
    "ae14e5d07f1b6702a5160637438028bb03d9387e"
  ],
  "changeHistoryShort": {
    "ae14e5d07f1b6702a5160637438028bb03d9387e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ae14e5d07f1b6702a5160637438028bb03d9387e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4108. CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n\n(cherry picked from commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913)\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,17 @@\n+  void addKillableContainer(KillableContainer container) {\n+    String partition \u003d container.getNodePartition();\n+    if (!totalKillableResources.containsKey(partition)) {\n+      totalKillableResources.put(partition, Resources.createResource(0));\n+      killableContainers.put(partition,\n+          new ConcurrentSkipListMap\u003cContainerId, RMContainer\u003e());\n+    }\n+\n+    RMContainer c \u003d container.getRMContainer();\n+    Resources.addTo(totalKillableResources.get(partition),\n+        c.getAllocatedResource());\n+    killableContainers.get(partition).put(c.getContainerId(), c);\n+\n+    if (null !\u003d parent) {\n+      parent.addKillableContainer(container);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void addKillableContainer(KillableContainer container) {\n    String partition \u003d container.getNodePartition();\n    if (!totalKillableResources.containsKey(partition)) {\n      totalKillableResources.put(partition, Resources.createResource(0));\n      killableContainers.put(partition,\n          new ConcurrentSkipListMap\u003cContainerId, RMContainer\u003e());\n    }\n\n    RMContainer c \u003d container.getRMContainer();\n    Resources.addTo(totalKillableResources.get(partition),\n        c.getAllocatedResource());\n    killableContainers.get(partition).put(c.getContainerId(), c);\n\n    if (null !\u003d parent) {\n      parent.addKillableContainer(container);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/preemption/PreemptableQueue.java"
    }
  }
}