{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StripedBlockChecksumReconstructor.java",
  "functionName": "reconstructTargets",
  "functionId": "reconstructTargets___toReconstructLen-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedBlockChecksumReconstructor.java",
  "functionStartLine": 186,
  "functionEndLine": 197,
  "numCommitsSeen": 12,
  "timeTaken": 2747,
  "changeHistory": [
    "31ebccc96238136560f4210bdf6766fe18e0650c",
    "b5af9be72c72734d668f817c99d889031922a951",
    "d749cf65e1ab0e0daf5be86931507183f189e855",
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f"
  ],
  "changeHistoryShort": {
    "31ebccc96238136560f4210bdf6766fe18e0650c": "Yexceptionschange",
    "b5af9be72c72734d668f817c99d889031922a951": "Ybodychange",
    "d749cf65e1ab0e0daf5be86931507183f189e855": "Ymultichange(Ymovefromfile,Ybodychange)",
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31ebccc96238136560f4210bdf6766fe18e0650c": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-12613. Native EC coder should implement release() as idempotent function. (Lei (Eddy) Xu)\n",
      "commitDate": "16/10/17 7:44 PM",
      "commitName": "31ebccc96238136560f4210bdf6766fe18e0650c",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "28/03/17 11:11 PM",
      "commitNameOld": "84d787b9d51196010495d51dc5ebf66c01c340ab",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 201.86,
      "commitsBetweenForRepo": 1355,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n-  private void reconstructTargets(int toReconstructLen) {\n+  private void reconstructTargets(int toReconstructLen) throws IOException {\n     ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n \n     ByteBuffer[] outputs \u003d new ByteBuffer[1];\n     targetBuffer.limit(toReconstructLen);\n     outputs[0] \u003d targetBuffer;\n     int[] tarIndices \u003d new int[targetIndices.length];\n     for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n       tarIndices[i] \u003d targetIndices[i];\n     }\n     getDecoder().decode(inputs, tarIndices, outputs);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void reconstructTargets(int toReconstructLen) throws IOException {\n    ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n\n    ByteBuffer[] outputs \u003d new ByteBuffer[1];\n    targetBuffer.limit(toReconstructLen);\n    outputs[0] \u003d targetBuffer;\n    int[] tarIndices \u003d new int[targetIndices.length];\n    for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n      tarIndices[i] \u003d targetIndices[i];\n    }\n    getDecoder().decode(inputs, tarIndices, outputs);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedBlockChecksumReconstructor.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    },
    "b5af9be72c72734d668f817c99d889031922a951": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8668. Erasure Coding: revisit buffer used for encoding and decoding. Contributed by Sammi Chen\n",
      "commitDate": "12/08/16 10:52 PM",
      "commitName": "b5af9be72c72734d668f817c99d889031922a951",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "24/06/16 2:39 AM",
      "commitNameOld": "e6cb07520f935efde3e881de8f84ee7f6e0a746f",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 49.84,
      "commitsBetweenForRepo": 424,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,12 @@\n   private void reconstructTargets(int toReconstructLen) {\n-    initDecoderIfNecessary();\n-\n     ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n \n     ByteBuffer[] outputs \u003d new ByteBuffer[1];\n     targetBuffer.limit(toReconstructLen);\n     outputs[0] \u003d targetBuffer;\n     int[] tarIndices \u003d new int[targetIndices.length];\n     for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n       tarIndices[i] \u003d targetIndices[i];\n     }\n     getDecoder().decode(inputs, tarIndices, outputs);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void reconstructTargets(int toReconstructLen) {\n    ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n\n    ByteBuffer[] outputs \u003d new ByteBuffer[1];\n    targetBuffer.limit(toReconstructLen);\n    outputs[0] \u003d targetBuffer;\n    int[] tarIndices \u003d new int[targetIndices.length];\n    for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n      tarIndices[i] \u003d targetIndices[i];\n    }\n    getDecoder().decode(inputs, tarIndices, outputs);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedBlockChecksumReconstructor.java",
      "extendedDetails": {}
    },
    "d749cf65e1ab0e0daf5be86931507183f189e855": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-9833. Erasure coding: recomputing block checksum on the fly by reconstructing the missed/corrupt block data. Contributed by Rakesh R.\n",
      "commitDate": "01/06/16 9:56 PM",
      "commitName": "d749cf65e1ab0e0daf5be86931507183f189e855",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-9833. Erasure coding: recomputing block checksum on the fly by reconstructing the missed/corrupt block data. Contributed by Rakesh R.\n",
          "commitDate": "01/06/16 9:56 PM",
          "commitName": "d749cf65e1ab0e0daf5be86931507183f189e855",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "31/05/16 5:54 PM",
          "commitNameOld": "8ceb06e2392763726210f96bb1c176e6a9fe7b53",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 1.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n   private void reconstructTargets(int toReconstructLen) {\n     initDecoderIfNecessary();\n \n-    ByteBuffer[] inputs \u003d stripedReader.getInputBuffers(toReconstructLen);\n+    ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n \n-    int[] erasedIndices \u003d stripedWriter.getRealTargetIndices();\n-    ByteBuffer[] outputs \u003d stripedWriter.getRealTargetBuffers(toReconstructLen);\n-\n-    decoder.decode(inputs, erasedIndices, outputs);\n-\n-    stripedWriter.updateRealTargetBuffers(toReconstructLen);\n+    ByteBuffer[] outputs \u003d new ByteBuffer[1];\n+    targetBuffer.limit(toReconstructLen);\n+    outputs[0] \u003d targetBuffer;\n+    int[] tarIndices \u003d new int[targetIndices.length];\n+    for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n+      tarIndices[i] \u003d targetIndices[i];\n+    }\n+    getDecoder().decode(inputs, tarIndices, outputs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void reconstructTargets(int toReconstructLen) {\n    initDecoderIfNecessary();\n\n    ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n\n    ByteBuffer[] outputs \u003d new ByteBuffer[1];\n    targetBuffer.limit(toReconstructLen);\n    outputs[0] \u003d targetBuffer;\n    int[] tarIndices \u003d new int[targetIndices.length];\n    for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n      tarIndices[i] \u003d targetIndices[i];\n    }\n    getDecoder().decode(inputs, tarIndices, outputs);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedBlockChecksumReconstructor.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReconstructor.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedBlockChecksumReconstructor.java",
            "oldMethodName": "reconstructTargets",
            "newMethodName": "reconstructTargets"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9833. Erasure coding: recomputing block checksum on the fly by reconstructing the missed/corrupt block data. Contributed by Rakesh R.\n",
          "commitDate": "01/06/16 9:56 PM",
          "commitName": "d749cf65e1ab0e0daf5be86931507183f189e855",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "31/05/16 5:54 PM",
          "commitNameOld": "8ceb06e2392763726210f96bb1c176e6a9fe7b53",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 1.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n   private void reconstructTargets(int toReconstructLen) {\n     initDecoderIfNecessary();\n \n-    ByteBuffer[] inputs \u003d stripedReader.getInputBuffers(toReconstructLen);\n+    ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n \n-    int[] erasedIndices \u003d stripedWriter.getRealTargetIndices();\n-    ByteBuffer[] outputs \u003d stripedWriter.getRealTargetBuffers(toReconstructLen);\n-\n-    decoder.decode(inputs, erasedIndices, outputs);\n-\n-    stripedWriter.updateRealTargetBuffers(toReconstructLen);\n+    ByteBuffer[] outputs \u003d new ByteBuffer[1];\n+    targetBuffer.limit(toReconstructLen);\n+    outputs[0] \u003d targetBuffer;\n+    int[] tarIndices \u003d new int[targetIndices.length];\n+    for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n+      tarIndices[i] \u003d targetIndices[i];\n+    }\n+    getDecoder().decode(inputs, tarIndices, outputs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void reconstructTargets(int toReconstructLen) {\n    initDecoderIfNecessary();\n\n    ByteBuffer[] inputs \u003d getStripedReader().getInputBuffers(toReconstructLen);\n\n    ByteBuffer[] outputs \u003d new ByteBuffer[1];\n    targetBuffer.limit(toReconstructLen);\n    outputs[0] \u003d targetBuffer;\n    int[] tarIndices \u003d new int[targetIndices.length];\n    for (int i \u003d 0; i \u003c targetIndices.length; i++) {\n      tarIndices[i] \u003d targetIndices[i];\n    }\n    getDecoder().decode(inputs, tarIndices, outputs);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedBlockChecksumReconstructor.java",
          "extendedDetails": {}
        }
      ]
    },
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9719. Refactoring ErasureCodingWorker into smaller reusable constructs. Contributed by Kai Zheng.\n",
      "commitDate": "06/04/16 10:50 PM",
      "commitName": "3c18a53cbd2efabb2ad108d63a0b0b558424115f",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,12 @@\n+  private void reconstructTargets(int toReconstructLen) {\n+    initDecoderIfNecessary();\n+\n+    ByteBuffer[] inputs \u003d stripedReader.getInputBuffers(toReconstructLen);\n+\n+    int[] erasedIndices \u003d stripedWriter.getRealTargetIndices();\n+    ByteBuffer[] outputs \u003d stripedWriter.getRealTargetBuffers(toReconstructLen);\n+\n+    decoder.decode(inputs, erasedIndices, outputs);\n+\n+    stripedWriter.updateRealTargetBuffers(toReconstructLen);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void reconstructTargets(int toReconstructLen) {\n    initDecoderIfNecessary();\n\n    ByteBuffer[] inputs \u003d stripedReader.getInputBuffers(toReconstructLen);\n\n    int[] erasedIndices \u003d stripedWriter.getRealTargetIndices();\n    ByteBuffer[] outputs \u003d stripedWriter.getRealTargetBuffers(toReconstructLen);\n\n    decoder.decode(inputs, erasedIndices, outputs);\n\n    stripedWriter.updateRealTargetBuffers(toReconstructLen);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReconstructor.java"
    }
  }
}