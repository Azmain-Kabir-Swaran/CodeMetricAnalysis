{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationHistoryManagerOnTimelineStore.java",
  "functionName": "getApplicationAttempt",
  "functionId": "getApplicationAttempt___appAttemptId-ApplicationAttemptId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
  "functionStartLine": 164,
  "functionEndLine": 167,
  "numCommitsSeen": 42,
  "timeTaken": 2083,
  "changeHistory": [
    "455b3acf0e82b214e06bd7b538968252945cd3c4",
    "90a0c03f0a696d32e871a5da4560828edea8cfa9",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "455b3acf0e82b214e06bd7b538968252945cd3c4": "Ybodychange",
    "90a0c03f0a696d32e871a5da4560828edea8cfa9": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "455b3acf0e82b214e06bd7b538968252945cd3c4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3701. Isolating the error of generating a single app report when\ngetting all apps from generic history service. Contributed by Zhijie\nShen\n",
      "commitDate": "22/05/15 2:34 PM",
      "commitName": "455b3acf0e82b214e06bd7b538968252945cd3c4",
      "commitAuthor": "Xuan",
      "commitDateOld": "07/04/15 8:22 AM",
      "commitNameOld": "19a4feaf6fcf42ebbfe98b8a7153ade96d37fb14",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 45.26,
      "commitsBetweenForRepo": 486,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,4 @@\n   public ApplicationAttemptReport getApplicationAttempt(\n       ApplicationAttemptId appAttemptId) throws YarnException, IOException {\n-    ApplicationReportExt app \u003d getApplication(\n-        appAttemptId.getApplicationId(), ApplicationReportField.USER_AND_ACLS);\n-    checkAccess(app);\n-    TimelineEntity entity \u003d timelineDataManager.getEntity(\n-        AppAttemptMetricsConstants.ENTITY_TYPE,\n-        appAttemptId.toString(), EnumSet.allOf(Field.class),\n-        UserGroupInformation.getLoginUser());\n-    if (entity \u003d\u003d null) {\n-      throw new ApplicationAttemptNotFoundException(\n-          \"The entity for application attempt \" + appAttemptId +\n-          \" doesn\u0027t exist in the timeline store\");\n-    } else {\n-      return convertToApplicationAttemptReport(entity);\n-    }\n+    return getApplicationAttempt(appAttemptId, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId) throws YarnException, IOException {\n    return getApplicationAttempt(appAttemptId, true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
      "extendedDetails": {}
    },
    "90a0c03f0a696d32e871a5da4560828edea8cfa9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1250. Generic history service should support application-acls. (Contributed by Zhijie Shen)\n",
      "commitDate": "16/09/14 6:20 PM",
      "commitName": "90a0c03f0a696d32e871a5da4560828edea8cfa9",
      "commitAuthor": "junping_du",
      "commitDateOld": "11/09/14 7:04 PM",
      "commitNameOld": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthorOld": "junping_du",
      "daysBetweenCommits": 4.97,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public ApplicationAttemptReport getApplicationAttempt(\n       ApplicationAttemptId appAttemptId) throws YarnException, IOException {\n+    ApplicationReportExt app \u003d getApplication(\n+        appAttemptId.getApplicationId(), ApplicationReportField.USER_AND_ACLS);\n+    checkAccess(app);\n     TimelineEntity entity \u003d timelineDataManager.getEntity(\n         AppAttemptMetricsConstants.ENTITY_TYPE,\n         appAttemptId.toString(), EnumSet.allOf(Field.class),\n         UserGroupInformation.getLoginUser());\n     if (entity \u003d\u003d null) {\n-      // Will throw ApplicationNotFoundException first\n-      getApplication(appAttemptId.getApplicationId(), ApplicationReportField.NONE);\n       throw new ApplicationAttemptNotFoundException(\n           \"The entity for application attempt \" + appAttemptId +\n           \" doesn\u0027t exist in the timeline store\");\n     } else {\n       return convertToApplicationAttemptReport(entity);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId) throws YarnException, IOException {\n    ApplicationReportExt app \u003d getApplication(\n        appAttemptId.getApplicationId(), ApplicationReportField.USER_AND_ACLS);\n    checkAccess(app);\n    TimelineEntity entity \u003d timelineDataManager.getEntity(\n        AppAttemptMetricsConstants.ENTITY_TYPE,\n        appAttemptId.toString(), EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    if (entity \u003d\u003d null) {\n      throw new ApplicationAttemptNotFoundException(\n          \"The entity for application attempt \" + appAttemptId +\n          \" doesn\u0027t exist in the timeline store\");\n    } else {\n      return convertToApplicationAttemptReport(entity);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,16 @@\n+  public ApplicationAttemptReport getApplicationAttempt(\n+      ApplicationAttemptId appAttemptId) throws YarnException, IOException {\n+    TimelineEntity entity \u003d timelineDataManager.getEntity(\n+        AppAttemptMetricsConstants.ENTITY_TYPE,\n+        appAttemptId.toString(), EnumSet.allOf(Field.class),\n+        UserGroupInformation.getLoginUser());\n+    if (entity \u003d\u003d null) {\n+      // Will throw ApplicationNotFoundException first\n+      getApplication(appAttemptId.getApplicationId(), ApplicationReportField.NONE);\n+      throw new ApplicationAttemptNotFoundException(\n+          \"The entity for application attempt \" + appAttemptId +\n+          \" doesn\u0027t exist in the timeline store\");\n+    } else {\n+      return convertToApplicationAttemptReport(entity);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport getApplicationAttempt(\n      ApplicationAttemptId appAttemptId) throws YarnException, IOException {\n    TimelineEntity entity \u003d timelineDataManager.getEntity(\n        AppAttemptMetricsConstants.ENTITY_TYPE,\n        appAttemptId.toString(), EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    if (entity \u003d\u003d null) {\n      // Will throw ApplicationNotFoundException first\n      getApplication(appAttemptId.getApplicationId(), ApplicationReportField.NONE);\n      throw new ApplicationAttemptNotFoundException(\n          \"The entity for application attempt \" + appAttemptId +\n          \" doesn\u0027t exist in the timeline store\");\n    } else {\n      return convertToApplicationAttemptReport(entity);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java"
    }
  }
}