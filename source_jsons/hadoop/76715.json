{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RSRawDecoder.java",
  "functionName": "processErasures",
  "functionId": "processErasures___erasedIndexes-int[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java",
  "functionStartLine": 117,
  "functionEndLine": 140,
  "numCommitsSeen": 12,
  "timeTaken": 1953,
  "changeHistory": [
    "77202fa1035a54496d11d07472fbc399148ff630",
    "19e8f076919932b17f24ec4090df1926677651e7",
    "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e"
  ],
  "changeHistoryShort": {
    "77202fa1035a54496d11d07472fbc399148ff630": "Ybodychange",
    "19e8f076919932b17f24ec4090df1926677651e7": "Ymultichange(Yfilerename,Ybodychange)",
    "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77202fa1035a54496d11d07472fbc399148ff630": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
      "commitDate": "26/05/16 10:23 PM",
      "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "14/03/16 4:45 PM",
      "commitNameOld": "19e8f076919932b17f24ec4090df1926677651e7",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 73.23,
      "commitsBetweenForRepo": 460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void processErasures(int[] erasedIndexes) {\n     this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n     this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n     this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n \n     this.erasureFlags \u003d new boolean[getNumAllUnits()];\n     this.numErasedDataUnits \u003d 0;\n \n     for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n       int index \u003d erasedIndexes[i];\n       erasureFlags[index] \u003d true;\n       if (index \u003c getNumDataUnits()) {\n         numErasedDataUnits++;\n       }\n     }\n \n     generateDecodeMatrix(erasedIndexes);\n \n     RSUtil.initTables(getNumDataUnits(), erasedIndexes.length,\n         decodeMatrix, 0, gfTables);\n-    if (isAllowingVerboseDump()) {\n+    if (allowVerboseDump()) {\n       System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processErasures(int[] erasedIndexes) {\n    this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n\n    this.erasureFlags \u003d new boolean[getNumAllUnits()];\n    this.numErasedDataUnits \u003d 0;\n\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      int index \u003d erasedIndexes[i];\n      erasureFlags[index] \u003d true;\n      if (index \u003c getNumDataUnits()) {\n        numErasedDataUnits++;\n      }\n    }\n\n    generateDecodeMatrix(erasedIndexes);\n\n    RSUtil.initTables(getNumDataUnits(), erasedIndexes.length,\n        decodeMatrix, 0, gfTables);\n    if (allowVerboseDump()) {\n      System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java",
      "extendedDetails": {}
    },
    "19e8f076919932b17f24ec4090df1926677651e7": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HADOOP-12826. Rename the new Java coder and make it default. Contributed by Rui Li.\n",
      "commitDate": "14/03/16 4:45 PM",
      "commitName": "19e8f076919932b17f24ec4090df1926677651e7",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HADOOP-12826. Rename the new Java coder and make it default. Contributed by Rui Li.\n",
          "commitDate": "14/03/16 4:45 PM",
          "commitName": "19e8f076919932b17f24ec4090df1926677651e7",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "14/03/16 3:48 PM",
          "commitNameOld": "1898810cda83e6d273a2963b56ed499c0fb91118",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n   private void processErasures(int[] erasedIndexes) {\n     this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n     this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n     this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n \n     this.erasureFlags \u003d new boolean[getNumAllUnits()];\n     this.numErasedDataUnits \u003d 0;\n \n     for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n       int index \u003d erasedIndexes[i];\n       erasureFlags[index] \u003d true;\n       if (index \u003c getNumDataUnits()) {\n         numErasedDataUnits++;\n       }\n     }\n \n     generateDecodeMatrix(erasedIndexes);\n \n-    RSUtil2.initTables(getNumDataUnits(), erasedIndexes.length,\n+    RSUtil.initTables(getNumDataUnits(), erasedIndexes.length,\n         decodeMatrix, 0, gfTables);\n     if (isAllowingVerboseDump()) {\n       System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void processErasures(int[] erasedIndexes) {\n    this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n\n    this.erasureFlags \u003d new boolean[getNumAllUnits()];\n    this.numErasedDataUnits \u003d 0;\n\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      int index \u003d erasedIndexes[i];\n      erasureFlags[index] \u003d true;\n      if (index \u003c getNumDataUnits()) {\n        numErasedDataUnits++;\n      }\n    }\n\n    generateDecodeMatrix(erasedIndexes);\n\n    RSUtil.initTables(getNumDataUnits(), erasedIndexes.length,\n        decodeMatrix, 0, gfTables);\n    if (isAllowingVerboseDump()) {\n      System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder2.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12826. Rename the new Java coder and make it default. Contributed by Rui Li.\n",
          "commitDate": "14/03/16 4:45 PM",
          "commitName": "19e8f076919932b17f24ec4090df1926677651e7",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "14/03/16 3:48 PM",
          "commitNameOld": "1898810cda83e6d273a2963b56ed499c0fb91118",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n   private void processErasures(int[] erasedIndexes) {\n     this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n     this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n     this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n \n     this.erasureFlags \u003d new boolean[getNumAllUnits()];\n     this.numErasedDataUnits \u003d 0;\n \n     for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n       int index \u003d erasedIndexes[i];\n       erasureFlags[index] \u003d true;\n       if (index \u003c getNumDataUnits()) {\n         numErasedDataUnits++;\n       }\n     }\n \n     generateDecodeMatrix(erasedIndexes);\n \n-    RSUtil2.initTables(getNumDataUnits(), erasedIndexes.length,\n+    RSUtil.initTables(getNumDataUnits(), erasedIndexes.length,\n         decodeMatrix, 0, gfTables);\n     if (isAllowingVerboseDump()) {\n       System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void processErasures(int[] erasedIndexes) {\n    this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n\n    this.erasureFlags \u003d new boolean[getNumAllUnits()];\n    this.numErasedDataUnits \u003d 0;\n\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      int index \u003d erasedIndexes[i];\n      erasureFlags[index] \u003d true;\n      if (index \u003c getNumDataUnits()) {\n        numErasedDataUnits++;\n      }\n    }\n\n    generateDecodeMatrix(erasedIndexes);\n\n    RSUtil.initTables(getNumDataUnits(), erasedIndexes.length,\n        decodeMatrix, 0, gfTables);\n    if (isAllowingVerboseDump()) {\n      System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java",
          "extendedDetails": {}
        }
      ]
    },
    "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12041. Implement another Reed-Solomon coder in pure Java. Contributed by Kai Zheng.\n\nChange-Id: I35ff2e498d4f988c9a064f74374f7c7258b7a6b7\n",
      "commitDate": "03/02/16 3:05 PM",
      "commitName": "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e",
      "commitAuthor": "zhezhang",
      "diff": "@@ -0,0 +1,24 @@\n+  private void processErasures(int[] erasedIndexes) {\n+    this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n+    this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n+    this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n+\n+    this.erasureFlags \u003d new boolean[getNumAllUnits()];\n+    this.numErasedDataUnits \u003d 0;\n+\n+    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n+      int index \u003d erasedIndexes[i];\n+      erasureFlags[index] \u003d true;\n+      if (index \u003c getNumDataUnits()) {\n+        numErasedDataUnits++;\n+      }\n+    }\n+\n+    generateDecodeMatrix(erasedIndexes);\n+\n+    RSUtil2.initTables(getNumDataUnits(), erasedIndexes.length,\n+        decodeMatrix, 0, gfTables);\n+    if (isAllowingVerboseDump()) {\n+      System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void processErasures(int[] erasedIndexes) {\n    this.decodeMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.invertMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n    this.gfTables \u003d new byte[getNumAllUnits() * getNumDataUnits() * 32];\n\n    this.erasureFlags \u003d new boolean[getNumAllUnits()];\n    this.numErasedDataUnits \u003d 0;\n\n    for (int i \u003d 0; i \u003c erasedIndexes.length; i++) {\n      int index \u003d erasedIndexes[i];\n      erasureFlags[index] \u003d true;\n      if (index \u003c getNumDataUnits()) {\n        numErasedDataUnits++;\n      }\n    }\n\n    generateDecodeMatrix(erasedIndexes);\n\n    RSUtil2.initTables(getNumDataUnits(), erasedIndexes.length,\n        decodeMatrix, 0, gfTables);\n    if (isAllowingVerboseDump()) {\n      System.out.println(DumpUtil.bytesToHex(gfTables, -1));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder2.java"
    }
  }
}