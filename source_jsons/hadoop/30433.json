{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MemoryTimelineStore.java",
  "functionName": "valueSetIterator",
  "functionId": "valueSetIterator___minV-V",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java",
  "functionStartLine": 71,
  "functionEndLine": 83,
  "numCommitsSeen": 9,
  "timeTaken": 2434,
  "changeHistory": [
    "71e0b0d8005ea1952dc7e582db15c2ac09df7c91",
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99"
  ],
  "changeHistoryShort": {
    "71e0b0d8005ea1952dc7e582db15c2ac09df7c91": "Ymultichange(Yreturntypechange,Ybodychange)",
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "71e0b0d8005ea1952dc7e582db15c2ac09df7c91": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-9040.  Fixed memory leak in LevelDBCacheTimelineStore and DBIterator.\n            Contributed by Tarun Parimi\n",
      "commitDate": "17/12/18 9:04 AM",
      "commitName": "71e0b0d8005ea1952dc7e582db15c2ac09df7c91",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-9040.  Fixed memory leak in LevelDBCacheTimelineStore and DBIterator.\n            Contributed by Tarun Parimi\n",
          "commitDate": "17/12/18 9:04 AM",
          "commitName": "71e0b0d8005ea1952dc7e582db15c2ac09df7c91",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/01/16 2:24 PM",
          "commitNameOld": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 1053.78,
          "commitsBetweenForRepo": 7948,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    public Iterator\u003cV\u003e valueSetIterator(V minV) {\n+    public CloseableIterator\u003cV\u003e valueSetIterator(V minV) {\n       if (minV instanceof Comparable) {\n         TreeSet\u003cV\u003e tempTreeSet \u003d new TreeSet\u003c\u003e();\n         for (V value : internalMap.values()) {\n           if (((Comparable) value).compareTo(minV) \u003e\u003d 0) {\n             tempTreeSet.add(value);\n           }\n         }\n-        return tempTreeSet.iterator();\n+        return wrapClosableIterator(tempTreeSet.iterator());\n       } else {\n         return valueSetIterator();\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public CloseableIterator\u003cV\u003e valueSetIterator(V minV) {\n      if (minV instanceof Comparable) {\n        TreeSet\u003cV\u003e tempTreeSet \u003d new TreeSet\u003c\u003e();\n        for (V value : internalMap.values()) {\n          if (((Comparable) value).compareTo(minV) \u003e\u003d 0) {\n            tempTreeSet.add(value);\n          }\n        }\n        return wrapClosableIterator(tempTreeSet.iterator());\n      } else {\n        return valueSetIterator();\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java",
          "extendedDetails": {
            "oldValue": "Iterator\u003cV\u003e",
            "newValue": "CloseableIterator\u003cV\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9040.  Fixed memory leak in LevelDBCacheTimelineStore and DBIterator.\n            Contributed by Tarun Parimi\n",
          "commitDate": "17/12/18 9:04 AM",
          "commitName": "71e0b0d8005ea1952dc7e582db15c2ac09df7c91",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/01/16 2:24 PM",
          "commitNameOld": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 1053.78,
          "commitsBetweenForRepo": 7948,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    public Iterator\u003cV\u003e valueSetIterator(V minV) {\n+    public CloseableIterator\u003cV\u003e valueSetIterator(V minV) {\n       if (minV instanceof Comparable) {\n         TreeSet\u003cV\u003e tempTreeSet \u003d new TreeSet\u003c\u003e();\n         for (V value : internalMap.values()) {\n           if (((Comparable) value).compareTo(minV) \u003e\u003d 0) {\n             tempTreeSet.add(value);\n           }\n         }\n-        return tempTreeSet.iterator();\n+        return wrapClosableIterator(tempTreeSet.iterator());\n       } else {\n         return valueSetIterator();\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public CloseableIterator\u003cV\u003e valueSetIterator(V minV) {\n      if (minV instanceof Comparable) {\n        TreeSet\u003cV\u003e tempTreeSet \u003d new TreeSet\u003c\u003e();\n        for (V value : internalMap.values()) {\n          if (((Comparable) value).compareTo(minV) \u003e\u003d 0) {\n            tempTreeSet.add(value);\n          }\n        }\n        return wrapClosableIterator(tempTreeSet.iterator());\n      } else {\n        return valueSetIterator();\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
      "commitDate": "28/01/16 2:24 PM",
      "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,13 @@\n+    public Iterator\u003cV\u003e valueSetIterator(V minV) {\n+      if (minV instanceof Comparable) {\n+        TreeSet\u003cV\u003e tempTreeSet \u003d new TreeSet\u003c\u003e();\n+        for (V value : internalMap.values()) {\n+          if (((Comparable) value).compareTo(minV) \u003e\u003d 0) {\n+            tempTreeSet.add(value);\n+          }\n+        }\n+        return tempTreeSet.iterator();\n+      } else {\n+        return valueSetIterator();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public Iterator\u003cV\u003e valueSetIterator(V minV) {\n      if (minV instanceof Comparable) {\n        TreeSet\u003cV\u003e tempTreeSet \u003d new TreeSet\u003c\u003e();\n        for (V value : internalMap.values()) {\n          if (((Comparable) value).compareTo(minV) \u003e\u003d 0) {\n            tempTreeSet.add(value);\n          }\n        }\n        return tempTreeSet.iterator();\n      } else {\n        return valueSetIterator();\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java"
    }
  }
}