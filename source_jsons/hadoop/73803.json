{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "abortResponse",
  "functionId": "abortResponse___t-Throwable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 882,
  "functionEndLine": 887,
  "numCommitsSeen": 162,
  "timeTaken": 5298,
  "changeHistory": [
    "76cd81f4b656f0d40a4b2122e15f04ea53d8020b",
    "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
    "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
    "2d8227605fe22c1c05f31729edc8939013763c05",
    "476a251e5efe5e5850671f924e622b587c262653"
  ],
  "changeHistoryShort": {
    "76cd81f4b656f0d40a4b2122e15f04ea53d8020b": "Ymultichange(Ymodifierchange,Ybodychange)",
    "81485dbfc1ffb8daa609be8eb31094cc28646dd3": "Ymultichange(Ymodifierchange,Ybodychange)",
    "d288a0ba8364d81aacda9f4a21022eecb6dc4e22": "Ymultichange(Ymodifierchange,Ybodychange)",
    "2d8227605fe22c1c05f31729edc8939013763c05": "Ybodychange",
    "476a251e5efe5e5850671f924e622b587c262653": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76cd81f4b656f0d40a4b2122e15f04ea53d8020b": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
      "commitDate": "01/09/16 1:44 PM",
      "commitName": "76cd81f4b656f0d40a4b2122e15f04ea53d8020b",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
          "commitDate": "01/09/16 1:44 PM",
          "commitName": "76cd81f4b656f0d40a4b2122e15f04ea53d8020b",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "25/08/16 2:04 PM",
          "commitNameOld": "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 6.99,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    public void abortResponse(Throwable t) throws IOException {\n+    public final void abortResponse(Throwable t) throws IOException {\n       // don\u0027t send response if the call was already sent or aborted.\n       if (responseWaitCount.getAndSet(-1) \u003e 0) {\n-        connection.abortResponse(this, t);\n+        doResponse(t);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        doResponse(t);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, final]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
          "commitDate": "01/09/16 1:44 PM",
          "commitName": "76cd81f4b656f0d40a4b2122e15f04ea53d8020b",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "25/08/16 2:04 PM",
          "commitNameOld": "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 6.99,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    public void abortResponse(Throwable t) throws IOException {\n+    public final void abortResponse(Throwable t) throws IOException {\n       // don\u0027t send response if the call was already sent or aborted.\n       if (responseWaitCount.getAndSet(-1) \u003e 0) {\n-        connection.abortResponse(this, t);\n+        doResponse(t);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        doResponse(t);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "81485dbfc1ffb8daa609be8eb31094cc28646dd3": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert \"HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\"\n\nThis reverts commit d288a0ba8364d81aacda9f4a21022eecb6dc4e22.\n",
      "commitDate": "25/08/16 2:04 PM",
      "commitName": "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert \"HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\"\n\nThis reverts commit d288a0ba8364d81aacda9f4a21022eecb6dc4e22.\n",
          "commitDate": "25/08/16 2:04 PM",
          "commitName": "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "25/08/16 9:44 AM",
          "commitNameOld": "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.18,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    public final void abortResponse(Throwable t) throws IOException {\n+    public void abortResponse(Throwable t) throws IOException {\n       // don\u0027t send response if the call was already sent or aborted.\n       if (responseWaitCount.getAndSet(-1) \u003e 0) {\n-        doResponse(t);\n+        connection.abortResponse(this, t);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        connection.abortResponse(this, t);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[public, final]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\"\n\nThis reverts commit d288a0ba8364d81aacda9f4a21022eecb6dc4e22.\n",
          "commitDate": "25/08/16 2:04 PM",
          "commitName": "81485dbfc1ffb8daa609be8eb31094cc28646dd3",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "25/08/16 9:44 AM",
          "commitNameOld": "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.18,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    public final void abortResponse(Throwable t) throws IOException {\n+    public void abortResponse(Throwable t) throws IOException {\n       // don\u0027t send response if the call was already sent or aborted.\n       if (responseWaitCount.getAndSet(-1) \u003e 0) {\n-        doResponse(t);\n+        connection.abortResponse(this, t);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        connection.abortResponse(this, t);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "d288a0ba8364d81aacda9f4a21022eecb6dc4e22": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
      "commitDate": "25/08/16 9:44 AM",
      "commitName": "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
          "commitDate": "25/08/16 9:44 AM",
          "commitName": "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "03/08/16 11:22 AM",
          "commitNameOld": "580a8334963709e728ed677c815fb7fef9bca70e",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 21.93,
          "commitsBetweenForRepo": 167,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    public void abortResponse(Throwable t) throws IOException {\n+    public final void abortResponse(Throwable t) throws IOException {\n       // don\u0027t send response if the call was already sent or aborted.\n       if (responseWaitCount.getAndSet(-1) \u003e 0) {\n-        connection.abortResponse(this, t);\n+        doResponse(t);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        doResponse(t);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, final]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13465. Design Server.Call to be extensible for unified call queue. Contributed by Daryn Sharp.\n",
          "commitDate": "25/08/16 9:44 AM",
          "commitName": "d288a0ba8364d81aacda9f4a21022eecb6dc4e22",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "03/08/16 11:22 AM",
          "commitNameOld": "580a8334963709e728ed677c815fb7fef9bca70e",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 21.93,
          "commitsBetweenForRepo": 167,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    public void abortResponse(Throwable t) throws IOException {\n+    public final void abortResponse(Throwable t) throws IOException {\n       // don\u0027t send response if the call was already sent or aborted.\n       if (responseWaitCount.getAndSet(-1) \u003e 0) {\n-        connection.abortResponse(this, t);\n+        doResponse(t);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        doResponse(t);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "2d8227605fe22c1c05f31729edc8939013763c05": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13426. More efficiently build IPC responses. Contributed by Daryn Sharp.\n",
      "commitDate": "03/08/16 7:31 AM",
      "commitName": "2d8227605fe22c1c05f31729edc8939013763c05",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "02/08/16 8:40 AM",
      "commitNameOld": "b3018e73ccae43484d9cb85eabae814eb7f050a6",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,6 @@\n     public void abortResponse(Throwable t) throws IOException {\n       // don\u0027t send response if the call was already sent or aborted.\n       if (responseWaitCount.getAndSet(-1) \u003e 0) {\n-        // clone the call to prevent a race with the other thread stomping\n-        // on the response while being sent.  the original call is\n-        // effectively discarded since the wait count won\u0027t hit zero\n-        Call call \u003d new Call(this);\n-        setupResponse(new ByteArrayOutputStream(), call,\n-            RpcStatusProto.FATAL, RpcErrorCodeProto.ERROR_RPC_SERVER,\n-            null, t.getClass().getName(), StringUtils.stringifyException(t));\n-        call.sendResponse();\n+        connection.abortResponse(this, t);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        connection.abortResponse(this, t);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "476a251e5efe5e5850671f924e622b587c262653": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12483. Maintain wrapped SASL ordering for postponed IPC responses. (Daryn Sharp via yliu)\n",
      "commitDate": "18/10/15 6:54 PM",
      "commitName": "476a251e5efe5e5850671f924e622b587c262653",
      "commitAuthor": "yliu",
      "diff": "@@ -0,0 +1,13 @@\n+    public void abortResponse(Throwable t) throws IOException {\n+      // don\u0027t send response if the call was already sent or aborted.\n+      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n+        // clone the call to prevent a race with the other thread stomping\n+        // on the response while being sent.  the original call is\n+        // effectively discarded since the wait count won\u0027t hit zero\n+        Call call \u003d new Call(this);\n+        setupResponse(new ByteArrayOutputStream(), call,\n+            RpcStatusProto.FATAL, RpcErrorCodeProto.ERROR_RPC_SERVER,\n+            null, t.getClass().getName(), StringUtils.stringifyException(t));\n+        call.sendResponse();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void abortResponse(Throwable t) throws IOException {\n      // don\u0027t send response if the call was already sent or aborted.\n      if (responseWaitCount.getAndSet(-1) \u003e 0) {\n        // clone the call to prevent a race with the other thread stomping\n        // on the response while being sent.  the original call is\n        // effectively discarded since the wait count won\u0027t hit zero\n        Call call \u003d new Call(this);\n        setupResponse(new ByteArrayOutputStream(), call,\n            RpcStatusProto.FATAL, RpcErrorCodeProto.ERROR_RPC_SERVER,\n            null, t.getClass().getName(), StringUtils.stringifyException(t));\n        call.sendResponse();\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}