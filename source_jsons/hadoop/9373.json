{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "getEcTopologyVerifierResultForEnabledPolicies",
  "functionId": "getEcTopologyVerifierResultForEnabledPolicies",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 8683,
  "functionEndLine": 8693,
  "numCommitsSeen": 897,
  "timeTaken": 7776,
  "changeHistory": [
    "92c58901d767f4fea571274544a590608c911cb8",
    "951cdd7e4cbe68284620f6805f85c51301150c58"
  ],
  "changeHistoryShort": {
    "92c58901d767f4fea571274544a590608c911cb8": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
    "951cdd7e4cbe68284620f6805f85c51301150c58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "92c58901d767f4fea571274544a590608c911cb8": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
      "commitDate": "23/01/20 4:48 AM",
      "commitName": "92c58901d767f4fea571274544a590608c911cb8",
      "commitAuthor": "Ayush Saxena",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n-      final DistributedFileSystem dfs, final String policyName)\n-      throws IOException {\n-    final ErasureCodingPolicy policy \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyName);\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n+  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n+    int numOfDataNodes \u003d\n+        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n+    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n+        .getNumOfRacks();\n+    ErasureCodingPolicy[] enabledEcPolicies \u003d\n+        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n+    return ECTopologyVerifier\n+        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n+            Arrays.asList(enabledEcPolicies));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n    int numOfDataNodes \u003d\n        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n        .getNumOfRacks();\n    ErasureCodingPolicy[] enabledEcPolicies \u003d\n        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n    return ECTopologyVerifier\n        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n            Arrays.asList(enabledEcPolicies));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/ECAdmin.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "oldMethodName": "getECTopologyVerifierResultForPolicy",
            "newMethodName": "getEcTopologyVerifierResultForEnabledPolicies"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n-      final DistributedFileSystem dfs, final String policyName)\n-      throws IOException {\n-    final ErasureCodingPolicy policy \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyName);\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n+  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n+    int numOfDataNodes \u003d\n+        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n+    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n+        .getNumOfRacks();\n+    ErasureCodingPolicy[] enabledEcPolicies \u003d\n+        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n+    return ECTopologyVerifier\n+        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n+            Arrays.asList(enabledEcPolicies));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n    int numOfDataNodes \u003d\n        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n        .getNumOfRacks();\n    ErasureCodingPolicy[] enabledEcPolicies \u003d\n        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n    return ECTopologyVerifier\n        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n            Arrays.asList(enabledEcPolicies));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n-      final DistributedFileSystem dfs, final String policyName)\n-      throws IOException {\n-    final ErasureCodingPolicy policy \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyName);\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n+  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n+    int numOfDataNodes \u003d\n+        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n+    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n+        .getNumOfRacks();\n+    ErasureCodingPolicy[] enabledEcPolicies \u003d\n+        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n+    return ECTopologyVerifier\n+        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n+            Arrays.asList(enabledEcPolicies));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n    int numOfDataNodes \u003d\n        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n        .getNumOfRacks();\n    ErasureCodingPolicy[] enabledEcPolicies \u003d\n        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n    return ECTopologyVerifier\n        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n            Arrays.asList(enabledEcPolicies));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n-      final DistributedFileSystem dfs, final String policyName)\n-      throws IOException {\n-    final ErasureCodingPolicy policy \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyName);\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n+  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n+    int numOfDataNodes \u003d\n+        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n+    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n+        .getNumOfRacks();\n+    ErasureCodingPolicy[] enabledEcPolicies \u003d\n+        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n+    return ECTopologyVerifier\n+        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n+            Arrays.asList(enabledEcPolicies));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n    int numOfDataNodes \u003d\n        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n        .getNumOfRacks();\n    ErasureCodingPolicy[] enabledEcPolicies \u003d\n        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n    return ECTopologyVerifier\n        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n            Arrays.asList(enabledEcPolicies));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n-      final DistributedFileSystem dfs, final String policyName)\n-      throws IOException {\n-    final ErasureCodingPolicy policy \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyName);\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n+  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n+    int numOfDataNodes \u003d\n+        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n+    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n+        .getNumOfRacks();\n+    ErasureCodingPolicy[] enabledEcPolicies \u003d\n+        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n+    return ECTopologyVerifier\n+        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n+            Arrays.asList(enabledEcPolicies));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n    int numOfDataNodes \u003d\n        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n        .getNumOfRacks();\n    ErasureCodingPolicy[] enabledEcPolicies \u003d\n        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n    return ECTopologyVerifier\n        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n            Arrays.asList(enabledEcPolicies));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "getECTopologyVerifierResultForPolicy",
            "newValue": "getEcTopologyVerifierResultForEnabledPolicies"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n-      final DistributedFileSystem dfs, final String policyName)\n-      throws IOException {\n-    final ErasureCodingPolicy policy \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyName);\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n+  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n+    int numOfDataNodes \u003d\n+        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n+    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n+        .getNumOfRacks();\n+    ErasureCodingPolicy[] enabledEcPolicies \u003d\n+        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n+    return ECTopologyVerifier\n+        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n+            Arrays.asList(enabledEcPolicies));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ECTopologyVerifierResult getEcTopologyVerifierResultForEnabledPolicies() {\n    int numOfDataNodes \u003d\n        getBlockManager().getDatanodeManager().getNumOfDataNodes();\n    int numOfRacks \u003d getBlockManager().getDatanodeManager().getNetworkTopology()\n        .getNumOfRacks();\n    ErasureCodingPolicy[] enabledEcPolicies \u003d\n        getErasureCodingPolicyManager().getCopyOfEnabledPolicies();\n    return ECTopologyVerifier\n        .getECTopologyVerifierResult(numOfRacks, numOfDataNodes,\n            Arrays.asList(enabledEcPolicies));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[dfs-DistributedFileSystem(modifiers-final), policyName-String(modifiers-final)]",
            "newValue": "[]"
          }
        }
      ]
    },
    "951cdd7e4cbe68284620f6805f85c51301150c58": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14061. Check if the cluster topology supports the EC policy before setting, enabling or adding it. Contributed by Kitti Nanasi.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "23/01/19 2:40 PM",
      "commitName": "951cdd7e4cbe68284620f6805f85c51301150c58",
      "commitAuthor": "Kitti Nanasi",
      "diff": "@@ -0,0 +1,10 @@\n+  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n+      final DistributedFileSystem dfs, final String policyName)\n+      throws IOException {\n+    final ErasureCodingPolicy policy \u003d\n+        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n+            policyName);\n+    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n+        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n+    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ECTopologyVerifierResult getECTopologyVerifierResultForPolicy(\n      final DistributedFileSystem dfs, final String policyName)\n      throws IOException {\n    final ErasureCodingPolicy policy \u003d\n        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n            policyName);\n    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n    return ECTopologyVerifier.getECTopologyVerifierResult(report, policy);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/ECAdmin.java"
    }
  }
}