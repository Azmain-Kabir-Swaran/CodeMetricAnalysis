{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RetryInvocationHandler.java",
  "functionName": "log",
  "functionId": "log___method-Method(modifiers-final)__isFailover-boolean(modifiers-final)__failovers-int(modifiers-final)__delay-long(modifiers-final)__ex-Exception(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
  "functionStartLine": 391,
  "functionEndLine": 415,
  "numCommitsSeen": 39,
  "timeTaken": 2061,
  "changeHistory": [
    "eec52e158b7bc14b2d3d53512323ba05e15e09e3",
    "35f255b03b1bb5c94063ec1818af1d253ceee991",
    "5360da8bd9f720384860f411bee081aef13b4bd4",
    "83f2f78c118a7e52aba5104bd97b0acedc96be7b",
    "a9a8297cad4122961b34265c0a31d87134a4a028"
  ],
  "changeHistoryShort": {
    "eec52e158b7bc14b2d3d53512323ba05e15e09e3": "Ybodychange",
    "35f255b03b1bb5c94063ec1818af1d253ceee991": "Ybodychange",
    "5360da8bd9f720384860f411bee081aef13b4bd4": "Ybodychange",
    "83f2f78c118a7e52aba5104bd97b0acedc96be7b": "Ybodychange",
    "a9a8297cad4122961b34265c0a31d87134a4a028": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eec52e158b7bc14b2d3d53512323ba05e15e09e3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6145. Improve log message on fail over. Contributed by Jian He.\n",
      "commitDate": "08/02/17 2:11 AM",
      "commitName": "eec52e158b7bc14b2d3d53512323ba05e15e09e3",
      "commitAuthor": "Junping Du",
      "commitDateOld": "29/08/16 8:55 AM",
      "commitNameOld": "92d8f371553b88e5b3a9d3354e93f75d60d81368",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 162.76,
      "commitsBetweenForRepo": 1022,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private void log(final Method method, final boolean isFailover,\n       final int failovers, final long delay, final Exception ex) {\n     // log info if this has made some successful calls or\n     // this is not the first failover\n     final boolean info \u003d hasSuccessfulCall || failovers !\u003d 0\n         || asyncCallHandler.hasSuccessfulCall();\n     if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n       return;\n     }\n \n     final StringBuilder b \u003d new StringBuilder()\n-        .append(\"Exception while invoking \")\n+        .append(ex + \", while invoking \")\n         .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n     if (failovers \u003e 0) {\n       b.append(\" after \").append(failovers).append(\" failover attempts\");\n     }\n     b.append(isFailover? \". Trying to failover \": \". Retrying \");\n     b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n \n     if (info) {\n-      LOG.info(b.toString(), ex);\n+      LOG.info(b.toString());\n     } else {\n       LOG.debug(b.toString(), ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void log(final Method method, final boolean isFailover,\n      final int failovers, final long delay, final Exception ex) {\n    // log info if this has made some successful calls or\n    // this is not the first failover\n    final boolean info \u003d hasSuccessfulCall || failovers !\u003d 0\n        || asyncCallHandler.hasSuccessfulCall();\n    if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n      return;\n    }\n\n    final StringBuilder b \u003d new StringBuilder()\n        .append(ex + \", while invoking \")\n        .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n    if (failovers \u003e 0) {\n      b.append(\" after \").append(failovers).append(\" failover attempts\");\n    }\n    b.append(isFailover? \". Trying to failover \": \". Retrying \");\n    b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n\n    if (info) {\n      LOG.info(b.toString());\n    } else {\n      LOG.debug(b.toString(), ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
      "extendedDetails": {}
    },
    "35f255b03b1bb5c94063ec1818af1d253ceee991": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Revert \"HADOOP-13226 Support async call retry and failover.\"\"\n\nThis reverts commit 5360da8bd9f720384860f411bee081aef13b4bd4.\n",
      "commitDate": "06/06/16 1:31 AM",
      "commitName": "35f255b03b1bb5c94063ec1818af1d253ceee991",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "03/06/16 6:09 PM",
      "commitNameOld": "5360da8bd9f720384860f411bee081aef13b4bd4",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 2.31,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   private void log(final Method method, final boolean isFailover,\n       final int failovers, final long delay, final Exception ex) {\n     // log info if this has made some successful calls or\n     // this is not the first failover\n-    final boolean info \u003d hasMadeASuccessfulCall || failovers !\u003d 0;\n+    final boolean info \u003d hasSuccessfulCall || failovers !\u003d 0\n+        || asyncCallHandler.hasSuccessfulCall();\n     if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n       return;\n     }\n \n     final StringBuilder b \u003d new StringBuilder()\n         .append(\"Exception while invoking \")\n         .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n     if (failovers \u003e 0) {\n       b.append(\" after \").append(failovers).append(\" failover attempts\");\n     }\n     b.append(isFailover? \". Trying to failover \": \". Retrying \");\n     b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n \n     if (info) {\n       LOG.info(b.toString(), ex);\n     } else {\n       LOG.debug(b.toString(), ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void log(final Method method, final boolean isFailover,\n      final int failovers, final long delay, final Exception ex) {\n    // log info if this has made some successful calls or\n    // this is not the first failover\n    final boolean info \u003d hasSuccessfulCall || failovers !\u003d 0\n        || asyncCallHandler.hasSuccessfulCall();\n    if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n      return;\n    }\n\n    final StringBuilder b \u003d new StringBuilder()\n        .append(\"Exception while invoking \")\n        .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n    if (failovers \u003e 0) {\n      b.append(\" after \").append(failovers).append(\" failover attempts\");\n    }\n    b.append(isFailover? \". Trying to failover \": \". Retrying \");\n    b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n\n    if (info) {\n      LOG.info(b.toString(), ex);\n    } else {\n      LOG.debug(b.toString(), ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
      "extendedDetails": {}
    },
    "5360da8bd9f720384860f411bee081aef13b4bd4": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-13226 Support async call retry and failover.\"\n\nThis reverts commit 83f2f78c118a7e52aba5104bd97b0acedc96be7b.\n",
      "commitDate": "03/06/16 6:09 PM",
      "commitName": "5360da8bd9f720384860f411bee081aef13b4bd4",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "31/05/16 4:30 PM",
      "commitNameOld": "83f2f78c118a7e52aba5104bd97b0acedc96be7b",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 3.07,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n   private void log(final Method method, final boolean isFailover,\n       final int failovers, final long delay, final Exception ex) {\n     // log info if this has made some successful calls or\n     // this is not the first failover\n-    final boolean info \u003d hasSuccessfulCall || failovers !\u003d 0\n-        || asyncCallHandler.hasSuccessfulCall();\n+    final boolean info \u003d hasMadeASuccessfulCall || failovers !\u003d 0;\n     if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n       return;\n     }\n \n     final StringBuilder b \u003d new StringBuilder()\n         .append(\"Exception while invoking \")\n         .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n     if (failovers \u003e 0) {\n       b.append(\" after \").append(failovers).append(\" failover attempts\");\n     }\n     b.append(isFailover? \". Trying to failover \": \". Retrying \");\n     b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n \n     if (info) {\n       LOG.info(b.toString(), ex);\n     } else {\n       LOG.debug(b.toString(), ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void log(final Method method, final boolean isFailover,\n      final int failovers, final long delay, final Exception ex) {\n    // log info if this has made some successful calls or\n    // this is not the first failover\n    final boolean info \u003d hasMadeASuccessfulCall || failovers !\u003d 0;\n    if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n      return;\n    }\n\n    final StringBuilder b \u003d new StringBuilder()\n        .append(\"Exception while invoking \")\n        .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n    if (failovers \u003e 0) {\n      b.append(\" after \").append(failovers).append(\" failover attempts\");\n    }\n    b.append(isFailover? \". Trying to failover \": \". Retrying \");\n    b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n\n    if (info) {\n      LOG.info(b.toString(), ex);\n    } else {\n      LOG.debug(b.toString(), ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
      "extendedDetails": {}
    },
    "83f2f78c118a7e52aba5104bd97b0acedc96be7b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13226 Support async call retry and failover.\n",
      "commitDate": "31/05/16 4:30 PM",
      "commitName": "83f2f78c118a7e52aba5104bd97b0acedc96be7b",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "16/05/16 3:23 PM",
      "commitNameOld": "a9a8297cad4122961b34265c0a31d87134a4a028",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 15.05,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   private void log(final Method method, final boolean isFailover,\n       final int failovers, final long delay, final Exception ex) {\n     // log info if this has made some successful calls or\n     // this is not the first failover\n-    final boolean info \u003d hasMadeASuccessfulCall || failovers !\u003d 0;\n+    final boolean info \u003d hasSuccessfulCall || failovers !\u003d 0\n+        || asyncCallHandler.hasSuccessfulCall();\n     if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n       return;\n     }\n \n     final StringBuilder b \u003d new StringBuilder()\n         .append(\"Exception while invoking \")\n         .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n     if (failovers \u003e 0) {\n       b.append(\" after \").append(failovers).append(\" failover attempts\");\n     }\n     b.append(isFailover? \". Trying to failover \": \". Retrying \");\n     b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n \n     if (info) {\n       LOG.info(b.toString(), ex);\n     } else {\n       LOG.debug(b.toString(), ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void log(final Method method, final boolean isFailover,\n      final int failovers, final long delay, final Exception ex) {\n    // log info if this has made some successful calls or\n    // this is not the first failover\n    final boolean info \u003d hasSuccessfulCall || failovers !\u003d 0\n        || asyncCallHandler.hasSuccessfulCall();\n    if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n      return;\n    }\n\n    final StringBuilder b \u003d new StringBuilder()\n        .append(\"Exception while invoking \")\n        .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n    if (failovers \u003e 0) {\n      b.append(\" after \").append(failovers).append(\" failover attempts\");\n    }\n    b.append(isFailover? \". Trying to failover \": \". Retrying \");\n    b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n\n    if (info) {\n      LOG.info(b.toString(), ex);\n    } else {\n      LOG.debug(b.toString(), ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
      "extendedDetails": {}
    },
    "a9a8297cad4122961b34265c0a31d87134a4a028": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13146. Refactor RetryInvocationHandler. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "16/05/16 3:23 PM",
      "commitName": "a9a8297cad4122961b34265c0a31d87134a4a028",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,24 @@\n+  private void log(final Method method, final boolean isFailover,\n+      final int failovers, final long delay, final Exception ex) {\n+    // log info if this has made some successful calls or\n+    // this is not the first failover\n+    final boolean info \u003d hasMadeASuccessfulCall || failovers !\u003d 0;\n+    if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n+      return;\n+    }\n+\n+    final StringBuilder b \u003d new StringBuilder()\n+        .append(\"Exception while invoking \")\n+        .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n+    if (failovers \u003e 0) {\n+      b.append(\" after \").append(failovers).append(\" failover attempts\");\n+    }\n+    b.append(isFailover? \". Trying to failover \": \". Retrying \");\n+    b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n+\n+    if (info) {\n+      LOG.info(b.toString(), ex);\n+    } else {\n+      LOG.debug(b.toString(), ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void log(final Method method, final boolean isFailover,\n      final int failovers, final long delay, final Exception ex) {\n    // log info if this has made some successful calls or\n    // this is not the first failover\n    final boolean info \u003d hasMadeASuccessfulCall || failovers !\u003d 0;\n    if (!info \u0026\u0026 !LOG.isDebugEnabled()) {\n      return;\n    }\n\n    final StringBuilder b \u003d new StringBuilder()\n        .append(\"Exception while invoking \")\n        .append(proxyDescriptor.getProxyInfo().getString(method.getName()));\n    if (failovers \u003e 0) {\n      b.append(\" after \").append(failovers).append(\" failover attempts\");\n    }\n    b.append(isFailover? \". Trying to failover \": \". Retrying \");\n    b.append(delay \u003e 0? \"after sleeping for \" + delay + \"ms.\": \"immediately.\");\n\n    if (info) {\n      LOG.info(b.toString(), ex);\n    } else {\n      LOG.debug(b.toString(), ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java"
    }
  }
}