{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convertStorageTypes",
  "functionId": "convertStorageTypes___storageTypesList-List__StorageTypeProto____expectedSize-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 789,
  "functionEndLine": 802,
  "numCommitsSeen": 327,
  "timeTaken": 6707,
  "changeHistory": [
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
    "552b4fb9f9a76b18605322c0b0e8072613d67773"
  ],
  "changeHistoryShort": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ymultichange(Ymovefromfile,Ybodychange)",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": "Ybodychange",
    "552b4fb9f9a76b18605322c0b0e8072613d67773": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
          "commitDate": "21/09/15 6:53 PM",
          "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/09/15 5:51 PM",
          "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   public static StorageType[] convertStorageTypes(\n       List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n     final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n-    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n+    if (storageTypesList.size() !\u003d expectedSize) {\n+     // missing storage types\n       Preconditions.checkState(storageTypesList.isEmpty());\n       Arrays.fill(storageTypes, StorageType.DEFAULT);\n     } else {\n       for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n-        storageTypes[i] \u003d PBHelperClient.convertStorageType(storageTypesList.get(i));\n+        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n       }\n     }\n     return storageTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StorageType[] convertStorageTypes(\n      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n    if (storageTypesList.size() !\u003d expectedSize) {\n     // missing storage types\n      Preconditions.checkState(storageTypesList.isEmpty());\n      Arrays.fill(storageTypes, StorageType.DEFAULT);\n    } else {\n      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n      }\n    }\n    return storageTypes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
            "oldMethodName": "convertStorageTypes",
            "newMethodName": "convertStorageTypes"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
          "commitDate": "21/09/15 6:53 PM",
          "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/09/15 5:51 PM",
          "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   public static StorageType[] convertStorageTypes(\n       List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n     final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n-    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n+    if (storageTypesList.size() !\u003d expectedSize) {\n+     // missing storage types\n       Preconditions.checkState(storageTypesList.isEmpty());\n       Arrays.fill(storageTypes, StorageType.DEFAULT);\n     } else {\n       for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n-        storageTypes[i] \u003d PBHelperClient.convertStorageType(storageTypesList.get(i));\n+        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n       }\n     }\n     return storageTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StorageType[] convertStorageTypes(\n      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n    if (storageTypesList.size() !\u003d expectedSize) {\n     // missing storage types\n      Preconditions.checkState(storageTypesList.isEmpty());\n      Arrays.fill(storageTypes, StorageType.DEFAULT);\n    } else {\n      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n      }\n    }\n    return storageTypes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "22/08/15 1:31 PM",
      "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "14/07/15 12:42 PM",
      "commitNameOld": "979c9ca2ca89e99dc7165abfa29c78d66de43d9a",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 39.03,
      "commitsBetweenForRepo": 217,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public static StorageType[] convertStorageTypes(\n       List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n     final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n     if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n       Preconditions.checkState(storageTypesList.isEmpty());\n       Arrays.fill(storageTypes, StorageType.DEFAULT);\n     } else {\n       for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n-        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n+        storageTypes[i] \u003d PBHelperClient.convertStorageType(storageTypesList.get(i));\n       }\n     }\n     return storageTypes;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StorageType[] convertStorageTypes(\n      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n      Preconditions.checkState(storageTypesList.isEmpty());\n      Arrays.fill(storageTypes, StorageType.DEFAULT);\n    } else {\n      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n        storageTypes[i] \u003d PBHelperClient.convertStorageType(storageTypesList.get(i));\n      }\n    }\n    return storageTypes;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "552b4fb9f9a76b18605322c0b0e8072613d67773": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Merge from trunk to branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612928 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/14 12:26 PM",
      "commitName": "552b4fb9f9a76b18605322c0b0e8072613d67773",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Merge from trunk to branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/14 12:26 PM",
          "commitName": "552b4fb9f9a76b18605322c0b0e8072613d67773",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 10:57 AM",
          "commitNameOld": "69b75fca7aec5f5cbf79bc7db3915119cef69e65",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  private static StorageType[] convertStorageTypeProtos(\n-      List\u003cStorageTypeProto\u003e storageTypesList) {\n-    final StorageType[] storageTypes \u003d new StorageType[storageTypesList.size()];\n-    for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n-      storageTypes[i] \u003d PBHelper.convertType(storageTypesList.get(i));\n+  public static StorageType[] convertStorageTypes(\n+      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n+    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n+    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n+      Preconditions.checkState(storageTypesList.isEmpty());\n+      Arrays.fill(storageTypes, StorageType.DEFAULT);\n+    } else {\n+      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n+        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n+      }\n     }\n     return storageTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StorageType[] convertStorageTypes(\n      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n      Preconditions.checkState(storageTypesList.isEmpty());\n      Arrays.fill(storageTypes, StorageType.DEFAULT);\n    } else {\n      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n      }\n    }\n    return storageTypes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "convertStorageTypeProtos",
            "newValue": "convertStorageTypes"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Merge from trunk to branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/14 12:26 PM",
          "commitName": "552b4fb9f9a76b18605322c0b0e8072613d67773",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 10:57 AM",
          "commitNameOld": "69b75fca7aec5f5cbf79bc7db3915119cef69e65",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  private static StorageType[] convertStorageTypeProtos(\n-      List\u003cStorageTypeProto\u003e storageTypesList) {\n-    final StorageType[] storageTypes \u003d new StorageType[storageTypesList.size()];\n-    for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n-      storageTypes[i] \u003d PBHelper.convertType(storageTypesList.get(i));\n+  public static StorageType[] convertStorageTypes(\n+      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n+    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n+    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n+      Preconditions.checkState(storageTypesList.isEmpty());\n+      Arrays.fill(storageTypes, StorageType.DEFAULT);\n+    } else {\n+      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n+        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n+      }\n     }\n     return storageTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StorageType[] convertStorageTypes(\n      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n      Preconditions.checkState(storageTypesList.isEmpty());\n      Arrays.fill(storageTypes, StorageType.DEFAULT);\n    } else {\n      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n      }\n    }\n    return storageTypes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[storageTypesList-List\u003cStorageTypeProto\u003e]",
            "newValue": "[storageTypesList-List\u003cStorageTypeProto\u003e, expectedSize-int]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Merge from trunk to branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/14 12:26 PM",
          "commitName": "552b4fb9f9a76b18605322c0b0e8072613d67773",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 10:57 AM",
          "commitNameOld": "69b75fca7aec5f5cbf79bc7db3915119cef69e65",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  private static StorageType[] convertStorageTypeProtos(\n-      List\u003cStorageTypeProto\u003e storageTypesList) {\n-    final StorageType[] storageTypes \u003d new StorageType[storageTypesList.size()];\n-    for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n-      storageTypes[i] \u003d PBHelper.convertType(storageTypesList.get(i));\n+  public static StorageType[] convertStorageTypes(\n+      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n+    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n+    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n+      Preconditions.checkState(storageTypesList.isEmpty());\n+      Arrays.fill(storageTypes, StorageType.DEFAULT);\n+    } else {\n+      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n+        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n+      }\n     }\n     return storageTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StorageType[] convertStorageTypes(\n      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n      Preconditions.checkState(storageTypesList.isEmpty());\n      Arrays.fill(storageTypes, StorageType.DEFAULT);\n    } else {\n      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n      }\n    }\n    return storageTypes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Merge from trunk to branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/14 12:26 PM",
          "commitName": "552b4fb9f9a76b18605322c0b0e8072613d67773",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 10:57 AM",
          "commitNameOld": "69b75fca7aec5f5cbf79bc7db3915119cef69e65",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  private static StorageType[] convertStorageTypeProtos(\n-      List\u003cStorageTypeProto\u003e storageTypesList) {\n-    final StorageType[] storageTypes \u003d new StorageType[storageTypesList.size()];\n-    for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n-      storageTypes[i] \u003d PBHelper.convertType(storageTypesList.get(i));\n+  public static StorageType[] convertStorageTypes(\n+      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n+    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n+    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n+      Preconditions.checkState(storageTypesList.isEmpty());\n+      Arrays.fill(storageTypes, StorageType.DEFAULT);\n+    } else {\n+      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n+        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n+      }\n     }\n     return storageTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StorageType[] convertStorageTypes(\n      List\u003cStorageTypeProto\u003e storageTypesList, int expectedSize) {\n    final StorageType[] storageTypes \u003d new StorageType[expectedSize];\n    if (storageTypesList.size() !\u003d expectedSize) { // missing storage types\n      Preconditions.checkState(storageTypesList.isEmpty());\n      Arrays.fill(storageTypes, StorageType.DEFAULT);\n    } else {\n      for (int i \u003d 0; i \u003c storageTypes.length; ++i) {\n        storageTypes[i] \u003d convertStorageType(storageTypesList.get(i));\n      }\n    }\n    return storageTypes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}