{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "removeAclEntries",
  "functionId": "removeAclEntries___src-String(modifiers-final)__aclSpec-List__AclEntry__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 7656,
  "functionEndLine": 7679,
  "numCommitsSeen": 1352,
  "timeTaken": 32726,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "9b90e52f1ec22c18cd535af2a569defcef65b093",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "9297f980c2de8886ff970946a2513e6890cd5552",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
    "c95b878abf313507666ea018f9e6033c4c166e10",
    "73e601259fed0646f115b09112995b51ffef3468"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Ybodychange",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ybodychange",
    "9b90e52f1ec22c18cd535af2a569defcef65b093": "Ybodychange",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "9297f980c2de8886ff970946a2513e6890cd5552": "Ymultichange(Yparameterchange,Ybodychange)",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ybodychange",
    "6a5596e3b4443462fc86f800b3c2eb839d44c3bd": "Ybodychange",
    "c95b878abf313507666ea018f9e6033c4c166e10": "Ybodychange",
    "73e601259fed0646f115b09112995b51ffef3468": "Ybodychange"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     final String operationName \u003d \"removeAclEntries\";\n     checkOperation(OperationCategory.WRITE);\n     FileStatus auditStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n     try {\n       writeLock();\n       try {\n         checkOperation(OperationCategory.WRITE);\n         checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n         auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n       } finally {\n-        writeUnlock(operationName);\n+        writeUnlock(operationName,\n+            getLockReportInfoSupplier(src, null, auditStat));\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    final String operationName \u003d \"removeAclEntries\";\n    checkOperation(OperationCategory.WRITE);\n    FileStatus auditStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n        auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n      } finally {\n        writeUnlock(operationName,\n            getLockReportInfoSupplier(src, null, auditStat));\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/02/20 8:49 AM",
      "commitNameOld": "cd2c6b1aac470991b9b90339ce2721ba179e7c48",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     final String operationName \u003d \"removeAclEntries\";\n     checkOperation(OperationCategory.WRITE);\n     FileStatus auditStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    FSPermissionChecker.setOperationType(operationName);\n     try {\n       writeLock();\n       try {\n         checkOperation(OperationCategory.WRITE);\n         checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n         auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n       } finally {\n         writeUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    final String operationName \u003d \"removeAclEntries\";\n    checkOperation(OperationCategory.WRITE);\n    FileStatus auditStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n        auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n      } finally {\n        writeUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11246. FSNameSystem#logAuditEvent should be called outside the read or write locks. Contributed by He Xiaoqiao, Kuhu Shukla.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nCo-authored-by: Kuhu Shukla \u003ckshukla@apache.org\u003e\n",
      "commitDate": "29/08/19 10:10 AM",
      "commitName": "f600fbb6c4987c69292faea6b5abf022bb213ffd",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "27/08/19 3:26 PM",
      "commitNameOld": "dde9399b37bffb77da17c025f0b9b673d7088bc6",
      "commitAuthorOld": "He Xiaoqiao",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     final String operationName \u003d \"removeAclEntries\";\n     checkOperation(OperationCategory.WRITE);\n     FileStatus auditStat \u003d null;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n-    writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n-      auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n+      writeLock();\n+      try {\n+        checkOperation(OperationCategory.WRITE);\n+        checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n+        auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n+      } finally {\n+        writeUnlock(operationName);\n+      }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n-    } finally {\n-      writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    final String operationName \u003d \"removeAclEntries\";\n    checkOperation(OperationCategory.WRITE);\n    FileStatus auditStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n        auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n      } finally {\n        writeUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/02/18 1:32 PM",
      "commitNameOld": "47473952e56b0380147d42f4110ad03c2276c961",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     final String operationName \u003d \"removeAclEntries\";\n     checkOperation(OperationCategory.WRITE);\n     FileStatus auditStat \u003d null;\n+    final FSPermissionChecker pc \u003d getPermissionChecker();\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n-      auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n+      auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    final String operationName \u003d \"removeAclEntries\";\n    checkOperation(OperationCategory.WRITE);\n    FileStatus auditStat \u003d null;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      auditStat \u003d FSDirAclOp.removeAclEntries(dir, pc, src, aclSpec);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9b90e52f1ec22c18cd535af2a569defcef65b093": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
      "commitDate": "16/05/17 9:28 AM",
      "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "04/05/17 11:39 AM",
      "commitNameOld": "c2a52ef9c29459ff9ef3e23b29e14912bfdb1405",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.91,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     final String operationName \u003d \"removeAclEntries\";\n     checkOperation(OperationCategory.WRITE);\n-    HdfsFileStatus auditStat \u003d null;\n+    FileStatus auditStat \u003d null;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n       auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    final String operationName \u003d \"removeAclEntries\";\n    checkOperation(OperationCategory.WRITE);\n    FileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n+    final String operationName \u003d \"removeAclEntries\";\n     checkOperation(OperationCategory.WRITE);\n     HdfsFileStatus auditStat \u003d null;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n       auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n     } catch (AccessControlException e) {\n-      logAuditEvent(false, \"removeAclEntries\", src);\n+      logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n-      writeUnlock();\n+      writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n-    logAuditEvent(true, \"removeAclEntries\", src, null, auditStat);\n+    logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    final String operationName \u003d \"removeAclEntries\";\n    checkOperation(OperationCategory.WRITE);\n    HdfsFileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9297f980c2de8886ff970946a2513e6890cd5552": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7476. Consolidate ACL-related operations to a single class. Contributed by Haohui Mai.\n",
      "commitDate": "06/12/14 2:20 PM",
      "commitName": "9297f980c2de8886ff970946a2513e6890cd5552",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7476. Consolidate ACL-related operations to a single class. Contributed by Haohui Mai.\n",
          "commitDate": "06/12/14 2:20 PM",
          "commitName": "9297f980c2de8886ff970946a2513e6890cd5552",
          "commitAuthor": "cnauroth",
          "commitDateOld": "05/12/14 6:37 PM",
          "commitNameOld": "e227fb8fbcd414717faded9454b8ef813f7aafea",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.82,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,18 @@\n-  void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n+  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n-    String src \u003d srcArg;\n-    checkAclsConfigFlag();\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n-    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n+    HdfsFileStatus auditStat \u003d null;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n-      getEditLog().logSetAcl(src, newAcl);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n     } catch (AccessControlException e) {\n-      logAuditEvent(false, \"removeAclEntries\", srcArg);\n+      logAuditEvent(false, \"removeAclEntries\", src);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n-    logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n+    logAuditEvent(true, \"removeAclEntries\", src, null, auditStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n    HdfsFileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeAclEntries\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeAclEntries\", src, null, auditStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[srcArg-String(modifiers-final), aclSpec-List\u003cAclEntry\u003e]",
            "newValue": "[src-String(modifiers-final), aclSpec-List\u003cAclEntry\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7476. Consolidate ACL-related operations to a single class. Contributed by Haohui Mai.\n",
          "commitDate": "06/12/14 2:20 PM",
          "commitName": "9297f980c2de8886ff970946a2513e6890cd5552",
          "commitAuthor": "cnauroth",
          "commitDateOld": "05/12/14 6:37 PM",
          "commitNameOld": "e227fb8fbcd414717faded9454b8ef813f7aafea",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.82,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,18 @@\n-  void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n+  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n-    String src \u003d srcArg;\n-    checkAclsConfigFlag();\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n-    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n+    HdfsFileStatus auditStat \u003d null;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n-      getEditLog().logSetAcl(src, newAcl);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n     } catch (AccessControlException e) {\n-      logAuditEvent(false, \"removeAclEntries\", srcArg);\n+      logAuditEvent(false, \"removeAclEntries\", src);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n-    logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n+    logAuditEvent(true, \"removeAclEntries\", src, null, auditStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeAclEntries(final String src, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n    HdfsFileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      auditStat \u003d FSDirAclOp.removeAclEntries(dir, src, aclSpec);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeAclEntries\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeAclEntries\", src, null, auditStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "05/12/14 10:55 AM",
      "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     String src \u003d srcArg;\n     checkAclsConfigFlag();\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n       src \u003d dir.resolvePath(pc, src, pathComponents);\n-      checkOwner(pc, src);\n+      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n+      dir.checkOwner(pc, iip);\n       List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n       getEditLog().logSetAcl(src, newAcl);\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeAclEntries\", srcArg);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    String src \u003d srcArg;\n    checkAclsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n      dir.checkOwner(pc, iip);\n      List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n      getEditLog().logSetAcl(src, newAcl);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeAclEntries\", srcArg);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6a5596e3b4443462fc86f800b3c2eb839d44c3bd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7478. Move org.apache.hadoop.hdfs.server.namenode.NNConf to FSNamesystem. Contributed by Li Lu.\n",
      "commitDate": "05/12/14 10:55 AM",
      "commitName": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/12/14 2:53 PM",
      "commitNameOld": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 2.83,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     String src \u003d srcArg;\n-    nnConf.checkAclsConfigFlag();\n+    checkAclsConfigFlag();\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n       src \u003d dir.resolvePath(pc, src, pathComponents);\n       checkOwner(pc, src);\n       List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n       getEditLog().logSetAcl(src, newAcl);\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeAclEntries\", srcArg);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    String src \u003d srcArg;\n    checkAclsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      checkOwner(pc, src);\n      List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n      getEditLog().logSetAcl(src, newAcl);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeAclEntries\", srcArg);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "c95b878abf313507666ea018f9e6033c4c166e10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
      "commitDate": "20/11/14 7:23 PM",
      "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "17/11/14 5:33 PM",
      "commitNameOld": "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     String src \u003d srcArg;\n     nnConf.checkAclsConfigFlag();\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n-      src \u003d resolvePath(src, pathComponents);\n+      src \u003d dir.resolvePath(pc, src, pathComponents);\n       checkOwner(pc, src);\n       List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n       getEditLog().logSetAcl(src, newAcl);\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeAclEntries\", srcArg);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    String src \u003d srcArg;\n    nnConf.checkAclsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      checkOwner(pc, src);\n      List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n      getEditLog().logSetAcl(src, newAcl);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeAclEntries\", srcArg);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "73e601259fed0646f115b09112995b51ffef3468": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7218. FSNamesystem ACL operations should write to audit log on failure. (clamb via yliu)\n",
      "commitDate": "04/11/14 11:49 PM",
      "commitName": "73e601259fed0646f115b09112995b51ffef3468",
      "commitAuthor": "yliu",
      "commitDateOld": "04/11/14 10:16 AM",
      "commitNameOld": "3dfd6e68fe5028fe3766ae5056dc175c38cc97e1",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.56,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n       throws IOException {\n     String src \u003d srcArg;\n     nnConf.checkAclsConfigFlag();\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n       src \u003d resolvePath(src, pathComponents);\n       checkOwner(pc, src);\n       List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n       getEditLog().logSetAcl(src, newAcl);\n       resultingStat \u003d getAuditFileInfo(src, false);\n+    } catch (AccessControlException e) {\n+      logAuditEvent(false, \"removeAclEntries\", srcArg);\n+      throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeAclEntries(final String srcArg, List\u003cAclEntry\u003e aclSpec)\n      throws IOException {\n    String src \u003d srcArg;\n    nnConf.checkAclsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove ACL entries on \" + src);\n      src \u003d resolvePath(src, pathComponents);\n      checkOwner(pc, src);\n      List\u003cAclEntry\u003e newAcl \u003d dir.removeAclEntries(src, aclSpec);\n      getEditLog().logSetAcl(src, newAcl);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeAclEntries\", srcArg);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeAclEntries\", srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    }
  }
}