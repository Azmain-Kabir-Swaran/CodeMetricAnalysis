{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirAttrOp.java",
  "functionName": "setPermission",
  "functionId": "setPermission___fsd-FSDirectory__pc-FSPermissionChecker__src-String(modifiers-final)__permission-FsPermission",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
  "functionStartLine": 52,
  "functionEndLine": 69,
  "numCommitsSeen": 583,
  "timeTaken": 14140,
  "changeHistory": [
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "9b90e52f1ec22c18cd535af2a569defcef65b093",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "48b9d5fd2a96728b1118be217ca597c4098e99ca",
    "869393643de23dcb010cc33091c8eb398de0fd6c",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
    "3dadf369d550c2ae393b751cb5a184dbfe2814df",
    "65f2a4ee600dfffa5203450261da3c1989de25a9",
    "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "c95b878abf313507666ea018f9e6033c4c166e10"
  ],
  "changeHistoryShort": {
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ymultichange(Yparameterchange,Ybodychange)",
    "9b90e52f1ec22c18cd535af2a569defcef65b093": "Yreturntypechange",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "48b9d5fd2a96728b1118be217ca597c4098e99ca": "Ymultichange(Yparameterchange,Ybodychange)",
    "869393643de23dcb010cc33091c8eb398de0fd6c": "Ybodychange",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": "Ybodychange",
    "3dadf369d550c2ae393b751cb5a184dbfe2814df": "Ybodychange",
    "65f2a4ee600dfffa5203450261da3c1989de25a9": "Ybodychange",
    "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ymultichange(Yexceptionschange,Ybodychange)",
    "c95b878abf313507666ea018f9e6033c4c166e10": "Ybodychange"
  },
  "changeHistoryDetails": {
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "20/12/17 8:55 AM",
          "commitNameOld": "a78db9919065d06ced8122229530f44cc7369857",
          "commitAuthorOld": "Wei Yan",
          "daysBetweenCommits": 64.11,
          "commitsBetweenForRepo": 331,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   static FileStatus setPermission(\n-      FSDirectory fsd, final String src, FsPermission permission)\n-      throws IOException {\n+      FSDirectory fsd, FSPermissionChecker pc, final String src,\n+      FsPermission permission) throws IOException {\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n-    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n       iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, iip, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static FileStatus setPermission(\n      FSDirectory fsd, FSPermissionChecker pc, final String src,\n      FsPermission permission) throws IOException {\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, iip, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, src-String(modifiers-final), permission-FsPermission]",
            "newValue": "[fsd-FSDirectory, pc-FSPermissionChecker, src-String(modifiers-final), permission-FsPermission]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "20/12/17 8:55 AM",
          "commitNameOld": "a78db9919065d06ced8122229530f44cc7369857",
          "commitAuthorOld": "Wei Yan",
          "daysBetweenCommits": 64.11,
          "commitsBetweenForRepo": 331,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   static FileStatus setPermission(\n-      FSDirectory fsd, final String src, FsPermission permission)\n-      throws IOException {\n+      FSDirectory fsd, FSPermissionChecker pc, final String src,\n+      FsPermission permission) throws IOException {\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n-    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n       iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, iip, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static FileStatus setPermission(\n      FSDirectory fsd, FSPermissionChecker pc, final String src,\n      FsPermission permission) throws IOException {\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, iip, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b90e52f1ec22c18cd535af2a569defcef65b093": {
      "type": "Yreturntypechange",
      "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
      "commitDate": "16/05/17 9:28 AM",
      "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "21/12/16 1:04 PM",
      "commitNameOld": "f6e80acd681548b14fe3f0f3d2b3aaf800d10310",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 145.81,
      "commitsBetweenForRepo": 772,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  static HdfsFileStatus setPermission(\n+  static FileStatus setPermission(\n       FSDirectory fsd, final String src, FsPermission permission)\n       throws IOException {\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n       iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, iip, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static FileStatus setPermission(\n      FSDirectory fsd, final String src, FsPermission permission)\n      throws IOException {\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, iip, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
      "extendedDetails": {
        "oldValue": "HdfsFileStatus",
        "newValue": "FileStatus"
      }
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/10/16 2:33 PM",
      "commitNameOld": "48b9d5fd2a96728b1118be217ca597c4098e99ca",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 18.03,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   static HdfsFileStatus setPermission(\n       FSDirectory fsd, final String src, FsPermission permission)\n       throws IOException {\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n-      iip \u003d fsd.resolvePathForWrite(pc, src);\n+      iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, iip, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String src, FsPermission permission)\n      throws IOException {\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, src, DirOp.WRITE);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, iip, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
      "extendedDetails": {}
    },
    "48b9d5fd2a96728b1118be217ca597c4098e99ca": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10955. Pass IIP for FSDirAttr methods. Contributed by Daryn Sharp.\n",
      "commitDate": "06/10/16 2:33 PM",
      "commitName": "48b9d5fd2a96728b1118be217ca597c4098e99ca",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10955. Pass IIP for FSDirAttr methods. Contributed by Daryn Sharp.\n",
          "commitDate": "06/10/16 2:33 PM",
          "commitName": "48b9d5fd2a96728b1118be217ca597c4098e99ca",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "23/09/16 10:37 AM",
          "commitNameOld": "a5bb88c8e0fd4bd19b6d377fecbe1d2d441514f6",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 13.16,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n   static HdfsFileStatus setPermission(\n-      FSDirectory fsd, final String srcArg, FsPermission permission)\n+      FSDirectory fsd, final String src, FsPermission permission)\n       throws IOException {\n-    String src \u003d srcArg;\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n       iip \u003d fsd.resolvePathForWrite(pc, src);\n-      src \u003d iip.getPath();\n       fsd.checkOwner(pc, iip);\n-      unprotectedSetPermission(fsd, src, permission);\n+      unprotectedSetPermission(fsd, iip, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n-    fsd.getEditLog().logSetPermissions(src, permission);\n+    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String src, FsPermission permission)\n      throws IOException {\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      iip \u003d fsd.resolvePathForWrite(pc, src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, iip, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, srcArg-String(modifiers-final), permission-FsPermission]",
            "newValue": "[fsd-FSDirectory, src-String(modifiers-final), permission-FsPermission]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10955. Pass IIP for FSDirAttr methods. Contributed by Daryn Sharp.\n",
          "commitDate": "06/10/16 2:33 PM",
          "commitName": "48b9d5fd2a96728b1118be217ca597c4098e99ca",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "23/09/16 10:37 AM",
          "commitNameOld": "a5bb88c8e0fd4bd19b6d377fecbe1d2d441514f6",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 13.16,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n   static HdfsFileStatus setPermission(\n-      FSDirectory fsd, final String srcArg, FsPermission permission)\n+      FSDirectory fsd, final String src, FsPermission permission)\n       throws IOException {\n-    String src \u003d srcArg;\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n       iip \u003d fsd.resolvePathForWrite(pc, src);\n-      src \u003d iip.getPath();\n       fsd.checkOwner(pc, iip);\n-      unprotectedSetPermission(fsd, src, permission);\n+      unprotectedSetPermission(fsd, iip, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n-    fsd.getEditLog().logSetPermissions(src, permission);\n+    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String src, FsPermission permission)\n      throws IOException {\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      iip \u003d fsd.resolvePathForWrite(pc, src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, iip, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(iip.getPath(), permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "869393643de23dcb010cc33091c8eb398de0fd6c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
      "commitDate": "17/08/16 1:53 PM",
      "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "15/08/16 2:45 PM",
      "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   static HdfsFileStatus setPermission(\n       FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n-      src \u003d fsd.resolvePath(pc, src);\n-      iip \u003d fsd.getINodesInPath4Write(src);\n+      iip \u003d fsd.resolvePathForWrite(pc, src);\n+      src \u003d iip.getPath();\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, src, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(src, permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      iip \u003d fsd.resolvePathForWrite(pc, src);\n      src \u003d iip.getPath();\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
      "extendedDetails": {}
    },
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.\n",
      "commitDate": "15/08/16 2:45 PM",
      "commitName": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "02/03/16 6:35 PM",
      "commitNameOld": "27941a1811831e0f2144a2f463d807755cd850b2",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 165.8,
      "commitsBetweenForRepo": 1182,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   static HdfsFileStatus setPermission(\n       FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n     if (FSDirectory.isExactReservedName(src)) {\n       throw new InvalidPathException(src);\n     }\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n-      src \u003d fsd.resolvePath(pc, src, pathComponents);\n+      src \u003d fsd.resolvePath(pc, src);\n       iip \u003d fsd.getINodesInPath4Write(src);\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, src, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(src, permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src);\n      iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
      "extendedDetails": {}
    },
    "3dadf369d550c2ae393b751cb5a184dbfe2814df": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7087. Ability to list /.reserved. Contributed by Xiao Chen.\n",
      "commitDate": "21/10/15 4:58 PM",
      "commitName": "3dadf369d550c2ae393b751cb5a184dbfe2814df",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "19/10/15 8:33 PM",
      "commitNameOld": "9cb5d353533e829e624b33fb26dd37c177e1e046",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 1.85,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   static HdfsFileStatus setPermission(\n       FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n+    if (FSDirectory.isExactReservedName(src)) {\n+      throw new InvalidPathException(src);\n+    }\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     INodesInPath iip;\n     fsd.writeLock();\n     try {\n       src \u003d fsd.resolvePath(pc, src, pathComponents);\n       iip \u003d fsd.getINodesInPath4Write(src);\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, src, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(src, permission);\n     return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    if (FSDirectory.isExactReservedName(src)) {\n      throw new InvalidPathException(src);\n    }\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
      "extendedDetails": {}
    },
    "65f2a4ee600dfffa5203450261da3c1989de25a9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7543. Avoid path resolution when getting FileStatus for audit logs. Contributed by Haohui Mai.\n",
      "commitDate": "18/12/14 11:25 AM",
      "commitName": "65f2a4ee600dfffa5203450261da3c1989de25a9",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "15/12/14 10:40 AM",
      "commitNameOld": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   static HdfsFileStatus setPermission(\n       FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n+    INodesInPath iip;\n     fsd.writeLock();\n     try {\n       src \u003d fsd.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n+      iip \u003d fsd.getINodesInPath4Write(src);\n       fsd.checkOwner(pc, iip);\n       unprotectedSetPermission(fsd, src, permission);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logSetPermissions(src, permission);\n-    return fsd.getAuditFileInfo(src, false);\n+    return fsd.getAuditFileInfo(iip);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    INodesInPath iip;\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(iip);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
      "extendedDetails": {}
    },
    "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "15/12/14 10:40 AM",
      "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/12/14 10:30 AM",
          "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,18 @@\n-  private void setPermissionInt(final String srcArg, FsPermission permission)\n+  static HdfsFileStatus setPermission(\n+      FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n-    checkOperation(OperationCategory.WRITE);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      dir.setPermission(src, permission);\n-      getEditLog().logSetPermissions(src, permission);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      src \u003d fsd.resolvePath(pc, src, pathComponents);\n+      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n+      fsd.checkOwner(pc, iip);\n+      unprotectedSetPermission(fsd, src, permission);\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n-    getEditLog().logSync();\n-    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n+    fsd.getEditLog().logSetPermissions(src, permission);\n+    return fsd.getAuditFileInfo(src, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(src, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
            "oldMethodName": "setPermissionInt",
            "newMethodName": "setPermission"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/12/14 10:30 AM",
          "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,18 @@\n-  private void setPermissionInt(final String srcArg, FsPermission permission)\n+  static HdfsFileStatus setPermission(\n+      FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n-    checkOperation(OperationCategory.WRITE);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      dir.setPermission(src, permission);\n-      getEditLog().logSetPermissions(src, permission);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      src \u003d fsd.resolvePath(pc, src, pathComponents);\n+      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n+      fsd.checkOwner(pc, iip);\n+      unprotectedSetPermission(fsd, src, permission);\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n-    getEditLog().logSync();\n-    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n+    fsd.getEditLog().logSetPermissions(src, permission);\n+    return fsd.getAuditFileInfo(src, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(src, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "HdfsFileStatus"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/12/14 10:30 AM",
          "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,18 @@\n-  private void setPermissionInt(final String srcArg, FsPermission permission)\n+  static HdfsFileStatus setPermission(\n+      FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n-    checkOperation(OperationCategory.WRITE);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      dir.setPermission(src, permission);\n-      getEditLog().logSetPermissions(src, permission);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      src \u003d fsd.resolvePath(pc, src, pathComponents);\n+      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n+      fsd.checkOwner(pc, iip);\n+      unprotectedSetPermission(fsd, src, permission);\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n-    getEditLog().logSync();\n-    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n+    fsd.getEditLog().logSetPermissions(src, permission);\n+    return fsd.getAuditFileInfo(src, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(src, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/12/14 10:30 AM",
          "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,18 @@\n-  private void setPermissionInt(final String srcArg, FsPermission permission)\n+  static HdfsFileStatus setPermission(\n+      FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n-    checkOperation(OperationCategory.WRITE);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      dir.setPermission(src, permission);\n-      getEditLog().logSetPermissions(src, permission);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      src \u003d fsd.resolvePath(pc, src, pathComponents);\n+      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n+      fsd.checkOwner(pc, iip);\n+      unprotectedSetPermission(fsd, src, permission);\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n-    getEditLog().logSync();\n-    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n+    fsd.getEditLog().logSetPermissions(src, permission);\n+    return fsd.getAuditFileInfo(src, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(src, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/12/14 10:30 AM",
          "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,18 @@\n-  private void setPermissionInt(final String srcArg, FsPermission permission)\n+  static HdfsFileStatus setPermission(\n+      FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n-    checkOperation(OperationCategory.WRITE);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      dir.setPermission(src, permission);\n-      getEditLog().logSetPermissions(src, permission);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      src \u003d fsd.resolvePath(pc, src, pathComponents);\n+      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n+      fsd.checkOwner(pc, iip);\n+      unprotectedSetPermission(fsd, src, permission);\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n-    getEditLog().logSync();\n-    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n+    fsd.getEditLog().logSetPermissions(src, permission);\n+    return fsd.getAuditFileInfo(src, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(src, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {
            "oldValue": "setPermissionInt",
            "newValue": "setPermission"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7506. Consolidate implementation of setting inode attributes into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "15/12/14 10:40 AM",
          "commitName": "832ebd8cb63d91b4aa4bfed412b9799b3b9be4a7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "15/12/14 10:30 AM",
          "commitNameOld": "6e13fc62e1f284f22fd0089f06ce281198bc7c2a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,18 @@\n-  private void setPermissionInt(final String srcArg, FsPermission permission)\n+  static HdfsFileStatus setPermission(\n+      FSDirectory fsd, final String srcArg, FsPermission permission)\n       throws IOException {\n     String src \u003d srcArg;\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n-    checkOperation(OperationCategory.WRITE);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n-      dir.checkOwner(pc, iip);\n-      dir.setPermission(src, permission);\n-      getEditLog().logSetPermissions(src, permission);\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      src \u003d fsd.resolvePath(pc, src, pathComponents);\n+      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n+      fsd.checkOwner(pc, iip);\n+      unprotectedSetPermission(fsd, src, permission);\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n-    getEditLog().logSync();\n-    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n+    fsd.getEditLog().logSetPermissions(src, permission);\n+    return fsd.getAuditFileInfo(src, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static HdfsFileStatus setPermission(\n      FSDirectory fsd, final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    fsd.writeLock();\n    try {\n      src \u003d fsd.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d fsd.getINodesInPath4Write(src);\n      fsd.checkOwner(pc, iip);\n      unprotectedSetPermission(fsd, src, permission);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetPermissions(src, permission);\n    return fsd.getAuditFileInfo(src, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
          "extendedDetails": {
            "oldValue": "[srcArg-String(modifiers-final), permission-FsPermission]",
            "newValue": "[fsd-FSDirectory, srcArg-String(modifiers-final), permission-FsPermission]"
          }
        }
      ]
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 10:55 AM",
          "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   private void setPermissionInt(final String srcArg, FsPermission permission)\n-      throws AccessControlException, FileNotFoundException, SafeModeException,\n-      UnresolvedLinkException, IOException {\n+      throws IOException {\n     String src \u003d srcArg;\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n       src \u003d dir.resolvePath(pc, src, pathComponents);\n-      checkOwner(pc, src);\n+      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n+      dir.checkOwner(pc, iip);\n       dir.setPermission(src, permission);\n       getEditLog().logSetPermissions(src, permission);\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setPermissionInt(final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n      dir.checkOwner(pc, iip);\n      dir.setPermission(src, permission);\n      getEditLog().logSetPermissions(src, permission);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[AccessControlException, FileNotFoundException, SafeModeException, UnresolvedLinkException, IOException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 10:55 AM",
          "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   private void setPermissionInt(final String srcArg, FsPermission permission)\n-      throws AccessControlException, FileNotFoundException, SafeModeException,\n-      UnresolvedLinkException, IOException {\n+      throws IOException {\n     String src \u003d srcArg;\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n       src \u003d dir.resolvePath(pc, src, pathComponents);\n-      checkOwner(pc, src);\n+      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n+      dir.checkOwner(pc, iip);\n       dir.setPermission(src, permission);\n       getEditLog().logSetPermissions(src, permission);\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setPermissionInt(final String srcArg, FsPermission permission)\n      throws IOException {\n    String src \u003d srcArg;\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d dir.getINodesInPath4Write(src);\n      dir.checkOwner(pc, iip);\n      dir.setPermission(src, permission);\n      getEditLog().logSetPermissions(src, permission);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "c95b878abf313507666ea018f9e6033c4c166e10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
      "commitDate": "20/11/14 7:23 PM",
      "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "17/11/14 5:33 PM",
      "commitNameOld": "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private void setPermissionInt(final String srcArg, FsPermission permission)\n       throws AccessControlException, FileNotFoundException, SafeModeException,\n       UnresolvedLinkException, IOException {\n     String src \u003d srcArg;\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n-      src \u003d resolvePath(src, pathComponents);\n+      src \u003d dir.resolvePath(pc, src, pathComponents);\n       checkOwner(pc, src);\n       dir.setPermission(src, permission);\n       getEditLog().logSetPermissions(src, permission);\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setPermissionInt(final String srcArg, FsPermission permission)\n      throws AccessControlException, FileNotFoundException, SafeModeException,\n      UnresolvedLinkException, IOException {\n    String src \u003d srcArg;\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot set permission for \" + src);\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      checkOwner(pc, src);\n      dir.setPermission(src, permission);\n      getEditLog().logSetPermissions(src, permission);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"setPermission\", srcArg, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    }
  }
}