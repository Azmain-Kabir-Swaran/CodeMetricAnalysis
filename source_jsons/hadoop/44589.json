{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "parseAMContainer",
  "functionId": "parseAMContainer___commandLine-CommandLine__printOpts-Options",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 1023,
  "functionEndLine": 1052,
  "numCommitsSeen": 52,
  "timeTaken": 1559,
  "changeHistory": [
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835"
  ],
  "changeHistoryShort": {
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4905. Improved \"yarn logs\" command-line to optionally show log metadata also. Contributed by Xuan Gong.\n",
      "commitDate": "04/05/16 2:16 PM",
      "commitName": "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,30 @@\n+  private List\u003cString\u003e parseAMContainer(CommandLine commandLine,\n+      Options printOpts) throws NumberFormatException {\n+    List\u003cString\u003e amContainersList \u003d new ArrayList\u003cString\u003e();\n+    String[] amContainers \u003d commandLine.getOptionValues(AM_CONTAINER_OPTION);\n+    for (String am : amContainers) {\n+      boolean errorInput \u003d false;\n+      if (!am.trim().equalsIgnoreCase(\"ALL\")) {\n+        try {\n+          int id \u003d Integer.parseInt(am.trim());\n+          if (id !\u003d -1 \u0026\u0026 id \u003c\u003d 0) {\n+            errorInput \u003d true;\n+          }\n+        } catch (NumberFormatException ex) {\n+          errorInput \u003d true;\n+        }\n+        if (errorInput) {\n+          String errMessage \u003d\n+              \"Invalid input for option -am. Valid inputs are \u0027ALL\u0027, -1 \"\n+              + \"and any other integer which is larger than 0.\";\n+          printHelpMessage(printOpts);\n+          throw new NumberFormatException(errMessage);\n+        }\n+        amContainersList.add(am.trim());\n+      } else {\n+        amContainersList.add(\"ALL\");\n+        break;\n+      }\n+    }\n+    return amContainersList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString\u003e parseAMContainer(CommandLine commandLine,\n      Options printOpts) throws NumberFormatException {\n    List\u003cString\u003e amContainersList \u003d new ArrayList\u003cString\u003e();\n    String[] amContainers \u003d commandLine.getOptionValues(AM_CONTAINER_OPTION);\n    for (String am : amContainers) {\n      boolean errorInput \u003d false;\n      if (!am.trim().equalsIgnoreCase(\"ALL\")) {\n        try {\n          int id \u003d Integer.parseInt(am.trim());\n          if (id !\u003d -1 \u0026\u0026 id \u003c\u003d 0) {\n            errorInput \u003d true;\n          }\n        } catch (NumberFormatException ex) {\n          errorInput \u003d true;\n        }\n        if (errorInput) {\n          String errMessage \u003d\n              \"Invalid input for option -am. Valid inputs are \u0027ALL\u0027, -1 \"\n              + \"and any other integer which is larger than 0.\";\n          printHelpMessage(printOpts);\n          throw new NumberFormatException(errMessage);\n        }\n        amContainersList.add(am.trim());\n      } else {\n        amContainersList.add(\"ALL\");\n        break;\n      }\n    }\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}