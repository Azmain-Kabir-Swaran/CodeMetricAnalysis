{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FailoverController.java",
  "functionName": "preFailoverChecks",
  "functionId": "preFailoverChecks___from-HAServiceTarget__target-HAServiceTarget__forceActive-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
  "functionStartLine": 109,
  "functionEndLine": 156,
  "numCommitsSeen": 61,
  "timeTaken": 2488,
  "changeHistory": [
    "091ad974cd29fae0cf8fbc98ab84900a1a324839",
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
    "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
    "840df19ceecca1be26c572da2afe2f4d5f958b24",
    "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
    "90ea037d21be08821fc9c95b80bec1e1078d79cc",
    "b795c65f4929330972c07ec2d5d7ce987c5c2316",
    "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
    "68843484448fcf45e2c48bed2426d9844ee8128c",
    "72207596be4b293a44607003fa68c4e413e1baaf",
    "09e5af76f333f2924b5034bca8adfdcc99723a96",
    "fb9cdcfa60cb641faded2d3843c81e969ac33147"
  ],
  "changeHistoryShort": {
    "091ad974cd29fae0cf8fbc98ab84900a1a324839": "Ybodychange",
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": "Ybodychange",
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529": "Ymultichange(Ymodifierchange,Ybodychange)",
    "978404d1a83ecaee0ebed3a8ce16601dcfe4c076": "Ymultichange(Yparameterchange,Ybodychange)",
    "840df19ceecca1be26c572da2afe2f4d5f958b24": "Ymultichange(Yparameterchange,Ybodychange)",
    "39775dca68643b37a3b9a5ae7bc8eea1418f60d1": "Ymultichange(Yparameterchange,Ybodychange)",
    "90ea037d21be08821fc9c95b80bec1e1078d79cc": "Ymultichange(Yparameterchange,Ybodychange)",
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": "Ybodychange",
    "4324e1bcd78a98e2fb92c81ee959e25b4193da4f": "Ymultichange(Yparameterchange,Ybodychange)",
    "68843484448fcf45e2c48bed2426d9844ee8128c": "Ymultichange(Yparameterchange,Ybodychange)",
    "72207596be4b293a44607003fa68c4e413e1baaf": "Ybodychange",
    "09e5af76f333f2924b5034bca8adfdcc99723a96": "Ybodychange",
    "fb9cdcfa60cb641faded2d3843c81e969ac33147": "Yintroduced"
  },
  "changeHistoryDetails": {
    "091ad974cd29fae0cf8fbc98ab84900a1a324839": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13286. [SBN read] Add haadmin commands to transition between standby and observer. Contributed by Chao Sun.\n",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "091ad974cd29fae0cf8fbc98ab84900a1a324839",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "14/02/18 8:20 AM",
      "commitNameOld": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 313.05,
      "commitsBetweenForRepo": 3004,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   private void preFailoverChecks(HAServiceTarget from,\n                                  HAServiceTarget target,\n                                  boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n     HAServiceProtocol toSvc;\n \n     if (from.getAddress().equals(target.getAddress())) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover a service to itself\");\n     }\n \n     try {\n       toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n-          \"Can\u0027t failover to an active service\");\n+          \"Can\u0027t failover to an \" + toSvcStatus.getState() + \" service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n             target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: {}\",\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc, createReqInfo());\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void preFailoverChecks(HAServiceTarget from,\n                                 HAServiceTarget target,\n                                 boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    if (from.getAddress().equals(target.getAddress())) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover a service to itself\");\n    }\n\n    try {\n      toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an \" + toSvcStatus.getState() + \" service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: {}\",\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc, createReqInfo());\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   private void preFailoverChecks(HAServiceTarget from,\n                                  HAServiceTarget target,\n                                  boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n     HAServiceProtocol toSvc;\n \n     if (from.getAddress().equals(target.getAddress())) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover a service to itself\");\n     }\n \n     try {\n       toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + target;\n-      LOG.error(msg + \": \" + e.getLocalizedMessage());\n+      LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n             target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n-        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n+        LOG.warn(\"Service is not ready to become active, but forcing: {}\",\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc, createReqInfo());\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void preFailoverChecks(HAServiceTarget from,\n                                 HAServiceTarget target,\n                                 boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    if (from.getAddress().equals(target.getAddress())) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover a service to itself\");\n    }\n\n    try {\n      toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: {}\",\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc, createReqInfo());\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8247. Add a config to enable auto-HA, which disables manual FailoverController. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1324566 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 10:40 PM",
      "commitName": "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "03/04/12 1:41 PM",
      "commitNameOld": "84ff2d6d066ee7d854dfcb93bb85df7b98a3d761",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 7.37,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   private void preFailoverChecks(HAServiceTarget from,\n                                  HAServiceTarget target,\n                                  boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n     HAServiceProtocol toSvc;\n \n     if (from.getAddress().equals(target.getAddress())) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover a service to itself\");\n     }\n \n     try {\n       toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + target;\n-      LOG.error(msg, e);\n+      LOG.error(msg + \": \" + e.getLocalizedMessage());\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n             target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n-      HAServiceProtocolHelper.monitorHealth(toSvc);\n+      HAServiceProtocolHelper.monitorHealth(toSvc, createReqInfo());\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void preFailoverChecks(HAServiceTarget from,\n                                 HAServiceTarget target,\n                                 boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    if (from.getAddress().equals(target.getAddress())) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover a service to itself\");\n    }\n\n    try {\n      toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg + \": \" + e.getLocalizedMessage());\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc, createReqInfo());\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-8236. haadmin should have configurable timeouts for failover commands. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308235 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/12 8:48 PM",
      "commitName": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-8236. haadmin should have configurable timeouts for failover commands. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308235 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/04/12 8:48 PM",
          "commitName": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/03/12 8:48 AM",
          "commitNameOld": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 3.5,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,48 @@\n-  private static void preFailoverChecks(HAServiceTarget from,\n-                                        HAServiceTarget target,\n-                                        boolean forceActive)\n+  private void preFailoverChecks(HAServiceTarget from,\n+                                 HAServiceTarget target,\n+                                 boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n     HAServiceProtocol toSvc;\n \n     if (from.getAddress().equals(target.getAddress())) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover a service to itself\");\n     }\n \n     try {\n-      toSvc \u003d target.getProxy();\n+      toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n             target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void preFailoverChecks(HAServiceTarget from,\n                                 HAServiceTarget target,\n                                 boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    if (from.getAddress().equals(target.getAddress())) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover a service to itself\");\n    }\n\n    try {\n      toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8236. haadmin should have configurable timeouts for failover commands. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308235 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/04/12 8:48 PM",
          "commitName": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/03/12 8:48 AM",
          "commitNameOld": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 3.5,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,48 @@\n-  private static void preFailoverChecks(HAServiceTarget from,\n-                                        HAServiceTarget target,\n-                                        boolean forceActive)\n+  private void preFailoverChecks(HAServiceTarget from,\n+                                 HAServiceTarget target,\n+                                 boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n     HAServiceProtocol toSvc;\n \n     if (from.getAddress().equals(target.getAddress())) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover a service to itself\");\n     }\n \n     try {\n-      toSvc \u003d target.getProxy();\n+      toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n             target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void preFailoverChecks(HAServiceTarget from,\n                                 HAServiceTarget target,\n                                 boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    if (from.getAddress().equals(target.getAddress())) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover a service to itself\");\n    }\n\n    try {\n      toSvc \u003d target.getProxy(conf, rpcTimeoutToNewActive);\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "978404d1a83ecaee0ebed3a8ce16601dcfe4c076": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8208. Disallow self failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1306935 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/03/12 8:48 AM",
      "commitName": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8208. Disallow self failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1306935 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/03/12 8:48 AM",
          "commitName": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "26/03/12 4:37 PM",
          "commitNameOld": "578f413778a6f005a35d18d7f015df128aeded5b",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.67,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,48 @@\n-  private static void preFailoverChecks(HAServiceTarget target,\n+  private static void preFailoverChecks(HAServiceTarget from,\n+                                        HAServiceTarget target,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n     HAServiceProtocol toSvc;\n \n+    if (from.getAddress().equals(target.getAddress())) {\n+      throw new FailoverFailedException(\n+          \"Can\u0027t failover a service to itself\");\n+    }\n+\n     try {\n       toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n             target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceTarget from,\n                                        HAServiceTarget target,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    if (from.getAddress().equals(target.getAddress())) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover a service to itself\");\n    }\n\n    try {\n      toSvc \u003d target.getProxy();\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[target-HAServiceTarget, forceActive-boolean]",
            "newValue": "[from-HAServiceTarget, target-HAServiceTarget, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8208. Disallow self failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1306935 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/03/12 8:48 AM",
          "commitName": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "26/03/12 4:37 PM",
          "commitNameOld": "578f413778a6f005a35d18d7f015df128aeded5b",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.67,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,48 @@\n-  private static void preFailoverChecks(HAServiceTarget target,\n+  private static void preFailoverChecks(HAServiceTarget from,\n+                                        HAServiceTarget target,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n     HAServiceProtocol toSvc;\n \n+    if (from.getAddress().equals(target.getAddress())) {\n+      throw new FailoverFailedException(\n+          \"Can\u0027t failover a service to itself\");\n+    }\n+\n     try {\n       toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n             target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceTarget from,\n                                        HAServiceTarget target,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    if (from.getAddress().equals(target.getAddress())) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover a service to itself\");\n    }\n\n    try {\n      toSvc \u003d target.getProxy();\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "840df19ceecca1be26c572da2afe2f4d5f958b24": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305195 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/12 6:54 PM",
      "commitName": "840df19ceecca1be26c572da2afe2f4d5f958b24",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305195 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 6:54 PM",
          "commitName": "840df19ceecca1be26c572da2afe2f4d5f958b24",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/03/12 2:38 PM",
          "commitNameOld": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.18,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,42 @@\n-  private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        InetSocketAddress toSvcAddr,\n+  private static void preFailoverChecks(HAServiceTarget target,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n+    HAServiceProtocol toSvc;\n \n     try {\n+      toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n+      String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n-            toSvcAddr + \" is not ready to become active: \" +\n+            target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceTarget target,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    try {\n      toSvc \u003d target.getProxy();\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, forceActive-boolean]",
            "newValue": "[target-HAServiceTarget, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305195 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 6:54 PM",
          "commitName": "840df19ceecca1be26c572da2afe2f4d5f958b24",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/03/12 2:38 PM",
          "commitNameOld": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.18,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,42 @@\n-  private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        InetSocketAddress toSvcAddr,\n+  private static void preFailoverChecks(HAServiceTarget target,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n+    HAServiceProtocol toSvc;\n \n     try {\n+      toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n+      String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n-            toSvcAddr + \" is not ready to become active: \" +\n+            target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceTarget target,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    try {\n      toSvc \u003d target.getProxy();\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "39775dca68643b37a3b9a5ae7bc8eea1418f60d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Revert HADOOP-8193 from r1304967. Patch introduced some NPEs in a test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305152 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/12 2:38 PM",
      "commitName": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert HADOOP-8193 from r1304967. Patch introduced some NPEs in a test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305152 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 2:38 PM",
          "commitName": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "24/03/12 4:48 PM",
          "commitNameOld": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,41 @@\n-  private static void preFailoverChecks(HAServiceTarget target,\n+  private static void preFailoverChecks(HAServiceProtocol toSvc,\n+                                        InetSocketAddress toSvcAddr,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n-    HAServiceProtocol toSvc;\n \n     try {\n-      toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + target;\n+      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n-            target + \" is not ready to become active: \" +\n+            toSvcAddr + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        InetSocketAddress toSvcAddr,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n\n    try {\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            toSvcAddr + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[target-HAServiceTarget, forceActive-boolean]",
            "newValue": "[toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert HADOOP-8193 from r1304967. Patch introduced some NPEs in a test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305152 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 2:38 PM",
          "commitName": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "24/03/12 4:48 PM",
          "commitNameOld": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,41 @@\n-  private static void preFailoverChecks(HAServiceTarget target,\n+  private static void preFailoverChecks(HAServiceProtocol toSvc,\n+                                        InetSocketAddress toSvcAddr,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n-    HAServiceProtocol toSvc;\n \n     try {\n-      toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + target;\n+      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n-            target + \" is not ready to become active: \" +\n+            toSvcAddr + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        InetSocketAddress toSvcAddr,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n\n    try {\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            toSvcAddr + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "90ea037d21be08821fc9c95b80bec1e1078d79cc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304967 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/12 4:48 PM",
      "commitName": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304967 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/12 4:48 PM",
          "commitName": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "22/03/12 11:29 PM",
          "commitNameOld": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.72,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,42 @@\n-  private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        InetSocketAddress toSvcAddr,\n+  private static void preFailoverChecks(HAServiceTarget target,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n+    HAServiceProtocol toSvc;\n \n     try {\n+      toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n+      String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n-            toSvcAddr + \" is not ready to become active: \" +\n+            target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceTarget target,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    try {\n      toSvc \u003d target.getProxy();\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, forceActive-boolean]",
            "newValue": "[target-HAServiceTarget, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304967 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/12 4:48 PM",
          "commitName": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "22/03/12 11:29 PM",
          "commitNameOld": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.72,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,41 +1,42 @@\n-  private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        InetSocketAddress toSvcAddr,\n+  private static void preFailoverChecks(HAServiceTarget target,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceStatus toSvcStatus;\n+    HAServiceProtocol toSvc;\n \n     try {\n+      toSvc \u003d target.getProxy();\n       toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n+      String msg \u003d \"Unable to get service state for \" + target;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n     if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     \n     if (!toSvcStatus.isReadyToBecomeActive()) {\n       String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n       if (!forceActive) {\n         throw new FailoverFailedException(\n-            toSvcAddr + \" is not ready to become active: \" +\n+            target + \" is not ready to become active: \" +\n             notReadyReason);\n       } else {\n         LOG.warn(\"Service is not ready to become active, but forcing: \" +\n             notReadyReason);\n       }\n     }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceTarget target,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n    HAServiceProtocol toSvc;\n\n    try {\n      toSvc \u003d target.getProxy();\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + target;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            target + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/12 11:29 PM",
      "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "09/02/12 4:46 PM",
      "commitNameOld": "8af96c7b22f92ab84c142c37252f85df7b9b98aa",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 42.24,
      "commitsBetweenForRepo": 283,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                         InetSocketAddress toSvcAddr,\n                                         boolean forceActive)\n       throws FailoverFailedException {\n-    HAServiceState toSvcState;\n+    HAServiceStatus toSvcStatus;\n \n     try {\n-      toSvcState \u003d toSvc.getServiceState();\n+      toSvcStatus \u003d toSvc.getServiceStatus();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n \n-    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n+    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n+    \n+    if (!toSvcStatus.isReadyToBecomeActive()) {\n+      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n+      if (!forceActive) {\n+        throw new FailoverFailedException(\n+            toSvcAddr + \" is not ready to become active: \" +\n+            notReadyReason);\n+      } else {\n+        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n+            notReadyReason);\n+      }\n+    }\n \n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n-\n-    try {\n-      if (!toSvc.readyToBecomeActive()) {\n-        if (!forceActive) {\n-          throw new FailoverFailedException(\n-              toSvcAddr + \" is not ready to become active\");\n-        }\n-      }\n-    } catch (IOException e) {\n-      throw new FailoverFailedException(\n-          \"Got an IO exception\", e);\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        InetSocketAddress toSvcAddr,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceStatus toSvcStatus;\n\n    try {\n      toSvcStatus \u003d toSvc.getServiceStatus();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n\n    if (!toSvcStatus.getState().equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    \n    if (!toSvcStatus.isReadyToBecomeActive()) {\n      String notReadyReason \u003d toSvcStatus.getNotReadyReason();\n      if (!forceActive) {\n        throw new FailoverFailedException(\n            toSvcAddr + \" is not ready to become active: \" +\n            notReadyReason);\n      } else {\n        LOG.warn(\"Service is not ready to become active, but forcing: \" +\n            notReadyReason);\n      }\n    }\n\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "4324e1bcd78a98e2fb92c81ee959e25b4193da4f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7991. HA: the FailoverController should check the standby is ready before failing over. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1239774 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/02/12 11:20 AM",
      "commitName": "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7991. HA: the FailoverController should check the standby is ready before failing over. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1239774 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/02/12 11:20 AM",
          "commitName": "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "30/01/12 2:42 PM",
          "commitNameOld": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 2.86,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,37 @@\n   private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        InetSocketAddress toSvcAddr)\n+                                        InetSocketAddress toSvcAddr,\n+                                        boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceState toSvcState;\n     try {\n       toSvcState \u003d toSvc.getServiceState();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n     if (!toSvcState.equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n-    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n+    try {\n+      if (!toSvc.readyToBecomeActive()) {\n+        if (!forceActive) {\n+          throw new FailoverFailedException(\n+              toSvcAddr + \" is not ready to become active\");\n+        }\n+      }\n+    } catch (IOException e) {\n+      throw new FailoverFailedException(\n+          \"Got an IO exception\", e);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        InetSocketAddress toSvcAddr,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceState toSvcState;\n    try {\n      toSvcState \u003d toSvc.getServiceState();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n    try {\n      if (!toSvc.readyToBecomeActive()) {\n        if (!forceActive) {\n          throw new FailoverFailedException(\n              toSvcAddr + \" is not ready to become active\");\n        }\n      }\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress]",
            "newValue": "[toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7991. HA: the FailoverController should check the standby is ready before failing over. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1239774 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/02/12 11:20 AM",
          "commitName": "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "30/01/12 2:42 PM",
          "commitNameOld": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 2.86,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,37 @@\n   private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        InetSocketAddress toSvcAddr)\n+                                        InetSocketAddress toSvcAddr,\n+                                        boolean forceActive)\n       throws FailoverFailedException {\n     HAServiceState toSvcState;\n     try {\n       toSvcState \u003d toSvc.getServiceState();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n     if (!toSvcState.equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an IO exception\", e);\n     }\n-    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n+    try {\n+      if (!toSvc.readyToBecomeActive()) {\n+        if (!forceActive) {\n+          throw new FailoverFailedException(\n+              toSvcAddr + \" is not ready to become active\");\n+        }\n+      }\n+    } catch (IOException e) {\n+      throw new FailoverFailedException(\n+          \"Got an IO exception\", e);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        InetSocketAddress toSvcAddr,\n                                        boolean forceActive)\n      throws FailoverFailedException {\n    HAServiceState toSvcState;\n    try {\n      toSvcState \u003d toSvc.getServiceState();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n    try {\n      if (!toSvc.readyToBecomeActive()) {\n        if (!forceActive) {\n          throw new FailoverFailedException(\n              toSvcAddr + \" is not ready to become active\");\n        }\n      }\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "68843484448fcf45e2c48bed2426d9844ee8128c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7938. HA: the FailoverController should optionally fence the active during failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1238058 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/12 2:42 PM",
      "commitName": "68843484448fcf45e2c48bed2426d9844ee8128c",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7938. HA: the FailoverController should optionally fence the active during failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1238058 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/12 2:42 PM",
          "commitName": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "12/01/12 6:30 PM",
          "commitNameOld": "72207596be4b293a44607003fa68c4e413e1baaf",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 17.84,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n   private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        String toSvcName)\n+                                        InetSocketAddress toSvcAddr)\n       throws FailoverFailedException {\n     HAServiceState toSvcState;\n     try {\n       toSvcState \u003d toSvc.getServiceState();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + toSvcName;\n+      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n     if (!toSvcState.equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n-          \"Got an io exception\", e);\n+          \"Got an IO exception\", e);\n     }\n     // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        InetSocketAddress toSvcAddr)\n      throws FailoverFailedException {\n    HAServiceState toSvcState;\n    try {\n      toSvcState \u003d toSvc.getServiceState();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[toSvc-HAServiceProtocol, toSvcName-String]",
            "newValue": "[toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7938. HA: the FailoverController should optionally fence the active during failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1238058 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/12 2:42 PM",
          "commitName": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "12/01/12 6:30 PM",
          "commitNameOld": "72207596be4b293a44607003fa68c4e413e1baaf",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 17.84,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n   private static void preFailoverChecks(HAServiceProtocol toSvc,\n-                                        String toSvcName)\n+                                        InetSocketAddress toSvcAddr)\n       throws FailoverFailedException {\n     HAServiceState toSvcState;\n     try {\n       toSvcState \u003d toSvc.getServiceState();\n     } catch (IOException e) {\n-      String msg \u003d \"Unable to get service state for \" + toSvcName;\n+      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n     if (!toSvcState.equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     try {\n       HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n-          \"Got an io exception\", e);\n+          \"Got an IO exception\", e);\n     }\n     // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        InetSocketAddress toSvcAddr)\n      throws FailoverFailedException {\n    HAServiceState toSvcState;\n    try {\n      toSvcState \u003d toSvc.getServiceState();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcAddr;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an IO exception\", e);\n    }\n    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "72207596be4b293a44607003fa68c4e413e1baaf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7972. HAServiceProtocol exceptions need to be unwrapped. Contributed by Hari Mankude.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1230861 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/01/12 6:30 PM",
      "commitName": "72207596be4b293a44607003fa68c4e413e1baaf",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "11/01/12 5:39 PM",
      "commitNameOld": "09e5af76f333f2924b5034bca8adfdcc99723a96",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.04,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                         String toSvcName)\n       throws FailoverFailedException {\n     HAServiceState toSvcState;\n     try {\n       toSvcState \u003d toSvc.getServiceState();\n     } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + toSvcName;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n     if (!toSvcState.equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     try {\n-      toSvc.monitorHealth();\n+      HAServiceProtocolHelper.monitorHealth(toSvc);\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n     } catch (IOException e) {\n       throw new FailoverFailedException(\n           \"Got an io exception\", e);\n     }\n     // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        String toSvcName)\n      throws FailoverFailedException {\n    HAServiceState toSvcState;\n    try {\n      toSvcState \u003d toSvc.getServiceState();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcName;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    try {\n      HAServiceProtocolHelper.monitorHealth(toSvc);\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an io exception\", e);\n    }\n    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "09e5af76f333f2924b5034bca8adfdcc99723a96": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7970. HAServiceProtocol methods must throw IOException.Contributed by Hari Mankude.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1230351 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/01/12 5:39 PM",
      "commitName": "09e5af76f333f2924b5034bca8adfdcc99723a96",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "05/01/12 1:02 PM",
      "commitNameOld": "fb9cdcfa60cb641faded2d3843c81e969ac33147",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 6.19,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                         String toSvcName)\n       throws FailoverFailedException {\n     HAServiceState toSvcState;\n     try {\n       toSvcState \u003d toSvc.getServiceState();\n-    } catch (Exception e) {\n+    } catch (IOException e) {\n       String msg \u003d \"Unable to get service state for \" + toSvcName;\n       LOG.error(msg, e);\n       throw new FailoverFailedException(msg, e);\n     }\n     if (!toSvcState.equals(HAServiceState.STANDBY)) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an active service\");\n     }\n     try {\n       toSvc.monitorHealth();\n     } catch (HealthCheckFailedException hce) {\n       throw new FailoverFailedException(\n           \"Can\u0027t failover to an unhealthy service\", hce);\n+    } catch (IOException e) {\n+      throw new FailoverFailedException(\n+          \"Got an io exception\", e);\n     }\n     // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        String toSvcName)\n      throws FailoverFailedException {\n    HAServiceState toSvcState;\n    try {\n      toSvcState \u003d toSvc.getServiceState();\n    } catch (IOException e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcName;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    try {\n      toSvc.monitorHealth();\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    } catch (IOException e) {\n      throw new FailoverFailedException(\n          \"Got an io exception\", e);\n    }\n    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "fb9cdcfa60cb641faded2d3843c81e969ac33147": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7924. \u2029FailoverController for client-based configuration. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1227836 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 1:02 PM",
      "commitName": "fb9cdcfa60cb641faded2d3843c81e969ac33147",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,23 @@\n+  private static void preFailoverChecks(HAServiceProtocol toSvc,\n+                                        String toSvcName)\n+      throws FailoverFailedException {\n+    HAServiceState toSvcState;\n+    try {\n+      toSvcState \u003d toSvc.getServiceState();\n+    } catch (Exception e) {\n+      String msg \u003d \"Unable to get service state for \" + toSvcName;\n+      LOG.error(msg, e);\n+      throw new FailoverFailedException(msg, e);\n+    }\n+    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n+      throw new FailoverFailedException(\n+          \"Can\u0027t failover to an active service\");\n+    }\n+    try {\n+      toSvc.monitorHealth();\n+    } catch (HealthCheckFailedException hce) {\n+      throw new FailoverFailedException(\n+          \"Can\u0027t failover to an unhealthy service\", hce);\n+    }\n+    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void preFailoverChecks(HAServiceProtocol toSvc,\n                                        String toSvcName)\n      throws FailoverFailedException {\n    HAServiceState toSvcState;\n    try {\n      toSvcState \u003d toSvc.getServiceState();\n    } catch (Exception e) {\n      String msg \u003d \"Unable to get service state for \" + toSvcName;\n      LOG.error(msg, e);\n      throw new FailoverFailedException(msg, e);\n    }\n    if (!toSvcState.equals(HAServiceState.STANDBY)) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an active service\");\n    }\n    try {\n      toSvc.monitorHealth();\n    } catch (HealthCheckFailedException hce) {\n      throw new FailoverFailedException(\n          \"Can\u0027t failover to an unhealthy service\", hce);\n    }\n    // TODO(HA): ask toSvc if it\u0027s capable. Eg not in SM.\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java"
    }
  }
}