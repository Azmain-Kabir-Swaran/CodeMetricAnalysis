{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "INodesInPath.java",
  "functionName": "validate",
  "functionId": "validate",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
  "functionStartLine": 505,
  "functionEndLine": 527,
  "numCommitsSeen": 103,
  "timeTaken": 2885,
  "changeHistory": [
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "9280468b1acfa346250d0212b5cb7486dc83705c"
  ],
  "changeHistoryShort": {
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Yrename",
    "9280468b1acfa346250d0212b5cb7486dc83705c": "Ymovefromfile"
  },
  "changeHistoryDetails": {
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "05/12/14 2:17 PM",
      "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   void validate() {\n-    // check parent up to snapshotRootIndex or numNonNull\n-    final int n \u003d snapshotRootIndex \u003e\u003d 0? snapshotRootIndex + 1: numNonNull;  \n+    // check parent up to snapshotRootIndex if this is a snapshot path\n     int i \u003d 0;\n     if (inodes[i] !\u003d null) {\n-      for(i++; i \u003c n \u0026\u0026 inodes[i] !\u003d null; i++) {\n+      for(i++; i \u003c inodes.length \u0026\u0026 inodes[i] !\u003d null; i++) {\n         final INodeDirectory parent_i \u003d inodes[i].getParent();\n         final INodeDirectory parent_i_1 \u003d inodes[i-1].getParent();\n         if (parent_i !\u003d inodes[i-1] \u0026\u0026\n             (parent_i_1 \u003d\u003d null || !parent_i_1.isSnapshottable()\n                 || parent_i !\u003d parent_i_1)) {\n           throw new AssertionError(\n               \"inodes[\" + i + \"].getParent() !\u003d inodes[\" + (i-1)\n               + \"]\\n  inodes[\" + i + \"]\u003d\" + inodes[i].toDetailString()\n               + \"\\n  inodes[\" + (i-1) + \"]\u003d\" + inodes[i-1].toDetailString()\n               + \"\\n this\u003d\" + toString(false));\n         }\n       }\n     }\n-    if (i !\u003d n) {\n-      throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + n\n+    if (i !\u003d inodes.length) {\n+      throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + inodes.length\n           + \", this\u003d\" + toString(false));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void validate() {\n    // check parent up to snapshotRootIndex if this is a snapshot path\n    int i \u003d 0;\n    if (inodes[i] !\u003d null) {\n      for(i++; i \u003c inodes.length \u0026\u0026 inodes[i] !\u003d null; i++) {\n        final INodeDirectory parent_i \u003d inodes[i].getParent();\n        final INodeDirectory parent_i_1 \u003d inodes[i-1].getParent();\n        if (parent_i !\u003d inodes[i-1] \u0026\u0026\n            (parent_i_1 \u003d\u003d null || !parent_i_1.isSnapshottable()\n                || parent_i !\u003d parent_i_1)) {\n          throw new AssertionError(\n              \"inodes[\" + i + \"].getParent() !\u003d inodes[\" + (i-1)\n              + \"]\\n  inodes[\" + i + \"]\u003d\" + inodes[i].toDetailString()\n              + \"\\n  inodes[\" + (i-1) + \"]\u003d\" + inodes[i-1].toDetailString()\n              + \"\\n this\u003d\" + toString(false));\n        }\n      }\n    }\n    if (i !\u003d inodes.length) {\n      throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + inodes.length\n          + \", this\u003d\" + toString(false));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {}
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Yrename",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "29/09/14 12:58 PM",
      "commitNameOld": "f0293f11a85176afc04d809574c9126a80b700cc",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 67.1,
      "commitsBetweenForRepo": 581,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-  void vaildate() {\n+  void validate() {\n     // check parent up to snapshotRootIndex or numNonNull\n     final int n \u003d snapshotRootIndex \u003e\u003d 0? snapshotRootIndex + 1: numNonNull;  \n     int i \u003d 0;\n     if (inodes[i] !\u003d null) {\n       for(i++; i \u003c n \u0026\u0026 inodes[i] !\u003d null; i++) {\n         final INodeDirectory parent_i \u003d inodes[i].getParent();\n         final INodeDirectory parent_i_1 \u003d inodes[i-1].getParent();\n         if (parent_i !\u003d inodes[i-1] \u0026\u0026\n             (parent_i_1 \u003d\u003d null || !parent_i_1.isSnapshottable()\n                 || parent_i !\u003d parent_i_1)) {\n           throw new AssertionError(\n               \"inodes[\" + i + \"].getParent() !\u003d inodes[\" + (i-1)\n               + \"]\\n  inodes[\" + i + \"]\u003d\" + inodes[i].toDetailString()\n               + \"\\n  inodes[\" + (i-1) + \"]\u003d\" + inodes[i-1].toDetailString()\n               + \"\\n this\u003d\" + toString(false));\n         }\n       }\n     }\n     if (i !\u003d n) {\n       throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + n\n           + \", this\u003d\" + toString(false));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void validate() {\n    // check parent up to snapshotRootIndex or numNonNull\n    final int n \u003d snapshotRootIndex \u003e\u003d 0? snapshotRootIndex + 1: numNonNull;  \n    int i \u003d 0;\n    if (inodes[i] !\u003d null) {\n      for(i++; i \u003c n \u0026\u0026 inodes[i] !\u003d null; i++) {\n        final INodeDirectory parent_i \u003d inodes[i].getParent();\n        final INodeDirectory parent_i_1 \u003d inodes[i-1].getParent();\n        if (parent_i !\u003d inodes[i-1] \u0026\u0026\n            (parent_i_1 \u003d\u003d null || !parent_i_1.isSnapshottable()\n                || parent_i !\u003d parent_i_1)) {\n          throw new AssertionError(\n              \"inodes[\" + i + \"].getParent() !\u003d inodes[\" + (i-1)\n              + \"]\\n  inodes[\" + i + \"]\u003d\" + inodes[i].toDetailString()\n              + \"\\n  inodes[\" + (i-1) + \"]\u003d\" + inodes[i-1].toDetailString()\n              + \"\\n this\u003d\" + toString(false));\n        }\n      }\n    }\n    if (i !\u003d n) {\n      throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + n\n          + \", this\u003d\" + toString(false));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {
        "oldValue": "vaildate",
        "newValue": "validate"
      }
    },
    "9280468b1acfa346250d0212b5cb7486dc83705c": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-4550. Refactor INodeDirectory.INodesInPath to a standalone class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1468725 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/04/13 7:41 PM",
      "commitName": "9280468b1acfa346250d0212b5cb7486dc83705c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/04/13 4:16 PM",
      "commitNameOld": "38bd7061c1a8408b74ed619b25f948cd3cd85d7a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-    void vaildate() {\n-      // check parent up to snapshotRootIndex or numNonNull\n-      final int n \u003d snapshotRootIndex \u003e\u003d 0? snapshotRootIndex + 1: numNonNull;  \n-      int i \u003d 0;\n-      if (inodes[i] !\u003d null) {\n-        for(i++; i \u003c n \u0026\u0026 inodes[i] !\u003d null; i++) {\n-          final INodeDirectory parent_i \u003d inodes[i].getParent();\n-          final INodeDirectory parent_i_1 \u003d inodes[i-1].getParent();\n-          if (parent_i !\u003d inodes[i-1] \u0026\u0026\n-              (parent_i_1 \u003d\u003d null || !parent_i_1.isSnapshottable()\n-                  || parent_i !\u003d parent_i_1)) {\n-            throw new AssertionError(\n-                \"inodes[\" + i + \"].getParent() !\u003d inodes[\" + (i-1)\n-                + \"]\\n  inodes[\" + i + \"]\u003d\" + inodes[i].toDetailString()\n-                + \"\\n  inodes[\" + (i-1) + \"]\u003d\" + inodes[i-1].toDetailString()\n-                + \"\\n this\u003d\" + toString(false));\n-          }\n+  void vaildate() {\n+    // check parent up to snapshotRootIndex or numNonNull\n+    final int n \u003d snapshotRootIndex \u003e\u003d 0? snapshotRootIndex + 1: numNonNull;  \n+    int i \u003d 0;\n+    if (inodes[i] !\u003d null) {\n+      for(i++; i \u003c n \u0026\u0026 inodes[i] !\u003d null; i++) {\n+        final INodeDirectory parent_i \u003d inodes[i].getParent();\n+        final INodeDirectory parent_i_1 \u003d inodes[i-1].getParent();\n+        if (parent_i !\u003d inodes[i-1] \u0026\u0026\n+            (parent_i_1 \u003d\u003d null || !parent_i_1.isSnapshottable()\n+                || parent_i !\u003d parent_i_1)) {\n+          throw new AssertionError(\n+              \"inodes[\" + i + \"].getParent() !\u003d inodes[\" + (i-1)\n+              + \"]\\n  inodes[\" + i + \"]\u003d\" + inodes[i].toDetailString()\n+              + \"\\n  inodes[\" + (i-1) + \"]\u003d\" + inodes[i-1].toDetailString()\n+              + \"\\n this\u003d\" + toString(false));\n         }\n       }\n-      if (i !\u003d n) {\n-        throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + n\n-            + \", this\u003d\" + toString(false));\n-      }\n-    }\n\\ No newline at end of file\n+    }\n+    if (i !\u003d n) {\n+      throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + n\n+          + \", this\u003d\" + toString(false));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void vaildate() {\n    // check parent up to snapshotRootIndex or numNonNull\n    final int n \u003d snapshotRootIndex \u003e\u003d 0? snapshotRootIndex + 1: numNonNull;  \n    int i \u003d 0;\n    if (inodes[i] !\u003d null) {\n      for(i++; i \u003c n \u0026\u0026 inodes[i] !\u003d null; i++) {\n        final INodeDirectory parent_i \u003d inodes[i].getParent();\n        final INodeDirectory parent_i_1 \u003d inodes[i-1].getParent();\n        if (parent_i !\u003d inodes[i-1] \u0026\u0026\n            (parent_i_1 \u003d\u003d null || !parent_i_1.isSnapshottable()\n                || parent_i !\u003d parent_i_1)) {\n          throw new AssertionError(\n              \"inodes[\" + i + \"].getParent() !\u003d inodes[\" + (i-1)\n              + \"]\\n  inodes[\" + i + \"]\u003d\" + inodes[i].toDetailString()\n              + \"\\n  inodes[\" + (i-1) + \"]\u003d\" + inodes[i-1].toDetailString()\n              + \"\\n this\u003d\" + toString(false));\n        }\n      }\n    }\n    if (i !\u003d n) {\n      throw new AssertionError(\"i \u003d \" + i + \" !\u003d \" + n\n          + \", this\u003d\" + toString(false));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
        "oldMethodName": "vaildate",
        "newMethodName": "vaildate"
      }
    }
  }
}