{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSAdmin.java",
  "functionName": "printUsage",
  "functionId": "printUsage___cmd-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
  "functionStartLine": 2088,
  "functionEndLine": 2199,
  "numCommitsSeen": 118,
  "timeTaken": 13773,
  "changeHistory": [
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b",
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f",
    "bf5c94899537011465350d5d999fad9ffaeb605d",
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
    "f8cd55fe33665faf2d1b14df231516fc891118fc",
    "fb68980959f95f0d89e86f91909867724ad01791",
    "8d9084eb62f4593d4dfeb618abacf6ae89019109",
    "93fa48fcf243dc759db1736af145633da760f937",
    "25f0a9b3ab136d44f70eb2805598e2df8325612a",
    "c970f1d00525e4273075cff7406dcbd71305abd5",
    "d62b4a4de75edb840df6634f49cb4beb74e3fb07",
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
    "0f0e897bf1ff8383f3f524ba83161969531b0772",
    "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0",
    "f80c9888fa0c1a11967560be3c37dfc1e30da2c3",
    "5b0d060d2a868cefcd12252140d5a8e310738aca",
    "baf794dc404ac54f4e8332654eadfac1bebacb8f",
    "1861b32eb551a07d748afc6205ea9573f9503eda",
    "9e941d9f99168cae01f8d50622a616fc26c196d9",
    "185200e7096d15a5c2c2d59b7c7705362820aebf",
    "3b0db60113ec7fab4e7cc8a0f811646d857547b0",
    "34e9173c00f7e1ae55dec365850849c793cde8e3",
    "9445859930b8653cb0b9a0e1abf38cc05dbe2658",
    "d00605f8f0214ed8e2304db8688e140f0a1d62d8",
    "1a68f13521e6902943bea7b16369ac9a4e6943f5",
    "5fe73a986e6850b1cc07bc52fe8b920d1437641d",
    "59e968a114dfe1b513f31424211116f23525def8",
    "4fde5c01901b6acb4363747d01603664a0283fc4",
    "c334cc89a8f42c98ab4dad02ae41c5a02a855974",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
    "ce1a7ec9755f17527c29b0db713d7e01750e10c9",
    "dcea80a21b96e71e4dc3dca27b13444a327ad1a9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "8390152d08306caad31b78abbd509e5ea8580671",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b": "Ybodychange",
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f": "Ybodychange",
    "bf5c94899537011465350d5d999fad9ffaeb605d": "Ybodychange",
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090": "Ybodychange",
    "f8cd55fe33665faf2d1b14df231516fc891118fc": "Ybodychange",
    "fb68980959f95f0d89e86f91909867724ad01791": "Ybodychange",
    "8d9084eb62f4593d4dfeb618abacf6ae89019109": "Ybodychange",
    "93fa48fcf243dc759db1736af145633da760f937": "Ybodychange",
    "25f0a9b3ab136d44f70eb2805598e2df8325612a": "Ybodychange",
    "c970f1d00525e4273075cff7406dcbd71305abd5": "Ybodychange",
    "d62b4a4de75edb840df6634f49cb4beb74e3fb07": "Ybodychange",
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": "Ybodychange",
    "0f0e897bf1ff8383f3f524ba83161969531b0772": "Ybodychange",
    "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0": "Ybodychange",
    "f80c9888fa0c1a11967560be3c37dfc1e30da2c3": "Ybodychange",
    "5b0d060d2a868cefcd12252140d5a8e310738aca": "Ybodychange",
    "baf794dc404ac54f4e8332654eadfac1bebacb8f": "Ybodychange",
    "1861b32eb551a07d748afc6205ea9573f9503eda": "Ybodychange",
    "9e941d9f99168cae01f8d50622a616fc26c196d9": "Ybodychange",
    "185200e7096d15a5c2c2d59b7c7705362820aebf": "Ybodychange",
    "3b0db60113ec7fab4e7cc8a0f811646d857547b0": "Ybodychange",
    "34e9173c00f7e1ae55dec365850849c793cde8e3": "Ybodychange",
    "9445859930b8653cb0b9a0e1abf38cc05dbe2658": "Ybodychange",
    "d00605f8f0214ed8e2304db8688e140f0a1d62d8": "Ybodychange",
    "1a68f13521e6902943bea7b16369ac9a4e6943f5": "Ybodychange",
    "5fe73a986e6850b1cc07bc52fe8b920d1437641d": "Ybodychange",
    "59e968a114dfe1b513f31424211116f23525def8": "Ybodychange",
    "4fde5c01901b6acb4363747d01603664a0283fc4": "Ybodychange",
    "c334cc89a8f42c98ab4dad02ae41c5a02a855974": "Ybodychange",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": "Ybodychange",
    "ce1a7ec9755f17527c29b0db713d7e01750e10c9": "Ybodychange",
    "dcea80a21b96e71e4dc3dca27b13444a327ad1a9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "8390152d08306caad31b78abbd509e5ea8580671": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14678. Allow triggerBlockReport to a specific namenode. (#1252). Contributed by Leon Gao.\n\n",
      "commitDate": "16/08/19 8:00 AM",
      "commitName": "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b",
      "commitAuthor": "LeonGao91",
      "commitDateOld": "17/07/19 10:52 AM",
      "commitNameOld": "af0665c7f5b1a28eb2262bae9a577fd908ad79ea",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 29.88,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,112 +1,112 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\"\n           + \" [-enteringmaintenance] [-inmaintenance]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-upgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-upgrade query | finalize]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-refresh \u003chostname:ipc_port\u003e \"\n           + \"\u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:ipc_port]\");\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getVolumeReport datanode-host:ipc_port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n+          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e [-namenode \u003cnamenode_host:ipc_port\u003e]]\");\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-listOpenFiles [-blockingDecommission] [-path \u003cpath\u003e]]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\"\n          + \" [-enteringmaintenance] [-inmaintenance]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-upgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-upgrade query | finalize]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-refresh \u003chostname:ipc_port\u003e \"\n          + \"\u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:ipc_port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:ipc_port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e [-namenode \u003cnamenode_host:ipc_port\u003e]]\");\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-listOpenFiles [-blockingDecommission] [-path \u003cpath\u003e]]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13589: Add dfsAdmin command to query if upgrade is finalized. Contributed by Hanisha Koneru\n",
      "commitDate": "23/05/18 10:15 AM",
      "commitName": "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f",
      "commitAuthor": "Bharat Viswanadham",
      "commitDateOld": "07/02/18 9:40 AM",
      "commitNameOld": "01bd6ab18fa48f4c7cac1497905b52e547962599",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 104.98,
      "commitsBetweenForRepo": 1353,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,109 +1,112 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\"\n           + \" [-enteringmaintenance] [-inmaintenance]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n+    } else if (\"-upgrade\".equals(cmd)) {\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n+          + \" [-upgrade query | finalize]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-refresh \u003chostname:ipc_port\u003e \"\n           + \"\u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:ipc_port]\");\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getVolumeReport datanode-host:ipc_port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-listOpenFiles [-blockingDecommission] [-path \u003cpath\u003e]]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\"\n          + \" [-enteringmaintenance] [-inmaintenance]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-upgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-upgrade query | finalize]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-refresh \u003chostname:ipc_port\u003e \"\n          + \"\u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:ipc_port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:ipc_port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-listOpenFiles [-blockingDecommission] [-path \u003cpath\u003e]]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "bf5c94899537011465350d5d999fad9ffaeb605d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11848. Enhance dfsadmin listOpenFiles command to list files under a given path. Contributed by Yiqun Lin.\n",
      "commitDate": "05/01/18 10:31 PM",
      "commitName": "bf5c94899537011465350d5d999fad9ffaeb605d",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "02/01/18 2:59 PM",
      "commitNameOld": "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
      "commitAuthorOld": "Manoj Govindassamy",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,109 +1,109 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\"\n           + \" [-enteringmaintenance] [-inmaintenance]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-refresh \u003chostname:ipc_port\u003e \"\n           + \"\u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:ipc_port]\");\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getVolumeReport datanode-host:ipc_port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-listOpenFiles [-blockingDecommission]]\");\n+          + \" [-listOpenFiles [-blockingDecommission] [-path \u003cpath\u003e]]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\"\n          + \" [-enteringmaintenance] [-inmaintenance]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-refresh \u003chostname:ipc_port\u003e \"\n          + \"\u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:ipc_port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:ipc_port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-listOpenFiles [-blockingDecommission] [-path \u003cpath\u003e]]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11847. Enhance dfsadmin listOpenFiles command to list files blocking datanode decommissioning.\n",
      "commitDate": "02/01/18 2:59 PM",
      "commitName": "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
      "commitAuthor": "Manoj Govindassamy",
      "commitDateOld": "25/10/17 2:11 PM",
      "commitNameOld": "f66ad1fab958a28ef40c684366c23695237a8e60",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 69.08,
      "commitsBetweenForRepo": 482,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,108 +1,109 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\"\n           + \" [-enteringmaintenance] [-inmaintenance]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-refresh \u003chostname:ipc_port\u003e \"\n           + \"\u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:ipc_port]\");\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getVolumeReport datanode-host:ipc_port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n-      System.err.println(\"Usage: hdfs dfsadmin [-listOpenFiles]\");\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n+          + \" [-listOpenFiles [-blockingDecommission]]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\"\n          + \" [-enteringmaintenance] [-inmaintenance]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-refresh \u003chostname:ipc_port\u003e \"\n          + \"\u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:ipc_port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:ipc_port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-listOpenFiles [-blockingDecommission]]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "f8cd55fe33665faf2d1b14df231516fc891118fc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12067. Correct dfsadmin commands usage message to reflects IPC port. Contributed by steven-wugang.\n",
      "commitDate": "19/07/17 8:21 AM",
      "commitName": "f8cd55fe33665faf2d1b14df231516fc891118fc",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "29/06/17 1:54 PM",
      "commitNameOld": "441378e7e4609d89b7181dacc8ba92b253a962df",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 19.77,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,107 +1,108 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\"\n           + \" [-enteringmaintenance] [-inmaintenance]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n+          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n+          + \" [-refresh \u003chostname:ipc_port\u003e \"\n+          + \"\u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-                         + \" [-refreshNamenodes datanode-host:port]\");\n+                         + \" [-refreshNamenodes datanode-host:ipc_port]\");\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-getVolumeReport datanode-host:port]\");\n+          + \" [-getVolumeReport datanode-host:ipc_port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n+          + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-listOpenFiles]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\"\n          + \" [-enteringmaintenance] [-inmaintenance]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:ipc_port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-refresh \u003chostname:ipc_port\u003e \"\n          + \"\u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:ipc_port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:ipc_port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:ipc_port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-listOpenFiles]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "fb68980959f95f0d89e86f91909867724ad01791": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10480. Add an admin command to list currently open files. Contributed by Manoj Govindassamy.\n",
      "commitDate": "15/06/17 2:46 PM",
      "commitName": "fb68980959f95f0d89e86f91909867724ad01791",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "14/06/17 10:44 AM",
      "commitNameOld": "999c8fcbefc876d9c26c23c5b87a64a81e4f113e",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,105 +1,107 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\"\n           + \" [-enteringmaintenance] [-inmaintenance]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getVolumeReport datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n+    } else if (\"-listOpenFiles\".equals(cmd)) {\n+      System.err.println(\"Usage: hdfs dfsadmin [-listOpenFiles]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\"\n          + \" [-enteringmaintenance] [-inmaintenance]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-listOpenFiles]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "8d9084eb62f4593d4dfeb618abacf6ae89019109": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11359. DFSAdmin report command supports displaying maintenance state datanodes. Contributed by Yiqun Lin.\n",
      "commitDate": "01/06/17 9:48 PM",
      "commitName": "8d9084eb62f4593d4dfeb618abacf6ae89019109",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "16/05/17 9:41 AM",
      "commitNameOld": "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 16.5,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,104 +1,105 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-report] [-live] [-dead] [-decommissioning]\");\n+          + \" [-report] [-live] [-dead] [-decommissioning]\"\n+          + \" [-enteringmaintenance] [-inmaintenance]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getVolumeReport datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\"\n          + \" [-enteringmaintenance] [-inmaintenance]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "93fa48fcf243dc759db1736af145633da760f937": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11417. Add datanode admin command to get the storage info. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "26/04/17 1:43 AM",
      "commitName": "93fa48fcf243dc759db1736af145633da760f937",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "28/02/17 9:15 PM",
      "commitNameOld": "dcd03df9f9e0080d7e179060ffc8148336c31b3e",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 56.14,
      "commitsBetweenForRepo": 324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,101 +1,104 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n           + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n+    } else if (\"-getVolumeReport\".equals(cmd)) {\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n+          + \" [-getVolumeReport datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getVolumeReport datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "25f0a9b3ab136d44f70eb2805598e2df8325612a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9937. Update dfsadmin command line help and HdfsQuotaAdminGuide. Contributed by Kai Sasaki.\n",
      "commitDate": "26/07/16 8:01 AM",
      "commitName": "25f0a9b3ab136d44f70eb2805598e2df8325612a",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "02/06/16 12:10 PM",
      "commitNameOld": "1df6f5735c9d85e644d99d3ebfc4459490657004",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 53.83,
      "commitsBetweenForRepo": 475,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,100 +1,101 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n+          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n+          + \"\u003cstart|status|properties\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-evictWriters\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \"\n          + \"\u003cstart|status|properties\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "c970f1d00525e4273075cff7406dcbd71305abd5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10280. Document new dfsadmin command -evictWriters. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "14/04/16 10:45 AM",
      "commitName": "c970f1d00525e4273075cff7406dcbd71305abd5",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/04/16 1:20 PM",
      "commitNameOld": "aede8c10ecad4f2a8802a834e4bd0b8286cebade",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 7.89,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,100 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n+    } else if (\"-evictWriters\".equals(cmd)) {\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n+          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-evictWriters\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-evictWriters \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "d62b4a4de75edb840df6634f49cb4beb74e3fb07": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9094. Add command line option to ask NameNode reload configuration. (Contributed by Xiaobing Zhou)\n",
      "commitDate": "25/01/16 12:17 PM",
      "commitName": "d62b4a4de75edb840df6634f49cb4beb74e3fb07",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "24/01/16 2:19 PM",
      "commitNameOld": "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,97 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n+          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-reconfig \u003cnamenode|datanode\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4015. Safemode should count and report orphaned blocks. (Contributed by Anu Engineer)\n",
      "commitDate": "23/10/15 6:07 PM",
      "commitName": "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/09/15 8:52 PM",
      "commitNameOld": "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 30.89,
      "commitsBetweenForRepo": 255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,97 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-          + \" [-safemode enter | leave | get | wait]\");\n+          + \" [-safemode enter | leave | get | wait | forceExit]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait | forceExit]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "0f0e897bf1ff8383f3f524ba83161969531b0772": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7116. Add a command to get the balancer bandwidth (Contributed by Rakesh R)\n",
      "commitDate": "09/09/15 10:28 AM",
      "commitName": "0f0e897bf1ff8383f3f524ba83161969531b0772",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "28/08/15 2:38 PM",
      "commitNameOld": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 11.83,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,94 +1,97 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n+    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n+          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getBalancerBandwidth \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6353. Check and make checkpoint before stopping the NameNode. Contributed by Jing Zhao.\n",
      "commitDate": "25/03/15 10:38 AM",
      "commitName": "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/03/15 1:08 AM",
      "commitNameOld": "3560180b6e9926aa3ee1357da59b28a4b4689a0d",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 21.35,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,95 +1,94 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n-                         + \" [-saveNamespace]\");\n+          + \" [-saveNamespace [-beforeShutdown]]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n-      System.err.println(\"Usage: hdfs dfsadmin\"\n-                         + \" [-rollEdits]\");\n+      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-saveNamespace [-beforeShutdown]]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "f80c9888fa0c1a11967560be3c37dfc1e30da2c3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7736. Fix typos in dfsadmin/fsck/snapshotDiff usage messages. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "11/02/15 11:21 AM",
      "commitName": "f80c9888fa0c1a11967560be3c37dfc1e30da2c3",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "06/02/15 5:01 PM",
      "commitNameOld": "8de80ff71234f8fb005f297f1ce6d4755633d5e4",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 4.76,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,95 +1,95 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "5b0d060d2a868cefcd12252140d5a8e310738aca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7323. Move the get/setStoragePolicy commands out from dfsadmin. (jing9 via yliu)\n",
      "commitDate": "11/01/15 8:35 AM",
      "commitName": "5b0d060d2a868cefcd12252140d5a8e310738aca",
      "commitAuthor": "yliu",
      "commitDateOld": "11/12/14 12:36 PM",
      "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 30.83,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,101 +1,95 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n-    } else if (\"-setStoragePolicy\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n-          + \" [-setStoragePolicy path policyName]\");\n-    } else if (\"-getStoragePolicy\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n-          + \" [-getStoragePolicy path]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "baf794dc404ac54f4e8332654eadfac1bebacb8f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7278. Add a command that allows sysadmins to manually trigger full block reports from a DN (cmccabe)\n",
      "commitDate": "27/10/14 9:53 AM",
      "commitName": "baf794dc404ac54f4e8332654eadfac1bebacb8f",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "23/10/14 12:28 PM",
      "commitNameOld": "8c5b23b5473e447384f818d69d907d5c35ed6d6a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,98 +1,101 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-setStoragePolicy\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-setStoragePolicy path policyName]\");\n     } else if (\"-getStoragePolicy\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-getStoragePolicy path]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-reconfig\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n+    } else if (\"-triggerBlockReport\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-setStoragePolicy\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-setStoragePolicy path policyName]\");\n    } else if (\"-getStoragePolicy\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-getStoragePolicy path]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-triggerBlockReport [-incremental] \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "1861b32eb551a07d748afc6205ea9573f9503eda": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6808. Add command line option to ask DataNode reload configuration. (Lei Xu via Colin McCabe)\n",
      "commitDate": "25/09/14 1:11 PM",
      "commitName": "1861b32eb551a07d748afc6205ea9573f9503eda",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "24/09/14 7:11 PM",
      "commitNameOld": "428a76663a0de5d0d74cc9525273ddc470760e44",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.75,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,95 +1,98 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-setStoragePolicy\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-setStoragePolicy path policyName]\");\n     } else if (\"-getStoragePolicy\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-getStoragePolicy path]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n+    } else if (\"-reconfig\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-setStoragePolicy\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-setStoragePolicy path policyName]\");\n    } else if (\"-getStoragePolicy\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-getStoragePolicy path]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-reconfig\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-reconfig \u003cdatanode|...\u003e \u003chost:port\u003e \u003cstart|status\u003e]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "9e941d9f99168cae01f8d50622a616fc26c196d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6831. Inconsistency between \u0027hdfs dfsadmin\u0027 and \u0027hdfs dfsadmin -help\u0027. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "05/09/14 10:45 AM",
      "commitName": "9e941d9f99168cae01f8d50622a616fc26c196d9",
      "commitAuthor": "arp",
      "commitDateOld": "22/08/14 11:14 AM",
      "commitNameOld": "e6c36500705d3d756de82ee0ce9ff226f34b938f",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 13.98,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,117 +1,89 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-refresh\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n+      System.err.println(\"Usage: hdfs dfsadmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n-      System.err.println(\"Usage: java DFSAdmin\");\n+      System.err.println(\"Usage: hdfs dfsadmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n-      System.err.println(\"           [-report]\");\n-      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n-      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n-      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n-      System.err.println(\"           [-saveNamespace]\");\n-      System.err.println(\"           [-rollEdits]\");\n-      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n-      System.err.println(\"           [-refreshNodes]\");\n-      System.err.println(\"           [-finalizeUpgrade]\");\n-      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n-      System.err.println(\"           [-metasave filename]\");\n-      System.err.println(\"           [-refreshServiceAcl]\");\n-      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n-      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n-      System.err.println(\"           [-refreshCallQueue]\");\n-      System.err.println(\"           [-refresh]\");\n-      System.err.println(\"           [-printTopology]\");\n-      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n-      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n-      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n-      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n-      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n-      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n-      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n-      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n-      System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n-      System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n-      System.err.println(\"           [-help [cmd]]\");\n-      System.err.println();\n+      System.err.println(commonUsageSummary);\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: hdfs dfsadmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: hdfs dfsadmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(commonUsageSummary);\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "185200e7096d15a5c2c2d59b7c7705362820aebf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6876. Archival Storage: support set/get storage policy in DFSAdmin. Contributed by Jing Zhao.\n",
      "commitDate": "04/09/14 8:14 PM",
      "commitName": "185200e7096d15a5c2c2d59b7c7705362820aebf",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "22/08/14 11:14 AM",
      "commitNameOld": "e6c36500705d3d756de82ee0ce9ff226f34b938f",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 13.37,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,117 +1,125 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n+    } else if (\"-setStoragePolicy\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-setStoragePolicy path policyName]\");\n+    } else if (\"-getStoragePolicy\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-getStoragePolicy path]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n       System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-refreshCallQueue]\");\n       System.err.println(\"           [-refresh]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n       System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n+      System.err.println(\"           [-setStoragePolicy path policyName]\");\n+      System.err.println(\"           [-getStoragePolicy path]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-setStoragePolicy\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-setStoragePolicy path policyName]\");\n    } else if (\"-getStoragePolicy\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-getStoragePolicy path]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-refreshCallQueue]\");\n      System.err.println(\"           [-refresh]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n      System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n      System.err.println(\"           [-setStoragePolicy path policyName]\");\n      System.err.println(\"           [-getStoragePolicy path]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "3b0db60113ec7fab4e7cc8a0f811646d857547b0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6646. [ HDFS Rolling Upgrade - Shell ] shutdownDatanode and getDatanodeInfo usage is missed ( Contributed by Brahma Reddy Battula)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1609020 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/07/14 11:05 PM",
      "commitName": "3b0db60113ec7fab4e7cc8a0f811646d857547b0",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "30/06/14 11:17 AM",
      "commitNameOld": "e8186a9deea3fb0a0ad69b0b527231af87bb330b",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 8.49,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,111 +1,117 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-refresh\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n+    } else if (\"-shutdownDatanode\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n+    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n       System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-refreshCallQueue]\");\n       System.err.println(\"           [-refresh]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n       System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-refreshCallQueue]\");\n      System.err.println(\"           [-refresh]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n      System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "34e9173c00f7e1ae55dec365850849c793cde8e3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10376. Refactor refresh*Protocols into a single generic refreshConfigProtocol. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602055 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 6:27 PM",
      "commitName": "34e9173c00f7e1ae55dec365850849c793cde8e3",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "11/06/14 10:12 AM",
      "commitNameOld": "49fecbd4026ec7b8309cd28740239f536d73d388",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,107 +1,111 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshCallQueue]\");\n+    } else if (\"-refresh\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n       System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-refreshCallQueue]\");\n+      System.err.println(\"           [-refresh]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n       System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-refresh\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refresh \u003chostname:port\u003e \u003cresource_identifier\u003e [arg1..argn]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-refreshCallQueue]\");\n      System.err.println(\"           [-refresh]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n      System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "9445859930b8653cb0b9a0e1abf38cc05dbe2658": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6295. Add decommissioning state and node state filtering to dfsadmin. Contributed by Andrew Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592438 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/14 8:38 PM",
      "commitName": "9445859930b8653cb0b9a0e1abf38cc05dbe2658",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "28/04/14 11:04 PM",
      "commitNameOld": "02d28907beab7110abf768fd4006b076a6bf2bd2",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 5.9,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,107 +1,107 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n-                         + \" [-report]\");\n+          + \" [-report] [-live] [-dead] [-decommissioning]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-refreshCallQueue\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshCallQueue]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n       System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-refreshCallQueue]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n       System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-report] [-live] [-dead] [-decommissioning]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-refreshCallQueue]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n      System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "d00605f8f0214ed8e2304db8688e140f0a1d62d8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10285. Admin interface to swap callqueue at runtime. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/14 11:48 AM",
      "commitName": "d00605f8f0214ed8e2304db8688e140f0a1d62d8",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "25/01/14 12:01 PM",
      "commitNameOld": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 33.99,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,101 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n+    } else if (\"-refreshCallQueue\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-refreshCallQueue]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n       System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n+      System.err.println(\"           [-refreshCallQueue]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-refreshCallQueue\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshCallQueue]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-refreshCallQueue]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "1a68f13521e6902943bea7b16369ac9a4e6943f5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5585. Provide admin commands for data node upgrade. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1568523 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 1:20 PM",
      "commitName": "1a68f13521e6902943bea7b16369ac9a4e6943f5",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/02/14 6:08 PM",
      "commitNameOld": "c780454413caffbc37a02c4252eb5ec7abe57f97",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 7.8,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,101 +1,103 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n       System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n+      System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n+      System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-shutdownDatanode \u003cdatanode_host:ipc_port\u003e [upgrade]]\");\n      System.err.println(\"           [-getDatanodeInfo \u003cdatanode_host:ipc_port\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "5fe73a986e6850b1cc07bc52fe8b920d1437641d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5752. Add a new DFSAdmin command to query, start and finalize rolling upgrade.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1558299 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/01/14 9:56 PM",
      "commitName": "5fe73a986e6850b1cc07bc52fe8b920d1437641d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "06/12/13 10:01 AM",
      "commitNameOld": "045dc880e13271737b3cf316296e92fb95806663",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 39.5,
      "commitsBetweenForRepo": 156,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,101 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n+    } else if (RollingUpgradeCommand.matches(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n       System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n+      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [\" + RollingUpgradeCommand.USAGE+\"]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [\"+RollingUpgradeCommand.USAGE+\"]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "59e968a114dfe1b513f31424211116f23525def8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4514. Add CLI for supporting snapshot rename, diff report, and snapshottable directory listing.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1449956 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/13 3:14 PM",
      "commitName": "59e968a114dfe1b513f31424211116f23525def8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "09/02/13 1:29 PM",
      "commitNameOld": "fa8bafbd4673d385498e81874e58cd0eafad3d22",
      "commitAuthorOld": "",
      "daysBetweenCommits": 16.07,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,97 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n-          + \" [-allowSnapshot \u003csnapshotRoot\u003e]\");\n-    } else if (\"-disallowsnapshot\".equalsIgnoreCase(cmd)) {\n+          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n+    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n-          + \" [-disallowSnapshot \u003csnapshotRoot\u003e]\");\n+          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n-      System.err.println(\"           [-allowSnapshot \u003csnapshotRoot\u003e]\");\n-      System.err.println(\"           [-disallowSnapshot \u003csnapshotRoot\u003e]\");\n+      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n+      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotDir\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotDir\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "4fde5c01901b6acb4363747d01603664a0283fc4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4084. Provide CLI support to allow and disallow snapshot on a directory. Contributed by Brondon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1401444 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/10/12 1:26 PM",
      "commitName": "4fde5c01901b6acb4363747d01603664a0283fc4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "05/10/12 5:13 PM",
      "commitNameOld": "353958dccc9cb9c47571b973dec46d8fcd82035d",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 17.84,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,89 +1,97 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n-                         + \" [-safemode enter | leave | get | wait]\");\n+          + \" [-safemode enter | leave | get | wait]\");\n+    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-allowSnapshot \u003csnapshotRoot\u003e]\");\n+    } else if (\"-disallowsnapshot\".equalsIgnoreCase(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-disallowSnapshot \u003csnapshotRoot\u003e]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-rollEdits\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n-      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n+      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n+      System.err.println(\"           [-allowSnapshot \u003csnapshotRoot\u003e]\");\n+      System.err.println(\"           [-disallowSnapshot \u003csnapshotRoot\u003e]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-allowSnapshot \u003csnapshotRoot\u003e]\");\n    } else if (\"-disallowsnapshot\".equalsIgnoreCase(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-disallowSnapshot \u003csnapshotRoot\u003e]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\"); \n      System.err.println(\"           [-allowSnapshot \u003csnapshotRoot\u003e]\");\n      System.err.println(\"           [-disallowSnapshot \u003csnapshotRoot\u003e]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "c334cc89a8f42c98ab4dad02ae41c5a02a855974": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2793. Add an admin command to trigger an edit log roll. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1380982 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/12 9:40 PM",
      "commitName": "c334cc89a8f42c98ab4dad02ae41c5a02a855974",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "21/08/12 2:18 PM",
      "commitNameOld": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 14.31,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,85 +1,89 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n+    } else if (\"-rollEdits\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-rollEdits]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\");\n       System.err.println(\"           [-saveNamespace]\");\n+      System.err.println(\"           [-rollEdits]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-rollEdits\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-rollEdits]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-rollEdits]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2686. Remove DistributedUpgrade related code. Contributed by Suresh Srinivas\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 2:18 PM",
      "commitName": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "16/08/12 1:35 PM",
      "commitNameOld": "cf93dfba4e5b7849a3917caa78b29b8a4fb5ef12",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 5.03,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,89 +1,85 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n-    } else if (\"-upgradeProgress\".equals(cmd)) {\n-      System.err.println(\"Usage: java DFSAdmin\"\n-                         + \" [-upgradeProgress status | details | force]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else if (\"-fetchImage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n-      System.err.println(\"           [-upgradeProgress status | details | force]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "ce1a7ec9755f17527c29b0db713d7e01750e10c9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2941. Add an administrative command to download a copy of the fsimage from the NN. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305447 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 10:02 AM",
      "commitName": "ce1a7ec9755f17527c29b0db713d7e01750e10c9",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "28/02/12 12:09 PM",
      "commitNameOld": "c69dfdd5e14af490790dff8227b11962ec816577",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 26.87,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,85 +1,89 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (\"-upgradeProgress\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-upgradeProgress status | details | force]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n+    } else if (\"-fetchImage\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-fetchImage \u003clocal directory\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [-upgradeProgress status | details | force]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n+      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-upgradeProgress status | details | force]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else if (\"-fetchImage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-fetchImage \u003clocal directory\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-upgradeProgress status | details | force]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-fetchImage \u003clocal directory\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "dcea80a21b96e71e4dc3dca27b13444a327ad1a9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-69. Improve the \u0027dfsadmin\u0027 commandline help. (harsh)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1230398 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/01/12 9:13 PM",
      "commitName": "dcea80a21b96e71e4dc3dca27b13444a327ad1a9",
      "commitAuthor": "Harsh J",
      "commitDateOld": "05/01/12 3:03 PM",
      "commitNameOld": "4efd3699a6f271a21b1024d17c277930c83436da",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 6.26,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,84 +1,85 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (\"-upgradeProgress\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-upgradeProgress status | details | force]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                   + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n+      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [-upgradeProgress status | details | force]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n       System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-upgradeProgress status | details | force]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"Note: Administrative commands can only be run as the HDFS superuser.\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-upgradeProgress status | details | force]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-upgradeProgress status | details | force]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-upgradeProgress status | details | force]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-upgradeProgress status | details | force]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-upgradeProgress status | details | force]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "8390152d08306caad31b78abbd509e5ea8580671": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2202. Add a new DFSAdmin command to set balancer bandwidth of datanodes without restarting.  Contributed by Eric Payne\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152401 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 5:10 PM",
      "commitName": "8390152d08306caad31b78abbd509e5ea8580671",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "15/07/11 10:12 PM",
      "commitNameOld": "c163455df487f99171e5045cdf0c2e1be1c4f99e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 13.79,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,80 +1,84 @@\n   private static void printUsage(String cmd) {\n     if (\"-report\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-report]\");\n     } else if (\"-safemode\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-safemode enter | leave | get | wait]\");\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-saveNamespace]\");\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-restoreFailedStorage true|false|check ]\");\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNodes]\");\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-finalizeUpgrade]\");\n     } else if (\"-upgradeProgress\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-upgradeProgress status | details | force]\");\n     } else if (\"-metasave\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-metasave filename]\");\n     } else if (SetQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetQuotaCommand.USAGE+\"]\");\n     } else if (ClearQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n     } else if (SetSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n     } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshServiceAcl]\");\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshUserToGroupsMappings]\");\n     } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshSuperUserGroupsConfiguration]\");\n     } else if (\"-printTopology\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-printTopology]\");\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n                          + \" [-refreshNamenodes datanode-host:port]\");\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       System.err.println(\"Usage: java DFSAdmin\"\n           + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n+    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n     } else {\n       System.err.println(\"Usage: java DFSAdmin\");\n       System.err.println(\"           [-report]\");\n       System.err.println(\"           [-safemode enter | leave | get | wait]\");\n       System.err.println(\"           [-saveNamespace]\");\n       System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n       System.err.println(\"           [-refreshNodes]\");\n       System.err.println(\"           [-finalizeUpgrade]\");\n       System.err.println(\"           [-upgradeProgress status | details | force]\");\n       System.err.println(\"           [-metasave filename]\");\n       System.err.println(\"           [-refreshServiceAcl]\");\n       System.err.println(\"           [-refreshUserToGroupsMappings]\");\n       System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n       System.err.println(\"           [-printTopology]\");\n       System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n       System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n       System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n       System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n+      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n       System.err.println(\"           [-help [cmd]]\");\n       System.err.println();\n       ToolRunner.printGenericCommandUsage(System.err);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-upgradeProgress status | details | force]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                  + \" [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-upgradeProgress status | details | force]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-setBalancerBandwidth \u003cbandwidth in bytes per second\u003e]\");\n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,80 @@\n+  private static void printUsage(String cmd) {\n+    if (\"-report\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-report]\");\n+    } else if (\"-safemode\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-safemode enter | leave | get | wait]\");\n+    } else if (\"-saveNamespace\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-saveNamespace]\");\n+    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-restoreFailedStorage true|false|check ]\");\n+    } else if (\"-refreshNodes\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-refreshNodes]\");\n+    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-finalizeUpgrade]\");\n+    } else if (\"-upgradeProgress\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-upgradeProgress status | details | force]\");\n+    } else if (\"-metasave\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-metasave filename]\");\n+    } else if (SetQuotaCommand.matches(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n+    } else if (ClearQuotaCommand.matches(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n+    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n+    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n+    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-refreshServiceAcl]\");\n+    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-refreshUserToGroupsMappings]\");\n+    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-refreshSuperUserGroupsConfiguration]\");\n+    } else if (\"-printTopology\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-printTopology]\");\n+    } else if (\"-refreshNamenodes\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+                         + \" [-refreshNamenodes datanode-host:port]\");\n+    } else if (\"-deleteBlockPool\".equals(cmd)) {\n+      System.err.println(\"Usage: java DFSAdmin\"\n+          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n+    } else {\n+      System.err.println(\"Usage: java DFSAdmin\");\n+      System.err.println(\"           [-report]\");\n+      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n+      System.err.println(\"           [-saveNamespace]\");\n+      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n+      System.err.println(\"           [-refreshNodes]\");\n+      System.err.println(\"           [-finalizeUpgrade]\");\n+      System.err.println(\"           [-upgradeProgress status | details | force]\");\n+      System.err.println(\"           [-metasave filename]\");\n+      System.err.println(\"           [-refreshServiceAcl]\");\n+      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n+      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n+      System.err.println(\"           [-printTopology]\");\n+      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n+      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n+      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n+      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n+      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n+      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n+      System.err.println(\"           [-help [cmd]]\");\n+      System.err.println();\n+      ToolRunner.printGenericCommandUsage(System.err);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printUsage(String cmd) {\n    if (\"-report\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-report]\");\n    } else if (\"-safemode\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-safemode enter | leave | get | wait]\");\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-saveNamespace]\");\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-restoreFailedStorage true|false|check ]\");\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNodes]\");\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-finalizeUpgrade]\");\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-upgradeProgress status | details | force]\");\n    } else if (\"-metasave\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-metasave filename]\");\n    } else if (SetQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetQuotaCommand.USAGE+\"]\");\n    } else if (ClearQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearQuotaCommand.USAGE+\"]\");\n    } else if (SetSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\" + SetSpaceQuotaCommand.USAGE+\"]\");\n    } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [\"+ClearSpaceQuotaCommand.USAGE+\"]\");\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshServiceAcl]\");\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshUserToGroupsMappings]\");\n    } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshSuperUserGroupsConfiguration]\");\n    } else if (\"-printTopology\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-printTopology]\");\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n                         + \" [-refreshNamenodes datanode-host:port]\");\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      System.err.println(\"Usage: java DFSAdmin\"\n          + \" [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n    } else {\n      System.err.println(\"Usage: java DFSAdmin\");\n      System.err.println(\"           [-report]\");\n      System.err.println(\"           [-safemode enter | leave | get | wait]\");\n      System.err.println(\"           [-saveNamespace]\");\n      System.err.println(\"           [-restoreFailedStorage true|false|check]\");\n      System.err.println(\"           [-refreshNodes]\");\n      System.err.println(\"           [-finalizeUpgrade]\");\n      System.err.println(\"           [-upgradeProgress status | details | force]\");\n      System.err.println(\"           [-metasave filename]\");\n      System.err.println(\"           [-refreshServiceAcl]\");\n      System.err.println(\"           [-refreshUserToGroupsMappings]\");\n      System.err.println(\"           [-refreshSuperUserGroupsConfiguration]\");\n      System.err.println(\"           [-printTopology]\");\n      System.err.println(\"           [-refreshNamenodes datanodehost:port]\");\n      System.err.println(\"           [-deleteBlockPool datanode-host:port blockpoolId [force]]\");\n      System.err.println(\"           [\"+SetQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+SetSpaceQuotaCommand.USAGE+\"]\");\n      System.err.println(\"           [\"+ClearSpaceQuotaCommand.USAGE+\"]\");      \n      System.err.println(\"           [-help [cmd]]\");\n      System.err.println();\n      ToolRunner.printGenericCommandUsage(System.err);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
    }
  }
}