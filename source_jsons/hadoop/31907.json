{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowScanner.java",
  "functionName": "peekAtNextCell",
  "functionId": "peekAtNextCell___scannerContext-ScannerContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
  "functionStartLine": 634,
  "functionEndLine": 654,
  "numCommitsSeen": 35,
  "timeTaken": 5020,
  "changeHistory": [
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b",
    "10663b78c8596693322dc3636f173035195bf607",
    "5e37ca5bb49f945e27f49a413d08baab562dfa9c",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "1a227744ac0ceff178171fc4ddbf3d27275bdc4f",
    "960af7d4717b8a8949d0b2e43949e7daab45aa88",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60"
  ],
  "changeHistoryShort": {
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b": "Yfilerename",
    "10663b78c8596693322dc3636f173035195bf607": "Yfilerename",
    "5e37ca5bb49f945e27f49a413d08baab562dfa9c": "Yfilerename",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "1a227744ac0ceff178171fc4ddbf3d27275bdc4f": "Ymultichange(Yparameterchange,Ybodychange)",
    "960af7d4717b8a8949d0b2e43949e7daab45aa88": "Ymultichange(Yparameterchange,Ybodychange)",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7346. Add a profile to allow optional compilation for ATSv2 with HBase-2.0. Contributed by Haibo Chen and Rohith.\n",
      "commitDate": "05/03/18 10:25 PM",
      "commitName": "55ba49dd071b66e72c47a1c41e88b9a5feddf53b",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "05/03/18 6:15 PM",
      "commitNameOld": "745190ecdca8f7dfc5eebffdd1c1aa4f86229120",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "10663b78c8596693322dc3636f173035195bf607": {
      "type": "Yfilerename",
      "commitMessage": "Revert \"yarn-7346.07.patch\"\n\nThis reverts commit 5e37ca5bb49f945e27f49a413d08baab562dfa9c.\n",
      "commitDate": "28/02/18 9:11 PM",
      "commitName": "10663b78c8596693322dc3636f173035195bf607",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "28/02/18 9:10 PM",
      "commitNameOld": "d1274c3b71549cb000868500c293cafd880b3713",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "5e37ca5bb49f945e27f49a413d08baab562dfa9c": {
      "type": "Yfilerename",
      "commitMessage": "yarn-7346.07.patch\n",
      "commitDate": "28/02/18 9:04 PM",
      "commitName": "5e37ca5bb49f945e27f49a413d08baab562dfa9c",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "28/02/18 6:18 PM",
      "commitNameOld": "6e6945cd78d76c6beaec85c963f27e28bf96c0f2",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "1a227744ac0ceff178171fc4ddbf3d27275bdc4f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5070. upgrade HBase version for first merge (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "1a227744ac0ceff178171fc4ddbf3d27275bdc4f",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5070. upgrade HBase version for first merge (Vrushali C via sjlee)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "1a227744ac0ceff178171fc4ddbf3d27275bdc4f",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public Cell peekAtNextCell(int cellLimit) throws IOException {\n+  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n     if (currentIndex \u003e\u003d availableCells.size()) {\n       // done with current batch\n       availableCells.clear();\n       currentIndex \u003d 0;\n-      hasMore \u003d flowRunScanner.next(availableCells, cellLimit);\n+      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n     }\n     Cell cell \u003d null;\n     if (currentIndex \u003c availableCells.size()) {\n       cell \u003d availableCells.get(currentIndex);\n       if (currentRow \u003d\u003d null) {\n         currentRow \u003d CellUtil.cloneRow(cell);\n       } else if (!CellUtil.matchingRow(cell, currentRow)) {\n         // moved on to the next row\n         // don\u0027t use the current cell\n         // also signal no more cells for this row\n         return null;\n       }\n     }\n     return cell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {
            "oldValue": "[cellLimit-int]",
            "newValue": "[scannerContext-ScannerContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5070. upgrade HBase version for first merge (Vrushali C via sjlee)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "1a227744ac0ceff178171fc4ddbf3d27275bdc4f",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public Cell peekAtNextCell(int cellLimit) throws IOException {\n+  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n     if (currentIndex \u003e\u003d availableCells.size()) {\n       // done with current batch\n       availableCells.clear();\n       currentIndex \u003d 0;\n-      hasMore \u003d flowRunScanner.next(availableCells, cellLimit);\n+      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n     }\n     Cell cell \u003d null;\n     if (currentIndex \u003c availableCells.size()) {\n       cell \u003d availableCells.get(currentIndex);\n       if (currentRow \u003d\u003d null) {\n         currentRow \u003d CellUtil.cloneRow(cell);\n       } else if (!CellUtil.matchingRow(cell, currentRow)) {\n         // moved on to the next row\n         // don\u0027t use the current cell\n         // also signal no more cells for this row\n         return null;\n       }\n     }\n     return cell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Cell peekAtNextCell(ScannerContext scannerContext) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, scannerContext);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {}
        }
      ]
    },
    "960af7d4717b8a8949d0b2e43949e7daab45aa88": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4409. Fix javadoc and checkstyle issues in timelineservice code (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4409. Fix javadoc and checkstyle issues in timelineservice code (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public Cell peekAtNextCell(int limit) throws IOException {\n+  public Cell peekAtNextCell(int cellLimit) throws IOException {\n     if (currentIndex \u003e\u003d availableCells.size()) {\n       // done with current batch\n       availableCells.clear();\n       currentIndex \u003d 0;\n-      hasMore \u003d flowRunScanner.next(availableCells, limit);\n+      hasMore \u003d flowRunScanner.next(availableCells, cellLimit);\n     }\n     Cell cell \u003d null;\n     if (currentIndex \u003c availableCells.size()) {\n       cell \u003d availableCells.get(currentIndex);\n       if (currentRow \u003d\u003d null) {\n         currentRow \u003d CellUtil.cloneRow(cell);\n       } else if (!CellUtil.matchingRow(cell, currentRow)) {\n         // moved on to the next row\n         // don\u0027t use the current cell\n         // also signal no more cells for this row\n         return null;\n       }\n     }\n     return cell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Cell peekAtNextCell(int cellLimit) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, cellLimit);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {
            "oldValue": "[limit-int]",
            "newValue": "[cellLimit-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4409. Fix javadoc and checkstyle issues in timelineservice code (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public Cell peekAtNextCell(int limit) throws IOException {\n+  public Cell peekAtNextCell(int cellLimit) throws IOException {\n     if (currentIndex \u003e\u003d availableCells.size()) {\n       // done with current batch\n       availableCells.clear();\n       currentIndex \u003d 0;\n-      hasMore \u003d flowRunScanner.next(availableCells, limit);\n+      hasMore \u003d flowRunScanner.next(availableCells, cellLimit);\n     }\n     Cell cell \u003d null;\n     if (currentIndex \u003c availableCells.size()) {\n       cell \u003d availableCells.get(currentIndex);\n       if (currentRow \u003d\u003d null) {\n         currentRow \u003d CellUtil.cloneRow(cell);\n       } else if (!CellUtil.matchingRow(cell, currentRow)) {\n         // moved on to the next row\n         // don\u0027t use the current cell\n         // also signal no more cells for this row\n         return null;\n       }\n     }\n     return cell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Cell peekAtNextCell(int cellLimit) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, cellLimit);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {}
        }
      ]
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,21 @@\n+  public Cell peekAtNextCell(int limit) throws IOException {\n+    if (currentIndex \u003e\u003d availableCells.size()) {\n+      // done with current batch\n+      availableCells.clear();\n+      currentIndex \u003d 0;\n+      hasMore \u003d flowRunScanner.next(availableCells, limit);\n+    }\n+    Cell cell \u003d null;\n+    if (currentIndex \u003c availableCells.size()) {\n+      cell \u003d availableCells.get(currentIndex);\n+      if (currentRow \u003d\u003d null) {\n+        currentRow \u003d CellUtil.cloneRow(cell);\n+      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n+        // moved on to the next row\n+        // don\u0027t use the current cell\n+        // also signal no more cells for this row\n+        return null;\n+      }\n+    }\n+    return cell;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Cell peekAtNextCell(int limit) throws IOException {\n    if (currentIndex \u003e\u003d availableCells.size()) {\n      // done with current batch\n      availableCells.clear();\n      currentIndex \u003d 0;\n      hasMore \u003d flowRunScanner.next(availableCells, limit);\n    }\n    Cell cell \u003d null;\n    if (currentIndex \u003c availableCells.size()) {\n      cell \u003d availableCells.get(currentIndex);\n      if (currentRow \u003d\u003d null) {\n        currentRow \u003d CellUtil.cloneRow(cell);\n      } else if (!CellUtil.matchingRow(cell, currentRow)) {\n        // moved on to the next row\n        // don\u0027t use the current cell\n        // also signal no more cells for this row\n        return null;\n      }\n    }\n    return cell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
    }
  }
}