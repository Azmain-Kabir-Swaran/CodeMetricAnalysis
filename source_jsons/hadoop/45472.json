{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemTimelineWriter.java",
  "functionName": "putEntities",
  "functionId": "putEntities___appAttemptId-ApplicationAttemptId__groupId-TimelineEntityGroupId__entities-TimelineEntity",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/FileSystemTimelineWriter.java",
  "functionStartLine": 198,
  "functionEndLine": 247,
  "numCommitsSeen": 19,
  "timeTaken": 1755,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "af1d125f9ce35ec69a610674a1c5c60cc17141a7",
    "882f2f04644a13cadb93070d5545f7a4f8691fde"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "af1d125f9ce35ec69a610674a1c5c60cc17141a7": "Ybodychange",
    "882f2f04644a13cadb93070d5545f7a4f8691fde": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,50 @@\n   public TimelinePutResponse putEntities(\n       ApplicationAttemptId appAttemptId, TimelineEntityGroupId groupId,\n       TimelineEntity... entities) throws IOException, YarnException {\n     if (appAttemptId \u003d\u003d null) {\n       return putEntities(entities);\n     }\n \n     List\u003cTimelineEntity\u003e entitiesToDBStore \u003d new ArrayList\u003cTimelineEntity\u003e();\n     List\u003cTimelineEntity\u003e entitiesToSummaryCache\n         \u003d new ArrayList\u003cTimelineEntity\u003e();\n     List\u003cTimelineEntity\u003e entitiesToEntityCache\n         \u003d new ArrayList\u003cTimelineEntity\u003e();\n     Path attemptDir \u003d attemptDirCache.getAppAttemptDir(appAttemptId);\n \n     for (TimelineEntity entity : entities) {\n       if (summaryEntityTypes.contains(entity.getEntityType())) {\n         entitiesToSummaryCache.add(entity);\n       } else {\n         if (groupId !\u003d null) {\n           entitiesToEntityCache.add(entity);\n         } else {\n           entitiesToDBStore.add(entity);\n         }\n       }\n     }\n \n     if (!entitiesToSummaryCache.isEmpty()) {\n       Path summaryLogPath \u003d\n           new Path(attemptDir, SUMMARY_LOG_PREFIX + appAttemptId.toString());\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Writing summary log for \" + appAttemptId.toString() + \" to \"\n-            + summaryLogPath);\n-      }\n+      LOG.debug(\"Writing summary log for {} to {}\", appAttemptId,\n+          summaryLogPath);\n       this.logFDsCache.writeSummaryEntityLogs(fs, summaryLogPath, objMapper,\n           appAttemptId, entitiesToSummaryCache, isAppendSupported);\n     }\n \n     if (!entitiesToEntityCache.isEmpty()) {\n       Path entityLogPath \u003d\n           new Path(attemptDir, ENTITY_LOG_PREFIX + groupId.toString());\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Writing entity log for \" + groupId.toString() + \" to \"\n-            + entityLogPath);\n-      }\n+      LOG.debug(\"Writing entity log for {} to {}\", groupId, entityLogPath);\n       this.logFDsCache.writeEntityLogs(fs, entityLogPath, objMapper,\n           appAttemptId, groupId, entitiesToEntityCache, isAppendSupported);\n     }\n \n     if (!entitiesToDBStore.isEmpty()) {\n       putEntities(entitiesToDBStore.toArray(\n           new TimelineEntity[entitiesToDBStore.size()]));\n     }\n \n     return new TimelinePutResponse();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      ApplicationAttemptId appAttemptId, TimelineEntityGroupId groupId,\n      TimelineEntity... entities) throws IOException, YarnException {\n    if (appAttemptId \u003d\u003d null) {\n      return putEntities(entities);\n    }\n\n    List\u003cTimelineEntity\u003e entitiesToDBStore \u003d new ArrayList\u003cTimelineEntity\u003e();\n    List\u003cTimelineEntity\u003e entitiesToSummaryCache\n        \u003d new ArrayList\u003cTimelineEntity\u003e();\n    List\u003cTimelineEntity\u003e entitiesToEntityCache\n        \u003d new ArrayList\u003cTimelineEntity\u003e();\n    Path attemptDir \u003d attemptDirCache.getAppAttemptDir(appAttemptId);\n\n    for (TimelineEntity entity : entities) {\n      if (summaryEntityTypes.contains(entity.getEntityType())) {\n        entitiesToSummaryCache.add(entity);\n      } else {\n        if (groupId !\u003d null) {\n          entitiesToEntityCache.add(entity);\n        } else {\n          entitiesToDBStore.add(entity);\n        }\n      }\n    }\n\n    if (!entitiesToSummaryCache.isEmpty()) {\n      Path summaryLogPath \u003d\n          new Path(attemptDir, SUMMARY_LOG_PREFIX + appAttemptId.toString());\n      LOG.debug(\"Writing summary log for {} to {}\", appAttemptId,\n          summaryLogPath);\n      this.logFDsCache.writeSummaryEntityLogs(fs, summaryLogPath, objMapper,\n          appAttemptId, entitiesToSummaryCache, isAppendSupported);\n    }\n\n    if (!entitiesToEntityCache.isEmpty()) {\n      Path entityLogPath \u003d\n          new Path(attemptDir, ENTITY_LOG_PREFIX + groupId.toString());\n      LOG.debug(\"Writing entity log for {} to {}\", groupId, entityLogPath);\n      this.logFDsCache.writeEntityLogs(fs, entityLogPath, objMapper,\n          appAttemptId, groupId, entitiesToEntityCache, isAppendSupported);\n    }\n\n    if (!entitiesToDBStore.isEmpty()) {\n      putEntities(entitiesToDBStore.toArray(\n          new TimelineEntity[entitiesToDBStore.size()]));\n    }\n\n    return new TimelinePutResponse();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/FileSystemTimelineWriter.java",
      "extendedDetails": {}
    },
    "af1d125f9ce35ec69a610674a1c5c60cc17141a7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4814. ATS 1.5 timelineclient impl call flush after every event write. Contributed by Xuan Gong.\n",
      "commitDate": "23/03/16 8:57 AM",
      "commitName": "af1d125f9ce35ec69a610674a1c5c60cc17141a7",
      "commitAuthor": "Junping Du",
      "commitDateOld": "15/03/16 10:10 PM",
      "commitNameOld": "a888b5bc533bb91a3394f15a69879be1d7838592",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 7.45,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,55 @@\n   public TimelinePutResponse putEntities(\n       ApplicationAttemptId appAttemptId, TimelineEntityGroupId groupId,\n       TimelineEntity... entities) throws IOException, YarnException {\n     if (appAttemptId \u003d\u003d null) {\n       return putEntities(entities);\n     }\n \n     List\u003cTimelineEntity\u003e entitiesToDBStore \u003d new ArrayList\u003cTimelineEntity\u003e();\n     List\u003cTimelineEntity\u003e entitiesToSummaryCache\n         \u003d new ArrayList\u003cTimelineEntity\u003e();\n     List\u003cTimelineEntity\u003e entitiesToEntityCache\n         \u003d new ArrayList\u003cTimelineEntity\u003e();\n-    Path attemptDir \u003d createAttemptDir(appAttemptId);\n+    Path attemptDir \u003d attemptDirCache.getAppAttemptDir(appAttemptId);\n \n     for (TimelineEntity entity : entities) {\n       if (summaryEntityTypes.contains(entity.getEntityType())) {\n         entitiesToSummaryCache.add(entity);\n       } else {\n         if (groupId !\u003d null) {\n           entitiesToEntityCache.add(entity);\n         } else {\n           entitiesToDBStore.add(entity);\n         }\n       }\n     }\n \n     if (!entitiesToSummaryCache.isEmpty()) {\n       Path summaryLogPath \u003d\n           new Path(attemptDir, SUMMARY_LOG_PREFIX + appAttemptId.toString());\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Writing summary log for \" + appAttemptId.toString() + \" to \"\n             + summaryLogPath);\n       }\n       this.logFDsCache.writeSummaryEntityLogs(fs, summaryLogPath, objMapper,\n           appAttemptId, entitiesToSummaryCache, isAppendSupported);\n     }\n \n     if (!entitiesToEntityCache.isEmpty()) {\n       Path entityLogPath \u003d\n           new Path(attemptDir, ENTITY_LOG_PREFIX + groupId.toString());\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Writing entity log for \" + groupId.toString() + \" to \"\n             + entityLogPath);\n       }\n       this.logFDsCache.writeEntityLogs(fs, entityLogPath, objMapper,\n           appAttemptId, groupId, entitiesToEntityCache, isAppendSupported);\n     }\n \n     if (!entitiesToDBStore.isEmpty()) {\n       putEntities(entitiesToDBStore.toArray(\n           new TimelineEntity[entitiesToDBStore.size()]));\n     }\n \n     return new TimelinePutResponse();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      ApplicationAttemptId appAttemptId, TimelineEntityGroupId groupId,\n      TimelineEntity... entities) throws IOException, YarnException {\n    if (appAttemptId \u003d\u003d null) {\n      return putEntities(entities);\n    }\n\n    List\u003cTimelineEntity\u003e entitiesToDBStore \u003d new ArrayList\u003cTimelineEntity\u003e();\n    List\u003cTimelineEntity\u003e entitiesToSummaryCache\n        \u003d new ArrayList\u003cTimelineEntity\u003e();\n    List\u003cTimelineEntity\u003e entitiesToEntityCache\n        \u003d new ArrayList\u003cTimelineEntity\u003e();\n    Path attemptDir \u003d attemptDirCache.getAppAttemptDir(appAttemptId);\n\n    for (TimelineEntity entity : entities) {\n      if (summaryEntityTypes.contains(entity.getEntityType())) {\n        entitiesToSummaryCache.add(entity);\n      } else {\n        if (groupId !\u003d null) {\n          entitiesToEntityCache.add(entity);\n        } else {\n          entitiesToDBStore.add(entity);\n        }\n      }\n    }\n\n    if (!entitiesToSummaryCache.isEmpty()) {\n      Path summaryLogPath \u003d\n          new Path(attemptDir, SUMMARY_LOG_PREFIX + appAttemptId.toString());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Writing summary log for \" + appAttemptId.toString() + \" to \"\n            + summaryLogPath);\n      }\n      this.logFDsCache.writeSummaryEntityLogs(fs, summaryLogPath, objMapper,\n          appAttemptId, entitiesToSummaryCache, isAppendSupported);\n    }\n\n    if (!entitiesToEntityCache.isEmpty()) {\n      Path entityLogPath \u003d\n          new Path(attemptDir, ENTITY_LOG_PREFIX + groupId.toString());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Writing entity log for \" + groupId.toString() + \" to \"\n            + entityLogPath);\n      }\n      this.logFDsCache.writeEntityLogs(fs, entityLogPath, objMapper,\n          appAttemptId, groupId, entitiesToEntityCache, isAppendSupported);\n    }\n\n    if (!entitiesToDBStore.isEmpty()) {\n      putEntities(entitiesToDBStore.toArray(\n          new TimelineEntity[entitiesToDBStore.size()]));\n    }\n\n    return new TimelinePutResponse();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/FileSystemTimelineWriter.java",
      "extendedDetails": {}
    },
    "882f2f04644a13cadb93070d5545f7a4f8691fde": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4234. New put APIs in TimelineClient for ats v1.5. Contributed by Xuan Gong.\n",
      "commitDate": "23/12/15 5:26 AM",
      "commitName": "882f2f04644a13cadb93070d5545f7a4f8691fde",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,55 @@\n+  public TimelinePutResponse putEntities(\n+      ApplicationAttemptId appAttemptId, TimelineEntityGroupId groupId,\n+      TimelineEntity... entities) throws IOException, YarnException {\n+    if (appAttemptId \u003d\u003d null) {\n+      return putEntities(entities);\n+    }\n+\n+    List\u003cTimelineEntity\u003e entitiesToDBStore \u003d new ArrayList\u003cTimelineEntity\u003e();\n+    List\u003cTimelineEntity\u003e entitiesToSummaryCache\n+        \u003d new ArrayList\u003cTimelineEntity\u003e();\n+    List\u003cTimelineEntity\u003e entitiesToEntityCache\n+        \u003d new ArrayList\u003cTimelineEntity\u003e();\n+    Path attemptDir \u003d createAttemptDir(appAttemptId);\n+\n+    for (TimelineEntity entity : entities) {\n+      if (summaryEntityTypes.contains(entity.getEntityType())) {\n+        entitiesToSummaryCache.add(entity);\n+      } else {\n+        if (groupId !\u003d null) {\n+          entitiesToEntityCache.add(entity);\n+        } else {\n+          entitiesToDBStore.add(entity);\n+        }\n+      }\n+    }\n+\n+    if (!entitiesToSummaryCache.isEmpty()) {\n+      Path summaryLogPath \u003d\n+          new Path(attemptDir, SUMMARY_LOG_PREFIX + appAttemptId.toString());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Writing summary log for \" + appAttemptId.toString() + \" to \"\n+            + summaryLogPath);\n+      }\n+      this.logFDsCache.writeSummaryEntityLogs(fs, summaryLogPath, objMapper,\n+          appAttemptId, entitiesToSummaryCache, isAppendSupported);\n+    }\n+\n+    if (!entitiesToEntityCache.isEmpty()) {\n+      Path entityLogPath \u003d\n+          new Path(attemptDir, ENTITY_LOG_PREFIX + groupId.toString());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Writing entity log for \" + groupId.toString() + \" to \"\n+            + entityLogPath);\n+      }\n+      this.logFDsCache.writeEntityLogs(fs, entityLogPath, objMapper,\n+          appAttemptId, groupId, entitiesToEntityCache, isAppendSupported);\n+    }\n+\n+    if (!entitiesToDBStore.isEmpty()) {\n+      putEntities(entitiesToDBStore.toArray(\n+          new TimelineEntity[entitiesToDBStore.size()]));\n+    }\n+\n+    return new TimelinePutResponse();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse putEntities(\n      ApplicationAttemptId appAttemptId, TimelineEntityGroupId groupId,\n      TimelineEntity... entities) throws IOException, YarnException {\n    if (appAttemptId \u003d\u003d null) {\n      return putEntities(entities);\n    }\n\n    List\u003cTimelineEntity\u003e entitiesToDBStore \u003d new ArrayList\u003cTimelineEntity\u003e();\n    List\u003cTimelineEntity\u003e entitiesToSummaryCache\n        \u003d new ArrayList\u003cTimelineEntity\u003e();\n    List\u003cTimelineEntity\u003e entitiesToEntityCache\n        \u003d new ArrayList\u003cTimelineEntity\u003e();\n    Path attemptDir \u003d createAttemptDir(appAttemptId);\n\n    for (TimelineEntity entity : entities) {\n      if (summaryEntityTypes.contains(entity.getEntityType())) {\n        entitiesToSummaryCache.add(entity);\n      } else {\n        if (groupId !\u003d null) {\n          entitiesToEntityCache.add(entity);\n        } else {\n          entitiesToDBStore.add(entity);\n        }\n      }\n    }\n\n    if (!entitiesToSummaryCache.isEmpty()) {\n      Path summaryLogPath \u003d\n          new Path(attemptDir, SUMMARY_LOG_PREFIX + appAttemptId.toString());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Writing summary log for \" + appAttemptId.toString() + \" to \"\n            + summaryLogPath);\n      }\n      this.logFDsCache.writeSummaryEntityLogs(fs, summaryLogPath, objMapper,\n          appAttemptId, entitiesToSummaryCache, isAppendSupported);\n    }\n\n    if (!entitiesToEntityCache.isEmpty()) {\n      Path entityLogPath \u003d\n          new Path(attemptDir, ENTITY_LOG_PREFIX + groupId.toString());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Writing entity log for \" + groupId.toString() + \" to \"\n            + entityLogPath);\n      }\n      this.logFDsCache.writeEntityLogs(fs, entityLogPath, objMapper,\n          appAttemptId, groupId, entitiesToEntityCache, isAppendSupported);\n    }\n\n    if (!entitiesToDBStore.isEmpty()) {\n      putEntities(entitiesToDBStore.toArray(\n          new TimelineEntity[entitiesToDBStore.size()]));\n    }\n\n    return new TimelinePutResponse();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/FileSystemTimelineWriter.java"
    }
  }
}