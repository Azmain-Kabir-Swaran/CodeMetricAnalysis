{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Log4Json.java",
  "functionName": "toJson",
  "functionId": "toJson___writer-Writer(modifiers-final)__loggerName-String(modifiers-final)__timeStamp-long(modifiers-final)__level-String(modifiers-final)__threadName-String(modifiers-final)__message-String(modifiers-final)__ti-ThrowableInformation(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/Log4Json.java",
  "functionStartLine": 195,
  "functionEndLine": 230,
  "numCommitsSeen": 4,
  "timeTaken": 805,
  "changeHistory": [
    "67d9f2808efb34b9a7b0b824cb4033b95ad33474",
    "65861ab51f17440c059d15052ddeb29d3d20b3f9"
  ],
  "changeHistoryShort": {
    "67d9f2808efb34b9a7b0b824cb4033b95ad33474": "Ybodychange",
    "65861ab51f17440c059d15052ddeb29d3d20b3f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "67d9f2808efb34b9a7b0b824cb4033b95ad33474": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13706. Update jackson from 1.9.13 to 2.x in hadoop-common-project.\n",
      "commitDate": "28/11/16 9:07 PM",
      "commitName": "67d9f2808efb34b9a7b0b824cb4033b95ad33474",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/10/11 3:53 AM",
      "commitNameOld": "65861ab51f17440c059d15052ddeb29d3d20b3f9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 1872.76,
      "commitsBetweenForRepo": 13260,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public Writer toJson(final Writer writer,\n                        final String loggerName,\n                        final long timeStamp,\n                        final String level,\n                        final String threadName,\n                        final String message,\n                        final ThrowableInformation ti) throws IOException {\n-    JsonGenerator json \u003d factory.createJsonGenerator(writer);\n+    JsonGenerator json \u003d factory.createGenerator(writer);\n     json.writeStartObject();\n     json.writeStringField(NAME, loggerName);\n     json.writeNumberField(TIME, timeStamp);\n     Date date \u003d new Date(timeStamp);\n     json.writeStringField(DATE, dateFormat.format(date));\n     json.writeStringField(LEVEL, level);\n     json.writeStringField(THREAD, threadName);\n     json.writeStringField(MESSAGE, message);\n     if (ti !\u003d null) {\n       //there is some throwable info, but if the log event has been sent over the wire,\n       //there may not be a throwable inside it, just a summary.\n       Throwable thrown \u003d ti.getThrowable();\n       String eclass \u003d (thrown !\u003d null) ?\n           thrown.getClass().getName()\n           : \"\";\n       json.writeStringField(EXCEPTION_CLASS, eclass);\n       String[] stackTrace \u003d ti.getThrowableStrRep();\n       json.writeArrayFieldStart(STACK);\n       for (String row : stackTrace) {\n         json.writeString(row);\n       }\n       json.writeEndArray();\n     }\n     json.writeEndObject();\n     json.flush();\n     json.close();\n     return writer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Writer toJson(final Writer writer,\n                       final String loggerName,\n                       final long timeStamp,\n                       final String level,\n                       final String threadName,\n                       final String message,\n                       final ThrowableInformation ti) throws IOException {\n    JsonGenerator json \u003d factory.createGenerator(writer);\n    json.writeStartObject();\n    json.writeStringField(NAME, loggerName);\n    json.writeNumberField(TIME, timeStamp);\n    Date date \u003d new Date(timeStamp);\n    json.writeStringField(DATE, dateFormat.format(date));\n    json.writeStringField(LEVEL, level);\n    json.writeStringField(THREAD, threadName);\n    json.writeStringField(MESSAGE, message);\n    if (ti !\u003d null) {\n      //there is some throwable info, but if the log event has been sent over the wire,\n      //there may not be a throwable inside it, just a summary.\n      Throwable thrown \u003d ti.getThrowable();\n      String eclass \u003d (thrown !\u003d null) ?\n          thrown.getClass().getName()\n          : \"\";\n      json.writeStringField(EXCEPTION_CLASS, eclass);\n      String[] stackTrace \u003d ti.getThrowableStrRep();\n      json.writeArrayFieldStart(STACK);\n      for (String row : stackTrace) {\n        json.writeString(row);\n      }\n      json.writeEndArray();\n    }\n    json.writeEndObject();\n    json.flush();\n    json.close();\n    return writer;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/Log4Json.java",
      "extendedDetails": {}
    },
    "65861ab51f17440c059d15052ddeb29d3d20b3f9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7705\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183292 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/10/11 3:53 AM",
      "commitName": "65861ab51f17440c059d15052ddeb29d3d20b3f9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,36 @@\n+  public Writer toJson(final Writer writer,\n+                       final String loggerName,\n+                       final long timeStamp,\n+                       final String level,\n+                       final String threadName,\n+                       final String message,\n+                       final ThrowableInformation ti) throws IOException {\n+    JsonGenerator json \u003d factory.createJsonGenerator(writer);\n+    json.writeStartObject();\n+    json.writeStringField(NAME, loggerName);\n+    json.writeNumberField(TIME, timeStamp);\n+    Date date \u003d new Date(timeStamp);\n+    json.writeStringField(DATE, dateFormat.format(date));\n+    json.writeStringField(LEVEL, level);\n+    json.writeStringField(THREAD, threadName);\n+    json.writeStringField(MESSAGE, message);\n+    if (ti !\u003d null) {\n+      //there is some throwable info, but if the log event has been sent over the wire,\n+      //there may not be a throwable inside it, just a summary.\n+      Throwable thrown \u003d ti.getThrowable();\n+      String eclass \u003d (thrown !\u003d null) ?\n+          thrown.getClass().getName()\n+          : \"\";\n+      json.writeStringField(EXCEPTION_CLASS, eclass);\n+      String[] stackTrace \u003d ti.getThrowableStrRep();\n+      json.writeArrayFieldStart(STACK);\n+      for (String row : stackTrace) {\n+        json.writeString(row);\n+      }\n+      json.writeEndArray();\n+    }\n+    json.writeEndObject();\n+    json.flush();\n+    json.close();\n+    return writer;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Writer toJson(final Writer writer,\n                       final String loggerName,\n                       final long timeStamp,\n                       final String level,\n                       final String threadName,\n                       final String message,\n                       final ThrowableInformation ti) throws IOException {\n    JsonGenerator json \u003d factory.createJsonGenerator(writer);\n    json.writeStartObject();\n    json.writeStringField(NAME, loggerName);\n    json.writeNumberField(TIME, timeStamp);\n    Date date \u003d new Date(timeStamp);\n    json.writeStringField(DATE, dateFormat.format(date));\n    json.writeStringField(LEVEL, level);\n    json.writeStringField(THREAD, threadName);\n    json.writeStringField(MESSAGE, message);\n    if (ti !\u003d null) {\n      //there is some throwable info, but if the log event has been sent over the wire,\n      //there may not be a throwable inside it, just a summary.\n      Throwable thrown \u003d ti.getThrowable();\n      String eclass \u003d (thrown !\u003d null) ?\n          thrown.getClass().getName()\n          : \"\";\n      json.writeStringField(EXCEPTION_CLASS, eclass);\n      String[] stackTrace \u003d ti.getThrowableStrRep();\n      json.writeArrayFieldStart(STACK);\n      for (String row : stackTrace) {\n        json.writeString(row);\n      }\n      json.writeEndArray();\n    }\n    json.writeEndObject();\n    json.flush();\n    json.close();\n    return writer;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/Log4Json.java"
    }
  }
}