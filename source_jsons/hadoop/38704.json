{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "getTotalPendingRequestsPerPartition",
  "functionId": "getTotalPendingRequestsPerPartition",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 744,
  "functionEndLine": 774,
  "numCommitsSeen": 93,
  "timeTaken": 3642,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Ybodychange",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": "Ymultichange(Ymodifierchange,Ybodychange)",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n \n       Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n       for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n           .getSchedulerKeys()) {\n         AppPlacementAllocator\u003cFiCaSchedulerNode\u003e ps \u003d\n             appSchedulingInfo.getAppPlacementAllocator(schedulerKey);\n \n         String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n         Resource res \u003d ret.get(nodePartition);\n         if (null \u003d\u003d res) {\n           res \u003d Resources.createResource(0);\n           ret.put(nodePartition, res);\n         }\n \n         PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n         if (ask.getCount() \u003e 0) {\n           Resources.addTo(res, Resources\n               .multiply(ask.getPerAllocationResource(),\n                   ask.getCount()));\n         }\n       }\n \n       return ret;\n     } finally {\n       readLock.unlock();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n    readLock.lock();\n    try {\n\n      Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n      for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n          .getSchedulerKeys()) {\n        AppPlacementAllocator\u003cFiCaSchedulerNode\u003e ps \u003d\n            appSchedulingInfo.getAppPlacementAllocator(schedulerKey);\n\n        String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n        Resource res \u003d ret.get(nodePartition);\n        if (null \u003d\u003d res) {\n          res \u003d Resources.createResource(0);\n          ret.put(nodePartition, res);\n        }\n\n        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          Resources.addTo(res, Resources\n              .multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n\n      return ret;\n    } finally {\n      readLock.unlock();\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "17/09/17 9:20 PM",
      "commitNameOld": "e81596d06d226f1cfa44b2390ce3095ed4dee621",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 52.69,
      "commitsBetweenForRepo": 485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n     try {\n       readLock.lock();\n \n       Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n       for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n           .getSchedulerKeys()) {\n-        SchedulingPlacementSet\u003cFiCaSchedulerNode\u003e ps \u003d\n-            appSchedulingInfo.getSchedulingPlacementSet(schedulerKey);\n+        AppPlacementAllocator\u003cFiCaSchedulerNode\u003e ps \u003d\n+            appSchedulingInfo.getAppPlacementAllocator(schedulerKey);\n \n         String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n         Resource res \u003d ret.get(nodePartition);\n         if (null \u003d\u003d res) {\n           res \u003d Resources.createResource(0);\n           ret.put(nodePartition, res);\n         }\n \n         PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n         if (ask.getCount() \u003e 0) {\n           Resources.addTo(res, Resources\n               .multiply(ask.getPerAllocationResource(),\n                   ask.getCount()));\n         }\n       }\n \n       return ret;\n     } finally {\n       readLock.unlock();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n    try {\n      readLock.lock();\n\n      Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n      for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n          .getSchedulerKeys()) {\n        AppPlacementAllocator\u003cFiCaSchedulerNode\u003e ps \u003d\n            appSchedulingInfo.getAppPlacementAllocator(schedulerKey);\n\n        String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n        Resource res \u003d ret.get(nodePartition);\n        if (null \u003d\u003d res) {\n          res \u003d Resources.createResource(0);\n          ret.put(nodePartition, res);\n        }\n\n        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          Resources.addTo(res, Resources\n              .multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n\n      return ret;\n    } finally {\n      readLock.unlock();\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
      "commitDate": "06/01/17 9:59 AM",
      "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
          "commitDate": "06/01/17 9:59 AM",
          "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/01/17 10:31 AM",
          "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.98,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,31 @@\n-  public synchronized Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n+  public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n+    try {\n+      readLock.lock();\n \n-    Map\u003cString, Resource\u003e ret \u003d new HashMap\u003cString, Resource\u003e();\n-    Resource res \u003d null;\n-    for (SchedulerRequestKey key : appSchedulingInfo.getSchedulerKeys()) {\n-      ResourceRequest rr \u003d appSchedulingInfo.getResourceRequest(key, \"*\");\n-      if ((res \u003d ret.get(rr.getNodeLabelExpression())) \u003d\u003d null) {\n-        res \u003d Resources.createResource(0, 0);\n-        ret.put(rr.getNodeLabelExpression(), res);\n+      Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n+      for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n+          .getSchedulerKeys()) {\n+        SchedulingPlacementSet\u003cFiCaSchedulerNode\u003e ps \u003d\n+            appSchedulingInfo.getSchedulingPlacementSet(schedulerKey);\n+\n+        String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n+        Resource res \u003d ret.get(nodePartition);\n+        if (null \u003d\u003d res) {\n+          res \u003d Resources.createResource(0);\n+          ret.put(nodePartition, res);\n+        }\n+\n+        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n+        if (ask.getCount() \u003e 0) {\n+          Resources.addTo(res, Resources\n+              .multiply(ask.getPerAllocationResource(),\n+                  ask.getCount()));\n+        }\n       }\n \n-      Resources.addTo(res,\n-          Resources.multiply(rr.getCapability(), rr.getNumContainers()));\n+      return ret;\n+    } finally {\n+      readLock.unlock();\n     }\n-    return ret;\n+\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n    try {\n      readLock.lock();\n\n      Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n      for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n          .getSchedulerKeys()) {\n        SchedulingPlacementSet\u003cFiCaSchedulerNode\u003e ps \u003d\n            appSchedulingInfo.getSchedulingPlacementSet(schedulerKey);\n\n        String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n        Resource res \u003d ret.get(nodePartition);\n        if (null \u003d\u003d res) {\n          res \u003d Resources.createResource(0);\n          ret.put(nodePartition, res);\n        }\n\n        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          Resources.addTo(res, Resources\n              .multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n\n      return ret;\n    } finally {\n      readLock.unlock();\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
          "commitDate": "06/01/17 9:59 AM",
          "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/01/17 10:31 AM",
          "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.98,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,31 @@\n-  public synchronized Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n+  public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n+    try {\n+      readLock.lock();\n \n-    Map\u003cString, Resource\u003e ret \u003d new HashMap\u003cString, Resource\u003e();\n-    Resource res \u003d null;\n-    for (SchedulerRequestKey key : appSchedulingInfo.getSchedulerKeys()) {\n-      ResourceRequest rr \u003d appSchedulingInfo.getResourceRequest(key, \"*\");\n-      if ((res \u003d ret.get(rr.getNodeLabelExpression())) \u003d\u003d null) {\n-        res \u003d Resources.createResource(0, 0);\n-        ret.put(rr.getNodeLabelExpression(), res);\n+      Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n+      for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n+          .getSchedulerKeys()) {\n+        SchedulingPlacementSet\u003cFiCaSchedulerNode\u003e ps \u003d\n+            appSchedulingInfo.getSchedulingPlacementSet(schedulerKey);\n+\n+        String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n+        Resource res \u003d ret.get(nodePartition);\n+        if (null \u003d\u003d res) {\n+          res \u003d Resources.createResource(0);\n+          ret.put(nodePartition, res);\n+        }\n+\n+        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n+        if (ask.getCount() \u003e 0) {\n+          Resources.addTo(res, Resources\n+              .multiply(ask.getPerAllocationResource(),\n+                  ask.getCount()));\n+        }\n       }\n \n-      Resources.addTo(res,\n-          Resources.multiply(rr.getCapability(), rr.getNumContainers()));\n+      return ret;\n+    } finally {\n+      readLock.unlock();\n     }\n-    return ret;\n+\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n    try {\n      readLock.lock();\n\n      Map\u003cString, Resource\u003e ret \u003d new HashMap\u003c\u003e();\n      for (SchedulerRequestKey schedulerKey : appSchedulingInfo\n          .getSchedulerKeys()) {\n        SchedulingPlacementSet\u003cFiCaSchedulerNode\u003e ps \u003d\n            appSchedulingInfo.getSchedulingPlacementSet(schedulerKey);\n\n        String nodePartition \u003d ps.getPrimaryRequestedNodePartition();\n        Resource res \u003d ret.get(nodePartition);\n        if (null \u003d\u003d res) {\n          res \u003d Resources.createResource(0);\n          ret.put(nodePartition, res);\n        }\n\n        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          Resources.addTo(res, Resources\n              .multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n\n      return ret;\n    } finally {\n      readLock.unlock();\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,16 @@\n+  public synchronized Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n+\n+    Map\u003cString, Resource\u003e ret \u003d new HashMap\u003cString, Resource\u003e();\n+    Resource res \u003d null;\n+    for (SchedulerRequestKey key : appSchedulingInfo.getSchedulerKeys()) {\n+      ResourceRequest rr \u003d appSchedulingInfo.getResourceRequest(key, \"*\");\n+      if ((res \u003d ret.get(rr.getNodeLabelExpression())) \u003d\u003d null) {\n+        res \u003d Resources.createResource(0, 0);\n+        ret.put(rr.getNodeLabelExpression(), res);\n+      }\n+\n+      Resources.addTo(res,\n+          Resources.multiply(rr.getCapability(), rr.getNumContainers()));\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Map\u003cString, Resource\u003e getTotalPendingRequestsPerPartition() {\n\n    Map\u003cString, Resource\u003e ret \u003d new HashMap\u003cString, Resource\u003e();\n    Resource res \u003d null;\n    for (SchedulerRequestKey key : appSchedulingInfo.getSchedulerKeys()) {\n      ResourceRequest rr \u003d appSchedulingInfo.getResourceRequest(key, \"*\");\n      if ((res \u003d ret.get(rr.getNodeLabelExpression())) \u003d\u003d null) {\n        res \u003d Resources.createResource(0, 0);\n        ret.put(rr.getNodeLabelExpression(), res);\n      }\n\n      Resources.addTo(res,\n          Resources.multiply(rr.getCapability(), rr.getNumContainers()));\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
    }
  }
}