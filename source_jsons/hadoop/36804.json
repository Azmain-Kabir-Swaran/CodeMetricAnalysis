{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "getNodeToLabels",
  "functionId": "getNodeToLabels___hsr-HttpServletRequest(annotations-@Context)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1206,
  "functionEndLine": 1221,
  "numCommitsSeen": 106,
  "timeTaken": 3869,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312": "Ybodychange",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr)\n       throws IOException {\n-    init();\n+    initForReadableEndpoints();\n \n     NodeToLabelsInfo ntl \u003d new NodeToLabelsInfo();\n     HashMap\u003cString, NodeLabelsInfo\u003e ntlMap \u003d ntl.getNodeToLabels();\n     Map\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nodeIdToLabels \u003d\n         rm.getRMContext().getNodeLabelManager().getNodeLabelsInfo();\n \n     for (Map.Entry\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nitle : nodeIdToLabels.entrySet()) {\n       List\u003cNodeLabel\u003e labels \u003d new ArrayList\u003cNodeLabel\u003e(nitle.getValue());\n       ntlMap.put(nitle.getKey().toString(), new NodeLabelsInfo(labels));\n     }\n \n     return ntl;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr)\n      throws IOException {\n    initForReadableEndpoints();\n\n    NodeToLabelsInfo ntl \u003d new NodeToLabelsInfo();\n    HashMap\u003cString, NodeLabelsInfo\u003e ntlMap \u003d ntl.getNodeToLabels();\n    Map\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nodeIdToLabels \u003d\n        rm.getRMContext().getNodeLabelManager().getNodeLabelsInfo();\n\n    for (Map.Entry\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nitle : nodeIdToLabels.entrySet()) {\n      List\u003cNodeLabel\u003e labels \u003d new ArrayList\u003cNodeLabel\u003e(nitle.getValue());\n      ntlMap.put(nitle.getKey().toString(), new NodeLabelsInfo(labels));\n    }\n\n    return ntl;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3647. RMWebServices api\u0027s should use updated api from CommonNodeLabelsManager to get NodeLabel object. (Sunil G via wangda)\n",
      "commitDate": "27/05/15 12:51 PM",
      "commitName": "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "13/05/15 5:00 PM",
      "commitNameOld": "0e85044e26da698c45185585310ae0e99448cd80",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 13.83,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr)\n       throws IOException {\n     init();\n \n     NodeToLabelsInfo ntl \u003d new NodeToLabelsInfo();\n     HashMap\u003cString, NodeLabelsInfo\u003e ntlMap \u003d ntl.getNodeToLabels();\n-    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d rm.getRMContext()\n-        .getNodeLabelManager().getNodeLabels();\n+    Map\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nodeIdToLabels \u003d rm.getRMContext()\n+        .getNodeLabelManager().getNodeLabelsInfo();\n \n-    for (Map.Entry\u003cNodeId, Set\u003cString\u003e\u003e nitle : nodeIdToLabels.entrySet()) {\n-      ntlMap.put(nitle.getKey().toString(),\n-          new NodeLabelsInfo(nitle.getValue()));\n+    for (Map.Entry\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nitle : nodeIdToLabels.entrySet()) {\n+      List\u003cNodeLabel\u003e labels \u003d new ArrayList\u003cNodeLabel\u003e(nitle.getValue());\n+      ntlMap.put(nitle.getKey().toString(), new NodeLabelsInfo(labels));\n     }\n \n     return ntl;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr)\n      throws IOException {\n    init();\n\n    NodeToLabelsInfo ntl \u003d new NodeToLabelsInfo();\n    HashMap\u003cString, NodeLabelsInfo\u003e ntlMap \u003d ntl.getNodeToLabels();\n    Map\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nodeIdToLabels \u003d rm.getRMContext()\n        .getNodeLabelManager().getNodeLabelsInfo();\n\n    for (Map.Entry\u003cNodeId, Set\u003cNodeLabel\u003e\u003e nitle : nodeIdToLabels.entrySet()) {\n      List\u003cNodeLabel\u003e labels \u003d new ArrayList\u003cNodeLabel\u003e(nitle.getValue());\n      ntlMap.put(nitle.getKey().toString(), new NodeLabelsInfo(labels));\n    }\n\n    return ntl;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2505. Supported get/add/remove/change labels in RM REST API. Contributed by Craig Welch.\n",
      "commitDate": "07/11/14 8:35 PM",
      "commitName": "9a4e0d343e9e891c10ef6682e7b2231a59e69ade",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,16 @@\n+  public NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr) \n+    throws IOException {\n+    init();\n+\n+    NodeToLabelsInfo ntl \u003d new NodeToLabelsInfo();\n+    HashMap\u003cString, NodeLabelsInfo\u003e ntlMap \u003d ntl.getNodeToLabels();\n+    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d   \n+      rm.getRMContext().getNodeLabelManager().getNodeLabels();\n+      \n+    for (Map.Entry\u003cNodeId, Set\u003cString\u003e\u003e nitle : nodeIdToLabels.entrySet()) {\n+      ntlMap.put(nitle.getKey().toString(), \n+        new NodeLabelsInfo(nitle.getValue()));\n+    }\n+\n+    return ntl;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public NodeToLabelsInfo getNodeToLabels(@Context HttpServletRequest hsr) \n    throws IOException {\n    init();\n\n    NodeToLabelsInfo ntl \u003d new NodeToLabelsInfo();\n    HashMap\u003cString, NodeLabelsInfo\u003e ntlMap \u003d ntl.getNodeToLabels();\n    Map\u003cNodeId, Set\u003cString\u003e\u003e nodeIdToLabels \u003d   \n      rm.getRMContext().getNodeLabelManager().getNodeLabels();\n      \n    for (Map.Entry\u003cNodeId, Set\u003cString\u003e\u003e nitle : nodeIdToLabels.entrySet()) {\n      ntlMap.put(nitle.getKey().toString(), \n        new NodeLabelsInfo(nitle.getValue()));\n    }\n\n    return ntl;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}