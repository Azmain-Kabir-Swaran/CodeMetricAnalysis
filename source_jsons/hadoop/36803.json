{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "updateAppState",
  "functionId": "updateAppState___targetState-AppState__hsr-HttpServletRequest(annotations-@Context)__appId-String(annotations-@PathParam(RMWSConsts.APPID))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1164,
  "functionEndLine": 1199,
  "numCommitsSeen": 169,
  "timeTaken": 6803,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
    "d0372dc613136910160e9d42bd5eaa0d4bde2356",
    "60103fca04dc713183e4ec9e12f961642e7d1001",
    "d6532d3a77abe5a9b1760c1e26a899d49aa661dc",
    "030580387a4d8d97560a93da2fd7494b4366e3b6",
    "dc7dd1fa191733a52ff5041556c9372d3a93004a"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": "Yparametermetachange",
    "d0372dc613136910160e9d42bd5eaa0d4bde2356": "Ybodychange",
    "60103fca04dc713183e4ec9e12f961642e7d1001": "Ybodychange",
    "d6532d3a77abe5a9b1760c1e26a899d49aa661dc": "Ybodychange",
    "030580387a4d8d97560a93da2fd7494b4366e3b6": "Ybodychange",
    "dc7dd1fa191733a52ff5041556c9372d3a93004a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,36 @@\n   public Response updateAppState(AppState targetState,\n       @Context HttpServletRequest hsr,\n       @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException,\n       YarnException, InterruptedException, IOException {\n-\n-    init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n-    if (callerUGI \u003d\u003d null) {\n-      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n-      throw new AuthorizationException(msg);\n-    }\n-\n-    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n-      String msg \u003d \"The default static user cannot carry out this operation.\";\n-      return Response.status(Status.FORBIDDEN).entity(msg).build();\n-    }\n+    initForWritableEndpoints(callerUGI, false);\n \n     String userName \u003d callerUGI.getUserName();\n     RMApp app \u003d null;\n     try {\n       app \u003d getRMAppForAppId(appId);\n     } catch (NotFoundException e) {\n       RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n           \"UNKNOWN\", \"RMWebService\",\n           \"Trying to kill an absent application \" + appId);\n       throw e;\n     }\n \n     if (!app.getState().toString().equals(targetState.getState())) {\n       // user is attempting to change state. right we only\n       // allow users to kill the app\n \n       if (targetState.getState()\n           .equals(YarnApplicationState.KILLED.toString())) {\n         return killApp(app, callerUGI, hsr, targetState.getDiagnostics());\n       }\n       throw new BadRequestException(\n           \"Only \u0027\" + YarnApplicationState.KILLED.toString()\n               + \"\u0027 is allowed as a target state.\");\n     }\n \n     AppState ret \u003d new AppState();\n     ret.setState(app.getState().toString());\n \n     return Response.status(Status.OK).entity(ret).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException,\n      YarnException, InterruptedException, IOException {\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    initForWritableEndpoints(callerUGI, false);\n\n    String userName \u003d callerUGI.getUserName();\n    RMApp app \u003d null;\n    try {\n      app \u003d getRMAppForAppId(appId);\n    } catch (NotFoundException e) {\n      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n          \"UNKNOWN\", \"RMWebService\",\n          \"Trying to kill an absent application \" + appId);\n      throw e;\n    }\n\n    if (!app.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the app\n\n      if (targetState.getState()\n          .equals(YarnApplicationState.KILLED.toString())) {\n        return killApp(app, callerUGI, hsr, targetState.getDiagnostics());\n      }\n      throw new BadRequestException(\n          \"Only \u0027\" + YarnApplicationState.KILLED.toString()\n              + \"\u0027 is allowed as a target state.\");\n    }\n\n    AppState ret \u003d new AppState();\n    ret.setState(app.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": {
      "type": "Yparametermetachange",
      "commitMessage": "YARN-6634. [API] Refactor ResourceManager WebServices to make API explicit. (Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "07/06/17 1:41 PM",
      "commitName": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "08/12/16 2:23 AM",
      "commitNameOld": "74d0066d3392169bec872f438a0818e2f5323010",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 181.43,
      "commitsBetweenForRepo": 954,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,46 @@\n   public Response updateAppState(AppState targetState,\n-      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n-      throws AuthorizationException, YarnException, InterruptedException,\n-      IOException {\n+      @Context HttpServletRequest hsr,\n+      @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException,\n+      YarnException, InterruptedException, IOException {\n \n     init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d \"Unable to obtain user name, user not authenticated\";\n       throw new AuthorizationException(msg);\n     }\n \n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n       String msg \u003d \"The default static user cannot carry out this operation.\";\n       return Response.status(Status.FORBIDDEN).entity(msg).build();\n     }\n \n     String userName \u003d callerUGI.getUserName();\n     RMApp app \u003d null;\n     try {\n       app \u003d getRMAppForAppId(appId);\n     } catch (NotFoundException e) {\n       RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n-        \"UNKNOWN\", \"RMWebService\", \"Trying to kill an absent application \"\n-            + appId);\n+          \"UNKNOWN\", \"RMWebService\",\n+          \"Trying to kill an absent application \" + appId);\n       throw e;\n     }\n \n     if (!app.getState().toString().equals(targetState.getState())) {\n       // user is attempting to change state. right we only\n       // allow users to kill the app\n \n-      if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n+      if (targetState.getState()\n+          .equals(YarnApplicationState.KILLED.toString())) {\n         return killApp(app, callerUGI, hsr, targetState.getDiagnostics());\n       }\n-      throw new BadRequestException(\"Only \u0027\"\n-          + YarnApplicationState.KILLED.toString()\n-          + \"\u0027 is allowed as a target state.\");\n+      throw new BadRequestException(\n+          \"Only \u0027\" + YarnApplicationState.KILLED.toString()\n+              + \"\u0027 is allowed as a target state.\");\n     }\n \n     AppState ret \u003d new AppState();\n     ret.setState(app.getState().toString());\n \n     return Response.status(Status.OK).entity(ret).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId) throws AuthorizationException,\n      YarnException, InterruptedException, IOException {\n\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n      throw new AuthorizationException(msg);\n    }\n\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n      String msg \u003d \"The default static user cannot carry out this operation.\";\n      return Response.status(Status.FORBIDDEN).entity(msg).build();\n    }\n\n    String userName \u003d callerUGI.getUserName();\n    RMApp app \u003d null;\n    try {\n      app \u003d getRMAppForAppId(appId);\n    } catch (NotFoundException e) {\n      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n          \"UNKNOWN\", \"RMWebService\",\n          \"Trying to kill an absent application \" + appId);\n      throw e;\n    }\n\n    if (!app.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the app\n\n      if (targetState.getState()\n          .equals(YarnApplicationState.KILLED.toString())) {\n        return killApp(app, callerUGI, hsr, targetState.getDiagnostics());\n      }\n      throw new BadRequestException(\n          \"Only \u0027\" + YarnApplicationState.KILLED.toString()\n              + \"\u0027 is allowed as a target state.\");\n    }\n\n    AppState ret \u003d new AppState();\n    ret.setState(app.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldValue": "[targetState-AppState, hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(\"appid\"))]",
        "newValue": "[targetState-AppState, hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(RMWSConsts.APPID))]"
      }
    },
    "d0372dc613136910160e9d42bd5eaa0d4bde2356": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3692. Allow REST API to set a user generated message when killing an application. Contributed by Rohith Sharma K S\n",
      "commitDate": "22/09/16 6:00 PM",
      "commitName": "d0372dc613136910160e9d42bd5eaa0d4bde2356",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "05/08/16 10:27 AM",
      "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 48.31,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   public Response updateAppState(AppState targetState,\n       @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n       throws AuthorizationException, YarnException, InterruptedException,\n       IOException {\n \n     init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d \"Unable to obtain user name, user not authenticated\";\n       throw new AuthorizationException(msg);\n     }\n \n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n       String msg \u003d \"The default static user cannot carry out this operation.\";\n       return Response.status(Status.FORBIDDEN).entity(msg).build();\n     }\n \n     String userName \u003d callerUGI.getUserName();\n     RMApp app \u003d null;\n     try {\n       app \u003d getRMAppForAppId(appId);\n     } catch (NotFoundException e) {\n       RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n         \"UNKNOWN\", \"RMWebService\", \"Trying to kill an absent application \"\n             + appId);\n       throw e;\n     }\n \n     if (!app.getState().toString().equals(targetState.getState())) {\n       // user is attempting to change state. right we only\n       // allow users to kill the app\n \n       if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n-        return killApp(app, callerUGI, hsr);\n+        return killApp(app, callerUGI, hsr, targetState.getDiagnostics());\n       }\n       throw new BadRequestException(\"Only \u0027\"\n           + YarnApplicationState.KILLED.toString()\n           + \"\u0027 is allowed as a target state.\");\n     }\n \n     AppState ret \u003d new AppState();\n     ret.setState(app.getState().toString());\n \n     return Response.status(Status.OK).entity(ret).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n      throws AuthorizationException, YarnException, InterruptedException,\n      IOException {\n\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n      throw new AuthorizationException(msg);\n    }\n\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n      String msg \u003d \"The default static user cannot carry out this operation.\";\n      return Response.status(Status.FORBIDDEN).entity(msg).build();\n    }\n\n    String userName \u003d callerUGI.getUserName();\n    RMApp app \u003d null;\n    try {\n      app \u003d getRMAppForAppId(appId);\n    } catch (NotFoundException e) {\n      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n        \"UNKNOWN\", \"RMWebService\", \"Trying to kill an absent application \"\n            + appId);\n      throw e;\n    }\n\n    if (!app.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the app\n\n      if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n        return killApp(app, callerUGI, hsr, targetState.getDiagnostics());\n      }\n      throw new BadRequestException(\"Only \u0027\"\n          + YarnApplicationState.KILLED.toString()\n          + \"\u0027 is allowed as a target state.\");\n    }\n\n    AppState ret \u003d new AppState();\n    ret.setState(app.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "60103fca04dc713183e4ec9e12f961642e7d1001": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2427. Added the API of moving apps between queues in RM web services. Contributed by Varun Vasudev.\n",
      "commitDate": "06/01/15 2:37 PM",
      "commitName": "60103fca04dc713183e4ec9e12f961642e7d1001",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "02/12/14 5:16 PM",
      "commitNameOld": "392c3aaea8e8f156b76e418157fa347256283c56",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 34.89,
      "commitsBetweenForRepo": 199,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   public Response updateAppState(AppState targetState,\n       @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n       throws AuthorizationException, YarnException, InterruptedException,\n       IOException {\n \n     init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d \"Unable to obtain user name, user not authenticated\";\n       throw new AuthorizationException(msg);\n     }\n \n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n       String msg \u003d \"The default static user cannot carry out this operation.\";\n       return Response.status(Status.FORBIDDEN).entity(msg).build();\n     }\n \n     String userName \u003d callerUGI.getUserName();\n     RMApp app \u003d null;\n     try {\n       app \u003d getRMAppForAppId(appId);\n     } catch (NotFoundException e) {\n       RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n-        \"UNKNOWN\", \"RMWebService\", \"Trying to kill/move an absent application \"\n+        \"UNKNOWN\", \"RMWebService\", \"Trying to kill an absent application \"\n             + appId);\n       throw e;\n     }\n \n     if (!app.getState().toString().equals(targetState.getState())) {\n       // user is attempting to change state. right we only\n       // allow users to kill the app\n \n       if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n         return killApp(app, callerUGI, hsr);\n       }\n       throw new BadRequestException(\"Only \u0027\"\n           + YarnApplicationState.KILLED.toString()\n           + \"\u0027 is allowed as a target state.\");\n     }\n \n     AppState ret \u003d new AppState();\n     ret.setState(app.getState().toString());\n \n     return Response.status(Status.OK).entity(ret).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n      throws AuthorizationException, YarnException, InterruptedException,\n      IOException {\n\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n      throw new AuthorizationException(msg);\n    }\n\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n      String msg \u003d \"The default static user cannot carry out this operation.\";\n      return Response.status(Status.FORBIDDEN).entity(msg).build();\n    }\n\n    String userName \u003d callerUGI.getUserName();\n    RMApp app \u003d null;\n    try {\n      app \u003d getRMAppForAppId(appId);\n    } catch (NotFoundException e) {\n      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n        \"UNKNOWN\", \"RMWebService\", \"Trying to kill an absent application \"\n            + appId);\n      throw e;\n    }\n\n    if (!app.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the app\n\n      if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n        return killApp(app, callerUGI, hsr);\n      }\n      throw new BadRequestException(\"Only \u0027\"\n          + YarnApplicationState.KILLED.toString()\n          + \"\u0027 is allowed as a target state.\");\n    }\n\n    AppState ret \u003d new AppState();\n    ret.setState(app.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "d6532d3a77abe5a9b1760c1e26a899d49aa661dc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2247. Made RM web services authenticate users via kerberos and delegation token. Contributed by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613821 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/07/14 10:55 AM",
      "commitName": "d6532d3a77abe5a9b1760c1e26a899d49aa661dc",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "15/07/14 4:00 PM",
      "commitNameOld": "030580387a4d8d97560a93da2fd7494b4366e3b6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 11.79,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,45 @@\n   public Response updateAppState(AppState targetState,\n       @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n       throws AuthorizationException, YarnException, InterruptedException,\n       IOException {\n \n     init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d \"Unable to obtain user name, user not authenticated\";\n       throw new AuthorizationException(msg);\n     }\n \n+    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n+      String msg \u003d \"The default static user cannot carry out this operation.\";\n+      return Response.status(Status.FORBIDDEN).entity(msg).build();\n+    }\n+\n     String userName \u003d callerUGI.getUserName();\n     RMApp app \u003d null;\n     try {\n       app \u003d getRMAppForAppId(appId);\n     } catch (NotFoundException e) {\n       RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n         \"UNKNOWN\", \"RMWebService\", \"Trying to kill/move an absent application \"\n             + appId);\n       throw e;\n     }\n \n     if (!app.getState().toString().equals(targetState.getState())) {\n       // user is attempting to change state. right we only\n       // allow users to kill the app\n \n       if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n         return killApp(app, callerUGI, hsr);\n       }\n       throw new BadRequestException(\"Only \u0027\"\n           + YarnApplicationState.KILLED.toString()\n           + \"\u0027 is allowed as a target state.\");\n     }\n \n     AppState ret \u003d new AppState();\n     ret.setState(app.getState().toString());\n \n     return Response.status(Status.OK).entity(ret).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n      throws AuthorizationException, YarnException, InterruptedException,\n      IOException {\n\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n      throw new AuthorizationException(msg);\n    }\n\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n      String msg \u003d \"The default static user cannot carry out this operation.\";\n      return Response.status(Status.FORBIDDEN).entity(msg).build();\n    }\n\n    String userName \u003d callerUGI.getUserName();\n    RMApp app \u003d null;\n    try {\n      app \u003d getRMAppForAppId(appId);\n    } catch (NotFoundException e) {\n      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n        \"UNKNOWN\", \"RMWebService\", \"Trying to kill/move an absent application \"\n            + appId);\n      throw e;\n    }\n\n    if (!app.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the app\n\n      if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n        return killApp(app, callerUGI, hsr);\n      }\n      throw new BadRequestException(\"Only \u0027\"\n          + YarnApplicationState.KILLED.toString()\n          + \"\u0027 is allowed as a target state.\");\n    }\n\n    AppState ret \u003d new AppState();\n    ret.setState(app.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "030580387a4d8d97560a93da2fd7494b4366e3b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2233. Implemented ResourceManager web-services to create, renew and cancel delegation tokens. Contributed by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610876 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 4:00 PM",
      "commitName": "030580387a4d8d97560a93da2fd7494b4366e3b6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/07/14 5:23 PM",
      "commitNameOld": "075ff276ca9e8c192717a50b0e18485afc8571a6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 13.94,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public Response updateAppState(AppState targetState,\n       @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n       throws AuthorizationException, YarnException, InterruptedException,\n       IOException {\n \n     init();\n-    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr);\n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     if (callerUGI \u003d\u003d null) {\n       String msg \u003d \"Unable to obtain user name, user not authenticated\";\n       throw new AuthorizationException(msg);\n     }\n \n     String userName \u003d callerUGI.getUserName();\n     RMApp app \u003d null;\n     try {\n       app \u003d getRMAppForAppId(appId);\n     } catch (NotFoundException e) {\n       RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n         \"UNKNOWN\", \"RMWebService\", \"Trying to kill/move an absent application \"\n             + appId);\n       throw e;\n     }\n \n     if (!app.getState().toString().equals(targetState.getState())) {\n       // user is attempting to change state. right we only\n       // allow users to kill the app\n \n       if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n         return killApp(app, callerUGI, hsr);\n       }\n       throw new BadRequestException(\"Only \u0027\"\n           + YarnApplicationState.KILLED.toString()\n           + \"\u0027 is allowed as a target state.\");\n     }\n \n     AppState ret \u003d new AppState();\n     ret.setState(app.getState().toString());\n \n     return Response.status(Status.OK).entity(ret).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n      throws AuthorizationException, YarnException, InterruptedException,\n      IOException {\n\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n      throw new AuthorizationException(msg);\n    }\n\n    String userName \u003d callerUGI.getUserName();\n    RMApp app \u003d null;\n    try {\n      app \u003d getRMAppForAppId(appId);\n    } catch (NotFoundException e) {\n      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n        \"UNKNOWN\", \"RMWebService\", \"Trying to kill/move an absent application \"\n            + appId);\n      throw e;\n    }\n\n    if (!app.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the app\n\n      if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n        return killApp(app, callerUGI, hsr);\n      }\n      throw new BadRequestException(\"Only \u0027\"\n          + YarnApplicationState.KILLED.toString()\n          + \"\u0027 is allowed as a target state.\");\n    }\n\n    AppState ret \u003d new AppState();\n    ret.setState(app.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "dc7dd1fa191733a52ff5041556c9372d3a93004a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1702. Added kill app functionality to RM web services. Contributed by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602298 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/14 2:31 PM",
      "commitName": "dc7dd1fa191733a52ff5041556c9372d3a93004a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,40 @@\n+  public Response updateAppState(AppState targetState,\n+      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n+      throws AuthorizationException, YarnException, InterruptedException,\n+      IOException {\n+\n+    init();\n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr);\n+    if (callerUGI \u003d\u003d null) {\n+      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n+      throw new AuthorizationException(msg);\n+    }\n+\n+    String userName \u003d callerUGI.getUserName();\n+    RMApp app \u003d null;\n+    try {\n+      app \u003d getRMAppForAppId(appId);\n+    } catch (NotFoundException e) {\n+      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n+        \"UNKNOWN\", \"RMWebService\", \"Trying to kill/move an absent application \"\n+            + appId);\n+      throw e;\n+    }\n+\n+    if (!app.getState().toString().equals(targetState.getState())) {\n+      // user is attempting to change state. right we only\n+      // allow users to kill the app\n+\n+      if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n+        return killApp(app, callerUGI, hsr);\n+      }\n+      throw new BadRequestException(\"Only \u0027\"\n+          + YarnApplicationState.KILLED.toString()\n+          + \"\u0027 is allowed as a target state.\");\n+    }\n+\n+    AppState ret \u003d new AppState();\n+    ret.setState(app.getState().toString());\n+\n+    return Response.status(Status.OK).entity(ret).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState,\n      @Context HttpServletRequest hsr, @PathParam(\"appid\") String appId)\n      throws AuthorizationException, YarnException, InterruptedException,\n      IOException {\n\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated\";\n      throw new AuthorizationException(msg);\n    }\n\n    String userName \u003d callerUGI.getUserName();\n    RMApp app \u003d null;\n    try {\n      app \u003d getRMAppForAppId(appId);\n    } catch (NotFoundException e) {\n      RMAuditLogger.logFailure(userName, AuditConstants.KILL_APP_REQUEST,\n        \"UNKNOWN\", \"RMWebService\", \"Trying to kill/move an absent application \"\n            + appId);\n      throw e;\n    }\n\n    if (!app.getState().toString().equals(targetState.getState())) {\n      // user is attempting to change state. right we only\n      // allow users to kill the app\n\n      if (targetState.getState().equals(YarnApplicationState.KILLED.toString())) {\n        return killApp(app, callerUGI, hsr);\n      }\n      throw new BadRequestException(\"Only \u0027\"\n          + YarnApplicationState.KILLED.toString()\n          + \"\u0027 is allowed as a target state.\");\n    }\n\n    AppState ret \u003d new AppState();\n    ret.setState(app.getState().toString());\n\n    return Response.status(Status.OK).entity(ret).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}