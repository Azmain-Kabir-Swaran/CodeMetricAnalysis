{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Resource.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
  "functionStartLine": 467,
  "functionEndLine": 486,
  "numCommitsSeen": 43,
  "timeTaken": 3631,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
    "1bbab7c1570a2438b2fa6da70397dd1d5211a137",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "453926397182078c65a4428eb5de5a90d6af6448",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f4dc277572df6ba25fa961073b99a5bdb086c00"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": "Ybodychange",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Ybodychange",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": "Ybodychange",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": "Ybodychange",
    "1bbab7c1570a2438b2fa6da70397dd1d5211a137": "Ybodychange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "453926397182078c65a4428eb5de5a90d6af6448": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f4dc277572df6ba25fa961073b99a5bdb086c00": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "14/12/18 11:07 PM",
      "commitNameOld": "04c03476c9724f44a9c767db8e4af812a3669221",
      "commitAuthorOld": "Vidura Mudalige",
      "daysBetweenCommits": 72.53,
      "commitsBetweenForRepo": 511,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n \n     sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n         .append(getVirtualCores());\n \n     for (int i \u003d 2; i \u003c resources.length; i++) {\n       ResourceInformation ri \u003d resources[i];\n       if (ri.getValue() \u003d\u003d 0) {\n         continue;\n       }\n-      sb.append(\", \");\n-      sb.append(ri.getName()).append(\": \")\n-          .append(ri.getValue());\n-      sb.append(ri.getUnits());\n+      sb.append(\", \")\n+          .append(ri.getName()).append(\": \")\n+          .append(ri.getValue())\n+          .append(ri.getUnits());\n     }\n \n     sb.append(\"\u003e\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n\n    sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n        .append(getVirtualCores());\n\n    for (int i \u003d 2; i \u003c resources.length; i++) {\n      ResourceInformation ri \u003d resources[i];\n      if (ri.getValue() \u003d\u003d 0) {\n        continue;\n      }\n      sb.append(\", \")\n          .append(ri.getName()).append(\": \")\n          .append(ri.getValue())\n          .append(ri.getUnits());\n    }\n\n    sb.append(\"\u003e\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7136. Additional Performance Improvement for Resource Profile Feature\n(Contributed by Wangda Tan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "a6989af1d91d8b6795862c39d154823f8488c8de",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n+\n     sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n         .append(getVirtualCores());\n-    for (ResourceInformation entry : getResources()) {\n-      if (entry.getName().equals(MEMORY)\n-          \u0026\u0026 entry.getUnits()\n-          .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n+\n+    for (int i \u003d 2; i \u003c resources.length; i++) {\n+      ResourceInformation ri \u003d resources[i];\n+      if (ri.getValue() \u003d\u003d 0) {\n         continue;\n       }\n-      if (entry.getName().equals(VCORES)\n-          \u0026\u0026 entry.getUnits()\n-          .equals(ResourceInformation.VCORES.getUnits())) {\n-        continue;\n-      }\n-      sb.append(\", \").append(entry.getName()).append(\": \")\n-          .append(entry.getValue())\n-          .append(entry.getUnits());\n+      sb.append(\", \");\n+      sb.append(ri.getName()).append(\": \")\n+          .append(ri.getValue());\n+      sb.append(ri.getUnits());\n     }\n+\n     sb.append(\"\u003e\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n\n    sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n        .append(getVirtualCores());\n\n    for (int i \u003d 2; i \u003c resources.length; i++) {\n      ResourceInformation ri \u003d resources[i];\n      if (ri.getValue() \u003d\u003d 0) {\n        continue;\n      }\n      sb.append(\", \");\n      sb.append(ri.getName()).append(\": \")\n          .append(ri.getValue());\n      sb.append(ri.getUnits());\n    }\n\n    sb.append(\"\u003e\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ca2808d8bbe49766029e5dba88ff863f6c993287",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n         .append(getVirtualCores());\n-    for (Map.Entry\u003cString, ResourceInformation\u003e entry : getResources()\n-        .entrySet()) {\n-      if (entry.getKey().equals(ResourceInformation.MEMORY_MB.getName())\n-          \u0026\u0026 entry.getValue().getUnits()\n+    for (ResourceInformation entry : getResources()) {\n+      if (entry.getName().equals(MEMORY)\n+          \u0026\u0026 entry.getUnits()\n           .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n         continue;\n       }\n-      if (entry.getKey().equals(ResourceInformation.VCORES.getName())\n-          \u0026\u0026 entry.getValue().getUnits()\n+      if (entry.getName().equals(VCORES)\n+          \u0026\u0026 entry.getUnits()\n           .equals(ResourceInformation.VCORES.getUnits())) {\n         continue;\n       }\n-      sb.append(\", \").append(entry.getKey()).append(\": \")\n-          .append(entry.getValue().getValue())\n-          .append(entry.getValue().getUnits());\n+      sb.append(\", \").append(entry.getName()).append(\": \")\n+          .append(entry.getValue())\n+          .append(entry.getUnits());\n     }\n     sb.append(\"\u003e\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n        .append(getVirtualCores());\n    for (ResourceInformation entry : getResources()) {\n      if (entry.getName().equals(MEMORY)\n          \u0026\u0026 entry.getUnits()\n          .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n        continue;\n      }\n      if (entry.getName().equals(VCORES)\n          \u0026\u0026 entry.getUnits()\n          .equals(ResourceInformation.VCORES.getUnits())) {\n        continue;\n      }\n      sb.append(\", \").append(entry.getName()).append(\": \")\n          .append(entry.getValue())\n          .append(entry.getUnits());\n    }\n    sb.append(\"\u003e\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4830. Add support for resource types in the nodemanager. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n         .append(getVirtualCores());\n     for (Map.Entry\u003cString, ResourceInformation\u003e entry : getResources()\n         .entrySet()) {\n       if (entry.getKey().equals(ResourceInformation.MEMORY_MB.getName())\n           \u0026\u0026 entry.getValue().getUnits()\n           .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n         continue;\n       }\n       if (entry.getKey().equals(ResourceInformation.VCORES.getName())\n-          \u0026\u0026 entry.getValue().getUnits().equals(\"\")) {\n+          \u0026\u0026 entry.getValue().getUnits()\n+          .equals(ResourceInformation.VCORES.getUnits())) {\n         continue;\n       }\n       sb.append(\", \").append(entry.getKey()).append(\": \")\n           .append(entry.getValue().getValue())\n           .append(entry.getValue().getUnits());\n     }\n     sb.append(\"\u003e\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n        .append(getVirtualCores());\n    for (Map.Entry\u003cString, ResourceInformation\u003e entry : getResources()\n        .entrySet()) {\n      if (entry.getKey().equals(ResourceInformation.MEMORY_MB.getName())\n          \u0026\u0026 entry.getValue().getUnits()\n          .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n        continue;\n      }\n      if (entry.getKey().equals(ResourceInformation.VCORES.getName())\n          \u0026\u0026 entry.getValue().getUnits()\n          .equals(ResourceInformation.VCORES.getUnits())) {\n        continue;\n      }\n      sb.append(\", \").append(entry.getKey()).append(\": \")\n          .append(entry.getValue().getValue())\n          .append(entry.getValue().getUnits());\n    }\n    sb.append(\"\u003e\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4715. Add support to read resource types from a config file. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "1bbab7c1570a2438b2fa6da70397dd1d5211a137",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n         .append(getVirtualCores());\n     for (Map.Entry\u003cString, ResourceInformation\u003e entry : getResources()\n         .entrySet()) {\n-      if (entry.getKey().equals(ResourceInformation.MEMORY.getName())\n+      if (entry.getKey().equals(ResourceInformation.MEMORY_MB.getName())\n           \u0026\u0026 entry.getValue().getUnits()\n           .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n         continue;\n       }\n       if (entry.getKey().equals(ResourceInformation.VCORES.getName())\n           \u0026\u0026 entry.getValue().getUnits().equals(\"\")) {\n         continue;\n       }\n       sb.append(\", \").append(entry.getKey()).append(\": \")\n           .append(entry.getValue().getValue())\n           .append(entry.getValue().getUnits());\n     }\n     sb.append(\"\u003e\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n        .append(getVirtualCores());\n    for (Map.Entry\u003cString, ResourceInformation\u003e entry : getResources()\n        .entrySet()) {\n      if (entry.getKey().equals(ResourceInformation.MEMORY_MB.getName())\n          \u0026\u0026 entry.getValue().getUnits()\n          .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n        continue;\n      }\n      if (entry.getKey().equals(ResourceInformation.VCORES.getName())\n          \u0026\u0026 entry.getValue().getUnits().equals(\"\")) {\n        continue;\n      }\n      sb.append(\", \").append(entry.getKey()).append(\": \")\n          .append(entry.getValue().getValue())\n          .append(entry.getValue().getUnits());\n    }\n    sb.append(\"\u003e\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "1bbab7c1570a2438b2fa6da70397dd1d5211a137": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4081. Add support for multiple resource types in the Resource class. (Varun Vasudev via wangda)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "1bbab7c1570a2438b2fa6da70397dd1d5211a137",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/06/17 10:08 AM",
      "commitNameOld": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 95.97,
      "commitsBetweenForRepo": 641,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,22 @@\n   public String toString() {\n-    return \"\u003cmemory:\" + getMemorySize() + \", vCores:\" + getVirtualCores() + \"\u003e\";\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n+        .append(getVirtualCores());\n+    for (Map.Entry\u003cString, ResourceInformation\u003e entry : getResources()\n+        .entrySet()) {\n+      if (entry.getKey().equals(ResourceInformation.MEMORY.getName())\n+          \u0026\u0026 entry.getValue().getUnits()\n+          .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n+        continue;\n+      }\n+      if (entry.getKey().equals(ResourceInformation.VCORES.getName())\n+          \u0026\u0026 entry.getValue().getUnits().equals(\"\")) {\n+        continue;\n+      }\n+      sb.append(\", \").append(entry.getKey()).append(\": \")\n+          .append(entry.getValue().getValue())\n+          .append(entry.getValue().getUnits());\n+    }\n+    sb.append(\"\u003e\");\n+    return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"\u003cmemory:\").append(getMemorySize()).append(\", vCores:\")\n        .append(getVirtualCores());\n    for (Map.Entry\u003cString, ResourceInformation\u003e entry : getResources()\n        .entrySet()) {\n      if (entry.getKey().equals(ResourceInformation.MEMORY.getName())\n          \u0026\u0026 entry.getValue().getUnits()\n          .equals(ResourceInformation.MEMORY_MB.getUnits())) {\n        continue;\n      }\n      if (entry.getKey().equals(ResourceInformation.VCORES.getName())\n          \u0026\u0026 entry.getValue().getUnits().equals(\"\")) {\n        continue;\n      }\n      sb.append(\", \").append(entry.getKey()).append(\": \")\n          .append(entry.getValue().getValue())\n          .append(entry.getValue().getUnits());\n    }\n    sb.append(\"\u003e\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "08/10/13 10:56 PM",
      "commitNameOld": "00388655e569b785985024ccfbcad162a6b3ab5a",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 963.42,
      "commitsBetweenForRepo": 7314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public String toString() {\n-    return \"\u003cmemory:\" + getMemory() + \", vCores:\" + getVirtualCores() + \"\u003e\";\n+    return \"\u003cmemory:\" + getMemorySize() + \", vCores:\" + getVirtualCores() + \"\u003e\";\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"\u003cmemory:\" + getMemorySize() + \", vCores:\" + getVirtualCores() + \"\u003e\";\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "453926397182078c65a4428eb5de5a90d6af6448": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2. Enhanced CapacityScheduler to account for CPU alongwith memory for multi-dimensional resource scheduling. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1430682 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/01/13 9:08 PM",
      "commitName": "453926397182078c65a4428eb5de5a90d6af6448",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 153.99,
      "commitsBetweenForRepo": 815,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public String toString() {\n-    return \"memory: \" + getMemory();\n+    return \"\u003cmemory:\" + getMemory() + \", vCores:\" + getVirtualCores() + \"\u003e\";\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"\u003cmemory:\" + getMemory() + \", vCores:\" + getVirtualCores() + \"\u003e\";\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String toString() {\n    return \"memory: \" + getMemory();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java"
      }
    },
    "7f4dc277572df6ba25fa961073b99a5bdb086c00": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3256. Added authorization checks for the protocol between NodeManager and ApplicationMaster. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1194850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/10/11 2:35 AM",
      "commitName": "7f4dc277572df6ba25fa961073b99a5bdb086c00",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,3 @@\n+  public String toString() {\n+    return \"memory: \" + getMemory();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    return \"memory: \" + getMemory();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java"
    }
  }
}