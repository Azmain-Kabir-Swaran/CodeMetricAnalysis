{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Component.java",
  "functionName": "updateStateForLongRunningComponents",
  "functionId": "updateStateForLongRunningComponents___component-Component",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
  "functionStartLine": 509,
  "functionEndLine": 529,
  "numCommitsSeen": 56,
  "timeTaken": 3750,
  "changeHistory": [
    "913f87dada27776c539dfb352400ecf8d40e7943",
    "7f083ed8699a720d3fb82e4ec310356902a6ac30",
    "4a7369b09547a78f532af66c763c6994a38b5d68",
    "41b581012a83a17db785343362c718363e13e8f5",
    "68acd88dcbfe03a0134c60b5398dfaa31ad2b786",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "913f87dada27776c539dfb352400ecf8d40e7943": "Ybodychange",
    "7f083ed8699a720d3fb82e4ec310356902a6ac30": "Yrename",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Ybodychange",
    "41b581012a83a17db785343362c718363e13e8f5": "Ybodychange",
    "68acd88dcbfe03a0134c60b5398dfaa31ad2b786": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "913f87dada27776c539dfb352400ecf8d40e7943": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/09/18 11:51 AM",
      "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "21/08/18 4:49 PM",
      "commitNameOld": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 35.79,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private static ComponentState updateStateForLongRunningComponents(\n       Component component) {\n     // if desired \u003d\u003d running\n     if (component.componentMetrics.containersReady.value() \u003d\u003d component\n-        .getComponentSpec().getNumberOfContainers()\n-        \u0026\u0026 component.numContainersThatNeedUpgrade.get() \u003d\u003d 0) {\n-      component.componentSpec.setState(\n+        .getComponentSpec().getNumberOfContainers() \u0026\u0026\n+        !component.doesNeedUpgrade()) {\n+      component.setComponentState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n       return STABLE;\n+    } else if (component.doesNeedUpgrade()) {\n+      component.setComponentState(org.apache.hadoop.yarn.service.api.records.\n+          ComponentState.NEEDS_UPGRADE);\n+      return component.getState();\n     } else if (component.componentMetrics.containersReady.value() !\u003d component\n         .getComponentSpec().getNumberOfContainers()) {\n-      component.componentSpec.setState(\n+      component.setComponentState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n       return FLEXING;\n-    } else {\n-      //  component.numContainersThatNeedUpgrade.get() \u003e 0\n-      component.componentSpec.setState(org.apache.hadoop.yarn.service.api.\n-          records.ComponentState.NEEDS_UPGRADE);\n-      return UPGRADING;\n     }\n+    return component.getState();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static ComponentState updateStateForLongRunningComponents(\n      Component component) {\n    // if desired \u003d\u003d running\n    if (component.componentMetrics.containersReady.value() \u003d\u003d component\n        .getComponentSpec().getNumberOfContainers() \u0026\u0026\n        !component.doesNeedUpgrade()) {\n      component.setComponentState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n      return STABLE;\n    } else if (component.doesNeedUpgrade()) {\n      component.setComponentState(org.apache.hadoop.yarn.service.api.records.\n          ComponentState.NEEDS_UPGRADE);\n      return component.getState();\n    } else if (component.componentMetrics.containersReady.value() !\u003d component\n        .getComponentSpec().getNumberOfContainers()) {\n      component.setComponentState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n      return FLEXING;\n    }\n    return component.getState();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "7f083ed8699a720d3fb82e4ec310356902a6ac30": {
      "type": "Yrename",
      "commitMessage": "YARN-8080.  Add restart policy for YARN services.\n            Contributed by Suma Shivaprasad\n",
      "commitDate": "17/05/18 2:16 PM",
      "commitName": "7f083ed8699a720d3fb82e4ec310356902a6ac30",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "11/05/18 12:49 PM",
      "commitNameOld": "ca612e353fc3e3766868ec0816de035e48b1f5b4",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 6.06,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n-  private static ComponentState checkIfStable(Component component) {\n+  private static ComponentState updateStateForLongRunningComponents(\n+      Component component) {\n     // if desired \u003d\u003d running\n     if (component.componentMetrics.containersReady.value() \u003d\u003d component\n-        .getComponentSpec().getNumberOfContainers() \u0026\u0026\n-        component.numContainersThatNeedUpgrade.get() \u003d\u003d 0) {\n+        .getComponentSpec().getNumberOfContainers()\n+        \u0026\u0026 component.numContainersThatNeedUpgrade.get() \u003d\u003d 0) {\n       component.componentSpec.setState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n       return STABLE;\n     } else if (component.componentMetrics.containersReady.value() !\u003d component\n         .getComponentSpec().getNumberOfContainers()) {\n       component.componentSpec.setState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n       return FLEXING;\n     } else {\n       //  component.numContainersThatNeedUpgrade.get() \u003e 0\n       component.componentSpec.setState(org.apache.hadoop.yarn.service.api.\n           records.ComponentState.NEEDS_UPGRADE);\n       return UPGRADING;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static ComponentState updateStateForLongRunningComponents(\n      Component component) {\n    // if desired \u003d\u003d running\n    if (component.componentMetrics.containersReady.value() \u003d\u003d component\n        .getComponentSpec().getNumberOfContainers()\n        \u0026\u0026 component.numContainersThatNeedUpgrade.get() \u003d\u003d 0) {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n      return STABLE;\n    } else if (component.componentMetrics.containersReady.value() !\u003d component\n        .getComponentSpec().getNumberOfContainers()) {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n      return FLEXING;\n    } else {\n      //  component.numContainersThatNeedUpgrade.get() \u003e 0\n      component.componentSpec.setState(org.apache.hadoop.yarn.service.api.\n          records.ComponentState.NEEDS_UPGRADE);\n      return UPGRADING;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {
        "oldValue": "checkIfStable",
        "newValue": "updateStateForLongRunningComponents"
      }
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "20/04/18 12:24 PM",
      "commitNameOld": "28e2244390c990877dc2ee2733cf9b8d2c75128e",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 6.06,
      "commitsBetweenForRepo": 538,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,20 @@\n   private static ComponentState checkIfStable(Component component) {\n     // if desired \u003d\u003d running\n     if (component.componentMetrics.containersReady.value() \u003d\u003d component\n-        .getComponentSpec().getNumberOfContainers()) {\n+        .getComponentSpec().getNumberOfContainers() \u0026\u0026\n+        component.numContainersThatNeedUpgrade.get() \u003d\u003d 0) {\n       component.componentSpec.setState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n       return STABLE;\n-    } else {\n+    } else if (component.componentMetrics.containersReady.value() !\u003d component\n+        .getComponentSpec().getNumberOfContainers()) {\n       component.componentSpec.setState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n       return FLEXING;\n+    } else {\n+      //  component.numContainersThatNeedUpgrade.get() \u003e 0\n+      component.componentSpec.setState(org.apache.hadoop.yarn.service.api.\n+          records.ComponentState.NEEDS_UPGRADE);\n+      return UPGRADING;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static ComponentState checkIfStable(Component component) {\n    // if desired \u003d\u003d running\n    if (component.componentMetrics.containersReady.value() \u003d\u003d component\n        .getComponentSpec().getNumberOfContainers() \u0026\u0026\n        component.numContainersThatNeedUpgrade.get() \u003d\u003d 0) {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n      return STABLE;\n    } else if (component.componentMetrics.containersReady.value() !\u003d component\n        .getComponentSpec().getNumberOfContainers()) {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n      return FLEXING;\n    } else {\n      //  component.numContainersThatNeedUpgrade.get() \u003e 0\n      component.componentSpec.setState(org.apache.hadoop.yarn.service.api.\n          records.ComponentState.NEEDS_UPGRADE);\n      return UPGRADING;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "41b581012a83a17db785343362c718363e13e8f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7616. Map YARN application status to Service Status more accurately.  (Contributed by Gour Saha)\n",
      "commitDate": "19/12/17 4:14 PM",
      "commitName": "41b581012a83a17db785343362c718363e13e8f5",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "13/12/17 4:29 PM",
      "commitNameOld": "438c1d333ebc0a3071bb556532ed959a4bd1e6d6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 5.99,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private static ComponentState checkIfStable(Component component) {\n     // if desired \u003d\u003d running\n-    if (component.componentMetrics.containersRunning.value() \u003d\u003d component\n+    if (component.componentMetrics.containersReady.value() \u003d\u003d component\n         .getComponentSpec().getNumberOfContainers()) {\n       component.componentSpec.setState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n       return STABLE;\n     } else {\n       component.componentSpec.setState(\n           org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n       return FLEXING;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static ComponentState checkIfStable(Component component) {\n    // if desired \u003d\u003d running\n    if (component.componentMetrics.containersReady.value() \u003d\u003d component\n        .getComponentSpec().getNumberOfContainers()) {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n      return STABLE;\n    } else {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n      return FLEXING;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "68acd88dcbfe03a0134c60b5398dfaa31ad2b786": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7323. Data structure update in service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "68acd88dcbfe03a0134c60b5398dfaa31ad2b786",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "b8a7ef1b64392094562e7782e0fd092934724ad2",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n   private static ComponentState checkIfStable(Component component) {\n     // if desired \u003d\u003d running\n     if (component.componentMetrics.containersRunning.value() \u003d\u003d component\n         .getComponentSpec().getNumberOfContainers()) {\n+      component.componentSpec.setState(\n+          org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n       return STABLE;\n     } else {\n+      component.componentSpec.setState(\n+          org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n       return FLEXING;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static ComponentState checkIfStable(Component component) {\n    // if desired \u003d\u003d running\n    if (component.componentMetrics.containersRunning.value() \u003d\u003d component\n        .getComponentSpec().getNumberOfContainers()) {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.STABLE);\n      return STABLE;\n    } else {\n      component.componentSpec.setState(\n          org.apache.hadoop.yarn.service.api.records.ComponentState.FLEXING);\n      return FLEXING;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static ComponentState checkIfStable(Component component) {\n    // if desired \u003d\u003d running\n    if (component.componentMetrics.containersRunning.value() \u003d\u003d component\n        .getComponentSpec().getNumberOfContainers()) {\n      return STABLE;\n    } else {\n      return FLEXING;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,9 @@\n+  private static ComponentState checkIfStable(Component component) {\n+    // if desired \u003d\u003d running\n+    if (component.componentMetrics.containersRunning.value() \u003d\u003d component\n+        .getComponentSpec().getNumberOfContainers()) {\n+      return STABLE;\n+    } else {\n+      return FLEXING;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ComponentState checkIfStable(Component component) {\n    // if desired \u003d\u003d running\n    if (component.componentMetrics.containersRunning.value() \u003d\u003d component\n        .getComponentSpec().getNumberOfContainers()) {\n      return STABLE;\n    } else {\n      return FLEXING;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java"
    }
  }
}