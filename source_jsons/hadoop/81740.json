{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SysInfoLinux.java",
  "functionName": "main",
  "functionId": "main___args-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
  "functionStartLine": 705,
  "functionEndLine": 734,
  "numCommitsSeen": 17,
  "timeTaken": 10288,
  "changeHistory": [
    "89d1fd5dac4bccf42d82686e146b02eb60d14736",
    "a431ed9075cf6f467be5ff10f4ffb131cb1d3216",
    "1a0752d85a15499d120b4a79af9bd740fcd1f8e0",
    "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "89d1fd5dac4bccf42d82686e146b02eb60d14736": "Ybodychange",
    "a431ed9075cf6f467be5ff10f4ffb131cb1d3216": "Ybodychange",
    "1a0752d85a15499d120b4a79af9bd740fcd1f8e0": "Ybodychange",
    "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d": "Ymultichange(Ymovefromfile,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "89d1fd5dac4bccf42d82686e146b02eb60d14736": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12356. Fix computing CPU usage statistics on Windows. (Inigo Goiri via wangda)\n",
      "commitDate": "19/01/16 5:27 AM",
      "commitName": "89d1fd5dac4bccf42d82686e146b02eb60d14736",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "13/07/15 3:36 PM",
      "commitNameOld": "a431ed9075cf6f467be5ff10f4ffb131cb1d3216",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 189.62,
      "commitsBetweenForRepo": 1257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public static void main(String[] args) {\n     SysInfoLinux plugin \u003d new SysInfoLinux();\n     System.out.println(\"Physical memory Size (bytes) : \"\n         + plugin.getPhysicalMemorySize());\n     System.out.println(\"Total Virtual memory Size (bytes) : \"\n         + plugin.getVirtualMemorySize());\n     System.out.println(\"Available Physical memory Size (bytes) : \"\n         + plugin.getAvailablePhysicalMemorySize());\n     System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n         + plugin.getAvailableVirtualMemorySize());\n     System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n     System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n     System.out.println(\"Cumulative CPU time (ms) : \" +\n             plugin.getCumulativeCpuTime());\n     System.out.println(\"Total network read (bytes) : \"\n             + plugin.getNetworkBytesRead());\n     System.out.println(\"Total network written (bytes) : \"\n             + plugin.getNetworkBytesWritten());\n     System.out.println(\"Total storage read (bytes) : \"\n             + plugin.getStorageBytesRead());\n     System.out.println(\"Total storage written (bytes) : \"\n             + plugin.getStorageBytesWritten());\n     try {\n       // Sleep so we can compute the CPU usage\n       Thread.sleep(500L);\n     } catch (InterruptedException e) {\n       // do nothing\n     }\n-    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n+    System.out.println(\"CPU usage % : \" + plugin.getCpuUsagePercentage());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    SysInfoLinux plugin \u003d new SysInfoLinux();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    System.out.println(\"Total network read (bytes) : \"\n            + plugin.getNetworkBytesRead());\n    System.out.println(\"Total network written (bytes) : \"\n            + plugin.getNetworkBytesWritten());\n    System.out.println(\"Total storage read (bytes) : \"\n            + plugin.getStorageBytesRead());\n    System.out.println(\"Total storage written (bytes) : \"\n            + plugin.getStorageBytesWritten());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsagePercentage());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
      "extendedDetails": {}
    },
    "a431ed9075cf6f467be5ff10f4ffb131cb1d3216": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12211. Collect disk usage on the node. Contributed by Robert Grandl\n",
      "commitDate": "13/07/15 3:36 PM",
      "commitName": "a431ed9075cf6f467be5ff10f4ffb131cb1d3216",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "09/07/15 5:48 PM",
      "commitNameOld": "1a0752d85a15499d120b4a79af9bd740fcd1f8e0",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 3.91,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,30 @@\n   public static void main(String[] args) {\n     SysInfoLinux plugin \u003d new SysInfoLinux();\n     System.out.println(\"Physical memory Size (bytes) : \"\n         + plugin.getPhysicalMemorySize());\n     System.out.println(\"Total Virtual memory Size (bytes) : \"\n         + plugin.getVirtualMemorySize());\n     System.out.println(\"Available Physical memory Size (bytes) : \"\n         + plugin.getAvailablePhysicalMemorySize());\n     System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n         + plugin.getAvailableVirtualMemorySize());\n     System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n     System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n     System.out.println(\"Cumulative CPU time (ms) : \" +\n             plugin.getCumulativeCpuTime());\n     System.out.println(\"Total network read (bytes) : \"\n             + plugin.getNetworkBytesRead());\n     System.out.println(\"Total network written (bytes) : \"\n             + plugin.getNetworkBytesWritten());\n+    System.out.println(\"Total storage read (bytes) : \"\n+            + plugin.getStorageBytesRead());\n+    System.out.println(\"Total storage written (bytes) : \"\n+            + plugin.getStorageBytesWritten());\n     try {\n       // Sleep so we can compute the CPU usage\n       Thread.sleep(500L);\n     } catch (InterruptedException e) {\n       // do nothing\n     }\n     System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    SysInfoLinux plugin \u003d new SysInfoLinux();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    System.out.println(\"Total network read (bytes) : \"\n            + plugin.getNetworkBytesRead());\n    System.out.println(\"Total network written (bytes) : \"\n            + plugin.getNetworkBytesWritten());\n    System.out.println(\"Total storage read (bytes) : \"\n            + plugin.getStorageBytesRead());\n    System.out.println(\"Total storage written (bytes) : \"\n            + plugin.getStorageBytesWritten());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
      "extendedDetails": {}
    },
    "1a0752d85a15499d120b4a79af9bd740fcd1f8e0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12210. Collect network usage on the node. Contributed by Robert Grandl\n",
      "commitDate": "09/07/15 5:48 PM",
      "commitName": "1a0752d85a15499d120b4a79af9bd740fcd1f8e0",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "09/07/15 9:56 AM",
      "commitNameOld": "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.33,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n   public static void main(String[] args) {\n     SysInfoLinux plugin \u003d new SysInfoLinux();\n     System.out.println(\"Physical memory Size (bytes) : \"\n         + plugin.getPhysicalMemorySize());\n     System.out.println(\"Total Virtual memory Size (bytes) : \"\n         + plugin.getVirtualMemorySize());\n     System.out.println(\"Available Physical memory Size (bytes) : \"\n         + plugin.getAvailablePhysicalMemorySize());\n     System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n         + plugin.getAvailableVirtualMemorySize());\n     System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n     System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n     System.out.println(\"Cumulative CPU time (ms) : \" +\n             plugin.getCumulativeCpuTime());\n+    System.out.println(\"Total network read (bytes) : \"\n+            + plugin.getNetworkBytesRead());\n+    System.out.println(\"Total network written (bytes) : \"\n+            + plugin.getNetworkBytesWritten());\n     try {\n       // Sleep so we can compute the CPU usage\n       Thread.sleep(500L);\n     } catch (InterruptedException e) {\n       // do nothing\n     }\n     System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    SysInfoLinux plugin \u003d new SysInfoLinux();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    System.out.println(\"Total network read (bytes) : \"\n            + plugin.getNetworkBytesRead());\n    System.out.println(\"Total network written (bytes) : \"\n            + plugin.getNetworkBytesWritten());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
      "extendedDetails": {}
    },
    "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HADOOP-12180. Move ResourceCalculatorPlugin from YARN to Common. (Chris Douglas via kasha)\n",
      "commitDate": "09/07/15 9:56 AM",
      "commitName": "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-12180. Move ResourceCalculatorPlugin from YARN to Common. (Chris Douglas via kasha)\n",
          "commitDate": "09/07/15 9:56 AM",
          "commitName": "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "09/07/15 9:48 AM",
          "commitNameOld": "aa067c6aa47b4c79577096817acc00ad6421180c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public static void main(String[] args) {\n-    LinuxResourceCalculatorPlugin plugin \u003d new LinuxResourceCalculatorPlugin();\n+    SysInfoLinux plugin \u003d new SysInfoLinux();\n     System.out.println(\"Physical memory Size (bytes) : \"\n         + plugin.getPhysicalMemorySize());\n     System.out.println(\"Total Virtual memory Size (bytes) : \"\n         + plugin.getVirtualMemorySize());\n     System.out.println(\"Available Physical memory Size (bytes) : \"\n         + plugin.getAvailablePhysicalMemorySize());\n     System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n         + plugin.getAvailableVirtualMemorySize());\n     System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n     System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n     System.out.println(\"Cumulative CPU time (ms) : \" +\n             plugin.getCumulativeCpuTime());\n     try {\n       // Sleep so we can compute the CPU usage\n       Thread.sleep(500L);\n     } catch (InterruptedException e) {\n       // do nothing\n     }\n     System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void main(String[] args) {\n    SysInfoLinux plugin \u003d new SysInfoLinux();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
            "oldMethodName": "main",
            "newMethodName": "main"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12180. Move ResourceCalculatorPlugin from YARN to Common. (Chris Douglas via kasha)\n",
          "commitDate": "09/07/15 9:56 AM",
          "commitName": "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "09/07/15 9:48 AM",
          "commitNameOld": "aa067c6aa47b4c79577096817acc00ad6421180c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public static void main(String[] args) {\n-    LinuxResourceCalculatorPlugin plugin \u003d new LinuxResourceCalculatorPlugin();\n+    SysInfoLinux plugin \u003d new SysInfoLinux();\n     System.out.println(\"Physical memory Size (bytes) : \"\n         + plugin.getPhysicalMemorySize());\n     System.out.println(\"Total Virtual memory Size (bytes) : \"\n         + plugin.getVirtualMemorySize());\n     System.out.println(\"Available Physical memory Size (bytes) : \"\n         + plugin.getAvailablePhysicalMemorySize());\n     System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n         + plugin.getAvailableVirtualMemorySize());\n     System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n     System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n     System.out.println(\"Cumulative CPU time (ms) : \" +\n             plugin.getCumulativeCpuTime());\n     try {\n       // Sleep so we can compute the CPU usage\n       Thread.sleep(500L);\n     } catch (InterruptedException e) {\n       // do nothing\n     }\n     System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void main(String[] args) {\n    SysInfoLinux plugin \u003d new SysInfoLinux();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String[] args) {\n    LinuxResourceCalculatorPlugin plugin \u003d new LinuxResourceCalculatorPlugin();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String[] args) {\n    LinuxResourceCalculatorPlugin plugin \u003d new LinuxResourceCalculatorPlugin();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String[] args) {\n    LinuxResourceCalculatorPlugin plugin \u003d new LinuxResourceCalculatorPlugin();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/LinuxResourceCalculatorPlugin.java",
        "newPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
        "oldMethodName": "main",
        "newMethodName": "main"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,22 @@\n+  public static void main(String[] args) {\n+    LinuxResourceCalculatorPlugin plugin \u003d new LinuxResourceCalculatorPlugin();\n+    System.out.println(\"Physical memory Size (bytes) : \"\n+        + plugin.getPhysicalMemorySize());\n+    System.out.println(\"Total Virtual memory Size (bytes) : \"\n+        + plugin.getVirtualMemorySize());\n+    System.out.println(\"Available Physical memory Size (bytes) : \"\n+        + plugin.getAvailablePhysicalMemorySize());\n+    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n+        + plugin.getAvailableVirtualMemorySize());\n+    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n+    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n+    System.out.println(\"Cumulative CPU time (ms) : \" +\n+            plugin.getCumulativeCpuTime());\n+    try {\n+      // Sleep so we can compute the CPU usage\n+      Thread.sleep(500L);\n+    } catch (InterruptedException e) {\n+      // do nothing\n+    }\n+    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    LinuxResourceCalculatorPlugin plugin \u003d new LinuxResourceCalculatorPlugin();\n    System.out.println(\"Physical memory Size (bytes) : \"\n        + plugin.getPhysicalMemorySize());\n    System.out.println(\"Total Virtual memory Size (bytes) : \"\n        + plugin.getVirtualMemorySize());\n    System.out.println(\"Available Physical memory Size (bytes) : \"\n        + plugin.getAvailablePhysicalMemorySize());\n    System.out.println(\"Total Available Virtual memory Size (bytes) : \"\n        + plugin.getAvailableVirtualMemorySize());\n    System.out.println(\"Number of Processors : \" + plugin.getNumProcessors());\n    System.out.println(\"CPU frequency (kHz) : \" + plugin.getCpuFrequency());\n    System.out.println(\"Cumulative CPU time (ms) : \" +\n            plugin.getCumulativeCpuTime());\n    try {\n      // Sleep so we can compute the CPU usage\n      Thread.sleep(500L);\n    } catch (InterruptedException e) {\n      // do nothing\n    }\n    System.out.println(\"CPU usage % : \" + plugin.getCpuUsage());\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/LinuxResourceCalculatorPlugin.java"
    }
  }
}