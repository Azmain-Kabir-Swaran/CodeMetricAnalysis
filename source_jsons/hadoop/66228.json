{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSRunner.java",
  "functionName": "init",
  "functionId": "init___tempConf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
  "functionStartLine": 179,
  "functionEndLine": 202,
  "numCommitsSeen": 40,
  "timeTaken": 2885,
  "changeHistory": [
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
    "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1",
    "ba8136615ab66c450884614557eddc6509d63b7c",
    "99880d0a16727c770da053464da87960c5b02065",
    "40e6a85d25387d4025585c5726b3e4e24c2c1572",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b"
  ],
  "changeHistoryShort": {
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": "Ybodychange",
    "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1": "Ybodychange",
    "ba8136615ab66c450884614557eddc6509d63b7c": "Ybodychange",
    "99880d0a16727c770da053464da87960c5b02065": "Ybodychange",
    "40e6a85d25387d4025585c5726b3e4e24c2c1572": "Ybodychange",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
      "commitDate": "14/02/19 9:26 AM",
      "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "15/10/18 3:40 AM",
      "commitNameOld": "b4a38e7b3e530756fb79d23dd4e218beeb5e3190",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 122.28,
      "commitsBetweenForRepo": 866,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void init(Configuration tempConf) throws ClassNotFoundException {\n     nmMap \u003d new ConcurrentHashMap\u003c\u003e();\n     queueAppNumMap \u003d new HashMap\u003c\u003e();\n     amMap \u003d new ConcurrentHashMap\u003c\u003e();\n     amClassMap \u003d new HashMap\u003c\u003e();\n-\n+    appIdAMSim \u003d new ConcurrentHashMap\u003c\u003e();\n     // runner configuration\n     setConf(tempConf);\n \n     // runner\n     poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n         SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n     SLSRunner.runner.setQueueSize(poolSize);\n     // \u003cAMType, Class\u003e map\n     for (Map.Entry e : tempConf) {\n       String key \u003d e.getKey().toString();\n       if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n         String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n         amClassMap.put(amType, Class.forName(tempConf.get(key)));\n       }\n     }\n \n     nodeManagerResource \u003d getNodeManagerResource();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void init(Configuration tempConf) throws ClassNotFoundException {\n    nmMap \u003d new ConcurrentHashMap\u003c\u003e();\n    queueAppNumMap \u003d new HashMap\u003c\u003e();\n    amMap \u003d new ConcurrentHashMap\u003c\u003e();\n    amClassMap \u003d new HashMap\u003c\u003e();\n    appIdAMSim \u003d new ConcurrentHashMap\u003c\u003e();\n    // runner configuration\n    setConf(tempConf);\n\n    // runner\n    poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n    SLSRunner.runner.setQueueSize(poolSize);\n    // \u003cAMType, Class\u003e map\n    for (Map.Entry e : tempConf) {\n      String key \u003d e.getKey().toString();\n      if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n        String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n        amClassMap.put(amType, Class.forName(tempConf.get(key)));\n      }\n    }\n\n    nodeManagerResource \u003d getNodeManagerResource();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8137. Parallelize node addition in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "20/04/18 9:09 AM",
      "commitName": "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "17/04/18 1:11 PM",
      "commitNameOld": "78860372bd8048168c6aa27a9526c40f5869cf2c",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 2.83,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void init(Configuration tempConf) throws ClassNotFoundException {\n-    nmMap \u003d new HashMap\u003c\u003e();\n+    nmMap \u003d new ConcurrentHashMap\u003c\u003e();\n     queueAppNumMap \u003d new HashMap\u003c\u003e();\n     amMap \u003d new ConcurrentHashMap\u003c\u003e();\n     amClassMap \u003d new HashMap\u003c\u003e();\n \n     // runner configuration\n     setConf(tempConf);\n \n     // runner\n-    int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n+    poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n         SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n     SLSRunner.runner.setQueueSize(poolSize);\n     // \u003cAMType, Class\u003e map\n     for (Map.Entry e : tempConf) {\n       String key \u003d e.getKey().toString();\n       if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n         String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n         amClassMap.put(amType, Class.forName(tempConf.get(key)));\n       }\n     }\n \n     nodeManagerResource \u003d getNodeManagerResource();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void init(Configuration tempConf) throws ClassNotFoundException {\n    nmMap \u003d new ConcurrentHashMap\u003c\u003e();\n    queueAppNumMap \u003d new HashMap\u003c\u003e();\n    amMap \u003d new ConcurrentHashMap\u003c\u003e();\n    amClassMap \u003d new HashMap\u003c\u003e();\n\n    // runner configuration\n    setConf(tempConf);\n\n    // runner\n    poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n    SLSRunner.runner.setQueueSize(poolSize);\n    // \u003cAMType, Class\u003e map\n    for (Map.Entry e : tempConf) {\n      String key \u003d e.getKey().toString();\n      if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n        String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n        amClassMap.put(amType, Class.forName(tempConf.get(key)));\n      }\n    }\n\n    nodeManagerResource \u003d getNodeManagerResource();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "ba8136615ab66c450884614557eddc6509d63b7c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7413. Support resource type in SLS (Contributed by Yufei Gu via Daniel Templeton)\n\nChange-Id: Ic0a897c123c5d2f57aae757ca6bcf1dad7b90d2b\n",
      "commitDate": "09/11/17 12:09 PM",
      "commitName": "ba8136615ab66c450884614557eddc6509d63b7c",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "27/10/17 2:41 PM",
      "commitNameOld": "99880d0a16727c770da053464da87960c5b02065",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 12.94,
      "commitsBetweenForRepo": 184,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   private void init(Configuration tempConf) throws ClassNotFoundException {\n     nmMap \u003d new HashMap\u003c\u003e();\n     queueAppNumMap \u003d new HashMap\u003c\u003e();\n     amMap \u003d new ConcurrentHashMap\u003c\u003e();\n     amClassMap \u003d new HashMap\u003c\u003e();\n \n     // runner configuration\n     setConf(tempConf);\n \n     // runner\n     int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n         SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n     SLSRunner.runner.setQueueSize(poolSize);\n     // \u003cAMType, Class\u003e map\n     for (Map.Entry e : tempConf) {\n       String key \u003d e.getKey().toString();\n       if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n         String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n         amClassMap.put(amType, Class.forName(tempConf.get(key)));\n       }\n     }\n+\n+    nodeManagerResource \u003d getNodeManagerResource();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void init(Configuration tempConf) throws ClassNotFoundException {\n    nmMap \u003d new HashMap\u003c\u003e();\n    queueAppNumMap \u003d new HashMap\u003c\u003e();\n    amMap \u003d new ConcurrentHashMap\u003c\u003e();\n    amClassMap \u003d new HashMap\u003c\u003e();\n\n    // runner configuration\n    setConf(tempConf);\n\n    // runner\n    int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n    SLSRunner.runner.setQueueSize(poolSize);\n    // \u003cAMType, Class\u003e map\n    for (Map.Entry e : tempConf) {\n      String key \u003d e.getKey().toString();\n      if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n        String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n        amClassMap.put(amType, Class.forName(tempConf.get(key)));\n      }\n    }\n\n    nodeManagerResource \u003d getNodeManagerResource();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "99880d0a16727c770da053464da87960c5b02065": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6505. Define the strings used in SLS JSON input file format. (Contributed by Gergely Novak)\n",
      "commitDate": "27/10/17 2:41 PM",
      "commitName": "99880d0a16727c770da053464da87960c5b02065",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "17/10/17 4:04 PM",
      "commitNameOld": "46eb1033a86ca53e7b94202567aef8af2417bdf8",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 9.94,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void init(Configuration tempConf) throws ClassNotFoundException {\n     nmMap \u003d new HashMap\u003c\u003e();\n     queueAppNumMap \u003d new HashMap\u003c\u003e();\n     amMap \u003d new ConcurrentHashMap\u003c\u003e();\n     amClassMap \u003d new HashMap\u003c\u003e();\n \n     // runner configuration\n     setConf(tempConf);\n \n     // runner\n     int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n         SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n     SLSRunner.runner.setQueueSize(poolSize);\n     // \u003cAMType, Class\u003e map\n     for (Map.Entry e : tempConf) {\n       String key \u003d e.getKey().toString();\n-      if (key.startsWith(SLSConfiguration.AM_TYPE)) {\n-        String amType \u003d key.substring(SLSConfiguration.AM_TYPE.length());\n+      if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n+        String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n         amClassMap.put(amType, Class.forName(tempConf.get(key)));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void init(Configuration tempConf) throws ClassNotFoundException {\n    nmMap \u003d new HashMap\u003c\u003e();\n    queueAppNumMap \u003d new HashMap\u003c\u003e();\n    amMap \u003d new ConcurrentHashMap\u003c\u003e();\n    amClassMap \u003d new HashMap\u003c\u003e();\n\n    // runner configuration\n    setConf(tempConf);\n\n    // runner\n    int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n    SLSRunner.runner.setQueueSize(poolSize);\n    // \u003cAMType, Class\u003e map\n    for (Map.Entry e : tempConf) {\n      String key \u003d e.getKey().toString();\n      if (key.startsWith(SLSConfiguration.AM_TYPE_PREFIX)) {\n        String amType \u003d key.substring(SLSConfiguration.AM_TYPE_PREFIX.length());\n        amClassMap.put(amType, Class.forName(tempConf.get(key)));\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "40e6a85d25387d4025585c5726b3e4e24c2c1572": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6560. SLS doesn\u0027t honor node total resource specified in sls-runner.xml. Contributed by Wangda Tan.\n",
      "commitDate": "18/05/17 10:19 AM",
      "commitName": "40e6a85d25387d4025585c5726b3e4e24c2c1572",
      "commitAuthor": "Sunil G",
      "commitDateOld": "16/05/17 5:52 PM",
      "commitNameOld": "101852ca11ed4a9c4d4664c6c797fa7173dc59ae",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 1.69,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   private void init(Configuration tempConf) throws ClassNotFoundException {\n     nmMap \u003d new HashMap\u003c\u003e();\n     queueAppNumMap \u003d new HashMap\u003c\u003e();\n     amMap \u003d new ConcurrentHashMap\u003c\u003e();\n     amClassMap \u003d new HashMap\u003c\u003e();\n \n     // runner configuration\n-    tempConf.addResource(\"sls-runner.xml\");\n-    super.setConf(tempConf);\n+    setConf(tempConf);\n \n     // runner\n     int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n         SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n     SLSRunner.runner.setQueueSize(poolSize);\n     // \u003cAMType, Class\u003e map\n     for (Map.Entry e : tempConf) {\n       String key \u003d e.getKey().toString();\n       if (key.startsWith(SLSConfiguration.AM_TYPE)) {\n         String amType \u003d key.substring(SLSConfiguration.AM_TYPE.length());\n         amClassMap.put(amType, Class.forName(tempConf.get(key)));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void init(Configuration tempConf) throws ClassNotFoundException {\n    nmMap \u003d new HashMap\u003c\u003e();\n    queueAppNumMap \u003d new HashMap\u003c\u003e();\n    amMap \u003d new ConcurrentHashMap\u003c\u003e();\n    amClassMap \u003d new HashMap\u003c\u003e();\n\n    // runner configuration\n    setConf(tempConf);\n\n    // runner\n    int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n    SLSRunner.runner.setQueueSize(poolSize);\n    // \u003cAMType, Class\u003e map\n    for (Map.Entry e : tempConf) {\n      String key \u003d e.getKey().toString();\n      if (key.startsWith(SLSConfiguration.AM_TYPE)) {\n        String amType \u003d key.substring(SLSConfiguration.AM_TYPE.length());\n        amClassMap.put(amType, Class.forName(tempConf.get(key)));\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,23 @@\n+  private void init(Configuration tempConf) throws ClassNotFoundException {\n+    nmMap \u003d new HashMap\u003c\u003e();\n+    queueAppNumMap \u003d new HashMap\u003c\u003e();\n+    amMap \u003d new ConcurrentHashMap\u003c\u003e();\n+    amClassMap \u003d new HashMap\u003c\u003e();\n+\n+    // runner configuration\n+    tempConf.addResource(\"sls-runner.xml\");\n+    super.setConf(tempConf);\n+\n+    // runner\n+    int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n+        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n+    SLSRunner.runner.setQueueSize(poolSize);\n+    // \u003cAMType, Class\u003e map\n+    for (Map.Entry e : tempConf) {\n+      String key \u003d e.getKey().toString();\n+      if (key.startsWith(SLSConfiguration.AM_TYPE)) {\n+        String amType \u003d key.substring(SLSConfiguration.AM_TYPE.length());\n+        amClassMap.put(amType, Class.forName(tempConf.get(key)));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void init(Configuration tempConf) throws ClassNotFoundException {\n    nmMap \u003d new HashMap\u003c\u003e();\n    queueAppNumMap \u003d new HashMap\u003c\u003e();\n    amMap \u003d new ConcurrentHashMap\u003c\u003e();\n    amClassMap \u003d new HashMap\u003c\u003e();\n\n    // runner configuration\n    tempConf.addResource(\"sls-runner.xml\");\n    super.setConf(tempConf);\n\n    // runner\n    int poolSize \u003d tempConf.getInt(SLSConfiguration.RUNNER_POOL_SIZE,\n        SLSConfiguration.RUNNER_POOL_SIZE_DEFAULT);\n    SLSRunner.runner.setQueueSize(poolSize);\n    // \u003cAMType, Class\u003e map\n    for (Map.Entry e : tempConf) {\n      String key \u003d e.getKey().toString();\n      if (key.startsWith(SLSConfiguration.AM_TYPE)) {\n        String amType \u003d key.substring(SLSConfiguration.AM_TYPE.length());\n        amClassMap.put(amType, Class.forName(tempConf.get(key)));\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java"
    }
  }
}