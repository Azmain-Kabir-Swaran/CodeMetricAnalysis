{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollector.java",
  "functionName": "aggregate",
  "functionId": "aggregate___aggregationGroups-Map__String,AggregationStatusTable____resultEntityId-String__resultEntityType-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
  "functionStartLine": 303,
  "functionEndLine": 314,
  "numCommitsSeen": 18,
  "timeTaken": 744,
  "changeHistory": [
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21"
  ],
  "changeHistoryShort": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3816. [Aggregation] App-level aggregation and accumulation for YARN system metrics (Li Lu via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "39cce4e629aadb7fadf1fb14a23108f55b59eb21",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,12 @@\n+  static TimelineEntity aggregate(\n+      Map\u003cString, AggregationStatusTable\u003e aggregationGroups,\n+      String resultEntityId, String resultEntityType) {\n+    TimelineEntity result \u003d new TimelineEntity();\n+    result.setId(resultEntityId);\n+    result.setType(resultEntityType);\n+    for (Map.Entry\u003cString, AggregationStatusTable\u003e entry\n+        : aggregationGroups.entrySet()) {\n+      entry.getValue().aggregateAllTo(result, entry.getKey());\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static TimelineEntity aggregate(\n      Map\u003cString, AggregationStatusTable\u003e aggregationGroups,\n      String resultEntityId, String resultEntityType) {\n    TimelineEntity result \u003d new TimelineEntity();\n    result.setId(resultEntityId);\n    result.setType(resultEntityType);\n    for (Map.Entry\u003cString, AggregationStatusTable\u003e entry\n        : aggregationGroups.entrySet()) {\n      entry.getValue().aggregateAllTo(result, entry.getKey());\n    }\n    return result;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java"
    }
  }
}