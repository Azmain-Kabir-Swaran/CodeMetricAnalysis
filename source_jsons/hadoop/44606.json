{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "retryOn",
  "functionId": "retryOn___op-ClientRetryOp",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 1491,
  "functionEndLine": 1524,
  "numCommitsSeen": 52,
  "timeTaken": 1138,
  "changeHistory": [
    "1a84c24b0cf6674fa755403971fa57d8e412b320"
  ],
  "changeHistoryShort": {
    "1a84c24b0cf6674fa755403971fa57d8e412b320": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a84c24b0cf6674fa755403971fa57d8e412b320": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7174. Add retry logic in LogsCLI when fetch running application logs. Contributed by Xuan Gong.\n",
      "commitDate": "15/09/17 3:33 PM",
      "commitName": "1a84c24b0cf6674fa755403971fa57d8e412b320",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,34 @@\n+    public Object retryOn(ClientRetryOp op)\n+        throws RuntimeException, IOException {\n+      int leftRetries \u003d maxRetries;\n+      retried \u003d false;\n+\n+      // keep trying\n+      while (true) {\n+        try {\n+          // try perform the op, if fail, keep retrying\n+          return op.run();\n+        } catch (IOException | RuntimeException e) {\n+          // break if there\u0027s no retries left\n+          if (leftRetries \u003d\u003d 0) {\n+            break;\n+          }\n+          if (op.shouldRetryOn(e)) {\n+            logException(e, leftRetries);\n+          } else {\n+            throw e;\n+          }\n+        }\n+        if (leftRetries \u003e 0) {\n+          leftRetries--;\n+        }\n+        retried \u003d true;\n+        try {\n+          // sleep for the given time interval\n+          Thread.sleep(retryInterval);\n+        } catch (InterruptedException ie) {\n+          System.out.println(\"Client retry sleep interrupted! \");\n+        }\n+      }\n+      throw new RuntimeException(\"Connection retries limit exceeded.\");\n+    };\n\\ No newline at end of file\n",
      "actualSource": "    public Object retryOn(ClientRetryOp op)\n        throws RuntimeException, IOException {\n      int leftRetries \u003d maxRetries;\n      retried \u003d false;\n\n      // keep trying\n      while (true) {\n        try {\n          // try perform the op, if fail, keep retrying\n          return op.run();\n        } catch (IOException | RuntimeException e) {\n          // break if there\u0027s no retries left\n          if (leftRetries \u003d\u003d 0) {\n            break;\n          }\n          if (op.shouldRetryOn(e)) {\n            logException(e, leftRetries);\n          } else {\n            throw e;\n          }\n        }\n        if (leftRetries \u003e 0) {\n          leftRetries--;\n        }\n        retried \u003d true;\n        try {\n          // sleep for the given time interval\n          Thread.sleep(retryInterval);\n        } catch (InterruptedException ie) {\n          System.out.println(\"Client retry sleep interrupted! \");\n        }\n      }\n      throw new RuntimeException(\"Connection retries limit exceeded.\");\n    };",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}