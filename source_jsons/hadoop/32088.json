{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHealthScriptRunner.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
  "functionStartLine": 146,
  "functionEndLine": 174,
  "numCommitsSeen": 21,
  "timeTaken": 11696,
  "changeHistory": [
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
    "cae331186da266eea1b0a6fc2c82604907ab0153",
    "05ede003868871addc30162e9707c3dc14ed6b7a",
    "d4ac6822e1c5dfac504ced48f10ab57a55b49e93",
    "31fff48ec4a7bf04a2078921316c58917c96f610",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": "Ymultichange(Ymovefromfile,Ybodychange)",
    "cae331186da266eea1b0a6fc2c82604907ab0153": "Ybodychange",
    "05ede003868871addc30162e9707c3dc14ed6b7a": "Ybodychange",
    "d4ac6822e1c5dfac504ced48f10ab57a55b49e93": "Yfilerename",
    "31fff48ec4a7bf04a2078921316c58917c96f610": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
      "commitDate": "15/12/19 8:28 AM",
      "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n     public void run() {\n       HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n       try {\n-        shexec.execute();\n+        commandExecutor.execute();\n       } catch (ExitCodeException e) {\n         // ignore the exit code of the script\n         status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n         // On Windows, we will not hit the Stream closed IOException\n         // thrown by stdout buffered reader for timeout event.\n-        if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n+        if (Shell.WINDOWS \u0026\u0026 commandExecutor.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n       } catch (Exception e) {\n         LOG.warn(\"Caught exception : \" + e.getMessage());\n-        if (!shexec.isTimedOut()) {\n+        if (!commandExecutor.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n         } else {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n         exceptionStackTrace \u003d StringUtils.stringifyException(e);\n       } finally {\n         if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n-          if (hasErrors(shexec.getOutput())) {\n+          if (hasErrors(commandExecutor.getOutput())) {\n             status \u003d HealthCheckerExitStatus.FAILED;\n           }\n         }\n         reportHealthStatus(status);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        commandExecutor.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n        // On Windows, we will not hit the Stream closed IOException\n        // thrown by stdout buffered reader for timeout event.\n        if (Shell.WINDOWS \u0026\u0026 commandExecutor.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!commandExecutor.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(commandExecutor.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
            "oldMethodName": "run",
            "newMethodName": "run"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9923. Introduce HealthReporter interface to support multiple health checker files. Contributed by Adam Antal\n",
          "commitDate": "15/12/19 8:28 AM",
          "commitName": "631dbbc6f2f7c1c9c61f036e96a5ece6608ed7fa",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "14/12/19 11:03 AM",
          "commitNameOld": "7a8700754537353496b7546177a4706f3f1404cf",
          "commitAuthorOld": "Ayush Saxena",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n     public void run() {\n       HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n       try {\n-        shexec.execute();\n+        commandExecutor.execute();\n       } catch (ExitCodeException e) {\n         // ignore the exit code of the script\n         status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n         // On Windows, we will not hit the Stream closed IOException\n         // thrown by stdout buffered reader for timeout event.\n-        if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n+        if (Shell.WINDOWS \u0026\u0026 commandExecutor.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n       } catch (Exception e) {\n         LOG.warn(\"Caught exception : \" + e.getMessage());\n-        if (!shexec.isTimedOut()) {\n+        if (!commandExecutor.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n         } else {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n         exceptionStackTrace \u003d StringUtils.stringifyException(e);\n       } finally {\n         if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n-          if (hasErrors(shexec.getOutput())) {\n+          if (hasErrors(commandExecutor.getOutput())) {\n             status \u003d HealthCheckerExitStatus.FAILED;\n           }\n         }\n         reportHealthStatus(status);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        commandExecutor.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n        // On Windows, we will not hit the Stream closed IOException\n        // thrown by stdout buffered reader for timeout event.\n        if (Shell.WINDOWS \u0026\u0026 commandExecutor.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!commandExecutor.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(commandExecutor.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/health/NodeHealthScriptRunner.java",
          "extendedDetails": {}
        }
      ]
    },
    "cae331186da266eea1b0a6fc2c82604907ab0153": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-5567. Fix script exit code checking in NodeHealthScriptRunner#reportHealthStatus. (Yufei Gu via rchiang)\"\n\nThis reverts commit 05ede003868871addc30162e9707c3dc14ed6b7a.\n",
      "commitDate": "08/09/16 12:40 PM",
      "commitName": "cae331186da266eea1b0a6fc2c82604907ab0153",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "29/08/16 3:55 PM",
      "commitNameOld": "05ede003868871addc30162e9707c3dc14ed6b7a",
      "commitAuthorOld": "Ray Chiang",
      "daysBetweenCommits": 9.86,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n     public void run() {\n       HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n       try {\n         shexec.execute();\n       } catch (ExitCodeException e) {\n         // ignore the exit code of the script\n-        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n         status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n         // On Windows, we will not hit the Stream closed IOException\n         // thrown by stdout buffered reader for timeout event.\n         if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n       } catch (Exception e) {\n         LOG.warn(\"Caught exception : \" + e.getMessage());\n         if (!shexec.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n         } else {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n         exceptionStackTrace \u003d StringUtils.stringifyException(e);\n       } finally {\n         if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n           if (hasErrors(shexec.getOutput())) {\n             status \u003d HealthCheckerExitStatus.FAILED;\n           }\n         }\n         reportHealthStatus(status);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n        // On Windows, we will not hit the Stream closed IOException\n        // thrown by stdout buffered reader for timeout event.\n        if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
      "extendedDetails": {}
    },
    "05ede003868871addc30162e9707c3dc14ed6b7a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5567. Fix script exit code checking in NodeHealthScriptRunner#reportHealthStatus. (Yufei Gu via rchiang)\n",
      "commitDate": "29/08/16 3:55 PM",
      "commitName": "05ede003868871addc30162e9707c3dc14ed6b7a",
      "commitAuthor": "Ray Chiang",
      "commitDateOld": "04/05/15 3:49 PM",
      "commitNameOld": "71f4de220c74bf2c90630bd0442979d92380d304",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 483.0,
      "commitsBetweenForRepo": 3622,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n     public void run() {\n       HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n       try {\n         shexec.execute();\n       } catch (ExitCodeException e) {\n         // ignore the exit code of the script\n+        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n         status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n         // On Windows, we will not hit the Stream closed IOException\n         // thrown by stdout buffered reader for timeout event.\n         if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n       } catch (Exception e) {\n         LOG.warn(\"Caught exception : \" + e.getMessage());\n         if (!shexec.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n         } else {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n         exceptionStackTrace \u003d StringUtils.stringifyException(e);\n       } finally {\n         if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n           if (hasErrors(shexec.getOutput())) {\n             status \u003d HealthCheckerExitStatus.FAILED;\n           }\n         }\n         reportHealthStatus(status);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n        // On Windows, we will not hit the Stream closed IOException\n        // thrown by stdout buffered reader for timeout event.\n        if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
      "extendedDetails": {}
    },
    "d4ac6822e1c5dfac504ced48f10ab57a55b49e93": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2980. Move health check script related functionality to hadoop-common (Varun Saxena via aw)\n",
      "commitDate": "24/02/15 11:25 AM",
      "commitName": "d4ac6822e1c5dfac504ced48f10ab57a55b49e93",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "24/02/15 10:31 AM",
      "commitNameOld": "73bcfa99af61e5202f030510db8954c17cba43cc",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n        // On Windows, we will not hit the Stream closed IOException\n        // thrown by stdout buffered reader for timeout event.\n        if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NodeHealthScriptRunner.java"
      }
    },
    "31fff48ec4a7bf04a2078921316c58917c96f610": {
      "type": "Ybodychange",
      "commitMessage": "YARN-894. NodeHealthScriptRunner timeout checking is inaccurate on Windows. Contributed by Chuan Liu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/07/13 4:40 PM",
      "commitName": "31fff48ec4a7bf04a2078921316c58917c96f610",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 21.71,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,29 @@\n     public void run() {\n       HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n       try {\n         shexec.execute();\n       } catch (ExitCodeException e) {\n         // ignore the exit code of the script\n         status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n+        // On Windows, we will not hit the Stream closed IOException\n+        // thrown by stdout buffered reader for timeout event.\n+        if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n+          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n+        }\n       } catch (Exception e) {\n         LOG.warn(\"Caught exception : \" + e.getMessage());\n         if (!shexec.isTimedOut()) {\n           status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n         } else {\n           status \u003d HealthCheckerExitStatus.TIMED_OUT;\n         }\n         exceptionStackTrace \u003d StringUtils.stringifyException(e);\n       } finally {\n         if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n           if (hasErrors(shexec.getOutput())) {\n             status \u003d HealthCheckerExitStatus.FAILED;\n           }\n         }\n         reportHealthStatus(status);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n        // On Windows, we will not hit the Stream closed IOException\n        // thrown by stdout buffered reader for timeout event.\n        if (Shell.WINDOWS \u0026\u0026 shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "28/11/11 9:07 PM",
      "commitNameOld": "be9c46a4475f18ef33796ee63d73821c07c49fb5",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeHealthScriptRunner.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-        public void run() {\n-          while (true) {\n-            try {\n-              TaskTrackerAction action \u003d tasksToCleanup.take();\n-              if (action instanceof KillJobAction) {\n-                purgeJob((KillJobAction) action);\n-              } else if (action instanceof KillTaskAction) {\n-                processKillTaskAction((KillTaskAction) action);\n-              } else {\n-                LOG.error(\"Non-delete action given to cleanup thread: \"\n-                          + action);\n-              }\n-            } catch (Throwable except) {\n-              LOG.warn(StringUtils.stringifyException(except));\n-            }\n+    public void run() {\n+      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n+      try {\n+        shexec.execute();\n+      } catch (ExitCodeException e) {\n+        // ignore the exit code of the script\n+        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n+      } catch (Exception e) {\n+        LOG.warn(\"Caught exception : \" + e.getMessage());\n+        if (!shexec.isTimedOut()) {\n+          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n+        } else {\n+          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n+        }\n+        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n+      } finally {\n+        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n+          if (hasErrors(shexec.getOutput())) {\n+            status \u003d HealthCheckerExitStatus.FAILED;\n           }\n-        }\n\\ No newline at end of file\n+        }\n+        reportHealthStatus(status);\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java",
            "newPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
            "oldMethodName": "run",
            "newMethodName": "run"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-        public void run() {\n-          while (true) {\n-            try {\n-              TaskTrackerAction action \u003d tasksToCleanup.take();\n-              if (action instanceof KillJobAction) {\n-                purgeJob((KillJobAction) action);\n-              } else if (action instanceof KillTaskAction) {\n-                processKillTaskAction((KillTaskAction) action);\n-              } else {\n-                LOG.error(\"Non-delete action given to cleanup thread: \"\n-                          + action);\n-              }\n-            } catch (Throwable except) {\n-              LOG.warn(StringUtils.stringifyException(except));\n-            }\n+    public void run() {\n+      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n+      try {\n+        shexec.execute();\n+      } catch (ExitCodeException e) {\n+        // ignore the exit code of the script\n+        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n+      } catch (Exception e) {\n+        LOG.warn(\"Caught exception : \" + e.getMessage());\n+        if (!shexec.isTimedOut()) {\n+          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n+        } else {\n+          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n+        }\n+        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n+      } finally {\n+        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n+          if (hasErrors(shexec.getOutput())) {\n+            status \u003d HealthCheckerExitStatus.FAILED;\n           }\n-        }\n\\ No newline at end of file\n+        }\n+        reportHealthStatus(status);\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      HealthCheckerExitStatus status \u003d HealthCheckerExitStatus.SUCCESS;\n      try {\n        shexec.execute();\n      } catch (ExitCodeException e) {\n        // ignore the exit code of the script\n        status \u003d HealthCheckerExitStatus.FAILED_WITH_EXIT_CODE;\n      } catch (Exception e) {\n        LOG.warn(\"Caught exception : \" + e.getMessage());\n        if (!shexec.isTimedOut()) {\n          status \u003d HealthCheckerExitStatus.FAILED_WITH_EXCEPTION;\n        } else {\n          status \u003d HealthCheckerExitStatus.TIMED_OUT;\n        }\n        exceptionStackTrace \u003d StringUtils.stringifyException(e);\n      } finally {\n        if (status \u003d\u003d HealthCheckerExitStatus.SUCCESS) {\n          if (hasErrors(shexec.getOutput())) {\n            status \u003d HealthCheckerExitStatus.FAILED;\n          }\n        }\n        reportHealthStatus(status);\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/NodeHealthCheckerService.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,48 @@\n+  public void run() {\n+    try {\n+      startCleanupThreads();\n+      boolean denied \u003d false;\n+      while (running \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n+        boolean staleState \u003d false;\n+        try {\n+          // This while-loop attempts reconnects if we get network errors\n+          while (running \u0026\u0026 !staleState \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n+            try {\n+              State osState \u003d offerService();\n+              if (osState \u003d\u003d State.STALE) {\n+                staleState \u003d true;\n+              } else if (osState \u003d\u003d State.DENIED) {\n+                denied \u003d true;\n+              }\n+            } catch (Exception ex) {\n+              if (!shuttingDown) {\n+                LOG.info(\"Lost connection to JobTracker [\" +\n+                         jobTrackAddr + \"].  Retrying...\", ex);\n+                try {\n+                  Thread.sleep(5000);\n+                } catch (InterruptedException ie) {\n+                }\n+              }\n+            }\n+          }\n+        } finally {\n+          close();\n+        }\n+        if (shuttingDown) { return; }\n+        LOG.warn(\"Reinitializing local state\");\n+        initialize();\n+      }\n+      if (denied) {\n+        shutdown();\n+      }\n+    } catch (IOException iex) {\n+      LOG.error(\"Got fatal exception while reinitializing TaskTracker: \" +\n+                StringUtils.stringifyException(iex));\n+      return;\n+    }\n+    catch (InterruptedException i) {\n+      LOG.error(\"Got interrupted while reinitializing TaskTracker: \" + \n+          i.getMessage());\n+      return;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    try {\n      startCleanupThreads();\n      boolean denied \u003d false;\n      while (running \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n        boolean staleState \u003d false;\n        try {\n          // This while-loop attempts reconnects if we get network errors\n          while (running \u0026\u0026 !staleState \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n            try {\n              State osState \u003d offerService();\n              if (osState \u003d\u003d State.STALE) {\n                staleState \u003d true;\n              } else if (osState \u003d\u003d State.DENIED) {\n                denied \u003d true;\n              }\n            } catch (Exception ex) {\n              if (!shuttingDown) {\n                LOG.info(\"Lost connection to JobTracker [\" +\n                         jobTrackAddr + \"].  Retrying...\", ex);\n                try {\n                  Thread.sleep(5000);\n                } catch (InterruptedException ie) {\n                }\n              }\n            }\n          }\n        } finally {\n          close();\n        }\n        if (shuttingDown) { return; }\n        LOG.warn(\"Reinitializing local state\");\n        initialize();\n      }\n      if (denied) {\n        shutdown();\n      }\n    } catch (IOException iex) {\n      LOG.error(\"Got fatal exception while reinitializing TaskTracker: \" +\n                StringUtils.stringifyException(iex));\n      return;\n    }\n    catch (InterruptedException i) {\n      LOG.error(\"Got interrupted while reinitializing TaskTracker: \" + \n          i.getMessage());\n      return;\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java"
    }
  }
}