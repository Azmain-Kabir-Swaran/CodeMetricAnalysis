{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DockerLinuxContainerRuntime.java",
  "functionName": "reapContainer",
  "functionId": "reapContainer___ctx-ContainerRuntimeContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
  "functionStartLine": 977,
  "functionEndLine": 1000,
  "numCommitsSeen": 91,
  "timeTaken": 2677,
  "changeHistory": [
    "3d65dbe032e202361d613344ccc6d9c5f99ba395",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
    "3e6fce91a471b4a5099de109582e7c6417e8a822"
  ],
  "changeHistoryShort": {
    "3d65dbe032e202361d613344ccc6d9c5f99ba395": "Ybodychange",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": "Ybodychange",
    "3e6fce91a471b4a5099de109582e7c6417e8a822": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d65dbe032e202361d613344ccc6d9c5f99ba395": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5366. Improve signal handling and delete delay for Docker on Yarn.\n           (Contributed by Shane Kumpf)\n",
      "commitDate": "12/01/18 10:41 AM",
      "commitName": "3d65dbe032e202361d613344ccc6d9c5f99ba395",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "01/12/17 12:06 AM",
      "commitNameOld": "556aea3f367bdbd4e4db601bea0ca9bf2adde063",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 42.44,
      "commitsBetweenForRepo": 239,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   public void reapContainer(ContainerRuntimeContext ctx)\n       throws ContainerExecutionException {\n+    // Clean up the Docker container\n+    handleContainerRemove(ctx.getContainer().getContainerId().toString(),\n+        ctx.getContainer().getLaunchContext().getEnvironment());\n+\n     // Cleanup volumes when needed.\n     if (nmContext !\u003d null\n         \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n       for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n           .getNameToPlugins().values()) {\n         DockerCommandPlugin dockerCommandPlugin \u003d\n             plugin.getDockerCommandPluginInstance();\n         if (dockerCommandPlugin !\u003d null) {\n           DockerVolumeCommand dockerVolumeCommand \u003d\n               dockerCommandPlugin.getCleanupDockerVolumesCommand(\n                   ctx.getContainer());\n           if (dockerVolumeCommand !\u003d null) {\n             runDockerVolumeCommand(dockerVolumeCommand, ctx.getContainer());\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reapContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n    // Clean up the Docker container\n    handleContainerRemove(ctx.getContainer().getContainerId().toString(),\n        ctx.getContainer().getLaunchContext().getEnvironment());\n\n    // Cleanup volumes when needed.\n    if (nmContext !\u003d null\n        \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n      for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n          .getNameToPlugins().values()) {\n        DockerCommandPlugin dockerCommandPlugin \u003d\n            plugin.getDockerCommandPluginInstance();\n        if (dockerCommandPlugin !\u003d null) {\n          DockerVolumeCommand dockerVolumeCommand \u003d\n              dockerCommandPlugin.getCleanupDockerVolumesCommand(\n                  ctx.getContainer());\n          if (dockerVolumeCommand !\u003d null) {\n            runDockerVolumeCommand(dockerVolumeCommand, ctx.getContainer());\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
      "commitDate": "28/10/17 10:38 PM",
      "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthor": "Sunil G",
      "commitDateOld": "02/10/17 7:04 PM",
      "commitNameOld": "7eb8499996869cdb63743f1c9eca2ba91d57ad08",
      "commitAuthorOld": "Sidharta S",
      "daysBetweenCommits": 26.15,
      "commitsBetweenForRepo": 199,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,20 @@\n   public void reapContainer(ContainerRuntimeContext ctx)\n       throws ContainerExecutionException {\n+    // Cleanup volumes when needed.\n+    if (nmContext !\u003d null\n+        \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n+      for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n+          .getNameToPlugins().values()) {\n+        DockerCommandPlugin dockerCommandPlugin \u003d\n+            plugin.getDockerCommandPluginInstance();\n+        if (dockerCommandPlugin !\u003d null) {\n+          DockerVolumeCommand dockerVolumeCommand \u003d\n+              dockerCommandPlugin.getCleanupDockerVolumesCommand(\n+                  ctx.getContainer());\n+          if (dockerVolumeCommand !\u003d null) {\n+            runDockerVolumeCommand(dockerVolumeCommand, ctx.getContainer());\n+          }\n+        }\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reapContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n    // Cleanup volumes when needed.\n    if (nmContext !\u003d null\n        \u0026\u0026 nmContext.getResourcePluginManager().getNameToPlugins() !\u003d null) {\n      for (ResourcePlugin plugin : nmContext.getResourcePluginManager()\n          .getNameToPlugins().values()) {\n        DockerCommandPlugin dockerCommandPlugin \u003d\n            plugin.getDockerCommandPluginInstance();\n        if (dockerCommandPlugin !\u003d null) {\n          DockerVolumeCommand dockerVolumeCommand \u003d\n              dockerCommandPlugin.getCleanupDockerVolumesCommand(\n                  ctx.getContainer());\n          if (dockerVolumeCommand !\u003d null) {\n            runDockerVolumeCommand(dockerVolumeCommand, ctx.getContainer());\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "3e6fce91a471b4a5099de109582e7c6417e8a822": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3853. Add docker container runtime support to LinuxContainterExecutor. Contributed by Sidharta Seethana.\n",
      "commitDate": "27/07/15 11:57 AM",
      "commitName": "3e6fce91a471b4a5099de109582e7c6417e8a822",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,4 @@\n+  public void reapContainer(ContainerRuntimeContext ctx)\n+      throws ContainerExecutionException {\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void reapContainer(ContainerRuntimeContext ctx)\n      throws ContainerExecutionException {\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}