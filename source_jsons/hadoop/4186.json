{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StripedBlockUtil.java",
  "functionName": "getNextCompletedStripedRead",
  "functionId": "getNextCompletedStripedRead___readService-CompletionService__BlockReadStats____futures-Map__Future__BlockReadStats__,Integer____timeoutMillis-long(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/StripedBlockUtil.java",
  "functionStartLine": 289,
  "functionEndLine": 317,
  "numCommitsSeen": 31,
  "timeTaken": 1693,
  "changeHistory": [
    "08bb6c49a5aec32b7d9f29238560f947420405d6",
    "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932",
    "c6cafc77e697317dad0708309b67b900a2e3a413"
  ],
  "changeHistoryShort": {
    "08bb6c49a5aec32b7d9f29238560f947420405d6": "Ymultichange(Yparameterchange,Ybodychange)",
    "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932": "Ybodychange",
    "c6cafc77e697317dad0708309b67b900a2e3a413": "Ybodychange"
  },
  "changeHistoryDetails": {
    "08bb6c49a5aec32b7d9f29238560f947420405d6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13926. ThreadLocal aggregations for FileSystem.Statistics are incorrect with striped reads.\nContributed by Xiao Chen, Hrishikesh Gadre.\n\nSigned-off-by: Xiao Chen \u003cxiao@apache.org\u003e\n",
      "commitDate": "08/10/18 8:31 PM",
      "commitName": "08bb6c49a5aec32b7d9f29238560f947420405d6",
      "commitAuthor": "Hrishikesh Gadre",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13926. ThreadLocal aggregations for FileSystem.Statistics are incorrect with striped reads.\nContributed by Xiao Chen, Hrishikesh Gadre.\n\nSigned-off-by: Xiao Chen \u003cxiao@apache.org\u003e\n",
          "commitDate": "08/10/18 8:31 PM",
          "commitName": "08bb6c49a5aec32b7d9f29238560f947420405d6",
          "commitAuthor": "Hrishikesh Gadre",
          "commitDateOld": "01/10/18 5:49 PM",
          "commitNameOld": "f6c5ef9903dba5eb268997110ef169125327c2c8",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 7.11,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n   public static StripingChunkReadResult getNextCompletedStripedRead(\n-      CompletionService\u003cVoid\u003e readService, Map\u003cFuture\u003cVoid\u003e, Integer\u003e futures,\n+      CompletionService\u003cBlockReadStats\u003e readService,\n+      Map\u003cFuture\u003cBlockReadStats\u003e, Integer\u003e futures,\n       final long timeoutMillis) throws InterruptedException {\n     Preconditions.checkArgument(!futures.isEmpty());\n-    Future\u003cVoid\u003e future \u003d null;\n+    Future\u003cBlockReadStats\u003e future \u003d null;\n     try {\n       if (timeoutMillis \u003e 0) {\n         future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n       } else {\n         future \u003d readService.take();\n       }\n       if (future !\u003d null) {\n-        future.get();\n+        final BlockReadStats stats \u003d future.get();\n         return new StripingChunkReadResult(futures.remove(future),\n-            StripingChunkReadResult.SUCCESSFUL);\n+            StripingChunkReadResult.SUCCESSFUL, stats);\n       } else {\n         return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n       }\n     } catch (ExecutionException e) {\n       LOG.debug(\"Exception during striped read task\", e);\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.FAILED);\n     } catch (CancellationException e) {\n       LOG.debug(\"Exception during striped read task\", e);\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.CANCELLED);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StripingChunkReadResult getNextCompletedStripedRead(\n      CompletionService\u003cBlockReadStats\u003e readService,\n      Map\u003cFuture\u003cBlockReadStats\u003e, Integer\u003e futures,\n      final long timeoutMillis) throws InterruptedException {\n    Preconditions.checkArgument(!futures.isEmpty());\n    Future\u003cBlockReadStats\u003e future \u003d null;\n    try {\n      if (timeoutMillis \u003e 0) {\n        future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n      } else {\n        future \u003d readService.take();\n      }\n      if (future !\u003d null) {\n        final BlockReadStats stats \u003d future.get();\n        return new StripingChunkReadResult(futures.remove(future),\n            StripingChunkReadResult.SUCCESSFUL, stats);\n      } else {\n        return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n      }\n    } catch (ExecutionException e) {\n      LOG.debug(\"Exception during striped read task\", e);\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.FAILED);\n    } catch (CancellationException e) {\n      LOG.debug(\"Exception during striped read task\", e);\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.CANCELLED);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/StripedBlockUtil.java",
          "extendedDetails": {
            "oldValue": "[readService-CompletionService\u003cVoid\u003e, futures-Map\u003cFuture\u003cVoid\u003e,Integer\u003e, timeoutMillis-long(modifiers-final)]",
            "newValue": "[readService-CompletionService\u003cBlockReadStats\u003e, futures-Map\u003cFuture\u003cBlockReadStats\u003e,Integer\u003e, timeoutMillis-long(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13926. ThreadLocal aggregations for FileSystem.Statistics are incorrect with striped reads.\nContributed by Xiao Chen, Hrishikesh Gadre.\n\nSigned-off-by: Xiao Chen \u003cxiao@apache.org\u003e\n",
          "commitDate": "08/10/18 8:31 PM",
          "commitName": "08bb6c49a5aec32b7d9f29238560f947420405d6",
          "commitAuthor": "Hrishikesh Gadre",
          "commitDateOld": "01/10/18 5:49 PM",
          "commitNameOld": "f6c5ef9903dba5eb268997110ef169125327c2c8",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 7.11,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n   public static StripingChunkReadResult getNextCompletedStripedRead(\n-      CompletionService\u003cVoid\u003e readService, Map\u003cFuture\u003cVoid\u003e, Integer\u003e futures,\n+      CompletionService\u003cBlockReadStats\u003e readService,\n+      Map\u003cFuture\u003cBlockReadStats\u003e, Integer\u003e futures,\n       final long timeoutMillis) throws InterruptedException {\n     Preconditions.checkArgument(!futures.isEmpty());\n-    Future\u003cVoid\u003e future \u003d null;\n+    Future\u003cBlockReadStats\u003e future \u003d null;\n     try {\n       if (timeoutMillis \u003e 0) {\n         future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n       } else {\n         future \u003d readService.take();\n       }\n       if (future !\u003d null) {\n-        future.get();\n+        final BlockReadStats stats \u003d future.get();\n         return new StripingChunkReadResult(futures.remove(future),\n-            StripingChunkReadResult.SUCCESSFUL);\n+            StripingChunkReadResult.SUCCESSFUL, stats);\n       } else {\n         return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n       }\n     } catch (ExecutionException e) {\n       LOG.debug(\"Exception during striped read task\", e);\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.FAILED);\n     } catch (CancellationException e) {\n       LOG.debug(\"Exception during striped read task\", e);\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.CANCELLED);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static StripingChunkReadResult getNextCompletedStripedRead(\n      CompletionService\u003cBlockReadStats\u003e readService,\n      Map\u003cFuture\u003cBlockReadStats\u003e, Integer\u003e futures,\n      final long timeoutMillis) throws InterruptedException {\n    Preconditions.checkArgument(!futures.isEmpty());\n    Future\u003cBlockReadStats\u003e future \u003d null;\n    try {\n      if (timeoutMillis \u003e 0) {\n        future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n      } else {\n        future \u003d readService.take();\n      }\n      if (future !\u003d null) {\n        final BlockReadStats stats \u003d future.get();\n        return new StripingChunkReadResult(futures.remove(future),\n            StripingChunkReadResult.SUCCESSFUL, stats);\n      } else {\n        return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n      }\n    } catch (ExecutionException e) {\n      LOG.debug(\"Exception during striped read task\", e);\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.FAILED);\n    } catch (CancellationException e) {\n      LOG.debug(\"Exception during striped read task\", e);\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.CANCELLED);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/StripedBlockUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9646. ErasureCodingWorker may fail when recovering data blocks with length less than the first internal block. Contributed by Jing Zhao.\n",
      "commitDate": "22/01/16 9:46 AM",
      "commitName": "95363bcc7dae28ba9ae2cd7ee9a258fcb58cd932",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "28/10/15 1:18 AM",
      "commitNameOld": "c201cf951d5adefefe7c68e882a0c07962248577",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 86.39,
      "commitsBetweenForRepo": 553,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,28 @@\n   public static StripingChunkReadResult getNextCompletedStripedRead(\n       CompletionService\u003cVoid\u003e readService, Map\u003cFuture\u003cVoid\u003e, Integer\u003e futures,\n       final long timeoutMillis) throws InterruptedException {\n     Preconditions.checkArgument(!futures.isEmpty());\n     Future\u003cVoid\u003e future \u003d null;\n     try {\n       if (timeoutMillis \u003e 0) {\n         future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n       } else {\n         future \u003d readService.take();\n       }\n       if (future !\u003d null) {\n         future.get();\n         return new StripingChunkReadResult(futures.remove(future),\n             StripingChunkReadResult.SUCCESSFUL);\n       } else {\n         return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n       }\n     } catch (ExecutionException e) {\n-      if (DFSClient.LOG.isDebugEnabled()) {\n-        DFSClient.LOG.debug(\"Exception during striped read task\", e);\n-      }\n+      LOG.debug(\"Exception during striped read task\", e);\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.FAILED);\n     } catch (CancellationException e) {\n-      if (DFSClient.LOG.isDebugEnabled()) {\n-        DFSClient.LOG.debug(\"Exception during striped read task\", e);\n-      }\n+      LOG.debug(\"Exception during striped read task\", e);\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.CANCELLED);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StripingChunkReadResult getNextCompletedStripedRead(\n      CompletionService\u003cVoid\u003e readService, Map\u003cFuture\u003cVoid\u003e, Integer\u003e futures,\n      final long timeoutMillis) throws InterruptedException {\n    Preconditions.checkArgument(!futures.isEmpty());\n    Future\u003cVoid\u003e future \u003d null;\n    try {\n      if (timeoutMillis \u003e 0) {\n        future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n      } else {\n        future \u003d readService.take();\n      }\n      if (future !\u003d null) {\n        future.get();\n        return new StripingChunkReadResult(futures.remove(future),\n            StripingChunkReadResult.SUCCESSFUL);\n      } else {\n        return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n      }\n    } catch (ExecutionException e) {\n      LOG.debug(\"Exception during striped read task\", e);\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.FAILED);\n    } catch (CancellationException e) {\n      LOG.debug(\"Exception during striped read task\", e);\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.CANCELLED);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/StripedBlockUtil.java",
      "extendedDetails": {}
    },
    "c6cafc77e697317dad0708309b67b900a2e3a413": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9185. Fix null tracer in ErasureCodingWorker. Contributed by Rakesh R.\n",
      "commitDate": "02/10/15 11:08 AM",
      "commitName": "c6cafc77e697317dad0708309b67b900a2e3a413",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.4,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   public static StripingChunkReadResult getNextCompletedStripedRead(\n       CompletionService\u003cVoid\u003e readService, Map\u003cFuture\u003cVoid\u003e, Integer\u003e futures,\n       final long timeoutMillis) throws InterruptedException {\n     Preconditions.checkArgument(!futures.isEmpty());\n     Future\u003cVoid\u003e future \u003d null;\n     try {\n       if (timeoutMillis \u003e 0) {\n         future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n       } else {\n         future \u003d readService.take();\n       }\n       if (future !\u003d null) {\n         future.get();\n         return new StripingChunkReadResult(futures.remove(future),\n             StripingChunkReadResult.SUCCESSFUL);\n       } else {\n         return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n       }\n     } catch (ExecutionException e) {\n       if (DFSClient.LOG.isDebugEnabled()) {\n-        DFSClient.LOG.debug(\"ExecutionException \" + e);\n+        DFSClient.LOG.debug(\"Exception during striped read task\", e);\n       }\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.FAILED);\n     } catch (CancellationException e) {\n+      if (DFSClient.LOG.isDebugEnabled()) {\n+        DFSClient.LOG.debug(\"Exception during striped read task\", e);\n+      }\n       return new StripingChunkReadResult(futures.remove(future),\n           StripingChunkReadResult.CANCELLED);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static StripingChunkReadResult getNextCompletedStripedRead(\n      CompletionService\u003cVoid\u003e readService, Map\u003cFuture\u003cVoid\u003e, Integer\u003e futures,\n      final long timeoutMillis) throws InterruptedException {\n    Preconditions.checkArgument(!futures.isEmpty());\n    Future\u003cVoid\u003e future \u003d null;\n    try {\n      if (timeoutMillis \u003e 0) {\n        future \u003d readService.poll(timeoutMillis, TimeUnit.MILLISECONDS);\n      } else {\n        future \u003d readService.take();\n      }\n      if (future !\u003d null) {\n        future.get();\n        return new StripingChunkReadResult(futures.remove(future),\n            StripingChunkReadResult.SUCCESSFUL);\n      } else {\n        return new StripingChunkReadResult(StripingChunkReadResult.TIMEOUT);\n      }\n    } catch (ExecutionException e) {\n      if (DFSClient.LOG.isDebugEnabled()) {\n        DFSClient.LOG.debug(\"Exception during striped read task\", e);\n      }\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.FAILED);\n    } catch (CancellationException e) {\n      if (DFSClient.LOG.isDebugEnabled()) {\n        DFSClient.LOG.debug(\"Exception during striped read task\", e);\n      }\n      return new StripingChunkReadResult(futures.remove(future),\n          StripingChunkReadResult.CANCELLED);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/StripedBlockUtil.java",
      "extendedDetails": {}
    }
  }
}