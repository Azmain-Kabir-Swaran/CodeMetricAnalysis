{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MountTableResolver.java",
  "functionName": "initDefaultNameService",
  "functionId": "initDefaultNameService___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
  "functionStartLine": 164,
  "functionEndLine": 182,
  "numCommitsSeen": 21,
  "timeTaken": 2893,
  "changeHistory": [
    "c012b09fb678db11a10d0a8e1f64ee1a7229a417",
    "54f2044595206455484284b43e5976c8a1982aaf",
    "7b25fb949bf6f02df997beeca7df46c9e84c8d96",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "6f0de2731806628b5b01bd1350225692147590da"
  ],
  "changeHistoryShort": {
    "c012b09fb678db11a10d0a8e1f64ee1a7229a417": "Ybodychange",
    "54f2044595206455484284b43e5976c8a1982aaf": "Ybodychange",
    "7b25fb949bf6f02df997beeca7df46c9e84c8d96": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "6f0de2731806628b5b01bd1350225692147590da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c012b09fb678db11a10d0a8e1f64ee1a7229a417": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14193. RBF: Inconsistency with the Default Namespace. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "c012b09fb678db11a10d0a8e1f64ee1a7229a417",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "c5065bf20b410b917a0df219e45be2cce21a48ab",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,19 @@\n   private void initDefaultNameService(Configuration conf) {\n-    this.defaultNameService \u003d conf.get(\n-        DFS_ROUTER_DEFAULT_NAMESERVICE,\n-        DFSUtil.getNamenodeNameServiceId(conf));\n-\n     this.defaultNSEnable \u003d conf.getBoolean(\n         DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE,\n         DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE_DEFAULT);\n \n-    if (defaultNameService \u003d\u003d null) {\n-      LOG.warn(\n-          \"{} and {} is not set. Fallback to {} as the default name service.\",\n-          DFS_ROUTER_DEFAULT_NAMESERVICE, DFS_NAMESERVICE_ID, DFS_NAMESERVICES);\n-      Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n-      if (nsIds.isEmpty()) {\n-        this.defaultNameService \u003d \"\";\n-      } else {\n-        this.defaultNameService \u003d nsIds.iterator().next();\n-      }\n+    if (!this.defaultNSEnable) {\n+      LOG.warn(\"Default name service is disabled.\");\n+      return;\n     }\n+    this.defaultNameService \u003d conf.get(DFS_ROUTER_DEFAULT_NAMESERVICE, \"\");\n \n     if (this.defaultNameService.equals(\"\")) {\n       this.defaultNSEnable \u003d false;\n       LOG.warn(\"Default name service is not set.\");\n     } else {\n-      String enable \u003d this.defaultNSEnable ? \"enabled\" : \"disabled\";\n-      LOG.info(\"Default name service: {}, {} to read or write\",\n-          this.defaultNameService, enable);\n+      LOG.info(\"Default name service: {}, enabled to read or write\",\n+          this.defaultNameService);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initDefaultNameService(Configuration conf) {\n    this.defaultNSEnable \u003d conf.getBoolean(\n        DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE,\n        DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE_DEFAULT);\n\n    if (!this.defaultNSEnable) {\n      LOG.warn(\"Default name service is disabled.\");\n      return;\n    }\n    this.defaultNameService \u003d conf.get(DFS_ROUTER_DEFAULT_NAMESERVICE, \"\");\n\n    if (this.defaultNameService.equals(\"\")) {\n      this.defaultNSEnable \u003d false;\n      LOG.warn(\"Default name service is not set.\");\n    } else {\n      LOG.info(\"Default name service: {}, enabled to read or write\",\n          this.defaultNameService);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
      "extendedDetails": {}
    },
    "54f2044595206455484284b43e5976c8a1982aaf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13857. RBF: Choose to enable the default nameservice to read/write files. Contributed by yanghuafeng.\n",
      "commitDate": "04/09/18 12:17 PM",
      "commitName": "54f2044595206455484284b43e5976c8a1982aaf",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "21/08/18 8:43 PM",
      "commitNameOld": "81847392badcd58d934333e7c3b5bf14b4fa1f3f",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 13.65,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,30 @@\n   private void initDefaultNameService(Configuration conf) {\n     this.defaultNameService \u003d conf.get(\n         DFS_ROUTER_DEFAULT_NAMESERVICE,\n         DFSUtil.getNamenodeNameServiceId(conf));\n \n+    this.defaultNSEnable \u003d conf.getBoolean(\n+        DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE,\n+        DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE_DEFAULT);\n+\n     if (defaultNameService \u003d\u003d null) {\n       LOG.warn(\n           \"{} and {} is not set. Fallback to {} as the default name service.\",\n           DFS_ROUTER_DEFAULT_NAMESERVICE, DFS_NAMESERVICE_ID, DFS_NAMESERVICES);\n       Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n       if (nsIds.isEmpty()) {\n         this.defaultNameService \u003d \"\";\n       } else {\n         this.defaultNameService \u003d nsIds.iterator().next();\n       }\n     }\n \n     if (this.defaultNameService.equals(\"\")) {\n+      this.defaultNSEnable \u003d false;\n       LOG.warn(\"Default name service is not set.\");\n     } else {\n-      LOG.info(\"Default name service: {}\", this.defaultNameService);\n+      String enable \u003d this.defaultNSEnable ? \"enabled\" : \"disabled\";\n+      LOG.info(\"Default name service: {}, {} to read or write\",\n+          this.defaultNameService, enable);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initDefaultNameService(Configuration conf) {\n    this.defaultNameService \u003d conf.get(\n        DFS_ROUTER_DEFAULT_NAMESERVICE,\n        DFSUtil.getNamenodeNameServiceId(conf));\n\n    this.defaultNSEnable \u003d conf.getBoolean(\n        DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE,\n        DFS_ROUTER_DEFAULT_NAMESERVICE_ENABLE_DEFAULT);\n\n    if (defaultNameService \u003d\u003d null) {\n      LOG.warn(\n          \"{} and {} is not set. Fallback to {} as the default name service.\",\n          DFS_ROUTER_DEFAULT_NAMESERVICE, DFS_NAMESERVICE_ID, DFS_NAMESERVICES);\n      Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n      if (nsIds.isEmpty()) {\n        this.defaultNameService \u003d \"\";\n      } else {\n        this.defaultNameService \u003d nsIds.iterator().next();\n      }\n    }\n\n    if (this.defaultNameService.equals(\"\")) {\n      this.defaultNSEnable \u003d false;\n      LOG.warn(\"Default name service is not set.\");\n    } else {\n      String enable \u003d this.defaultNSEnable ? \"enabled\" : \"disabled\";\n      LOG.info(\"Default name service: {}, {} to read or write\",\n          this.defaultNameService, enable);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
      "extendedDetails": {}
    },
    "7b25fb949bf6f02df997beeca7df46c9e84c8d96": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13743. RBF: Router throws NullPointerException due to the invalid initialization of MountTableResolver. Contributed by Takanobu Asanuma.\n",
      "commitDate": "20/07/18 2:28 AM",
      "commitName": "7b25fb949bf6f02df997beeca7df46c9e84c8d96",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "11/04/18 8:37 AM",
      "commitNameOld": "0c93d43f3d624a4fd17b3b050443d9e7e20d4f0a",
      "commitAuthorOld": "Wei Yan",
      "daysBetweenCommits": 99.74,
      "commitsBetweenForRepo": 1209,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,23 @@\n   private void initDefaultNameService(Configuration conf) {\n-    try {\n-      this.defaultNameService \u003d conf.get(\n-          DFS_ROUTER_DEFAULT_NAMESERVICE,\n-          DFSUtil.getNamenodeNameServiceId(conf));\n-    } catch (HadoopIllegalArgumentException e) {\n-      LOG.error(\"Cannot find default name service, setting it to the first\");\n+    this.defaultNameService \u003d conf.get(\n+        DFS_ROUTER_DEFAULT_NAMESERVICE,\n+        DFSUtil.getNamenodeNameServiceId(conf));\n+\n+    if (defaultNameService \u003d\u003d null) {\n+      LOG.warn(\n+          \"{} and {} is not set. Fallback to {} as the default name service.\",\n+          DFS_ROUTER_DEFAULT_NAMESERVICE, DFS_NAMESERVICE_ID, DFS_NAMESERVICES);\n       Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n-      this.defaultNameService \u003d nsIds.iterator().next();\n+      if (nsIds.isEmpty()) {\n+        this.defaultNameService \u003d \"\";\n+      } else {\n+        this.defaultNameService \u003d nsIds.iterator().next();\n+      }\n+    }\n+\n+    if (this.defaultNameService.equals(\"\")) {\n+      LOG.warn(\"Default name service is not set.\");\n+    } else {\n       LOG.info(\"Default name service: {}\", this.defaultNameService);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initDefaultNameService(Configuration conf) {\n    this.defaultNameService \u003d conf.get(\n        DFS_ROUTER_DEFAULT_NAMESERVICE,\n        DFSUtil.getNamenodeNameServiceId(conf));\n\n    if (defaultNameService \u003d\u003d null) {\n      LOG.warn(\n          \"{} and {} is not set. Fallback to {} as the default name service.\",\n          DFS_ROUTER_DEFAULT_NAMESERVICE, DFS_NAMESERVICE_ID, DFS_NAMESERVICES);\n      Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n      if (nsIds.isEmpty()) {\n        this.defaultNameService \u003d \"\";\n      } else {\n        this.defaultNameService \u003d nsIds.iterator().next();\n      }\n    }\n\n    if (this.defaultNameService.equals(\"\")) {\n      LOG.warn(\"Default name service is not set.\");\n    } else {\n      LOG.info(\"Default name service: {}\", this.defaultNameService);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void initDefaultNameService(Configuration conf) {\n    try {\n      this.defaultNameService \u003d conf.get(\n          DFS_ROUTER_DEFAULT_NAMESERVICE,\n          DFSUtil.getNamenodeNameServiceId(conf));\n    } catch (HadoopIllegalArgumentException e) {\n      LOG.error(\"Cannot find default name service, setting it to the first\");\n      Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n      this.defaultNameService \u003d nsIds.iterator().next();\n      LOG.info(\"Default name service: {}\", this.defaultNameService);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java"
      }
    },
    "6f0de2731806628b5b01bd1350225692147590da": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10880. Federation Mount Table State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 58b97df661441150d35abd44b3a8606206b46441)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "6f0de2731806628b5b01bd1350225692147590da",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,12 @@\n+  private void initDefaultNameService(Configuration conf) {\n+    try {\n+      this.defaultNameService \u003d conf.get(\n+          DFS_ROUTER_DEFAULT_NAMESERVICE,\n+          DFSUtil.getNamenodeNameServiceId(conf));\n+    } catch (HadoopIllegalArgumentException e) {\n+      LOG.error(\"Cannot find default name service, setting it to the first\");\n+      Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n+      this.defaultNameService \u003d nsIds.iterator().next();\n+      LOG.info(\"Default name service: {}\", this.defaultNameService);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initDefaultNameService(Configuration conf) {\n    try {\n      this.defaultNameService \u003d conf.get(\n          DFS_ROUTER_DEFAULT_NAMESERVICE,\n          DFSUtil.getNamenodeNameServiceId(conf));\n    } catch (HadoopIllegalArgumentException e) {\n      LOG.error(\"Cannot find default name service, setting it to the first\");\n      Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n      this.defaultNameService \u003d nsIds.iterator().next();\n      LOG.info(\"Default name service: {}\", this.defaultNameService);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java"
    }
  }
}