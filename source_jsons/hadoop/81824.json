{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExitUtil.java",
  "functionName": "terminate",
  "functionId": "terminate___ee-ExitException",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
  "functionStartLine": 203,
  "functionEndLine": 220,
  "numCommitsSeen": 22,
  "timeTaken": 2517,
  "changeHistory": [
    "373bb4931fb392e3ca6bfd78992887e5a405e186",
    "64fc2cb03d865bb178e2cce82f3b9221ccfd5c0f",
    "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9"
  ],
  "changeHistoryShort": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "64fc2cb03d865bb178e2cce82f3b9221ccfd5c0f": "Ybodychange",
    "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
      "commitDate": "28/04/17 10:45 AM",
      "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "23/05/13 3:21 PM",
          "commitNameOld": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 1435.81,
          "commitsBetweenForRepo": 10442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-  public static void terminate(int status, String msg) throws ExitException {\n-    LOG.info(\"Exiting with status \" + status);\n+  public static synchronized void terminate(ExitException ee)\n+      throws ExitException {\n+    int status \u003d ee.getExitCode();\n+    String msg \u003d ee.getMessage();\n+    if (status !\u003d 0) {\n+      //exit indicates a problem, log it\n+      LOG.debug(\"Exiting with status {}: {}\",  status, msg, ee);\n+      LOG.info(\"Exiting with status {}: {}\", status, msg);\n+    }\n     if (systemExitDisabled) {\n-      ExitException ee \u003d new ExitException(status, msg);\n-      LOG.fatal(\"Terminate called\", ee);\n-      if (null \u003d\u003d firstExitException) {\n+      LOG.error(\"Terminate called\", ee);\n+      if (!terminateCalled()) {\n         firstExitException \u003d ee;\n       }\n       throw ee;\n     }\n     System.exit(status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void terminate(ExitException ee)\n      throws ExitException {\n    int status \u003d ee.getExitCode();\n    String msg \u003d ee.getMessage();\n    if (status !\u003d 0) {\n      //exit indicates a problem, log it\n      LOG.debug(\"Exiting with status {}: {}\",  status, msg, ee);\n      LOG.info(\"Exiting with status {}: {}\", status, msg);\n    }\n    if (systemExitDisabled) {\n      LOG.error(\"Terminate called\", ee);\n      if (!terminateCalled()) {\n        firstExitException \u003d ee;\n      }\n      throw ee;\n    }\n    System.exit(status);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
          "extendedDetails": {
            "oldValue": "[status-int, msg-String]",
            "newValue": "[ee-ExitException]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "23/05/13 3:21 PM",
          "commitNameOld": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 1435.81,
          "commitsBetweenForRepo": 10442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-  public static void terminate(int status, String msg) throws ExitException {\n-    LOG.info(\"Exiting with status \" + status);\n+  public static synchronized void terminate(ExitException ee)\n+      throws ExitException {\n+    int status \u003d ee.getExitCode();\n+    String msg \u003d ee.getMessage();\n+    if (status !\u003d 0) {\n+      //exit indicates a problem, log it\n+      LOG.debug(\"Exiting with status {}: {}\",  status, msg, ee);\n+      LOG.info(\"Exiting with status {}: {}\", status, msg);\n+    }\n     if (systemExitDisabled) {\n-      ExitException ee \u003d new ExitException(status, msg);\n-      LOG.fatal(\"Terminate called\", ee);\n-      if (null \u003d\u003d firstExitException) {\n+      LOG.error(\"Terminate called\", ee);\n+      if (!terminateCalled()) {\n         firstExitException \u003d ee;\n       }\n       throw ee;\n     }\n     System.exit(status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void terminate(ExitException ee)\n      throws ExitException {\n    int status \u003d ee.getExitCode();\n    String msg \u003d ee.getMessage();\n    if (status !\u003d 0) {\n      //exit indicates a problem, log it\n      LOG.debug(\"Exiting with status {}: {}\",  status, msg, ee);\n      LOG.info(\"Exiting with status {}: {}\", status, msg);\n    }\n    if (systemExitDisabled) {\n      LOG.error(\"Terminate called\", ee);\n      if (!terminateCalled()) {\n        firstExitException \u003d ee;\n      }\n      throw ee;\n    }\n    System.exit(status);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public, static, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "23/05/13 3:21 PM",
          "commitNameOld": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 1435.81,
          "commitsBetweenForRepo": 10442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-  public static void terminate(int status, String msg) throws ExitException {\n-    LOG.info(\"Exiting with status \" + status);\n+  public static synchronized void terminate(ExitException ee)\n+      throws ExitException {\n+    int status \u003d ee.getExitCode();\n+    String msg \u003d ee.getMessage();\n+    if (status !\u003d 0) {\n+      //exit indicates a problem, log it\n+      LOG.debug(\"Exiting with status {}: {}\",  status, msg, ee);\n+      LOG.info(\"Exiting with status {}: {}\", status, msg);\n+    }\n     if (systemExitDisabled) {\n-      ExitException ee \u003d new ExitException(status, msg);\n-      LOG.fatal(\"Terminate called\", ee);\n-      if (null \u003d\u003d firstExitException) {\n+      LOG.error(\"Terminate called\", ee);\n+      if (!terminateCalled()) {\n         firstExitException \u003d ee;\n       }\n       throw ee;\n     }\n     System.exit(status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void terminate(ExitException ee)\n      throws ExitException {\n    int status \u003d ee.getExitCode();\n    String msg \u003d ee.getMessage();\n    if (status !\u003d 0) {\n      //exit indicates a problem, log it\n      LOG.debug(\"Exiting with status {}: {}\",  status, msg, ee);\n      LOG.info(\"Exiting with status {}: {}\", status, msg);\n    }\n    if (systemExitDisabled) {\n      LOG.error(\"Terminate called\", ee);\n      if (!terminateCalled()) {\n        firstExitException \u003d ee;\n      }\n      throw ee;\n    }\n    System.exit(status);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "64fc2cb03d865bb178e2cce82f3b9221ccfd5c0f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3663. MiniDFSCluster should capture the code path that led to the first ExitException. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361775 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/12 12:43 PM",
      "commitName": "64fc2cb03d865bb178e2cce82f3b9221ccfd5c0f",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "11/07/12 10:58 AM",
      "commitNameOld": "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 4.07,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,12 @@\n   public static void terminate(int status, String msg) throws ExitException {\n     LOG.info(\"Exiting with status \" + status);\n-    terminateCalled \u003d true;\n     if (systemExitDisabled) {\n-      throw new ExitException(status, msg);\n+      ExitException ee \u003d new ExitException(status, msg);\n+      LOG.fatal(\"Terminate called\", ee);\n+      if (null \u003d\u003d firstExitException) {\n+        firstExitException \u003d ee;\n+      }\n+      throw ee;\n     }\n     System.exit(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void terminate(int status, String msg) throws ExitException {\n    LOG.info(\"Exiting with status \" + status);\n    if (systemExitDisabled) {\n      ExitException ee \u003d new ExitException(status, msg);\n      LOG.fatal(\"Terminate called\", ee);\n      if (null \u003d\u003d firstExitException) {\n        firstExitException \u003d ee;\n      }\n      throw ee;\n    }\n    System.exit(status);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
      "extendedDetails": {}
    },
    "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3582. Hook daemon process exit for testing. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/12 10:58 AM",
      "commitName": "cdae6953e80e81693bb4c9eb38b62eaba3ac8cf9",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,8 @@\n+  public static void terminate(int status, String msg) throws ExitException {\n+    LOG.info(\"Exiting with status \" + status);\n+    terminateCalled \u003d true;\n+    if (systemExitDisabled) {\n+      throw new ExitException(status, msg);\n+    }\n+    System.exit(status);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void terminate(int status, String msg) throws ExitException {\n    LOG.info(\"Exiting with status \" + status);\n    terminateCalled \u003d true;\n    if (systemExitDisabled) {\n      throw new ExitException(status, msg);\n    }\n    System.exit(status);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java"
    }
  }
}