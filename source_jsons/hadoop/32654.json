{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeStatusUpdaterImpl.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
  "functionStartLine": 263,
  "functionEndLine": 282,
  "numCommitsSeen": 155,
  "timeTaken": 9441,
  "changeHistory": [
    "5c2f05cd9bad9bf9beb0f4ca18f4ae1bc3e84499",
    "5a15c392a1a18c5720dbe630bc07e58268c8e6a7",
    "33b5a81509ed08e88bb692682e75fb779f8e2e19",
    "0928502029ef141759008997335ea2cd836a7154",
    "a8c330fd338f755acc619aff88e55739d6ee0528",
    "2692675fc3b5046d2ec88542c30203c87e135b70",
    "2ba66a54f5004f93b53d40b6a1cc5029abf5e609",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "32d511065a2612d37591f09e53eed8ec1488587d",
    "4186121c08cb3d86f775d333c637459a4fb19d1b",
    "12743d2169f5a24a9b3be07c9e9dcc3f2f1001f0",
    "817ead65b99f465fc2dfa18072cf23cadf5f05d0",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "5c2f05cd9bad9bf9beb0f4ca18f4ae1bc3e84499": "Ybodychange",
    "5a15c392a1a18c5720dbe630bc07e58268c8e6a7": "Ybodychange",
    "33b5a81509ed08e88bb692682e75fb779f8e2e19": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "a8c330fd338f755acc619aff88e55739d6ee0528": "Ybodychange",
    "2692675fc3b5046d2ec88542c30203c87e135b70": "Ybodychange",
    "2ba66a54f5004f93b53d40b6a1cc5029abf5e609": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "32d511065a2612d37591f09e53eed8ec1488587d": "Ybodychange",
    "4186121c08cb3d86f775d333c637459a4fb19d1b": "Ybodychange",
    "12743d2169f5a24a9b3be07c9e9dcc3f2f1001f0": "Ybodychange",
    "817ead65b99f465fc2dfa18072cf23cadf5f05d0": "Ybodychange",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5c2f05cd9bad9bf9beb0f4ca18f4ae1bc3e84499": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3629. NodeID is always printed as \"null\" in node manager\ninitialization log. Contributed by nijel.\n",
      "commitDate": "12/05/15 9:50 AM",
      "commitName": "5c2f05cd9bad9bf9beb0f4ca18f4ae1bc3e84499",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "10/04/15 8:56 AM",
      "commitNameOld": "92431c961741747b5d6442f4025016d48d9a6863",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 32.04,
      "commitsBetweenForRepo": 340,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   protected void serviceStart() throws Exception {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n+    LOG.info(\"Node ID assigned is : \" + this.nodeId);\n     this.httpPort \u003d this.context.getHttpPort();\n     this.nodeManagerVersionId \u003d YarnVersionInfo.getVersion();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       this.resourceTracker \u003d getRMClient();\n       registerWithRM();\n       super.serviceStart();\n       startStatusUpdater();\n     } catch (Exception e) {\n       String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n       LOG.error(errorMessage, e);\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    LOG.info(\"Node ID assigned is : \" + this.nodeId);\n    this.httpPort \u003d this.context.getHttpPort();\n    this.nodeManagerVersionId \u003d YarnVersionInfo.getVersion();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      this.resourceTracker \u003d getRMClient();\n      registerWithRM();\n      super.serviceStart();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "5a15c392a1a18c5720dbe630bc07e58268c8e6a7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-819. ResourceManager and NodeManager should check for a minimum allowed version (Robert Parker via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526660 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/09/13 12:55 PM",
      "commitName": "5a15c392a1a18c5720dbe630bc07e58268c8e6a7",
      "commitAuthor": "Jonathan Turner Eagles",
      "commitDateOld": "01/08/13 11:54 PM",
      "commitNameOld": "5b7889f9a7dea81bbb3c8be6944419b59ca4bed1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 55.54,
      "commitsBetweenForRepo": 300,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   protected void serviceStart() throws Exception {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n     this.httpPort \u003d this.context.getHttpPort();\n+    this.nodeManagerVersionId \u003d YarnVersionInfo.getVersion();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       this.resourceTracker \u003d getRMClient();\n       registerWithRM();\n       super.serviceStart();\n       startStatusUpdater();\n     } catch (Exception e) {\n       String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n       LOG.error(errorMessage, e);\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    this.nodeManagerVersionId \u003d YarnVersionInfo.getVersion();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      this.resourceTracker \u003d getRMClient();\n      registerWithRM();\n      super.serviceStart();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "33b5a81509ed08e88bb692682e75fb779f8e2e19": {
      "type": "Ybodychange",
      "commitMessage": "YARN-513. Create common proxy client for communicating with RM (Xuan Gong \u0026 Jian He via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503933 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 3:47 PM",
      "commitName": "33b5a81509ed08e88bb692682e75fb779f8e2e19",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 29.67,
      "commitsBetweenForRepo": 156,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   protected void serviceStart() throws Exception {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n     this.httpPort \u003d this.context.getHttpPort();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n+      this.resourceTracker \u003d getRMClient();\n       registerWithRM();\n       super.serviceStart();\n       startStatusUpdater();\n     } catch (Exception e) {\n       String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n       LOG.error(errorMessage, e);\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      this.resourceTracker \u003d getRMClient();\n      registerWithRM();\n      super.serviceStart();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/06/13 9:20 AM",
          "commitNameOld": "a8c330fd338f755acc619aff88e55739d6ee0528",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 5.98,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n     this.httpPort \u003d this.context.getHttpPort();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n-      super.start();\n+      super.serviceStart();\n       startStatusUpdater();\n     } catch (Exception e) {\n       String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n       LOG.error(errorMessage, e);\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.serviceStart();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "start",
            "newValue": "serviceStart"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/06/13 9:20 AM",
          "commitNameOld": "a8c330fd338f755acc619aff88e55739d6ee0528",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 5.98,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n     this.httpPort \u003d this.context.getHttpPort();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n-      super.start();\n+      super.serviceStart();\n       startStatusUpdater();\n     } catch (Exception e) {\n       String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n       LOG.error(errorMessage, e);\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.serviceStart();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/06/13 9:20 AM",
          "commitNameOld": "a8c330fd338f755acc619aff88e55739d6ee0528",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 5.98,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n     this.httpPort \u003d this.context.getHttpPort();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n-      super.start();\n+      super.serviceStart();\n       startStatusUpdater();\n     } catch (Exception e) {\n       String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n       LOG.error(errorMessage, e);\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.serviceStart();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/06/13 9:20 AM",
          "commitNameOld": "a8c330fd338f755acc619aff88e55739d6ee0528",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 5.98,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n     this.httpPort \u003d this.context.getHttpPort();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n-      super.start();\n+      super.serviceStart();\n       startStatusUpdater();\n     } catch (Exception e) {\n       String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n       LOG.error(errorMessage, e);\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.serviceStart();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "a8c330fd338f755acc619aff88e55739d6ee0528": {
      "type": "Ybodychange",
      "commitMessage": "YARN-760. NodeManager throws AvroRuntimeException on failed start. Contributed by Niranjan Singh\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490704 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/06/13 9:20 AM",
      "commitName": "a8c330fd338f755acc619aff88e55739d6ee0528",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "03/06/13 9:05 PM",
      "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.51,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   public void start() {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n     this.httpPort \u003d this.context.getHttpPort();\n     try {\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n-      throw new AvroRuntimeException(e);\n+      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n+      LOG.error(errorMessage, e);\n+      throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      String errorMessage \u003d \"Unexpected error starting NodeStatusUpdater\";\n      LOG.error(errorMessage, e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "2692675fc3b5046d2ec88542c30203c87e135b70": {
      "type": "Ybodychange",
      "commitMessage": "YARN-684. ContainerManager.startContainer should use ContainerTokenIdentifier instead of the entire Container. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488085 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/13 9:13 PM",
      "commitName": "2692675fc3b5046d2ec88542c30203c87e135b70",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "16/05/13 11:36 PM",
      "commitNameOld": "ca8024673178fa1c80224b390dfba932921693d9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 13.9,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,15 @@\n   public void start() {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n-\n-    InetSocketAddress httpBindAddress \u003d getConfig().getSocketAddr(\n-        YarnConfiguration.NM_WEBAPP_ADDRESS,\n-        YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS,\n-        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT);\n+    this.httpPort \u003d this.context.getHttpPort();\n     try {\n-      this.httpPort \u003d httpBindAddress.getPort();\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n       throw new AvroRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n    this.httpPort \u003d this.context.getHttpPort();\n    try {\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "2ba66a54f5004f93b53d40b6a1cc5029abf5e609": {
      "type": "Ybodychange",
      "commitMessage": "YARN-196. Nodemanager should be more robust in handling connection failure to ResourceManager when a cluster is started. Contributed by Xuan Gong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1457038 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/03/13 10:58 AM",
      "commitName": "2ba66a54f5004f93b53d40b6a1cc5029abf5e609",
      "commitAuthor": "Hitesh Shah",
      "commitDateOld": "08/01/13 9:08 PM",
      "commitNameOld": "453926397182078c65a4428eb5de5a90d6af6448",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 65.54,
      "commitsBetweenForRepo": 310,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   public void start() {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n \n     InetSocketAddress httpBindAddress \u003d getConfig().getSocketAddr(\n         YarnConfiguration.NM_WEBAPP_ADDRESS,\n         YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS,\n         YarnConfiguration.DEFAULT_NM_WEBAPP_PORT);\n     try {\n-      //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n       this.httpPort \u003d httpBindAddress.getPort();\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n       throw new AvroRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n\n    InetSocketAddress httpBindAddress \u003d getConfig().getSocketAddr(\n        YarnConfiguration.NM_WEBAPP_ADDRESS,\n        YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS,\n        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT);\n    try {\n      this.httpPort \u003d httpBindAddress.getPort();\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n\n    InetSocketAddress httpBindAddress \u003d getConfig().getSocketAddr(\n        YarnConfiguration.NM_WEBAPP_ADDRESS,\n        YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS,\n        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT);\n    try {\n      //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n      this.httpPort \u003d httpBindAddress.getPort();\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java"
      }
    },
    "32d511065a2612d37591f09e53eed8ec1488587d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4161. create sockets consistently (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327621 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/12 11:46 AM",
      "commitName": "32d511065a2612d37591f09e53eed8ec1488587d",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "05/03/12 4:52 PM",
      "commitNameOld": "b9fd9e17598c606d0acd54a68b4693f482ffb3ac",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 43.75,
      "commitsBetweenForRepo": 316,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n   public void start() {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n \n-    String httpBindAddressStr \u003d\n-      getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n-          YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n-    InetSocketAddress httpBindAddress \u003d\n-      NetUtils.createSocketAddr(httpBindAddressStr,\n-        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT,\n-        YarnConfiguration.NM_WEBAPP_ADDRESS);\n+    InetSocketAddress httpBindAddress \u003d getConfig().getSocketAddr(\n+        YarnConfiguration.NM_WEBAPP_ADDRESS,\n+        YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS,\n+        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT);\n     try {\n       //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n       this.httpPort \u003d httpBindAddress.getPort();\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n       throw new AvroRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n\n    InetSocketAddress httpBindAddress \u003d getConfig().getSocketAddr(\n        YarnConfiguration.NM_WEBAPP_ADDRESS,\n        YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS,\n        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT);\n    try {\n      //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n      this.httpPort \u003d httpBindAddress.getPort();\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "4186121c08cb3d86f775d333c637459a4fb19d1b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3239. Use new createSocketAddr API in MRv2 to give better error messages on misconfig (Todd Lipcon via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1187556 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/11 2:36 PM",
      "commitName": "4186121c08cb3d86f775d333c637459a4fb19d1b",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "16/10/11 12:27 PM",
      "commitNameOld": "68328ae92632afc9cdd6e75b7a8d832723ddbe3b",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 5.09,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   public void start() {\n \n     // NodeManager is the last service to start, so NodeId is available.\n     this.nodeId \u003d this.context.getNodeId();\n \n     String httpBindAddressStr \u003d\n       getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n     InetSocketAddress httpBindAddress \u003d\n-      NetUtils.createSocketAddr(httpBindAddressStr);\n+      NetUtils.createSocketAddr(httpBindAddressStr,\n+        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT,\n+        YarnConfiguration.NM_WEBAPP_ADDRESS);\n     try {\n       //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n       this.httpPort \u003d httpBindAddress.getPort();\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n       throw new AvroRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n\n    String httpBindAddressStr \u003d\n      getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n    InetSocketAddress httpBindAddress \u003d\n      NetUtils.createSocketAddr(httpBindAddressStr,\n        YarnConfiguration.DEFAULT_NM_WEBAPP_PORT,\n        YarnConfiguration.NM_WEBAPP_ADDRESS);\n    try {\n      //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n      this.httpPort \u003d httpBindAddress.getPort();\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "12743d2169f5a24a9b3be07c9e9dcc3f2f1001f0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2792. Replace usage of node ip-addresses with hostnames. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1178631 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/10/11 4:21 PM",
      "commitName": "12743d2169f5a24a9b3be07c9e9dcc3f2f1001f0",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "21/09/11 4:32 PM",
      "commitNameOld": "ed7eda00cb1f509ebe7f967cb65bdb1ece06334c",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 11.99,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,22 @@\n   public void start() {\n-    String cmBindAddressStr \u003d\n-        getConfig().get(YarnConfiguration.NM_ADDRESS,\n-            YarnConfiguration.DEFAULT_NM_ADDRESS);\n-    InetSocketAddress cmBindAddress \u003d\n-        NetUtils.createSocketAddr(cmBindAddressStr);\n+\n+    // NodeManager is the last service to start, so NodeId is available.\n+    this.nodeId \u003d this.context.getNodeId();\n+\n     String httpBindAddressStr \u003d\n       getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n     InetSocketAddress httpBindAddress \u003d\n       NetUtils.createSocketAddr(httpBindAddressStr);\n     try {\n-      this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n-      this.containerManagerPort \u003d cmBindAddress.getPort();\n+      //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n       this.httpPort \u003d httpBindAddress.getPort();\n-      this.containerManagerBindAddress \u003d\n-          this.hostName + \":\" + this.containerManagerPort;\n-      LOG.info(\"Configured ContainerManager Address is \"\n-          + this.containerManagerBindAddress);\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n       throw new AvroRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n\n    // NodeManager is the last service to start, so NodeId is available.\n    this.nodeId \u003d this.context.getNodeId();\n\n    String httpBindAddressStr \u003d\n      getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n    InetSocketAddress httpBindAddress \u003d\n      NetUtils.createSocketAddr(httpBindAddressStr);\n    try {\n      //      this.hostName \u003d InetAddress.getLocalHost().getCanonicalHostName();\n      this.httpPort \u003d httpBindAddress.getPort();\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "817ead65b99f465fc2dfa18072cf23cadf5f05d0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2933. Change allocate call to return ContainerStatus for completed containers rather than Container.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169484 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/11 10:26 AM",
      "commitName": "817ead65b99f465fc2dfa18072cf23cadf5f05d0",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.65,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   public void start() {\n     String cmBindAddressStr \u003d\n         getConfig().get(YarnConfiguration.NM_ADDRESS,\n             YarnConfiguration.DEFAULT_NM_ADDRESS);\n     InetSocketAddress cmBindAddress \u003d\n         NetUtils.createSocketAddr(cmBindAddressStr);\n     String httpBindAddressStr \u003d\n       getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n     InetSocketAddress httpBindAddress \u003d\n       NetUtils.createSocketAddr(httpBindAddressStr);\n     try {\n       this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n       this.containerManagerPort \u003d cmBindAddress.getPort();\n       this.httpPort \u003d httpBindAddress.getPort();\n       this.containerManagerBindAddress \u003d\n           this.hostName + \":\" + this.containerManagerPort;\n-      this.nodeHttpAddress \u003d this.hostName + \":\" + this.httpPort;\n       LOG.info(\"Configured ContainerManager Address is \"\n           + this.containerManagerBindAddress);\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n       throw new AvroRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    String cmBindAddressStr \u003d\n        getConfig().get(YarnConfiguration.NM_ADDRESS,\n            YarnConfiguration.DEFAULT_NM_ADDRESS);\n    InetSocketAddress cmBindAddress \u003d\n        NetUtils.createSocketAddr(cmBindAddressStr);\n    String httpBindAddressStr \u003d\n      getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n    InetSocketAddress httpBindAddress \u003d\n      NetUtils.createSocketAddr(httpBindAddressStr);\n    try {\n      this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n      this.containerManagerPort \u003d cmBindAddress.getPort();\n      this.httpPort \u003d httpBindAddress.getPort();\n      this.containerManagerBindAddress \u003d\n          this.hostName + \":\" + this.containerManagerPort;\n      LOG.info(\"Configured ContainerManager Address is \"\n          + this.containerManagerBindAddress);\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public void start() {\n     String cmBindAddressStr \u003d\n-        getConfig().get(NMConfig.NM_BIND_ADDRESS,\n-            NMConfig.DEFAULT_NM_BIND_ADDRESS);\n+        getConfig().get(YarnConfiguration.NM_ADDRESS,\n+            YarnConfiguration.DEFAULT_NM_ADDRESS);\n     InetSocketAddress cmBindAddress \u003d\n         NetUtils.createSocketAddr(cmBindAddressStr);\n     String httpBindAddressStr \u003d\n-      getConfig().get(NMConfig.NM_HTTP_BIND_ADDRESS,\n-          NMConfig.DEFAULT_NM_HTTP_BIND_ADDRESS);\n+      getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n+          YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n     InetSocketAddress httpBindAddress \u003d\n       NetUtils.createSocketAddr(httpBindAddressStr);\n     try {\n       this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n       this.containerManagerPort \u003d cmBindAddress.getPort();\n       this.httpPort \u003d httpBindAddress.getPort();\n       this.containerManagerBindAddress \u003d\n           this.hostName + \":\" + this.containerManagerPort;\n       this.nodeHttpAddress \u003d this.hostName + \":\" + this.httpPort;\n       LOG.info(\"Configured ContainerManager Address is \"\n           + this.containerManagerBindAddress);\n       // Registration has to be in start so that ContainerManager can get the\n       // perNM tokens needed to authenticate ContainerTokens.\n       registerWithRM();\n       super.start();\n       startStatusUpdater();\n     } catch (Exception e) {\n       throw new AvroRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    String cmBindAddressStr \u003d\n        getConfig().get(YarnConfiguration.NM_ADDRESS,\n            YarnConfiguration.DEFAULT_NM_ADDRESS);\n    InetSocketAddress cmBindAddress \u003d\n        NetUtils.createSocketAddr(cmBindAddressStr);\n    String httpBindAddressStr \u003d\n      getConfig().get(YarnConfiguration.NM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_NM_WEBAPP_ADDRESS);\n    InetSocketAddress httpBindAddress \u003d\n      NetUtils.createSocketAddr(httpBindAddressStr);\n    try {\n      this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n      this.containerManagerPort \u003d cmBindAddress.getPort();\n      this.httpPort \u003d httpBindAddress.getPort();\n      this.containerManagerBindAddress \u003d\n          this.hostName + \":\" + this.containerManagerPort;\n      this.nodeHttpAddress \u003d this.hostName + \":\" + this.httpPort;\n      LOG.info(\"Configured ContainerManager Address is \"\n          + this.containerManagerBindAddress);\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n    String cmBindAddressStr \u003d\n        getConfig().get(NMConfig.NM_BIND_ADDRESS,\n            NMConfig.DEFAULT_NM_BIND_ADDRESS);\n    InetSocketAddress cmBindAddress \u003d\n        NetUtils.createSocketAddr(cmBindAddressStr);\n    String httpBindAddressStr \u003d\n      getConfig().get(NMConfig.NM_HTTP_BIND_ADDRESS,\n          NMConfig.DEFAULT_NM_HTTP_BIND_ADDRESS);\n    InetSocketAddress httpBindAddress \u003d\n      NetUtils.createSocketAddr(httpBindAddressStr);\n    try {\n      this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n      this.containerManagerPort \u003d cmBindAddress.getPort();\n      this.httpPort \u003d httpBindAddress.getPort();\n      this.containerManagerBindAddress \u003d\n          this.hostName + \":\" + this.containerManagerPort;\n      this.nodeHttpAddress \u003d this.hostName + \":\" + this.httpPort;\n      LOG.info(\"Configured ContainerManager Address is \"\n          + this.containerManagerBindAddress);\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,29 @@\n+  public void start() {\n+    String cmBindAddressStr \u003d\n+        getConfig().get(NMConfig.NM_BIND_ADDRESS,\n+            NMConfig.DEFAULT_NM_BIND_ADDRESS);\n+    InetSocketAddress cmBindAddress \u003d\n+        NetUtils.createSocketAddr(cmBindAddressStr);\n+    String httpBindAddressStr \u003d\n+      getConfig().get(NMConfig.NM_HTTP_BIND_ADDRESS,\n+          NMConfig.DEFAULT_NM_HTTP_BIND_ADDRESS);\n+    InetSocketAddress httpBindAddress \u003d\n+      NetUtils.createSocketAddr(httpBindAddressStr);\n+    try {\n+      this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n+      this.containerManagerPort \u003d cmBindAddress.getPort();\n+      this.httpPort \u003d httpBindAddress.getPort();\n+      this.containerManagerBindAddress \u003d\n+          this.hostName + \":\" + this.containerManagerPort;\n+      this.nodeHttpAddress \u003d this.hostName + \":\" + this.httpPort;\n+      LOG.info(\"Configured ContainerManager Address is \"\n+          + this.containerManagerBindAddress);\n+      // Registration has to be in start so that ContainerManager can get the\n+      // perNM tokens needed to authenticate ContainerTokens.\n+      registerWithRM();\n+      super.start();\n+      startStatusUpdater();\n+    } catch (Exception e) {\n+      throw new AvroRuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    String cmBindAddressStr \u003d\n        getConfig().get(NMConfig.NM_BIND_ADDRESS,\n            NMConfig.DEFAULT_NM_BIND_ADDRESS);\n    InetSocketAddress cmBindAddress \u003d\n        NetUtils.createSocketAddr(cmBindAddressStr);\n    String httpBindAddressStr \u003d\n      getConfig().get(NMConfig.NM_HTTP_BIND_ADDRESS,\n          NMConfig.DEFAULT_NM_HTTP_BIND_ADDRESS);\n    InetSocketAddress httpBindAddress \u003d\n      NetUtils.createSocketAddr(httpBindAddressStr);\n    try {\n      this.hostName \u003d InetAddress.getLocalHost().getHostAddress();\n      this.containerManagerPort \u003d cmBindAddress.getPort();\n      this.httpPort \u003d httpBindAddress.getPort();\n      this.containerManagerBindAddress \u003d\n          this.hostName + \":\" + this.containerManagerPort;\n      this.nodeHttpAddress \u003d this.hostName + \":\" + this.httpPort;\n      LOG.info(\"Configured ContainerManager Address is \"\n          + this.containerManagerBindAddress);\n      // Registration has to be in start so that ContainerManager can get the\n      // perNM tokens needed to authenticate ContainerTokens.\n      registerWithRM();\n      super.start();\n      startStatusUpdater();\n    } catch (Exception e) {\n      throw new AvroRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java"
    }
  }
}