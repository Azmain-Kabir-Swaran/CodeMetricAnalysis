{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "s3Exists",
  "functionId": "s3Exists___path-Path(modifiers-final)__probes-Set__StatusProbeEnum__(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 3104,
  "functionEndLine": 3113,
  "numCommitsSeen": 257,
  "timeTaken": 5167,
  "changeHistory": [
    "9221704f857e33a5f9e00c19d3705e46e94f427b",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "9221704f857e33a5f9e00c19d3705e46e94f427b": "Ymultichange(Yparameterchange,Ybodychange)",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9221704f857e33a5f9e00c19d3705e46e94f427b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16490. Avoid/handle cached 404s during S3A file creation.\n\nContributed by Steve Loughran.\n\nThis patch avoids issuing any HEAD path request when creating a file with overwrite\u003dtrue,\nso 404s will not end up in the S3 load balancers unless someone calls getFileStatus/exists/isFile\nin their own code.\n\nThe Hadoop FsShell CommandWithDestination class is modified to not register uncreated files\nfor deleteOnExit(), because that calls exists() and so can place the 404 in the cache, even\nafter S3A is patched to not do it itself.\n\nBecause S3Guard knows when a file should be present, it adds a special FileNotFound retry policy\nindependently configurable from other retry policies; it is also exponential, but with\ndifferent parameters. This is because every HEAD request will refresh any 404 cached in\nthe S3 Load Balancers. It\u0027s not enough to retry: we have to have a suitable gap between\nattempts to (hopefully) ensure any cached entry wil be gone.\n\nThe options and values are:\n\nfs.s3a.s3guard.consistency.retry.interval: 2s\nfs.s3a.s3guard.consistency.retry.limit: 7\n\nThe S3A copy() method used during rename() raises a RemoteFileChangedException which is not caught\nso not downgraded to false. Thus: when a rename is unrecoverable, this fact is propagated.\n\nCopy operations without S3Guard lack the confidence that the file exists, so don\u0027t retry the same way:\nit will fail fast with a different error message. However, because create(path, overwrite\u003dfalse) no\nlonger does HEAD path, we can at least be confident that S3A itself is not creating those cached\n404 markers.\n\nChange-Id: Ia7807faad8b9a8546836cb19f816cccf17cca26d\n",
      "commitDate": "11/09/19 8:46 AM",
      "commitName": "9221704f857e33a5f9e00c19d3705e46e94f427b",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16490. Avoid/handle cached 404s during S3A file creation.\n\nContributed by Steve Loughran.\n\nThis patch avoids issuing any HEAD path request when creating a file with overwrite\u003dtrue,\nso 404s will not end up in the S3 load balancers unless someone calls getFileStatus/exists/isFile\nin their own code.\n\nThe Hadoop FsShell CommandWithDestination class is modified to not register uncreated files\nfor deleteOnExit(), because that calls exists() and so can place the 404 in the cache, even\nafter S3A is patched to not do it itself.\n\nBecause S3Guard knows when a file should be present, it adds a special FileNotFound retry policy\nindependently configurable from other retry policies; it is also exponential, but with\ndifferent parameters. This is because every HEAD request will refresh any 404 cached in\nthe S3 Load Balancers. It\u0027s not enough to retry: we have to have a suitable gap between\nattempts to (hopefully) ensure any cached entry wil be gone.\n\nThe options and values are:\n\nfs.s3a.s3guard.consistency.retry.interval: 2s\nfs.s3a.s3guard.consistency.retry.limit: 7\n\nThe S3A copy() method used during rename() raises a RemoteFileChangedException which is not caught\nso not downgraded to false. Thus: when a rename is unrecoverable, this fact is propagated.\n\nCopy operations without S3Guard lack the confidence that the file exists, so don\u0027t retry the same way:\nit will fail fast with a different error message. However, because create(path, overwrite\u003dfalse) no\nlonger does HEAD path, we can at least be confident that S3A itself is not creating those cached\n404 markers.\n\nChange-Id: Ia7807faad8b9a8546836cb19f816cccf17cca26d\n",
          "commitDate": "11/09/19 8:46 AM",
          "commitName": "9221704f857e33a5f9e00c19d3705e46e94f427b",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "05/09/19 6:25 AM",
          "commitNameOld": "511df1e837b19ccb9271520589452d82d50ac69d",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 6.1,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  private boolean s3Exists(final Path f) throws IOException {\n-    Path path \u003d qualify(f);\n+  private boolean s3Exists(final Path path, final Set\u003cStatusProbeEnum\u003e probes)\n+      throws IOException {\n     String key \u003d pathToKey(path);\n     try {\n-      s3GetFileStatus(path, key, null);\n+      s3GetFileStatus(path, key, probes, null);\n       return true;\n     } catch (FileNotFoundException e) {\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean s3Exists(final Path path, final Set\u003cStatusProbeEnum\u003e probes)\n      throws IOException {\n    String key \u003d pathToKey(path);\n    try {\n      s3GetFileStatus(path, key, probes, null);\n      return true;\n    } catch (FileNotFoundException e) {\n      return false;\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[f-Path(modifiers-final)]",
            "newValue": "[path-Path(modifiers-final), probes-Set\u003cStatusProbeEnum\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16490. Avoid/handle cached 404s during S3A file creation.\n\nContributed by Steve Loughran.\n\nThis patch avoids issuing any HEAD path request when creating a file with overwrite\u003dtrue,\nso 404s will not end up in the S3 load balancers unless someone calls getFileStatus/exists/isFile\nin their own code.\n\nThe Hadoop FsShell CommandWithDestination class is modified to not register uncreated files\nfor deleteOnExit(), because that calls exists() and so can place the 404 in the cache, even\nafter S3A is patched to not do it itself.\n\nBecause S3Guard knows when a file should be present, it adds a special FileNotFound retry policy\nindependently configurable from other retry policies; it is also exponential, but with\ndifferent parameters. This is because every HEAD request will refresh any 404 cached in\nthe S3 Load Balancers. It\u0027s not enough to retry: we have to have a suitable gap between\nattempts to (hopefully) ensure any cached entry wil be gone.\n\nThe options and values are:\n\nfs.s3a.s3guard.consistency.retry.interval: 2s\nfs.s3a.s3guard.consistency.retry.limit: 7\n\nThe S3A copy() method used during rename() raises a RemoteFileChangedException which is not caught\nso not downgraded to false. Thus: when a rename is unrecoverable, this fact is propagated.\n\nCopy operations without S3Guard lack the confidence that the file exists, so don\u0027t retry the same way:\nit will fail fast with a different error message. However, because create(path, overwrite\u003dfalse) no\nlonger does HEAD path, we can at least be confident that S3A itself is not creating those cached\n404 markers.\n\nChange-Id: Ia7807faad8b9a8546836cb19f816cccf17cca26d\n",
          "commitDate": "11/09/19 8:46 AM",
          "commitName": "9221704f857e33a5f9e00c19d3705e46e94f427b",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "05/09/19 6:25 AM",
          "commitNameOld": "511df1e837b19ccb9271520589452d82d50ac69d",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 6.1,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  private boolean s3Exists(final Path f) throws IOException {\n-    Path path \u003d qualify(f);\n+  private boolean s3Exists(final Path path, final Set\u003cStatusProbeEnum\u003e probes)\n+      throws IOException {\n     String key \u003d pathToKey(path);\n     try {\n-      s3GetFileStatus(path, key, null);\n+      s3GetFileStatus(path, key, probes, null);\n       return true;\n     } catch (FileNotFoundException e) {\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean s3Exists(final Path path, final Set\u003cStatusProbeEnum\u003e probes)\n      throws IOException {\n    String key \u003d pathToKey(path);\n    try {\n      s3GetFileStatus(path, key, probes, null);\n      return true;\n    } catch (FileNotFoundException e) {\n      return false;\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,10 @@\n+  private boolean s3Exists(final Path f) throws IOException {\n+    Path path \u003d qualify(f);\n+    String key \u003d pathToKey(path);\n+    try {\n+      s3GetFileStatus(path, key, null);\n+      return true;\n+    } catch (FileNotFoundException e) {\n+      return false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean s3Exists(final Path f) throws IOException {\n    Path path \u003d qualify(f);\n    String key \u003d pathToKey(path);\n    try {\n      s3GetFileStatus(path, key, null);\n      return true;\n    } catch (FileNotFoundException e) {\n      return false;\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}