{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IPCLoggerChannel.java",
  "functionName": "buildURLToFetchLogs",
  "functionId": "buildURLToFetchLogs___segmentTxId-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
  "functionStartLine": 290,
  "functionEndLine": 303,
  "numCommitsSeen": 42,
  "timeTaken": 2002,
  "changeHistory": [
    "0e83ed5e7372c801c9fee01df91b6b56de467ab1",
    "87a6db45b70a1a07165e0773c4452d1327258bfa",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "0e83ed5e7372c801c9fee01df91b6b56de467ab1": "Ybodychange",
    "87a6db45b70a1a07165e0773c4452d1327258bfa": "Ybodychange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0e83ed5e7372c801c9fee01df91b6b56de467ab1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11877. FileJournalManager#getLogFile should ignore in progress edit logs during JN sync. Contributed by Hanisha Koneru.\n",
      "commitDate": "24/05/17 4:09 PM",
      "commitName": "0e83ed5e7372c801c9fee01df91b6b56de467ab1",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 753.25,
      "commitsBetweenForRepo": 5251,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public URL buildURLToFetchLogs(long segmentTxId) {\n     Preconditions.checkArgument(segmentTxId \u003e 0,\n         \"Invalid segment: %s\", segmentTxId);\n     Preconditions.checkState(hasHttpServerEndPoint(), \"No HTTP/HTTPS endpoint\");\n         \n     try {\n       String path \u003d GetJournalEditServlet.buildPath(\n-          journalId, segmentTxId, nsInfo);\n+          journalId, segmentTxId, nsInfo, true);\n       return new URL(httpServerURL, path);\n     } catch (MalformedURLException e) {\n       // should never get here.\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URL buildURLToFetchLogs(long segmentTxId) {\n    Preconditions.checkArgument(segmentTxId \u003e 0,\n        \"Invalid segment: %s\", segmentTxId);\n    Preconditions.checkState(hasHttpServerEndPoint(), \"No HTTP/HTTPS endpoint\");\n        \n    try {\n      String path \u003d GetJournalEditServlet.buildPath(\n          journalId, segmentTxId, nsInfo, true);\n      return new URL(httpServerURL, path);\n    } catch (MalformedURLException e) {\n      // should never get here.\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "87a6db45b70a1a07165e0773c4452d1327258bfa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5629. Support HTTPS in JournalNode and SecondaryNameNode. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1549692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/13 1:58 PM",
      "commitName": "87a6db45b70a1a07165e0773c4452d1327258bfa",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/11/13 11:28 AM",
      "commitNameOld": "740cf232bd6206a5d31c0afa7b3e7a1e7bc333a1",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 13.1,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public URL buildURLToFetchLogs(long segmentTxId) {\n     Preconditions.checkArgument(segmentTxId \u003e 0,\n         \"Invalid segment: %s\", segmentTxId);\n-    Preconditions.checkState(httpPort !\u003d -1,\n-        \"HTTP port not set yet\");\n+    Preconditions.checkState(hasHttpServerEndPoint(), \"No HTTP/HTTPS endpoint\");\n         \n     try {\n       String path \u003d GetJournalEditServlet.buildPath(\n           journalId, segmentTxId, nsInfo);\n-      return new URL(\"http\", addr.getHostName(), httpPort, path.toString());\n+      return new URL(httpServerURL, path);\n     } catch (MalformedURLException e) {\n       // should never get here.\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public URL buildURLToFetchLogs(long segmentTxId) {\n    Preconditions.checkArgument(segmentTxId \u003e 0,\n        \"Invalid segment: %s\", segmentTxId);\n    Preconditions.checkState(hasHttpServerEndPoint(), \"No HTTP/HTTPS endpoint\");\n        \n    try {\n      String path \u003d GetJournalEditServlet.buildPath(\n          journalId, segmentTxId, nsInfo);\n      return new URL(httpServerURL, path);\n    } catch (MalformedURLException e) {\n      // should never get here.\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,15 @@\n+  public URL buildURLToFetchLogs(long segmentTxId) {\n+    Preconditions.checkArgument(segmentTxId \u003e 0,\n+        \"Invalid segment: %s\", segmentTxId);\n+    Preconditions.checkState(httpPort !\u003d -1,\n+        \"HTTP port not set yet\");\n+        \n+    try {\n+      String path \u003d GetJournalEditServlet.buildPath(\n+          journalId, segmentTxId, nsInfo);\n+      return new URL(\"http\", addr.getHostName(), httpPort, path.toString());\n+    } catch (MalformedURLException e) {\n+      // should never get here.\n+      throw new RuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public URL buildURLToFetchLogs(long segmentTxId) {\n    Preconditions.checkArgument(segmentTxId \u003e 0,\n        \"Invalid segment: %s\", segmentTxId);\n    Preconditions.checkState(httpPort !\u003d -1,\n        \"HTTP port not set yet\");\n        \n    try {\n      String path \u003d GetJournalEditServlet.buildPath(\n          journalId, segmentTxId, nsInfo);\n      return new URL(\"http\", addr.getHostName(), httpPort, path.toString());\n    } catch (MalformedURLException e) {\n      // should never get here.\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java"
    }
  }
}