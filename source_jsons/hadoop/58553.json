{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommonNodeLabelsManager.java",
  "functionName": "checkRemoveLabelsFromNode",
  "functionId": "checkRemoveLabelsFromNode___removeLabelsFromNode-Map__NodeId,Set__String____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
  "functionStartLine": 483,
  "functionEndLine": 540,
  "numCommitsSeen": 42,
  "timeTaken": 1364,
  "changeHistory": [
    "4cfd5bc7c18bb9a828f573b5c4d2b13fa28e732a",
    "db7f1653198b950e89567c06898d64f6b930a0ee"
  ],
  "changeHistoryShort": {
    "4cfd5bc7c18bb9a828f573b5c4d2b13fa28e732a": "Ybodychange",
    "db7f1653198b950e89567c06898d64f6b930a0ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4cfd5bc7c18bb9a828f573b5c4d2b13fa28e732a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2753. Fixed a bunch of bugs in the NodeLabelsManager classes. Contributed by Zhihai xu.\n",
      "commitDate": "07/11/14 2:15 PM",
      "commitName": "4cfd5bc7c18bb9a828f573b5c4d2b13fa28e732a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/10/14 12:07 PM",
      "commitNameOld": "82567664988b673f1b819a42a4baf31cb0dcb331",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.13,
      "commitsBetweenForRepo": 217,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,58 @@\n   protected void checkRemoveLabelsFromNode(\n       Map\u003cNodeId, Set\u003cString\u003e\u003e removeLabelsFromNode) throws IOException {\n     // check all labels being added existed\n     Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n     for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : removeLabelsFromNode.entrySet()) {\n       NodeId nodeId \u003d entry.getKey();\n       Set\u003cString\u003e labels \u003d entry.getValue();\n       \n       if (!knownLabels.containsAll(labels)) {\n         String msg \u003d\n             \"Not all labels being removed contained by known \"\n                 + \"label collections, please check\" + \", removed labels\u003d[\"\n                 + StringUtils.join(labels, \",\") + \"]\";\n         LOG.error(msg);\n         throw new IOException(msg);\n       }\n       \n       Set\u003cString\u003e originalLabels \u003d null;\n       \n       boolean nodeExisted \u003d false;\n       if (WILDCARD_PORT !\u003d nodeId.getPort()) {\n         Node nm \u003d getNMInNodeSet(nodeId);\n         if (nm !\u003d null) {\n           originalLabels \u003d nm.labels;\n           nodeExisted \u003d true;\n         }\n       } else {\n         Host host \u003d nodeCollections.get(nodeId.getHost());\n         if (null !\u003d host) {\n           originalLabels \u003d host.labels;\n           nodeExisted \u003d true;\n         }\n       }\n       \n       if (!nodeExisted) {\n         String msg \u003d\n             \"Try to remove labels from NM\u003d\" + nodeId\n                 + \", but the NM doesn\u0027t existed\";\n         LOG.error(msg);\n         throw new IOException(msg);\n       }\n-      \n-      if (labels \u003d\u003d null || labels.isEmpty()) {\n+\n+      // the labels will never be null\n+      if (labels.isEmpty()) {\n         continue;\n       }\n \n-      if (!originalLabels.containsAll(labels)) {\n+      // originalLabels may be null,\n+      // because when a Node is created, Node.labels can be null.\n+      if (originalLabels \u003d\u003d null || !originalLabels.containsAll(labels)) {\n         String msg \u003d\n             \"Try to remove labels \u003d [\" + StringUtils.join(labels, \",\")\n                 + \"], but not all labels contained by NM\u003d\" + nodeId;\n         LOG.error(msg);\n         throw new IOException(msg);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkRemoveLabelsFromNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e removeLabelsFromNode) throws IOException {\n    // check all labels being added existed\n    Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n    for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : removeLabelsFromNode.entrySet()) {\n      NodeId nodeId \u003d entry.getKey();\n      Set\u003cString\u003e labels \u003d entry.getValue();\n      \n      if (!knownLabels.containsAll(labels)) {\n        String msg \u003d\n            \"Not all labels being removed contained by known \"\n                + \"label collections, please check\" + \", removed labels\u003d[\"\n                + StringUtils.join(labels, \",\") + \"]\";\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n      \n      Set\u003cString\u003e originalLabels \u003d null;\n      \n      boolean nodeExisted \u003d false;\n      if (WILDCARD_PORT !\u003d nodeId.getPort()) {\n        Node nm \u003d getNMInNodeSet(nodeId);\n        if (nm !\u003d null) {\n          originalLabels \u003d nm.labels;\n          nodeExisted \u003d true;\n        }\n      } else {\n        Host host \u003d nodeCollections.get(nodeId.getHost());\n        if (null !\u003d host) {\n          originalLabels \u003d host.labels;\n          nodeExisted \u003d true;\n        }\n      }\n      \n      if (!nodeExisted) {\n        String msg \u003d\n            \"Try to remove labels from NM\u003d\" + nodeId\n                + \", but the NM doesn\u0027t existed\";\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n\n      // the labels will never be null\n      if (labels.isEmpty()) {\n        continue;\n      }\n\n      // originalLabels may be null,\n      // because when a Node is created, Node.labels can be null.\n      if (originalLabels \u003d\u003d null || !originalLabels.containsAll(labels)) {\n        String msg \u003d\n            \"Try to remove labels \u003d [\" + StringUtils.join(labels, \",\")\n                + \"], but not all labels contained by NM\u003d\" + nodeId;\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "db7f1653198b950e89567c06898d64f6b930a0ee": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2494. Added NodeLabels Manager internal API and implementation. Contributed by Wangda Tan.\n",
      "commitDate": "10/10/14 11:44 AM",
      "commitName": "db7f1653198b950e89567c06898d64f6b930a0ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,55 @@\n+  protected void checkRemoveLabelsFromNode(\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e removeLabelsFromNode) throws IOException {\n+    // check all labels being added existed\n+    Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n+    for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : removeLabelsFromNode.entrySet()) {\n+      NodeId nodeId \u003d entry.getKey();\n+      Set\u003cString\u003e labels \u003d entry.getValue();\n+      \n+      if (!knownLabels.containsAll(labels)) {\n+        String msg \u003d\n+            \"Not all labels being removed contained by known \"\n+                + \"label collections, please check\" + \", removed labels\u003d[\"\n+                + StringUtils.join(labels, \",\") + \"]\";\n+        LOG.error(msg);\n+        throw new IOException(msg);\n+      }\n+      \n+      Set\u003cString\u003e originalLabels \u003d null;\n+      \n+      boolean nodeExisted \u003d false;\n+      if (WILDCARD_PORT !\u003d nodeId.getPort()) {\n+        Node nm \u003d getNMInNodeSet(nodeId);\n+        if (nm !\u003d null) {\n+          originalLabels \u003d nm.labels;\n+          nodeExisted \u003d true;\n+        }\n+      } else {\n+        Host host \u003d nodeCollections.get(nodeId.getHost());\n+        if (null !\u003d host) {\n+          originalLabels \u003d host.labels;\n+          nodeExisted \u003d true;\n+        }\n+      }\n+      \n+      if (!nodeExisted) {\n+        String msg \u003d\n+            \"Try to remove labels from NM\u003d\" + nodeId\n+                + \", but the NM doesn\u0027t existed\";\n+        LOG.error(msg);\n+        throw new IOException(msg);\n+      }\n+      \n+      if (labels \u003d\u003d null || labels.isEmpty()) {\n+        continue;\n+      }\n+\n+      if (!originalLabels.containsAll(labels)) {\n+        String msg \u003d\n+            \"Try to remove labels \u003d [\" + StringUtils.join(labels, \",\")\n+                + \"], but not all labels contained by NM\u003d\" + nodeId;\n+        LOG.error(msg);\n+        throw new IOException(msg);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkRemoveLabelsFromNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e removeLabelsFromNode) throws IOException {\n    // check all labels being added existed\n    Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n    for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : removeLabelsFromNode.entrySet()) {\n      NodeId nodeId \u003d entry.getKey();\n      Set\u003cString\u003e labels \u003d entry.getValue();\n      \n      if (!knownLabels.containsAll(labels)) {\n        String msg \u003d\n            \"Not all labels being removed contained by known \"\n                + \"label collections, please check\" + \", removed labels\u003d[\"\n                + StringUtils.join(labels, \",\") + \"]\";\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n      \n      Set\u003cString\u003e originalLabels \u003d null;\n      \n      boolean nodeExisted \u003d false;\n      if (WILDCARD_PORT !\u003d nodeId.getPort()) {\n        Node nm \u003d getNMInNodeSet(nodeId);\n        if (nm !\u003d null) {\n          originalLabels \u003d nm.labels;\n          nodeExisted \u003d true;\n        }\n      } else {\n        Host host \u003d nodeCollections.get(nodeId.getHost());\n        if (null !\u003d host) {\n          originalLabels \u003d host.labels;\n          nodeExisted \u003d true;\n        }\n      }\n      \n      if (!nodeExisted) {\n        String msg \u003d\n            \"Try to remove labels from NM\u003d\" + nodeId\n                + \", but the NM doesn\u0027t existed\";\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n      \n      if (labels \u003d\u003d null || labels.isEmpty()) {\n        continue;\n      }\n\n      if (!originalLabels.containsAll(labels)) {\n        String msg \u003d\n            \"Try to remove labels \u003d [\" + StringUtils.join(labels, \",\")\n                + \"], but not all labels contained by NM\u003d\" + nodeId;\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java"
    }
  }
}