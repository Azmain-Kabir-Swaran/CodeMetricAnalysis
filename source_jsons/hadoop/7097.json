{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StoragePolicySatisfier.java",
  "functionName": "init",
  "functionId": "init___context-Context(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
  "functionStartLine": 137,
  "functionEndLine": 146,
  "numCommitsSeen": 43,
  "timeTaken": 7012,
  "changeHistory": [
    "66e8f9b31529226309c924226a53dead3e6fcf11",
    "8467ec24fb74f30371d5a13e893fc56309ee9372",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d"
  ],
  "changeHistoryShort": {
    "66e8f9b31529226309c924226a53dead3e6fcf11": "Ymultichange(Yparameterchange,Ybodychange)",
    "8467ec24fb74f30371d5a13e893fc56309ee9372": "Ymultichange(Yparameterchange,Ybodychange)",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": "Ybodychange",
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": "Ymultichange(Yparameterchange,Ybodychange)",
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66e8f9b31529226309c924226a53dead3e6fcf11": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13381 : [SPS]: Use DFSUtilClient#makePathFromFileId() to prepare satisfier file path. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "66e8f9b31529226309c924226a53dead3e6fcf11",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13381 : [SPS]: Use DFSUtilClient#makePathFromFileId() to prepare satisfier file path. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "66e8f9b31529226309c924226a53dead3e6fcf11",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,10 @@\n-  public void init(final Context\u003cT\u003e context,\n-      final FileCollector\u003cT\u003e fileIDCollector,\n-      final BlockMoveTaskHandler blockMovementTaskHandler,\n-      final BlockMovementListener blockMovementListener) {\n+  public void init(final Context context) {\n     this.ctxt \u003d context;\n-    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded\u003cT\u003e(context,\n-        fileIDCollector);\n-    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems\u003cT\u003e(\n-        this, storageMovementNeeded, blockMovementListener);\n-    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n+    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded(context);\n+    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems(\n+        this, storageMovementNeeded, context);\n     this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n     this.blockMovementMaxRetry \u003d getConf().getInt(\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(final Context context) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded(context);\n    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems(\n        this, storageMovementNeeded, context);\n    this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[context-Context\u003cT\u003e(modifiers-final), fileIDCollector-FileCollector\u003cT\u003e(modifiers-final), blockMovementTaskHandler-BlockMoveTaskHandler(modifiers-final), blockMovementListener-BlockMovementListener(modifiers-final)]",
            "newValue": "[context-Context(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13381 : [SPS]: Use DFSUtilClient#makePathFromFileId() to prepare satisfier file path. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "66e8f9b31529226309c924226a53dead3e6fcf11",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,10 @@\n-  public void init(final Context\u003cT\u003e context,\n-      final FileCollector\u003cT\u003e fileIDCollector,\n-      final BlockMoveTaskHandler blockMovementTaskHandler,\n-      final BlockMovementListener blockMovementListener) {\n+  public void init(final Context context) {\n     this.ctxt \u003d context;\n-    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded\u003cT\u003e(context,\n-        fileIDCollector);\n-    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems\u003cT\u003e(\n-        this, storageMovementNeeded, blockMovementListener);\n-    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n+    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded(context);\n+    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems(\n+        this, storageMovementNeeded, context);\n     this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n     this.blockMovementMaxRetry \u003d getConf().getInt(\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(final Context context) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded(context);\n    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems(\n        this, storageMovementNeeded, context);\n    this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "8467ec24fb74f30371d5a13e893fc56309ee9372": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "8467ec24fb74f30371d5a13e893fc56309ee9372",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "8467ec24fb74f30371d5a13e893fc56309ee9372",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void init(final Context context, final FileIdCollector fileIDCollector,\n+  public void init(final Context\u003cT\u003e context,\n+      final FileCollector\u003cT\u003e fileIDCollector,\n       final BlockMoveTaskHandler blockMovementTaskHandler,\n       final BlockMovementListener blockMovementListener) {\n     this.ctxt \u003d context;\n-    this.storageMovementNeeded \u003d\n-        new BlockStorageMovementNeeded(context, fileIDCollector);\n-    this.storageMovementsMonitor \u003d\n-        new BlockStorageMovementAttemptedItems(this,\n-        storageMovementNeeded, blockMovementListener);\n+    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded\u003cT\u003e(context,\n+        fileIDCollector);\n+    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems\u003cT\u003e(\n+        this, storageMovementNeeded, blockMovementListener);\n     this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n     this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n     this.blockMovementMaxRetry \u003d getConf().getInt(\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(final Context\u003cT\u003e context,\n      final FileCollector\u003cT\u003e fileIDCollector,\n      final BlockMoveTaskHandler blockMovementTaskHandler,\n      final BlockMovementListener blockMovementListener) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded\u003cT\u003e(context,\n        fileIDCollector);\n    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems\u003cT\u003e(\n        this, storageMovementNeeded, blockMovementListener);\n    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n    this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[context-Context(modifiers-final), fileIDCollector-FileIdCollector(modifiers-final), blockMovementTaskHandler-BlockMoveTaskHandler(modifiers-final), blockMovementListener-BlockMovementListener(modifiers-final)]",
            "newValue": "[context-Context\u003cT\u003e(modifiers-final), fileIDCollector-FileCollector\u003cT\u003e(modifiers-final), blockMovementTaskHandler-BlockMoveTaskHandler(modifiers-final), blockMovementListener-BlockMovementListener(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13110: [SPS]: Reduce the number of APIs in NamenodeProtocol used by external satisfier. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "8467ec24fb74f30371d5a13e893fc56309ee9372",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void init(final Context context, final FileIdCollector fileIDCollector,\n+  public void init(final Context\u003cT\u003e context,\n+      final FileCollector\u003cT\u003e fileIDCollector,\n       final BlockMoveTaskHandler blockMovementTaskHandler,\n       final BlockMovementListener blockMovementListener) {\n     this.ctxt \u003d context;\n-    this.storageMovementNeeded \u003d\n-        new BlockStorageMovementNeeded(context, fileIDCollector);\n-    this.storageMovementsMonitor \u003d\n-        new BlockStorageMovementAttemptedItems(this,\n-        storageMovementNeeded, blockMovementListener);\n+    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded\u003cT\u003e(context,\n+        fileIDCollector);\n+    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems\u003cT\u003e(\n+        this, storageMovementNeeded, blockMovementListener);\n     this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n     this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n     this.blockMovementMaxRetry \u003d getConf().getInt(\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(final Context\u003cT\u003e context,\n      final FileCollector\u003cT\u003e fileIDCollector,\n      final BlockMoveTaskHandler blockMovementTaskHandler,\n      final BlockMovementListener blockMovementListener) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d new BlockStorageMovementNeeded\u003cT\u003e(context,\n        fileIDCollector);\n    this.storageMovementsMonitor \u003d new BlockStorageMovementAttemptedItems\u003cT\u003e(\n        this, storageMovementNeeded, blockMovementListener);\n    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n    this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13097: [SPS]: Fix the branch review comments(Part1). Contributed by Surendra Singh.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "d3de4fb2a084cbadab8ef91f11aa7732d3b0f308",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void init(final Context context, final FileIdCollector fileIDCollector,\n       final BlockMoveTaskHandler blockMovementTaskHandler,\n       final BlockMovementListener blockMovementListener) {\n     this.ctxt \u003d context;\n     this.storageMovementNeeded \u003d\n         new BlockStorageMovementNeeded(context, fileIDCollector);\n     this.storageMovementsMonitor \u003d\n         new BlockStorageMovementAttemptedItems(this,\n         storageMovementNeeded, blockMovementListener);\n     this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n-    this.spsWorkMultiplier \u003d DFSUtil.getSPSWorkMultiplier(getConf());\n+    this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n     this.blockMovementMaxRetry \u003d getConf().getInt(\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(final Context context, final FileIdCollector fileIDCollector,\n      final BlockMoveTaskHandler blockMovementTaskHandler,\n      final BlockMovementListener blockMovementListener) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d\n        new BlockStorageMovementNeeded(context, fileIDCollector);\n    this.storageMovementsMonitor \u003d\n        new BlockStorageMovementAttemptedItems(this,\n        storageMovementNeeded, blockMovementListener);\n    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n    this.spsWorkMultiplier \u003d getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
      "extendedDetails": {}
    },
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "3159b39cf8ef704835325263154fb1a1cecc109d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public void init(final Context context, final FileIdCollector fileIDCollector,\n-      final BlockMoveTaskHandler blockMovementTaskHandler) {\n+      final BlockMoveTaskHandler blockMovementTaskHandler,\n+      final BlockMovementListener blockMovementListener) {\n     this.ctxt \u003d context;\n     this.storageMovementNeeded \u003d\n         new BlockStorageMovementNeeded(context, fileIDCollector);\n     this.storageMovementsMonitor \u003d\n         new BlockStorageMovementAttemptedItems(this,\n-        storageMovementNeeded);\n+        storageMovementNeeded, blockMovementListener);\n     this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n     this.spsWorkMultiplier \u003d DFSUtil.getSPSWorkMultiplier(getConf());\n     this.blockMovementMaxRetry \u003d getConf().getInt(\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(final Context context, final FileIdCollector fileIDCollector,\n      final BlockMoveTaskHandler blockMovementTaskHandler,\n      final BlockMovementListener blockMovementListener) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d\n        new BlockStorageMovementNeeded(context, fileIDCollector);\n    this.storageMovementsMonitor \u003d\n        new BlockStorageMovementAttemptedItems(this,\n        storageMovementNeeded, blockMovementListener);\n    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n    this.spsWorkMultiplier \u003d DFSUtil.getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {
            "oldValue": "[context-Context(modifiers-final), fileIDCollector-FileIdCollector(modifiers-final), blockMovementTaskHandler-BlockMoveTaskHandler(modifiers-final)]",
            "newValue": "[context-Context(modifiers-final), fileIDCollector-FileIdCollector(modifiers-final), blockMovementTaskHandler-BlockMoveTaskHandler(modifiers-final), blockMovementListener-BlockMovementListener(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "3159b39cf8ef704835325263154fb1a1cecc109d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public void init(final Context context, final FileIdCollector fileIDCollector,\n-      final BlockMoveTaskHandler blockMovementTaskHandler) {\n+      final BlockMoveTaskHandler blockMovementTaskHandler,\n+      final BlockMovementListener blockMovementListener) {\n     this.ctxt \u003d context;\n     this.storageMovementNeeded \u003d\n         new BlockStorageMovementNeeded(context, fileIDCollector);\n     this.storageMovementsMonitor \u003d\n         new BlockStorageMovementAttemptedItems(this,\n-        storageMovementNeeded);\n+        storageMovementNeeded, blockMovementListener);\n     this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n     this.spsWorkMultiplier \u003d DFSUtil.getSPSWorkMultiplier(getConf());\n     this.blockMovementMaxRetry \u003d getConf().getInt(\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(final Context context, final FileIdCollector fileIDCollector,\n      final BlockMoveTaskHandler blockMovementTaskHandler,\n      final BlockMovementListener blockMovementListener) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d\n        new BlockStorageMovementNeeded(context, fileIDCollector);\n    this.storageMovementsMonitor \u003d\n        new BlockStorageMovementAttemptedItems(this,\n        storageMovementNeeded, blockMovementListener);\n    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n    this.spsWorkMultiplier \u003d DFSUtil.getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java",
          "extendedDetails": {}
        }
      ]
    },
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12911. [SPS]: Modularize the SPS code and expose necessary interfaces for external/internal implementations. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,14 @@\n+  public void init(final Context context, final FileIdCollector fileIDCollector,\n+      final BlockMoveTaskHandler blockMovementTaskHandler) {\n+    this.ctxt \u003d context;\n+    this.storageMovementNeeded \u003d\n+        new BlockStorageMovementNeeded(context, fileIDCollector);\n+    this.storageMovementsMonitor \u003d\n+        new BlockStorageMovementAttemptedItems(this,\n+        storageMovementNeeded);\n+    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n+    this.spsWorkMultiplier \u003d DFSUtil.getSPSWorkMultiplier(getConf());\n+    this.blockMovementMaxRetry \u003d getConf().getInt(\n+        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n+        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(final Context context, final FileIdCollector fileIDCollector,\n      final BlockMoveTaskHandler blockMovementTaskHandler) {\n    this.ctxt \u003d context;\n    this.storageMovementNeeded \u003d\n        new BlockStorageMovementNeeded(context, fileIDCollector);\n    this.storageMovementsMonitor \u003d\n        new BlockStorageMovementAttemptedItems(this,\n        storageMovementNeeded);\n    this.blockMoveTaskHandler \u003d blockMovementTaskHandler;\n    this.spsWorkMultiplier \u003d DFSUtil.getSPSWorkMultiplier(getConf());\n    this.blockMovementMaxRetry \u003d getConf().getInt(\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MAX_RETRY_ATTEMPTS_DEFAULT);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfier.java"
    }
  }
}