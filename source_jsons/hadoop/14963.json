{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageTextWriter.java",
  "functionName": "buildNamespace",
  "functionId": "buildNamespace___in-InputStream__refIdList-List__Long__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
  "functionStartLine": 737,
  "functionEndLine": 762,
  "numCommitsSeen": 12,
  "timeTaken": 2575,
  "changeHistory": [
    "fb10803dfa67394650072bdea327296f8ad2a744",
    "9d494f0c0eaa05417f3a3e88487d878d1731da36",
    "caf7298e49f646a40023af999f62d61846fde5e2"
  ],
  "changeHistoryShort": {
    "fb10803dfa67394650072bdea327296f8ad2a744": "Ymodifierchange",
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": "Ymultichange(Yparameterchange,Ybodychange)",
    "caf7298e49f646a40023af999f62d61846fde5e2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "26/10/18 4:41 PM",
      "commitNameOld": "4f10d7e23fc0b757a9e94bc448187a6211b90f10",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 37.79,
      "commitsBetweenForRepo": 254,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n-  private void buildNamespace(InputStream in, List\u003cLong\u003e refIdList)\n+  protected void buildNamespace(InputStream in, List\u003cLong\u003e refIdList)\n       throws IOException {\n     int count \u003d 0;\n     while (true) {\n       FsImageProto.INodeDirectorySection.DirEntry e \u003d\n           FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n       if (e \u003d\u003d null) {\n         break;\n       }\n       count++;\n       if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n         LOG.debug(\"Scanned {} directories.\", count);\n       }\n       long parentId \u003d e.getParent();\n       for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n         long childId \u003d e.getChildren(i);\n         metadataMap.putDirChild(parentId, childId);\n       }\n       for (int i \u003d e.getChildrenCount();\n            i \u003c e.getChildrenCount() + e.getRefChildrenCount(); i++) {\n         int refId \u003d e.getRefChildren(i - e.getChildrenCount());\n         metadataMap.putDirChild(parentId, refIdList.get(refId));\n       }\n     }\n     LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void buildNamespace(InputStream in, List\u003cLong\u003e refIdList)\n      throws IOException {\n    int count \u003d 0;\n    while (true) {\n      FsImageProto.INodeDirectorySection.DirEntry e \u003d\n          FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      count++;\n      if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n        LOG.debug(\"Scanned {} directories.\", count);\n      }\n      long parentId \u003d e.getParent();\n      for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n        long childId \u003d e.getChildren(i);\n        metadataMap.putDirChild(parentId, childId);\n      }\n      for (int i \u003d e.getChildrenCount();\n           i \u003c e.getChildrenCount() + e.getRefChildrenCount(); i++) {\n        int refId \u003d e.getRefChildren(i - e.getChildrenCount());\n        metadataMap.putDirChild(parentId, refIdList.get(refId));\n      }\n    }\n    LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-9721. Allow Delimited PB OIV tool to run upon fsimage that contains INodeReference. (Xiao Chen via lei)\n",
      "commitDate": "02/02/16 10:42 AM",
      "commitName": "9d494f0c0eaa05417f3a3e88487d878d1731da36",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9721. Allow Delimited PB OIV tool to run upon fsimage that contains INodeReference. (Xiao Chen via lei)\n",
          "commitDate": "02/02/16 10:42 AM",
          "commitName": "9d494f0c0eaa05417f3a3e88487d878d1731da36",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "07/04/15 2:23 PM",
          "commitNameOld": "1e72d98c69bef3526cf0eb617de69e0b6d2fc13c",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 300.89,
          "commitsBetweenForRepo": 2355,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,26 @@\n-  private void buildNamespace(InputStream in) throws IOException {\n+  private void buildNamespace(InputStream in, List\u003cLong\u003e refIdList)\n+      throws IOException {\n     int count \u003d 0;\n     while (true) {\n       FsImageProto.INodeDirectorySection.DirEntry e \u003d\n           FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n       if (e \u003d\u003d null) {\n         break;\n       }\n       count++;\n       if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n         LOG.debug(\"Scanned {} directories.\", count);\n       }\n       long parentId \u003d e.getParent();\n-      // Referred INode is not support for now.\n       for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n         long childId \u003d e.getChildren(i);\n         metadataMap.putDirChild(parentId, childId);\n       }\n-      Preconditions.checkState(e.getRefChildrenCount() \u003d\u003d 0);\n+      for (int i \u003d e.getChildrenCount();\n+           i \u003c e.getChildrenCount() + e.getRefChildrenCount(); i++) {\n+        int refId \u003d e.getRefChildren(i - e.getChildrenCount());\n+        metadataMap.putDirChild(parentId, refIdList.get(refId));\n+      }\n     }\n     LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void buildNamespace(InputStream in, List\u003cLong\u003e refIdList)\n      throws IOException {\n    int count \u003d 0;\n    while (true) {\n      FsImageProto.INodeDirectorySection.DirEntry e \u003d\n          FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      count++;\n      if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n        LOG.debug(\"Scanned {} directories.\", count);\n      }\n      long parentId \u003d e.getParent();\n      for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n        long childId \u003d e.getChildren(i);\n        metadataMap.putDirChild(parentId, childId);\n      }\n      for (int i \u003d e.getChildrenCount();\n           i \u003c e.getChildrenCount() + e.getRefChildrenCount(); i++) {\n        int refId \u003d e.getRefChildren(i - e.getChildrenCount());\n        metadataMap.putDirChild(parentId, refIdList.get(refId));\n      }\n    }\n    LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
          "extendedDetails": {
            "oldValue": "[in-InputStream]",
            "newValue": "[in-InputStream, refIdList-List\u003cLong\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9721. Allow Delimited PB OIV tool to run upon fsimage that contains INodeReference. (Xiao Chen via lei)\n",
          "commitDate": "02/02/16 10:42 AM",
          "commitName": "9d494f0c0eaa05417f3a3e88487d878d1731da36",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "07/04/15 2:23 PM",
          "commitNameOld": "1e72d98c69bef3526cf0eb617de69e0b6d2fc13c",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 300.89,
          "commitsBetweenForRepo": 2355,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,26 @@\n-  private void buildNamespace(InputStream in) throws IOException {\n+  private void buildNamespace(InputStream in, List\u003cLong\u003e refIdList)\n+      throws IOException {\n     int count \u003d 0;\n     while (true) {\n       FsImageProto.INodeDirectorySection.DirEntry e \u003d\n           FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n       if (e \u003d\u003d null) {\n         break;\n       }\n       count++;\n       if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n         LOG.debug(\"Scanned {} directories.\", count);\n       }\n       long parentId \u003d e.getParent();\n-      // Referred INode is not support for now.\n       for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n         long childId \u003d e.getChildren(i);\n         metadataMap.putDirChild(parentId, childId);\n       }\n-      Preconditions.checkState(e.getRefChildrenCount() \u003d\u003d 0);\n+      for (int i \u003d e.getChildrenCount();\n+           i \u003c e.getChildrenCount() + e.getRefChildrenCount(); i++) {\n+        int refId \u003d e.getRefChildren(i - e.getChildrenCount());\n+        metadataMap.putDirChild(parentId, refIdList.get(refId));\n+      }\n     }\n     LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void buildNamespace(InputStream in, List\u003cLong\u003e refIdList)\n      throws IOException {\n    int count \u003d 0;\n    while (true) {\n      FsImageProto.INodeDirectorySection.DirEntry e \u003d\n          FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      count++;\n      if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n        LOG.debug(\"Scanned {} directories.\", count);\n      }\n      long parentId \u003d e.getParent();\n      for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n        long childId \u003d e.getChildren(i);\n        metadataMap.putDirChild(parentId, childId);\n      }\n      for (int i \u003d e.getChildrenCount();\n           i \u003c e.getChildrenCount() + e.getRefChildrenCount(); i++) {\n        int refId \u003d e.getRefChildren(i - e.getChildrenCount());\n        metadataMap.putDirChild(parentId, refIdList.get(refId));\n      }\n    }\n    LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
          "extendedDetails": {}
        }
      ]
    },
    "caf7298e49f646a40023af999f62d61846fde5e2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6673. Add delimited format support to PB OIV tool. Contributed by Eddy Xu.\n",
      "commitDate": "28/01/15 12:36 PM",
      "commitName": "caf7298e49f646a40023af999f62d61846fde5e2",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,22 @@\n+  private void buildNamespace(InputStream in) throws IOException {\n+    int count \u003d 0;\n+    while (true) {\n+      FsImageProto.INodeDirectorySection.DirEntry e \u003d\n+          FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n+      if (e \u003d\u003d null) {\n+        break;\n+      }\n+      count++;\n+      if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n+        LOG.debug(\"Scanned {} directories.\", count);\n+      }\n+      long parentId \u003d e.getParent();\n+      // Referred INode is not support for now.\n+      for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n+        long childId \u003d e.getChildren(i);\n+        metadataMap.putDirChild(parentId, childId);\n+      }\n+      Preconditions.checkState(e.getRefChildrenCount() \u003d\u003d 0);\n+    }\n+    LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void buildNamespace(InputStream in) throws IOException {\n    int count \u003d 0;\n    while (true) {\n      FsImageProto.INodeDirectorySection.DirEntry e \u003d\n          FsImageProto.INodeDirectorySection.DirEntry.parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      count++;\n      if (LOG.isDebugEnabled() \u0026\u0026 count % 10000 \u003d\u003d 0) {\n        LOG.debug(\"Scanned {} directories.\", count);\n      }\n      long parentId \u003d e.getParent();\n      // Referred INode is not support for now.\n      for (int i \u003d 0; i \u003c e.getChildrenCount(); i++) {\n        long childId \u003d e.getChildren(i);\n        metadataMap.putDirChild(parentId, childId);\n      }\n      Preconditions.checkState(e.getRefChildrenCount() \u003d\u003d 0);\n    }\n    LOG.info(\"Scanned {} INode directories to build namespace.\", count);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java"
    }
  }
}