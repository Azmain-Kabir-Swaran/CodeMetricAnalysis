{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormatPBINode.java",
  "functionName": "buildAclEntries",
  "functionId": "buildAclEntries___f-AclFeature",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
  "functionStartLine": 597,
  "functionEndLine": 604,
  "numCommitsSeen": 121,
  "timeTaken": 3590,
  "changeHistory": [
    "b60ca37914b22550e3630fa02742d40697decb31",
    "0653918dad855b394e8e3b8b3f512f474d872ee9"
  ],
  "changeHistoryShort": {
    "b60ca37914b22550e3630fa02742d40697decb31": "Ymultichange(Yparameterchange,Ybodychange)",
    "0653918dad855b394e8e3b8b3f512f474d872ee9": "Ybodychange"
  },
  "changeHistoryDetails": {
    "b60ca37914b22550e3630fa02742d40697decb31": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
      "commitDate": "15/10/18 3:18 AM",
      "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
      "commitAuthor": "Vinayakumar B",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
          "commitDate": "15/10/18 3:18 AM",
          "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 38.52,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,8 @@\n-    private static AclFeatureProto.Builder buildAclEntries(AclFeature f,\n-        final SaverContext.DeduplicationMap\u003cString\u003e map) {\n+    private static AclFeatureProto.Builder buildAclEntries(AclFeature f) {\n       AclFeatureProto.Builder b \u003d AclFeatureProto.newBuilder();\n       for (int pos \u003d 0, e; pos \u003c f.getEntriesSize(); pos++) {\n         e \u003d f.getEntryAt(pos);\n-        int nameId \u003d map.getId(AclEntryStatusFormat.getName(e));\n-        int v \u003d ((nameId \u0026 ACL_ENTRY_NAME_MASK) \u003c\u003c ACL_ENTRY_NAME_OFFSET)\n-            | (AclEntryStatusFormat.getType(e).ordinal() \u003c\u003c ACL_ENTRY_TYPE_OFFSET)\n-            | (AclEntryStatusFormat.getScope(e).ordinal() \u003c\u003c ACL_ENTRY_SCOPE_OFFSET)\n-            | (AclEntryStatusFormat.getPermission(e).ordinal());\n-        b.addEntries(v);\n+        b.addEntries(e);\n       }\n       return b;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AclFeatureProto.Builder buildAclEntries(AclFeature f) {\n      AclFeatureProto.Builder b \u003d AclFeatureProto.newBuilder();\n      for (int pos \u003d 0, e; pos \u003c f.getEntriesSize(); pos++) {\n        e \u003d f.getEntryAt(pos);\n        b.addEntries(e);\n      }\n      return b;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
          "extendedDetails": {
            "oldValue": "[f-AclFeature, map-SaverContext.DeduplicationMap\u003cString\u003e(modifiers-final)]",
            "newValue": "[f-AclFeature]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
          "commitDate": "15/10/18 3:18 AM",
          "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 38.52,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,8 @@\n-    private static AclFeatureProto.Builder buildAclEntries(AclFeature f,\n-        final SaverContext.DeduplicationMap\u003cString\u003e map) {\n+    private static AclFeatureProto.Builder buildAclEntries(AclFeature f) {\n       AclFeatureProto.Builder b \u003d AclFeatureProto.newBuilder();\n       for (int pos \u003d 0, e; pos \u003c f.getEntriesSize(); pos++) {\n         e \u003d f.getEntryAt(pos);\n-        int nameId \u003d map.getId(AclEntryStatusFormat.getName(e));\n-        int v \u003d ((nameId \u0026 ACL_ENTRY_NAME_MASK) \u003c\u003c ACL_ENTRY_NAME_OFFSET)\n-            | (AclEntryStatusFormat.getType(e).ordinal() \u003c\u003c ACL_ENTRY_TYPE_OFFSET)\n-            | (AclEntryStatusFormat.getScope(e).ordinal() \u003c\u003c ACL_ENTRY_SCOPE_OFFSET)\n-            | (AclEntryStatusFormat.getPermission(e).ordinal());\n-        b.addEntries(v);\n+        b.addEntries(e);\n       }\n       return b;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AclFeatureProto.Builder buildAclEntries(AclFeature f) {\n      AclFeatureProto.Builder b \u003d AclFeatureProto.newBuilder();\n      for (int pos \u003d 0, e; pos \u003c f.getEntriesSize(); pos++) {\n        e \u003d f.getEntryAt(pos);\n        b.addEntries(e);\n      }\n      return b;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
          "extendedDetails": {}
        }
      ]
    },
    "0653918dad855b394e8e3b8b3f512f474d872ee9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7454. Reduce memory footprint for AclEntries in NameNode. Contributed by Vinayakumar B.\n",
      "commitDate": "04/12/14 8:49 PM",
      "commitName": "0653918dad855b394e8e3b8b3f512f474d872ee9",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/12/14 2:53 PM",
      "commitNameOld": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 2.25,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n     private static AclFeatureProto.Builder buildAclEntries(AclFeature f,\n         final SaverContext.DeduplicationMap\u003cString\u003e map) {\n       AclFeatureProto.Builder b \u003d AclFeatureProto.newBuilder();\n-      for (AclEntry e : f.getEntries()) {\n-        int v \u003d ((map.getId(e.getName()) \u0026 ACL_ENTRY_NAME_MASK) \u003c\u003c ACL_ENTRY_NAME_OFFSET)\n-            | (e.getType().ordinal() \u003c\u003c ACL_ENTRY_TYPE_OFFSET)\n-            | (e.getScope().ordinal() \u003c\u003c ACL_ENTRY_SCOPE_OFFSET)\n-            | (e.getPermission().ordinal());\n+      for (int pos \u003d 0, e; pos \u003c f.getEntriesSize(); pos++) {\n+        e \u003d f.getEntryAt(pos);\n+        int nameId \u003d map.getId(AclEntryStatusFormat.getName(e));\n+        int v \u003d ((nameId \u0026 ACL_ENTRY_NAME_MASK) \u003c\u003c ACL_ENTRY_NAME_OFFSET)\n+            | (AclEntryStatusFormat.getType(e).ordinal() \u003c\u003c ACL_ENTRY_TYPE_OFFSET)\n+            | (AclEntryStatusFormat.getScope(e).ordinal() \u003c\u003c ACL_ENTRY_SCOPE_OFFSET)\n+            | (AclEntryStatusFormat.getPermission(e).ordinal());\n         b.addEntries(v);\n       }\n       return b;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AclFeatureProto.Builder buildAclEntries(AclFeature f,\n        final SaverContext.DeduplicationMap\u003cString\u003e map) {\n      AclFeatureProto.Builder b \u003d AclFeatureProto.newBuilder();\n      for (int pos \u003d 0, e; pos \u003c f.getEntriesSize(); pos++) {\n        e \u003d f.getEntryAt(pos);\n        int nameId \u003d map.getId(AclEntryStatusFormat.getName(e));\n        int v \u003d ((nameId \u0026 ACL_ENTRY_NAME_MASK) \u003c\u003c ACL_ENTRY_NAME_OFFSET)\n            | (AclEntryStatusFormat.getType(e).ordinal() \u003c\u003c ACL_ENTRY_TYPE_OFFSET)\n            | (AclEntryStatusFormat.getScope(e).ordinal() \u003c\u003c ACL_ENTRY_SCOPE_OFFSET)\n            | (AclEntryStatusFormat.getPermission(e).ordinal());\n        b.addEntries(v);\n      }\n      return b;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
      "extendedDetails": {}
    }
  }
}