{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HarFileSystem.java",
  "functionName": "fixBlockLocations",
  "functionId": "fixBlockLocations___locations-BlockLocation[]__start-long__len-long__fileOffsetInHar-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HarFileSystem.java",
  "functionStartLine": 422,
  "functionEndLine": 456,
  "numCommitsSeen": 36,
  "timeTaken": 4909,
  "changeHistory": [
    "0201be46c298e94176ec6297e9d9cdba3afc2bbd",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "0201be46c298e94176ec6297e9d9cdba3afc2bbd": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0201be46c298e94176ec6297e9d9cdba3afc2bbd": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7810. move hadoop archive to core from tools. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213907 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 12:17 PM",
      "commitName": "0201be46c298e94176ec6297e9d9cdba3afc2bbd",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "13/12/11 10:07 AM",
      "commitNameOld": "f2f4e9341387199e04679ebc8de5e05c0fdbd437",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static BlockLocation[] fixBlockLocations(BlockLocation[] locations,\n                                          long start,\n                                          long len,\n                                          long fileOffsetInHar) {\n    // offset 1 past last byte of desired range\n    long end \u003d start + len;\n\n    for (BlockLocation location : locations) {\n      // offset of part block relative to beginning of desired file\n      // (may be negative if file starts in this part block)\n      long harBlockStart \u003d location.getOffset() - fileOffsetInHar;\n      // offset 1 past last byte of har block relative to beginning of\n      // desired file\n      long harBlockEnd \u003d harBlockStart + location.getLength();\n      \n      if (start \u003e harBlockStart) {\n        // desired range starts after beginning of this har block\n        // fix offset to beginning of relevant range (relative to desired file)\n        location.setOffset(start);\n        // fix length to relevant portion of har block\n        location.setLength(location.getLength() - (start - harBlockStart));\n      } else {\n        // desired range includes beginning of this har block\n        location.setOffset(harBlockStart);\n      }\n      \n      if (harBlockEnd \u003e end) {\n        // range ends before end of this har block\n        // fix length to remove irrelevant portion at the end\n        location.setLength(location.getLength() - (harBlockEnd - end));\n      }\n    }\n    \n    return locations;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HarFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/fs/HarFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HarFileSystem.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static BlockLocation[] fixBlockLocations(BlockLocation[] locations,\n                                          long start,\n                                          long len,\n                                          long fileOffsetInHar) {\n    // offset 1 past last byte of desired range\n    long end \u003d start + len;\n\n    for (BlockLocation location : locations) {\n      // offset of part block relative to beginning of desired file\n      // (may be negative if file starts in this part block)\n      long harBlockStart \u003d location.getOffset() - fileOffsetInHar;\n      // offset 1 past last byte of har block relative to beginning of\n      // desired file\n      long harBlockEnd \u003d harBlockStart + location.getLength();\n      \n      if (start \u003e harBlockStart) {\n        // desired range starts after beginning of this har block\n        // fix offset to beginning of relevant range (relative to desired file)\n        location.setOffset(start);\n        // fix length to relevant portion of har block\n        location.setLength(location.getLength() - (start - harBlockStart));\n      } else {\n        // desired range includes beginning of this har block\n        location.setOffset(harBlockStart);\n      }\n      \n      if (harBlockEnd \u003e end) {\n        // range ends before end of this har block\n        // fix length to remove irrelevant portion at the end\n        location.setLength(location.getLength() - (harBlockEnd - end));\n      }\n    }\n    \n    return locations;\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/fs/HarFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/fs/HarFileSystem.java",
        "newPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/fs/HarFileSystem.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static BlockLocation[] fixBlockLocations(BlockLocation[] locations,\n                                          long start,\n                                          long len,\n                                          long fileOffsetInHar) {\n    // offset 1 past last byte of desired range\n    long end \u003d start + len;\n\n    for (BlockLocation location : locations) {\n      // offset of part block relative to beginning of desired file\n      // (may be negative if file starts in this part block)\n      long harBlockStart \u003d location.getOffset() - fileOffsetInHar;\n      // offset 1 past last byte of har block relative to beginning of\n      // desired file\n      long harBlockEnd \u003d harBlockStart + location.getLength();\n      \n      if (start \u003e harBlockStart) {\n        // desired range starts after beginning of this har block\n        // fix offset to beginning of relevant range (relative to desired file)\n        location.setOffset(start);\n        // fix length to relevant portion of har block\n        location.setLength(location.getLength() - (start - harBlockStart));\n      } else {\n        // desired range includes beginning of this har block\n        location.setOffset(harBlockStart);\n      }\n      \n      if (harBlockEnd \u003e end) {\n        // range ends before end of this har block\n        // fix length to remove irrelevant portion at the end\n        location.setLength(location.getLength() - (harBlockEnd - end));\n      }\n    }\n    \n    return locations;\n  }",
      "path": "hadoop-mapreduce/src/tools/org/apache/hadoop/fs/HarFileSystem.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/tools/org/apache/hadoop/fs/HarFileSystem.java",
        "newPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/fs/HarFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,35 @@\n+  static BlockLocation[] fixBlockLocations(BlockLocation[] locations,\n+                                          long start,\n+                                          long len,\n+                                          long fileOffsetInHar) {\n+    // offset 1 past last byte of desired range\n+    long end \u003d start + len;\n+\n+    for (BlockLocation location : locations) {\n+      // offset of part block relative to beginning of desired file\n+      // (may be negative if file starts in this part block)\n+      long harBlockStart \u003d location.getOffset() - fileOffsetInHar;\n+      // offset 1 past last byte of har block relative to beginning of\n+      // desired file\n+      long harBlockEnd \u003d harBlockStart + location.getLength();\n+      \n+      if (start \u003e harBlockStart) {\n+        // desired range starts after beginning of this har block\n+        // fix offset to beginning of relevant range (relative to desired file)\n+        location.setOffset(start);\n+        // fix length to relevant portion of har block\n+        location.setLength(location.getLength() - (start - harBlockStart));\n+      } else {\n+        // desired range includes beginning of this har block\n+        location.setOffset(harBlockStart);\n+      }\n+      \n+      if (harBlockEnd \u003e end) {\n+        // range ends before end of this har block\n+        // fix length to remove irrelevant portion at the end\n+        location.setLength(location.getLength() - (harBlockEnd - end));\n+      }\n+    }\n+    \n+    return locations;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static BlockLocation[] fixBlockLocations(BlockLocation[] locations,\n                                          long start,\n                                          long len,\n                                          long fileOffsetInHar) {\n    // offset 1 past last byte of desired range\n    long end \u003d start + len;\n\n    for (BlockLocation location : locations) {\n      // offset of part block relative to beginning of desired file\n      // (may be negative if file starts in this part block)\n      long harBlockStart \u003d location.getOffset() - fileOffsetInHar;\n      // offset 1 past last byte of har block relative to beginning of\n      // desired file\n      long harBlockEnd \u003d harBlockStart + location.getLength();\n      \n      if (start \u003e harBlockStart) {\n        // desired range starts after beginning of this har block\n        // fix offset to beginning of relevant range (relative to desired file)\n        location.setOffset(start);\n        // fix length to relevant portion of har block\n        location.setLength(location.getLength() - (start - harBlockStart));\n      } else {\n        // desired range includes beginning of this har block\n        location.setOffset(harBlockStart);\n      }\n      \n      if (harBlockEnd \u003e end) {\n        // range ends before end of this har block\n        // fix length to remove irrelevant portion at the end\n        location.setLength(location.getLength() - (harBlockEnd - end));\n      }\n    }\n    \n    return locations;\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/fs/HarFileSystem.java"
    }
  }
}