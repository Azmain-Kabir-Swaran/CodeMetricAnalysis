{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueManager.java",
  "functionName": "removeEmptyDynamicQueues",
  "functionId": "removeEmptyDynamicQueues",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
  "functionStartLine": 481,
  "functionEndLine": 503,
  "numCommitsSeen": 52,
  "timeTaken": 2610,
  "changeHistory": [
    "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
    "86bc6425d425913899f1d951498bd040e453b3d0"
  ],
  "changeHistoryShort": {
    "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4": "Ybodychange",
    "86bc6425d425913899f1d951498bd040e453b3d0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8992. Fair scheduler can delete a dynamic queue while an application attempt is being added to the queue. (Contributed by Wilfred Spiegelenburg)\n",
      "commitDate": "20/11/18 2:12 PM",
      "commitName": "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "08/11/18 4:02 PM",
      "commitNameOld": "524a7523c427b55273133078898ae3535897bada",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 11.92,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void removeEmptyDynamicQueues() {\n     synchronized (queues) {\n       Set\u003cFSParentQueue\u003e parentQueuesToCheck \u003d new HashSet\u003c\u003e();\n       for (FSQueue queue : getQueues()) {\n         if (queue.isDynamic() \u0026\u0026 queue.getChildQueues().isEmpty()) {\n           boolean removed \u003d removeQueueIfEmpty(queue);\n           if (removed \u0026\u0026 queue.getParent().isDynamic()) {\n             parentQueuesToCheck.add(queue.getParent());\n           }\n         }\n       }\n       while (!parentQueuesToCheck.isEmpty()) {\n         FSParentQueue queue \u003d parentQueuesToCheck.iterator().next();\n-        if (queue.getChildQueues().isEmpty()) {\n+        if (queue.isEmpty()) {\n           removeQueue(queue);\n           if (queue.getParent().isDynamic()) {\n             parentQueuesToCheck.add(queue.getParent());\n           }\n         }\n         parentQueuesToCheck.remove(queue);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeEmptyDynamicQueues() {\n    synchronized (queues) {\n      Set\u003cFSParentQueue\u003e parentQueuesToCheck \u003d new HashSet\u003c\u003e();\n      for (FSQueue queue : getQueues()) {\n        if (queue.isDynamic() \u0026\u0026 queue.getChildQueues().isEmpty()) {\n          boolean removed \u003d removeQueueIfEmpty(queue);\n          if (removed \u0026\u0026 queue.getParent().isDynamic()) {\n            parentQueuesToCheck.add(queue.getParent());\n          }\n        }\n      }\n      while (!parentQueuesToCheck.isEmpty()) {\n        FSParentQueue queue \u003d parentQueuesToCheck.iterator().next();\n        if (queue.isEmpty()) {\n          removeQueue(queue);\n          if (queue.getParent().isDynamic()) {\n            parentQueuesToCheck.add(queue.getParent());\n          }\n        }\n        parentQueuesToCheck.remove(queue);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "86bc6425d425913899f1d951498bd040e453b3d0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8191. Fair scheduler: queue deletion without RM restart. (Gergo Repas via Haibo Chen)\n",
      "commitDate": "24/05/18 5:12 PM",
      "commitName": "86bc6425d425913899f1d951498bd040e453b3d0",
      "commitAuthor": "Haibo Chen",
      "diff": "@@ -0,0 +1,23 @@\n+  public void removeEmptyDynamicQueues() {\n+    synchronized (queues) {\n+      Set\u003cFSParentQueue\u003e parentQueuesToCheck \u003d new HashSet\u003c\u003e();\n+      for (FSQueue queue : getQueues()) {\n+        if (queue.isDynamic() \u0026\u0026 queue.getChildQueues().isEmpty()) {\n+          boolean removed \u003d removeQueueIfEmpty(queue);\n+          if (removed \u0026\u0026 queue.getParent().isDynamic()) {\n+            parentQueuesToCheck.add(queue.getParent());\n+          }\n+        }\n+      }\n+      while (!parentQueuesToCheck.isEmpty()) {\n+        FSParentQueue queue \u003d parentQueuesToCheck.iterator().next();\n+        if (queue.getChildQueues().isEmpty()) {\n+          removeQueue(queue);\n+          if (queue.getParent().isDynamic()) {\n+            parentQueuesToCheck.add(queue.getParent());\n+          }\n+        }\n+        parentQueuesToCheck.remove(queue);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeEmptyDynamicQueues() {\n    synchronized (queues) {\n      Set\u003cFSParentQueue\u003e parentQueuesToCheck \u003d new HashSet\u003c\u003e();\n      for (FSQueue queue : getQueues()) {\n        if (queue.isDynamic() \u0026\u0026 queue.getChildQueues().isEmpty()) {\n          boolean removed \u003d removeQueueIfEmpty(queue);\n          if (removed \u0026\u0026 queue.getParent().isDynamic()) {\n            parentQueuesToCheck.add(queue.getParent());\n          }\n        }\n      }\n      while (!parentQueuesToCheck.isEmpty()) {\n        FSParentQueue queue \u003d parentQueuesToCheck.iterator().next();\n        if (queue.getChildQueues().isEmpty()) {\n          removeQueue(queue);\n          if (queue.getParent().isDynamic()) {\n            parentQueuesToCheck.add(queue.getParent());\n          }\n        }\n        parentQueuesToCheck.remove(queue);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java"
    }
  }
}