{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppImpl.java",
  "functionName": "getAppAttemptFailedDiagnostics",
  "functionId": "getAppAttemptFailedDiagnostics___event-RMAppEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
  "functionStartLine": 1218,
  "functionEndLine": 1243,
  "numCommitsSeen": 170,
  "timeTaken": 5439,
  "changeHistory": [
    "23481ad378de7f8e95eabefbd102825f757714b8",
    "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5",
    "1970ca7cbcdb7efa160d0cedc2e3e22c1401fad6",
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
    "b717d44b52a7ddc6586f9dd2b830422b984b5b0f",
    "d16470025aa0c51a04c530863a96108895d72ddf",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6"
  ],
  "changeHistoryShort": {
    "23481ad378de7f8e95eabefbd102825f757714b8": "Ybodychange",
    "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5": "Ybodychange",
    "1970ca7cbcdb7efa160d0cedc2e3e22c1401fad6": "Ybodychange",
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867": "Ybodychange",
    "b717d44b52a7ddc6586f9dd2b830422b984b5b0f": "Ybodychange",
    "d16470025aa0c51a04c530863a96108895d72ddf": "Ybodychange",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "23481ad378de7f8e95eabefbd102825f757714b8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10212. Create separate configuration for max global AM attempts. Contributed by Bilwa S T\n",
      "commitDate": "09/04/20 11:06 AM",
      "commitName": "23481ad378de7f8e95eabefbd102825f757714b8",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "25/03/20 10:41 AM",
      "commitNameOld": "6ce189c62132706d9aaee5abf020ae4dc783ba26",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 15.02,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n     String msg \u003d null;\n     RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n     if (this.submissionContext.getUnmanagedAM()) {\n       // RM does not manage the AM. Do not retry\n       msg \u003d \"Unmanaged application \" + this.getApplicationId()\n               + \" failed due to \" + failedEvent.getDiagnosticMsg()\n               + \". Failing the application.\";\n     } else if (this.isNumAttemptsBeyondThreshold) {\n-      int globalLimit \u003d conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,\n-          YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);\n+      int globalLimit \u003d conf.getInt(YarnConfiguration.GLOBAL_RM_AM_MAX_ATTEMPTS,\n+          conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,\n+              YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS));\n       msg \u003d String.format(\n         \"Application %s failed %d times%s%s due to %s. Failing the application.\",\n           getApplicationId(),\n           maxAppAttempts,\n           (attemptFailuresValidityInterval \u003c\u003d 0 ? \"\"\n                : (\" in previous \" + attemptFailuresValidityInterval\n                   + \" milliseconds\")),\n           (globalLimit \u003d\u003d maxAppAttempts) ? \"\"\n               : (\" (global limit \u003d\" + globalLimit\n                  + \"; local limit is \u003d\" + maxAppAttempts + \")\"),\n           failedEvent.getDiagnosticMsg());\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n    String msg \u003d null;\n    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n    if (this.submissionContext.getUnmanagedAM()) {\n      // RM does not manage the AM. Do not retry\n      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n              + \" failed due to \" + failedEvent.getDiagnosticMsg()\n              + \". Failing the application.\";\n    } else if (this.isNumAttemptsBeyondThreshold) {\n      int globalLimit \u003d conf.getInt(YarnConfiguration.GLOBAL_RM_AM_MAX_ATTEMPTS,\n          conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,\n              YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS));\n      msg \u003d String.format(\n        \"Application %s failed %d times%s%s due to %s. Failing the application.\",\n          getApplicationId(),\n          maxAppAttempts,\n          (attemptFailuresValidityInterval \u003c\u003d 0 ? \"\"\n               : (\" in previous \" + attemptFailuresValidityInterval\n                  + \" milliseconds\")),\n          (globalLimit \u003d\u003d maxAppAttempts) ? \"\"\n              : (\" (global limit \u003d\" + globalLimit\n                 + \"; local limit is \u003d\" + maxAppAttempts + \")\"),\n          failedEvent.getDiagnosticMsg());\n    }\n    return msg;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4000. RM crashes with NPE if leaf queue becomes parent queue during restart. Contributed by Varun Saxena\n",
      "commitDate": "15/10/15 5:12 PM",
      "commitName": "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/09/15 11:43 PM",
      "commitNameOld": "a9aafad12b1d2f67e55e09a6fa261d61789c9d7e",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 21.73,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n     String msg \u003d null;\n     RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n     if (this.submissionContext.getUnmanagedAM()) {\n       // RM does not manage the AM. Do not retry\n       msg \u003d \"Unmanaged application \" + this.getApplicationId()\n-              + \" failed due to \" + failedEvent.getDiagnostics()\n+              + \" failed due to \" + failedEvent.getDiagnosticMsg()\n               + \". Failing the application.\";\n     } else if (this.isNumAttemptsBeyondThreshold) {\n       int globalLimit \u003d conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,\n           YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);\n       msg \u003d String.format(\n         \"Application %s failed %d times%s%s due to %s. Failing the application.\",\n           getApplicationId(),\n           maxAppAttempts,\n           (attemptFailuresValidityInterval \u003c\u003d 0 ? \"\"\n                : (\" in previous \" + attemptFailuresValidityInterval\n                   + \" milliseconds\")),\n           (globalLimit \u003d\u003d maxAppAttempts) ? \"\"\n               : (\" (global limit \u003d\" + globalLimit\n                  + \"; local limit is \u003d\" + maxAppAttempts + \")\"),\n-          failedEvent.getDiagnostics());\n+          failedEvent.getDiagnosticMsg());\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n    String msg \u003d null;\n    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n    if (this.submissionContext.getUnmanagedAM()) {\n      // RM does not manage the AM. Do not retry\n      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n              + \" failed due to \" + failedEvent.getDiagnosticMsg()\n              + \". Failing the application.\";\n    } else if (this.isNumAttemptsBeyondThreshold) {\n      int globalLimit \u003d conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,\n          YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);\n      msg \u003d String.format(\n        \"Application %s failed %d times%s%s due to %s. Failing the application.\",\n          getApplicationId(),\n          maxAppAttempts,\n          (attemptFailuresValidityInterval \u003c\u003d 0 ? \"\"\n               : (\" in previous \" + attemptFailuresValidityInterval\n                  + \" milliseconds\")),\n          (globalLimit \u003d\u003d maxAppAttempts) ? \"\"\n              : (\" (global limit \u003d\" + globalLimit\n                 + \"; local limit is \u003d\" + maxAppAttempts + \")\"),\n          failedEvent.getDiagnosticMsg());\n    }\n    return msg;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "1970ca7cbcdb7efa160d0cedc2e3e22c1401fad6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2392. Add more diags about app retry limits on AM failures. Contributed by Steve Loughran\n",
      "commitDate": "04/06/15 11:14 AM",
      "commitName": "1970ca7cbcdb7efa160d0cedc2e3e22c1401fad6",
      "commitAuthor": "Jian He",
      "commitDateOld": "14/05/15 10:58 AM",
      "commitNameOld": "15ccd967ee3e7046a50522089f67ba01f36ec76a",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 21.01,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,25 @@\n   private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n     String msg \u003d null;\n     RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n     if (this.submissionContext.getUnmanagedAM()) {\n       // RM does not manage the AM. Do not retry\n       msg \u003d \"Unmanaged application \" + this.getApplicationId()\n               + \" failed due to \" + failedEvent.getDiagnostics()\n               + \". Failing the application.\";\n     } else if (this.isNumAttemptsBeyondThreshold) {\n-      msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n-              + this.maxAppAttempts + \" times due to \"\n-              + failedEvent.getDiagnostics() + \". Failing the application.\";\n+      int globalLimit \u003d conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,\n+          YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);\n+      msg \u003d String.format(\n+        \"Application %s failed %d times%s%s due to %s. Failing the application.\",\n+          getApplicationId(),\n+          maxAppAttempts,\n+          (attemptFailuresValidityInterval \u003c\u003d 0 ? \"\"\n+               : (\" in previous \" + attemptFailuresValidityInterval\n+                  + \" milliseconds\")),\n+          (globalLimit \u003d\u003d maxAppAttempts) ? \"\"\n+              : (\" (global limit \u003d\" + globalLimit\n+                 + \"; local limit is \u003d\" + maxAppAttempts + \")\"),\n+          failedEvent.getDiagnostics());\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n    String msg \u003d null;\n    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n    if (this.submissionContext.getUnmanagedAM()) {\n      // RM does not manage the AM. Do not retry\n      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n              + \" failed due to \" + failedEvent.getDiagnostics()\n              + \". Failing the application.\";\n    } else if (this.isNumAttemptsBeyondThreshold) {\n      int globalLimit \u003d conf.getInt(YarnConfiguration.RM_AM_MAX_ATTEMPTS,\n          YarnConfiguration.DEFAULT_RM_AM_MAX_ATTEMPTS);\n      msg \u003d String.format(\n        \"Application %s failed %d times%s%s due to %s. Failing the application.\",\n          getApplicationId(),\n          maxAppAttempts,\n          (attemptFailuresValidityInterval \u003c\u003d 0 ? \"\"\n               : (\" in previous \" + attemptFailuresValidityInterval\n                  + \" milliseconds\")),\n          (globalLimit \u003d\u003d maxAppAttempts) ? \"\"\n              : (\" (global limit \u003d\" + globalLimit\n                 + \"; local limit is \u003d\" + maxAppAttempts + \")\"),\n          failedEvent.getDiagnostics());\n    }\n    return msg;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867": {
      "type": "Ybodychange",
      "commitMessage": "YARN-611. Added an API to let apps specify an interval beyond which AM failures should be ignored towards counting max-attempts. Contributed by Xuan Gong.\n",
      "commitDate": "13/09/14 6:04 PM",
      "commitName": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/09/14 7:04 PM",
      "commitNameOld": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthorOld": "junping_du",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n     String msg \u003d null;\n     RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n     if (this.submissionContext.getUnmanagedAM()) {\n       // RM does not manage the AM. Do not retry\n       msg \u003d \"Unmanaged application \" + this.getApplicationId()\n               + \" failed due to \" + failedEvent.getDiagnostics()\n               + \". Failing the application.\";\n-    } else if (getNumFailedAppAttempts() \u003e\u003d this.maxAppAttempts) {\n+    } else if (this.isNumAttemptsBeyondThreshold) {\n       msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n               + this.maxAppAttempts + \" times due to \"\n               + failedEvent.getDiagnostics() + \". Failing the application.\";\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n    String msg \u003d null;\n    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n    if (this.submissionContext.getUnmanagedAM()) {\n      // RM does not manage the AM. Do not retry\n      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n              + \" failed due to \" + failedEvent.getDiagnostics()\n              + \". Failing the application.\";\n    } else if (this.isNumAttemptsBeyondThreshold) {\n      msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n              + this.maxAppAttempts + \" times due to \"\n              + failedEvent.getDiagnostics() + \". Failing the application.\";\n    }\n    return msg;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "b717d44b52a7ddc6586f9dd2b830422b984b5b0f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-614. Changed ResourceManager to not count disk failure, node loss and RM restart towards app failures. Contributed by Xuan Gong\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606407 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/14 4:37 PM",
      "commitName": "b717d44b52a7ddc6586f9dd2b830422b984b5b0f",
      "commitAuthor": "Jian He",
      "commitDateOld": "24/06/14 8:15 AM",
      "commitNameOld": "d16470025aa0c51a04c530863a96108895d72ddf",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.35,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n     String msg \u003d null;\n     RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n     if (this.submissionContext.getUnmanagedAM()) {\n       // RM does not manage the AM. Do not retry\n       msg \u003d \"Unmanaged application \" + this.getApplicationId()\n               + \" failed due to \" + failedEvent.getDiagnostics()\n               + \". Failing the application.\";\n-    } else if (getNumNonPreemptedAppAttempts() \u003e\u003d this.maxAppAttempts) {\n+    } else if (getNumFailedAppAttempts() \u003e\u003d this.maxAppAttempts) {\n       msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n               + this.maxAppAttempts + \" times due to \"\n               + failedEvent.getDiagnostics() + \". Failing the application.\";\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n    String msg \u003d null;\n    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n    if (this.submissionContext.getUnmanagedAM()) {\n      // RM does not manage the AM. Do not retry\n      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n              + \" failed due to \" + failedEvent.getDiagnostics()\n              + \". Failing the application.\";\n    } else if (getNumFailedAppAttempts() \u003e\u003d this.maxAppAttempts) {\n      msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n              + this.maxAppAttempts + \" times due to \"\n              + failedEvent.getDiagnostics() + \". Failing the application.\";\n    }\n    return msg;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "d16470025aa0c51a04c530863a96108895d72ddf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2074. Changed ResourceManager to not count AM preemptions towards app failures. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 8:15 AM",
      "commitName": "d16470025aa0c51a04c530863a96108895d72ddf",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/14 4:56 PM",
      "commitNameOld": "95897ca14b7abd7fe047fdcf150473a8a2cbb024",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 7.64,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n     String msg \u003d null;\n     RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n     if (this.submissionContext.getUnmanagedAM()) {\n       // RM does not manage the AM. Do not retry\n       msg \u003d \"Unmanaged application \" + this.getApplicationId()\n               + \" failed due to \" + failedEvent.getDiagnostics()\n               + \". Failing the application.\";\n-    } else if (this.attempts.size() \u003e\u003d this.maxAppAttempts) {\n+    } else if (getNumNonPreemptedAppAttempts() \u003e\u003d this.maxAppAttempts) {\n       msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n               + this.maxAppAttempts + \" times due to \"\n               + failedEvent.getDiagnostics() + \". Failing the application.\";\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n    String msg \u003d null;\n    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n    if (this.submissionContext.getUnmanagedAM()) {\n      // RM does not manage the AM. Do not retry\n      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n              + \" failed due to \" + failedEvent.getDiagnostics()\n              + \". Failing the application.\";\n    } else if (getNumNonPreemptedAppAttempts() \u003e\u003d this.maxAppAttempts) {\n      msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n              + this.maxAppAttempts + \" times due to \"\n              + failedEvent.getDiagnostics() + \". Failing the application.\";\n    }\n    return msg;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-891. Modified ResourceManager state-store to remember completed applications so that clients can get information about them post RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/13 10:25 AM",
      "commitName": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n+    String msg \u003d null;\n+    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n+    if (this.submissionContext.getUnmanagedAM()) {\n+      // RM does not manage the AM. Do not retry\n+      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n+              + \" failed due to \" + failedEvent.getDiagnostics()\n+              + \". Failing the application.\";\n+    } else if (this.attempts.size() \u003e\u003d this.maxAppAttempts) {\n+      msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n+              + this.maxAppAttempts + \" times due to \"\n+              + failedEvent.getDiagnostics() + \". Failing the application.\";\n+    }\n+    return msg;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAppAttemptFailedDiagnostics(RMAppEvent event) {\n    String msg \u003d null;\n    RMAppFailedAttemptEvent failedEvent \u003d (RMAppFailedAttemptEvent) event;\n    if (this.submissionContext.getUnmanagedAM()) {\n      // RM does not manage the AM. Do not retry\n      msg \u003d \"Unmanaged application \" + this.getApplicationId()\n              + \" failed due to \" + failedEvent.getDiagnostics()\n              + \". Failing the application.\";\n    } else if (this.attempts.size() \u003e\u003d this.maxAppAttempts) {\n      msg \u003d \"Application \" + this.getApplicationId() + \" failed \"\n              + this.maxAppAttempts + \" times due to \"\n              + failedEvent.getDiagnostics() + \". Failing the application.\";\n    }\n    return msg;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
    }
  }
}