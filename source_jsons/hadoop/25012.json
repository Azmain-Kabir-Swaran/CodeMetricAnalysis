{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MRWebAppUtil.java",
  "functionName": "getJHSWebappURLWithoutScheme",
  "functionId": "getJHSWebappURLWithoutScheme___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRWebAppUtil.java",
  "functionStartLine": 96,
  "functionEndLine": 104,
  "numCommitsSeen": 10,
  "timeTaken": 1681,
  "changeHistory": [
    "21181b65531449e5fda321c11f0672c3067641aa",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434"
  ],
  "changeHistoryShort": {
    "21181b65531449e5fda321c11f0672c3067641aa": "Ybodychange",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434": "Yintroduced"
  },
  "changeHistoryDetails": {
    "21181b65531449e5fda321c11f0672c3067641aa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1277. Added a policy based configuration for http/https in common HttpServer and using the same in YARN - related\nto per project https config support via HADOOP-10022. Contributed by Suresh Srinivas and Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529662 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/10/13 11:43 AM",
      "commitName": "21181b65531449e5fda321c11f0672c3067641aa",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/10/13 3:52 PM",
      "commitNameOld": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.83,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n-    if (isSSLEnabledInJHS) {\n+    if (httpPolicyInJHS \u003d\u003d Policy.HTTPS_ONLY) {\n       return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n           JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n     } else {\n       return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n           JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n    if (httpPolicyInJHS \u003d\u003d Policy.HTTPS_ONLY) {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n    } else {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRWebAppUtil.java",
      "extendedDetails": {}
    },
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
      "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 3:52 PM",
      "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/10/13 3:52 PM",
          "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "01/10/13 3:42 PM",
          "commitNameOld": "4b9fa6af9d962792eca171f6e67b96fa4cd27ca6",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,9 @@\n-  public static String getJHSWebAppURLWithoutScheme(Configuration conf) {\n-    if (HttpConfig.isSecure()) {\n-      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n+  public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n+    if (isSSLEnabledInJHS) {\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n+          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n     } else {\n-      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS);\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n+          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n    if (isSSLEnabledInJHS) {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n    } else {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRWebAppUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/WebAppUtil.java",
            "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRWebAppUtil.java",
            "oldMethodName": "getJHSWebAppURLWithoutScheme",
            "newMethodName": "getJHSWebappURLWithoutScheme"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/10/13 3:52 PM",
          "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "01/10/13 3:42 PM",
          "commitNameOld": "4b9fa6af9d962792eca171f6e67b96fa4cd27ca6",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,9 @@\n-  public static String getJHSWebAppURLWithoutScheme(Configuration conf) {\n-    if (HttpConfig.isSecure()) {\n-      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n+  public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n+    if (isSSLEnabledInJHS) {\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n+          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n     } else {\n-      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS);\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n+          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n    if (isSSLEnabledInJHS) {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n    } else {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRWebAppUtil.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/10/13 3:52 PM",
          "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "01/10/13 3:42 PM",
          "commitNameOld": "4b9fa6af9d962792eca171f6e67b96fa4cd27ca6",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,9 @@\n-  public static String getJHSWebAppURLWithoutScheme(Configuration conf) {\n-    if (HttpConfig.isSecure()) {\n-      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n+  public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n+    if (isSSLEnabledInJHS) {\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n+          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n     } else {\n-      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS);\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n+          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getJHSWebappURLWithoutScheme(Configuration conf) {\n    if (isSSLEnabledInJHS) {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n    } else {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS,\n          JHAdminConfig.DEFAULT_MR_HISTORY_WEBAPP_ADDRESS);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRWebAppUtil.java",
          "extendedDetails": {
            "oldValue": "getJHSWebAppURLWithoutScheme",
            "newValue": "getJHSWebappURLWithoutScheme"
          }
        }
      ]
    },
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1204. Added separate configuration properties for https for RM and NM without which servers enabled with https will also start on http ports. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5523. Added separate configuration properties for https for JHS without which even when https is enabled, it starts on http port itself. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1525947 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/09/13 10:20 AM",
      "commitName": "78e995a37d44cfcf511dcaf7e149a6fd47ba3434",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,7 @@\n+  public static String getJHSWebAppURLWithoutScheme(Configuration conf) {\n+    if (HttpConfig.isSecure()) {\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n+    } else {\n+      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getJHSWebAppURLWithoutScheme(Configuration conf) {\n    if (HttpConfig.isSecure()) {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_HTTPS_ADDRESS);\n    } else {\n      return conf.get(JHAdminConfig.MR_HISTORY_WEBAPP_ADDRESS);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/WebAppUtil.java"
    }
  }
}