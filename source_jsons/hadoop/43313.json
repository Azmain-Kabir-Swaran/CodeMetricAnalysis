{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TarballProviderService.java",
  "functionName": "processArtifact",
  "functionId": "processArtifact___launcher-AbstractLauncher__instance-ComponentInstance__fileSystem-SliderFileSystem__service-Service__compLaunchCtx-ContainerLaunchService.ComponentLaunchContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
  "functionStartLine": 36,
  "functionEndLine": 50,
  "numCommitsSeen": 13,
  "timeTaken": 5893,
  "changeHistory": [
    "31e0122f4d4ddc4026470b45d2bf683ece137d44",
    "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
    "a72cdcc47a1b3a4fcadbc9e12bd1bae2bbf04d83",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "8d335e59cf9fa794a379b12f06d2d54f1b781118",
    "a0574e7f4f5a6e53677ada4381db5504f263d70f",
    "9085cd5c6eb615253f0f4e8f4b58659ff4358d99"
  ],
  "changeHistoryShort": {
    "31e0122f4d4ddc4026470b45d2bf683ece137d44": "Ybodychange",
    "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7": "Ymultichange(Yparameterchange,Ybodychange)",
    "a72cdcc47a1b3a4fcadbc9e12bd1bae2bbf04d83": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Yparameterchange)",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "8d335e59cf9fa794a379b12f06d2d54f1b781118": "Ymultichange(Yparameterchange,Ybodychange)",
    "a0574e7f4f5a6e53677ada4381db5504f263d70f": "Ybodychange",
    "9085cd5c6eb615253f0f4e8f4b58659ff4358d99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31e0122f4d4ddc4026470b45d2bf683ece137d44": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9860. Enable service mode for Docker containers on YARN\n           Contributed by Prabhu Joseph and Shane Kumpf\n",
      "commitDate": "10/10/19 4:02 PM",
      "commitName": "31e0122f4d4ddc4026470b45d2bf683ece137d44",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "14/08/18 8:36 AM",
      "commitNameOld": "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 422.31,
      "commitsBetweenForRepo": 3320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public void processArtifact(AbstractLauncher launcher,\n       ComponentInstance instance, SliderFileSystem fileSystem,\n       Service service, ContainerLaunchService.ComponentLaunchContext\n       compLaunchCtx) throws IOException {\n     Path artifact \u003d new Path(compLaunchCtx.getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\n           \"Package doesn\u0027t exist as a resource: \" + artifact);\n     }\n     log.info(\"Adding resource {}\", artifact);\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n-    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n+    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type,\n+        LocalResourceVisibility.APPLICATION);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Service service, ContainerLaunchService.ComponentLaunchContext\n      compLaunchCtx) throws IOException {\n    Path artifact \u003d new Path(compLaunchCtx.getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact);\n    }\n    log.info(\"Adding resource {}\", artifact);\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type,\n        LocalResourceVisibility.APPLICATION);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
      "extendedDetails": {}
    },
    "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8160.  Support upgrade of service that use docker containers.\n            Contributed by Chandni Singh\n",
      "commitDate": "14/08/18 8:36 AM",
      "commitName": "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8160.  Support upgrade of service that use docker containers.\n            Contributed by Chandni Singh\n",
          "commitDate": "14/08/18 8:36 AM",
          "commitName": "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "23/01/18 10:53 AM",
          "commitNameOld": "a72cdcc47a1b3a4fcadbc9e12bd1bae2bbf04d83",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 202.86,
          "commitsBetweenForRepo": 2093,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public void processArtifact(AbstractLauncher launcher,\n       ComponentInstance instance, SliderFileSystem fileSystem,\n-      Service service)\n-      throws IOException {\n-    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n+      Service service, ContainerLaunchService.ComponentLaunchContext\n+      compLaunchCtx) throws IOException {\n+    Path artifact \u003d new Path(compLaunchCtx.getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\n           \"Package doesn\u0027t exist as a resource: \" + artifact);\n     }\n     log.info(\"Adding resource {}\", artifact);\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Service service, ContainerLaunchService.ComponentLaunchContext\n      compLaunchCtx) throws IOException {\n    Path artifact \u003d new Path(compLaunchCtx.getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact);\n    }\n    log.info(\"Adding resource {}\", artifact);\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
          "extendedDetails": {
            "oldValue": "[launcher-AbstractLauncher, instance-ComponentInstance, fileSystem-SliderFileSystem, service-Service]",
            "newValue": "[launcher-AbstractLauncher, instance-ComponentInstance, fileSystem-SliderFileSystem, service-Service, compLaunchCtx-ContainerLaunchService.ComponentLaunchContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8160.  Support upgrade of service that use docker containers.\n            Contributed by Chandni Singh\n",
          "commitDate": "14/08/18 8:36 AM",
          "commitName": "4cba0741d58e0aeacde5b6541c9ef40a9f0e40c7",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "23/01/18 10:53 AM",
          "commitNameOld": "a72cdcc47a1b3a4fcadbc9e12bd1bae2bbf04d83",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 202.86,
          "commitsBetweenForRepo": 2093,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public void processArtifact(AbstractLauncher launcher,\n       ComponentInstance instance, SliderFileSystem fileSystem,\n-      Service service)\n-      throws IOException {\n-    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n+      Service service, ContainerLaunchService.ComponentLaunchContext\n+      compLaunchCtx) throws IOException {\n+    Path artifact \u003d new Path(compLaunchCtx.getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\n           \"Package doesn\u0027t exist as a resource: \" + artifact);\n     }\n     log.info(\"Adding resource {}\", artifact);\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Service service, ContainerLaunchService.ComponentLaunchContext\n      compLaunchCtx) throws IOException {\n    Path artifact \u003d new Path(compLaunchCtx.getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact);\n    }\n    log.info(\"Adding resource {}\", artifact);\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
          "extendedDetails": {}
        }
      ]
    },
    "a72cdcc47a1b3a4fcadbc9e12bd1bae2bbf04d83": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7766. Introduce a new config property for YARN Service dependency tarball location. Contributed by Gour Saha\n",
      "commitDate": "23/01/18 10:53 AM",
      "commitName": "a72cdcc47a1b3a4fcadbc9e12bd1bae2bbf04d83",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 77.89,
      "commitsBetweenForRepo": 438,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void processArtifact(AbstractLauncher launcher,\n       ComponentInstance instance, SliderFileSystem fileSystem,\n       Service service)\n       throws IOException {\n     Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\n-          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n+          \"Package doesn\u0027t exist as a resource: \" + artifact);\n     }\n-    log.info(\"Adding resource {}\", artifact.toString());\n+    log.info(\"Adding resource {}\", artifact);\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Service service)\n      throws IOException {\n    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact);\n    }\n    log.info(\"Adding resource {}\", artifact);\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public void processArtifact(AbstractLauncher launcher,\n       ComponentInstance instance, SliderFileSystem fileSystem,\n-      Application application)\n+      Service service)\n       throws IOException {\n     Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\n           \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Service service)\n      throws IOException {\n    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public void processArtifact(AbstractLauncher launcher,\n       ComponentInstance instance, SliderFileSystem fileSystem,\n-      Application application)\n+      Service service)\n       throws IOException {\n     Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\n           \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Service service)\n      throws IOException {\n    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
          "extendedDetails": {
            "oldValue": "[launcher-AbstractLauncher, instance-ComponentInstance, fileSystem-SliderFileSystem, application-Application]",
            "newValue": "[launcher-AbstractLauncher, instance-ComponentInstance, fileSystem-SliderFileSystem, service-Service]"
          }
        }
      ]
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  public void processArtifact(ContainerLauncher launcher, Application\n-      application, RoleInstance roleInstance, SliderFileSystem fileSystem)\n+  public void processArtifact(AbstractLauncher launcher,\n+      ComponentInstance instance, SliderFileSystem fileSystem,\n+      Application application)\n       throws IOException {\n-    Path artifact \u003d new Path(roleInstance.providerRole.component\n-        .getArtifact().getId());\n+    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n-      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n-          artifact.toString());\n+      throw new IOException(\n+          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n-    LocalResource packageResource \u003d fileSystem.createAmResource(\n-        artifact, type);\n+    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Application application)\n      throws IOException {\n    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/tarball/TarballProviderService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  public void processArtifact(ContainerLauncher launcher, Application\n-      application, RoleInstance roleInstance, SliderFileSystem fileSystem)\n+  public void processArtifact(AbstractLauncher launcher,\n+      ComponentInstance instance, SliderFileSystem fileSystem,\n+      Application application)\n       throws IOException {\n-    Path artifact \u003d new Path(roleInstance.providerRole.component\n-        .getArtifact().getId());\n+    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n-      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n-          artifact.toString());\n+      throw new IOException(\n+          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n-    LocalResource packageResource \u003d fileSystem.createAmResource(\n-        artifact, type);\n+    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Application application)\n      throws IOException {\n    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  public void processArtifact(ContainerLauncher launcher, Application\n-      application, RoleInstance roleInstance, SliderFileSystem fileSystem)\n+  public void processArtifact(AbstractLauncher launcher,\n+      ComponentInstance instance, SliderFileSystem fileSystem,\n+      Application application)\n       throws IOException {\n-    Path artifact \u003d new Path(roleInstance.providerRole.component\n-        .getArtifact().getId());\n+    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n-      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n-          artifact.toString());\n+      throw new IOException(\n+          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n-    LocalResource packageResource \u003d fileSystem.createAmResource(\n-        artifact, type);\n+    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(AbstractLauncher launcher,\n      ComponentInstance instance, SliderFileSystem fileSystem,\n      Application application)\n      throws IOException {\n    Path artifact \u003d new Path(instance.getCompSpec().getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\n          \"Package doesn\u0027t exist as a resource: \" + artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/tarball/TarballProviderService.java",
          "extendedDetails": {
            "oldValue": "[launcher-ContainerLauncher, application-Application, roleInstance-RoleInstance, fileSystem-SliderFileSystem]",
            "newValue": "[launcher-AbstractLauncher, instance-ComponentInstance, fileSystem-SliderFileSystem, application-Application]"
          }
        }
      ]
    },
    "8d335e59cf9fa794a379b12f06d2d54f1b781118": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6804. [yarn-native-services changes] Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "8d335e59cf9fa794a379b12f06d2d54f1b781118",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6804. [yarn-native-services changes] Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "8d335e59cf9fa794a379b12f06d2d54f1b781118",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "a0574e7f4f5a6e53677ada4381db5504f263d70f",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n-  public void processArtifact(ContainerLauncher launcher, Component\n-      component, SliderFileSystem fileSystem) throws IOException {\n-    Path artifact \u003d  new Path(component.getArtifact().getId());\n+  public void processArtifact(ContainerLauncher launcher, Application\n+      application, RoleInstance roleInstance, SliderFileSystem fileSystem)\n+      throws IOException {\n+    Path artifact \u003d new Path(roleInstance.providerRole.component\n+        .getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n           artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(\n         artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(ContainerLauncher launcher, Application\n      application, RoleInstance roleInstance, SliderFileSystem fileSystem)\n      throws IOException {\n    Path artifact \u003d new Path(roleInstance.providerRole.component\n        .getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n          artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(\n        artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/tarball/TarballProviderService.java",
          "extendedDetails": {
            "oldValue": "[launcher-ContainerLauncher, component-Component, fileSystem-SliderFileSystem]",
            "newValue": "[launcher-ContainerLauncher, application-Application, roleInstance-RoleInstance, fileSystem-SliderFileSystem]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6804. [yarn-native-services changes] Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "8d335e59cf9fa794a379b12f06d2d54f1b781118",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "a0574e7f4f5a6e53677ada4381db5504f263d70f",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n-  public void processArtifact(ContainerLauncher launcher, Component\n-      component, SliderFileSystem fileSystem) throws IOException {\n-    Path artifact \u003d  new Path(component.getArtifact().getId());\n+  public void processArtifact(ContainerLauncher launcher, Application\n+      application, RoleInstance roleInstance, SliderFileSystem fileSystem)\n+      throws IOException {\n+    Path artifact \u003d new Path(roleInstance.providerRole.component\n+        .getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n           artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(\n         artifact, type);\n     launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void processArtifact(ContainerLauncher launcher, Application\n      application, RoleInstance roleInstance, SliderFileSystem fileSystem)\n      throws IOException {\n    Path artifact \u003d new Path(roleInstance.providerRole.component\n        .getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n          artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(\n        artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/tarball/TarballProviderService.java",
          "extendedDetails": {}
        }
      ]
    },
    "a0574e7f4f5a6e53677ada4381db5504f263d70f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6613. Update json validation for new native services providers. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a0574e7f4f5a6e53677ada4381db5504f263d70f",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "9085cd5c6eb615253f0f4e8f4b58659ff4358d99",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void processArtifact(ContainerLauncher launcher, Component\n       component, SliderFileSystem fileSystem) throws IOException {\n     Path artifact \u003d  new Path(component.getArtifact().getId());\n     if (!fileSystem.isFile(artifact)) {\n       throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n           artifact.toString());\n     }\n     log.info(\"Adding resource {}\", artifact.toString());\n     LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n     LocalResource packageResource \u003d fileSystem.createAmResource(\n         artifact, type);\n-    launcher.addLocalResource(APP_INSTALL_DIR, packageResource);\n+    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void processArtifact(ContainerLauncher launcher, Component\n      component, SliderFileSystem fileSystem) throws IOException {\n    Path artifact \u003d  new Path(component.getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n          artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(\n        artifact, type);\n    launcher.addLocalResource(APP_LIB_DIR, packageResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/tarball/TarballProviderService.java",
      "extendedDetails": {}
    },
    "9085cd5c6eb615253f0f4e8f4b58659ff4358d99": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6160. Create an agent-less docker-less provider in the native services framework. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "9085cd5c6eb615253f0f4e8f4b58659ff4358d99",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,13 @@\n+  public void processArtifact(ContainerLauncher launcher, Component\n+      component, SliderFileSystem fileSystem) throws IOException {\n+    Path artifact \u003d  new Path(component.getArtifact().getId());\n+    if (!fileSystem.isFile(artifact)) {\n+      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n+          artifact.toString());\n+    }\n+    log.info(\"Adding resource {}\", artifact.toString());\n+    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n+    LocalResource packageResource \u003d fileSystem.createAmResource(\n+        artifact, type);\n+    launcher.addLocalResource(APP_INSTALL_DIR, packageResource);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void processArtifact(ContainerLauncher launcher, Component\n      component, SliderFileSystem fileSystem) throws IOException {\n    Path artifact \u003d  new Path(component.getArtifact().getId());\n    if (!fileSystem.isFile(artifact)) {\n      throw new IOException(\"Package doesn\u0027t exist as a resource: \" +\n          artifact.toString());\n    }\n    log.info(\"Adding resource {}\", artifact.toString());\n    LocalResourceType type \u003d LocalResourceType.ARCHIVE;\n    LocalResource packageResource \u003d fileSystem.createAmResource(\n        artifact, type);\n    launcher.addLocalResource(APP_INSTALL_DIR, packageResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/tarball/TarballProviderService.java"
    }
  }
}