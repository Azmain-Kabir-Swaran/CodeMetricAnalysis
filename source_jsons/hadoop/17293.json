{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultipleDestinationMountTableResolver.java",
  "functionName": "getDestinationForPath",
  "functionId": "getDestinationForPath___path-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MultipleDestinationMountTableResolver.java",
  "functionStartLine": 86,
  "functionEndLine": 113,
  "numCommitsSeen": 4,
  "timeTaken": 1559,
  "changeHistory": [
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "e71bc00a471422ddb26dd54e706f09f0fe09925c"
  ],
  "changeHistoryShort": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "e71bc00a471422ddb26dd54e706f09f0fe09925c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public PathLocation getDestinationForPath(String path) throws IOException {\n    PathLocation mountTableResult \u003d super.getDestinationForPath(path);\n    if (mountTableResult \u003d\u003d null) {\n      LOG.error(\"The {} cannot find a location for {}\",\n          super.getClass().getSimpleName(), path);\n    } else if (mountTableResult.hasMultipleDestinations()) {\n      DestinationOrder order \u003d mountTableResult.getDestinationOrder();\n      OrderedResolver orderedResolver \u003d orderedResolvers.get(order);\n      if (orderedResolver \u003d\u003d null) {\n        LOG.error(\"Cannot find resolver for order {}\", order);\n      } else {\n        String firstNamespace \u003d\n            orderedResolver.getFirstNamespace(path, mountTableResult);\n\n        // Change the order of the name spaces according to the policy\n        if (firstNamespace !\u003d null) {\n          // This is the entity in the tree, we need to create our own copy\n          mountTableResult \u003d new PathLocation(mountTableResult, firstNamespace);\n          LOG.debug(\"Ordered locations following {} are {}\",\n              order, mountTableResult);\n        } else {\n          LOG.error(\"Cannot get main namespace for path {} with order {}\",\n              path, order);\n        }\n      }\n    }\n    return mountTableResult;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MultipleDestinationMountTableResolver.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MultipleDestinationMountTableResolver.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MultipleDestinationMountTableResolver.java"
      }
    },
    "e71bc00a471422ddb26dd54e706f09f0fe09925c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13224. RBF: Resolvers to support mount points across multiple subclusters. Contributed by Inigo Goiri.\n",
      "commitDate": "15/03/18 10:32 AM",
      "commitName": "e71bc00a471422ddb26dd54e706f09f0fe09925c",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,28 @@\n+  public PathLocation getDestinationForPath(String path) throws IOException {\n+    PathLocation mountTableResult \u003d super.getDestinationForPath(path);\n+    if (mountTableResult \u003d\u003d null) {\n+      LOG.error(\"The {} cannot find a location for {}\",\n+          super.getClass().getSimpleName(), path);\n+    } else if (mountTableResult.hasMultipleDestinations()) {\n+      DestinationOrder order \u003d mountTableResult.getDestinationOrder();\n+      OrderedResolver orderedResolver \u003d orderedResolvers.get(order);\n+      if (orderedResolver \u003d\u003d null) {\n+        LOG.error(\"Cannot find resolver for order {}\", order);\n+      } else {\n+        String firstNamespace \u003d\n+            orderedResolver.getFirstNamespace(path, mountTableResult);\n+\n+        // Change the order of the name spaces according to the policy\n+        if (firstNamespace !\u003d null) {\n+          // This is the entity in the tree, we need to create our own copy\n+          mountTableResult \u003d new PathLocation(mountTableResult, firstNamespace);\n+          LOG.debug(\"Ordered locations following {} are {}\",\n+              order, mountTableResult);\n+        } else {\n+          LOG.error(\"Cannot get main namespace for path {} with order {}\",\n+              path, order);\n+        }\n+      }\n+    }\n+    return mountTableResult;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public PathLocation getDestinationForPath(String path) throws IOException {\n    PathLocation mountTableResult \u003d super.getDestinationForPath(path);\n    if (mountTableResult \u003d\u003d null) {\n      LOG.error(\"The {} cannot find a location for {}\",\n          super.getClass().getSimpleName(), path);\n    } else if (mountTableResult.hasMultipleDestinations()) {\n      DestinationOrder order \u003d mountTableResult.getDestinationOrder();\n      OrderedResolver orderedResolver \u003d orderedResolvers.get(order);\n      if (orderedResolver \u003d\u003d null) {\n        LOG.error(\"Cannot find resolver for order {}\", order);\n      } else {\n        String firstNamespace \u003d\n            orderedResolver.getFirstNamespace(path, mountTableResult);\n\n        // Change the order of the name spaces according to the policy\n        if (firstNamespace !\u003d null) {\n          // This is the entity in the tree, we need to create our own copy\n          mountTableResult \u003d new PathLocation(mountTableResult, firstNamespace);\n          LOG.debug(\"Ordered locations following {} are {}\",\n              order, mountTableResult);\n        } else {\n          LOG.error(\"Cannot get main namespace for path {} with order {}\",\n              path, order);\n        }\n      }\n    }\n    return mountTableResult;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MultipleDestinationMountTableResolver.java"
    }
  }
}