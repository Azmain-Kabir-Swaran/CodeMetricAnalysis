{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationService.java",
  "functionName": "handleDestroyApplicationResources",
  "functionId": "handleDestroyApplicationResources___application-Application",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
  "functionStartLine": 626,
  "functionEndLine": 673,
  "numCommitsSeen": 106,
  "timeTaken": 3283,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
    "66598697a6e777615334ebde5ba7738135da83ae",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
    "11b9dd4e844c762f8c53e5fafa25f29eece1bc87"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": "Ybodychange",
    "66598697a6e777615334ebde5ba7738135da83ae": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Ybodychange",
    "11b9dd4e844c762f8c53e5fafa25f29eece1bc87": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "10/02/16 10:36 PM",
      "commitNameOld": "fa00d3e20560bee412b49e5792595749a247a8ab",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 124.65,
      "commitsBetweenForRepo": 784,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   private void handleDestroyApplicationResources(Application application) {\n     String userName \u003d application.getUser();\n     ApplicationId appId \u003d application.getAppId();\n     String appIDStr \u003d application.toString();\n     LocalResourcesTracker appLocalRsrcsTracker \u003d\n-      appRsrc.remove(ConverterUtils.toString(appId));\n+      appRsrc.remove(appId.toString());\n     if (appLocalRsrcsTracker !\u003d null) {\n       for (LocalizedResource rsrc : appLocalRsrcsTracker ) {\n         Path localPath \u003d rsrc.getLocalPath();\n         if (localPath !\u003d null) {\n           try {\n             stateStore.removeLocalizedResource(userName, appId, localPath);\n           } catch (IOException e) {\n             LOG.error(\"Unable to remove resource \" + rsrc + \" for \" + appIDStr\n                 + \" from state store\", e);\n           }\n         }\n       }\n     } else {\n       LOG.warn(\"Removing uninitialized application \" + application);\n     }\n \n     // Delete the application directories\n     userName \u003d application.getUser();\n     appIDStr \u003d application.toString();\n \n     for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n \n       // Delete the user-owned app-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       submitDirForDeletion(userName, appDir);\n \n       // Delete the nmPrivate app-dir\n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       submitDirForDeletion(null, appSysDir);\n     }\n \n     // TODO: decrement reference counts of all resources associated with this\n     // app\n \n     dispatcher.getEventHandler().handle(new ApplicationEvent(\n           application.getAppId(),\n           ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleDestroyApplicationResources(Application application) {\n    String userName \u003d application.getUser();\n    ApplicationId appId \u003d application.getAppId();\n    String appIDStr \u003d application.toString();\n    LocalResourcesTracker appLocalRsrcsTracker \u003d\n      appRsrc.remove(appId.toString());\n    if (appLocalRsrcsTracker !\u003d null) {\n      for (LocalizedResource rsrc : appLocalRsrcsTracker ) {\n        Path localPath \u003d rsrc.getLocalPath();\n        if (localPath !\u003d null) {\n          try {\n            stateStore.removeLocalizedResource(userName, appId, localPath);\n          } catch (IOException e) {\n            LOG.error(\"Unable to remove resource \" + rsrc + \" for \" + appIDStr\n                + \" from state store\", e);\n          }\n        }\n      }\n    } else {\n      LOG.warn(\"Removing uninitialized application \" + application);\n    }\n\n    // Delete the application directories\n    userName \u003d application.getUser();\n    appIDStr \u003d application.toString();\n\n    for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n\n      // Delete the user-owned app-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      submitDirForDeletion(userName, appDir);\n\n      // Delete the nmPrivate app-dir\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      submitDirForDeletion(null, appSysDir);\n    }\n\n    // TODO: decrement reference counts of all resources associated with this\n    // app\n\n    dispatcher.getEventHandler().handle(new ApplicationEvent(\n          application.getAppId(),\n          ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": {
      "type": "Ybodychange",
      "commitMessage": "YARN-90. NodeManager should identify failed disks becoming good again. Contributed by Varun Vasudev\n",
      "commitDate": "21/10/14 10:31 AM",
      "commitName": "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "13/10/14 11:31 AM",
      "commitNameOld": "a56ea0100215ecf2e1471a18812b668658197239",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 7.96,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,48 @@\n   private void handleDestroyApplicationResources(Application application) {\n     String userName \u003d application.getUser();\n     ApplicationId appId \u003d application.getAppId();\n     String appIDStr \u003d application.toString();\n     LocalResourcesTracker appLocalRsrcsTracker \u003d\n       appRsrc.remove(ConverterUtils.toString(appId));\n     if (appLocalRsrcsTracker !\u003d null) {\n       for (LocalizedResource rsrc : appLocalRsrcsTracker ) {\n         Path localPath \u003d rsrc.getLocalPath();\n         if (localPath !\u003d null) {\n           try {\n             stateStore.removeLocalizedResource(userName, appId, localPath);\n           } catch (IOException e) {\n             LOG.error(\"Unable to remove resource \" + rsrc + \" for \" + appIDStr\n                 + \" from state store\", e);\n           }\n         }\n       }\n     } else {\n       LOG.warn(\"Removing uninitialized application \" + application);\n     }\n \n     // Delete the application directories\n-    for (String localDir : dirsHandler.getLocalDirs()) {\n+    userName \u003d application.getUser();\n+    appIDStr \u003d application.toString();\n+\n+    for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n \n       // Delete the user-owned app-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n-      delService.delete(userName, appDir, new Path[] {});\n+      submitDirForDeletion(userName, appDir);\n \n       // Delete the nmPrivate app-dir\n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n-      delService.delete(null, appSysDir, new Path[] {});\n+      submitDirForDeletion(null, appSysDir);\n     }\n \n     // TODO: decrement reference counts of all resources associated with this\n     // app\n \n     dispatcher.getEventHandler().handle(new ApplicationEvent(\n           application.getAppId(),\n           ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleDestroyApplicationResources(Application application) {\n    String userName \u003d application.getUser();\n    ApplicationId appId \u003d application.getAppId();\n    String appIDStr \u003d application.toString();\n    LocalResourcesTracker appLocalRsrcsTracker \u003d\n      appRsrc.remove(ConverterUtils.toString(appId));\n    if (appLocalRsrcsTracker !\u003d null) {\n      for (LocalizedResource rsrc : appLocalRsrcsTracker ) {\n        Path localPath \u003d rsrc.getLocalPath();\n        if (localPath !\u003d null) {\n          try {\n            stateStore.removeLocalizedResource(userName, appId, localPath);\n          } catch (IOException e) {\n            LOG.error(\"Unable to remove resource \" + rsrc + \" for \" + appIDStr\n                + \" from state store\", e);\n          }\n        }\n      }\n    } else {\n      LOG.warn(\"Removing uninitialized application \" + application);\n    }\n\n    // Delete the application directories\n    userName \u003d application.getUser();\n    appIDStr \u003d application.toString();\n\n    for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n\n      // Delete the user-owned app-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      submitDirForDeletion(userName, appDir);\n\n      // Delete the nmPrivate app-dir\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      submitDirForDeletion(null, appSysDir);\n    }\n\n    // TODO: decrement reference counts of all resources associated with this\n    // app\n\n    dispatcher.getEventHandler().handle(new ApplicationEvent(\n          application.getAppId(),\n          ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "commitDateOld": "13/03/14 5:30 PM",
      "commitNameOld": "53790d33000cb5804779a56ac3891d0e0e5a904d",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 77.63,
      "commitsBetweenForRepo": 478,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,45 @@\n   private void handleDestroyApplicationResources(Application application) {\n-    String userName;\n-    String appIDStr;\n+    String userName \u003d application.getUser();\n+    ApplicationId appId \u003d application.getAppId();\n+    String appIDStr \u003d application.toString();\n     LocalResourcesTracker appLocalRsrcsTracker \u003d\n-      appRsrc.remove(ConverterUtils.toString(application.getAppId()));\n-    if (null \u003d\u003d appLocalRsrcsTracker) {\n+      appRsrc.remove(ConverterUtils.toString(appId));\n+    if (appLocalRsrcsTracker !\u003d null) {\n+      for (LocalizedResource rsrc : appLocalRsrcsTracker ) {\n+        Path localPath \u003d rsrc.getLocalPath();\n+        if (localPath !\u003d null) {\n+          try {\n+            stateStore.removeLocalizedResource(userName, appId, localPath);\n+          } catch (IOException e) {\n+            LOG.error(\"Unable to remove resource \" + rsrc + \" for \" + appIDStr\n+                + \" from state store\", e);\n+          }\n+        }\n+      }\n+    } else {\n       LOG.warn(\"Removing uninitialized application \" + application);\n     }\n-    // TODO: What to do with appLocalRsrcsTracker?\n \n     // Delete the application directories\n-    userName \u003d application.getUser();\n-    appIDStr \u003d application.toString();\n     for (String localDir : dirsHandler.getLocalDirs()) {\n \n       // Delete the user-owned app-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       delService.delete(userName, appDir, new Path[] {});\n \n       // Delete the nmPrivate app-dir\n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       delService.delete(null, appSysDir, new Path[] {});\n     }\n \n     // TODO: decrement reference counts of all resources associated with this\n     // app\n \n     dispatcher.getEventHandler().handle(new ApplicationEvent(\n           application.getAppId(),\n           ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleDestroyApplicationResources(Application application) {\n    String userName \u003d application.getUser();\n    ApplicationId appId \u003d application.getAppId();\n    String appIDStr \u003d application.toString();\n    LocalResourcesTracker appLocalRsrcsTracker \u003d\n      appRsrc.remove(ConverterUtils.toString(appId));\n    if (appLocalRsrcsTracker !\u003d null) {\n      for (LocalizedResource rsrc : appLocalRsrcsTracker ) {\n        Path localPath \u003d rsrc.getLocalPath();\n        if (localPath !\u003d null) {\n          try {\n            stateStore.removeLocalizedResource(userName, appId, localPath);\n          } catch (IOException e) {\n            LOG.error(\"Unable to remove resource \" + rsrc + \" for \" + appIDStr\n                + \" from state store\", e);\n          }\n        }\n      }\n    } else {\n      LOG.warn(\"Removing uninitialized application \" + application);\n    }\n\n    // Delete the application directories\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned app-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      delService.delete(userName, appDir, new Path[] {});\n\n      // Delete the nmPrivate app-dir\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      delService.delete(null, appSysDir, new Path[] {});\n    }\n\n    // TODO: decrement reference counts of all resources associated with this\n    // app\n\n    dispatcher.getEventHandler().handle(new ApplicationEvent(\n          application.getAppId(),\n          ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void handleDestroyApplicationResources(Application application) {\n    String userName;\n    String appIDStr;\n    LocalResourcesTracker appLocalRsrcsTracker \u003d\n      appRsrc.remove(ConverterUtils.toString(application.getAppId()));\n    if (null \u003d\u003d appLocalRsrcsTracker) {\n      LOG.warn(\"Removing uninitialized application \" + application);\n    }\n    // TODO: What to do with appLocalRsrcsTracker?\n\n    // Delete the application directories\n    userName \u003d application.getUser();\n    appIDStr \u003d application.toString();\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned app-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      delService.delete(userName, appDir, new Path[] {});\n\n      // Delete the nmPrivate app-dir\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      delService.delete(null, appSysDir, new Path[] {});\n    }\n\n    // TODO: decrement reference counts of all resources associated with this\n    // app\n\n    dispatcher.getEventHandler().handle(new ApplicationEvent(\n          application.getAppId(),\n          ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "31/10/11 8:16 PM",
      "commitNameOld": "cfb6a9883d2bf02c99f258e9f19ffcd83805d077",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 28.83,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   private void handleDestroyApplicationResources(Application application) {\n     String userName;\n     String appIDStr;\n     LocalResourcesTracker appLocalRsrcsTracker \u003d\n       appRsrc.remove(ConverterUtils.toString(application.getAppId()));\n     if (null \u003d\u003d appLocalRsrcsTracker) {\n       LOG.warn(\"Removing uninitialized application \" + application);\n     }\n     // TODO: What to do with appLocalRsrcsTracker?\n \n     // Delete the application directories\n     userName \u003d application.getUser();\n     appIDStr \u003d application.toString();\n-    for (Path localDir : localDirs) {\n+    for (String localDir : dirsHandler.getLocalDirs()) {\n \n       // Delete the user-owned app-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       delService.delete(userName, appDir, new Path[] {});\n \n       // Delete the nmPrivate app-dir\n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       delService.delete(null, appSysDir, new Path[] {});\n     }\n \n     // TODO: decrement reference counts of all resources associated with this\n     // app\n \n     dispatcher.getEventHandler().handle(new ApplicationEvent(\n           application.getAppId(),\n           ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleDestroyApplicationResources(Application application) {\n    String userName;\n    String appIDStr;\n    LocalResourcesTracker appLocalRsrcsTracker \u003d\n      appRsrc.remove(ConverterUtils.toString(application.getAppId()));\n    if (null \u003d\u003d appLocalRsrcsTracker) {\n      LOG.warn(\"Removing uninitialized application \" + application);\n    }\n    // TODO: What to do with appLocalRsrcsTracker?\n\n    // Delete the application directories\n    userName \u003d application.getUser();\n    appIDStr \u003d application.toString();\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned app-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      delService.delete(userName, appDir, new Path[] {});\n\n      // Delete the nmPrivate app-dir\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      delService.delete(null, appSysDir, new Path[] {});\n    }\n\n    // TODO: decrement reference counts of all resources associated with this\n    // app\n\n    dispatcher.getEventHandler().handle(new ApplicationEvent(\n          application.getAppId(),\n          ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "11b9dd4e844c762f8c53e5fafa25f29eece1bc87": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3161. Improved some javadocs and fixed some typos in YARN. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1181622 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11 9:45 PM",
      "commitName": "11b9dd4e844c762f8c53e5fafa25f29eece1bc87",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,35 @@\n+  private void handleDestroyApplicationResources(Application application) {\n+    String userName;\n+    String appIDStr;\n+    LocalResourcesTracker appLocalRsrcsTracker \u003d\n+      appRsrc.remove(ConverterUtils.toString(application.getAppId()));\n+    if (null \u003d\u003d appLocalRsrcsTracker) {\n+      LOG.warn(\"Removing uninitialized application \" + application);\n+    }\n+    // TODO: What to do with appLocalRsrcsTracker?\n+\n+    // Delete the application directories\n+    userName \u003d application.getUser();\n+    appIDStr \u003d application.toString();\n+    for (Path localDir : localDirs) {\n+\n+      // Delete the user-owned app-dir\n+      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n+      Path userdir \u003d new Path(usersdir, userName);\n+      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n+      Path appDir \u003d new Path(allAppsdir, appIDStr);\n+      delService.delete(userName, appDir, new Path[] {});\n+\n+      // Delete the nmPrivate app-dir\n+      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n+      Path appSysDir \u003d new Path(sysDir, appIDStr);\n+      delService.delete(null, appSysDir, new Path[] {});\n+    }\n+\n+    // TODO: decrement reference counts of all resources associated with this\n+    // app\n+\n+    dispatcher.getEventHandler().handle(new ApplicationEvent(\n+          application.getAppId(),\n+          ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleDestroyApplicationResources(Application application) {\n    String userName;\n    String appIDStr;\n    LocalResourcesTracker appLocalRsrcsTracker \u003d\n      appRsrc.remove(ConverterUtils.toString(application.getAppId()));\n    if (null \u003d\u003d appLocalRsrcsTracker) {\n      LOG.warn(\"Removing uninitialized application \" + application);\n    }\n    // TODO: What to do with appLocalRsrcsTracker?\n\n    // Delete the application directories\n    userName \u003d application.getUser();\n    appIDStr \u003d application.toString();\n    for (Path localDir : localDirs) {\n\n      // Delete the user-owned app-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      delService.delete(userName, appDir, new Path[] {});\n\n      // Delete the nmPrivate app-dir\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      delService.delete(null, appSysDir, new Path[] {});\n    }\n\n    // TODO: decrement reference counts of all resources associated with this\n    // app\n\n    dispatcher.getEventHandler().handle(new ApplicationEvent(\n          application.getAppId(),\n          ApplicationEventType.APPLICATION_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
    }
  }
}