{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Storage.java",
  "functionName": "isLockSupported",
  "functionId": "isLockSupported",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java",
  "functionStartLine": 979,
  "functionEndLine": 1003,
  "numCommitsSeen": 59,
  "timeTaken": 5445,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ymultichange(Yparameterchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean isLockSupported() throws IOException {\n      FileLock firstLock \u003d null;\n      FileLock secondLock \u003d null;\n      try {\n        firstLock \u003d lock;\n        if(firstLock \u003d\u003d null) {\n          firstLock \u003d tryLock();\n          if(firstLock \u003d\u003d null)\n            return true;\n        }\n        secondLock \u003d tryLock();\n        if(secondLock \u003d\u003d null)\n          return true;\n      } finally {\n        if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d lock) {\n          firstLock.release();\n          firstLock.channel().close();\n        }\n        if(secondLock !\u003d null) {\n          secondLock.release();\n          secondLock.channel().close();\n        }\n      }\n      return false;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean isLockSupported() throws IOException {\n      FileLock firstLock \u003d null;\n      FileLock secondLock \u003d null;\n      try {\n        firstLock \u003d lock;\n        if(firstLock \u003d\u003d null) {\n          firstLock \u003d tryLock();\n          if(firstLock \u003d\u003d null)\n            return true;\n        }\n        secondLock \u003d tryLock();\n        if(secondLock \u003d\u003d null)\n          return true;\n      } finally {\n        if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d lock) {\n          firstLock.release();\n          firstLock.channel().close();\n        }\n        if(secondLock !\u003d null) {\n          secondLock.release();\n          secondLock.channel().close();\n        }\n      }\n      return false;\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/common/Storage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,25 @@\n-  public boolean isLockSupported(int idx) throws IOException {\n-    StorageDirectory sd \u003d storageDirs.get(idx);\n-    FileLock firstLock \u003d null;\n-    FileLock secondLock \u003d null;\n-    try {\n-      firstLock \u003d sd.lock;\n-      if(firstLock \u003d\u003d null) {\n-        firstLock \u003d sd.tryLock();\n-        if(firstLock \u003d\u003d null)\n+    public boolean isLockSupported() throws IOException {\n+      FileLock firstLock \u003d null;\n+      FileLock secondLock \u003d null;\n+      try {\n+        firstLock \u003d lock;\n+        if(firstLock \u003d\u003d null) {\n+          firstLock \u003d tryLock();\n+          if(firstLock \u003d\u003d null)\n+            return true;\n+        }\n+        secondLock \u003d tryLock();\n+        if(secondLock \u003d\u003d null)\n           return true;\n+      } finally {\n+        if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d lock) {\n+          firstLock.release();\n+          firstLock.channel().close();\n+        }\n+        if(secondLock !\u003d null) {\n+          secondLock.release();\n+          secondLock.channel().close();\n+        }\n       }\n-      secondLock \u003d sd.tryLock();\n-      if(secondLock \u003d\u003d null)\n-        return true;\n-    } finally {\n-      if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d sd.lock) {\n-        firstLock.release();\n-        firstLock.channel().close();\n-      }\n-      if(secondLock !\u003d null) {\n-        secondLock.release();\n-        secondLock.channel().close();\n-      }\n-    }\n-    return false;\n-  }\n\\ No newline at end of file\n+      return false;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean isLockSupported() throws IOException {\n      FileLock firstLock \u003d null;\n      FileLock secondLock \u003d null;\n      try {\n        firstLock \u003d lock;\n        if(firstLock \u003d\u003d null) {\n          firstLock \u003d tryLock();\n          if(firstLock \u003d\u003d null)\n            return true;\n        }\n        secondLock \u003d tryLock();\n        if(secondLock \u003d\u003d null)\n          return true;\n      } finally {\n        if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d lock) {\n          firstLock.release();\n          firstLock.channel().close();\n        }\n        if(secondLock !\u003d null) {\n          secondLock.release();\n          secondLock.channel().close();\n        }\n      }\n      return false;\n    }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/common/Storage.java",
          "extendedDetails": {
            "oldValue": "[idx-int]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,25 @@\n-  public boolean isLockSupported(int idx) throws IOException {\n-    StorageDirectory sd \u003d storageDirs.get(idx);\n-    FileLock firstLock \u003d null;\n-    FileLock secondLock \u003d null;\n-    try {\n-      firstLock \u003d sd.lock;\n-      if(firstLock \u003d\u003d null) {\n-        firstLock \u003d sd.tryLock();\n-        if(firstLock \u003d\u003d null)\n+    public boolean isLockSupported() throws IOException {\n+      FileLock firstLock \u003d null;\n+      FileLock secondLock \u003d null;\n+      try {\n+        firstLock \u003d lock;\n+        if(firstLock \u003d\u003d null) {\n+          firstLock \u003d tryLock();\n+          if(firstLock \u003d\u003d null)\n+            return true;\n+        }\n+        secondLock \u003d tryLock();\n+        if(secondLock \u003d\u003d null)\n           return true;\n+      } finally {\n+        if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d lock) {\n+          firstLock.release();\n+          firstLock.channel().close();\n+        }\n+        if(secondLock !\u003d null) {\n+          secondLock.release();\n+          secondLock.channel().close();\n+        }\n       }\n-      secondLock \u003d sd.tryLock();\n-      if(secondLock \u003d\u003d null)\n-        return true;\n-    } finally {\n-      if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d sd.lock) {\n-        firstLock.release();\n-        firstLock.channel().close();\n-      }\n-      if(secondLock !\u003d null) {\n-        secondLock.release();\n-        secondLock.channel().close();\n-      }\n-    }\n-    return false;\n-  }\n\\ No newline at end of file\n+      return false;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean isLockSupported() throws IOException {\n      FileLock firstLock \u003d null;\n      FileLock secondLock \u003d null;\n      try {\n        firstLock \u003d lock;\n        if(firstLock \u003d\u003d null) {\n          firstLock \u003d tryLock();\n          if(firstLock \u003d\u003d null)\n            return true;\n        }\n        secondLock \u003d tryLock();\n        if(secondLock \u003d\u003d null)\n          return true;\n      } finally {\n        if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d lock) {\n          firstLock.release();\n          firstLock.channel().close();\n        }\n        if(secondLock !\u003d null) {\n          secondLock.release();\n          secondLock.channel().close();\n        }\n      }\n      return false;\n    }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/common/Storage.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,26 @@\n+  public boolean isLockSupported(int idx) throws IOException {\n+    StorageDirectory sd \u003d storageDirs.get(idx);\n+    FileLock firstLock \u003d null;\n+    FileLock secondLock \u003d null;\n+    try {\n+      firstLock \u003d sd.lock;\n+      if(firstLock \u003d\u003d null) {\n+        firstLock \u003d sd.tryLock();\n+        if(firstLock \u003d\u003d null)\n+          return true;\n+      }\n+      secondLock \u003d sd.tryLock();\n+      if(secondLock \u003d\u003d null)\n+        return true;\n+    } finally {\n+      if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d sd.lock) {\n+        firstLock.release();\n+        firstLock.channel().close();\n+      }\n+      if(secondLock !\u003d null) {\n+        secondLock.release();\n+        secondLock.channel().close();\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isLockSupported(int idx) throws IOException {\n    StorageDirectory sd \u003d storageDirs.get(idx);\n    FileLock firstLock \u003d null;\n    FileLock secondLock \u003d null;\n    try {\n      firstLock \u003d sd.lock;\n      if(firstLock \u003d\u003d null) {\n        firstLock \u003d sd.tryLock();\n        if(firstLock \u003d\u003d null)\n          return true;\n      }\n      secondLock \u003d sd.tryLock();\n      if(secondLock \u003d\u003d null)\n        return true;\n    } finally {\n      if(firstLock !\u003d null \u0026\u0026 firstLock !\u003d sd.lock) {\n        firstLock.release();\n        firstLock.channel().close();\n      }\n      if(secondLock !\u003d null) {\n        secondLock.release();\n        secondLock.channel().close();\n      }\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/common/Storage.java"
    }
  }
}