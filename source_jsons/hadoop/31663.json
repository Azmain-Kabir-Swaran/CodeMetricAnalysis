{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Separator.java",
  "functionName": "join",
  "functionId": "join___components-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
  "functionStartLine": 287,
  "functionEndLine": 313,
  "numCommitsSeen": 11,
  "timeTaken": 2827,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "92d90c3a243134177f192d1d473dd606c79a91fc",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "92d90c3a243134177f192d1d473dd606c79a91fc": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public byte[] join(byte[]... components) {\n    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n      return EMPTY_BYTES;\n    }\n\n    int finalSize \u003d 0;\n    finalSize \u003d this.value.length() * (components.length - 1);\n    for (byte[] comp : components) {\n      if (comp !\u003d null) {\n        finalSize +\u003d comp.length;\n      }\n    }\n\n    byte[] buf \u003d new byte[finalSize];\n    int offset \u003d 0;\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      if (components[i] !\u003d null) {\n        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n        offset +\u003d components[i].length;\n      }\n      if (i \u003c (components.length - 1)) {\n        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n        offset +\u003d this.value.length();\n      }\n    }\n    return buf;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public byte[] join(byte[]... components) {\n    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n      return EMPTY_BYTES;\n    }\n\n    int finalSize \u003d 0;\n    finalSize \u003d this.value.length() * (components.length - 1);\n    for (byte[] comp : components) {\n      if (comp !\u003d null) {\n        finalSize +\u003d comp.length;\n      }\n    }\n\n    byte[] buf \u003d new byte[finalSize];\n    int offset \u003d 0;\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      if (components[i] !\u003d null) {\n        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n        offset +\u003d components[i].length;\n      }\n      if (i \u003c (components.length - 1)) {\n        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n        offset +\u003d this.value.length();\n      }\n    }\n    return buf;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java"
      }
    },
    "92d90c3a243134177f192d1d473dd606c79a91fc": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n-  public static byte[] join(byte[] separator, byte[]... components) {\n+  public byte[] join(byte[]... components) {\n     if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n       return EMPTY_BYTES;\n     }\n \n     int finalSize \u003d 0;\n-    if (separator !\u003d null) {\n-      finalSize \u003d separator.length * (components.length - 1);\n-    }\n+    finalSize \u003d this.value.length() * (components.length - 1);\n     for (byte[] comp : components) {\n       if (comp !\u003d null) {\n         finalSize +\u003d comp.length;\n       }\n     }\n \n     byte[] buf \u003d new byte[finalSize];\n     int offset \u003d 0;\n     for (int i \u003d 0; i \u003c components.length; i++) {\n       if (components[i] !\u003d null) {\n         System.arraycopy(components[i], 0, buf, offset, components[i].length);\n         offset +\u003d components[i].length;\n-        if (i \u003c (components.length - 1) \u0026\u0026 separator !\u003d null\n-            \u0026\u0026 separator.length \u003e 0) {\n-          System.arraycopy(separator, 0, buf, offset, separator.length);\n-          offset +\u003d separator.length;\n-        }\n       }\n+      if (i \u003c (components.length - 1)) {\n+        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n+        offset +\u003d this.value.length();\n+      }\n+\n     }\n     return buf;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] join(byte[]... components) {\n    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n      return EMPTY_BYTES;\n    }\n\n    int finalSize \u003d 0;\n    finalSize \u003d this.value.length() * (components.length - 1);\n    for (byte[] comp : components) {\n      if (comp !\u003d null) {\n        finalSize +\u003d comp.length;\n      }\n    }\n\n    byte[] buf \u003d new byte[finalSize];\n    int offset \u003d 0;\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      if (components[i] !\u003d null) {\n        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n        offset +\u003d components[i].length;\n      }\n      if (i \u003c (components.length - 1)) {\n        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n        offset +\u003d this.value.length();\n      }\n\n    }\n    return buf;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineWriterUtils.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
            "oldMethodName": "join",
            "newMethodName": "join"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n-  public static byte[] join(byte[] separator, byte[]... components) {\n+  public byte[] join(byte[]... components) {\n     if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n       return EMPTY_BYTES;\n     }\n \n     int finalSize \u003d 0;\n-    if (separator !\u003d null) {\n-      finalSize \u003d separator.length * (components.length - 1);\n-    }\n+    finalSize \u003d this.value.length() * (components.length - 1);\n     for (byte[] comp : components) {\n       if (comp !\u003d null) {\n         finalSize +\u003d comp.length;\n       }\n     }\n \n     byte[] buf \u003d new byte[finalSize];\n     int offset \u003d 0;\n     for (int i \u003d 0; i \u003c components.length; i++) {\n       if (components[i] !\u003d null) {\n         System.arraycopy(components[i], 0, buf, offset, components[i].length);\n         offset +\u003d components[i].length;\n-        if (i \u003c (components.length - 1) \u0026\u0026 separator !\u003d null\n-            \u0026\u0026 separator.length \u003e 0) {\n-          System.arraycopy(separator, 0, buf, offset, separator.length);\n-          offset +\u003d separator.length;\n-        }\n       }\n+      if (i \u003c (components.length - 1)) {\n+        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n+        offset +\u003d this.value.length();\n+      }\n+\n     }\n     return buf;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] join(byte[]... components) {\n    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n      return EMPTY_BYTES;\n    }\n\n    int finalSize \u003d 0;\n    finalSize \u003d this.value.length() * (components.length - 1);\n    for (byte[] comp : components) {\n      if (comp !\u003d null) {\n        finalSize +\u003d comp.length;\n      }\n    }\n\n    byte[] buf \u003d new byte[finalSize];\n    int offset \u003d 0;\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      if (components[i] !\u003d null) {\n        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n        offset +\u003d components[i].length;\n      }\n      if (i \u003c (components.length - 1)) {\n        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n        offset +\u003d this.value.length();\n      }\n\n    }\n    return buf;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n-  public static byte[] join(byte[] separator, byte[]... components) {\n+  public byte[] join(byte[]... components) {\n     if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n       return EMPTY_BYTES;\n     }\n \n     int finalSize \u003d 0;\n-    if (separator !\u003d null) {\n-      finalSize \u003d separator.length * (components.length - 1);\n-    }\n+    finalSize \u003d this.value.length() * (components.length - 1);\n     for (byte[] comp : components) {\n       if (comp !\u003d null) {\n         finalSize +\u003d comp.length;\n       }\n     }\n \n     byte[] buf \u003d new byte[finalSize];\n     int offset \u003d 0;\n     for (int i \u003d 0; i \u003c components.length; i++) {\n       if (components[i] !\u003d null) {\n         System.arraycopy(components[i], 0, buf, offset, components[i].length);\n         offset +\u003d components[i].length;\n-        if (i \u003c (components.length - 1) \u0026\u0026 separator !\u003d null\n-            \u0026\u0026 separator.length \u003e 0) {\n-          System.arraycopy(separator, 0, buf, offset, separator.length);\n-          offset +\u003d separator.length;\n-        }\n       }\n+      if (i \u003c (components.length - 1)) {\n+        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n+        offset +\u003d this.value.length();\n+      }\n+\n     }\n     return buf;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] join(byte[]... components) {\n    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n      return EMPTY_BYTES;\n    }\n\n    int finalSize \u003d 0;\n    finalSize \u003d this.value.length() * (components.length - 1);\n    for (byte[] comp : components) {\n      if (comp !\u003d null) {\n        finalSize +\u003d comp.length;\n      }\n    }\n\n    byte[] buf \u003d new byte[finalSize];\n    int offset \u003d 0;\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      if (components[i] !\u003d null) {\n        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n        offset +\u003d components[i].length;\n      }\n      if (i \u003c (components.length - 1)) {\n        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n        offset +\u003d this.value.length();\n      }\n\n    }\n    return buf;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n-  public static byte[] join(byte[] separator, byte[]... components) {\n+  public byte[] join(byte[]... components) {\n     if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n       return EMPTY_BYTES;\n     }\n \n     int finalSize \u003d 0;\n-    if (separator !\u003d null) {\n-      finalSize \u003d separator.length * (components.length - 1);\n-    }\n+    finalSize \u003d this.value.length() * (components.length - 1);\n     for (byte[] comp : components) {\n       if (comp !\u003d null) {\n         finalSize +\u003d comp.length;\n       }\n     }\n \n     byte[] buf \u003d new byte[finalSize];\n     int offset \u003d 0;\n     for (int i \u003d 0; i \u003c components.length; i++) {\n       if (components[i] !\u003d null) {\n         System.arraycopy(components[i], 0, buf, offset, components[i].length);\n         offset +\u003d components[i].length;\n-        if (i \u003c (components.length - 1) \u0026\u0026 separator !\u003d null\n-            \u0026\u0026 separator.length \u003e 0) {\n-          System.arraycopy(separator, 0, buf, offset, separator.length);\n-          offset +\u003d separator.length;\n-        }\n       }\n+      if (i \u003c (components.length - 1)) {\n+        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n+        offset +\u003d this.value.length();\n+      }\n+\n     }\n     return buf;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] join(byte[]... components) {\n    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n      return EMPTY_BYTES;\n    }\n\n    int finalSize \u003d 0;\n    finalSize \u003d this.value.length() * (components.length - 1);\n    for (byte[] comp : components) {\n      if (comp !\u003d null) {\n        finalSize +\u003d comp.length;\n      }\n    }\n\n    byte[] buf \u003d new byte[finalSize];\n    int offset \u003d 0;\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      if (components[i] !\u003d null) {\n        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n        offset +\u003d components[i].length;\n      }\n      if (i \u003c (components.length - 1)) {\n        System.arraycopy(this.bytes, 0, buf, offset, this.value.length());\n        offset +\u003d this.value.length();\n      }\n\n    }\n    return buf;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/Separator.java",
          "extendedDetails": {
            "oldValue": "[separator-byte[], components-byte[]]",
            "newValue": "[components-byte[]]"
          }
        }
      ]
    },
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3411. [Storage implementation] explore the native HBase write schema for storage (Vrushali C via sjlee)\n\n(cherry picked from commit 7a3068854d27eadae1c57545988f5b2029bf119a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,30 @@\n+  public static byte[] join(byte[] separator, byte[]... components) {\n+    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n+      return EMPTY_BYTES;\n+    }\n+\n+    int finalSize \u003d 0;\n+    if (separator !\u003d null) {\n+      finalSize \u003d separator.length * (components.length - 1);\n+    }\n+    for (byte[] comp : components) {\n+      if (comp !\u003d null) {\n+        finalSize +\u003d comp.length;\n+      }\n+    }\n+\n+    byte[] buf \u003d new byte[finalSize];\n+    int offset \u003d 0;\n+    for (int i \u003d 0; i \u003c components.length; i++) {\n+      if (components[i] !\u003d null) {\n+        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n+        offset +\u003d components[i].length;\n+        if (i \u003c (components.length - 1) \u0026\u0026 separator !\u003d null\n+            \u0026\u0026 separator.length \u003e 0) {\n+          System.arraycopy(separator, 0, buf, offset, separator.length);\n+          offset +\u003d separator.length;\n+        }\n+      }\n+    }\n+    return buf;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static byte[] join(byte[] separator, byte[]... components) {\n    if (components \u003d\u003d null || components.length \u003d\u003d 0) {\n      return EMPTY_BYTES;\n    }\n\n    int finalSize \u003d 0;\n    if (separator !\u003d null) {\n      finalSize \u003d separator.length * (components.length - 1);\n    }\n    for (byte[] comp : components) {\n      if (comp !\u003d null) {\n        finalSize +\u003d comp.length;\n      }\n    }\n\n    byte[] buf \u003d new byte[finalSize];\n    int offset \u003d 0;\n    for (int i \u003d 0; i \u003c components.length; i++) {\n      if (components[i] !\u003d null) {\n        System.arraycopy(components[i], 0, buf, offset, components[i].length);\n        offset +\u003d components[i].length;\n        if (i \u003c (components.length - 1) \u0026\u0026 separator !\u003d null\n            \u0026\u0026 separator.length \u003e 0) {\n          System.arraycopy(separator, 0, buf, offset, separator.length);\n          offset +\u003d separator.length;\n        }\n      }\n    }\n    return buf;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineWriterUtils.java"
    }
  }
}