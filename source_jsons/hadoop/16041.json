{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InstrumentationService.java",
  "functionName": "getValues",
  "functionId": "getValues",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/instrumentation/InstrumentationService.java",
  "functionStartLine": 225,
  "functionEndLine": 242,
  "numCommitsSeen": 4,
  "timeTaken": 445,
  "changeHistory": [
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,18 @@\n+    long[] getValues() {\n+      lock.lock();\n+      try {\n+        long[] values \u003d new long[4];\n+        values[LAST_TOTAL] \u003d total[last];\n+        values[LAST_OWN] \u003d own[last];\n+        int limit \u003d (full) ? size : (last + 1);\n+        for (int i \u003d 0; i \u003c limit; i++) {\n+          values[AVG_TOTAL] +\u003d total[i];\n+          values[AVG_OWN] +\u003d own[i];\n+        }\n+        values[AVG_TOTAL] \u003d values[AVG_TOTAL] / limit;\n+        values[AVG_OWN] \u003d values[AVG_OWN] / limit;\n+        return values;\n+      } finally {\n+        lock.unlock();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    long[] getValues() {\n      lock.lock();\n      try {\n        long[] values \u003d new long[4];\n        values[LAST_TOTAL] \u003d total[last];\n        values[LAST_OWN] \u003d own[last];\n        int limit \u003d (full) ? size : (last + 1);\n        for (int i \u003d 0; i \u003c limit; i++) {\n          values[AVG_TOTAL] +\u003d total[i];\n          values[AVG_OWN] +\u003d own[i];\n        }\n        values[AVG_TOTAL] \u003d values[AVG_TOTAL] / limit;\n        values[AVG_OWN] \u003d values[AVG_OWN] / limit;\n        return values;\n      } finally {\n        lock.unlock();\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/instrumentation/InstrumentationService.java"
    }
  }
}