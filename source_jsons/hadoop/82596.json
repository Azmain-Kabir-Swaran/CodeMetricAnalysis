{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonSerialization.java",
  "functionName": "fromResource",
  "functionId": "fromResource___resource-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/JsonSerialization.java",
  "functionStartLine": 205,
  "functionEndLine": 217,
  "numCommitsSeen": 8,
  "timeTaken": 2232,
  "changeHistory": [
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "6a326711aa27e84fd4c53937afc5c41a746ec65a"
  ],
  "changeHistoryShort": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "6a326711aa27e84fd4c53937afc5c41a746ec65a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "21/11/17 8:42 PM",
          "commitNameOld": "782ba3bf9da52699b27405a3f147464975d1df99",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n   public synchronized T fromResource(String resource)\n       throws IOException, JsonParseException, JsonMappingException {\n-    InputStream resStream \u003d null;\n-    try {\n-      resStream \u003d this.getClass().getResourceAsStream(resource);\n+    try (InputStream resStream \u003d this.getClass()\n+        .getResourceAsStream(resource)) {\n       if (resStream \u003d\u003d null) {\n         throw new FileNotFoundException(resource);\n       }\n       return mapper.readValue(resStream, classType);\n     } catch (IOException e) {\n-      LOG.error(\"Exception while parsing json resource {}: {}\", resource, e);\n+      LOG.error(\"Exception while parsing json resource {}\", resource, e);\n       throw e;\n-    } finally {\n-      IOUtils.closeStream(resStream);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized T fromResource(String resource)\n      throws IOException, JsonParseException, JsonMappingException {\n    try (InputStream resStream \u003d this.getClass()\n        .getResourceAsStream(resource)) {\n      if (resStream \u003d\u003d null) {\n        throw new FileNotFoundException(resource);\n      }\n      return mapper.readValue(resStream, classType);\n    } catch (IOException e) {\n      LOG.error(\"Exception while parsing json resource {}\", resource, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/JsonSerialization.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/binding/JsonSerDeser.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/JsonSerialization.java",
            "oldMethodName": "fromResource",
            "newMethodName": "fromResource"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "21/11/17 8:42 PM",
          "commitNameOld": "782ba3bf9da52699b27405a3f147464975d1df99",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n   public synchronized T fromResource(String resource)\n       throws IOException, JsonParseException, JsonMappingException {\n-    InputStream resStream \u003d null;\n-    try {\n-      resStream \u003d this.getClass().getResourceAsStream(resource);\n+    try (InputStream resStream \u003d this.getClass()\n+        .getResourceAsStream(resource)) {\n       if (resStream \u003d\u003d null) {\n         throw new FileNotFoundException(resource);\n       }\n       return mapper.readValue(resStream, classType);\n     } catch (IOException e) {\n-      LOG.error(\"Exception while parsing json resource {}: {}\", resource, e);\n+      LOG.error(\"Exception while parsing json resource {}\", resource, e);\n       throw e;\n-    } finally {\n-      IOUtils.closeStream(resStream);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized T fromResource(String resource)\n      throws IOException, JsonParseException, JsonMappingException {\n    try (InputStream resStream \u003d this.getClass()\n        .getResourceAsStream(resource)) {\n      if (resStream \u003d\u003d null) {\n        throw new FileNotFoundException(resource);\n      }\n      return mapper.readValue(resStream, classType);\n    } catch (IOException e) {\n      LOG.error(\"Exception while parsing json resource {}\", resource, e);\n      throw e;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/JsonSerialization.java",
          "extendedDetails": {}
        }
      ]
    },
    "6a326711aa27e84fd4c53937afc5c41a746ec65a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-913 service registry: YARN-2652 add hadoop-yarn-registry package under hadoop-yarn\n",
      "commitDate": "08/10/14 1:02 PM",
      "commitName": "6a326711aa27e84fd4c53937afc5c41a746ec65a",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,16 @@\n+  public synchronized T fromResource(String resource)\n+      throws IOException, JsonParseException, JsonMappingException {\n+    InputStream resStream \u003d null;\n+    try {\n+      resStream \u003d this.getClass().getResourceAsStream(resource);\n+      if (resStream \u003d\u003d null) {\n+        throw new FileNotFoundException(resource);\n+      }\n+      return mapper.readValue(resStream, classType);\n+    } catch (IOException e) {\n+      LOG.error(\"Exception while parsing json resource {}: {}\", resource, e);\n+      throw e;\n+    } finally {\n+      IOUtils.closeStream(resStream);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized T fromResource(String resource)\n      throws IOException, JsonParseException, JsonMappingException {\n    InputStream resStream \u003d null;\n    try {\n      resStream \u003d this.getClass().getResourceAsStream(resource);\n      if (resStream \u003d\u003d null) {\n        throw new FileNotFoundException(resource);\n      }\n      return mapper.readValue(resStream, classType);\n    } catch (IOException e) {\n      LOG.error(\"Exception while parsing json resource {}: {}\", resource, e);\n      throw e;\n    } finally {\n      IOUtils.closeStream(resStream);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/binding/JsonSerDeser.java"
    }
  }
}