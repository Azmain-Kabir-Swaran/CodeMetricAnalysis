{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "getQueueInfo",
  "functionId": "getQueueInfo___queueName-String__includeChildQueues-boolean__recursive-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1585,
  "functionEndLine": 1592,
  "numCommitsSeen": 228,
  "timeTaken": 4236,
  "changeHistory": [
    "5d6eca08bd778fd971b29d3553d32cfc0dbe8d4e",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c"
  ],
  "changeHistoryShort": {
    "5d6eca08bd778fd971b29d3553d32cfc0dbe8d4e": "Ybodychange",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5d6eca08bd778fd971b29d3553d32cfc0dbe8d4e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4896. mapred queue -info spits out ugly exception when queue does not exist. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1451452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/13 5:28 PM",
      "commitName": "5d6eca08bd778fd971b29d3553d32cfc0dbe8d4e",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "25/02/13 7:32 PM",
      "commitNameOld": "7ea82ca558c2e2fbb50277ee6ac7debdf9e94b69",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 2.91,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public QueueInfo getQueueInfo(String queueName, boolean includeChildQueues,\n       boolean recursive) throws IOException {\n     if (!queueMgr.exists(queueName)) {\n-      return null;\n+      throw new IOException(\"queue \" + queueName + \" does not exist\");\n     }\n     return queueMgr.getQueue(queueName).getQueueInfo(includeChildQueues,\n         recursive);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public QueueInfo getQueueInfo(String queueName, boolean includeChildQueues,\n      boolean recursive) throws IOException {\n    if (!queueMgr.exists(queueName)) {\n      throw new IOException(\"queue \" + queueName + \" does not exist\");\n    }\n    return queueMgr.getQueue(queueName).getQueueInfo(includeChildQueues,\n        recursive);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": {
      "type": "Ybodychange",
      "commitMessage": "YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415592 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/12 4:03 AM",
      "commitName": "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
      "commitAuthor": "Thomas White",
      "commitDateOld": "28/11/12 5:56 PM",
      "commitNameOld": "1943fdbec613715f3cdc3ca60cbd273115f28299",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.42,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public QueueInfo getQueueInfo(String queueName, boolean includeChildQueues,\n       boolean recursive) throws IOException {\n     if (!queueMgr.exists(queueName)) {\n       return null;\n     }\n-    return queueMgr.getQueue(queueName).getQueueSchedulable().getQueueInfo(\n-        includeChildQueues, recursive);\n+    return queueMgr.getQueue(queueName).getQueueInfo(includeChildQueues,\n+        recursive);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public QueueInfo getQueueInfo(String queueName, boolean includeChildQueues,\n      boolean recursive) throws IOException {\n    if (!queueMgr.exists(queueName)) {\n      return null;\n    }\n    return queueMgr.getQueue(queueName).getQueueInfo(includeChildQueues,\n        recursive);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public QueueInfo getQueueInfo(String queueName, boolean includeChildQueues,\n      boolean recursive) throws IOException {\n    if (!queueMgr.exists(queueName)) {\n      return null;\n    }\n    return queueMgr.getQueue(queueName).getQueueSchedulable().getQueueInfo(\n        includeChildQueues, recursive);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
      }
    },
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361020 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 5:43 PM",
      "commitName": "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,8 @@\n+  public QueueInfo getQueueInfo(String queueName, boolean includeChildQueues,\n+      boolean recursive) throws IOException {\n+    if (!queueMgr.exists(queueName)) {\n+      return null;\n+    }\n+    return queueMgr.getQueue(queueName).getQueueSchedulable().getQueueInfo(\n+        includeChildQueues, recursive);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public QueueInfo getQueueInfo(String queueName, boolean includeChildQueues,\n      boolean recursive) throws IOException {\n    if (!queueMgr.exists(queueName)) {\n      return null;\n    }\n    return queueMgr.getQueue(queueName).getQueueSchedulable().getQueueInfo(\n        includeChildQueues, recursive);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}