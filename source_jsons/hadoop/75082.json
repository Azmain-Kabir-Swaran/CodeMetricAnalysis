{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractJavaKeyStoreProvider.java",
  "functionName": "innerSetCredential",
  "functionId": "innerSetCredential___alias-String__material-char[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
  "functionStartLine": 262,
  "functionEndLine": 277,
  "numCommitsSeen": 13,
  "timeTaken": 1431,
  "changeHistory": [
    "860b8373c3a851386b8cd2d4265dd35e5aabc941",
    "9aaa714a999f998b6acc9904beb414d327c06f8b",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": "Ymovefromfile",
    "9aaa714a999f998b6acc9904beb414d327c06f8b": "Ybodychange",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-11934. Use of JavaKeyStoreProvider in LdapGroupsMapping causes infinite loop. Contributed by Larry McCay.\n",
      "commitDate": "28/05/15 3:01 PM",
      "commitName": "860b8373c3a851386b8cd2d4265dd35e5aabc941",
      "commitAuthor": "cnauroth",
      "commitDateOld": "28/05/15 1:24 PM",
      "commitNameOld": "ae1454342064c71f414d20ad0885e60a335c7420",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   CredentialEntry innerSetCredential(String alias, char[] material)\n       throws IOException {\n     writeLock.lock();\n     try {\n-      keyStore.setKeyEntry(alias, new SecretKeySpec(\n-          new String(material).getBytes(\"UTF-8\"), \"AES\"),\n+      keyStore.setKeyEntry(alias,\n+          new SecretKeySpec(new String(material).getBytes(\"UTF-8\"), \"AES\"),\n           password, null);\n     } catch (KeyStoreException e) {\n       throw new IOException(\"Can\u0027t store credential \" + alias + \" in \" + this,\n           e);\n     } finally {\n       writeLock.unlock();\n     }\n     changed \u003d true;\n     return new CredentialEntry(alias, material);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  CredentialEntry innerSetCredential(String alias, char[] material)\n      throws IOException {\n    writeLock.lock();\n    try {\n      keyStore.setKeyEntry(alias,\n          new SecretKeySpec(new String(material).getBytes(\"UTF-8\"), \"AES\"),\n          password, null);\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Can\u0027t store credential \" + alias + \" in \" + this,\n          e);\n    } finally {\n      writeLock.unlock();\n    }\n    changed \u003d true;\n    return new CredentialEntry(alias, material);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
        "oldMethodName": "innerSetCredential",
        "newMethodName": "innerSetCredential"
      }
    },
    "9aaa714a999f998b6acc9904beb414d327c06f8b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10732. Fix locking in credential update. (Ted Yu via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611415 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 10:45 AM",
      "commitName": "9aaa714a999f998b6acc9904beb414d327c06f8b",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "18/06/14 8:45 AM",
      "commitNameOld": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 29.08,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   CredentialEntry innerSetCredential(String alias, char[] material)\n       throws IOException {\n+    writeLock.lock();\n     try {\n       keyStore.setKeyEntry(alias, new SecretKeySpec(\n           new String(material).getBytes(\"UTF-8\"), \"AES\"),\n           password, null);\n     } catch (KeyStoreException e) {\n       throw new IOException(\"Can\u0027t store credential \" + alias + \" in \" + this,\n           e);\n+    } finally {\n+      writeLock.unlock();\n     }\n     changed \u003d true;\n     return new CredentialEntry(alias, material);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  CredentialEntry innerSetCredential(String alias, char[] material)\n      throws IOException {\n    writeLock.lock();\n    try {\n      keyStore.setKeyEntry(alias, new SecretKeySpec(\n          new String(material).getBytes(\"UTF-8\"), \"AES\"),\n          password, null);\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Can\u0027t store credential \" + alias + \" in \" + this,\n          e);\n    } finally {\n      writeLock.unlock();\n    }\n    changed \u003d true;\n    return new CredentialEntry(alias, material);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,13 @@\n+  CredentialEntry innerSetCredential(String alias, char[] material)\n+      throws IOException {\n+    try {\n+      keyStore.setKeyEntry(alias, new SecretKeySpec(\n+          new String(material).getBytes(\"UTF-8\"), \"AES\"),\n+          password, null);\n+    } catch (KeyStoreException e) {\n+      throw new IOException(\"Can\u0027t store credential \" + alias + \" in \" + this,\n+          e);\n+    }\n+    changed \u003d true;\n+    return new CredentialEntry(alias, material);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  CredentialEntry innerSetCredential(String alias, char[] material)\n      throws IOException {\n    try {\n      keyStore.setKeyEntry(alias, new SecretKeySpec(\n          new String(material).getBytes(\"UTF-8\"), \"AES\"),\n          password, null);\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Can\u0027t store credential \" + alias + \" in \" + this,\n          e);\n    }\n    changed \u003d true;\n    return new CredentialEntry(alias, material);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java"
    }
  }
}