{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMWebServices.java",
  "functionName": "createRedirectResponse",
  "functionId": "createRedirectResponse___httpRequest-HttpServletRequest__redirectWSUrlPrefix-String__uri-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
  "functionStartLine": 637,
  "functionEndLine": 660,
  "numCommitsSeen": 32,
  "timeTaken": 1472,
  "changeHistory": [
    "34424e98a618a9fefce800746168be2b72e17de9",
    "464ff479ceec76609dca3539081de6b503b17325"
  ],
  "changeHistoryShort": {
    "34424e98a618a9fefce800746168be2b72e17de9": "Ybodychange",
    "464ff479ceec76609dca3539081de6b503b17325": "Yintroduced"
  },
  "changeHistoryDetails": {
    "34424e98a618a9fefce800746168be2b72e17de9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6314. Potential infinite redirection on YARN log redirection web service. Contributed by Xuan Gong.\n\n(cherry picked from commit 5a9dda796f0e73060ada794ad5752cc6a237ab2e)\n",
      "commitDate": "14/03/17 2:58 AM",
      "commitName": "34424e98a618a9fefce800746168be2b72e17de9",
      "commitAuthor": "Junping Du",
      "commitDateOld": "15/02/17 9:05 AM",
      "commitNameOld": "ce2d5bfa5f84e7e563980796549b56ef1e4bbf1e",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 26.7,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   private Response createRedirectResponse(HttpServletRequest httpRequest,\n       String redirectWSUrlPrefix, String uri) {\n     // redirect the request to the configured log server\n     StringBuilder redirectPath \u003d new StringBuilder();\n     if (redirectWSUrlPrefix.endsWith(\"/\")) {\n       redirectWSUrlPrefix \u003d redirectWSUrlPrefix.substring(0,\n           redirectWSUrlPrefix.length() - 1);\n     }\n     redirectPath.append(redirectWSUrlPrefix + uri);\n     // append all the request query parameters except nodeId parameter\n     String requestParams \u003d WebAppUtils.removeQueryParams(httpRequest,\n         YarnWebServiceParams.NM_ID);\n     if (requestParams !\u003d null \u0026\u0026 !requestParams.isEmpty()) {\n-      redirectPath.append(\"?\" + requestParams);\n+      redirectPath.append(\"?\" + requestParams + \"\u0026\"\n+          + YarnWebServiceParams.REDIRECTED_FROM_NODE + \"\u003dtrue\");\n+    } else {\n+      redirectPath.append(\"?\" + YarnWebServiceParams.REDIRECTED_FROM_NODE\n+          + \"\u003dtrue\");\n     }\n     ResponseBuilder res \u003d Response.status(\n         HttpServletResponse.SC_TEMPORARY_REDIRECT);\n     res.header(\"Location\", redirectPath.toString());\n     return res.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response createRedirectResponse(HttpServletRequest httpRequest,\n      String redirectWSUrlPrefix, String uri) {\n    // redirect the request to the configured log server\n    StringBuilder redirectPath \u003d new StringBuilder();\n    if (redirectWSUrlPrefix.endsWith(\"/\")) {\n      redirectWSUrlPrefix \u003d redirectWSUrlPrefix.substring(0,\n          redirectWSUrlPrefix.length() - 1);\n    }\n    redirectPath.append(redirectWSUrlPrefix + uri);\n    // append all the request query parameters except nodeId parameter\n    String requestParams \u003d WebAppUtils.removeQueryParams(httpRequest,\n        YarnWebServiceParams.NM_ID);\n    if (requestParams !\u003d null \u0026\u0026 !requestParams.isEmpty()) {\n      redirectPath.append(\"?\" + requestParams + \"\u0026\"\n          + YarnWebServiceParams.REDIRECTED_FROM_NODE + \"\u003dtrue\");\n    } else {\n      redirectPath.append(\"?\" + YarnWebServiceParams.REDIRECTED_FROM_NODE\n          + \"\u003dtrue\");\n    }\n    ResponseBuilder res \u003d Response.status(\n        HttpServletResponse.SC_TEMPORARY_REDIRECT);\n    res.header(\"Location\", redirectPath.toString());\n    return res.build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "464ff479ceec76609dca3539081de6b503b17325": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6113. Re-direct NM Web Service to get container logs for finished applications. Contributed by Xuan Gong.\n",
      "commitDate": "13/02/17 6:12 AM",
      "commitName": "464ff479ceec76609dca3539081de6b503b17325",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,20 @@\n+  private Response createRedirectResponse(HttpServletRequest httpRequest,\n+      String redirectWSUrlPrefix, String uri) {\n+    // redirect the request to the configured log server\n+    StringBuilder redirectPath \u003d new StringBuilder();\n+    if (redirectWSUrlPrefix.endsWith(\"/\")) {\n+      redirectWSUrlPrefix \u003d redirectWSUrlPrefix.substring(0,\n+          redirectWSUrlPrefix.length() - 1);\n+    }\n+    redirectPath.append(redirectWSUrlPrefix + uri);\n+    // append all the request query parameters except nodeId parameter\n+    String requestParams \u003d WebAppUtils.removeQueryParams(httpRequest,\n+        YarnWebServiceParams.NM_ID);\n+    if (requestParams !\u003d null \u0026\u0026 !requestParams.isEmpty()) {\n+      redirectPath.append(\"?\" + requestParams);\n+    }\n+    ResponseBuilder res \u003d Response.status(\n+        HttpServletResponse.SC_TEMPORARY_REDIRECT);\n+    res.header(\"Location\", redirectPath.toString());\n+    return res.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Response createRedirectResponse(HttpServletRequest httpRequest,\n      String redirectWSUrlPrefix, String uri) {\n    // redirect the request to the configured log server\n    StringBuilder redirectPath \u003d new StringBuilder();\n    if (redirectWSUrlPrefix.endsWith(\"/\")) {\n      redirectWSUrlPrefix \u003d redirectWSUrlPrefix.substring(0,\n          redirectWSUrlPrefix.length() - 1);\n    }\n    redirectPath.append(redirectWSUrlPrefix + uri);\n    // append all the request query parameters except nodeId parameter\n    String requestParams \u003d WebAppUtils.removeQueryParams(httpRequest,\n        YarnWebServiceParams.NM_ID);\n    if (requestParams !\u003d null \u0026\u0026 !requestParams.isEmpty()) {\n      redirectPath.append(\"?\" + requestParams);\n    }\n    ResponseBuilder res \u003d Response.status(\n        HttpServletResponse.SC_TEMPORARY_REDIRECT);\n    res.header(\"Location\", redirectPath.toString());\n    return res.build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java"
    }
  }
}