{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskBalancerVolumeSet.java",
  "functionName": "isBalancingNeeded",
  "functionId": "isBalancingNeeded___thresholdPercentage-double",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/datamodel/DiskBalancerVolumeSet.java",
  "functionStartLine": 270,
  "functionEndLine": 289,
  "numCommitsSeen": 10,
  "timeTaken": 1377,
  "changeHistory": [
    "75882ec0b096da862b8b373b70a091c19f281b2a",
    "1594b472bb9df7537dbc001411c99058cc11ba41",
    "91a5c4814381a4d4c3ce9b29a1f85299e03be835"
  ],
  "changeHistoryShort": {
    "75882ec0b096da862b8b373b70a091c19f281b2a": "Yparameterchange",
    "1594b472bb9df7537dbc001411c99058cc11ba41": "Ybodychange",
    "91a5c4814381a4d4c3ce9b29a1f85299e03be835": "Yintroduced"
  },
  "changeHistoryDetails": {
    "75882ec0b096da862b8b373b70a091c19f281b2a": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-9545: DiskBalancer: Add Plan Command. Contributed by Anu Engineer.\n",
      "commitDate": "23/06/16 6:21 PM",
      "commitName": "75882ec0b096da862b8b373b70a091c19f281b2a",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "23/06/16 6:20 PM",
      "commitNameOld": "1594b472bb9df7537dbc001411c99058cc11ba41",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-  public boolean isBalancingNeeded(float thresholdPercentage) {\n+  public boolean isBalancingNeeded(double thresholdPercentage) {\n     double threshold \u003d thresholdPercentage / 100.0d;\n \n     if(volumes \u003d\u003d null || volumes.size() \u003c\u003d 1) {\n       // there is nothing we can do with a single volume.\n       // so no planning needed.\n       return false;\n     }\n \n     for (DiskBalancerVolume vol : volumes) {\n       boolean notSkip \u003d !vol.isFailed() \u0026\u0026 !vol.isTransient() \u0026\u0026 !vol.isSkip();\n       Double absDensity \u003d\n           truncateDecimals(Math.abs(vol.getVolumeDataDensity()));\n \n       if ((absDensity \u003e threshold) \u0026\u0026 notSkip) {\n         return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isBalancingNeeded(double thresholdPercentage) {\n    double threshold \u003d thresholdPercentage / 100.0d;\n\n    if(volumes \u003d\u003d null || volumes.size() \u003c\u003d 1) {\n      // there is nothing we can do with a single volume.\n      // so no planning needed.\n      return false;\n    }\n\n    for (DiskBalancerVolume vol : volumes) {\n      boolean notSkip \u003d !vol.isFailed() \u0026\u0026 !vol.isTransient() \u0026\u0026 !vol.isSkip();\n      Double absDensity \u003d\n          truncateDecimals(Math.abs(vol.getVolumeDataDensity()));\n\n      if ((absDensity \u003e threshold) \u0026\u0026 notSkip) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/datamodel/DiskBalancerVolumeSet.java",
      "extendedDetails": {
        "oldValue": "[thresholdPercentage-float]",
        "newValue": "[thresholdPercentage-double]"
      }
    },
    "1594b472bb9df7537dbc001411c99058cc11ba41": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9543. DiskBalancer: Add Data mover. Contributed by Anu Engineer.\n",
      "commitDate": "23/06/16 6:20 PM",
      "commitName": "1594b472bb9df7537dbc001411c99058cc11ba41",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "23/06/16 6:18 PM",
      "commitNameOld": "747227e9dea10ac6b5f601b7cf4dcc418b10d9c8",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   public boolean isBalancingNeeded(float thresholdPercentage) {\n-    float threshold \u003d thresholdPercentage / 100.0f;\n+    double threshold \u003d thresholdPercentage / 100.0d;\n \n     if(volumes \u003d\u003d null || volumes.size() \u003c\u003d 1) {\n       // there is nothing we can do with a single volume.\n       // so no planning needed.\n       return false;\n     }\n \n     for (DiskBalancerVolume vol : volumes) {\n       boolean notSkip \u003d !vol.isFailed() \u0026\u0026 !vol.isTransient() \u0026\u0026 !vol.isSkip();\n-      if ((Math.abs(vol.getVolumeDataDensity()) \u003e threshold) \u0026\u0026 notSkip) {\n+      Double absDensity \u003d\n+          truncateDecimals(Math.abs(vol.getVolumeDataDensity()));\n+\n+      if ((absDensity \u003e threshold) \u0026\u0026 notSkip) {\n         return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isBalancingNeeded(float thresholdPercentage) {\n    double threshold \u003d thresholdPercentage / 100.0d;\n\n    if(volumes \u003d\u003d null || volumes.size() \u003c\u003d 1) {\n      // there is nothing we can do with a single volume.\n      // so no planning needed.\n      return false;\n    }\n\n    for (DiskBalancerVolume vol : volumes) {\n      boolean notSkip \u003d !vol.isFailed() \u0026\u0026 !vol.isTransient() \u0026\u0026 !vol.isSkip();\n      Double absDensity \u003d\n          truncateDecimals(Math.abs(vol.getVolumeDataDensity()));\n\n      if ((absDensity \u003e threshold) \u0026\u0026 notSkip) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/datamodel/DiskBalancerVolumeSet.java",
      "extendedDetails": {}
    },
    "91a5c4814381a4d4c3ce9b29a1f85299e03be835": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9420. Add DataModels for DiskBalancer. Contributed by Anu Engineer\n",
      "commitDate": "23/06/16 6:18 PM",
      "commitName": "91a5c4814381a4d4c3ce9b29a1f85299e03be835",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,17 @@\n+  public boolean isBalancingNeeded(float thresholdPercentage) {\n+    float threshold \u003d thresholdPercentage / 100.0f;\n+\n+    if(volumes \u003d\u003d null || volumes.size() \u003c\u003d 1) {\n+      // there is nothing we can do with a single volume.\n+      // so no planning needed.\n+      return false;\n+    }\n+\n+    for (DiskBalancerVolume vol : volumes) {\n+      boolean notSkip \u003d !vol.isFailed() \u0026\u0026 !vol.isTransient() \u0026\u0026 !vol.isSkip();\n+      if ((Math.abs(vol.getVolumeDataDensity()) \u003e threshold) \u0026\u0026 notSkip) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isBalancingNeeded(float thresholdPercentage) {\n    float threshold \u003d thresholdPercentage / 100.0f;\n\n    if(volumes \u003d\u003d null || volumes.size() \u003c\u003d 1) {\n      // there is nothing we can do with a single volume.\n      // so no planning needed.\n      return false;\n    }\n\n    for (DiskBalancerVolume vol : volumes) {\n      boolean notSkip \u003d !vol.isFailed() \u0026\u0026 !vol.isTransient() \u0026\u0026 !vol.isSkip();\n      if ((Math.abs(vol.getVolumeDataDensity()) \u003e threshold) \u0026\u0026 notSkip) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/datamodel/DiskBalancerVolumeSet.java"
    }
  }
}