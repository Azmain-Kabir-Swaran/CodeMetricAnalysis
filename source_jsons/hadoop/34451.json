{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationService.java",
  "functionName": "checkLocalDir",
  "functionId": "checkLocalDir___localDir-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
  "functionStartLine": 1659,
  "functionEndLine": 1685,
  "numCommitsSeen": 88,
  "timeTaken": 2271,
  "changeHistory": [
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000"
  ],
  "changeHistoryShort": {
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": {
      "type": "Yintroduced",
      "commitMessage": "YARN-90. NodeManager should identify failed disks becoming good again. Contributed by Varun Vasudev\n",
      "commitDate": "21/10/14 10:31 AM",
      "commitName": "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,27 @@\n+  private boolean checkLocalDir(String localDir) {\n+\n+    Map\u003cPath, FsPermission\u003e pathPermissionMap \u003d getLocalDirsPathPermissionsMap(localDir);\n+\n+    for (Map.Entry\u003cPath, FsPermission\u003e entry : pathPermissionMap.entrySet()) {\n+      FileStatus status;\n+      try {\n+        status \u003d lfs.getFileStatus(entry.getKey());\n+      } catch (Exception e) {\n+        String msg \u003d\n+            \"Could not carry out resource dir checks for \" + localDir\n+                + \", which was marked as good\";\n+        LOG.warn(msg, e);\n+        throw new YarnRuntimeException(msg, e);\n+      }\n+\n+      if (!status.getPermission().equals(entry.getValue())) {\n+        String msg \u003d\n+            \"Permissions incorrectly set for dir \" + entry.getKey()\n+                + \", should be \" + entry.getValue() + \", actual value \u003d \"\n+                + status.getPermission();\n+        LOG.warn(msg);\n+        throw new YarnRuntimeException(msg);\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLocalDir(String localDir) {\n\n    Map\u003cPath, FsPermission\u003e pathPermissionMap \u003d getLocalDirsPathPermissionsMap(localDir);\n\n    for (Map.Entry\u003cPath, FsPermission\u003e entry : pathPermissionMap.entrySet()) {\n      FileStatus status;\n      try {\n        status \u003d lfs.getFileStatus(entry.getKey());\n      } catch (Exception e) {\n        String msg \u003d\n            \"Could not carry out resource dir checks for \" + localDir\n                + \", which was marked as good\";\n        LOG.warn(msg, e);\n        throw new YarnRuntimeException(msg, e);\n      }\n\n      if (!status.getPermission().equals(entry.getValue())) {\n        String msg \u003d\n            \"Permissions incorrectly set for dir \" + entry.getKey()\n                + \", should be \" + entry.getValue() + \", actual value \u003d \"\n                + status.getPermission();\n        LOG.warn(msg);\n        throw new YarnRuntimeException(msg);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
    }
  }
}