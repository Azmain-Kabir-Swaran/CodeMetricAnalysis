{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "mergeFrom",
  "functionId": "mergeFrom___that-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java",
  "functionStartLine": 202,
  "functionEndLine": 223,
  "numCommitsSeen": 13,
  "timeTaken": 4448,
  "changeHistory": [
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "a0574e7f4f5a6e53677ada4381db5504f263d70f",
    "845764da146e98927e8ea5b2209f19f4fc3feda5"
  ],
  "changeHistoryShort": {
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ybodychange",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymovefromfile",
    "a0574e7f4f5a6e53677ada4381db5504f263d70f": "Ybodychange",
    "845764da146e98927e8ea5b2209f19f4fc3feda5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public synchronized void mergeFrom(Configuration that) {\n-    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n+    ServiceUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n         .getProperties());\n-    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n+    ServiceUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n \n     Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n     for (ConfigFile file : that.getFiles()) {\n       thatMap.put(file.getDestFile(), file.copy());\n     }\n     for (ConfigFile thisFile : files) {\n       if(thatMap.containsKey(thisFile.getDestFile())) {\n         ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n-        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProperties(),\n+        ServiceUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProperties(),\n             thatFile.getProperties());\n         thatMap.remove(thisFile.getDestFile());\n       }\n     }\n     // add remaining new files from that Configration\n     for (ConfigFile thatFile : thatMap.values()) {\n       files.add(thatFile.copy());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void mergeFrom(Configuration that) {\n    ServiceUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n        .getProperties());\n    ServiceUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n\n    Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n    for (ConfigFile file : that.getFiles()) {\n      thatMap.put(file.getDestFile(), file.copy());\n    }\n    for (ConfigFile thisFile : files) {\n      if(thatMap.containsKey(thisFile.getDestFile())) {\n        ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n        ServiceUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProperties(),\n            thatFile.getProperties());\n        thatMap.remove(thisFile.getDestFile());\n      }\n    }\n    // add remaining new files from that Configration\n    for (ConfigFile thatFile : thatMap.values()) {\n      files.add(thatFile.copy());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java",
      "extendedDetails": {}
    },
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public synchronized void mergeFrom(Configuration that) {\n     SliderUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n         .getProperties());\n     SliderUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n \n     Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n     for (ConfigFile file : that.getFiles()) {\n       thatMap.put(file.getDestFile(), file.copy());\n     }\n     for (ConfigFile thisFile : files) {\n       if(thatMap.containsKey(thisFile.getDestFile())) {\n         ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n-        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProps(),\n-            thatFile.getProps());\n+        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProperties(),\n+            thatFile.getProperties());\n         thatMap.remove(thisFile.getDestFile());\n       }\n     }\n     // add remaining new files from that Configration\n     for (ConfigFile thatFile : thatMap.values()) {\n       files.add(thatFile.copy());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void mergeFrom(Configuration that) {\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n        .getProperties());\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n\n    Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n    for (ConfigFile file : that.getFiles()) {\n      thatMap.put(file.getDestFile(), file.copy());\n    }\n    for (ConfigFile thisFile : files) {\n      if(thatMap.containsKey(thisFile.getDestFile())) {\n        ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProperties(),\n            thatFile.getProperties());\n        thatMap.remove(thisFile.getDestFile());\n      }\n    }\n    // add remaining new files from that Configration\n    for (ConfigFile thatFile : thatMap.values()) {\n      files.add(thatFile.copy());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void mergeFrom(Configuration that) {\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n        .getProperties());\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n\n    Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n    for (ConfigFile file : that.getFiles()) {\n      thatMap.put(file.getDestFile(), file.copy());\n    }\n    for (ConfigFile thisFile : files) {\n      if(thatMap.containsKey(thisFile.getDestFile())) {\n        ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProps(),\n            thatFile.getProps());\n        thatMap.remove(thisFile.getDestFile());\n      }\n    }\n    // add remaining new files from that Configration\n    for (ConfigFile thatFile : thatMap.values()) {\n      files.add(thatFile.copy());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void mergeFrom(Configuration that) {\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n        .getProperties());\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n\n    Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n    for (ConfigFile file : that.getFiles()) {\n      thatMap.put(file.getDestFile(), file.copy());\n    }\n    for (ConfigFile thisFile : files) {\n      if(thatMap.containsKey(thisFile.getDestFile())) {\n        ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProps(),\n            thatFile.getProps());\n        thatMap.remove(thisFile.getDestFile());\n      }\n    }\n    // add remaining new files from that Configration\n    for (ConfigFile thatFile : thatMap.values()) {\n      files.add(thatFile.copy());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/api/resource/Configuration.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Configuration.java",
        "oldMethodName": "mergeFrom",
        "newMethodName": "mergeFrom"
      }
    },
    "a0574e7f4f5a6e53677ada4381db5504f263d70f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6613. Update json validation for new native services providers. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a0574e7f4f5a6e53677ada4381db5504f263d70f",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "ce05c6e9811bca0bdc01152c2a82508a639480f5",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public synchronized void mergeFrom(Configuration that) {\n-    this.properties.putAll(that.getProperties());\n-    this.env.putAll(that.getEnv());\n+    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n+        .getProperties());\n+    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n+\n     Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n     for (ConfigFile file : that.getFiles()) {\n       thatMap.put(file.getDestFile(), file.copy());\n     }\n     for (ConfigFile thisFile : files) {\n       if(thatMap.containsKey(thisFile.getDestFile())) {\n         ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n-        thisFile.getProps().putAll(thatFile.getProps());\n+        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProps(),\n+            thatFile.getProps());\n         thatMap.remove(thisFile.getDestFile());\n       }\n     }\n     // add remaining new files from that Configration\n     for (ConfigFile thatFile : thatMap.values()) {\n       files.add(thatFile.copy());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void mergeFrom(Configuration that) {\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.properties, that\n        .getProperties());\n    SliderUtils.mergeMapsIgnoreDuplicateKeys(this.env, that.getEnv());\n\n    Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n    for (ConfigFile file : that.getFiles()) {\n      thatMap.put(file.getDestFile(), file.copy());\n    }\n    for (ConfigFile thisFile : files) {\n      if(thatMap.containsKey(thisFile.getDestFile())) {\n        ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n        SliderUtils.mergeMapsIgnoreDuplicateKeys(thisFile.getProps(),\n            thatFile.getProps());\n        thatMap.remove(thisFile.getDestFile());\n      }\n    }\n    // add remaining new files from that Configration\n    for (ConfigFile thatFile : thatMap.values()) {\n      files.add(thatFile.copy());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/api/resource/Configuration.java",
      "extendedDetails": {}
    },
    "845764da146e98927e8ea5b2209f19f4fc3feda5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6405. Improve configuring services through REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "845764da146e98927e8ea5b2209f19f4fc3feda5",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,19 @@\n+  public synchronized void mergeFrom(Configuration that) {\n+    this.properties.putAll(that.getProperties());\n+    this.env.putAll(that.getEnv());\n+    Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n+    for (ConfigFile file : that.getFiles()) {\n+      thatMap.put(file.getDestFile(), file.copy());\n+    }\n+    for (ConfigFile thisFile : files) {\n+      if(thatMap.containsKey(thisFile.getDestFile())) {\n+        ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n+        thisFile.getProps().putAll(thatFile.getProps());\n+        thatMap.remove(thisFile.getDestFile());\n+      }\n+    }\n+    // add remaining new files from that Configration\n+    for (ConfigFile thatFile : thatMap.values()) {\n+      files.add(thatFile.copy());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void mergeFrom(Configuration that) {\n    this.properties.putAll(that.getProperties());\n    this.env.putAll(that.getEnv());\n    Map\u003cString, ConfigFile\u003e thatMap \u003d new HashMap\u003c\u003e();\n    for (ConfigFile file : that.getFiles()) {\n      thatMap.put(file.getDestFile(), file.copy());\n    }\n    for (ConfigFile thisFile : files) {\n      if(thatMap.containsKey(thisFile.getDestFile())) {\n        ConfigFile thatFile \u003d thatMap.get(thisFile.getDestFile());\n        thisFile.getProps().putAll(thatFile.getProps());\n        thatMap.remove(thisFile.getDestFile());\n      }\n    }\n    // add remaining new files from that Configration\n    for (ConfigFile thatFile : thatMap.values()) {\n      files.add(thatFile.copy());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/api/resource/Configuration.java"
    }
  }
}