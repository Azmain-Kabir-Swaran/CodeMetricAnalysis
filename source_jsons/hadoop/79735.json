{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TrashPolicyDefault.java",
  "functionName": "deleteCheckpoint",
  "functionId": "deleteCheckpoint",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
  "functionStartLine": 215,
  "functionEndLine": 217,
  "numCommitsSeen": 31,
  "timeTaken": 1885,
  "changeHistory": [
    "686c0141eff0886c285b8e52fddade43c1ce4570",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf",
    "6ddbb22567bf6bb07cd3d84c7c5a34deaa22e691",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "184ff33de5598b04bf968ea3b113b175a4225b82"
  ],
  "changeHistoryShort": {
    "686c0141eff0886c285b8e52fddade43c1ce4570": "Ybodychange",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": "Ybodychange",
    "6ddbb22567bf6bb07cd3d84c7c5a34deaa22e691": "Ybodychange",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "184ff33de5598b04bf968ea3b113b175a4225b82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "686c0141eff0886c285b8e52fddade43c1ce4570": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16140. hadoop fs expunge to add -immediate option to purge trash immediately.\n\nContributed by Stephen O\u0027Donnell.\n\nSigned-off-by: Steve Loughran \u003cstevel@apache.org\u003e\n",
      "commitDate": "05/03/19 6:09 AM",
      "commitName": "686c0141eff0886c285b8e52fddade43c1ce4570",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "19/09/18 9:01 PM",
      "commitNameOld": "7ad27e97f05b13b33fdcef9cb63ace9c1728bfb5",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 166.42,
      "commitsBetweenForRepo": 1257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,3 @@\n   public void deleteCheckpoint() throws IOException {\n-    Collection\u003cFileStatus\u003e trashRoots \u003d fs.getTrashRoots(false);\n-    for (FileStatus trashRoot : trashRoots) {\n-      LOG.info(\"TrashPolicyDefault#deleteCheckpoint for trashRoot: \" +\n-          trashRoot.getPath());\n-      deleteCheckpoint(trashRoot.getPath());\n-    }\n+    deleteCheckpoint(false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCheckpoint() throws IOException {\n    deleteCheckpoint(false);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {}
    },
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8831. Trash Support for deletion in HDFS encryption zone. Contributed by Xiaoyu Yao.\n",
      "commitDate": "04/12/15 10:39 AM",
      "commitName": "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "24/08/15 10:51 PM",
      "commitNameOld": "af78767870b8296886c03f8be24cf13a4e2bd4b0",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 101.53,
      "commitsBetweenForRepo": 748,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,8 @@\n   public void deleteCheckpoint() throws IOException {\n-    FileStatus[] dirs \u003d null;\n-    \n-    try {\n-      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n-    } catch (FileNotFoundException fnfe) {\n-      return;\n-    }\n-\n-    long now \u003d Time.now();\n-    for (int i \u003d 0; i \u003c dirs.length; i++) {\n-      Path path \u003d dirs[i].getPath();\n-      String dir \u003d path.toUri().getPath();\n-      String name \u003d path.getName();\n-      if (name.equals(CURRENT.getName()))         // skip current\n-        continue;\n-\n-      long time;\n-      try {\n-        time \u003d getTimeFromCheckpoint(name);\n-      } catch (ParseException e) {\n-        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n-        continue;\n-      }\n-\n-      if ((now - deletionInterval) \u003e time) {\n-        if (fs.delete(path, true)) {\n-          LOG.info(\"Deleted trash checkpoint: \"+dir);\n-        } else {\n-          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n-        }\n-      }\n+    Collection\u003cFileStatus\u003e trashRoots \u003d fs.getTrashRoots(false);\n+    for (FileStatus trashRoot : trashRoots) {\n+      LOG.info(\"TrashPolicyDefault#deleteCheckpoint for trashRoot: \" +\n+          trashRoot.getPath());\n+      deleteCheckpoint(trashRoot.getPath());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCheckpoint() throws IOException {\n    Collection\u003cFileStatus\u003e trashRoots \u003d fs.getTrashRoots(false);\n    for (FileStatus trashRoot : trashRoots) {\n      LOG.info(\"TrashPolicyDefault#deleteCheckpoint for trashRoot: \" +\n          trashRoot.getPath());\n      deleteCheckpoint(trashRoot.getPath());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {}
    },
    "6ddbb22567bf6bb07cd3d84c7c5a34deaa22e691": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8843. Old trash directories are never deleted on upgrade from 1.x.  Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1390616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/09/12 10:14 AM",
      "commitName": "6ddbb22567bf6bb07cd3d84c7c5a34deaa22e691",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "05/09/12 12:42 PM",
      "commitNameOld": "91e832e7b47ff5088ca2bb54aa25f6f166d6c8d5",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 20.9,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,34 @@\n   public void deleteCheckpoint() throws IOException {\n     FileStatus[] dirs \u003d null;\n     \n     try {\n       dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n     } catch (FileNotFoundException fnfe) {\n       return;\n     }\n \n     long now \u003d Time.now();\n     for (int i \u003d 0; i \u003c dirs.length; i++) {\n       Path path \u003d dirs[i].getPath();\n       String dir \u003d path.toUri().getPath();\n       String name \u003d path.getName();\n       if (name.equals(CURRENT.getName()))         // skip current\n         continue;\n \n       long time;\n       try {\n-        synchronized (CHECKPOINT) {\n-          time \u003d CHECKPOINT.parse(name).getTime();\n-        }\n+        time \u003d getTimeFromCheckpoint(name);\n       } catch (ParseException e) {\n         LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n         continue;\n       }\n \n       if ((now - deletionInterval) \u003e time) {\n         if (fs.delete(path, true)) {\n           LOG.info(\"Deleted trash checkpoint: \"+dir);\n         } else {\n           LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCheckpoint() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d Time.now();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        time \u003d getTimeFromCheckpoint(name);\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - deletionInterval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {}
    },
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3641. Move server Util time methods to common and use now instead of System#currentTimeMillis. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 12:01 PM",
      "commitName": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "03/07/12 12:59 PM",
      "commitNameOld": "3c2101ae4a65af4b68a08651c27966490e8fbef0",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 8.96,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public void deleteCheckpoint() throws IOException {\n     FileStatus[] dirs \u003d null;\n     \n     try {\n       dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n     } catch (FileNotFoundException fnfe) {\n       return;\n     }\n \n-    long now \u003d System.currentTimeMillis();\n+    long now \u003d Time.now();\n     for (int i \u003d 0; i \u003c dirs.length; i++) {\n       Path path \u003d dirs[i].getPath();\n       String dir \u003d path.toUri().getPath();\n       String name \u003d path.getName();\n       if (name.equals(CURRENT.getName()))         // skip current\n         continue;\n \n       long time;\n       try {\n         synchronized (CHECKPOINT) {\n           time \u003d CHECKPOINT.parse(name).getTime();\n         }\n       } catch (ParseException e) {\n         LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n         continue;\n       }\n \n       if ((now - deletionInterval) \u003e time) {\n         if (fs.delete(path, true)) {\n           LOG.info(\"Deleted trash checkpoint: \"+dir);\n         } else {\n           LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCheckpoint() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d Time.now();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - deletionInterval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void deleteCheckpoint() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d System.currentTimeMillis();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - deletionInterval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void deleteCheckpoint() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d System.currentTimeMillis();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - deletionInterval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java"
      }
    },
    "184ff33de5598b04bf968ea3b113b175a4225b82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7460. Support pluggable trash policies. Contributed by Usman Masoon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1149760 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/11 4:23 PM",
      "commitName": "184ff33de5598b04bf968ea3b113b175a4225b82",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,36 @@\n+  public void deleteCheckpoint() throws IOException {\n+    FileStatus[] dirs \u003d null;\n+    \n+    try {\n+      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n+    } catch (FileNotFoundException fnfe) {\n+      return;\n+    }\n+\n+    long now \u003d System.currentTimeMillis();\n+    for (int i \u003d 0; i \u003c dirs.length; i++) {\n+      Path path \u003d dirs[i].getPath();\n+      String dir \u003d path.toUri().getPath();\n+      String name \u003d path.getName();\n+      if (name.equals(CURRENT.getName()))         // skip current\n+        continue;\n+\n+      long time;\n+      try {\n+        synchronized (CHECKPOINT) {\n+          time \u003d CHECKPOINT.parse(name).getTime();\n+        }\n+      } catch (ParseException e) {\n+        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n+        continue;\n+      }\n+\n+      if ((now - deletionInterval) \u003e time) {\n+        if (fs.delete(path, true)) {\n+          LOG.info(\"Deleted trash checkpoint: \"+dir);\n+        } else {\n+          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCheckpoint() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d System.currentTimeMillis();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - deletionInterval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/TrashPolicyDefault.java"
    }
  }
}