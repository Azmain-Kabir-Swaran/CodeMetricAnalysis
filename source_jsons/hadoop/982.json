{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSStripedOutputStream.java",
  "functionName": "logCorruptBlocks",
  "functionId": "logCorruptBlocks",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSStripedOutputStream.java",
  "functionStartLine": 1345,
  "functionEndLine": 1357,
  "numCommitsSeen": 38,
  "timeTaken": 1314,
  "changeHistory": [
    "e5c2fdddd69ceca21d641de56904648acedc74bf",
    "5104077e1f431ad3675d0b1c5c3cf53936902d8e"
  ],
  "changeHistoryShort": {
    "e5c2fdddd69ceca21d641de56904648acedc74bf": "Ybodychange",
    "5104077e1f431ad3675d0b1c5c3cf53936902d8e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5c2fdddd69ceca21d641de56904648acedc74bf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12933. Improve logging when DFSStripedOutputStream failed to write some blocks. Contributed by chencan.\n",
      "commitDate": "06/02/18 10:54 PM",
      "commitName": "e5c2fdddd69ceca21d641de56904648acedc74bf",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "17/10/17 3:52 PM",
      "commitNameOld": "f27a4ad0324aa0b4080a1c4c6bf4cd560c927e20",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 112.34,
      "commitsBetweenForRepo": 756,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void logCorruptBlocks() {\n     for (Map.Entry\u003cInteger, Integer\u003e entry : corruptBlockCountMap.entrySet()) {\n       int bgIndex \u003d entry.getKey();\n       int corruptBlockCount \u003d entry.getValue();\n       StringBuilder sb \u003d new StringBuilder();\n-      sb.append(\"Block group \u003c\").append(bgIndex).append(\"\u003e has \")\n-          .append(corruptBlockCount).append(\" corrupt blocks.\");\n+      sb.append(\"Block group \u003c\").append(bgIndex).append(\"\u003e failed to write \")\n+          .append(corruptBlockCount).append(\" blocks.\");\n       if (corruptBlockCount \u003d\u003d numAllBlocks - numDataBlocks) {\n         sb.append(\" It\u0027s at high risk of losing data.\");\n       }\n       LOG.warn(sb.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logCorruptBlocks() {\n    for (Map.Entry\u003cInteger, Integer\u003e entry : corruptBlockCountMap.entrySet()) {\n      int bgIndex \u003d entry.getKey();\n      int corruptBlockCount \u003d entry.getValue();\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(\"Block group \u003c\").append(bgIndex).append(\"\u003e failed to write \")\n          .append(corruptBlockCount).append(\" blocks.\");\n      if (corruptBlockCount \u003d\u003d numAllBlocks - numDataBlocks) {\n        sb.append(\" It\u0027s at high risk of losing data.\");\n      }\n      LOG.warn(sb.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSStripedOutputStream.java",
      "extendedDetails": {}
    },
    "5104077e1f431ad3675d0b1c5c3cf53936902d8e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9373. Erasure coding: friendly log information for write operations with some failed streamers. Contributed by Li Bo.\n\nChange-Id: Ie8ab4ae00e9ee0eb03c32a54bea26a3524308038\n",
      "commitDate": "17/12/15 1:05 PM",
      "commitName": "5104077e1f431ad3675d0b1c5c3cf53936902d8e",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,13 @@\n+  private void logCorruptBlocks() {\n+    for (Map.Entry\u003cInteger, Integer\u003e entry : corruptBlockCountMap.entrySet()) {\n+      int bgIndex \u003d entry.getKey();\n+      int corruptBlockCount \u003d entry.getValue();\n+      StringBuilder sb \u003d new StringBuilder();\n+      sb.append(\"Block group \u003c\").append(bgIndex).append(\"\u003e has \")\n+          .append(corruptBlockCount).append(\" corrupt blocks.\");\n+      if (corruptBlockCount \u003d\u003d numAllBlocks - numDataBlocks) {\n+        sb.append(\" It\u0027s at high risk of losing data.\");\n+      }\n+      LOG.warn(sb.toString());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void logCorruptBlocks() {\n    for (Map.Entry\u003cInteger, Integer\u003e entry : corruptBlockCountMap.entrySet()) {\n      int bgIndex \u003d entry.getKey();\n      int corruptBlockCount \u003d entry.getValue();\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(\"Block group \u003c\").append(bgIndex).append(\"\u003e has \")\n          .append(corruptBlockCount).append(\" corrupt blocks.\");\n      if (corruptBlockCount \u003d\u003d numAllBlocks - numDataBlocks) {\n        sb.append(\" It\u0027s at high risk of losing data.\");\n      }\n      LOG.warn(sb.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSStripedOutputStream.java"
    }
  }
}