{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnConfiguration.java",
  "functionName": "getTimelineServiceVersions",
  "functionId": "getTimelineServiceVersions___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java",
  "functionStartLine": 4616,
  "functionEndLine": 4629,
  "numCommitsSeen": 413,
  "timeTaken": 5264,
  "changeHistory": [
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90"
  ],
  "changeHistoryShort": {
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6736. Consider writing to both ats v1 \u0026 v2 from RM for smoother upgrades. Contributed by Aaron Gresch.\n",
      "commitDate": "15/01/18 6:28 PM",
      "commitName": "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,14 @@\n+  private static Collection\u003cFloat\u003e getTimelineServiceVersions(\n+      Configuration conf) {\n+    String versions \u003d conf.get(TIMELINE_SERVICE_VERSIONS);\n+    if (versions \u003d\u003d null) {\n+      versions \u003d Float.toString(getTimelineServiceVersion(conf));\n+    }\n+    List\u003cString\u003e stringList \u003d Arrays.asList(versions.split(\",\"));\n+    List\u003cFloat\u003e floatList \u003d new ArrayList\u003cFloat\u003e();\n+    for (String s : stringList) {\n+      Float f \u003d Float.parseFloat(s);\n+      floatList.add(f);\n+    }\n+    return floatList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Collection\u003cFloat\u003e getTimelineServiceVersions(\n      Configuration conf) {\n    String versions \u003d conf.get(TIMELINE_SERVICE_VERSIONS);\n    if (versions \u003d\u003d null) {\n      versions \u003d Float.toString(getTimelineServiceVersion(conf));\n    }\n    List\u003cString\u003e stringList \u003d Arrays.asList(versions.split(\",\"));\n    List\u003cFloat\u003e floatList \u003d new ArrayList\u003cFloat\u003e();\n    for (String s : stringList) {\n      Float f \u003d Float.parseFloat(s);\n      floatList.add(f);\n    }\n    return floatList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java"
    }
  }
}