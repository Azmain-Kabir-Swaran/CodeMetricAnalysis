{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CentralizedOpportunisticContainerAllocator.java",
  "functionName": "allocateAny",
  "functionId": "allocateAny___enrichedAsk-EnrichedResourceRequest__toAllocate-int__rmIdentifier-long__appParams-AllocationParams__idCounter-ContainerIdGenerator__blacklist-Set__String____id-ApplicationAttemptId__userName-String__allocations-Map__Resource,List__Allocation____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/CentralizedOpportunisticContainerAllocator.java",
  "functionStartLine": 304,
  "functionEndLine": 329,
  "numCommitsSeen": 1,
  "timeTaken": 827,
  "changeHistory": [
    "fb512f50877438acb01fe6b3ec96c12b4db61694"
  ],
  "changeHistoryShort": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9697. Efficient allocation of Opportunistic containers. Contributed by Abhishek Modi.\n",
      "commitDate": "12/11/19 3:04 AM",
      "commitName": "fb512f50877438acb01fe6b3ec96c12b4db61694",
      "commitAuthor": "Abhishek Modi",
      "diff": "@@ -0,0 +1,26 @@\n+  private List\u003cContainer\u003e allocateAny(EnrichedResourceRequest enrichedAsk,\n+      int toAllocate, long rmIdentifier,\n+      AllocationParams appParams, ContainerIdGenerator idCounter,\n+      Set\u003cString\u003e blacklist,\n+      ApplicationAttemptId id,\n+      String userName, Map\u003cResource, List\u003cAllocation\u003e\u003e allocations)\n+      throws YarnException {\n+    List\u003cContainer\u003e allocatedContainers \u003d new ArrayList\u003c\u003e();\n+    while (toAllocate \u003e 0) {\n+      RMNode node \u003d nodeQueueLoadMonitor.selectAnyNode(blacklist);\n+      if (node !\u003d null) {\n+        toAllocate--;\n+        Container container \u003d createContainer(rmIdentifier, appParams,\n+            idCounter, id, userName, allocations, ResourceRequest.ANY,\n+            enrichedAsk.getRequest(), convertToRemoteNode(node));\n+        allocatedContainers.add(container);\n+        metrics.incrOffSwitchOppContainers();\n+        LOG.info(\"Allocated [{}] as opportunistic at location [{}]\",\n+            container.getId(), ResourceRequest.ANY);\n+      } else {\n+        // we couldn\u0027t allocate any - break the loop.\n+        break;\n+      }\n+    }\n+    return allocatedContainers;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cContainer\u003e allocateAny(EnrichedResourceRequest enrichedAsk,\n      int toAllocate, long rmIdentifier,\n      AllocationParams appParams, ContainerIdGenerator idCounter,\n      Set\u003cString\u003e blacklist,\n      ApplicationAttemptId id,\n      String userName, Map\u003cResource, List\u003cAllocation\u003e\u003e allocations)\n      throws YarnException {\n    List\u003cContainer\u003e allocatedContainers \u003d new ArrayList\u003c\u003e();\n    while (toAllocate \u003e 0) {\n      RMNode node \u003d nodeQueueLoadMonitor.selectAnyNode(blacklist);\n      if (node !\u003d null) {\n        toAllocate--;\n        Container container \u003d createContainer(rmIdentifier, appParams,\n            idCounter, id, userName, allocations, ResourceRequest.ANY,\n            enrichedAsk.getRequest(), convertToRemoteNode(node));\n        allocatedContainers.add(container);\n        metrics.incrOffSwitchOppContainers();\n        LOG.info(\"Allocated [{}] as opportunistic at location [{}]\",\n            container.getId(), ResourceRequest.ANY);\n      } else {\n        // we couldn\u0027t allocate any - break the loop.\n        break;\n      }\n    }\n    return allocatedContainers;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/CentralizedOpportunisticContainerAllocator.java"
    }
  }
}