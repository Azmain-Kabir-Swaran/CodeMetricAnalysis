{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerApplicationAttempt.java",
  "functionName": "showRequests",
  "functionId": "showRequests",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
  "functionStartLine": 667,
  "functionEndLine": 685,
  "numCommitsSeen": 136,
  "timeTaken": 12357,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "586348e4cbf197188057d6b843a6701cfffdaff3",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "6772d07fdc0ad7d0cd1be851bf83ae0208abd391",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Ybodychange",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": "Ybodychange",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": "Ymultichange(Ymodifierchange,Ybodychange)",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ybodychange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "586348e4cbf197188057d6b843a6701cfffdaff3": "Ybodychange",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Ymovefromfile",
    "6772d07fdc0ad7d0cd1be851bf83ae0208abd391": "Ymovefromfile",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void showRequests() {\n     if (LOG.isDebugEnabled()) {\n+      readLock.lock();\n       try {\n-        readLock.lock();\n         for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n           AppPlacementAllocator ap \u003d getAppPlacementAllocator(schedulerKey);\n           if (ap !\u003d null \u0026\u0026\n               ap.getOutstandingAsksCount(ResourceRequest.ANY) \u003e 0) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                 + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                 + attemptResourceUsage.getUsed().getMemorySize());\n             ap.showRequests();\n           }\n         }\n       } finally {\n         readLock.unlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      readLock.lock();\n      try {\n        for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n          AppPlacementAllocator ap \u003d getAppPlacementAllocator(schedulerKey);\n          if (ap !\u003d null \u0026\u0026\n              ap.getOutstandingAsksCount(ResourceRequest.ANY) \u003e 0) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                + attemptResourceUsage.getUsed().getMemorySize());\n            ap.showRequests();\n          }\n        }\n      } finally {\n        readLock.unlock();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 2.98,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void showRequests() {\n     if (LOG.isDebugEnabled()) {\n       try {\n         readLock.lock();\n         for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n-          SchedulingPlacementSet ps \u003d getSchedulingPlacementSet(schedulerKey);\n-          if (ps !\u003d null \u0026\u0026\n-              ps.getOutstandingAsksCount(ResourceRequest.ANY) \u003e 0) {\n+          AppPlacementAllocator ap \u003d getAppPlacementAllocator(schedulerKey);\n+          if (ap !\u003d null \u0026\u0026\n+              ap.getOutstandingAsksCount(ResourceRequest.ANY) \u003e 0) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                 + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                 + attemptResourceUsage.getUsed().getMemorySize());\n-            ps.showRequests();\n+            ap.showRequests();\n           }\n         }\n       } finally {\n         readLock.unlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      try {\n        readLock.lock();\n        for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n          AppPlacementAllocator ap \u003d getAppPlacementAllocator(schedulerKey);\n          if (ap !\u003d null \u0026\u0026\n              ap.getOutstandingAsksCount(ResourceRequest.ANY) \u003e 0) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                + attemptResourceUsage.getUsed().getMemorySize());\n            ap.showRequests();\n          }\n        }\n      } finally {\n        readLock.unlock();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
      "commitDate": "06/01/17 9:59 AM",
      "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/01/17 10:31 AM",
      "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,19 @@\n   public void showRequests() {\n     if (LOG.isDebugEnabled()) {\n       try {\n         readLock.lock();\n         for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n-          Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(\n-              schedulerKey);\n-          if (requests !\u003d null) {\n+          SchedulingPlacementSet ps \u003d getSchedulingPlacementSet(schedulerKey);\n+          if (ps !\u003d null \u0026\u0026\n+              ps.getOutstandingAsksCount(ResourceRequest.ANY) \u003e 0) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                 + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                 + attemptResourceUsage.getUsed().getMemorySize());\n-            for (ResourceRequest request : requests.values()) {\n-              LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n-                  + \" request\u003d\" + request);\n-            }\n+            ps.showRequests();\n           }\n         }\n       } finally {\n         readLock.unlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      try {\n        readLock.lock();\n        for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n          SchedulingPlacementSet ps \u003d getSchedulingPlacementSet(schedulerKey);\n          if (ps !\u003d null \u0026\u0026\n              ps.getOutstandingAsksCount(ResourceRequest.ANY) \u003e 0) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                + attemptResourceUsage.getUsed().getMemorySize());\n            ps.showRequests();\n          }\n        }\n      } finally {\n        readLock.unlock();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "19/09/16 2:08 AM",
      "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  public synchronized void showRequests() {\n+  public void showRequests() {\n     if (LOG.isDebugEnabled()) {\n-      for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n-        Map\u003cString, ResourceRequest\u003e requests \u003d\n-            getResourceRequests(schedulerKey);\n-        if (requests !\u003d null) {\n-          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n-              + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n-              + attemptResourceUsage.getUsed().getMemorySize());\n-          for (ResourceRequest request : requests.values()) {\n+      try {\n+        readLock.lock();\n+        for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n+          Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(\n+              schedulerKey);\n+          if (requests !\u003d null) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n-                + \" request\u003d\" + request);\n+                + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n+                + attemptResourceUsage.getUsed().getMemorySize());\n+            for (ResourceRequest request : requests.values()) {\n+              LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n+                  + \" request\u003d\" + request);\n+            }\n           }\n         }\n+      } finally {\n+        readLock.unlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      try {\n        readLock.lock();\n        for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n          Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(\n              schedulerKey);\n          if (requests !\u003d null) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                + attemptResourceUsage.getUsed().getMemorySize());\n            for (ResourceRequest request : requests.values()) {\n              LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                  + \" request\u003d\" + request);\n            }\n          }\n        }\n      } finally {\n        readLock.unlock();\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  public synchronized void showRequests() {\n+  public void showRequests() {\n     if (LOG.isDebugEnabled()) {\n-      for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n-        Map\u003cString, ResourceRequest\u003e requests \u003d\n-            getResourceRequests(schedulerKey);\n-        if (requests !\u003d null) {\n-          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n-              + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n-              + attemptResourceUsage.getUsed().getMemorySize());\n-          for (ResourceRequest request : requests.values()) {\n+      try {\n+        readLock.lock();\n+        for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n+          Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(\n+              schedulerKey);\n+          if (requests !\u003d null) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n-                + \" request\u003d\" + request);\n+                + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n+                + attemptResourceUsage.getUsed().getMemorySize());\n+            for (ResourceRequest request : requests.values()) {\n+              LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n+                  + \" request\u003d\" + request);\n+            }\n           }\n         }\n+      } finally {\n+        readLock.unlock();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      try {\n        readLock.lock();\n        for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n          Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(\n              schedulerKey);\n          if (requests !\u003d null) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n                + attemptResourceUsage.getUsed().getMemorySize());\n            for (ResourceRequest request : requests.values()) {\n              LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                  + \" request\u003d\" + request);\n            }\n          }\n        }\n      } finally {\n        readLock.unlock();\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "11/07/16 10:36 PM",
      "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 14.68,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public synchronized void showRequests() {\n     if (LOG.isDebugEnabled()) {\n-      for (Priority priority : getPriorities()) {\n-        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n+      for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n+        Map\u003cString, ResourceRequest\u003e requests \u003d\n+            getResourceRequests(schedulerKey);\n         if (requests !\u003d null) {\n           LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n               + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n               + attemptResourceUsage.getUsed().getMemorySize());\n           for (ResourceRequest request : requests.values()) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                 + \" request\u003d\" + request);\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (SchedulerRequestKey schedulerKey : getSchedulerKeys()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d\n            getResourceRequests(schedulerKey);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n              + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n              + attemptResourceUsage.getUsed().getMemorySize());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "05/05/16 12:56 PM",
      "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 23.83,
      "commitsBetweenForRepo": 173,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public synchronized void showRequests() {\n     if (LOG.isDebugEnabled()) {\n       for (Priority priority : getPriorities()) {\n         Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n         if (requests !\u003d null) {\n           LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n               + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n-              + attemptResourceUsage.getUsed().getMemory());\n+              + attemptResourceUsage.getUsed().getMemorySize());\n           for (ResourceRequest request : requests.values()) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                 + \" request\u003d\" + request);\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n              + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n              + attemptResourceUsage.getUsed().getMemorySize());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "586348e4cbf197188057d6b843a6701cfffdaff3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3356. Capacity Scheduler FiCaSchedulerApp should use ResourceUsage to track used-resources-by-label. Contributed by Wangda Tan\n",
      "commitDate": "20/03/15 1:54 PM",
      "commitName": "586348e4cbf197188057d6b843a6701cfffdaff3",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/03/15 9:30 PM",
      "commitNameOld": "658097d6da1b1aac8e01db459f0c3b456e99652f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 2.68,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public synchronized void showRequests() {\n     if (LOG.isDebugEnabled()) {\n       for (Priority priority : getPriorities()) {\n         Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n         if (requests !\u003d null) {\n-          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n-              \" headRoom\u003d\" + getHeadroom() + \n-              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n+          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n+              + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n+              + attemptResourceUsage.getUsed().getMemory());\n           for (ResourceRequest request : requests.values()) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                 + \" request\u003d\" + request);\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n              + \" headRoom\u003d\" + getHeadroom() + \" currentConsumption\u003d\"\n              + attemptResourceUsage.getUsed().getMemory());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:19 PM",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "02/01/14 12:11 PM",
      "commitNameOld": "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n              \" headRoom\u003d\" + getHeadroom() + \n              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplication.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
        "oldMethodName": "showRequests",
        "newMethodName": "showRequests"
      }
    },
    "6772d07fdc0ad7d0cd1be851bf83ae0208abd391": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-1335. Move duplicate code from FSSchedulerApp and FiCaSchedulerApp into SchedulerApplication (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/13 4:15 PM",
      "commitName": "6772d07fdc0ad7d0cd1be851bf83ae0208abd391",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "23/10/13 7:30 PM",
      "commitNameOld": "b3195f1283c4524c32e67640e965b70e96530fcc",
      "commitAuthorOld": "Jonathan Turner Eagles",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  synchronized public void showRequests() {\n+  public synchronized void showRequests() {\n     if (LOG.isDebugEnabled()) {\n       for (Priority priority : getPriorities()) {\n         Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n         if (requests !\u003d null) {\n           LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n               \" headRoom\u003d\" + getHeadroom() + \n               \" currentConsumption\u003d\" + currentConsumption.getMemory());\n           for (ResourceRequest request : requests.values()) {\n             LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                 + \" request\u003d\" + request);\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n              \" headRoom\u003d\" + getHeadroom() + \n              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplication.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplication.java",
        "oldMethodName": "showRequests",
        "newMethodName": "showRequests"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n              \" headRoom\u003d\" + getHeadroom() + \n              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "16/07/12 3:41 PM",
      "commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n              \" headRoom\u003d\" + getHeadroom() + \n              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n              \" headRoom\u003d\" + getHeadroom() + \n              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  synchronized public void showRequests() {\n+    if (LOG.isDebugEnabled()) {\n+      for (Priority priority : getPriorities()) {\n+        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n+        if (requests !\u003d null) {\n+          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n+              \" headRoom\u003d\" + getHeadroom() + \n+              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n+          for (ResourceRequest request : requests.values()) {\n+            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n+                + \" request\u003d\" + request);\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void showRequests() {\n    if (LOG.isDebugEnabled()) {\n      for (Priority priority : getPriorities()) {\n        Map\u003cString, ResourceRequest\u003e requests \u003d getResourceRequests(priority);\n        if (requests !\u003d null) {\n          LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId() + \n              \" headRoom\u003d\" + getHeadroom() + \n              \" currentConsumption\u003d\" + currentConsumption.getMemory());\n          for (ResourceRequest request : requests.values()) {\n            LOG.debug(\"showRequests:\" + \" application\u003d\" + getApplicationId()\n                + \" request\u003d\" + request);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java"
    }
  }
}