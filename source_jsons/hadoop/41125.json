{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DominantResourceFairnessPolicy.java",
  "functionName": "calculateMinShareRatios",
  "functionId": "calculateMinShareRatios___resource-Resource__minShare-Resource__ratios-float[][]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
  "functionStartLine": 318,
  "functionEndLine": 327,
  "numCommitsSeen": 20,
  "timeTaken": 1859,
  "changeHistory": [
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750"
  ],
  "changeHistoryShort": {
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": "Yintroduced"
  },
  "changeHistoryDetails": {
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
      "commitDate": "14/09/17 11:23 AM",
      "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,10 @@\n+    void calculateMinShareRatios(Resource resource, Resource minShare,\n+        float[][] ratios) {\n+      ResourceInformation[] resourceInfo \u003d resource.getResources();\n+      ResourceInformation[] minShareInfo \u003d minShare.getResources();\n+\n+      for (int i \u003d 0; i \u003c minShareInfo.length; i++) {\n+        ratios[i][2] \u003d\n+            resourceInfo[i].getValue() / (float) minShareInfo[i].getValue();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void calculateMinShareRatios(Resource resource, Resource minShare,\n        float[][] ratios) {\n      ResourceInformation[] resourceInfo \u003d resource.getResources();\n      ResourceInformation[] minShareInfo \u003d minShare.getResources();\n\n      for (int i \u003d 0; i \u003c minShareInfo.length; i++) {\n        ratios[i][2] \u003d\n            resourceInfo[i].getValue() / (float) minShareInfo[i].getValue();\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java"
    }
  }
}