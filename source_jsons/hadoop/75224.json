{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAAdmin.java",
  "functionName": "isOtherTargetNodeActive",
  "functionId": "isOtherTargetNodeActive___targetNodeToActivate-String__forceActive-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
  "functionStartLine": 188,
  "functionEndLine": 214,
  "numCommitsSeen": 36,
  "timeTaken": 1122,
  "changeHistory": [
    "bbd6a3277678a60d472e76a207f25a916220946c",
    "88e76f9c45e57c9fad52864cfd46794fefb02615"
  ],
  "changeHistoryShort": {
    "bbd6a3277678a60d472e76a207f25a916220946c": "Ybodychange",
    "88e76f9c45e57c9fad52864cfd46794fefb02615": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbd6a3277678a60d472e76a207f25a916220946c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10482. Fix various findbugs warnings in hadoop-common. Contributed by Haohui Mai.\n",
      "commitDate": "10/12/14 12:44 PM",
      "commitName": "bbd6a3277678a60d472e76a207f25a916220946c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "15/09/14 2:27 PM",
      "commitNameOld": "2f847b3357448184aaec935052f34d116ad3a42c",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 85.97,
      "commitsBetweenForRepo": 795,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,27 @@\n   private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive)\n       throws IOException  {\n     Collection\u003cString\u003e targetIds \u003d getTargetIds(targetNodeToActivate);\n-    if(targetIds \u003d\u003d null) {\n-      errOut.println(\"transitionToActive: No target node in the \"\n-          + \"current configuration\");\n-      printUsage(errOut, \"-transitionToActive\");\n-      return true;\n-    }\n     targetIds.remove(targetNodeToActivate);\n     for(String targetId : targetIds) {\n       HAServiceTarget target \u003d resolveTarget(targetId);\n       if (!checkManualStateManagementOK(target)) {\n         return true;\n       }\n       try {\n         HAServiceProtocol proto \u003d target.getProxy(getConf(), 5000);\n         if(proto.getServiceStatus().getState() \u003d\u003d HAServiceState.ACTIVE) {\n           errOut.println(\"transitionToActive: Node \" +  targetId +\" is already active\");\n           printUsage(errOut, \"-transitionToActive\");\n           return true;\n         }\n       } catch (Exception e) {\n         //If forceActive switch is false then return true\n         if(!forceActive) {\n           errOut.println(\"Unexpected error occurred  \" + e.getMessage());\n           printUsage(errOut, \"-transitionToActive\");\n           return true; \n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive)\n      throws IOException  {\n    Collection\u003cString\u003e targetIds \u003d getTargetIds(targetNodeToActivate);\n    targetIds.remove(targetNodeToActivate);\n    for(String targetId : targetIds) {\n      HAServiceTarget target \u003d resolveTarget(targetId);\n      if (!checkManualStateManagementOK(target)) {\n        return true;\n      }\n      try {\n        HAServiceProtocol proto \u003d target.getProxy(getConf(), 5000);\n        if(proto.getServiceStatus().getState() \u003d\u003d HAServiceState.ACTIVE) {\n          errOut.println(\"transitionToActive: Node \" +  targetId +\" is already active\");\n          printUsage(errOut, \"-transitionToActive\");\n          return true;\n        }\n      } catch (Exception e) {\n        //If forceActive switch is false then return true\n        if(!forceActive) {\n          errOut.println(\"Unexpected error occurred  \" + e.getMessage());\n          printUsage(errOut, \"-transitionToActive\");\n          return true; \n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java",
      "extendedDetails": {}
    },
    "88e76f9c45e57c9fad52864cfd46794fefb02615": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2949. Add check to active state transition to prevent operator-induced split brain. Contributed by Rushabh S Shah.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594709 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/05/14 1:45 PM",
      "commitName": "88e76f9c45e57c9fad52864cfd46794fefb02615",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,33 @@\n+  private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive)\n+      throws IOException  {\n+    Collection\u003cString\u003e targetIds \u003d getTargetIds(targetNodeToActivate);\n+    if(targetIds \u003d\u003d null) {\n+      errOut.println(\"transitionToActive: No target node in the \"\n+          + \"current configuration\");\n+      printUsage(errOut, \"-transitionToActive\");\n+      return true;\n+    }\n+    targetIds.remove(targetNodeToActivate);\n+    for(String targetId : targetIds) {\n+      HAServiceTarget target \u003d resolveTarget(targetId);\n+      if (!checkManualStateManagementOK(target)) {\n+        return true;\n+      }\n+      try {\n+        HAServiceProtocol proto \u003d target.getProxy(getConf(), 5000);\n+        if(proto.getServiceStatus().getState() \u003d\u003d HAServiceState.ACTIVE) {\n+          errOut.println(\"transitionToActive: Node \" +  targetId +\" is already active\");\n+          printUsage(errOut, \"-transitionToActive\");\n+          return true;\n+        }\n+      } catch (Exception e) {\n+        //If forceActive switch is false then return true\n+        if(!forceActive) {\n+          errOut.println(\"Unexpected error occurred  \" + e.getMessage());\n+          printUsage(errOut, \"-transitionToActive\");\n+          return true; \n+        }\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive)\n      throws IOException  {\n    Collection\u003cString\u003e targetIds \u003d getTargetIds(targetNodeToActivate);\n    if(targetIds \u003d\u003d null) {\n      errOut.println(\"transitionToActive: No target node in the \"\n          + \"current configuration\");\n      printUsage(errOut, \"-transitionToActive\");\n      return true;\n    }\n    targetIds.remove(targetNodeToActivate);\n    for(String targetId : targetIds) {\n      HAServiceTarget target \u003d resolveTarget(targetId);\n      if (!checkManualStateManagementOK(target)) {\n        return true;\n      }\n      try {\n        HAServiceProtocol proto \u003d target.getProxy(getConf(), 5000);\n        if(proto.getServiceStatus().getState() \u003d\u003d HAServiceState.ACTIVE) {\n          errOut.println(\"transitionToActive: Node \" +  targetId +\" is already active\");\n          printUsage(errOut, \"-transitionToActive\");\n          return true;\n        }\n      } catch (Exception e) {\n        //If forceActive switch is false then return true\n        if(!forceActive) {\n          errOut.println(\"Unexpected error occurred  \" + e.getMessage());\n          printUsage(errOut, \"-transitionToActive\");\n          return true; \n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HAAdmin.java"
    }
  }
}