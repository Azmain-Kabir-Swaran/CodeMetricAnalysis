{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPermissionChecker.java",
  "functionName": "toAccessControlString",
  "functionId": "toAccessControlString___inodeAttrib-INodeAttributes__path-String__access-FsAction__deniedFromAcl-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
  "functionStartLine": 64,
  "functionEndLine": 78,
  "numCommitsSeen": 117,
  "timeTaken": 3571,
  "changeHistory": [
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
    "d93f3b9815f90d24c838574a56013e6dc60dc5ad"
  ],
  "changeHistoryShort": {
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": "Ymultichange(Yparameterchange,Ybodychange)",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": "Ymultichange(Yparameterchange,Ybodychange)",
    "d93f3b9815f90d24c838574a56013e6dc60dc5ad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
      "commitDate": "04/08/16 2:14 PM",
      "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
          "commitDate": "04/08/16 2:14 PM",
          "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/05/16 10:02 AM",
          "commitNameOld": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 69.18,
          "commitsBetweenForRepo": 580,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   private String toAccessControlString(INodeAttributes inodeAttrib,\n-      String path, FsAction access, FsPermission mode, boolean deniedFromAcl) {\n+      String path, FsAction access, boolean deniedFromAcl) {\n     StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n       .append(\"user\u003d\").append(getUser()).append(\", \")\n       .append(\"access\u003d\").append(access).append(\", \")\n       .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n       .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n       .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n       .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n-      .append(mode);\n+      .append(inodeAttrib.getFsPermission());\n     if (deniedFromAcl) {\n       sb.append(\"+\");\n     }\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String toAccessControlString(INodeAttributes inodeAttrib,\n      String path, FsAction access, boolean deniedFromAcl) {\n    StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n      .append(\"user\u003d\").append(getUser()).append(\", \")\n      .append(\"access\u003d\").append(access).append(\", \")\n      .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n      .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n      .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n      .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n      .append(inodeAttrib.getFsPermission());\n    if (deniedFromAcl) {\n      sb.append(\"+\");\n    }\n    return sb.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inodeAttrib-INodeAttributes, path-String, access-FsAction, mode-FsPermission, deniedFromAcl-boolean]",
            "newValue": "[inodeAttrib-INodeAttributes, path-String, access-FsAction, deniedFromAcl-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
          "commitDate": "04/08/16 2:14 PM",
          "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/05/16 10:02 AM",
          "commitNameOld": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 69.18,
          "commitsBetweenForRepo": 580,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   private String toAccessControlString(INodeAttributes inodeAttrib,\n-      String path, FsAction access, FsPermission mode, boolean deniedFromAcl) {\n+      String path, FsAction access, boolean deniedFromAcl) {\n     StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n       .append(\"user\u003d\").append(getUser()).append(\", \")\n       .append(\"access\u003d\").append(access).append(\", \")\n       .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n       .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n       .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n       .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n-      .append(mode);\n+      .append(inodeAttrib.getFsPermission());\n     if (deniedFromAcl) {\n       sb.append(\"+\");\n     }\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String toAccessControlString(INodeAttributes inodeAttrib,\n      String path, FsAction access, boolean deniedFromAcl) {\n    StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n      .append(\"user\u003d\").append(getUser()).append(\", \")\n      .append(\"access\u003d\").append(access).append(\", \")\n      .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n      .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n      .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n      .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n      .append(inodeAttrib.getFsPermission());\n    if (deniedFromAcl) {\n      sb.append(\"+\");\n    }\n    return sb.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
      "commitDate": "24/03/15 4:02 PM",
      "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
          "commitDate": "24/03/15 4:02 PM",
          "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "09/12/14 6:57 PM",
          "commitNameOld": "d93f3b9815f90d24c838574a56013e6dc60dc5ad",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 104.84,
          "commitsBetweenForRepo": 828,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  private String toAccessControlString(INode inode, int snapshotId, FsAction access,\n-      FsPermission mode, boolean deniedFromAcl) {\n+  private String toAccessControlString(INodeAttributes inodeAttrib,\n+      String path, FsAction access, FsPermission mode, boolean deniedFromAcl) {\n     StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n-      .append(\"user\u003d\").append(user).append(\", \")\n+      .append(\"user\u003d\").append(getUser()).append(\", \")\n       .append(\"access\u003d\").append(access).append(\", \")\n-      .append(\"inode\u003d\\\"\").append(inode.getFullPathName()).append(\"\\\":\")\n-      .append(inode.getUserName(snapshotId)).append(\u0027:\u0027)\n-      .append(inode.getGroupName(snapshotId)).append(\u0027:\u0027)\n-      .append(inode.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n+      .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n+      .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n+      .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n+      .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n       .append(mode);\n     if (deniedFromAcl) {\n       sb.append(\"+\");\n     }\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String toAccessControlString(INodeAttributes inodeAttrib,\n      String path, FsAction access, FsPermission mode, boolean deniedFromAcl) {\n    StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n      .append(\"user\u003d\").append(getUser()).append(\", \")\n      .append(\"access\u003d\").append(access).append(\", \")\n      .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n      .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n      .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n      .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n      .append(mode);\n    if (deniedFromAcl) {\n      sb.append(\"+\");\n    }\n    return sb.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inode-INode, snapshotId-int, access-FsAction, mode-FsPermission, deniedFromAcl-boolean]",
            "newValue": "[inodeAttrib-INodeAttributes, path-String, access-FsAction, mode-FsPermission, deniedFromAcl-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
          "commitDate": "24/03/15 4:02 PM",
          "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "09/12/14 6:57 PM",
          "commitNameOld": "d93f3b9815f90d24c838574a56013e6dc60dc5ad",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 104.84,
          "commitsBetweenForRepo": 828,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  private String toAccessControlString(INode inode, int snapshotId, FsAction access,\n-      FsPermission mode, boolean deniedFromAcl) {\n+  private String toAccessControlString(INodeAttributes inodeAttrib,\n+      String path, FsAction access, FsPermission mode, boolean deniedFromAcl) {\n     StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n-      .append(\"user\u003d\").append(user).append(\", \")\n+      .append(\"user\u003d\").append(getUser()).append(\", \")\n       .append(\"access\u003d\").append(access).append(\", \")\n-      .append(\"inode\u003d\\\"\").append(inode.getFullPathName()).append(\"\\\":\")\n-      .append(inode.getUserName(snapshotId)).append(\u0027:\u0027)\n-      .append(inode.getGroupName(snapshotId)).append(\u0027:\u0027)\n-      .append(inode.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n+      .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n+      .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n+      .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n+      .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n       .append(mode);\n     if (deniedFromAcl) {\n       sb.append(\"+\");\n     }\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String toAccessControlString(INodeAttributes inodeAttrib,\n      String path, FsAction access, FsPermission mode, boolean deniedFromAcl) {\n    StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n      .append(\"user\u003d\").append(getUser()).append(\", \")\n      .append(\"access\u003d\").append(access).append(\", \")\n      .append(\"inode\u003d\\\"\").append(path).append(\"\\\":\")\n      .append(inodeAttrib.getUserName()).append(\u0027:\u0027)\n      .append(inodeAttrib.getGroupName()).append(\u0027:\u0027)\n      .append(inodeAttrib.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n      .append(mode);\n    if (deniedFromAcl) {\n      sb.append(\"+\");\n    }\n    return sb.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "d93f3b9815f90d24c838574a56013e6dc60dc5ad": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7481. Add ACL indicator to the \u0027Permission Denied\u0027 exception. (Contributed by Vinayakumar B )\n",
      "commitDate": "09/12/14 6:57 PM",
      "commitName": "d93f3b9815f90d24c838574a56013e6dc60dc5ad",
      "commitAuthor": "Vinayakumar B",
      "diff": "@@ -0,0 +1,15 @@\n+  private String toAccessControlString(INode inode, int snapshotId, FsAction access,\n+      FsPermission mode, boolean deniedFromAcl) {\n+    StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n+      .append(\"user\u003d\").append(user).append(\", \")\n+      .append(\"access\u003d\").append(access).append(\", \")\n+      .append(\"inode\u003d\\\"\").append(inode.getFullPathName()).append(\"\\\":\")\n+      .append(inode.getUserName(snapshotId)).append(\u0027:\u0027)\n+      .append(inode.getGroupName(snapshotId)).append(\u0027:\u0027)\n+      .append(inode.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n+      .append(mode);\n+    if (deniedFromAcl) {\n+      sb.append(\"+\");\n+    }\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String toAccessControlString(INode inode, int snapshotId, FsAction access,\n      FsPermission mode, boolean deniedFromAcl) {\n    StringBuilder sb \u003d new StringBuilder(\"Permission denied: \")\n      .append(\"user\u003d\").append(user).append(\", \")\n      .append(\"access\u003d\").append(access).append(\", \")\n      .append(\"inode\u003d\\\"\").append(inode.getFullPathName()).append(\"\\\":\")\n      .append(inode.getUserName(snapshotId)).append(\u0027:\u0027)\n      .append(inode.getGroupName(snapshotId)).append(\u0027:\u0027)\n      .append(inode.isDirectory() ? \u0027d\u0027 : \u0027-\u0027)\n      .append(mode);\n    if (deniedFromAcl) {\n      sb.append(\"+\");\n    }\n    return sb.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java"
    }
  }
}