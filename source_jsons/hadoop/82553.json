{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FindClass.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/FindClass.java",
  "functionStartLine": 312,
  "functionEndLine": 336,
  "numCommitsSeen": 2,
  "timeTaken": 499,
  "changeHistory": [
    "276485e1de9099bbfae093078f9e69fc65104114"
  ],
  "changeHistoryShort": {
    "276485e1de9099bbfae093078f9e69fc65104114": "Yintroduced"
  },
  "changeHistoryDetails": {
    "276485e1de9099bbfae093078f9e69fc65104114": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9044. add FindClass main class to provide classpath checking of installations (Steve Loughran via aw)\n",
      "commitDate": "05/02/15 11:31 AM",
      "commitName": "276485e1de9099bbfae093078f9e69fc65104114",
      "commitAuthor": "Allen Wittenauer",
      "diff": "@@ -0,0 +1,25 @@\n+  public int run(String[] args) throws Exception {\n+    if (args.length !\u003d 2) {\n+      return usage(args);\n+    }\n+    String action \u003d args[0];\n+    String name \u003d args[1];\n+    int result;\n+    if (A_LOAD.equals(action)) {\n+      result \u003d loadClass(name);\n+    } else if (A_CREATE.equals(action)) {\n+      //first load to separate load errors from create\n+      result \u003d loadClass(name);\n+      if (result \u003d\u003d SUCCESS) {\n+        //class loads, so instantiate it\n+        result \u003d createClassInstance(name);\n+      }\n+    } else if (A_RESOURCE.equals(action)) {\n+      result \u003d loadResource(name);\n+    } else if (A_PRINTRESOURCE.equals(action)) {\n+      result \u003d dumpResource(name);\n+    } else {\n+      result \u003d usage(args);\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length !\u003d 2) {\n      return usage(args);\n    }\n    String action \u003d args[0];\n    String name \u003d args[1];\n    int result;\n    if (A_LOAD.equals(action)) {\n      result \u003d loadClass(name);\n    } else if (A_CREATE.equals(action)) {\n      //first load to separate load errors from create\n      result \u003d loadClass(name);\n      if (result \u003d\u003d SUCCESS) {\n        //class loads, so instantiate it\n        result \u003d createClassInstance(name);\n      }\n    } else if (A_RESOURCE.equals(action)) {\n      result \u003d loadResource(name);\n    } else if (A_PRINTRESOURCE.equals(action)) {\n      result \u003d dumpResource(name);\n    } else {\n      result \u003d usage(args);\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/FindClass.java"
    }
  }
}