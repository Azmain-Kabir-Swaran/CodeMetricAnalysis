{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JQueryUI.java",
  "functionName": "initDataTables",
  "functionId": "initDataTables___list-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
  "functionStartLine": 114,
  "functionEndLine": 155,
  "numCommitsSeen": 28,
  "timeTaken": 7515,
  "changeHistory": [
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
    "39077dba2e877420e7470df253f6154f6ecc64ec",
    "1b6f0582fb2561483915132b6fb543d541ca7013",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "be32d25c546a7d4f98604e142940c483213b485b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": "Ybodychange",
    "39077dba2e877420e7470df253f6154f6ecc64ec": "Ybodychange",
    "1b6f0582fb2561483915132b6fb543d541ca7013": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "be32d25c546a7d4f98604e142940c483213b485b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8363. Upgrade commons-lang version to 3.7 in hadoop-yarn-project. Contributed by Takanobu Asanuma.\n",
      "commitDate": "12/06/18 8:35 AM",
      "commitName": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 319.64,
      "commitsBetweenForRepo": 3008,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n   protected void initDataTables(List\u003cString\u003e list) {\n     String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n     String stateSaveInit \u003d \"bStateSave : true, \" +\n         \"\\\"fnStateSave\\\": function (oSettings, oData) { \" +\n               \" data \u003d oData.aoSearchCols;\"\n               + \"for(i \u003d0 ; i \u003c data.length; i ++) {\"\n               + \"data[i].sSearch \u003d \\\"\\\"\"\n               + \"}\"\n         + \" sessionStorage.setItem( oSettings.sTableId, JSON.stringify(oData) ); }, \" +\n           \"\\\"fnStateLoad\\\": function (oSettings) { \" +\n               \"return JSON.parse( sessionStorage.getItem(oSettings.sTableId) );}, \";\n       \n     for (String id : split($(DATATABLES_ID))) {\n       if (Html.isValidId(id)) {\n         String init \u003d $(initID(DATATABLES, id));\n         if (init.isEmpty()) {\n           init \u003d defaultInit;\n         }\n         // for inserting stateSaveInit\n         int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n         init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString(); \n         list.add(join(id, \"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                       \").fnSetFilteringDelay(188);\"));\n         String postInit \u003d $(postInitID(DATATABLES, id));\n         if(!postInit.isEmpty()) {\n           list.add(postInit);\n         }\n       }\n     }\n     String selector \u003d $(DATATABLES_SELECTOR);\n     if (!selector.isEmpty()) {\n       String init \u003d $(initSelector(DATATABLES));\n       if (init.isEmpty()) {\n         init \u003d defaultInit;\n       }      \n       int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n       init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString();  \n-      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n+      list.add(join(\"  $(\u0027\", escapeEcmaScript(selector), \"\u0027).dataTable(\", init,\n                \").fnSetFilteringDelay(288);\"));      \n       \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initDataTables(List\u003cString\u003e list) {\n    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n    String stateSaveInit \u003d \"bStateSave : true, \" +\n        \"\\\"fnStateSave\\\": function (oSettings, oData) { \" +\n              \" data \u003d oData.aoSearchCols;\"\n              + \"for(i \u003d0 ; i \u003c data.length; i ++) {\"\n              + \"data[i].sSearch \u003d \\\"\\\"\"\n              + \"}\"\n        + \" sessionStorage.setItem( oSettings.sTableId, JSON.stringify(oData) ); }, \" +\n          \"\\\"fnStateLoad\\\": function (oSettings) { \" +\n              \"return JSON.parse( sessionStorage.getItem(oSettings.sTableId) );}, \";\n      \n    for (String id : split($(DATATABLES_ID))) {\n      if (Html.isValidId(id)) {\n        String init \u003d $(initID(DATATABLES, id));\n        if (init.isEmpty()) {\n          init \u003d defaultInit;\n        }\n        // for inserting stateSaveInit\n        int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n        init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString(); \n        list.add(join(id, \"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                      \").fnSetFilteringDelay(188);\"));\n        String postInit \u003d $(postInitID(DATATABLES, id));\n        if(!postInit.isEmpty()) {\n          list.add(postInit);\n        }\n      }\n    }\n    String selector \u003d $(DATATABLES_SELECTOR);\n    if (!selector.isEmpty()) {\n      String init \u003d $(initSelector(DATATABLES));\n      if (init.isEmpty()) {\n        init \u003d defaultInit;\n      }      \n      int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n      init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString();  \n      list.add(join(\"  $(\u0027\", escapeEcmaScript(selector), \"\u0027).dataTable(\", init,\n               \").fnSetFilteringDelay(288);\"));      \n      \n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
      "extendedDetails": {}
    },
    "39077dba2e877420e7470df253f6154f6ecc64ec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2238. Filtering on UI sticks even if I move away from the page.\nContributed by Jian He\n",
      "commitDate": "25/05/15 10:39 PM",
      "commitName": "39077dba2e877420e7470df253f6154f6ecc64ec",
      "commitAuthor": "Xuan",
      "commitDateOld": "12/12/14 5:40 PM",
      "commitNameOld": "0e37bbc8e3f8e96acd96522face2f4bb01584cb4",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 164.17,
      "commitsBetweenForRepo": 1393,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,42 @@\n   protected void initDataTables(List\u003cString\u003e list) {\n     String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n     String stateSaveInit \u003d \"bStateSave : true, \" +\n-          \"\\\"fnStateSave\\\": function (oSettings, oData) { \" +\n-              \"sessionStorage.setItem( oSettings.sTableId, JSON.stringify(oData) ); }, \" +\n+        \"\\\"fnStateSave\\\": function (oSettings, oData) { \" +\n+              \" data \u003d oData.aoSearchCols;\"\n+              + \"for(i \u003d0 ; i \u003c data.length; i ++) {\"\n+              + \"data[i].sSearch \u003d \\\"\\\"\"\n+              + \"}\"\n+        + \" sessionStorage.setItem( oSettings.sTableId, JSON.stringify(oData) ); }, \" +\n           \"\\\"fnStateLoad\\\": function (oSettings) { \" +\n               \"return JSON.parse( sessionStorage.getItem(oSettings.sTableId) );}, \";\n       \n     for (String id : split($(DATATABLES_ID))) {\n       if (Html.isValidId(id)) {\n         String init \u003d $(initID(DATATABLES, id));\n         if (init.isEmpty()) {\n           init \u003d defaultInit;\n         }\n         // for inserting stateSaveInit\n         int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n         init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString(); \n         list.add(join(id,\"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                       \").fnSetFilteringDelay(188);\"));\n         String postInit \u003d $(postInitID(DATATABLES, id));\n         if(!postInit.isEmpty()) {\n           list.add(postInit);\n         }\n       }\n     }\n     String selector \u003d $(DATATABLES_SELECTOR);\n     if (!selector.isEmpty()) {\n       String init \u003d $(initSelector(DATATABLES));\n       if (init.isEmpty()) {\n         init \u003d defaultInit;\n       }      \n       int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n       init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString();  \n       list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n                \").fnSetFilteringDelay(288);\"));      \n       \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initDataTables(List\u003cString\u003e list) {\n    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n    String stateSaveInit \u003d \"bStateSave : true, \" +\n        \"\\\"fnStateSave\\\": function (oSettings, oData) { \" +\n              \" data \u003d oData.aoSearchCols;\"\n              + \"for(i \u003d0 ; i \u003c data.length; i ++) {\"\n              + \"data[i].sSearch \u003d \\\"\\\"\"\n              + \"}\"\n        + \" sessionStorage.setItem( oSettings.sTableId, JSON.stringify(oData) ); }, \" +\n          \"\\\"fnStateLoad\\\": function (oSettings) { \" +\n              \"return JSON.parse( sessionStorage.getItem(oSettings.sTableId) );}, \";\n      \n    for (String id : split($(DATATABLES_ID))) {\n      if (Html.isValidId(id)) {\n        String init \u003d $(initID(DATATABLES, id));\n        if (init.isEmpty()) {\n          init \u003d defaultInit;\n        }\n        // for inserting stateSaveInit\n        int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n        init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString(); \n        list.add(join(id,\"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                      \").fnSetFilteringDelay(188);\"));\n        String postInit \u003d $(postInitID(DATATABLES, id));\n        if(!postInit.isEmpty()) {\n          list.add(postInit);\n        }\n      }\n    }\n    String selector \u003d $(DATATABLES_SELECTOR);\n    if (!selector.isEmpty()) {\n      String init \u003d $(initSelector(DATATABLES));\n      if (init.isEmpty()) {\n        init \u003d defaultInit;\n      }      \n      int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n      init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString();  \n      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n               \").fnSetFilteringDelay(288);\"));      \n      \n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
      "extendedDetails": {}
    },
    "1b6f0582fb2561483915132b6fb543d541ca7013": {
      "type": "Ybodychange",
      "commitMessage": "YARN-237. Refreshing the RM page forgets how many rows I had in my Datatables (jian he via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1456536 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/03/13 9:56 AM",
      "commitName": "1b6f0582fb2561483915132b6fb543d541ca7013",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "06/12/12 7:39 AM",
      "commitNameOld": "2d1237cbb07489fae49a4b3048341b1cc873364c",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 98.05,
      "commitsBetweenForRepo": 430,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,38 @@\n   protected void initDataTables(List\u003cString\u003e list) {\n     String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n+    String stateSaveInit \u003d \"bStateSave : true, \" +\n+          \"\\\"fnStateSave\\\": function (oSettings, oData) { \" +\n+              \"sessionStorage.setItem( oSettings.sTableId, JSON.stringify(oData) ); }, \" +\n+          \"\\\"fnStateLoad\\\": function (oSettings) { \" +\n+              \"return JSON.parse( sessionStorage.getItem(oSettings.sTableId) );}, \";\n+      \n     for (String id : split($(DATATABLES_ID))) {\n       if (Html.isValidId(id)) {\n         String init \u003d $(initID(DATATABLES, id));\n         if (init.isEmpty()) {\n           init \u003d defaultInit;\n         }\n+        // for inserting stateSaveInit\n+        int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n+        init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString(); \n         list.add(join(id,\"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                       \").fnSetFilteringDelay(188);\"));\n         String postInit \u003d $(postInitID(DATATABLES, id));\n         if(!postInit.isEmpty()) {\n           list.add(postInit);\n         }\n       }\n     }\n     String selector \u003d $(DATATABLES_SELECTOR);\n     if (!selector.isEmpty()) {\n       String init \u003d $(initSelector(DATATABLES));\n       if (init.isEmpty()) {\n         init \u003d defaultInit;\n-      }\n+      }      \n+      int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n+      init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString();  \n       list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n-               \").fnSetFilteringDelay(288);\"));\n+               \").fnSetFilteringDelay(288);\"));      \n+      \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initDataTables(List\u003cString\u003e list) {\n    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n    String stateSaveInit \u003d \"bStateSave : true, \" +\n          \"\\\"fnStateSave\\\": function (oSettings, oData) { \" +\n              \"sessionStorage.setItem( oSettings.sTableId, JSON.stringify(oData) ); }, \" +\n          \"\\\"fnStateLoad\\\": function (oSettings) { \" +\n              \"return JSON.parse( sessionStorage.getItem(oSettings.sTableId) );}, \";\n      \n    for (String id : split($(DATATABLES_ID))) {\n      if (Html.isValidId(id)) {\n        String init \u003d $(initID(DATATABLES, id));\n        if (init.isEmpty()) {\n          init \u003d defaultInit;\n        }\n        // for inserting stateSaveInit\n        int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n        init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString(); \n        list.add(join(id,\"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                      \").fnSetFilteringDelay(188);\"));\n        String postInit \u003d $(postInitID(DATATABLES, id));\n        if(!postInit.isEmpty()) {\n          list.add(postInit);\n        }\n      }\n    }\n    String selector \u003d $(DATATABLES_SELECTOR);\n    if (!selector.isEmpty()) {\n      String init \u003d $(initSelector(DATATABLES));\n      if (init.isEmpty()) {\n        init \u003d defaultInit;\n      }      \n      int pos \u003d init.indexOf(\u0027{\u0027) + 1;  \n      init \u003d new StringBuffer(init).insert(pos, stateSaveInit).toString();  \n      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n               \").fnSetFilteringDelay(288);\"));      \n      \n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void initDataTables(List\u003cString\u003e list) {\n    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n    for (String id : split($(DATATABLES_ID))) {\n      if (Html.isValidId(id)) {\n        String init \u003d $(initID(DATATABLES, id));\n        if (init.isEmpty()) {\n          init \u003d defaultInit;\n        }\n        list.add(join(id,\"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                      \").fnSetFilteringDelay(188);\"));\n        String postInit \u003d $(postInitID(DATATABLES, id));\n        if(!postInit.isEmpty()) {\n          list.add(postInit);\n        }\n      }\n    }\n    String selector \u003d $(DATATABLES_SELECTOR);\n    if (!selector.isEmpty()) {\n      String init \u003d $(initSelector(DATATABLES));\n      if (init.isEmpty()) {\n        init \u003d defaultInit;\n      }\n      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n               \").fnSetFilteringDelay(288);\"));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java"
      }
    },
    "be32d25c546a7d4f98604e142940c483213b485b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2675. Reformat JobHistory Server main page to be more useful. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169763 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/09/11 7:24 AM",
      "commitName": "be32d25c546a7d4f98604e142940c483213b485b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 18.59,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n   protected void initDataTables(List\u003cString\u003e list) {\n     String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n     for (String id : split($(DATATABLES_ID))) {\n       if (Html.isValidId(id)) {\n         String init \u003d $(initID(DATATABLES, id));\n         if (init.isEmpty()) {\n           init \u003d defaultInit;\n         }\n-        list.add(join(\"  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n+        list.add(join(id,\"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                       \").fnSetFilteringDelay(188);\"));\n+        String postInit \u003d $(postInitID(DATATABLES, id));\n+        if(!postInit.isEmpty()) {\n+          list.add(postInit);\n+        }\n       }\n     }\n     String selector \u003d $(DATATABLES_SELECTOR);\n     if (!selector.isEmpty()) {\n       String init \u003d $(initSelector(DATATABLES));\n       if (init.isEmpty()) {\n         init \u003d defaultInit;\n       }\n       list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n                \").fnSetFilteringDelay(288);\"));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initDataTables(List\u003cString\u003e list) {\n    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n    for (String id : split($(DATATABLES_ID))) {\n      if (Html.isValidId(id)) {\n        String init \u003d $(initID(DATATABLES, id));\n        if (init.isEmpty()) {\n          init \u003d defaultInit;\n        }\n        list.add(join(id,\"DataTable \u003d  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                      \").fnSetFilteringDelay(188);\"));\n        String postInit \u003d $(postInitID(DATATABLES, id));\n        if(!postInit.isEmpty()) {\n          list.add(postInit);\n        }\n      }\n    }\n    String selector \u003d $(DATATABLES_SELECTOR);\n    if (!selector.isEmpty()) {\n      String init \u003d $(initSelector(DATATABLES));\n      if (init.isEmpty()) {\n        init \u003d defaultInit;\n      }\n      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n               \").fnSetFilteringDelay(288);\"));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void initDataTables(List\u003cString\u003e list) {\n    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n    for (String id : split($(DATATABLES_ID))) {\n      if (Html.isValidId(id)) {\n        String init \u003d $(initID(DATATABLES, id));\n        if (init.isEmpty()) {\n          init \u003d defaultInit;\n        }\n        list.add(join(\"  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                      \").fnSetFilteringDelay(188);\"));\n      }\n    }\n    String selector \u003d $(DATATABLES_SELECTOR);\n    if (!selector.isEmpty()) {\n      String init \u003d $(initSelector(DATATABLES));\n      if (init.isEmpty()) {\n        init \u003d defaultInit;\n      }\n      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n               \").fnSetFilteringDelay(288);\"));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  protected void initDataTables(List\u003cString\u003e list) {\n+    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n+    for (String id : split($(DATATABLES_ID))) {\n+      if (Html.isValidId(id)) {\n+        String init \u003d $(initID(DATATABLES, id));\n+        if (init.isEmpty()) {\n+          init \u003d defaultInit;\n+        }\n+        list.add(join(\"  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n+                      \").fnSetFilteringDelay(188);\"));\n+      }\n+    }\n+    String selector \u003d $(DATATABLES_SELECTOR);\n+    if (!selector.isEmpty()) {\n+      String init \u003d $(initSelector(DATATABLES));\n+      if (init.isEmpty()) {\n+        init \u003d defaultInit;\n+      }\n+      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n+               \").fnSetFilteringDelay(288);\"));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initDataTables(List\u003cString\u003e list) {\n    String defaultInit \u003d \"{bJQueryUI: true, sPaginationType: \u0027full_numbers\u0027}\";\n    for (String id : split($(DATATABLES_ID))) {\n      if (Html.isValidId(id)) {\n        String init \u003d $(initID(DATATABLES, id));\n        if (init.isEmpty()) {\n          init \u003d defaultInit;\n        }\n        list.add(join(\"  $(\u0027#\", id, \"\u0027).dataTable(\", init,\n                      \").fnSetFilteringDelay(188);\"));\n      }\n    }\n    String selector \u003d $(DATATABLES_SELECTOR);\n    if (!selector.isEmpty()) {\n      String init \u003d $(initSelector(DATATABLES));\n      if (init.isEmpty()) {\n        init \u003d defaultInit;\n      }\n      list.add(join(\"  $(\u0027\", escapeJavaScript(selector), \"\u0027).dataTable(\", init,\n               \").fnSetFilteringDelay(288);\"));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/view/JQueryUI.java"
    }
  }
}