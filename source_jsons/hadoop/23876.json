{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CompletedJob.java",
  "functionName": "constructJobReport",
  "functionId": "constructJobReport",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
  "functionStartLine": 160,
  "functionEndLine": 195,
  "numCommitsSeen": 38,
  "timeTaken": 1860,
  "changeHistory": [
    "cc8b83a8e85bfc65974cf5e86337855cd4724c1d",
    "4343a4cf7790b47dc7ecd18f8634e6b9c805e775",
    "c4986b2d00d327f18d0c7e2f8805b69a4e07a19b",
    "78f7cdbfd6e2b9fac51c369c748ae93d12ef065a",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
    "7d04a96027ad75877b41b7cd8f67455dd13159d7",
    "7475e836dc2bdd29142eaf210262fba354b745ed"
  ],
  "changeHistoryShort": {
    "cc8b83a8e85bfc65974cf5e86337855cd4724c1d": "Ybodychange",
    "4343a4cf7790b47dc7ecd18f8634e6b9c805e775": "Ybodychange",
    "c4986b2d00d327f18d0c7e2f8805b69a4e07a19b": "Ybodychange",
    "78f7cdbfd6e2b9fac51c369c748ae93d12ef065a": "Ybodychange",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": "Ybodychange",
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": "Ybodychange",
    "7475e836dc2bdd29142eaf210262fba354b745ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc8b83a8e85bfc65974cf5e86337855cd4724c1d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6649. getFailureInfo not returning any failure info. Contributed by Eric Badger\n",
      "commitDate": "16/04/16 3:07 PM",
      "commitName": "cc8b83a8e85bfc65974cf5e86337855cd4724c1d",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "23/02/16 5:37 PM",
      "commitNameOld": "4343a4cf7790b47dc7ecd18f8634e6b9c805e775",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 52.85,
      "commitsBetweenForRepo": 323,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,36 @@\n   private void constructJobReport() {\n     report \u003d Records.newRecord(JobReport.class);\n     report.setJobId(jobId);\n     report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n     report.setSubmitTime(jobInfo.getSubmitTime());\n     report.setStartTime(jobInfo.getLaunchTime());\n     report.setFinishTime(jobInfo.getFinishTime());\n     report.setJobName(jobInfo.getJobname());\n     report.setUser(jobInfo.getUsername());\n+    report.setDiagnostics(jobInfo.getErrorInfo());\n \n     if ( getTotalMaps() \u003d\u003d 0 ) {\n       report.setMapProgress(1.0f);\n     } else {\n       report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n     }\n     if ( getTotalReduces() \u003d\u003d 0 ) {\n       report.setReduceProgress(1.0f);\n     } else {\n       report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n     }\n \n     report.setJobFile(getConfFile().toString());\n     String historyUrl \u003d \"N/A\";\n     try {\n       historyUrl \u003d\n           MRWebAppUtil.getApplicationWebURLOnJHSWithScheme(conf,\n               jobId.getAppId());\n     } catch (UnknownHostException e) {\n         LOG.error(\"Problem determining local host: \" + e.getMessage());\n     }\n     report.setTrackingUrl(historyUrl);\n     report.setAMInfos(getAMInfos());\n     report.setIsUber(isUber());\n     report.setHistoryFile(info.getHistoryFile().toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructJobReport() {\n    report \u003d Records.newRecord(JobReport.class);\n    report.setJobId(jobId);\n    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n    report.setSubmitTime(jobInfo.getSubmitTime());\n    report.setStartTime(jobInfo.getLaunchTime());\n    report.setFinishTime(jobInfo.getFinishTime());\n    report.setJobName(jobInfo.getJobname());\n    report.setUser(jobInfo.getUsername());\n    report.setDiagnostics(jobInfo.getErrorInfo());\n\n    if ( getTotalMaps() \u003d\u003d 0 ) {\n      report.setMapProgress(1.0f);\n    } else {\n      report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n    }\n    if ( getTotalReduces() \u003d\u003d 0 ) {\n      report.setReduceProgress(1.0f);\n    } else {\n      report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n    }\n\n    report.setJobFile(getConfFile().toString());\n    String historyUrl \u003d \"N/A\";\n    try {\n      historyUrl \u003d\n          MRWebAppUtil.getApplicationWebURLOnJHSWithScheme(conf,\n              jobId.getAppId());\n    } catch (UnknownHostException e) {\n        LOG.error(\"Problem determining local host: \" + e.getMessage());\n    }\n    report.setTrackingUrl(historyUrl);\n    report.setAMInfos(getAMInfos());\n    report.setIsUber(isUber());\n    report.setHistoryFile(info.getHistoryFile().toString());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "4343a4cf7790b47dc7ecd18f8634e6b9c805e775": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6640. mapred job -history command should be able to take Job ID (rkanter)\n",
      "commitDate": "23/02/16 5:37 PM",
      "commitName": "4343a4cf7790b47dc7ecd18f8634e6b9c805e775",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "29/10/15 11:05 AM",
      "commitNameOld": "cf953b6258b036fc482456b4591cfb98054f48f2",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 117.31,
      "commitsBetweenForRepo": 754,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n   private void constructJobReport() {\n     report \u003d Records.newRecord(JobReport.class);\n     report.setJobId(jobId);\n     report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n     report.setSubmitTime(jobInfo.getSubmitTime());\n     report.setStartTime(jobInfo.getLaunchTime());\n     report.setFinishTime(jobInfo.getFinishTime());\n     report.setJobName(jobInfo.getJobname());\n     report.setUser(jobInfo.getUsername());\n \n     if ( getTotalMaps() \u003d\u003d 0 ) {\n       report.setMapProgress(1.0f);\n     } else {\n       report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n     }\n     if ( getTotalReduces() \u003d\u003d 0 ) {\n       report.setReduceProgress(1.0f);\n     } else {\n       report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n     }\n \n     report.setJobFile(getConfFile().toString());\n     String historyUrl \u003d \"N/A\";\n     try {\n       historyUrl \u003d\n           MRWebAppUtil.getApplicationWebURLOnJHSWithScheme(conf,\n               jobId.getAppId());\n     } catch (UnknownHostException e) {\n         LOG.error(\"Problem determining local host: \" + e.getMessage());\n     }\n     report.setTrackingUrl(historyUrl);\n     report.setAMInfos(getAMInfos());\n     report.setIsUber(isUber());\n+    report.setHistoryFile(info.getHistoryFile().toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructJobReport() {\n    report \u003d Records.newRecord(JobReport.class);\n    report.setJobId(jobId);\n    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n    report.setSubmitTime(jobInfo.getSubmitTime());\n    report.setStartTime(jobInfo.getLaunchTime());\n    report.setFinishTime(jobInfo.getFinishTime());\n    report.setJobName(jobInfo.getJobname());\n    report.setUser(jobInfo.getUsername());\n\n    if ( getTotalMaps() \u003d\u003d 0 ) {\n      report.setMapProgress(1.0f);\n    } else {\n      report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n    }\n    if ( getTotalReduces() \u003d\u003d 0 ) {\n      report.setReduceProgress(1.0f);\n    } else {\n      report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n    }\n\n    report.setJobFile(getConfFile().toString());\n    String historyUrl \u003d \"N/A\";\n    try {\n      historyUrl \u003d\n          MRWebAppUtil.getApplicationWebURLOnJHSWithScheme(conf,\n              jobId.getAppId());\n    } catch (UnknownHostException e) {\n        LOG.error(\"Problem determining local host: \" + e.getMessage());\n    }\n    report.setTrackingUrl(historyUrl);\n    report.setAMInfos(getAMInfos());\n    report.setIsUber(isUber());\n    report.setHistoryFile(info.getHistoryFile().toString());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "c4986b2d00d327f18d0c7e2f8805b69a4e07a19b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6266. Job#getTrackingURL should consistently return a proper URL (rchiang via rkanter)\n",
      "commitDate": "09/04/15 1:48 PM",
      "commitName": "c4986b2d00d327f18d0c7e2f8805b69a4e07a19b",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "20/03/15 1:11 PM",
      "commitNameOld": "d4f7e2507f4bb024444d172f94e74431bc2f319c",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 20.03,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   private void constructJobReport() {\n     report \u003d Records.newRecord(JobReport.class);\n     report.setJobId(jobId);\n     report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n     report.setSubmitTime(jobInfo.getSubmitTime());\n     report.setStartTime(jobInfo.getLaunchTime());\n     report.setFinishTime(jobInfo.getFinishTime());\n     report.setJobName(jobInfo.getJobname());\n     report.setUser(jobInfo.getUsername());\n \n     if ( getTotalMaps() \u003d\u003d 0 ) {\n       report.setMapProgress(1.0f);\n     } else {\n       report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n     }\n     if ( getTotalReduces() \u003d\u003d 0 ) {\n       report.setReduceProgress(1.0f);\n     } else {\n       report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n     }\n \n     report.setJobFile(getConfFile().toString());\n     String historyUrl \u003d \"N/A\";\n     try {\n       historyUrl \u003d\n-          MRWebAppUtil.getApplicationWebURLOnJHSWithoutScheme(conf,\n+          MRWebAppUtil.getApplicationWebURLOnJHSWithScheme(conf,\n               jobId.getAppId());\n     } catch (UnknownHostException e) {\n-      //Ignore.\n+        LOG.error(\"Problem determining local host: \" + e.getMessage());\n     }\n     report.setTrackingUrl(historyUrl);\n     report.setAMInfos(getAMInfos());\n     report.setIsUber(isUber());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructJobReport() {\n    report \u003d Records.newRecord(JobReport.class);\n    report.setJobId(jobId);\n    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n    report.setSubmitTime(jobInfo.getSubmitTime());\n    report.setStartTime(jobInfo.getLaunchTime());\n    report.setFinishTime(jobInfo.getFinishTime());\n    report.setJobName(jobInfo.getJobname());\n    report.setUser(jobInfo.getUsername());\n\n    if ( getTotalMaps() \u003d\u003d 0 ) {\n      report.setMapProgress(1.0f);\n    } else {\n      report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n    }\n    if ( getTotalReduces() \u003d\u003d 0 ) {\n      report.setReduceProgress(1.0f);\n    } else {\n      report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n    }\n\n    report.setJobFile(getConfFile().toString());\n    String historyUrl \u003d \"N/A\";\n    try {\n      historyUrl \u003d\n          MRWebAppUtil.getApplicationWebURLOnJHSWithScheme(conf,\n              jobId.getAppId());\n    } catch (UnknownHostException e) {\n        LOG.error(\"Problem determining local host: \" + e.getMessage());\n    }\n    report.setTrackingUrl(historyUrl);\n    report.setAMInfos(getAMInfos());\n    report.setIsUber(isUber());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "78f7cdbfd6e2b9fac51c369c748ae93d12ef065a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5568. Fixed CompletedJob in JHS to show progress percentage correctly in case the number of mappers or reducers is zero. Contributed by MinJi Kim\n",
      "commitDate": "25/11/14 1:02 PM",
      "commitName": "78f7cdbfd6e2b9fac51c369c748ae93d12ef065a",
      "commitAuthor": "Jian He",
      "commitDateOld": "11/10/14 10:49 PM",
      "commitNameOld": "e8a31f2e1c34514fba2f480e8db652f6e2ed65d8",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 44.63,
      "commitsBetweenForRepo": 391,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,34 @@\n   private void constructJobReport() {\n     report \u003d Records.newRecord(JobReport.class);\n     report.setJobId(jobId);\n     report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n     report.setSubmitTime(jobInfo.getSubmitTime());\n     report.setStartTime(jobInfo.getLaunchTime());\n     report.setFinishTime(jobInfo.getFinishTime());\n     report.setJobName(jobInfo.getJobname());\n     report.setUser(jobInfo.getUsername());\n-    report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n-    report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n+\n+    if ( getTotalMaps() \u003d\u003d 0 ) {\n+      report.setMapProgress(1.0f);\n+    } else {\n+      report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n+    }\n+    if ( getTotalReduces() \u003d\u003d 0 ) {\n+      report.setReduceProgress(1.0f);\n+    } else {\n+      report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n+    }\n+\n     report.setJobFile(getConfFile().toString());\n     String historyUrl \u003d \"N/A\";\n     try {\n       historyUrl \u003d\n           MRWebAppUtil.getApplicationWebURLOnJHSWithoutScheme(conf,\n               jobId.getAppId());\n     } catch (UnknownHostException e) {\n       //Ignore.\n     }\n     report.setTrackingUrl(historyUrl);\n     report.setAMInfos(getAMInfos());\n     report.setIsUber(isUber());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructJobReport() {\n    report \u003d Records.newRecord(JobReport.class);\n    report.setJobId(jobId);\n    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n    report.setSubmitTime(jobInfo.getSubmitTime());\n    report.setStartTime(jobInfo.getLaunchTime());\n    report.setFinishTime(jobInfo.getFinishTime());\n    report.setJobName(jobInfo.getJobname());\n    report.setUser(jobInfo.getUsername());\n\n    if ( getTotalMaps() \u003d\u003d 0 ) {\n      report.setMapProgress(1.0f);\n    } else {\n      report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n    }\n    if ( getTotalReduces() \u003d\u003d 0 ) {\n      report.setReduceProgress(1.0f);\n    } else {\n      report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n    }\n\n    report.setJobFile(getConfFile().toString());\n    String historyUrl \u003d \"N/A\";\n    try {\n      historyUrl \u003d\n          MRWebAppUtil.getApplicationWebURLOnJHSWithoutScheme(conf,\n              jobId.getAppId());\n    } catch (UnknownHostException e) {\n      //Ignore.\n    }\n    report.setTrackingUrl(historyUrl);\n    report.setAMInfos(getAMInfos());\n    report.setIsUber(isUber());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 3:52 PM",
      "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/06/13 4:25 PM",
      "commitNameOld": "c0cd68d8fbf5c8cafa6d563c7d0401e7a87a2d9e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 109.98,
      "commitsBetweenForRepo": 644,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   private void constructJobReport() {\n     report \u003d Records.newRecord(JobReport.class);\n     report.setJobId(jobId);\n     report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n     report.setSubmitTime(jobInfo.getSubmitTime());\n     report.setStartTime(jobInfo.getLaunchTime());\n     report.setFinishTime(jobInfo.getFinishTime());\n     report.setJobName(jobInfo.getJobname());\n     report.setUser(jobInfo.getUsername());\n     report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n     report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n     report.setJobFile(getConfFile().toString());\n     String historyUrl \u003d \"N/A\";\n     try {\n-      historyUrl \u003d JobHistoryUtils.getHistoryUrl(conf, jobId.getAppId());\n+      historyUrl \u003d\n+          MRWebAppUtil.getApplicationWebURLOnJHSWithoutScheme(conf,\n+              jobId.getAppId());\n     } catch (UnknownHostException e) {\n       //Ignore.\n     }\n     report.setTrackingUrl(historyUrl);\n     report.setAMInfos(getAMInfos());\n     report.setIsUber(isUber());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructJobReport() {\n    report \u003d Records.newRecord(JobReport.class);\n    report.setJobId(jobId);\n    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n    report.setSubmitTime(jobInfo.getSubmitTime());\n    report.setStartTime(jobInfo.getLaunchTime());\n    report.setFinishTime(jobInfo.getFinishTime());\n    report.setJobName(jobInfo.getJobname());\n    report.setUser(jobInfo.getUsername());\n    report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n    report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n    report.setJobFile(getConfFile().toString());\n    String historyUrl \u003d \"N/A\";\n    try {\n      historyUrl \u003d\n          MRWebAppUtil.getApplicationWebURLOnJHSWithoutScheme(conf,\n              jobId.getAppId());\n    } catch (UnknownHostException e) {\n      //Ignore.\n    }\n    report.setTrackingUrl(historyUrl);\n    report.setAMInfos(getAMInfos());\n    report.setIsUber(isUber());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/04/12 6:59 PM",
      "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "06/03/12 11:52 AM",
      "commitNameOld": "4ce5f6553fe8bd1c82b3a4bbd8ed4351874dd4ab",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 42.26,
      "commitsBetweenForRepo": 304,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void constructJobReport() {\n     report \u003d Records.newRecord(JobReport.class);\n     report.setJobId(jobId);\n     report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n     report.setSubmitTime(jobInfo.getSubmitTime());\n     report.setStartTime(jobInfo.getLaunchTime());\n     report.setFinishTime(jobInfo.getFinishTime());\n     report.setJobName(jobInfo.getJobname());\n     report.setUser(jobInfo.getUsername());\n     report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n     report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n-    report.setJobFile(confFile.toString());\n+    report.setJobFile(getConfFile().toString());\n     String historyUrl \u003d \"N/A\";\n     try {\n       historyUrl \u003d JobHistoryUtils.getHistoryUrl(conf, jobId.getAppId());\n     } catch (UnknownHostException e) {\n       //Ignore.\n     }\n     report.setTrackingUrl(historyUrl);\n     report.setAMInfos(getAMInfos());\n     report.setIsUber(isUber());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructJobReport() {\n    report \u003d Records.newRecord(JobReport.class);\n    report.setJobId(jobId);\n    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n    report.setSubmitTime(jobInfo.getSubmitTime());\n    report.setStartTime(jobInfo.getLaunchTime());\n    report.setFinishTime(jobInfo.getFinishTime());\n    report.setJobName(jobInfo.getJobname());\n    report.setUser(jobInfo.getUsername());\n    report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n    report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n    report.setJobFile(getConfFile().toString());\n    String historyUrl \u003d \"N/A\";\n    try {\n      historyUrl \u003d JobHistoryUtils.getHistoryUrl(conf, jobId.getAppId());\n    } catch (UnknownHostException e) {\n      //Ignore.\n    }\n    report.setTrackingUrl(historyUrl);\n    report.setAMInfos(getAMInfos());\n    report.setIsUber(isUber());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java",
      "extendedDetails": {}
    },
    "7475e836dc2bdd29142eaf210262fba354b745ed": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3901. Modified JobHistory records in YARN to lazily load job and task reports so as to improve UI response times. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1294417 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/12 4:32 PM",
      "commitName": "7475e836dc2bdd29142eaf210262fba354b745ed",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  private void constructJobReport() {\n+    report \u003d Records.newRecord(JobReport.class);\n+    report.setJobId(jobId);\n+    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n+    report.setSubmitTime(jobInfo.getSubmitTime());\n+    report.setStartTime(jobInfo.getLaunchTime());\n+    report.setFinishTime(jobInfo.getFinishTime());\n+    report.setJobName(jobInfo.getJobname());\n+    report.setUser(jobInfo.getUsername());\n+    report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n+    report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n+    report.setJobFile(confFile.toString());\n+    String historyUrl \u003d \"N/A\";\n+    try {\n+      historyUrl \u003d JobHistoryUtils.getHistoryUrl(conf, jobId.getAppId());\n+    } catch (UnknownHostException e) {\n+      //Ignore.\n+    }\n+    report.setTrackingUrl(historyUrl);\n+    report.setAMInfos(getAMInfos());\n+    report.setIsUber(isUber());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructJobReport() {\n    report \u003d Records.newRecord(JobReport.class);\n    report.setJobId(jobId);\n    report.setJobState(JobState.valueOf(jobInfo.getJobStatus()));\n    report.setSubmitTime(jobInfo.getSubmitTime());\n    report.setStartTime(jobInfo.getLaunchTime());\n    report.setFinishTime(jobInfo.getFinishTime());\n    report.setJobName(jobInfo.getJobname());\n    report.setUser(jobInfo.getUsername());\n    report.setMapProgress((float) getCompletedMaps() / getTotalMaps());\n    report.setReduceProgress((float) getCompletedReduces() / getTotalReduces());\n    report.setJobFile(confFile.toString());\n    String historyUrl \u003d \"N/A\";\n    try {\n      historyUrl \u003d JobHistoryUtils.getHistoryUrl(conf, jobId.getAppId());\n    } catch (UnknownHostException e) {\n      //Ignore.\n    }\n    report.setTrackingUrl(historyUrl);\n    report.setAMInfos(getAMInfos());\n    report.setIsUber(isUber());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedJob.java"
    }
  }
}