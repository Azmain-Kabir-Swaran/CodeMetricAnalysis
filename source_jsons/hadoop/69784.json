{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleKeyProvider.java",
  "functionName": "getStorageAccountKey",
  "functionId": "getStorageAccountKey___accountName-String__rawConfig-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/SimpleKeyProvider.java",
  "functionStartLine": 39,
  "functionEndLine": 53,
  "numCommitsSeen": 3,
  "timeTaken": 1835,
  "changeHistory": [
    "e5593cbd8323399359b3e8da46bd58e8364cbf22",
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc"
  ],
  "changeHistoryShort": {
    "e5593cbd8323399359b3e8da46bd58e8364cbf22": "Ymultichange(Yparameterchange,Ybodychange)",
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5593cbd8323399359b3e8da46bd58e8364cbf22": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-15694. ABFS: Allow OAuth credentials to not be tied to accounts.\nContributed by Sean Mackrory.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "e5593cbd8323399359b3e8da46bd58e8364cbf22",
      "commitAuthor": "Thomas Marquardt",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15694. ABFS: Allow OAuth credentials to not be tied to accounts.\nContributed by Sean Mackrory.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "e5593cbd8323399359b3e8da46bd58e8364cbf22",
          "commitAuthor": "Thomas Marquardt",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
          "commitAuthorOld": "Thomas Marquardt",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public String getStorageAccountKey(String accountName, Configuration conf)\n+  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n       throws KeyProviderException {\n     String key \u003d null;\n+\n     try {\n-      Configuration c \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n-          conf, AzureBlobFileSystem.class);\n-      char[] keyChars \u003d c.getPassword(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME + accountName);\n-      if (keyChars !\u003d null) {\n-        key \u003d new String(keyChars);\n-      }\n+      AbfsConfiguration abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n+      key \u003d abfsConfig.getPasswordString(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME);\n+    } catch(IllegalAccessException | InvalidConfigurationValueException e) {\n+      throw new KeyProviderException(\"Failure to initialize configuration\", e);\n     } catch(IOException ioe) {\n       LOG.warn(\"Unable to get key from credential providers. {}\", ioe);\n     }\n+\n     return key;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n      throws KeyProviderException {\n    String key \u003d null;\n\n    try {\n      AbfsConfiguration abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n      key \u003d abfsConfig.getPasswordString(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME);\n    } catch(IllegalAccessException | InvalidConfigurationValueException e) {\n      throw new KeyProviderException(\"Failure to initialize configuration\", e);\n    } catch(IOException ioe) {\n      LOG.warn(\"Unable to get key from credential providers. {}\", ioe);\n    }\n\n    return key;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/SimpleKeyProvider.java",
          "extendedDetails": {
            "oldValue": "[accountName-String, conf-Configuration]",
            "newValue": "[accountName-String, rawConfig-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15694. ABFS: Allow OAuth credentials to not be tied to accounts.\nContributed by Sean Mackrory.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "e5593cbd8323399359b3e8da46bd58e8364cbf22",
          "commitAuthor": "Thomas Marquardt",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
          "commitAuthorOld": "Thomas Marquardt",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public String getStorageAccountKey(String accountName, Configuration conf)\n+  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n       throws KeyProviderException {\n     String key \u003d null;\n+\n     try {\n-      Configuration c \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n-          conf, AzureBlobFileSystem.class);\n-      char[] keyChars \u003d c.getPassword(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME + accountName);\n-      if (keyChars !\u003d null) {\n-        key \u003d new String(keyChars);\n-      }\n+      AbfsConfiguration abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n+      key \u003d abfsConfig.getPasswordString(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME);\n+    } catch(IllegalAccessException | InvalidConfigurationValueException e) {\n+      throw new KeyProviderException(\"Failure to initialize configuration\", e);\n     } catch(IOException ioe) {\n       LOG.warn(\"Unable to get key from credential providers. {}\", ioe);\n     }\n+\n     return key;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String getStorageAccountKey(String accountName, Configuration rawConfig)\n      throws KeyProviderException {\n    String key \u003d null;\n\n    try {\n      AbfsConfiguration abfsConfig \u003d new AbfsConfiguration(rawConfig, accountName);\n      key \u003d abfsConfig.getPasswordString(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME);\n    } catch(IllegalAccessException | InvalidConfigurationValueException e) {\n      throw new KeyProviderException(\"Failure to initialize configuration\", e);\n    } catch(IOException ioe) {\n      LOG.warn(\"Unable to get key from credential providers. {}\", ioe);\n    }\n\n    return key;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/SimpleKeyProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15659. Code changes for bug fix and new tests.\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
      "commitAuthor": "Thomas Marquardt",
      "diff": "@@ -0,0 +1,15 @@\n+  public String getStorageAccountKey(String accountName, Configuration conf)\n+      throws KeyProviderException {\n+    String key \u003d null;\n+    try {\n+      Configuration c \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n+          conf, AzureBlobFileSystem.class);\n+      char[] keyChars \u003d c.getPassword(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME + accountName);\n+      if (keyChars !\u003d null) {\n+        key \u003d new String(keyChars);\n+      }\n+    } catch(IOException ioe) {\n+      LOG.warn(\"Unable to get key from credential providers. {}\", ioe);\n+    }\n+    return key;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getStorageAccountKey(String accountName, Configuration conf)\n      throws KeyProviderException {\n    String key \u003d null;\n    try {\n      Configuration c \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n          conf, AzureBlobFileSystem.class);\n      char[] keyChars \u003d c.getPassword(ConfigurationKeys.FS_AZURE_ACCOUNT_KEY_PROPERTY_NAME + accountName);\n      if (keyChars !\u003d null) {\n        key \u003d new String(keyChars);\n      }\n    } catch(IOException ioe) {\n      LOG.warn(\"Unable to get key from credential providers. {}\", ioe);\n    }\n    return key;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/SimpleKeyProvider.java"
    }
  }
}