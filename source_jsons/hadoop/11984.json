{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "append",
  "functionId": "append___bpid-String__replicaInfo-ReplicaInfo__newGS-long__estimateBlockLen-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 1278,
  "functionEndLine": 1307,
  "numCommitsSeen": 363,
  "timeTaken": 18019,
  "changeHistory": [
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "a9a607f8fc0d996af3fb37f7efa7591d6655900d",
    "bb540ba85aa37d9fe31e640665158afe8a936230",
    "de522d2cd46be13806d13aa5f373b310e0ad6693",
    "7f393a6f61f5a34a1de11481ad321c6a941d5d27",
    "92c1af1646b1d91a2ab7821e4f7d450e3b6e10bb",
    "a153b9601ad8628fdd608d8696310ca8c1f58ff0",
    "d1fa58292e87bc29b4ef1278368c2be938a0afc4",
    "fba994ffe20d387e8ed875e727fc3d93f7097101",
    "97199baea1c41a66bd2a88bda31742ef6ddcb5dc",
    "f39f8c57344ede533ca4363c98230f3a0c401a76",
    "15d08c4778350a86d7bae0174aeb48f8d8f61cce",
    "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8",
    "b992219fa13ccee2b417d91222fd0c3e8c3ffe11",
    "e7380b4f9c4f29bf5f0c07b95ddba88b0ef3765d",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a9a607f8fc0d996af3fb37f7efa7591d6655900d": "Ybodychange",
    "bb540ba85aa37d9fe31e640665158afe8a936230": "Ybodychange",
    "de522d2cd46be13806d13aa5f373b310e0ad6693": "Ybodychange",
    "7f393a6f61f5a34a1de11481ad321c6a941d5d27": "Ybodychange",
    "92c1af1646b1d91a2ab7821e4f7d450e3b6e10bb": "Ybodychange",
    "a153b9601ad8628fdd608d8696310ca8c1f58ff0": "Ybodychange",
    "d1fa58292e87bc29b4ef1278368c2be938a0afc4": "Ybodychange",
    "fba994ffe20d387e8ed875e727fc3d93f7097101": "Ybodychange",
    "97199baea1c41a66bd2a88bda31742ef6ddcb5dc": "Ybodychange",
    "f39f8c57344ede533ca4363c98230f3a0c401a76": "Ybodychange",
    "15d08c4778350a86d7bae0174aeb48f8d8f61cce": "Ybodychange",
    "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8": "Ybodychange",
    "b992219fa13ccee2b417d91222fd0c3e8c3ffe11": "Ybodychange",
    "e7380b4f9c4f29bf5f0c07b95ddba88b0ef3765d": "Ybodychange",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15150. Introduce read write lock to Datanode. Contributed Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/02/20 8:00 AM",
      "commitName": "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "28/01/20 10:10 AM",
      "commitNameOld": "1839c467f60cbb8592d446694ec3d7710cda5142",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   private ReplicaInPipeline append(String bpid,\n       ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n-    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n       // If the block is cached, start uncaching it.\n       if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n         throw new IOException(\"Only a Finalized replica can be appended to; \"\n             + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n             + replicaInfo.getState());\n       }\n       // If the block is cached, start uncaching it.\n       cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n \n       // If there are any hardlinks to the block, break them.  This ensures\n       // we are not appending to a file that is part of a previous/ directory.\n       replicaInfo.breakHardLinksIfNeeded();\n \n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n           newGS, estimateBlockLen);\n       if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n         throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n             \" returned a replica of state \" + rip.getReplicaInfo().getState()\n             + \"; expected RBW\");\n       }\n       // Replace finalized replica by a RBW replica in replicas map\n       volumeMap.add(bpid, rip.getReplicaInfo());\n       return rip;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ReplicaInPipeline append(String bpid,\n      ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n      // If the block is cached, start uncaching it.\n      if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n        throw new IOException(\"Only a Finalized replica can be appended to; \"\n            + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n            + replicaInfo.getState());\n      }\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n      // If there are any hardlinks to the block, break them.  This ensures\n      // we are not appending to a file that is part of a previous/ directory.\n      replicaInfo.breakHardLinksIfNeeded();\n\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n          newGS, estimateBlockLen);\n      if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n        throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n            \" returned a replica of state \" + rip.getReplicaInfo().getState()\n            + \"; expected RBW\");\n      }\n      // Replace finalized replica by a RBW replica in replicas map\n      volumeMap.add(bpid, rip.getReplicaInfo());\n      return rip;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/09/16 6:22 PM",
          "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.77,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,63 +1,30 @@\n-  private ReplicaBeingWritten append(String bpid,\n-      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n+  private ReplicaInPipeline append(String bpid,\n+      ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       // If the block is cached, start uncaching it.\n+      if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n+        throw new IOException(\"Only a Finalized replica can be appended to; \"\n+            + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n+            + replicaInfo.getState());\n+      }\n+      // If the block is cached, start uncaching it.\n       cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n \n-      // If there are any hardlinks to the block, break them.  This ensures we\n-      // are not appending to a file that is part of a previous/ directory.\n+      // If there are any hardlinks to the block, break them.  This ensures\n+      // we are not appending to a file that is part of a previous/ directory.\n       replicaInfo.breakHardLinksIfNeeded();\n \n-      // construct a RBW replica with the new GS\n-      File blkfile \u003d replicaInfo.getBlockFile();\n-      FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n-      long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n-      if (v.getAvailable() \u003c bytesReserved) {\n-        throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n-            + replicaInfo);\n+      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n+      ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n+          newGS, estimateBlockLen);\n+      if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n+        throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n+            \" returned a replica of state \" + rip.getReplicaInfo().getState()\n+            + \"; expected RBW\");\n       }\n-      File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n-      File oldmeta \u003d replicaInfo.getMetaFile();\n-      ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n-          replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n-          v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n-      File newmeta \u003d newReplicaInfo.getMetaFile();\n-\n-      // rename meta file to rbw directory\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n-      }\n-      try {\n-        NativeIO.renameTo(oldmeta, newmeta);\n-      } catch (IOException e) {\n-        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-            \" Unable to move meta file  \" + oldmeta +\n-            \" to rbw dir \" + newmeta, e);\n-      }\n-\n-      // rename block file to rbw directory\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n-            + \", file length\u003d\" + blkfile.length());\n-      }\n-      try {\n-        NativeIO.renameTo(blkfile, newBlkFile);\n-      } catch (IOException e) {\n-        try {\n-          NativeIO.renameTo(newmeta, oldmeta);\n-        } catch (IOException ex) {\n-          LOG.warn(\"Cannot move meta file \" + newmeta +\n-              \"back to the finalized directory \" + oldmeta, ex);\n-        }\n-        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-            \" Unable to move block file \" + blkfile +\n-            \" to rbw dir \" + newBlkFile, e);\n-      }\n-\n       // Replace finalized replica by a RBW replica in replicas map\n-      volumeMap.add(bpid, newReplicaInfo);\n-      v.reserveSpaceForReplica(bytesReserved);\n-      return newReplicaInfo;\n+      volumeMap.add(bpid, rip.getReplicaInfo());\n+      return rip;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInPipeline append(String bpid,\n      ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      // If the block is cached, start uncaching it.\n      if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n        throw new IOException(\"Only a Finalized replica can be appended to; \"\n            + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n            + replicaInfo.getState());\n      }\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n      // If there are any hardlinks to the block, break them.  This ensures\n      // we are not appending to a file that is part of a previous/ directory.\n      replicaInfo.breakHardLinksIfNeeded();\n\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n          newGS, estimateBlockLen);\n      if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n        throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n            \" returned a replica of state \" + rip.getReplicaInfo().getState()\n            + \"; expected RBW\");\n      }\n      // Replace finalized replica by a RBW replica in replicas map\n      volumeMap.add(bpid, rip.getReplicaInfo());\n      return rip;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[bpid-String, replicaInfo-FinalizedReplica, newGS-long, estimateBlockLen-long]",
            "newValue": "[bpid-String, replicaInfo-ReplicaInfo, newGS-long, estimateBlockLen-long]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/09/16 6:22 PM",
          "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.77,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,63 +1,30 @@\n-  private ReplicaBeingWritten append(String bpid,\n-      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n+  private ReplicaInPipeline append(String bpid,\n+      ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       // If the block is cached, start uncaching it.\n+      if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n+        throw new IOException(\"Only a Finalized replica can be appended to; \"\n+            + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n+            + replicaInfo.getState());\n+      }\n+      // If the block is cached, start uncaching it.\n       cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n \n-      // If there are any hardlinks to the block, break them.  This ensures we\n-      // are not appending to a file that is part of a previous/ directory.\n+      // If there are any hardlinks to the block, break them.  This ensures\n+      // we are not appending to a file that is part of a previous/ directory.\n       replicaInfo.breakHardLinksIfNeeded();\n \n-      // construct a RBW replica with the new GS\n-      File blkfile \u003d replicaInfo.getBlockFile();\n-      FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n-      long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n-      if (v.getAvailable() \u003c bytesReserved) {\n-        throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n-            + replicaInfo);\n+      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n+      ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n+          newGS, estimateBlockLen);\n+      if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n+        throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n+            \" returned a replica of state \" + rip.getReplicaInfo().getState()\n+            + \"; expected RBW\");\n       }\n-      File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n-      File oldmeta \u003d replicaInfo.getMetaFile();\n-      ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n-          replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n-          v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n-      File newmeta \u003d newReplicaInfo.getMetaFile();\n-\n-      // rename meta file to rbw directory\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n-      }\n-      try {\n-        NativeIO.renameTo(oldmeta, newmeta);\n-      } catch (IOException e) {\n-        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-            \" Unable to move meta file  \" + oldmeta +\n-            \" to rbw dir \" + newmeta, e);\n-      }\n-\n-      // rename block file to rbw directory\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n-            + \", file length\u003d\" + blkfile.length());\n-      }\n-      try {\n-        NativeIO.renameTo(blkfile, newBlkFile);\n-      } catch (IOException e) {\n-        try {\n-          NativeIO.renameTo(newmeta, oldmeta);\n-        } catch (IOException ex) {\n-          LOG.warn(\"Cannot move meta file \" + newmeta +\n-              \"back to the finalized directory \" + oldmeta, ex);\n-        }\n-        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-            \" Unable to move block file \" + blkfile +\n-            \" to rbw dir \" + newBlkFile, e);\n-      }\n-\n       // Replace finalized replica by a RBW replica in replicas map\n-      volumeMap.add(bpid, newReplicaInfo);\n-      v.reserveSpaceForReplica(bytesReserved);\n-      return newReplicaInfo;\n+      volumeMap.add(bpid, rip.getReplicaInfo());\n+      return rip;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInPipeline append(String bpid,\n      ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      // If the block is cached, start uncaching it.\n      if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n        throw new IOException(\"Only a Finalized replica can be appended to; \"\n            + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n            + replicaInfo.getState());\n      }\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n      // If there are any hardlinks to the block, break them.  This ensures\n      // we are not appending to a file that is part of a previous/ directory.\n      replicaInfo.breakHardLinksIfNeeded();\n\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n          newGS, estimateBlockLen);\n      if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n        throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n            \" returned a replica of state \" + rip.getReplicaInfo().getState()\n            + \"; expected RBW\");\n      }\n      // Replace finalized replica by a RBW replica in replicas map\n      volumeMap.add(bpid, rip.getReplicaInfo());\n      return rip;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "ReplicaBeingWritten",
            "newValue": "ReplicaInPipeline"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/09/16 6:22 PM",
          "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.77,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,63 +1,30 @@\n-  private ReplicaBeingWritten append(String bpid,\n-      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n+  private ReplicaInPipeline append(String bpid,\n+      ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       // If the block is cached, start uncaching it.\n+      if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n+        throw new IOException(\"Only a Finalized replica can be appended to; \"\n+            + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n+            + replicaInfo.getState());\n+      }\n+      // If the block is cached, start uncaching it.\n       cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n \n-      // If there are any hardlinks to the block, break them.  This ensures we\n-      // are not appending to a file that is part of a previous/ directory.\n+      // If there are any hardlinks to the block, break them.  This ensures\n+      // we are not appending to a file that is part of a previous/ directory.\n       replicaInfo.breakHardLinksIfNeeded();\n \n-      // construct a RBW replica with the new GS\n-      File blkfile \u003d replicaInfo.getBlockFile();\n-      FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n-      long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n-      if (v.getAvailable() \u003c bytesReserved) {\n-        throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n-            + replicaInfo);\n+      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n+      ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n+          newGS, estimateBlockLen);\n+      if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n+        throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n+            \" returned a replica of state \" + rip.getReplicaInfo().getState()\n+            + \"; expected RBW\");\n       }\n-      File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n-      File oldmeta \u003d replicaInfo.getMetaFile();\n-      ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n-          replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n-          v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n-      File newmeta \u003d newReplicaInfo.getMetaFile();\n-\n-      // rename meta file to rbw directory\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n-      }\n-      try {\n-        NativeIO.renameTo(oldmeta, newmeta);\n-      } catch (IOException e) {\n-        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-            \" Unable to move meta file  \" + oldmeta +\n-            \" to rbw dir \" + newmeta, e);\n-      }\n-\n-      // rename block file to rbw directory\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n-            + \", file length\u003d\" + blkfile.length());\n-      }\n-      try {\n-        NativeIO.renameTo(blkfile, newBlkFile);\n-      } catch (IOException e) {\n-        try {\n-          NativeIO.renameTo(newmeta, oldmeta);\n-        } catch (IOException ex) {\n-          LOG.warn(\"Cannot move meta file \" + newmeta +\n-              \"back to the finalized directory \" + oldmeta, ex);\n-        }\n-        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-            \" Unable to move block file \" + blkfile +\n-            \" to rbw dir \" + newBlkFile, e);\n-      }\n-\n       // Replace finalized replica by a RBW replica in replicas map\n-      volumeMap.add(bpid, newReplicaInfo);\n-      v.reserveSpaceForReplica(bytesReserved);\n-      return newReplicaInfo;\n+      volumeMap.add(bpid, rip.getReplicaInfo());\n+      return rip;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInPipeline append(String bpid,\n      ReplicaInfo replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      // If the block is cached, start uncaching it.\n      if (replicaInfo.getState() !\u003d ReplicaState.FINALIZED) {\n        throw new IOException(\"Only a Finalized replica can be appended to; \"\n            + \"Replica with blk id \" + replicaInfo.getBlockId() + \" has state \"\n            + replicaInfo.getState());\n      }\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n      // If there are any hardlinks to the block, break them.  This ensures\n      // we are not appending to a file that is part of a previous/ directory.\n      replicaInfo.breakHardLinksIfNeeded();\n\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      ReplicaInPipeline rip \u003d v.append(bpid, replicaInfo,\n          newGS, estimateBlockLen);\n      if (rip.getReplicaInfo().getState() !\u003d ReplicaState.RBW) {\n        throw new IOException(\"Append on block \" + replicaInfo.getBlockId() +\n            \" returned a replica of state \" + rip.getReplicaInfo().getState()\n            + \"; expected RBW\");\n      }\n      // Replace finalized replica by a RBW replica in replicas map\n      volumeMap.add(bpid, rip.getReplicaInfo());\n      return rip;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,61 +1,63 @@\n-  private synchronized ReplicaBeingWritten append(String bpid,\n+  private ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n-    // If the block is cached, start uncaching it.\n-    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      // If the block is cached, start uncaching it.\n+      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n \n-    // If there are any hardlinks to the block, break them.  This ensures we are\n-    // not appending to a file that is part of a previous/ directory.\n-    replicaInfo.breakHardLinksIfNeeded();\n-    \n-    // construct a RBW replica with the new GS\n-    File blkfile \u003d replicaInfo.getBlockFile();\n-    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n-    long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n-    if (v.getAvailable() \u003c bytesReserved) {\n-      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n-          + replicaInfo);\n-    }\n-    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n-    File oldmeta \u003d replicaInfo.getMetaFile();\n-    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n-        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n-        v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n-    File newmeta \u003d newReplicaInfo.getMetaFile();\n+      // If there are any hardlinks to the block, break them.  This ensures we\n+      // are not appending to a file that is part of a previous/ directory.\n+      replicaInfo.breakHardLinksIfNeeded();\n \n-    // rename meta file to rbw directory\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n-    }\n-    try {\n-      NativeIO.renameTo(oldmeta, newmeta);\n-    } catch (IOException e) {\n-      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-                            \" Unable to move meta file  \" + oldmeta +\n-                            \" to rbw dir \" + newmeta, e);\n-    }\n-\n-    // rename block file to rbw directory\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n-          + \", file length\u003d\" + blkfile.length());\n-    }\n-    try {\n-      NativeIO.renameTo(blkfile, newBlkFile);\n-    } catch (IOException e) {\n-      try {\n-        NativeIO.renameTo(newmeta, oldmeta);\n-      } catch (IOException ex) {\n-        LOG.warn(\"Cannot move meta file \" + newmeta + \n-            \"back to the finalized directory \" + oldmeta, ex);\n+      // construct a RBW replica with the new GS\n+      File blkfile \u003d replicaInfo.getBlockFile();\n+      FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n+      long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n+      if (v.getAvailable() \u003c bytesReserved) {\n+        throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n+            + replicaInfo);\n       }\n-      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-                              \" Unable to move block file \" + blkfile +\n-                              \" to rbw dir \" + newBlkFile, e);\n+      File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n+      File oldmeta \u003d replicaInfo.getMetaFile();\n+      ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n+          replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n+          v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n+      File newmeta \u003d newReplicaInfo.getMetaFile();\n+\n+      // rename meta file to rbw directory\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n+      }\n+      try {\n+        NativeIO.renameTo(oldmeta, newmeta);\n+      } catch (IOException e) {\n+        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n+            \" Unable to move meta file  \" + oldmeta +\n+            \" to rbw dir \" + newmeta, e);\n+      }\n+\n+      // rename block file to rbw directory\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n+            + \", file length\u003d\" + blkfile.length());\n+      }\n+      try {\n+        NativeIO.renameTo(blkfile, newBlkFile);\n+      } catch (IOException e) {\n+        try {\n+          NativeIO.renameTo(newmeta, oldmeta);\n+        } catch (IOException ex) {\n+          LOG.warn(\"Cannot move meta file \" + newmeta +\n+              \"back to the finalized directory \" + oldmeta, ex);\n+        }\n+        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n+            \" Unable to move block file \" + blkfile +\n+            \" to rbw dir \" + newBlkFile, e);\n+      }\n+\n+      // Replace finalized replica by a RBW replica in replicas map\n+      volumeMap.add(bpid, newReplicaInfo);\n+      v.reserveSpaceForReplica(bytesReserved);\n+      return newReplicaInfo;\n     }\n-    \n-    // Replace finalized replica by a RBW replica in replicas map\n-    volumeMap.add(bpid, newReplicaInfo);\n-    v.reserveSpaceForReplica(bytesReserved);\n-    return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n      // If there are any hardlinks to the block, break them.  This ensures we\n      // are not appending to a file that is part of a previous/ directory.\n      replicaInfo.breakHardLinksIfNeeded();\n\n      // construct a RBW replica with the new GS\n      File blkfile \u003d replicaInfo.getBlockFile();\n      FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n      long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n      if (v.getAvailable() \u003c bytesReserved) {\n        throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n            + replicaInfo);\n      }\n      File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n      File oldmeta \u003d replicaInfo.getMetaFile();\n      ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n          replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n          v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n      File newmeta \u003d newReplicaInfo.getMetaFile();\n\n      // rename meta file to rbw directory\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n      }\n      try {\n        NativeIO.renameTo(oldmeta, newmeta);\n      } catch (IOException e) {\n        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n            \" Unable to move meta file  \" + oldmeta +\n            \" to rbw dir \" + newmeta, e);\n      }\n\n      // rename block file to rbw directory\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n            + \", file length\u003d\" + blkfile.length());\n      }\n      try {\n        NativeIO.renameTo(blkfile, newBlkFile);\n      } catch (IOException e) {\n        try {\n          NativeIO.renameTo(newmeta, oldmeta);\n        } catch (IOException ex) {\n          LOG.warn(\"Cannot move meta file \" + newmeta +\n              \"back to the finalized directory \" + oldmeta, ex);\n        }\n        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n            \" Unable to move block file \" + blkfile +\n            \" to rbw dir \" + newBlkFile, e);\n      }\n\n      // Replace finalized replica by a RBW replica in replicas map\n      volumeMap.add(bpid, newReplicaInfo);\n      v.reserveSpaceForReplica(bytesReserved);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,61 +1,63 @@\n-  private synchronized ReplicaBeingWritten append(String bpid,\n+  private ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n-    // If the block is cached, start uncaching it.\n-    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      // If the block is cached, start uncaching it.\n+      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n \n-    // If there are any hardlinks to the block, break them.  This ensures we are\n-    // not appending to a file that is part of a previous/ directory.\n-    replicaInfo.breakHardLinksIfNeeded();\n-    \n-    // construct a RBW replica with the new GS\n-    File blkfile \u003d replicaInfo.getBlockFile();\n-    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n-    long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n-    if (v.getAvailable() \u003c bytesReserved) {\n-      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n-          + replicaInfo);\n-    }\n-    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n-    File oldmeta \u003d replicaInfo.getMetaFile();\n-    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n-        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n-        v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n-    File newmeta \u003d newReplicaInfo.getMetaFile();\n+      // If there are any hardlinks to the block, break them.  This ensures we\n+      // are not appending to a file that is part of a previous/ directory.\n+      replicaInfo.breakHardLinksIfNeeded();\n \n-    // rename meta file to rbw directory\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n-    }\n-    try {\n-      NativeIO.renameTo(oldmeta, newmeta);\n-    } catch (IOException e) {\n-      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-                            \" Unable to move meta file  \" + oldmeta +\n-                            \" to rbw dir \" + newmeta, e);\n-    }\n-\n-    // rename block file to rbw directory\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n-          + \", file length\u003d\" + blkfile.length());\n-    }\n-    try {\n-      NativeIO.renameTo(blkfile, newBlkFile);\n-    } catch (IOException e) {\n-      try {\n-        NativeIO.renameTo(newmeta, oldmeta);\n-      } catch (IOException ex) {\n-        LOG.warn(\"Cannot move meta file \" + newmeta + \n-            \"back to the finalized directory \" + oldmeta, ex);\n+      // construct a RBW replica with the new GS\n+      File blkfile \u003d replicaInfo.getBlockFile();\n+      FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n+      long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n+      if (v.getAvailable() \u003c bytesReserved) {\n+        throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n+            + replicaInfo);\n       }\n-      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n-                              \" Unable to move block file \" + blkfile +\n-                              \" to rbw dir \" + newBlkFile, e);\n+      File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n+      File oldmeta \u003d replicaInfo.getMetaFile();\n+      ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n+          replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n+          v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n+      File newmeta \u003d newReplicaInfo.getMetaFile();\n+\n+      // rename meta file to rbw directory\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n+      }\n+      try {\n+        NativeIO.renameTo(oldmeta, newmeta);\n+      } catch (IOException e) {\n+        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n+            \" Unable to move meta file  \" + oldmeta +\n+            \" to rbw dir \" + newmeta, e);\n+      }\n+\n+      // rename block file to rbw directory\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n+            + \", file length\u003d\" + blkfile.length());\n+      }\n+      try {\n+        NativeIO.renameTo(blkfile, newBlkFile);\n+      } catch (IOException e) {\n+        try {\n+          NativeIO.renameTo(newmeta, oldmeta);\n+        } catch (IOException ex) {\n+          LOG.warn(\"Cannot move meta file \" + newmeta +\n+              \"back to the finalized directory \" + oldmeta, ex);\n+        }\n+        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n+            \" Unable to move block file \" + blkfile +\n+            \" to rbw dir \" + newBlkFile, e);\n+      }\n+\n+      // Replace finalized replica by a RBW replica in replicas map\n+      volumeMap.add(bpid, newReplicaInfo);\n+      v.reserveSpaceForReplica(bytesReserved);\n+      return newReplicaInfo;\n     }\n-    \n-    // Replace finalized replica by a RBW replica in replicas map\n-    volumeMap.add(bpid, newReplicaInfo);\n-    v.reserveSpaceForReplica(bytesReserved);\n-    return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n      // If there are any hardlinks to the block, break them.  This ensures we\n      // are not appending to a file that is part of a previous/ directory.\n      replicaInfo.breakHardLinksIfNeeded();\n\n      // construct a RBW replica with the new GS\n      File blkfile \u003d replicaInfo.getBlockFile();\n      FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n      long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n      if (v.getAvailable() \u003c bytesReserved) {\n        throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n            + replicaInfo);\n      }\n      File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n      File oldmeta \u003d replicaInfo.getMetaFile();\n      ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n          replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n          v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n      File newmeta \u003d newReplicaInfo.getMetaFile();\n\n      // rename meta file to rbw directory\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n      }\n      try {\n        NativeIO.renameTo(oldmeta, newmeta);\n      } catch (IOException e) {\n        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n            \" Unable to move meta file  \" + oldmeta +\n            \" to rbw dir \" + newmeta, e);\n      }\n\n      // rename block file to rbw directory\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n            + \", file length\u003d\" + blkfile.length());\n      }\n      try {\n        NativeIO.renameTo(blkfile, newBlkFile);\n      } catch (IOException e) {\n        try {\n          NativeIO.renameTo(newmeta, oldmeta);\n        } catch (IOException ex) {\n          LOG.warn(\"Cannot move meta file \" + newmeta +\n              \"back to the finalized directory \" + oldmeta, ex);\n        }\n        throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n            \" Unable to move block file \" + blkfile +\n            \" to rbw dir \" + newBlkFile, e);\n      }\n\n      // Replace finalized replica by a RBW replica in replicas map\n      volumeMap.add(bpid, newReplicaInfo);\n      v.reserveSpaceForReplica(bytesReserved);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "a9a607f8fc0d996af3fb37f7efa7591d6655900d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10271. Extra bytes are getting released from reservedSpace for append (Contributed by Brahma Reddy Battula)\n",
      "commitDate": "11/04/16 11:14 PM",
      "commitName": "a9a607f8fc0d996af3fb37f7efa7591d6655900d",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "06/04/16 9:07 PM",
      "commitNameOld": "4bd7cbc29d142fc56324156333b9a8a7d7b68042",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 5.09,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,60 +1,61 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n \n     // If there are any hardlinks to the block, break them.  This ensures we are\n     // not appending to a file that is part of a previous/ directory.\n     replicaInfo.breakHardLinksIfNeeded();\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n-    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n+    long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n+    if (v.getAvailable() \u003c bytesReserved) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n-        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n+        v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n-    v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n+    v.reserveSpaceForReplica(bytesReserved);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n    // If there are any hardlinks to the block, break them.  This ensures we are\n    // not appending to a file that is part of a previous/ directory.\n    replicaInfo.breakHardLinksIfNeeded();\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    long bytesReserved \u003d estimateBlockLen - replicaInfo.getNumBytes();\n    if (v.getAvailable() \u003c bytesReserved) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread(), bytesReserved);\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    v.reserveSpaceForReplica(bytesReserved);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "bb540ba85aa37d9fe31e640665158afe8a936230": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9589. Block files which have been hardlinked should be duplicated before the DataNode appends to the them (cmccabe)\n",
      "commitDate": "22/12/15 9:36 AM",
      "commitName": "bb540ba85aa37d9fe31e640665158afe8a936230",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "15/12/15 12:32 AM",
      "commitNameOld": "96d307e1e320eafb470faf7bd47af3341c399d55",
      "commitAuthorOld": "Plamen Jeliazkov",
      "daysBetweenCommits": 7.38,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,60 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n+\n+    // If there are any hardlinks to the block, break them.  This ensures we are\n+    // not appending to a file that is part of a previous/ directory.\n+    replicaInfo.breakHardLinksIfNeeded();\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n\n    // If there are any hardlinks to the block, break them.  This ensures we are\n    // not appending to a file that is part of a previous/ directory.\n    replicaInfo.breakHardLinksIfNeeded();\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "de522d2cd46be13806d13aa5f373b310e0ad6693": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Revert \"HDFS-8860. Remove unused Replica copyOnWrite code (Lei (Eddy) Xu via Colin P. McCabe)\"\"\n\nThis reverts commit 7f393a6f61f5a34a1de11481ad321c6a941d5d27.\n",
      "commitDate": "14/12/15 11:25 AM",
      "commitName": "de522d2cd46be13806d13aa5f373b310e0ad6693",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "11/12/15 6:44 AM",
      "commitNameOld": "a48301791e9564363bc2abad4e89e344b0d7a5ff",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 3.19,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,56 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n-    // unlink the finalized replica\n-    replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "7f393a6f61f5a34a1de11481ad321c6a941d5d27": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-8860. Remove unused Replica copyOnWrite code (Lei (Eddy) Xu via Colin P. McCabe)\"\n\nThis reverts commit a153b9601ad8628fdd608d8696310ca8c1f58ff0.\n\nConflicts:\n\thadoop-hdfs-project/hadoop-hdfs/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/DataNodeTestUtils.java\n",
      "commitDate": "10/12/15 12:57 PM",
      "commitName": "7f393a6f61f5a34a1de11481ad321c6a941d5d27",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "26/09/15 11:08 AM",
      "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 75.12,
      "commitsBetweenForRepo": 551,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,58 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n+    // unlink the finalized replica\n+    replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "92c1af1646b1d91a2ab7821e4f7d450e3b6e10bb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6955. DN should reserve disk space for a full block when creating tmp files (Contributed by Kanaka Kumar Avvaru)\n",
      "commitDate": "18/09/15 4:07 AM",
      "commitName": "92c1af1646b1d91a2ab7821e4f7d450e3b6e10bb",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "08/09/15 6:37 PM",
      "commitNameOld": "a153b9601ad8628fdd608d8696310ca8c1f58ff0",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 9.4,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n-    v.reserveSpaceForRbw(estimateBlockLen - replicaInfo.getNumBytes());\n+    v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    v.reserveSpaceForReplica(estimateBlockLen - replicaInfo.getNumBytes());\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "a153b9601ad8628fdd608d8696310ca8c1f58ff0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8860. Remove unused Replica copyOnWrite code (Lei (Eddy) Xu via Colin P. McCabe)\n",
      "commitDate": "08/09/15 6:37 PM",
      "commitName": "a153b9601ad8628fdd608d8696310ca8c1f58ff0",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "26/08/15 2:02 PM",
      "commitNameOld": "c992bcf9c136d3df686655a80e636bb7bb0664da",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 13.19,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,56 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n-    // unlink the finalized replica\n-    replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     v.reserveSpaceForRbw(estimateBlockLen - replicaInfo.getNumBytes());\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    v.reserveSpaceForRbw(estimateBlockLen - replicaInfo.getNumBytes());\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "d1fa58292e87bc29b4ef1278368c2be938a0afc4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6898. DN must reserve space for a full block when an RBW block is created. (Contributed by Arpit Agarwal)\n",
      "commitDate": "06/09/14 9:04 PM",
      "commitName": "d1fa58292e87bc29b4ef1278368c2be938a0afc4",
      "commitAuthor": "arp",
      "commitDateOld": "29/08/14 1:00 PM",
      "commitNameOld": "7eab2a29a5706ce10912c12fa225ef6b27a82cbe",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 8.34,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n-        v, newBlkFile.getParentFile(), Thread.currentThread());\n+        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n-    \n+    v.reserveSpaceForRbw(estimateBlockLen - replicaInfo.getNumBytes());\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread(), estimateBlockLen);\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    v.reserveSpaceForRbw(estimateBlockLen - replicaInfo.getNumBytes());\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "fba994ffe20d387e8ed875e727fc3d93f7097101": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5648. Get rid of FsDatasetImpl#perVolumeReplicaMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1550357 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 11:01 PM",
      "commitName": "fba994ffe20d387e8ed875e727fc3d93f7097101",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "03/12/13 8:30 AM",
      "commitNameOld": "a1aa1836fb6831c25efe326cdfdc014370cf5957",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 8.6,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,58 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n-    perVolumeReplicaMap.get(v.getStorageID()).add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "97199baea1c41a66bd2a88bda31742ef6ddcb5dc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5394: Fix race conditions in DN caching and uncaching (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1539909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/11/13 7:00 PM",
      "commitName": "97199baea1c41a66bd2a88bda31742ef6ddcb5dc",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "21/10/13 12:29 PM",
      "commitNameOld": "f9c08d02ebe4a5477cf5d753f0d9d48fc6f9fa48",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 17.31,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n-    // uncache the block\n+    // If the block is cached, start uncaching it.\n     cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "f39f8c57344ede533ca4363c98230f3a0c401a76": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5401. Fix NPE in Directory Scanner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1535158 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/10/13 1:28 PM",
      "commitName": "f39f8c57344ede533ca4363c98230f3a0c401a76",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/10/13 6:28 PM",
      "commitNameOld": "01f37e42f050207b7659bf74e2484cf8bdae2d89",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,57 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n-    perVolumeReplicaMap.get(v).add(bpid, newReplicaInfo);\n+    perVolumeReplicaMap.get(v.getStorageID()).add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    perVolumeReplicaMap.get(v.getStorageID()).add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "15d08c4778350a86d7bae0174aeb48f8d8f61cce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5349. DNA_CACHE and DNA_UNCACHE should be by blockId only (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532116 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/10/13 3:19 PM",
      "commitName": "15d08c4778350a86d7bae0174aeb48f8d8f61cce",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "23/08/13 8:41 PM",
      "commitNameOld": "b992219fa13ccee2b417d91222fd0c3e8c3ffe11",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 51.78,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // uncache the block\n-    cacheManager.uncacheBlock(bpid, replicaInfo);\n+    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // uncache the block\n    cacheManager.uncacheBlock(bpid, replicaInfo.getBlockId());\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4988. Datanode must support all the volumes as individual storages.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1526969 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 9:05 AM",
      "commitName": "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "10/09/13 11:30 PM",
      "commitNameOld": "b2976af14034c6e2a7e9964535b9f363bfc31150",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 16.4,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,57 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n+    perVolumeReplicaMap.get(v).add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    perVolumeReplicaMap.get(v).add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "b992219fa13ccee2b417d91222fd0c3e8c3ffe11": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5050.  Add DataNode support for mlock and munlock  (contributed by Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1517106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/13 8:41 PM",
      "commitName": "b992219fa13ccee2b417d91222fd0c3e8c3ffe11",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "25/07/13 9:42 PM",
      "commitNameOld": "7723b139d55fc2c3954939559cb4914046a0f81c",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 28.96,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,58 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n+    // uncache the block\n+    cacheManager.uncacheBlock(bpid, replicaInfo);\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     try {\n       NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n     try {\n       NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n         NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // uncache the block\n    cacheManager.uncacheBlock(bpid, replicaInfo);\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "e7380b4f9c4f29bf5f0c07b95ddba88b0ef3765d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4428. FsDatasetImpl should disclose what the error is when a rename fails. Contributed by Colin Patrick McCabe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1440865 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/13 11:29 PM",
      "commitName": "e7380b4f9c4f29bf5f0c07b95ddba88b0ef3765d",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "08/01/13 1:05 PM",
      "commitNameOld": "5cdb7e5ce7f0c3129749be8f29e2f11c0e0f2269",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 22.43,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,56 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n     FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n-    if (!oldmeta.renameTo(newmeta)) {\n+    try {\n+      NativeIO.renameTo(oldmeta, newmeta);\n+    } catch (IOException e) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n-                            \" to rbw dir \" + newmeta);\n+                            \" to rbw dir \" + newmeta, e);\n     }\n \n     // rename block file to rbw directory\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n           + \", file length\u003d\" + blkfile.length());\n     }\n-    if (!blkfile.renameTo(newBlkFile)) {\n-      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n+    try {\n+      NativeIO.renameTo(blkfile, newBlkFile);\n+    } catch (IOException e) {\n+      try {\n+        NativeIO.renameTo(newmeta, oldmeta);\n+      } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta + \n-            \"back to the finalized directory \" + oldmeta);\n+            \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n-                              \" to rbw dir \" + newBlkFile);\n+                              \" to rbw dir \" + newBlkFile, e);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,50 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n-    FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n+    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n-    if (DataNode.LOG.isDebugEnabled()) {\n-      DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     if (!oldmeta.renameTo(newmeta)) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta);\n     }\n \n     // rename block file to rbw directory\n-    if (DataNode.LOG.isDebugEnabled()) {\n-      DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n-      DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n+          + \", file length\u003d\" + blkfile.length());\n     }\n     if (!blkfile.renameTo(newBlkFile)) {\n       if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n-        DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n+        LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    if (!oldmeta.renameTo(newmeta)) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    if (!blkfile.renameTo(newBlkFile)) {\n      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
            "oldMethodName": "append",
            "newMethodName": "append"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,50 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n-    FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n+    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n-    if (DataNode.LOG.isDebugEnabled()) {\n-      DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     if (!oldmeta.renameTo(newmeta)) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta);\n     }\n \n     // rename block file to rbw directory\n-    if (DataNode.LOG.isDebugEnabled()) {\n-      DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n-      DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n+          + \", file length\u003d\" + blkfile.length());\n     }\n     if (!blkfile.renameTo(newBlkFile)) {\n       if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n-        DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n+        LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    if (!oldmeta.renameTo(newmeta)) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta);\n    }\n\n    // rename block file to rbw directory\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    if (!blkfile.renameTo(newBlkFile)) {\n      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n        LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2887. FSVolume, is a part of FSDatasetInterface implementation, should not be referred outside FSDataset.  A new FSVolumeInterface is defined.  The BlockVolumeChoosingPolicy.chooseVolume(..) method signature is also updated.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1242087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/02/12 12:58 PM",
      "commitName": "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "02/02/12 11:26 PM",
      "commitNameOld": "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.56,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n   private synchronized ReplicaBeingWritten append(String bpid,\n       FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n       throws IOException {\n     // unlink the finalized replica\n     replicaInfo.unlinkBlock(1);\n     \n     // construct a RBW replica with the new GS\n     File blkfile \u003d replicaInfo.getBlockFile();\n-    FSVolume v \u003d replicaInfo.getVolume();\n+    FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n     if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n       throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n           + replicaInfo);\n     }\n     File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n     File oldmeta \u003d replicaInfo.getMetaFile();\n     ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n         replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n         v, newBlkFile.getParentFile(), Thread.currentThread());\n     File newmeta \u003d newReplicaInfo.getMetaFile();\n \n     // rename meta file to rbw directory\n     if (DataNode.LOG.isDebugEnabled()) {\n       DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n     }\n     if (!oldmeta.renameTo(newmeta)) {\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta);\n     }\n \n     // rename block file to rbw directory\n     if (DataNode.LOG.isDebugEnabled()) {\n       DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n       DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n     }\n     if (!blkfile.renameTo(newBlkFile)) {\n       if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n         DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n             \"back to the finalized directory \" + oldmeta);\n       }\n       throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                               \" Unable to move block file \" + blkfile +\n                               \" to rbw dir \" + newBlkFile);\n     }\n     \n     // Replace finalized replica by a RBW replica in replicas map\n     volumeMap.add(bpid, newReplicaInfo);\n     \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    if (!oldmeta.renameTo(newmeta)) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta);\n    }\n\n    // rename block file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n      DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n    }\n    if (!blkfile.renameTo(newBlkFile)) {\n      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n        DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FSVolume v \u003d replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    if (!oldmeta.renameTo(newmeta)) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta);\n    }\n\n    // rename block file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n      DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n    }\n    if (!blkfile.renameTo(newBlkFile)) {\n      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n        DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FSVolume v \u003d replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    if (!oldmeta.renameTo(newmeta)) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta);\n    }\n\n    // rename block file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n      DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n    }\n    if (!blkfile.renameTo(newBlkFile)) {\n      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n        DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,50 @@\n+  private synchronized ReplicaBeingWritten append(String bpid,\n+      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n+      throws IOException {\n+    // unlink the finalized replica\n+    replicaInfo.unlinkBlock(1);\n+    \n+    // construct a RBW replica with the new GS\n+    File blkfile \u003d replicaInfo.getBlockFile();\n+    FSVolume v \u003d replicaInfo.getVolume();\n+    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n+      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n+          + replicaInfo);\n+    }\n+    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n+    File oldmeta \u003d replicaInfo.getMetaFile();\n+    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n+        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n+        v, newBlkFile.getParentFile(), Thread.currentThread());\n+    File newmeta \u003d newReplicaInfo.getMetaFile();\n+\n+    // rename meta file to rbw directory\n+    if (DataNode.LOG.isDebugEnabled()) {\n+      DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n+    }\n+    if (!oldmeta.renameTo(newmeta)) {\n+      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n+                            \" Unable to move meta file  \" + oldmeta +\n+                            \" to rbw dir \" + newmeta);\n+    }\n+\n+    // rename block file to rbw directory\n+    if (DataNode.LOG.isDebugEnabled()) {\n+      DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n+      DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n+    }\n+    if (!blkfile.renameTo(newBlkFile)) {\n+      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n+        DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n+            \"back to the finalized directory \" + oldmeta);\n+      }\n+      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n+                              \" Unable to move block file \" + blkfile +\n+                              \" to rbw dir \" + newBlkFile);\n+    }\n+    \n+    // Replace finalized replica by a RBW replica in replicas map\n+    volumeMap.add(bpid, newReplicaInfo);\n+    \n+    return newReplicaInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized ReplicaBeingWritten append(String bpid,\n      FinalizedReplica replicaInfo, long newGS, long estimateBlockLen)\n      throws IOException {\n    // unlink the finalized replica\n    replicaInfo.unlinkBlock(1);\n    \n    // construct a RBW replica with the new GS\n    File blkfile \u003d replicaInfo.getBlockFile();\n    FSVolume v \u003d replicaInfo.getVolume();\n    if (v.getAvailable() \u003c estimateBlockLen - replicaInfo.getNumBytes()) {\n      throw new DiskOutOfSpaceException(\"Insufficient space for appending to \"\n          + replicaInfo);\n    }\n    File newBlkFile \u003d new File(v.getRbwDir(bpid), replicaInfo.getBlockName());\n    File oldmeta \u003d replicaInfo.getMetaFile();\n    ReplicaBeingWritten newReplicaInfo \u003d new ReplicaBeingWritten(\n        replicaInfo.getBlockId(), replicaInfo.getNumBytes(), newGS,\n        v, newBlkFile.getParentFile(), Thread.currentThread());\n    File newmeta \u003d newReplicaInfo.getMetaFile();\n\n    // rename meta file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    if (!oldmeta.renameTo(newmeta)) {\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta);\n    }\n\n    // rename block file to rbw directory\n    if (DataNode.LOG.isDebugEnabled()) {\n      DataNode.LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile);\n      DataNode.LOG.debug(\"Old block file length is \" + blkfile.length());\n    }\n    if (!blkfile.renameTo(newBlkFile)) {\n      if (!newmeta.renameTo(oldmeta)) {  // restore the meta file\n        DataNode.LOG.warn(\"Cannot move meta file \" + newmeta + \n            \"back to the finalized directory \" + oldmeta);\n      }\n      throw new IOException(\"Block \" + replicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile);\n    }\n    \n    // Replace finalized replica by a RBW replica in replicas map\n    volumeMap.add(bpid, newReplicaInfo);\n    \n    return newReplicaInfo;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
    }
  }
}