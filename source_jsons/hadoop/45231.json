{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RemoteRequestsTable.java",
  "functionName": "addResourceRequest",
  "functionId": "addResourceRequest___allocationRequestId-Long__priority-Priority__resourceName-String__execTypeReq-ExecutionTypeRequest__capability-Resource__req-T__relaxLocality-boolean__labelExpression-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
  "functionStartLine": 253,
  "functionEndLine": 280,
  "numCommitsSeen": 13,
  "timeTaken": 5689,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "aae629913cee0157c945a2c7384c7bf398f10616",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
    "19c743c1bbcaf3df8f1d63e557143c960a538c42",
    "51432779588fdd741b4840601f5db637ec783d92"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "aae629913cee0157c945a2c7384c7bf398f10616": "Ymultichange(Yparameterchange,Ybodychange)",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": "Ymultichange(Yparameterchange,Ybodychange)",
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": "Ymultichange(Yparameterchange,Ybodychange)",
    "51432779588fdd741b4840601f5db637ec783d92": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "15/02/18 11:07 PM",
      "commitNameOld": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 392.68,
      "commitsBetweenForRepo": 3628,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n       Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n       Resource capability, T req, boolean relaxLocality,\n       String labelExpression) {\n     ResourceRequestInfo resourceRequestInfo \u003d\n         get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n     if (resourceRequestInfo \u003d\u003d null) {\n       resourceRequestInfo \u003d\n           new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n               capability, relaxLocality);\n       put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n           resourceRequestInfo);\n     }\n     resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n \n     if (relaxLocality) {\n       resourceRequestInfo.containerRequests.add(req);\n     }\n \n     if (ResourceRequest.ANY.equals(resourceName)) {\n       resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n     }\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n-    }\n+    LOG.debug(\"Adding request to ask {}\", resourceRequestInfo.remoteRequest);\n+\n     return resourceRequestInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n      Resource capability, T req, boolean relaxLocality,\n      String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d\n        get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n              capability, relaxLocality);\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    LOG.debug(\"Adding request to ask {}\", resourceRequestInfo.remoteRequest);\n\n    return resourceRequestInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
      "extendedDetails": {}
    },
    "aae629913cee0157c945a2c7384c7bf398f10616": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 11:07 PM",
      "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
          "commitDate": "15/02/18 11:07 PM",
          "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
          "commitAuthor": "Sunil G",
          "commitDateOld": "31/10/17 1:09 AM",
          "commitNameOld": "c02d2ba50db8a355ea03081c3984b2ea0c375a3f",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 107.96,
          "commitsBetweenForRepo": 721,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,29 @@\n   ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n       Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n-      ProfileCapability capability, T req, boolean relaxLocality,\n+      Resource capability, T req, boolean relaxLocality,\n       String labelExpression) {\n     ResourceRequestInfo resourceRequestInfo \u003d\n         get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n     if (resourceRequestInfo \u003d\u003d null) {\n       resourceRequestInfo \u003d\n           new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n-              capability.getProfileCapabilityOverride(), relaxLocality,\n-              capability.getProfileName());\n+              capability, relaxLocality);\n       put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n           resourceRequestInfo);\n     }\n     resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n \n     if (relaxLocality) {\n       resourceRequestInfo.containerRequests.add(req);\n     }\n \n     if (ResourceRequest.ANY.equals(resourceName)) {\n       resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n     }\n     return resourceRequestInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n      Resource capability, T req, boolean relaxLocality,\n      String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d\n        get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n              capability, relaxLocality);\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n    }\n    return resourceRequestInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
          "extendedDetails": {
            "oldValue": "[allocationRequestId-Long, priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-ProfileCapability, req-T, relaxLocality-boolean, labelExpression-String]",
            "newValue": "[allocationRequestId-Long, priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-Resource, req-T, relaxLocality-boolean, labelExpression-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
          "commitDate": "15/02/18 11:07 PM",
          "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
          "commitAuthor": "Sunil G",
          "commitDateOld": "31/10/17 1:09 AM",
          "commitNameOld": "c02d2ba50db8a355ea03081c3984b2ea0c375a3f",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 107.96,
          "commitsBetweenForRepo": 721,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,29 @@\n   ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n       Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n-      ProfileCapability capability, T req, boolean relaxLocality,\n+      Resource capability, T req, boolean relaxLocality,\n       String labelExpression) {\n     ResourceRequestInfo resourceRequestInfo \u003d\n         get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n     if (resourceRequestInfo \u003d\u003d null) {\n       resourceRequestInfo \u003d\n           new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n-              capability.getProfileCapabilityOverride(), relaxLocality,\n-              capability.getProfileName());\n+              capability, relaxLocality);\n       put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n           resourceRequestInfo);\n     }\n     resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n \n     if (relaxLocality) {\n       resourceRequestInfo.containerRequests.add(req);\n     }\n \n     if (ResourceRequest.ANY.equals(resourceName)) {\n       resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n     }\n     return resourceRequestInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n      Resource capability, T req, boolean relaxLocality,\n      String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d\n        get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n              capability, relaxLocality);\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n    }\n    return resourceRequestInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
          "extendedDetails": {}
        }
      ]
    },
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "26/08/16 5:14 PM",
          "commitNameOld": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 381.67,
          "commitsBetweenForRepo": 2354,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,30 @@\n   ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n       Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n-      Resource capability, T req, boolean relaxLocality,\n+      ProfileCapability capability, T req, boolean relaxLocality,\n       String labelExpression) {\n-    ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n-        execTypeReq.getExecutionType(), capability);\n+    ResourceRequestInfo resourceRequestInfo \u003d\n+        get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n     if (resourceRequestInfo \u003d\u003d null) {\n       resourceRequestInfo \u003d\n           new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n-              capability, relaxLocality);\n+              capability.getProfileCapabilityOverride(), relaxLocality,\n+              capability.getProfileName());\n       put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n           resourceRequestInfo);\n     }\n     resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n \n     if (relaxLocality) {\n       resourceRequestInfo.containerRequests.add(req);\n     }\n \n     if (ResourceRequest.ANY.equals(resourceName)) {\n       resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n     }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n+    }\n     return resourceRequestInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n      ProfileCapability capability, T req, boolean relaxLocality,\n      String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d\n        get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n              capability.getProfileCapabilityOverride(), relaxLocality,\n              capability.getProfileName());\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n    }\n    return resourceRequestInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
          "extendedDetails": {
            "oldValue": "[allocationRequestId-Long, priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-Resource, req-T, relaxLocality-boolean, labelExpression-String]",
            "newValue": "[allocationRequestId-Long, priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-ProfileCapability, req-T, relaxLocality-boolean, labelExpression-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "26/08/16 5:14 PM",
          "commitNameOld": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 381.67,
          "commitsBetweenForRepo": 2354,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,30 @@\n   ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n       Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n-      Resource capability, T req, boolean relaxLocality,\n+      ProfileCapability capability, T req, boolean relaxLocality,\n       String labelExpression) {\n-    ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n-        execTypeReq.getExecutionType(), capability);\n+    ResourceRequestInfo resourceRequestInfo \u003d\n+        get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n     if (resourceRequestInfo \u003d\u003d null) {\n       resourceRequestInfo \u003d\n           new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n-              capability, relaxLocality);\n+              capability.getProfileCapabilityOverride(), relaxLocality,\n+              capability.getProfileName());\n       put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n           resourceRequestInfo);\n     }\n     resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n \n     if (relaxLocality) {\n       resourceRequestInfo.containerRequests.add(req);\n     }\n \n     if (ResourceRequest.ANY.equals(resourceName)) {\n       resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n     }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n+    }\n     return resourceRequestInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n      ProfileCapability capability, T req, boolean relaxLocality,\n      String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d\n        get(priority, resourceName, execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n              capability.getProfileCapabilityOverride(), relaxLocality,\n              capability.getProfileName());\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Adding request to ask \" + resourceRequestInfo.remoteRequest);\n    }\n    return resourceRequestInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
          "extendedDetails": {}
        }
      ]
    },
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4889. Changes in AMRMClient for identifying resource-requests explicitly. (Arun Suresh via wangda)\n",
      "commitDate": "26/08/16 5:14 PM",
      "commitName": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4889. Changes in AMRMClient for identifying resource-requests explicitly. (Arun Suresh via wangda)\n",
          "commitDate": "26/08/16 5:14 PM",
          "commitName": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/06/16 9:42 AM",
          "commitNameOld": "51432779588fdd741b4840601f5db637ec783d92",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 75.31,
          "commitsBetweenForRepo": 650,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  ResourceRequestInfo addResourceRequest(Priority priority, String resourceName,\n-      ExecutionTypeRequest execTypeReq, Resource capability, T req,\n-      boolean relaxLocality, String labelExpression) {\n+  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n+      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n+      Resource capability, T req, boolean relaxLocality,\n+      String labelExpression) {\n     ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n         execTypeReq.getExecutionType(), capability);\n     if (resourceRequestInfo \u003d\u003d null) {\n       resourceRequestInfo \u003d\n-          new ResourceRequestInfo(priority, resourceName, capability,\n-              relaxLocality);\n+          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n+              capability, relaxLocality);\n       put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n           resourceRequestInfo);\n     }\n     resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n \n     if (relaxLocality) {\n       resourceRequestInfo.containerRequests.add(req);\n     }\n \n     if (ResourceRequest.ANY.equals(resourceName)) {\n       resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n     }\n     return resourceRequestInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n      Resource capability, T req, boolean relaxLocality,\n      String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n        execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n              capability, relaxLocality);\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    return resourceRequestInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-Resource, req-T, relaxLocality-boolean, labelExpression-String]",
            "newValue": "[allocationRequestId-Long, priority-Priority, resourceName-String, execTypeReq-ExecutionTypeRequest, capability-Resource, req-T, relaxLocality-boolean, labelExpression-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4889. Changes in AMRMClient for identifying resource-requests explicitly. (Arun Suresh via wangda)\n",
          "commitDate": "26/08/16 5:14 PM",
          "commitName": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/06/16 9:42 AM",
          "commitNameOld": "51432779588fdd741b4840601f5db637ec783d92",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 75.31,
          "commitsBetweenForRepo": 650,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  ResourceRequestInfo addResourceRequest(Priority priority, String resourceName,\n-      ExecutionTypeRequest execTypeReq, Resource capability, T req,\n-      boolean relaxLocality, String labelExpression) {\n+  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n+      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n+      Resource capability, T req, boolean relaxLocality,\n+      String labelExpression) {\n     ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n         execTypeReq.getExecutionType(), capability);\n     if (resourceRequestInfo \u003d\u003d null) {\n       resourceRequestInfo \u003d\n-          new ResourceRequestInfo(priority, resourceName, capability,\n-              relaxLocality);\n+          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n+              capability, relaxLocality);\n       put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n           resourceRequestInfo);\n     }\n     resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n     resourceRequestInfo.remoteRequest.setNumContainers(\n         resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n \n     if (relaxLocality) {\n       resourceRequestInfo.containerRequests.add(req);\n     }\n \n     if (ResourceRequest.ANY.equals(resourceName)) {\n       resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n     }\n     return resourceRequestInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ResourceRequestInfo addResourceRequest(Long allocationRequestId,\n      Priority priority, String resourceName, ExecutionTypeRequest execTypeReq,\n      Resource capability, T req, boolean relaxLocality,\n      String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n        execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(allocationRequestId, priority, resourceName,\n              capability, relaxLocality);\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    return resourceRequestInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java",
          "extendedDetails": {}
        }
      ]
    },
    "51432779588fdd741b4840601f5db637ec783d92": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5124. Modify AMRMClient to set the ExecutionType in the ResourceRequest. (asuresh)\n",
      "commitDate": "12/06/16 9:42 AM",
      "commitName": "51432779588fdd741b4840601f5db637ec783d92",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,25 @@\n+  ResourceRequestInfo addResourceRequest(Priority priority, String resourceName,\n+      ExecutionTypeRequest execTypeReq, Resource capability, T req,\n+      boolean relaxLocality, String labelExpression) {\n+    ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n+        execTypeReq.getExecutionType(), capability);\n+    if (resourceRequestInfo \u003d\u003d null) {\n+      resourceRequestInfo \u003d\n+          new ResourceRequestInfo(priority, resourceName, capability,\n+              relaxLocality);\n+      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n+          resourceRequestInfo);\n+    }\n+    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n+    resourceRequestInfo.remoteRequest.setNumContainers(\n+        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n+\n+    if (relaxLocality) {\n+      resourceRequestInfo.containerRequests.add(req);\n+    }\n+\n+    if (ResourceRequest.ANY.equals(resourceName)) {\n+      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n+    }\n+    return resourceRequestInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  ResourceRequestInfo addResourceRequest(Priority priority, String resourceName,\n      ExecutionTypeRequest execTypeReq, Resource capability, T req,\n      boolean relaxLocality, String labelExpression) {\n    ResourceRequestInfo resourceRequestInfo \u003d get(priority, resourceName,\n        execTypeReq.getExecutionType(), capability);\n    if (resourceRequestInfo \u003d\u003d null) {\n      resourceRequestInfo \u003d\n          new ResourceRequestInfo(priority, resourceName, capability,\n              relaxLocality);\n      put(priority, resourceName, execTypeReq.getExecutionType(), capability,\n          resourceRequestInfo);\n    }\n    resourceRequestInfo.remoteRequest.setExecutionTypeRequest(execTypeReq);\n    resourceRequestInfo.remoteRequest.setNumContainers(\n        resourceRequestInfo.remoteRequest.getNumContainers() + 1);\n\n    if (relaxLocality) {\n      resourceRequestInfo.containerRequests.add(req);\n    }\n\n    if (ResourceRequest.ANY.equals(resourceName)) {\n      resourceRequestInfo.remoteRequest.setNodeLabelExpression(labelExpression);\n    }\n    return resourceRequestInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/RemoteRequestsTable.java"
    }
  }
}