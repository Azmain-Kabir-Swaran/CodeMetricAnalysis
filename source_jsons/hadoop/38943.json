{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActivitiesLogger.java",
  "functionName": "recordAppActivityWithoutAllocation",
  "functionId": "recordAppActivityWithoutAllocation___activitiesManager-ActivitiesManager__node-SchedulerNode__application-SchedulerApplicationAttempt__schedulerKey-SchedulerRequestKey__diagnostic-String__appState-ActivityState__level-ActivityLevel",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
  "functionStartLine": 87,
  "functionEndLine": 141,
  "numCommitsSeen": 29,
  "timeTaken": 7106,
  "changeHistory": [
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
    "09763925025a3709e6098186348e1afd80cb9f71",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "7fa73fac2676875561269e9408215e012269a18c",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188"
  ],
  "changeHistoryShort": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": "Ymultichange(Yparameterchange,Ybodychange)",
    "09763925025a3709e6098186348e1afd80cb9f71": "Ybodychange",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ymultichange(Yparameterchange,Ybodychange)",
    "7fa73fac2676875561269e9408215e012269a18c": "Ybodychange",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": "Ybodychange",
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Ybodychange",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
      "commitDate": "29/08/19 3:14 AM",
      "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
          "commitDate": "29/08/19 3:14 AM",
          "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "06/06/19 6:59 AM",
          "commitNameOld": "09763925025a3709e6098186348e1afd80cb9f71",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 83.84,
          "commitsBetweenForRepo": 744,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,55 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application,\n         SchedulerRequestKey schedulerKey,\n-        String diagnostic, ActivityState appState) {\n+        String diagnostic, ActivityState appState, ActivityLevel level) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n-        if (schedulerKey !\u003d null) {\n-          String allocationRequestId \u003d\n-              String.valueOf(schedulerKey.getAllocationRequestId());\n-          String priorityStr \u003d getPriorityStr(schedulerKey);\n-          String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n-          String type \u003d \"container\";\n-          // Add application-container activity into specific node allocation.\n-          activitiesManager.addSchedulingActivityForNode(nodeId,\n-              requestName, null,\n-              priorityStr, appState, diagnostic, type,\n-              null);\n-          type \u003d \"request\";\n-          // Add application-container activity into specific node allocation.\n-          activitiesManager.addSchedulingActivityForNode(nodeId,\n-              application.getApplicationId().toString(), requestName,\n-              priorityStr, appState,\n-              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n+        String requestName \u003d null;\n+        Integer priority \u003d null;\n+        Long allocationRequestId \u003d null;\n+        if (level \u003d\u003d ActivityLevel.NODE || level \u003d\u003d ActivityLevel.REQUEST) {\n+          if (schedulerKey \u003d\u003d null) {\n+            LOG.warn(\"Request key should not be null at \" + level + \" level.\");\n+            return;\n+          }\n+          priority \u003d getPriority(schedulerKey);\n+          allocationRequestId \u003d schedulerKey.getAllocationRequestId();\n+          requestName \u003d getRequestName(priority, allocationRequestId);\n         }\n-        // Add queue-application activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(nodeId,\n-            application.getQueueName(),\n-            application.getApplicationId().toString(),\n-            application.getPriority().toString(), appState,\n-            schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n-                diagnostic, \"app\", null);\n+        switch (level) {\n+        case NODE:\n+          recordSchedulerActivityAtNodeLevel(activitiesManager, application,\n+              requestName, priority, allocationRequestId, null, nodeId,\n+              appState, diagnostic);\n+          break;\n+        case REQUEST:\n+          recordSchedulerActivityAtRequestLevel(activitiesManager, application,\n+              requestName, priority, allocationRequestId, nodeId, appState,\n+              diagnostic);\n+          break;\n+        case APP:\n+          recordSchedulerActivityAtAppLevel(activitiesManager, application,\n+              nodeId, appState, diagnostic);\n+          break;\n+        default:\n+          LOG.warn(\"Doesn\u0027t handle app activities at \" + level + \" level.\");\n+          break;\n+        }\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n-        String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(), null,\n-            getPriorityStr(schedulerKey), appState,\n-            diagnostic, type, nodeId,\n+            getPriority(schedulerKey), appState,\n+            diagnostic, level, nodeId,\n             schedulerKey \u003d\u003d null ?\n-                null : String.valueOf(schedulerKey.getAllocationRequestId()));\n+                null : schedulerKey.getAllocationRequestId());\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application,\n        SchedulerRequestKey schedulerKey,\n        String diagnostic, ActivityState appState, ActivityLevel level) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        String requestName \u003d null;\n        Integer priority \u003d null;\n        Long allocationRequestId \u003d null;\n        if (level \u003d\u003d ActivityLevel.NODE || level \u003d\u003d ActivityLevel.REQUEST) {\n          if (schedulerKey \u003d\u003d null) {\n            LOG.warn(\"Request key should not be null at \" + level + \" level.\");\n            return;\n          }\n          priority \u003d getPriority(schedulerKey);\n          allocationRequestId \u003d schedulerKey.getAllocationRequestId();\n          requestName \u003d getRequestName(priority, allocationRequestId);\n        }\n        switch (level) {\n        case NODE:\n          recordSchedulerActivityAtNodeLevel(activitiesManager, application,\n              requestName, priority, allocationRequestId, null, nodeId,\n              appState, diagnostic);\n          break;\n        case REQUEST:\n          recordSchedulerActivityAtRequestLevel(activitiesManager, application,\n              requestName, priority, allocationRequestId, nodeId, appState,\n              diagnostic);\n          break;\n        case APP:\n          recordSchedulerActivityAtAppLevel(activitiesManager, application,\n              nodeId, appState, diagnostic);\n          break;\n        default:\n          LOG.warn(\"Doesn\u0027t handle app activities at \" + level + \" level.\");\n          break;\n        }\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null,\n            getPriority(schedulerKey), appState,\n            diagnostic, level, nodeId,\n            schedulerKey \u003d\u003d null ?\n                null : schedulerKey.getAllocationRequestId());\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
          "extendedDetails": {
            "oldValue": "[activitiesManager-ActivitiesManager, node-SchedulerNode, application-SchedulerApplicationAttempt, schedulerKey-SchedulerRequestKey, diagnostic-String, appState-ActivityState]",
            "newValue": "[activitiesManager-ActivitiesManager, node-SchedulerNode, application-SchedulerApplicationAttempt, schedulerKey-SchedulerRequestKey, diagnostic-String, appState-ActivityState, level-ActivityLevel]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
          "commitDate": "29/08/19 3:14 AM",
          "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "06/06/19 6:59 AM",
          "commitNameOld": "09763925025a3709e6098186348e1afd80cb9f71",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 83.84,
          "commitsBetweenForRepo": 744,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,55 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application,\n         SchedulerRequestKey schedulerKey,\n-        String diagnostic, ActivityState appState) {\n+        String diagnostic, ActivityState appState, ActivityLevel level) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n-        if (schedulerKey !\u003d null) {\n-          String allocationRequestId \u003d\n-              String.valueOf(schedulerKey.getAllocationRequestId());\n-          String priorityStr \u003d getPriorityStr(schedulerKey);\n-          String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n-          String type \u003d \"container\";\n-          // Add application-container activity into specific node allocation.\n-          activitiesManager.addSchedulingActivityForNode(nodeId,\n-              requestName, null,\n-              priorityStr, appState, diagnostic, type,\n-              null);\n-          type \u003d \"request\";\n-          // Add application-container activity into specific node allocation.\n-          activitiesManager.addSchedulingActivityForNode(nodeId,\n-              application.getApplicationId().toString(), requestName,\n-              priorityStr, appState,\n-              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n+        String requestName \u003d null;\n+        Integer priority \u003d null;\n+        Long allocationRequestId \u003d null;\n+        if (level \u003d\u003d ActivityLevel.NODE || level \u003d\u003d ActivityLevel.REQUEST) {\n+          if (schedulerKey \u003d\u003d null) {\n+            LOG.warn(\"Request key should not be null at \" + level + \" level.\");\n+            return;\n+          }\n+          priority \u003d getPriority(schedulerKey);\n+          allocationRequestId \u003d schedulerKey.getAllocationRequestId();\n+          requestName \u003d getRequestName(priority, allocationRequestId);\n         }\n-        // Add queue-application activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(nodeId,\n-            application.getQueueName(),\n-            application.getApplicationId().toString(),\n-            application.getPriority().toString(), appState,\n-            schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n-                diagnostic, \"app\", null);\n+        switch (level) {\n+        case NODE:\n+          recordSchedulerActivityAtNodeLevel(activitiesManager, application,\n+              requestName, priority, allocationRequestId, null, nodeId,\n+              appState, diagnostic);\n+          break;\n+        case REQUEST:\n+          recordSchedulerActivityAtRequestLevel(activitiesManager, application,\n+              requestName, priority, allocationRequestId, nodeId, appState,\n+              diagnostic);\n+          break;\n+        case APP:\n+          recordSchedulerActivityAtAppLevel(activitiesManager, application,\n+              nodeId, appState, diagnostic);\n+          break;\n+        default:\n+          LOG.warn(\"Doesn\u0027t handle app activities at \" + level + \" level.\");\n+          break;\n+        }\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n-        String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(), null,\n-            getPriorityStr(schedulerKey), appState,\n-            diagnostic, type, nodeId,\n+            getPriority(schedulerKey), appState,\n+            diagnostic, level, nodeId,\n             schedulerKey \u003d\u003d null ?\n-                null : String.valueOf(schedulerKey.getAllocationRequestId()));\n+                null : schedulerKey.getAllocationRequestId());\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application,\n        SchedulerRequestKey schedulerKey,\n        String diagnostic, ActivityState appState, ActivityLevel level) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        String requestName \u003d null;\n        Integer priority \u003d null;\n        Long allocationRequestId \u003d null;\n        if (level \u003d\u003d ActivityLevel.NODE || level \u003d\u003d ActivityLevel.REQUEST) {\n          if (schedulerKey \u003d\u003d null) {\n            LOG.warn(\"Request key should not be null at \" + level + \" level.\");\n            return;\n          }\n          priority \u003d getPriority(schedulerKey);\n          allocationRequestId \u003d schedulerKey.getAllocationRequestId();\n          requestName \u003d getRequestName(priority, allocationRequestId);\n        }\n        switch (level) {\n        case NODE:\n          recordSchedulerActivityAtNodeLevel(activitiesManager, application,\n              requestName, priority, allocationRequestId, null, nodeId,\n              appState, diagnostic);\n          break;\n        case REQUEST:\n          recordSchedulerActivityAtRequestLevel(activitiesManager, application,\n              requestName, priority, allocationRequestId, nodeId, appState,\n              diagnostic);\n          break;\n        case APP:\n          recordSchedulerActivityAtAppLevel(activitiesManager, application,\n              nodeId, appState, diagnostic);\n          break;\n        default:\n          LOG.warn(\"Doesn\u0027t handle app activities at \" + level + \" level.\");\n          break;\n        }\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null,\n            getPriority(schedulerKey), appState,\n            diagnostic, level, nodeId,\n            schedulerKey \u003d\u003d null ?\n                null : schedulerKey.getAllocationRequestId());\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
          "extendedDetails": {}
        }
      ]
    },
    "09763925025a3709e6098186348e1afd80cb9f71": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9590. Correct incompatible, incomplete and redundant activities. Contributed by Tao Yang.\n",
      "commitDate": "06/06/19 6:59 AM",
      "commitName": "09763925025a3709e6098186348e1afd80cb9f71",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "06/05/19 5:00 AM",
      "commitNameOld": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 31.08,
      "commitsBetweenForRepo": 197,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application,\n         SchedulerRequestKey schedulerKey,\n         String diagnostic, ActivityState appState) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n         if (schedulerKey !\u003d null) {\n           String allocationRequestId \u003d\n               String.valueOf(schedulerKey.getAllocationRequestId());\n           String priorityStr \u003d getPriorityStr(schedulerKey);\n           String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n           String type \u003d \"container\";\n           // Add application-container activity into specific node allocation.\n           activitiesManager.addSchedulingActivityForNode(nodeId,\n               requestName, null,\n-              priorityStr, ActivityState.SKIPPED, diagnostic, type,\n+              priorityStr, appState, diagnostic, type,\n               null);\n           type \u003d \"request\";\n           // Add application-container activity into specific node allocation.\n           activitiesManager.addSchedulingActivityForNode(nodeId,\n               application.getApplicationId().toString(), requestName,\n-              priorityStr, ActivityState.SKIPPED,\n+              priorityStr, appState,\n               ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n         }\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n-            application.getPriority().toString(), ActivityState.SKIPPED,\n+            application.getPriority().toString(), appState,\n             schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n                 diagnostic, \"app\", null);\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(), null,\n             getPriorityStr(schedulerKey), appState,\n             diagnostic, type, nodeId,\n             schedulerKey \u003d\u003d null ?\n                 null : String.valueOf(schedulerKey.getAllocationRequestId()));\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application,\n        SchedulerRequestKey schedulerKey,\n        String diagnostic, ActivityState appState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        if (schedulerKey !\u003d null) {\n          String allocationRequestId \u003d\n              String.valueOf(schedulerKey.getAllocationRequestId());\n          String priorityStr \u003d getPriorityStr(schedulerKey);\n          String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n          String type \u003d \"container\";\n          // Add application-container activity into specific node allocation.\n          activitiesManager.addSchedulingActivityForNode(nodeId,\n              requestName, null,\n              priorityStr, appState, diagnostic, type,\n              null);\n          type \u003d \"request\";\n          // Add application-container activity into specific node allocation.\n          activitiesManager.addSchedulingActivityForNode(nodeId,\n              application.getApplicationId().toString(), requestName,\n              priorityStr, appState,\n              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n        }\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), appState,\n            schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n                diagnostic, \"app\", null);\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null,\n            getPriorityStr(schedulerKey), appState,\n            diagnostic, type, nodeId,\n            schedulerKey \u003d\u003d null ?\n                null : String.valueOf(schedulerKey.getAllocationRequestId()));\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
          "commitDate": "06/05/19 5:00 AM",
          "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "15/04/19 9:12 AM",
          "commitNameOld": "7fa73fac2676875561269e9408215e012269a18c",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 20.82,
          "commitsBetweenForRepo": 102,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,50 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n-        SchedulerApplicationAttempt application, Priority priority,\n+        SchedulerApplicationAttempt application,\n+        SchedulerRequestKey schedulerKey,\n         String diagnostic, ActivityState appState) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n-        String type \u003d \"container\";\n-        // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(nodeId,\n-            application.getApplicationId().toString(), null,\n-            priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n-        type \u003d \"app\";\n+        if (schedulerKey !\u003d null) {\n+          String allocationRequestId \u003d\n+              String.valueOf(schedulerKey.getAllocationRequestId());\n+          String priorityStr \u003d getPriorityStr(schedulerKey);\n+          String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n+          String type \u003d \"container\";\n+          // Add application-container activity into specific node allocation.\n+          activitiesManager.addSchedulingActivityForNode(nodeId,\n+              requestName, null,\n+              priorityStr, ActivityState.SKIPPED, diagnostic, type,\n+              null);\n+          type \u003d \"request\";\n+          // Add application-container activity into specific node allocation.\n+          activitiesManager.addSchedulingActivityForNode(nodeId,\n+              application.getApplicationId().toString(), requestName,\n+              priorityStr, ActivityState.SKIPPED,\n+              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n+        }\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.SKIPPED,\n-            ActivityDiagnosticConstant.EMPTY, type);\n+            schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n+                diagnostic, \"app\", null);\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n-            application.getApplicationId(), null, priority.toString(), appState,\n-            diagnostic, type);\n+            application.getApplicationId(), null,\n+            getPriorityStr(schedulerKey), appState,\n+            diagnostic, type, nodeId,\n+            schedulerKey \u003d\u003d null ?\n+                null : String.valueOf(schedulerKey.getAllocationRequestId()));\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application,\n        SchedulerRequestKey schedulerKey,\n        String diagnostic, ActivityState appState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        if (schedulerKey !\u003d null) {\n          String allocationRequestId \u003d\n              String.valueOf(schedulerKey.getAllocationRequestId());\n          String priorityStr \u003d getPriorityStr(schedulerKey);\n          String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n          String type \u003d \"container\";\n          // Add application-container activity into specific node allocation.\n          activitiesManager.addSchedulingActivityForNode(nodeId,\n              requestName, null,\n              priorityStr, ActivityState.SKIPPED, diagnostic, type,\n              null);\n          type \u003d \"request\";\n          // Add application-container activity into specific node allocation.\n          activitiesManager.addSchedulingActivityForNode(nodeId,\n              application.getApplicationId().toString(), requestName,\n              priorityStr, ActivityState.SKIPPED,\n              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n        }\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.SKIPPED,\n            schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n                diagnostic, \"app\", null);\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null,\n            getPriorityStr(schedulerKey), appState,\n            diagnostic, type, nodeId,\n            schedulerKey \u003d\u003d null ?\n                null : String.valueOf(schedulerKey.getAllocationRequestId()));\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
          "extendedDetails": {
            "oldValue": "[activitiesManager-ActivitiesManager, node-SchedulerNode, application-SchedulerApplicationAttempt, priority-Priority, diagnostic-String, appState-ActivityState]",
            "newValue": "[activitiesManager-ActivitiesManager, node-SchedulerNode, application-SchedulerApplicationAttempt, schedulerKey-SchedulerRequestKey, diagnostic-String, appState-ActivityState]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
          "commitDate": "06/05/19 5:00 AM",
          "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "15/04/19 9:12 AM",
          "commitNameOld": "7fa73fac2676875561269e9408215e012269a18c",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 20.82,
          "commitsBetweenForRepo": 102,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,50 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n-        SchedulerApplicationAttempt application, Priority priority,\n+        SchedulerApplicationAttempt application,\n+        SchedulerRequestKey schedulerKey,\n         String diagnostic, ActivityState appState) {\n       if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n       NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n-        String type \u003d \"container\";\n-        // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(nodeId,\n-            application.getApplicationId().toString(), null,\n-            priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n-        type \u003d \"app\";\n+        if (schedulerKey !\u003d null) {\n+          String allocationRequestId \u003d\n+              String.valueOf(schedulerKey.getAllocationRequestId());\n+          String priorityStr \u003d getPriorityStr(schedulerKey);\n+          String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n+          String type \u003d \"container\";\n+          // Add application-container activity into specific node allocation.\n+          activitiesManager.addSchedulingActivityForNode(nodeId,\n+              requestName, null,\n+              priorityStr, ActivityState.SKIPPED, diagnostic, type,\n+              null);\n+          type \u003d \"request\";\n+          // Add application-container activity into specific node allocation.\n+          activitiesManager.addSchedulingActivityForNode(nodeId,\n+              application.getApplicationId().toString(), requestName,\n+              priorityStr, ActivityState.SKIPPED,\n+              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n+        }\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.SKIPPED,\n-            ActivityDiagnosticConstant.EMPTY, type);\n+            schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n+                diagnostic, \"app\", null);\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n-            application.getApplicationId(), null, priority.toString(), appState,\n-            diagnostic, type);\n+            application.getApplicationId(), null,\n+            getPriorityStr(schedulerKey), appState,\n+            diagnostic, type, nodeId,\n+            schedulerKey \u003d\u003d null ?\n+                null : String.valueOf(schedulerKey.getAllocationRequestId()));\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application,\n        SchedulerRequestKey schedulerKey,\n        String diagnostic, ActivityState appState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        if (schedulerKey !\u003d null) {\n          String allocationRequestId \u003d\n              String.valueOf(schedulerKey.getAllocationRequestId());\n          String priorityStr \u003d getPriorityStr(schedulerKey);\n          String requestName \u003d getRequestName(priorityStr, allocationRequestId);\n          String type \u003d \"container\";\n          // Add application-container activity into specific node allocation.\n          activitiesManager.addSchedulingActivityForNode(nodeId,\n              requestName, null,\n              priorityStr, ActivityState.SKIPPED, diagnostic, type,\n              null);\n          type \u003d \"request\";\n          // Add application-container activity into specific node allocation.\n          activitiesManager.addSchedulingActivityForNode(nodeId,\n              application.getApplicationId().toString(), requestName,\n              priorityStr, ActivityState.SKIPPED,\n              ActivityDiagnosticConstant.EMPTY, type, allocationRequestId);\n        }\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.SKIPPED,\n            schedulerKey !\u003d null ? ActivityDiagnosticConstant.EMPTY :\n                diagnostic, \"app\", null);\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null,\n            getPriorityStr(schedulerKey), appState,\n            diagnostic, type, nodeId,\n            schedulerKey \u003d\u003d null ?\n                null : String.valueOf(schedulerKey.getAllocationRequestId()));\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
          "extendedDetails": {}
        }
      ]
    },
    "7fa73fac2676875561269e9408215e012269a18c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9439. Support asynchronized scheduling mode and multi-node lookup mechanism for app activities. Contributed by Tao Yang.\n",
      "commitDate": "15/04/19 9:12 AM",
      "commitName": "7fa73fac2676875561269e9408215e012269a18c",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "07/04/19 10:40 PM",
      "commitNameOld": "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 7.44,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, Priority priority,\n         String diagnostic, ActivityState appState) {\n-      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n-      if (nodeId \u003d\u003d null) {\n+      if (activitiesManager \u003d\u003d null) {\n         return;\n       }\n+      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n       if (activitiesManager.shouldRecordThisNode(nodeId)) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getApplicationId().toString(), null,\n             priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n         activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.SKIPPED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(), null, priority.toString(), appState,\n             diagnostic, type);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, Priority priority,\n        String diagnostic, ActivityState appState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getApplicationId().toString(), null,\n            priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.SKIPPED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null, priority.toString(), appState,\n            diagnostic, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9313. Support asynchronized scheduling mode and multi-node lookup mechanism for scheduler activities. Contributed by Tao Yang.\n",
      "commitDate": "07/04/19 10:40 PM",
      "commitName": "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 34.02,
      "commitsBetweenForRepo": 270,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, Priority priority,\n         String diagnostic, ActivityState appState) {\n-      if (node \u003d\u003d null || activitiesManager \u003d\u003d null) {\n+      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n+      if (nodeId \u003d\u003d null) {\n         return;\n       }\n-      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n+      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node,\n+        activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getApplicationId().toString(), null,\n             priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node,\n+        activitiesManager.addSchedulingActivityForNode(nodeId,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.SKIPPED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(), null, priority.toString(), appState,\n             diagnostic, type);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, Priority priority,\n        String diagnostic, ActivityState appState) {\n      NodeId nodeId \u003d getRecordingNodeId(activitiesManager, node);\n      if (nodeId \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(nodeId)) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getApplicationId().toString(), null,\n            priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(nodeId,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.SKIPPED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null, priority.toString(), appState,\n            diagnostic, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "09/11/17 1:01 PM",
      "commitNameOld": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 284.74,
      "commitsBetweenForRepo": 2528,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public static void recordAppActivityWithoutAllocation(\n         ActivitiesManager activitiesManager, SchedulerNode node,\n         SchedulerApplicationAttempt application, Priority priority,\n         String diagnostic, ActivityState appState) {\n-      if (activitiesManager \u003d\u003d null) {\n+      if (node \u003d\u003d null || activitiesManager \u003d\u003d null) {\n         return;\n       }\n       if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n         String type \u003d \"container\";\n         // Add application-container activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+        activitiesManager.addSchedulingActivityForNode(node,\n             application.getApplicationId().toString(), null,\n             priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n         type \u003d \"app\";\n         // Add queue-application activity into specific node allocation.\n-        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+        activitiesManager.addSchedulingActivityForNode(node,\n             application.getQueueName(),\n             application.getApplicationId().toString(),\n             application.getPriority().toString(), ActivityState.SKIPPED,\n             ActivityDiagnosticConstant.EMPTY, type);\n       }\n       // Add application-container activity into specific application allocation\n       // Under this condition, it fails to allocate a container to this\n       // application, so containerId is null.\n       if (activitiesManager.shouldRecordThisApp(\n           application.getApplicationId())) {\n         String type \u003d \"container\";\n         activitiesManager.addSchedulingActivityForApp(\n             application.getApplicationId(), null, priority.toString(), appState,\n             diagnostic, type);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, Priority priority,\n        String diagnostic, ActivityState appState) {\n      if (node \u003d\u003d null || activitiesManager \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node,\n            application.getApplicationId().toString(), null,\n            priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node,\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.SKIPPED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null, priority.toString(), appState,\n            diagnostic, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java",
      "extendedDetails": {}
    },
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4091. Add REST API to retrieve scheduler activity. (Chen Ge and Sunil G via wangda)\n",
      "commitDate": "05/08/16 10:27 AM",
      "commitName": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,32 @@\n+    public static void recordAppActivityWithoutAllocation(\n+        ActivitiesManager activitiesManager, SchedulerNode node,\n+        SchedulerApplicationAttempt application, Priority priority,\n+        String diagnostic, ActivityState appState) {\n+      if (activitiesManager \u003d\u003d null) {\n+        return;\n+      }\n+      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n+        String type \u003d \"container\";\n+        // Add application-container activity into specific node allocation.\n+        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+            application.getApplicationId().toString(), null,\n+            priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n+        type \u003d \"app\";\n+        // Add queue-application activity into specific node allocation.\n+        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n+            application.getQueueName(),\n+            application.getApplicationId().toString(),\n+            application.getPriority().toString(), ActivityState.SKIPPED,\n+            ActivityDiagnosticConstant.EMPTY, type);\n+      }\n+      // Add application-container activity into specific application allocation\n+      // Under this condition, it fails to allocate a container to this\n+      // application, so containerId is null.\n+      if (activitiesManager.shouldRecordThisApp(\n+          application.getApplicationId())) {\n+        String type \u003d \"container\";\n+        activitiesManager.addSchedulingActivityForApp(\n+            application.getApplicationId(), null, priority.toString(), appState,\n+            diagnostic, type);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static void recordAppActivityWithoutAllocation(\n        ActivitiesManager activitiesManager, SchedulerNode node,\n        SchedulerApplicationAttempt application, Priority priority,\n        String diagnostic, ActivityState appState) {\n      if (activitiesManager \u003d\u003d null) {\n        return;\n      }\n      if (activitiesManager.shouldRecordThisNode(node.getNodeID())) {\n        String type \u003d \"container\";\n        // Add application-container activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getApplicationId().toString(), null,\n            priority.toString(), ActivityState.SKIPPED, diagnostic, type);\n        type \u003d \"app\";\n        // Add queue-application activity into specific node allocation.\n        activitiesManager.addSchedulingActivityForNode(node.getNodeID(),\n            application.getQueueName(),\n            application.getApplicationId().toString(),\n            application.getPriority().toString(), ActivityState.SKIPPED,\n            ActivityDiagnosticConstant.EMPTY, type);\n      }\n      // Add application-container activity into specific application allocation\n      // Under this condition, it fails to allocate a container to this\n      // application, so containerId is null.\n      if (activitiesManager.shouldRecordThisApp(\n          application.getApplicationId())) {\n        String type \u003d \"container\";\n        activitiesManager.addSchedulingActivityForApp(\n            application.getApplicationId(), null, priority.toString(), appState,\n            diagnostic, type);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesLogger.java"
    }
  }
}