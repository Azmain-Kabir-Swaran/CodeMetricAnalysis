{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainersMonitorImpl.java",
  "functionName": "formatErrorMessage",
  "functionId": "formatErrorMessage___memTypeExceeded-String__usageString-String__pId-String__containerId-ContainerId__pTree-ResourceCalculatorProcessTree__delta-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
  "functionStartLine": 800,
  "functionEndLine": 811,
  "numCommitsSeen": 165,
  "timeTaken": 4306,
  "changeHistory": [
    "b82049b4f0065b76c3eb590d57eb5bf0ebc2f204",
    "9449519a2503c55d9eac8fd7519df28aa0760059",
    "a1aa1b93497034411d76906405bb6a70a441a0b7",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "237154982bd5853c6a374cb265520e0602adc52f"
  ],
  "changeHistoryShort": {
    "b82049b4f0065b76c3eb590d57eb5bf0ebc2f204": "Ymultichange(Yparameterchange,Ybodychange)",
    "9449519a2503c55d9eac8fd7519df28aa0760059": "Ymultichange(Yparameterchange,Ybodychange)",
    "a1aa1b93497034411d76906405bb6a70a441a0b7": "Yparameterchange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "237154982bd5853c6a374cb265520e0602adc52f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b82049b4f0065b76c3eb590d57eb5bf0ebc2f204": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7580. ContainersMonitorImpl logged message lacks detail when exceeding memory limits. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "29/12/17 12:49 PM",
      "commitName": "b82049b4f0065b76c3eb590d57eb5bf0ebc2f204",
      "commitAuthor": "Miklos Szegedi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7580. ContainersMonitorImpl logged message lacks detail when exceeding memory limits. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "29/12/17 12:49 PM",
          "commitName": "b82049b4f0065b76c3eb590d57eb5bf0ebc2f204",
          "commitAuthor": "Miklos Szegedi",
          "commitDateOld": "12/12/17 10:56 AM",
          "commitNameOld": "06f0eb2dce2a7a098f7844682ea6c232d0ddb0be",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 17.08,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n     private String formatErrorMessage(String memTypeExceeded,\n         String usageString, String pId, ContainerId containerId,\n-        ResourceCalculatorProcessTree pTree) {\n+        ResourceCalculatorProcessTree pTree, long delta) {\n       return\n         String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n-            \"running beyond %s memory limits. \",\n-            pId, containerId, memTypeExceeded) +\n+            \"running %dB beyond the \u0027%S\u0027 memory limit. \",\n+            pId, containerId, delta, memTypeExceeded) +\n         \"Current usage: \" + usageString +\n         \". Killing container.\\n\" +\n         \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n         pTree.getProcessTreeDump();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String formatErrorMessage(String memTypeExceeded,\n        String usageString, String pId, ContainerId containerId,\n        ResourceCalculatorProcessTree pTree, long delta) {\n      return\n        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n            \"running %dB beyond the \u0027%S\u0027 memory limit. \",\n            pId, containerId, delta, memTypeExceeded) +\n        \"Current usage: \" + usageString +\n        \". Killing container.\\n\" +\n        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n        pTree.getProcessTreeDump();\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
          "extendedDetails": {
            "oldValue": "[memTypeExceeded-String, usageString-String, pId-String, containerId-ContainerId, pTree-ResourceCalculatorProcessTree]",
            "newValue": "[memTypeExceeded-String, usageString-String, pId-String, containerId-ContainerId, pTree-ResourceCalculatorProcessTree, delta-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7580. ContainersMonitorImpl logged message lacks detail when exceeding memory limits. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "29/12/17 12:49 PM",
          "commitName": "b82049b4f0065b76c3eb590d57eb5bf0ebc2f204",
          "commitAuthor": "Miklos Szegedi",
          "commitDateOld": "12/12/17 10:56 AM",
          "commitNameOld": "06f0eb2dce2a7a098f7844682ea6c232d0ddb0be",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 17.08,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n     private String formatErrorMessage(String memTypeExceeded,\n         String usageString, String pId, ContainerId containerId,\n-        ResourceCalculatorProcessTree pTree) {\n+        ResourceCalculatorProcessTree pTree, long delta) {\n       return\n         String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n-            \"running beyond %s memory limits. \",\n-            pId, containerId, memTypeExceeded) +\n+            \"running %dB beyond the \u0027%S\u0027 memory limit. \",\n+            pId, containerId, delta, memTypeExceeded) +\n         \"Current usage: \" + usageString +\n         \". Killing container.\\n\" +\n         \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n         pTree.getProcessTreeDump();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String formatErrorMessage(String memTypeExceeded,\n        String usageString, String pId, ContainerId containerId,\n        ResourceCalculatorProcessTree pTree, long delta) {\n      return\n        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n            \"running %dB beyond the \u0027%S\u0027 memory limit. \",\n            pId, containerId, delta, memTypeExceeded) +\n        \"Current usage: \" + usageString +\n        \". Killing container.\\n\" +\n        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n        pTree.getProcessTreeDump();\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "9449519a2503c55d9eac8fd7519df28aa0760059": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5776. Checkstyle: MonitoringThread.Run method length is too long (miklos.szegedi@cloudera.com via rkanter)\n",
      "commitDate": "27/10/16 2:36 PM",
      "commitName": "9449519a2503c55d9eac8fd7519df28aa0760059",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5776. Checkstyle: MonitoringThread.Run method length is too long (miklos.szegedi@cloudera.com via rkanter)\n",
          "commitDate": "27/10/16 2:36 PM",
          "commitName": "9449519a2503c55d9eac8fd7519df28aa0760059",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "28/09/16 2:48 AM",
          "commitNameOld": "bc2656f09f857fdbc39da6b060cee453d2dec4dc",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 29.49,
          "commitsBetweenForRepo": 249,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n     private String formatErrorMessage(String memTypeExceeded,\n-        long currentVmemUsage, long vmemLimit,\n-        long currentPmemUsage, long pmemLimit,\n-        String pId, ContainerId containerId, ResourceCalculatorProcessTree pTree) {\n+        String usageString, String pId, ContainerId containerId,\n+        ResourceCalculatorProcessTree pTree) {\n       return\n-        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is running beyond %s memory limits. \",\n+        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n+            \"running beyond %s memory limits. \",\n             pId, containerId, memTypeExceeded) +\n-        \"Current usage: \" +\n-        formatUsageString(currentVmemUsage, vmemLimit,\n-                          currentPmemUsage, pmemLimit) +\n+        \"Current usage: \" + usageString +\n         \". Killing container.\\n\" +\n         \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n         pTree.getProcessTreeDump();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String formatErrorMessage(String memTypeExceeded,\n        String usageString, String pId, ContainerId containerId,\n        ResourceCalculatorProcessTree pTree) {\n      return\n        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n            \"running beyond %s memory limits. \",\n            pId, containerId, memTypeExceeded) +\n        \"Current usage: \" + usageString +\n        \". Killing container.\\n\" +\n        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n        pTree.getProcessTreeDump();\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
          "extendedDetails": {
            "oldValue": "[memTypeExceeded-String, currentVmemUsage-long, vmemLimit-long, currentPmemUsage-long, pmemLimit-long, pId-String, containerId-ContainerId, pTree-ResourceCalculatorProcessTree]",
            "newValue": "[memTypeExceeded-String, usageString-String, pId-String, containerId-ContainerId, pTree-ResourceCalculatorProcessTree]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5776. Checkstyle: MonitoringThread.Run method length is too long (miklos.szegedi@cloudera.com via rkanter)\n",
          "commitDate": "27/10/16 2:36 PM",
          "commitName": "9449519a2503c55d9eac8fd7519df28aa0760059",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "28/09/16 2:48 AM",
          "commitNameOld": "bc2656f09f857fdbc39da6b060cee453d2dec4dc",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 29.49,
          "commitsBetweenForRepo": 249,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n     private String formatErrorMessage(String memTypeExceeded,\n-        long currentVmemUsage, long vmemLimit,\n-        long currentPmemUsage, long pmemLimit,\n-        String pId, ContainerId containerId, ResourceCalculatorProcessTree pTree) {\n+        String usageString, String pId, ContainerId containerId,\n+        ResourceCalculatorProcessTree pTree) {\n       return\n-        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is running beyond %s memory limits. \",\n+        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n+            \"running beyond %s memory limits. \",\n             pId, containerId, memTypeExceeded) +\n-        \"Current usage: \" +\n-        formatUsageString(currentVmemUsage, vmemLimit,\n-                          currentPmemUsage, pmemLimit) +\n+        \"Current usage: \" + usageString +\n         \". Killing container.\\n\" +\n         \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n         pTree.getProcessTreeDump();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String formatErrorMessage(String memTypeExceeded,\n        String usageString, String pId, ContainerId containerId,\n        ResourceCalculatorProcessTree pTree) {\n      return\n        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is \" +\n            \"running beyond %s memory limits. \",\n            pId, containerId, memTypeExceeded) +\n        \"Current usage: \" + usageString +\n        \". Killing container.\\n\" +\n        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n        pTree.getProcessTreeDump();\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "a1aa1b93497034411d76906405bb6a70a441a0b7": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-57. Allow process-tree based resource calculation et al. to be pluggable to support it on multiple platforms. Contributed by Radim Kolar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1382072 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/09/12 8:48 AM",
      "commitName": "a1aa1b93497034411d76906405bb6a70a441a0b7",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 30.43,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private String formatErrorMessage(String memTypeExceeded,\n         long currentVmemUsage, long vmemLimit,\n         long currentPmemUsage, long pmemLimit,\n-        String pId, ContainerId containerId, ProcfsBasedProcessTree pTree) {\n+        String pId, ContainerId containerId, ResourceCalculatorProcessTree pTree) {\n       return\n         String.format(\"Container [pid\u003d%s,containerID\u003d%s] is running beyond %s memory limits. \",\n             pId, containerId, memTypeExceeded) +\n         \"Current usage: \" +\n         formatUsageString(currentVmemUsage, vmemLimit,\n                           currentPmemUsage, pmemLimit) +\n         \". Killing container.\\n\" +\n         \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n         pTree.getProcessTreeDump();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private String formatErrorMessage(String memTypeExceeded,\n        long currentVmemUsage, long vmemLimit,\n        long currentPmemUsage, long pmemLimit,\n        String pId, ContainerId containerId, ResourceCalculatorProcessTree pTree) {\n      return\n        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is running beyond %s memory limits. \",\n            pId, containerId, memTypeExceeded) +\n        \"Current usage: \" +\n        formatUsageString(currentVmemUsage, vmemLimit,\n                          currentPmemUsage, pmemLimit) +\n        \". Killing container.\\n\" +\n        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n        pTree.getProcessTreeDump();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {
        "oldValue": "[memTypeExceeded-String, currentVmemUsage-long, vmemLimit-long, currentPmemUsage-long, pmemLimit-long, pId-String, containerId-ContainerId, pTree-ProcfsBasedProcessTree]",
        "newValue": "[memTypeExceeded-String, currentVmemUsage-long, vmemLimit-long, currentPmemUsage-long, pmemLimit-long, pId-String, containerId-ContainerId, pTree-ResourceCalculatorProcessTree]"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private String formatErrorMessage(String memTypeExceeded,\n        long currentVmemUsage, long vmemLimit,\n        long currentPmemUsage, long pmemLimit,\n        String pId, ContainerId containerId, ProcfsBasedProcessTree pTree) {\n      return\n        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is running beyond %s memory limits. \",\n            pId, containerId, memTypeExceeded) +\n        \"Current usage: \" +\n        formatUsageString(currentVmemUsage, vmemLimit,\n                          currentPmemUsage, pmemLimit) +\n        \". Killing container.\\n\" +\n        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n        pTree.getProcessTreeDump();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java"
      }
    },
    "237154982bd5853c6a374cb265520e0602adc52f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3205. Fix memory specifications to be physical rather than virtual, allowing for a ratio between the two to be configurable. Contributed by Todd Lipcon. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189542 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/10/11 4:58 PM",
      "commitName": "237154982bd5853c6a374cb265520e0602adc52f",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,14 @@\n+    private String formatErrorMessage(String memTypeExceeded,\n+        long currentVmemUsage, long vmemLimit,\n+        long currentPmemUsage, long pmemLimit,\n+        String pId, ContainerId containerId, ProcfsBasedProcessTree pTree) {\n+      return\n+        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is running beyond %s memory limits. \",\n+            pId, containerId, memTypeExceeded) +\n+        \"Current usage: \" +\n+        formatUsageString(currentVmemUsage, vmemLimit,\n+                          currentPmemUsage, pmemLimit) +\n+        \". Killing container.\\n\" +\n+        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n+        pTree.getProcessTreeDump();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private String formatErrorMessage(String memTypeExceeded,\n        long currentVmemUsage, long vmemLimit,\n        long currentPmemUsage, long pmemLimit,\n        String pId, ContainerId containerId, ProcfsBasedProcessTree pTree) {\n      return\n        String.format(\"Container [pid\u003d%s,containerID\u003d%s] is running beyond %s memory limits. \",\n            pId, containerId, memTypeExceeded) +\n        \"Current usage: \" +\n        formatUsageString(currentVmemUsage, vmemLimit,\n                          currentPmemUsage, pmemLimit) +\n        \". Killing container.\\n\" +\n        \"Dump of the process-tree for \" + containerId + \" :\\n\" +\n        pTree.getProcessTreeDump();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java"
    }
  }
}