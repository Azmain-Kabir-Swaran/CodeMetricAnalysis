{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BackupNode.java",
  "functionName": "verifyJournalRequest",
  "functionId": "verifyJournalRequest___journalInfo-JournalInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
  "functionStartLine": 254,
  "functionEndLine": 271,
  "numCommitsSeen": 78,
  "timeTaken": 1562,
  "changeHistory": [
    "7f427646dfe80f9a4dfac0a979709f367e74a7e7",
    "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
    "861c872541b614971c73a3ae46fa3846d729dbee"
  ],
  "changeHistoryShort": {
    "7f427646dfe80f9a4dfac0a979709f367e74a7e7": "Ybodychange",
    "74b4b45651037fc8d2a97d3b2de51334dcbf759c": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "861c872541b614971c73a3ae46fa3846d729dbee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f427646dfe80f9a4dfac0a979709f367e74a7e7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2983. Relax the build version check to permit rolling upgrades within a release. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1325110 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/12 8:36 PM",
      "commitName": "7f427646dfe80f9a4dfac0a979709f367e74a7e7",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "06/04/12 5:52 PM",
      "commitNameOld": "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.11,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private void verifyJournalRequest(JournalInfo journalInfo)\n         throws IOException {\n-      verifyVersion(journalInfo.getLayoutVersion());\n+      verifyLayoutVersion(journalInfo.getLayoutVersion());\n       String errorMsg \u003d null;\n       int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n       if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n         errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n             + \" actual \" + journalInfo.getNamespaceId();\n         LOG.warn(errorMsg);\n         throw new UnregisteredNodeException(journalInfo);\n       } \n       if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n         errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n             + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n         LOG.warn(errorMsg);\n         throw new UnregisteredNodeException(journalInfo);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void verifyJournalRequest(JournalInfo journalInfo)\n        throws IOException {\n      verifyLayoutVersion(journalInfo.getLayoutVersion());\n      String errorMsg \u003d null;\n      int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n      if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n        errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n            + \" actual \" + journalInfo.getNamespaceId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      } \n      if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n        errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n            + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {}
    },
    "74b4b45651037fc8d2a97d3b2de51334dcbf759c": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-3211. Add fence(..) and replace NamenodeRegistration with JournalInfo and epoch in JournalProtocol.  Contributed by suresh \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1310649 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/04/12 5:52 PM",
      "commitName": "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3211. Add fence(..) and replace NamenodeRegistration with JournalInfo and epoch in JournalProtocol.  Contributed by suresh \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1310649 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/04/12 5:52 PM",
          "commitName": "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "05/04/12 5:08 PM",
          "commitNameOld": "861c872541b614971c73a3ae46fa3846d729dbee",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-    void verifyJournalRequest(NamenodeRegistration reg) throws IOException {\n-      verifyVersion(reg.getLayoutVersion());\n+    private void verifyJournalRequest(JournalInfo journalInfo)\n+        throws IOException {\n+      verifyVersion(journalInfo.getLayoutVersion());\n       String errorMsg \u003d null;\n       int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n-      if (reg.getNamespaceID() !\u003d expectedNamespaceID) {\n+      if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n         errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n-            + \" actual \" + reg.getNamespaceID();\n+            + \" actual \" + journalInfo.getNamespaceId();\n         LOG.warn(errorMsg);\n-        throw new UnregisteredNodeException(reg);\n+        throw new UnregisteredNodeException(journalInfo);\n       } \n-      if (!reg.getClusterID().equals(namesystem.getClusterId())) {\n+      if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n         errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n-            + reg.getClusterID() + \" actual \" + namesystem.getClusterId();\n+            + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n         LOG.warn(errorMsg);\n-        throw new UnregisteredNodeException(reg);\n+        throw new UnregisteredNodeException(journalInfo);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void verifyJournalRequest(JournalInfo journalInfo)\n        throws IOException {\n      verifyVersion(journalInfo.getLayoutVersion());\n      String errorMsg \u003d null;\n      int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n      if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n        errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n            + \" actual \" + journalInfo.getNamespaceId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      } \n      if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n        errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n            + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
          "extendedDetails": {
            "oldValue": "[reg-NamenodeRegistration]",
            "newValue": "[journalInfo-JournalInfo]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-3211. Add fence(..) and replace NamenodeRegistration with JournalInfo and epoch in JournalProtocol.  Contributed by suresh \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1310649 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/04/12 5:52 PM",
          "commitName": "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "05/04/12 5:08 PM",
          "commitNameOld": "861c872541b614971c73a3ae46fa3846d729dbee",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-    void verifyJournalRequest(NamenodeRegistration reg) throws IOException {\n-      verifyVersion(reg.getLayoutVersion());\n+    private void verifyJournalRequest(JournalInfo journalInfo)\n+        throws IOException {\n+      verifyVersion(journalInfo.getLayoutVersion());\n       String errorMsg \u003d null;\n       int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n-      if (reg.getNamespaceID() !\u003d expectedNamespaceID) {\n+      if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n         errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n-            + \" actual \" + reg.getNamespaceID();\n+            + \" actual \" + journalInfo.getNamespaceId();\n         LOG.warn(errorMsg);\n-        throw new UnregisteredNodeException(reg);\n+        throw new UnregisteredNodeException(journalInfo);\n       } \n-      if (!reg.getClusterID().equals(namesystem.getClusterId())) {\n+      if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n         errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n-            + reg.getClusterID() + \" actual \" + namesystem.getClusterId();\n+            + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n         LOG.warn(errorMsg);\n-        throw new UnregisteredNodeException(reg);\n+        throw new UnregisteredNodeException(journalInfo);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void verifyJournalRequest(JournalInfo journalInfo)\n        throws IOException {\n      verifyVersion(journalInfo.getLayoutVersion());\n      String errorMsg \u003d null;\n      int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n      if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n        errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n            + \" actual \" + journalInfo.getNamespaceId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      } \n      if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n        errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n            + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3211. Add fence(..) and replace NamenodeRegistration with JournalInfo and epoch in JournalProtocol.  Contributed by suresh \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1310649 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/04/12 5:52 PM",
          "commitName": "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "05/04/12 5:08 PM",
          "commitNameOld": "861c872541b614971c73a3ae46fa3846d729dbee",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-    void verifyJournalRequest(NamenodeRegistration reg) throws IOException {\n-      verifyVersion(reg.getLayoutVersion());\n+    private void verifyJournalRequest(JournalInfo journalInfo)\n+        throws IOException {\n+      verifyVersion(journalInfo.getLayoutVersion());\n       String errorMsg \u003d null;\n       int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n-      if (reg.getNamespaceID() !\u003d expectedNamespaceID) {\n+      if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n         errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n-            + \" actual \" + reg.getNamespaceID();\n+            + \" actual \" + journalInfo.getNamespaceId();\n         LOG.warn(errorMsg);\n-        throw new UnregisteredNodeException(reg);\n+        throw new UnregisteredNodeException(journalInfo);\n       } \n-      if (!reg.getClusterID().equals(namesystem.getClusterId())) {\n+      if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n         errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n-            + reg.getClusterID() + \" actual \" + namesystem.getClusterId();\n+            + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n         LOG.warn(errorMsg);\n-        throw new UnregisteredNodeException(reg);\n+        throw new UnregisteredNodeException(journalInfo);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void verifyJournalRequest(JournalInfo journalInfo)\n        throws IOException {\n      verifyVersion(journalInfo.getLayoutVersion());\n      String errorMsg \u003d null;\n      int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n      if (journalInfo.getNamespaceId() !\u003d expectedNamespaceID) {\n        errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n            + \" actual \" + journalInfo.getNamespaceId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      } \n      if (!journalInfo.getClusterId().equals(namesystem.getClusterId())) {\n        errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n            + journalInfo.getClusterId() + \" actual \" + namesystem.getClusterId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(journalInfo);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
          "extendedDetails": {}
        }
      ]
    },
    "861c872541b614971c73a3ae46fa3846d729dbee": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3204. Minor modification to JournalProtocol.proto to make it generic. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1310134 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/04/12 5:08 PM",
      "commitName": "861c872541b614971c73a3ae46fa3846d729dbee",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,17 @@\n+    void verifyJournalRequest(NamenodeRegistration reg) throws IOException {\n+      verifyVersion(reg.getLayoutVersion());\n+      String errorMsg \u003d null;\n+      int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n+      if (reg.getNamespaceID() !\u003d expectedNamespaceID) {\n+        errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n+            + \" actual \" + reg.getNamespaceID();\n+        LOG.warn(errorMsg);\n+        throw new UnregisteredNodeException(reg);\n+      } \n+      if (!reg.getClusterID().equals(namesystem.getClusterId())) {\n+        errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n+            + reg.getClusterID() + \" actual \" + namesystem.getClusterId();\n+        LOG.warn(errorMsg);\n+        throw new UnregisteredNodeException(reg);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void verifyJournalRequest(NamenodeRegistration reg) throws IOException {\n      verifyVersion(reg.getLayoutVersion());\n      String errorMsg \u003d null;\n      int expectedNamespaceID \u003d namesystem.getNamespaceInfo().getNamespaceID();\n      if (reg.getNamespaceID() !\u003d expectedNamespaceID) {\n        errorMsg \u003d \"Invalid namespaceID in journal request - expected \" + expectedNamespaceID\n            + \" actual \" + reg.getNamespaceID();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(reg);\n      } \n      if (!reg.getClusterID().equals(namesystem.getClusterId())) {\n        errorMsg \u003d \"Invalid clusterId in journal request - expected \"\n            + reg.getClusterID() + \" actual \" + namesystem.getClusterId();\n        LOG.warn(errorMsg);\n        throw new UnregisteredNodeException(reg);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java"
    }
  }
}