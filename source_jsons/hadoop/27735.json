{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityMulticastAMRMProxyPolicy.java",
  "functionName": "getAnswer",
  "functionId": "getAnswer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java",
  "functionStartLine": 680,
  "functionEndLine": 704,
  "numCommitsSeen": 11,
  "timeTaken": 1201,
  "changeHistory": [
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7",
    "1dadd0b45a6a605da72eb304808edb49fc66da45"
  ],
  "changeHistoryShort": {
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7": "Ybodychange",
    "1dadd0b45a6a605da72eb304808edb49fc66da45": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ed458b255e492fd5bc2ca36f216ff1b16054db7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8697. LocalityMulticastAMRMProxyPolicy should fallback to random sub-cluster when cannot resolve resource. Contributed by Botong Huang.\n",
      "commitDate": "28/08/18 4:01 PM",
      "commitName": "7ed458b255e492fd5bc2ca36f216ff1b16054db7",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "20/08/18 2:33 PM",
      "commitNameOld": "e0f6ffdbad6f43fd43ec57fb68ebf5275b8b9ba0",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,25 @@\n     private Map\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e getAnswer() {\n+      Iterator\u003cEntry\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e\u003e answerIter \u003d\n+          answer.entrySet().iterator();\n+      // Remove redundant rack RR before returning the answer\n+      while (answerIter.hasNext()) {\n+        Entry\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e entry \u003d answerIter.next();\n+        SubClusterId scId \u003d entry.getKey();\n+        Set\u003cLong\u003e mask \u003d maskForRackDeletion.get(scId);\n+        if (mask !\u003d null) {\n+          Iterator\u003cResourceRequest\u003e rrIter \u003d entry.getValue().iterator();\n+          while (rrIter.hasNext()) {\n+            ResourceRequest rr \u003d rrIter.next();\n+            if (!mask.contains(rr.getAllocationRequestId())) {\n+              rrIter.remove();\n+            }\n+          }\n+        }\n+        if (mask \u003d\u003d null || entry.getValue().size() \u003d\u003d 0) {\n+          answerIter.remove();\n+          LOG.info(\"removing {} from output because it has only rack RR\",\n+              scId);\n+        }\n+      }\n       return answer;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Map\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e getAnswer() {\n      Iterator\u003cEntry\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e\u003e answerIter \u003d\n          answer.entrySet().iterator();\n      // Remove redundant rack RR before returning the answer\n      while (answerIter.hasNext()) {\n        Entry\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e entry \u003d answerIter.next();\n        SubClusterId scId \u003d entry.getKey();\n        Set\u003cLong\u003e mask \u003d maskForRackDeletion.get(scId);\n        if (mask !\u003d null) {\n          Iterator\u003cResourceRequest\u003e rrIter \u003d entry.getValue().iterator();\n          while (rrIter.hasNext()) {\n            ResourceRequest rr \u003d rrIter.next();\n            if (!mask.contains(rr.getAllocationRequestId())) {\n              rrIter.remove();\n            }\n          }\n        }\n        if (mask \u003d\u003d null || entry.getValue().size() \u003d\u003d 0) {\n          answerIter.remove();\n          LOG.info(\"removing {} from output because it has only rack RR\",\n              scId);\n        }\n      }\n      return answer;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java",
      "extendedDetails": {}
    },
    "1dadd0b45a6a605da72eb304808edb49fc66da45": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5325. Stateless ARMRMProxy policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 11c5336522d3504598fb94eee288d54df73418c6)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "1dadd0b45a6a605da72eb304808edb49fc66da45",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,3 @@\n+    private Map\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e getAnswer() {\n+      return answer;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Map\u003cSubClusterId, List\u003cResourceRequest\u003e\u003e getAnswer() {\n      return answer;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java"
    }
  }
}