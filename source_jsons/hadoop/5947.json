{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirEncryptionZoneOp.java",
  "functionName": "updateReencryptionProgress",
  "functionId": "updateReencryptionProgress___fsd-FSDirectory(modifiers-final)__zoneNode-INode(modifiers-final)__origStatus-ZoneReencryptionStatus(modifiers-final)__lastFile-String(modifiers-final)__numReencrypted-long(modifiers-final)__numFailures-long(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
  "functionStartLine": 287,
  "functionEndLine": 317,
  "numCommitsSeen": 25,
  "timeTaken": 2023,
  "changeHistory": [
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,31 @@\n+  static XAttr updateReencryptionProgress(final FSDirectory fsd,\n+      final INode zoneNode, final ZoneReencryptionStatus origStatus,\n+      final String lastFile, final long numReencrypted, final long numFailures)\n+      throws IOException {\n+    assert fsd.hasWriteLock();\n+    Preconditions.checkNotNull(zoneNode, \"Zone node is null\");\n+    INodesInPath iip \u003d INodesInPath.fromINode(zoneNode);\n+    final ZoneEncryptionInfoProto zoneProto \u003d getZoneEncryptionInfoProto(iip);\n+    Preconditions.checkNotNull(zoneProto, \"ZoneEncryptionInfoProto is null.\");\n+    Preconditions.checkNotNull(origStatus, \"Null status for \" + iip.getPath());\n+\n+    final ReencryptionInfoProto newProto \u003d PBHelperClient\n+        .convert(origStatus.getEzKeyVersionName(),\n+            origStatus.getSubmissionTime(), false,\n+            origStatus.getFilesReencrypted() + numReencrypted,\n+            origStatus.getNumReencryptionFailures() + numFailures, null,\n+            lastFile);\n+\n+    final ZoneEncryptionInfoProto newZoneProto \u003d PBHelperClient\n+        .convert(PBHelperClient.convert(zoneProto.getSuite()),\n+            PBHelperClient.convert(zoneProto.getCryptoProtocolVersion()),\n+            zoneProto.getKeyName(), newProto);\n+\n+    final XAttr xattr \u003d XAttrHelper\n+        .buildXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE, newZoneProto.toByteArray());\n+    final List\u003cXAttr\u003e xattrs \u003d Lists.newArrayListWithCapacity(1);\n+    xattrs.add(xattr);\n+    FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xattrs,\n+        EnumSet.of(XAttrSetFlag.REPLACE));\n+    return xattr;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static XAttr updateReencryptionProgress(final FSDirectory fsd,\n      final INode zoneNode, final ZoneReencryptionStatus origStatus,\n      final String lastFile, final long numReencrypted, final long numFailures)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    Preconditions.checkNotNull(zoneNode, \"Zone node is null\");\n    INodesInPath iip \u003d INodesInPath.fromINode(zoneNode);\n    final ZoneEncryptionInfoProto zoneProto \u003d getZoneEncryptionInfoProto(iip);\n    Preconditions.checkNotNull(zoneProto, \"ZoneEncryptionInfoProto is null.\");\n    Preconditions.checkNotNull(origStatus, \"Null status for \" + iip.getPath());\n\n    final ReencryptionInfoProto newProto \u003d PBHelperClient\n        .convert(origStatus.getEzKeyVersionName(),\n            origStatus.getSubmissionTime(), false,\n            origStatus.getFilesReencrypted() + numReencrypted,\n            origStatus.getNumReencryptionFailures() + numFailures, null,\n            lastFile);\n\n    final ZoneEncryptionInfoProto newZoneProto \u003d PBHelperClient\n        .convert(PBHelperClient.convert(zoneProto.getSuite()),\n            PBHelperClient.convert(zoneProto.getCryptoProtocolVersion()),\n            zoneProto.getKeyName(), newProto);\n\n    final XAttr xattr \u003d XAttrHelper\n        .buildXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE, newZoneProto.toByteArray());\n    final List\u003cXAttr\u003e xattrs \u003d Lists.newArrayListWithCapacity(1);\n    xattrs.add(xattr);\n    FSDirXAttrOp.unprotectedSetXAttrs(fsd, iip, xattrs,\n        EnumSet.of(XAttrSetFlag.REPLACE));\n    return xattr;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java"
    }
  }
}