{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NvidiaGPUPluginForRuntimeV2.java",
  "functionName": "combinationRecursive",
  "functionId": "combinationRecursive___cTc-Map__Set__Device__,Integer____allDevices-Device[]__subDeviceList-Device[]__start-int__end-int__index-int__r-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java",
  "functionStartLine": 347,
  "functionEndLine": 362,
  "numCommitsSeen": 3,
  "timeTaken": 773,
  "changeHistory": [
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17"
  ],
  "changeHistoryShort": {
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8821. [YARN-8851] GPU hierarchy/topology scheduling support based on pluggable device framework. Contributed by Zhankun Tang.\n",
      "commitDate": "24/02/19 1:07 AM",
      "commitName": "dddcfa4d9f07aa96692a12afd3003ae89ac40b17",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,16 @@\n+  void combinationRecursive(Map\u003cSet\u003cDevice\u003e, Integer\u003e cTc,\n+      Device[] allDevices, Device[] subDeviceList,\n+      int start, int end, int index, int r) {\n+    // sub device list\u0027s length is ready to compute the cost\n+    if (index \u003d\u003d r) {\n+      Set\u003cDevice\u003e oneSet \u003d new TreeSet\u003c\u003e(Arrays.asList(subDeviceList));\n+      int cost \u003d computeCostOfDevices(subDeviceList);\n+      cTc.put(oneSet, cost);\n+      return;\n+    }\n+    for (int i \u003d start; i \u003c\u003d end; i++) {\n+      subDeviceList[index] \u003d allDevices[i];\n+      combinationRecursive(cTc, allDevices, subDeviceList,\n+          i + 1, end, index + 1, r);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void combinationRecursive(Map\u003cSet\u003cDevice\u003e, Integer\u003e cTc,\n      Device[] allDevices, Device[] subDeviceList,\n      int start, int end, int index, int r) {\n    // sub device list\u0027s length is ready to compute the cost\n    if (index \u003d\u003d r) {\n      Set\u003cDevice\u003e oneSet \u003d new TreeSet\u003c\u003e(Arrays.asList(subDeviceList));\n      int cost \u003d computeCostOfDevices(subDeviceList);\n      cTc.put(oneSet, cost);\n      return;\n    }\n    for (int i \u003d start; i \u003c\u003d end; i++) {\n      subDeviceList[index] \u003d allDevices[i];\n      combinationRecursive(cTc, allDevices, subDeviceList,\n          i + 1, end, index + 1, r);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java"
    }
  }
}