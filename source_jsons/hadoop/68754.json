{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StreamXmlRecordReader.java",
  "functionName": "nextState",
  "functionId": "nextState___state-int__input-int__bufPos-int",
  "sourceFilePath": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/mapreduce/StreamXmlRecordReader.java",
  "functionStartLine": 207,
  "functionEndLine": 228,
  "numCommitsSeen": 1,
  "timeTaken": 468,
  "changeHistory": [
    "9c87911c4ab35faead3e4729951b2855fb20e3b0"
  ],
  "changeHistoryShort": {
    "9c87911c4ab35faead3e4729951b2855fb20e3b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c87911c4ab35faead3e4729951b2855fb20e3b0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8521. Port StreamInputFormat to new Map Reduce API (madhukara phatak via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360238 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/12 8:44 AM",
      "commitName": "9c87911c4ab35faead3e4729951b2855fb20e3b0",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,22 @@\n+  int nextState(int state, int input, int bufPos) {\n+    switch (state) {\n+    case CDATA_UNK:\n+    case CDATA_OUT:\n+      switch (input) {\n+      case CDATA_BEGIN:\n+        return CDATA_IN;\n+      case CDATA_END:\n+        if (state \u003d\u003d CDATA_OUT) {\n+          // System.out.println(\"buggy XML \" + bufPos);\n+        }\n+        return CDATA_OUT;\n+      case RECORD_MAYBE:\n+        return (state \u003d\u003d CDATA_UNK) ? CDATA_UNK : RECORD_ACCEPT;\n+      }\n+      break;\n+    case CDATA_IN:\n+      return (input \u003d\u003d CDATA_END) ? CDATA_OUT : CDATA_IN;\n+    }\n+    throw new IllegalStateException(state + \" \" + input + \" \" + bufPos + \" \"\n+        + splitName_);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  int nextState(int state, int input, int bufPos) {\n    switch (state) {\n    case CDATA_UNK:\n    case CDATA_OUT:\n      switch (input) {\n      case CDATA_BEGIN:\n        return CDATA_IN;\n      case CDATA_END:\n        if (state \u003d\u003d CDATA_OUT) {\n          // System.out.println(\"buggy XML \" + bufPos);\n        }\n        return CDATA_OUT;\n      case RECORD_MAYBE:\n        return (state \u003d\u003d CDATA_UNK) ? CDATA_UNK : RECORD_ACCEPT;\n      }\n      break;\n    case CDATA_IN:\n      return (input \u003d\u003d CDATA_END) ? CDATA_OUT : CDATA_IN;\n    }\n    throw new IllegalStateException(state + \" \" + input + \" \" + bufPos + \" \"\n        + splitName_);\n  }",
      "path": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/mapreduce/StreamXmlRecordReader.java"
    }
  }
}