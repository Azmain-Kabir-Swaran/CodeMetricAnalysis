{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuthenticatedURL.java",
  "functionName": "put",
  "functionId": "put___uri-URI__responseHeaders-Map__String,List__String____",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
  "functionStartLine": 93,
  "functionEndLine": 115,
  "numCommitsSeen": 11,
  "timeTaken": 1151,
  "changeHistory": [
    "23787e4bddc84f576daa1299f5a99c8cc753aecb",
    "c3793102121767c46091805eae65ef3919a5f368"
  ],
  "changeHistoryShort": {
    "23787e4bddc84f576daa1299f5a99c8cc753aecb": "Ybodychange",
    "c3793102121767c46091805eae65ef3919a5f368": "Yintroduced"
  },
  "changeHistoryDetails": {
    "23787e4bddc84f576daa1299f5a99c8cc753aecb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15136. LOG flooding in secure mode when Cookies are not set in request header. Contributed by Renukaprasad C\n",
      "commitDate": "07/02/20 11:47 AM",
      "commitName": "23787e4bddc84f576daa1299f5a99c8cc753aecb",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "22/08/17 2:50 PM",
      "commitNameOld": "c3793102121767c46091805eae65ef3919a5f368",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 898.92,
      "commitsBetweenForRepo": 6988,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n     public void put(URI uri, Map\u003cString, List\u003cString\u003e\u003e responseHeaders) {\n       List\u003cString\u003e headers \u003d responseHeaders.get(\"Set-Cookie\");\n       if (headers !\u003d null) {\n         for (String header : headers) {\n           List\u003cHttpCookie\u003e cookies;\n           try {\n             cookies \u003d HttpCookie.parse(header);\n           } catch (IllegalArgumentException iae) {\n             // don\u0027t care. just skip malformed cookie headers.\n-            LOG.debug(\"Cannot parse cookie header: \" + header, iae);\n+            // When header is empty - \"Cannot parse cookie header, header \u003d ,\n+            // reason \u003d Empty cookie header string\"\n+            LOG.debug(\"Cannot parse cookie header, header \u003d {}, reason \u003d {} \",\n+                header, iae.getMessage());\n             continue;\n           }\n           for (HttpCookie cookie : cookies) {\n             if (AUTH_COOKIE.equals(cookie.getName())) {\n               setAuthCookie(cookie);\n             }\n           }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void put(URI uri, Map\u003cString, List\u003cString\u003e\u003e responseHeaders) {\n      List\u003cString\u003e headers \u003d responseHeaders.get(\"Set-Cookie\");\n      if (headers !\u003d null) {\n        for (String header : headers) {\n          List\u003cHttpCookie\u003e cookies;\n          try {\n            cookies \u003d HttpCookie.parse(header);\n          } catch (IllegalArgumentException iae) {\n            // don\u0027t care. just skip malformed cookie headers.\n            // When header is empty - \"Cannot parse cookie header, header \u003d ,\n            // reason \u003d Empty cookie header string\"\n            LOG.debug(\"Cannot parse cookie header, header \u003d {}, reason \u003d {} \",\n                header, iae.getMessage());\n            continue;\n          }\n          for (HttpCookie cookie : cookies) {\n            if (AUTH_COOKIE.equals(cookie.getName())) {\n              setAuthCookie(cookie);\n            }\n          }\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
      "extendedDetails": {}
    },
    "c3793102121767c46091805eae65ef3919a5f368": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14687. AuthenticatedURL will reuse bad/expired session cookies. Contributed by Daryn Sharp\n",
      "commitDate": "22/08/17 2:50 PM",
      "commitName": "c3793102121767c46091805eae65ef3919a5f368",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,20 @@\n+    public void put(URI uri, Map\u003cString, List\u003cString\u003e\u003e responseHeaders) {\n+      List\u003cString\u003e headers \u003d responseHeaders.get(\"Set-Cookie\");\n+      if (headers !\u003d null) {\n+        for (String header : headers) {\n+          List\u003cHttpCookie\u003e cookies;\n+          try {\n+            cookies \u003d HttpCookie.parse(header);\n+          } catch (IllegalArgumentException iae) {\n+            // don\u0027t care. just skip malformed cookie headers.\n+            LOG.debug(\"Cannot parse cookie header: \" + header, iae);\n+            continue;\n+          }\n+          for (HttpCookie cookie : cookies) {\n+            if (AUTH_COOKIE.equals(cookie.getName())) {\n+              setAuthCookie(cookie);\n+            }\n+          }\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void put(URI uri, Map\u003cString, List\u003cString\u003e\u003e responseHeaders) {\n      List\u003cString\u003e headers \u003d responseHeaders.get(\"Set-Cookie\");\n      if (headers !\u003d null) {\n        for (String header : headers) {\n          List\u003cHttpCookie\u003e cookies;\n          try {\n            cookies \u003d HttpCookie.parse(header);\n          } catch (IllegalArgumentException iae) {\n            // don\u0027t care. just skip malformed cookie headers.\n            LOG.debug(\"Cannot parse cookie header: \" + header, iae);\n            continue;\n          }\n          for (HttpCookie cookie : cookies) {\n            if (AUTH_COOKIE.equals(cookie.getName())) {\n              setAuthCookie(cookie);\n            }\n          }\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java"
    }
  }
}