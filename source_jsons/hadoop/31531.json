{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SubApplicationEntityReader.java",
  "functionName": "excludeFieldsFromInfoColFamily",
  "functionId": "excludeFieldsFromInfoColFamily___infoColFamilyList-FilterList",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/SubApplicationEntityReader.java",
  "functionStartLine": 216,
  "functionEndLine": 242,
  "numCommitsSeen": 3,
  "timeTaken": 1375,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void excludeFieldsFromInfoColFamily(FilterList infoColFamilyList) {\n    EnumSet\u003cField\u003e fieldsToRetrieve \u003d getDataToRetrieve().getFieldsToRetrieve();\n    // Events not required.\n    if (!hasField(fieldsToRetrieve, Field.EVENTS)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.EVENT));\n    }\n    // info not required.\n    if (!hasField(fieldsToRetrieve, Field.INFO)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.INFO));\n    }\n    // is related to not required.\n    if (!hasField(fieldsToRetrieve, Field.IS_RELATED_TO)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.IS_RELATED_TO));\n    }\n    // relates to not required.\n    if (!hasField(fieldsToRetrieve, Field.RELATES_TO)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.RELATES_TO));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/SubApplicationEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/SubApplicationEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/SubApplicationEntityReader.java"
      }
    },
    "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6861. Reader API for sub application entities (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f",
      "commitAuthor": "Varun Saxena",
      "diff": "@@ -0,0 +1,27 @@\n+  private void excludeFieldsFromInfoColFamily(FilterList infoColFamilyList) {\n+    EnumSet\u003cField\u003e fieldsToRetrieve \u003d getDataToRetrieve().getFieldsToRetrieve();\n+    // Events not required.\n+    if (!hasField(fieldsToRetrieve, Field.EVENTS)) {\n+      infoColFamilyList.addFilter(\n+          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n+              SubApplicationColumnPrefix.EVENT));\n+    }\n+    // info not required.\n+    if (!hasField(fieldsToRetrieve, Field.INFO)) {\n+      infoColFamilyList.addFilter(\n+          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n+              SubApplicationColumnPrefix.INFO));\n+    }\n+    // is related to not required.\n+    if (!hasField(fieldsToRetrieve, Field.IS_RELATED_TO)) {\n+      infoColFamilyList.addFilter(\n+          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n+              SubApplicationColumnPrefix.IS_RELATED_TO));\n+    }\n+    // relates to not required.\n+    if (!hasField(fieldsToRetrieve, Field.RELATES_TO)) {\n+      infoColFamilyList.addFilter(\n+          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n+              SubApplicationColumnPrefix.RELATES_TO));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void excludeFieldsFromInfoColFamily(FilterList infoColFamilyList) {\n    EnumSet\u003cField\u003e fieldsToRetrieve \u003d getDataToRetrieve().getFieldsToRetrieve();\n    // Events not required.\n    if (!hasField(fieldsToRetrieve, Field.EVENTS)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.EVENT));\n    }\n    // info not required.\n    if (!hasField(fieldsToRetrieve, Field.INFO)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.INFO));\n    }\n    // is related to not required.\n    if (!hasField(fieldsToRetrieve, Field.IS_RELATED_TO)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.IS_RELATED_TO));\n    }\n    // relates to not required.\n    if (!hasField(fieldsToRetrieve, Field.RELATES_TO)) {\n      infoColFamilyList.addFilter(\n          TimelineFilterUtils.createHBaseQualifierFilter(CompareOp.NOT_EQUAL,\n              SubApplicationColumnPrefix.RELATES_TO));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/SubApplicationEntityReader.java"
    }
  }
}