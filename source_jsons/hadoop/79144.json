{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Options.java",
  "functionName": "setOpt",
  "functionId": "setOpt___newValue-T(modifiers-final)__opts-CreateOpts(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java",
  "functionStartLine": 189,
  "functionEndLine": 215,
  "numCommitsSeen": 18,
  "timeTaken": 1498,
  "changeHistory": [
    "274d9b2ac48547b8d466e5006c233576c1aa7591",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5"
  ],
  "changeHistoryShort": {
    "274d9b2ac48547b8d466e5006c233576c1aa7591": "Ymultichange(Ymodifierchange,Ybodychange,Yparametermetachange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "274d9b2ac48547b8d466e5006c233576c1aa7591": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-10426. Declare CreateOpts.getOpt(..) with generic type argument, removes unused FileContext.getFileStatus(..) and fixes various javac warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/14 11:07 AM",
      "commitName": "274d9b2ac48547b8d466e5006c233576c1aa7591",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10426. Declare CreateOpts.getOpt(..) with generic type argument, removes unused FileContext.getFileStatus(..) and fixes various javac warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/14 11:07 AM",
          "commitName": "274d9b2ac48547b8d466e5006c233576c1aa7591",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/08/12 6:03 PM",
          "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 577.71,
          "commitsBetweenForRepo": 3603,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,27 @@\n-    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n-        CreateOpts ...opts) {\n+    static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(final T newValue,\n+        final CreateOpts... opts) {\n+      final Class\u003c?\u003e clazz \u003d newValue.getClass();\n       boolean alreadyInOpts \u003d false;\n       if (opts !\u003d null) {\n         for (int i \u003d 0; i \u003c opts.length; ++i) {\n-          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n-            if (alreadyInOpts) \n-              throw new IllegalArgumentException(\"multiple opts varargs\");\n+          if (opts[i].getClass() \u003d\u003d clazz) {\n+            if (alreadyInOpts) {\n+              throw new IllegalArgumentException(\"multiple opts varargs: \" + clazz);\n+            }\n             alreadyInOpts \u003d true;\n             opts[i] \u003d newValue;\n           }\n         }\n       }\n       CreateOpts[] resultOpt \u003d opts;\n       if (!alreadyInOpts) { // no newValue in opt\n-        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n-        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n-        newOpts[opts.length] \u003d newValue;\n+        final int oldLength \u003d opts \u003d\u003d null? 0: opts.length;\n+        CreateOpts[] newOpts \u003d new CreateOpts[oldLength + 1];\n+        if (oldLength \u003e 0) {\n+          System.arraycopy(opts, 0, newOpts, 0, oldLength);\n+        }\n+        newOpts[oldLength] \u003d newValue;\n         resultOpt \u003d newOpts;\n       }\n       return resultOpt;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(final T newValue,\n        final CreateOpts... opts) {\n      final Class\u003c?\u003e clazz \u003d newValue.getClass();\n      boolean alreadyInOpts \u003d false;\n      if (opts !\u003d null) {\n        for (int i \u003d 0; i \u003c opts.length; ++i) {\n          if (opts[i].getClass() \u003d\u003d clazz) {\n            if (alreadyInOpts) {\n              throw new IllegalArgumentException(\"multiple opts varargs: \" + clazz);\n            }\n            alreadyInOpts \u003d true;\n            opts[i] \u003d newValue;\n          }\n        }\n      }\n      CreateOpts[] resultOpt \u003d opts;\n      if (!alreadyInOpts) { // no newValue in opt\n        final int oldLength \u003d opts \u003d\u003d null? 0: opts.length;\n        CreateOpts[] newOpts \u003d new CreateOpts[oldLength + 1];\n        if (oldLength \u003e 0) {\n          System.arraycopy(opts, 0, newOpts, 0, oldLength);\n        }\n        newOpts[oldLength] \u003d newValue;\n        resultOpt \u003d newOpts;\n      }\n      return resultOpt;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java",
          "extendedDetails": {
            "oldValue": "[protected, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10426. Declare CreateOpts.getOpt(..) with generic type argument, removes unused FileContext.getFileStatus(..) and fixes various javac warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/14 11:07 AM",
          "commitName": "274d9b2ac48547b8d466e5006c233576c1aa7591",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/08/12 6:03 PM",
          "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 577.71,
          "commitsBetweenForRepo": 3603,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,27 @@\n-    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n-        CreateOpts ...opts) {\n+    static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(final T newValue,\n+        final CreateOpts... opts) {\n+      final Class\u003c?\u003e clazz \u003d newValue.getClass();\n       boolean alreadyInOpts \u003d false;\n       if (opts !\u003d null) {\n         for (int i \u003d 0; i \u003c opts.length; ++i) {\n-          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n-            if (alreadyInOpts) \n-              throw new IllegalArgumentException(\"multiple opts varargs\");\n+          if (opts[i].getClass() \u003d\u003d clazz) {\n+            if (alreadyInOpts) {\n+              throw new IllegalArgumentException(\"multiple opts varargs: \" + clazz);\n+            }\n             alreadyInOpts \u003d true;\n             opts[i] \u003d newValue;\n           }\n         }\n       }\n       CreateOpts[] resultOpt \u003d opts;\n       if (!alreadyInOpts) { // no newValue in opt\n-        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n-        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n-        newOpts[opts.length] \u003d newValue;\n+        final int oldLength \u003d opts \u003d\u003d null? 0: opts.length;\n+        CreateOpts[] newOpts \u003d new CreateOpts[oldLength + 1];\n+        if (oldLength \u003e 0) {\n+          System.arraycopy(opts, 0, newOpts, 0, oldLength);\n+        }\n+        newOpts[oldLength] \u003d newValue;\n         resultOpt \u003d newOpts;\n       }\n       return resultOpt;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(final T newValue,\n        final CreateOpts... opts) {\n      final Class\u003c?\u003e clazz \u003d newValue.getClass();\n      boolean alreadyInOpts \u003d false;\n      if (opts !\u003d null) {\n        for (int i \u003d 0; i \u003c opts.length; ++i) {\n          if (opts[i].getClass() \u003d\u003d clazz) {\n            if (alreadyInOpts) {\n              throw new IllegalArgumentException(\"multiple opts varargs: \" + clazz);\n            }\n            alreadyInOpts \u003d true;\n            opts[i] \u003d newValue;\n          }\n        }\n      }\n      CreateOpts[] resultOpt \u003d opts;\n      if (!alreadyInOpts) { // no newValue in opt\n        final int oldLength \u003d opts \u003d\u003d null? 0: opts.length;\n        CreateOpts[] newOpts \u003d new CreateOpts[oldLength + 1];\n        if (oldLength \u003e 0) {\n          System.arraycopy(opts, 0, newOpts, 0, oldLength);\n        }\n        newOpts[oldLength] \u003d newValue;\n        resultOpt \u003d newOpts;\n      }\n      return resultOpt;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-10426. Declare CreateOpts.getOpt(..) with generic type argument, removes unused FileContext.getFileStatus(..) and fixes various javac warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/14 11:07 AM",
          "commitName": "274d9b2ac48547b8d466e5006c233576c1aa7591",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/08/12 6:03 PM",
          "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 577.71,
          "commitsBetweenForRepo": 3603,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,27 @@\n-    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n-        CreateOpts ...opts) {\n+    static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(final T newValue,\n+        final CreateOpts... opts) {\n+      final Class\u003c?\u003e clazz \u003d newValue.getClass();\n       boolean alreadyInOpts \u003d false;\n       if (opts !\u003d null) {\n         for (int i \u003d 0; i \u003c opts.length; ++i) {\n-          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n-            if (alreadyInOpts) \n-              throw new IllegalArgumentException(\"multiple opts varargs\");\n+          if (opts[i].getClass() \u003d\u003d clazz) {\n+            if (alreadyInOpts) {\n+              throw new IllegalArgumentException(\"multiple opts varargs: \" + clazz);\n+            }\n             alreadyInOpts \u003d true;\n             opts[i] \u003d newValue;\n           }\n         }\n       }\n       CreateOpts[] resultOpt \u003d opts;\n       if (!alreadyInOpts) { // no newValue in opt\n-        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n-        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n-        newOpts[opts.length] \u003d newValue;\n+        final int oldLength \u003d opts \u003d\u003d null? 0: opts.length;\n+        CreateOpts[] newOpts \u003d new CreateOpts[oldLength + 1];\n+        if (oldLength \u003e 0) {\n+          System.arraycopy(opts, 0, newOpts, 0, oldLength);\n+        }\n+        newOpts[oldLength] \u003d newValue;\n         resultOpt \u003d newOpts;\n       }\n       return resultOpt;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(final T newValue,\n        final CreateOpts... opts) {\n      final Class\u003c?\u003e clazz \u003d newValue.getClass();\n      boolean alreadyInOpts \u003d false;\n      if (opts !\u003d null) {\n        for (int i \u003d 0; i \u003c opts.length; ++i) {\n          if (opts[i].getClass() \u003d\u003d clazz) {\n            if (alreadyInOpts) {\n              throw new IllegalArgumentException(\"multiple opts varargs: \" + clazz);\n            }\n            alreadyInOpts \u003d true;\n            opts[i] \u003d newValue;\n          }\n        }\n      }\n      CreateOpts[] resultOpt \u003d opts;\n      if (!alreadyInOpts) { // no newValue in opt\n        final int oldLength \u003d opts \u003d\u003d null? 0: opts.length;\n        CreateOpts[] newOpts \u003d new CreateOpts[oldLength + 1];\n        if (oldLength \u003e 0) {\n          System.arraycopy(opts, 0, newOpts, 0, oldLength);\n        }\n        newOpts[oldLength] \u003d newValue;\n        resultOpt \u003d newOpts;\n      }\n      return resultOpt;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java",
          "extendedDetails": {
            "oldValue": "[newValue-T, opts-CreateOpts]",
            "newValue": "[newValue-T(modifiers-final), opts-CreateOpts(modifiers-final)]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n        CreateOpts ...opts) {\n      boolean alreadyInOpts \u003d false;\n      if (opts !\u003d null) {\n        for (int i \u003d 0; i \u003c opts.length; ++i) {\n          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n            if (alreadyInOpts) \n              throw new IllegalArgumentException(\"multiple opts varargs\");\n            alreadyInOpts \u003d true;\n            opts[i] \u003d newValue;\n          }\n        }\n      }\n      CreateOpts[] resultOpt \u003d opts;\n      if (!alreadyInOpts) { // no newValue in opt\n        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n        newOpts[opts.length] \u003d newValue;\n        resultOpt \u003d newOpts;\n      }\n      return resultOpt;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n        CreateOpts ...opts) {\n      boolean alreadyInOpts \u003d false;\n      if (opts !\u003d null) {\n        for (int i \u003d 0; i \u003c opts.length; ++i) {\n          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n            if (alreadyInOpts) \n              throw new IllegalArgumentException(\"multiple opts varargs\");\n            alreadyInOpts \u003d true;\n            opts[i] \u003d newValue;\n          }\n        }\n      }\n      CreateOpts[] resultOpt \u003d opts;\n      if (!alreadyInOpts) { // no newValue in opt\n        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n        newOpts[opts.length] \u003d newValue;\n        resultOpt \u003d newOpts;\n      }\n      return resultOpt;\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/Options.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/Options.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n        CreateOpts ...opts) {\n      boolean alreadyInOpts \u003d false;\n      if (opts !\u003d null) {\n        for (int i \u003d 0; i \u003c opts.length; ++i) {\n          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n            if (alreadyInOpts) \n              throw new IllegalArgumentException(\"multiple opts varargs\");\n            alreadyInOpts \u003d true;\n            opts[i] \u003d newValue;\n          }\n        }\n      }\n      CreateOpts[] resultOpt \u003d opts;\n      if (!alreadyInOpts) { // no newValue in opt\n        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n        newOpts[opts.length] \u003d newValue;\n        resultOpt \u003d newOpts;\n      }\n      return resultOpt;\n    }",
      "path": "common/src/java/org/apache/hadoop/fs/Options.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/Options.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/Options.java"
      }
    },
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": {
      "type": "Yintroduced",
      "commitMessage": "Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/09 3:24 PM",
      "commitName": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,22 @@\n+    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n+        CreateOpts ...opts) {\n+      boolean alreadyInOpts \u003d false;\n+      if (opts !\u003d null) {\n+        for (int i \u003d 0; i \u003c opts.length; ++i) {\n+          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n+            if (alreadyInOpts) \n+              throw new IllegalArgumentException(\"multiple opts varargs\");\n+            alreadyInOpts \u003d true;\n+            opts[i] \u003d newValue;\n+          }\n+        }\n+      }\n+      CreateOpts[] resultOpt \u003d opts;\n+      if (!alreadyInOpts) { // no newValue in opt\n+        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n+        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n+        newOpts[opts.length] \u003d newValue;\n+        resultOpt \u003d newOpts;\n+      }\n+      return resultOpt;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected static \u003cT extends CreateOpts\u003e CreateOpts[] setOpt(T newValue,\n        CreateOpts ...opts) {\n      boolean alreadyInOpts \u003d false;\n      if (opts !\u003d null) {\n        for (int i \u003d 0; i \u003c opts.length; ++i) {\n          if (opts[i].getClass() \u003d\u003d newValue.getClass()) {\n            if (alreadyInOpts) \n              throw new IllegalArgumentException(\"multiple opts varargs\");\n            alreadyInOpts \u003d true;\n            opts[i] \u003d newValue;\n          }\n        }\n      }\n      CreateOpts[] resultOpt \u003d opts;\n      if (!alreadyInOpts) { // no newValue in opt\n        CreateOpts[] newOpts \u003d new CreateOpts[opts.length + 1];\n        System.arraycopy(opts, 0, newOpts, 0, opts.length);\n        newOpts[opts.length] \u003d newValue;\n        resultOpt \u003d newOpts;\n      }\n      return resultOpt;\n    }",
      "path": "src/java/org/apache/hadoop/fs/Options.java"
    }
  }
}