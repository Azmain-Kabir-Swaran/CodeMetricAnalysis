{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RSRawDecoder.java",
  "functionName": "generateDecodeMatrix",
  "functionId": "generateDecodeMatrix___erasedIndexes-int[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java",
  "functionStartLine": 143,
  "functionEndLine": 176,
  "numCommitsSeen": 12,
  "timeTaken": 1378,
  "changeHistory": [
    "19e8f076919932b17f24ec4090df1926677651e7",
    "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e"
  ],
  "changeHistoryShort": {
    "19e8f076919932b17f24ec4090df1926677651e7": "Yfilerename",
    "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19e8f076919932b17f24ec4090df1926677651e7": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-12826. Rename the new Java coder and make it default. Contributed by Rui Li.\n",
      "commitDate": "14/03/16 4:45 PM",
      "commitName": "19e8f076919932b17f24ec4090df1926677651e7",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "14/03/16 3:48 PM",
      "commitNameOld": "1898810cda83e6d273a2963b56ed499c0fb91118",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void generateDecodeMatrix(int[] erasedIndexes) {\n    int i, j, r, p;\n    byte s;\n    byte[] tmpMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n\n    // Construct matrix tmpMatrix by removing error rows\n    for (i \u003d 0; i \u003c getNumDataUnits(); i++) {\n      r \u003d validIndexes[i];\n      for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n        tmpMatrix[getNumDataUnits() * i + j] \u003d\n                encodeMatrix[getNumDataUnits() * r + j];\n      }\n    }\n\n    GF256.gfInvertMatrix(tmpMatrix, invertMatrix, getNumDataUnits());\n\n    for (i \u003d 0; i \u003c numErasedDataUnits; i++) {\n      for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n        decodeMatrix[getNumDataUnits() * i + j] \u003d\n                invertMatrix[getNumDataUnits() * erasedIndexes[i] + j];\n      }\n    }\n\n    for (p \u003d numErasedDataUnits; p \u003c erasedIndexes.length; p++) {\n      for (i \u003d 0; i \u003c getNumDataUnits(); i++) {\n        s \u003d 0;\n        for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n          s ^\u003d GF256.gfMul(invertMatrix[j * getNumDataUnits() + i],\n                  encodeMatrix[getNumDataUnits() * erasedIndexes[p] + j]);\n        }\n        decodeMatrix[getNumDataUnits() * p + i] \u003d s;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder2.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder.java"
      }
    },
    "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12041. Implement another Reed-Solomon coder in pure Java. Contributed by Kai Zheng.\n\nChange-Id: I35ff2e498d4f988c9a064f74374f7c7258b7a6b7\n",
      "commitDate": "03/02/16 3:05 PM",
      "commitName": "c89a14a8a4fe58f01f0cba643f2bc203e1a8701e",
      "commitAuthor": "zhezhang",
      "diff": "@@ -0,0 +1,34 @@\n+  private void generateDecodeMatrix(int[] erasedIndexes) {\n+    int i, j, r, p;\n+    byte s;\n+    byte[] tmpMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n+\n+    // Construct matrix tmpMatrix by removing error rows\n+    for (i \u003d 0; i \u003c getNumDataUnits(); i++) {\n+      r \u003d validIndexes[i];\n+      for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n+        tmpMatrix[getNumDataUnits() * i + j] \u003d\n+                encodeMatrix[getNumDataUnits() * r + j];\n+      }\n+    }\n+\n+    GF256.gfInvertMatrix(tmpMatrix, invertMatrix, getNumDataUnits());\n+\n+    for (i \u003d 0; i \u003c numErasedDataUnits; i++) {\n+      for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n+        decodeMatrix[getNumDataUnits() * i + j] \u003d\n+                invertMatrix[getNumDataUnits() * erasedIndexes[i] + j];\n+      }\n+    }\n+\n+    for (p \u003d numErasedDataUnits; p \u003c erasedIndexes.length; p++) {\n+      for (i \u003d 0; i \u003c getNumDataUnits(); i++) {\n+        s \u003d 0;\n+        for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n+          s ^\u003d GF256.gfMul(invertMatrix[j * getNumDataUnits() + i],\n+                  encodeMatrix[getNumDataUnits() * erasedIndexes[p] + j]);\n+        }\n+        decodeMatrix[getNumDataUnits() * p + i] \u003d s;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void generateDecodeMatrix(int[] erasedIndexes) {\n    int i, j, r, p;\n    byte s;\n    byte[] tmpMatrix \u003d new byte[getNumAllUnits() * getNumDataUnits()];\n\n    // Construct matrix tmpMatrix by removing error rows\n    for (i \u003d 0; i \u003c getNumDataUnits(); i++) {\n      r \u003d validIndexes[i];\n      for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n        tmpMatrix[getNumDataUnits() * i + j] \u003d\n                encodeMatrix[getNumDataUnits() * r + j];\n      }\n    }\n\n    GF256.gfInvertMatrix(tmpMatrix, invertMatrix, getNumDataUnits());\n\n    for (i \u003d 0; i \u003c numErasedDataUnits; i++) {\n      for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n        decodeMatrix[getNumDataUnits() * i + j] \u003d\n                invertMatrix[getNumDataUnits() * erasedIndexes[i] + j];\n      }\n    }\n\n    for (p \u003d numErasedDataUnits; p \u003c erasedIndexes.length; p++) {\n      for (i \u003d 0; i \u003c getNumDataUnits(); i++) {\n        s \u003d 0;\n        for (j \u003d 0; j \u003c getNumDataUnits(); j++) {\n          s ^\u003d GF256.gfMul(invertMatrix[j * getNumDataUnits() + i],\n                  encodeMatrix[getNumDataUnits() * erasedIndexes[p] + j]);\n        }\n        decodeMatrix[getNumDataUnits() * p + i] \u003d s;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RSRawDecoder2.java"
    }
  }
}