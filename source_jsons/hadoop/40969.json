{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSConfigToCSConfigArgumentHandler.java",
  "functionName": "checkFileInternal",
  "functionId": "checkFileInternal___cliOption-CliOption__filePath-String__isFile-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java",
  "functionStartLine": 340,
  "functionEndLine": 361,
  "numCommitsSeen": 9,
  "timeTaken": 1016,
  "changeHistory": [
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d"
  ],
  "changeHistoryShort": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void checkFileInternal(CliOption cliOption, String filePath,\n+      boolean isFile) {\n+    //We can safely ignore null here as files / dirs were checked before\n+    if (filePath \u003d\u003d null) {\n+      return;\n+    }\n+\n+    File file \u003d new File(filePath);\n+    if (isFile \u0026\u0026 file.isDirectory()) {\n+      throw new PreconditionException(\n+          String.format(\"Specified path %s is a directory but should be \" +\n+           \" a file (As value of parameter %s)\", filePath, cliOption.name));\n+    } else if (!isFile \u0026\u0026 !file.isDirectory()) {\n+      throw new PreconditionException(\n+          String.format(\"Specified path %s is not a directory \" +\n+          \"(As value of parameter %s)\", filePath, cliOption.name));\n+    } else if (!file.exists()) {\n+      throw new PreconditionException(\n+          String.format(\"Specified path %s does not exist \" +\n+          \"(As value of parameter %s)\", filePath, cliOption.name));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkFileInternal(CliOption cliOption, String filePath,\n      boolean isFile) {\n    //We can safely ignore null here as files / dirs were checked before\n    if (filePath \u003d\u003d null) {\n      return;\n    }\n\n    File file \u003d new File(filePath);\n    if (isFile \u0026\u0026 file.isDirectory()) {\n      throw new PreconditionException(\n          String.format(\"Specified path %s is a directory but should be \" +\n           \" a file (As value of parameter %s)\", filePath, cliOption.name));\n    } else if (!isFile \u0026\u0026 !file.isDirectory()) {\n      throw new PreconditionException(\n          String.format(\"Specified path %s is not a directory \" +\n          \"(As value of parameter %s)\", filePath, cliOption.name));\n    } else if (!file.exists()) {\n      throw new PreconditionException(\n          String.format(\"Specified path %s does not exist \" +\n          \"(As value of parameter %s)\", filePath, cliOption.name));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java"
    }
  }
}