{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultiNodeSorter.java",
  "functionName": "reSortClusterNodes",
  "functionId": "reSortClusterNodes",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/MultiNodeSorter.java",
  "functionStartLine": 129,
  "functionEndLine": 144,
  "numCommitsSeen": 2,
  "timeTaken": 1637,
  "changeHistory": [
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181"
  ],
  "changeHistoryShort": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,16 @@\n+  public void reSortClusterNodes() {\n+    Set\u003cString\u003e nodeLabels \u003d new HashSet\u003c\u003e();\n+    nodeLabels\n+        .addAll(rmContext.getNodeLabelManager().getClusterNodeLabelNames());\n+    nodeLabels.add(RMNodeLabelsManager.NO_LABEL);\n+    for (String label : nodeLabels) {\n+      Map\u003cNodeId, SchedulerNode\u003e nodesByPartition \u003d new HashMap\u003c\u003e();\n+      List\u003cSchedulerNode\u003e nodes \u003d ((AbstractYarnScheduler) rmContext\n+          .getScheduler()).getNodeTracker().getNodesPerPartition(label);\n+      if (nodes !\u003d null \u0026\u0026 !nodes.isEmpty()) {\n+        nodes.forEach(n -\u003e nodesByPartition.put(n.getNodeID(), n));\n+        multiNodePolicy.addAndRefreshNodesSet(\n+            (Collection\u003cN\u003e) nodesByPartition.values(), label);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void reSortClusterNodes() {\n    Set\u003cString\u003e nodeLabels \u003d new HashSet\u003c\u003e();\n    nodeLabels\n        .addAll(rmContext.getNodeLabelManager().getClusterNodeLabelNames());\n    nodeLabels.add(RMNodeLabelsManager.NO_LABEL);\n    for (String label : nodeLabels) {\n      Map\u003cNodeId, SchedulerNode\u003e nodesByPartition \u003d new HashMap\u003c\u003e();\n      List\u003cSchedulerNode\u003e nodes \u003d ((AbstractYarnScheduler) rmContext\n          .getScheduler()).getNodeTracker().getNodesPerPartition(label);\n      if (nodes !\u003d null \u0026\u0026 !nodes.isEmpty()) {\n        nodes.forEach(n -\u003e nodesByPartition.put(n.getNodeID(), n));\n        multiNodePolicy.addAndRefreshNodesSet(\n            (Collection\u003cN\u003e) nodesByPartition.values(), label);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/MultiNodeSorter.java"
    }
  }
}