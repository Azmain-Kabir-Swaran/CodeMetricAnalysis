{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NotRunningJob.java",
  "functionName": "getJobReport",
  "functionId": "getJobReport___request-GetJobReportRequest",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java",
  "functionStartLine": 133,
  "functionEndLine": 153,
  "numCommitsSeen": 23,
  "timeTaken": 1730,
  "changeHistory": [
    "9520b2ad790bd8527033a03e7ee50da71a85df1d",
    "6529c87551e07e9da1e1b273eff4c6bad6b3e838",
    "7359dc32d3781d5318efee4cf6185616c7c00c18",
    "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
    "6bdf5746d5d677f9c17598768c4ae86384c000c6",
    "f2b91a8367a762091482074505618b570a520b19"
  ],
  "changeHistoryShort": {
    "9520b2ad790bd8527033a03e7ee50da71a85df1d": "Ybodychange",
    "6529c87551e07e9da1e1b273eff4c6bad6b3e838": "Ybodychange",
    "7359dc32d3781d5318efee4cf6185616c7c00c18": "Yexceptionschange",
    "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72": "Ybodychange",
    "6bdf5746d5d677f9c17598768c4ae86384c000c6": "Ybodychange",
    "f2b91a8367a762091482074505618b570a520b19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9520b2ad790bd8527033a03e7ee50da71a85df1d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10083. Provide utility to ask whether an application is in final status. Contributed by Adam Antal\n",
      "commitDate": "22/01/20 7:25 AM",
      "commitName": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "31/05/18 2:31 AM",
      "commitNameOld": "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 601.25,
      "commitsBetweenForRepo": 4248,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   public GetJobReportResponse getJobReport(GetJobReportRequest request)\n       throws IOException {\n     JobReport jobReport \u003d\n       recordFactory.newRecordInstance(JobReport.class);\n     jobReport.setJobId(request.getJobId());\n     jobReport.setJobState(jobState);\n     jobReport.setUser(applicationReport.getUser());\n     jobReport.setStartTime(applicationReport.getStartTime());\n     YarnApplicationState state \u003d applicationReport.getYarnApplicationState();\n-    if (state \u003d\u003d YarnApplicationState.KILLED\n-        || state \u003d\u003d YarnApplicationState.FAILED\n-        || state \u003d\u003d YarnApplicationState.FINISHED) {\n+    if (Apps.isApplicationFinalState(state)) {\n       jobReport.setDiagnostics(applicationReport.getDiagnostics());\n     }\n     jobReport.setJobName(applicationReport.getName());\n     jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n     jobReport.setFinishTime(applicationReport.getFinishTime());\n \n     GetJobReportResponse resp \u003d\n         recordFactory.newRecordInstance(GetJobReportResponse.class);\n     resp.setJobReport(jobReport);\n     return resp;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetJobReportResponse getJobReport(GetJobReportRequest request)\n      throws IOException {\n    JobReport jobReport \u003d\n      recordFactory.newRecordInstance(JobReport.class);\n    jobReport.setJobId(request.getJobId());\n    jobReport.setJobState(jobState);\n    jobReport.setUser(applicationReport.getUser());\n    jobReport.setStartTime(applicationReport.getStartTime());\n    YarnApplicationState state \u003d applicationReport.getYarnApplicationState();\n    if (Apps.isApplicationFinalState(state)) {\n      jobReport.setDiagnostics(applicationReport.getDiagnostics());\n    }\n    jobReport.setJobName(applicationReport.getName());\n    jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n    jobReport.setFinishTime(applicationReport.getFinishTime());\n\n    GetJobReportResponse resp \u003d\n        recordFactory.newRecordInstance(GetJobReportResponse.class);\n    resp.setJobReport(jobReport);\n    return resp;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java",
      "extendedDetails": {}
    },
    "6529c87551e07e9da1e1b273eff4c6bad6b3e838": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6579. JobStatus#getFailureInfo should not output diagnostic information when the job is running. (Akira AJISAKA via wangda)\n",
      "commitDate": "15/03/16 5:28 PM",
      "commitName": "6529c87551e07e9da1e1b273eff4c6bad6b3e838",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "27/07/13 1:04 PM",
      "commitNameOld": "f179afc68d863ea35f3ce5c06f1690fb7a4e8f02",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 962.18,
      "commitsBetweenForRepo": 7328,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,23 @@\n   public GetJobReportResponse getJobReport(GetJobReportRequest request)\n       throws IOException {\n     JobReport jobReport \u003d\n       recordFactory.newRecordInstance(JobReport.class);\n     jobReport.setJobId(request.getJobId());\n     jobReport.setJobState(jobState);\n     jobReport.setUser(applicationReport.getUser());\n     jobReport.setStartTime(applicationReport.getStartTime());\n-    jobReport.setDiagnostics(applicationReport.getDiagnostics());\n+    YarnApplicationState state \u003d applicationReport.getYarnApplicationState();\n+    if (state \u003d\u003d YarnApplicationState.KILLED\n+        || state \u003d\u003d YarnApplicationState.FAILED\n+        || state \u003d\u003d YarnApplicationState.FINISHED) {\n+      jobReport.setDiagnostics(applicationReport.getDiagnostics());\n+    }\n     jobReport.setJobName(applicationReport.getName());\n     jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n     jobReport.setFinishTime(applicationReport.getFinishTime());\n \n     GetJobReportResponse resp \u003d\n         recordFactory.newRecordInstance(GetJobReportResponse.class);\n     resp.setJobReport(jobReport);\n     return resp;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetJobReportResponse getJobReport(GetJobReportRequest request)\n      throws IOException {\n    JobReport jobReport \u003d\n      recordFactory.newRecordInstance(JobReport.class);\n    jobReport.setJobId(request.getJobId());\n    jobReport.setJobState(jobState);\n    jobReport.setUser(applicationReport.getUser());\n    jobReport.setStartTime(applicationReport.getStartTime());\n    YarnApplicationState state \u003d applicationReport.getYarnApplicationState();\n    if (state \u003d\u003d YarnApplicationState.KILLED\n        || state \u003d\u003d YarnApplicationState.FAILED\n        || state \u003d\u003d YarnApplicationState.FINISHED) {\n      jobReport.setDiagnostics(applicationReport.getDiagnostics());\n    }\n    jobReport.setJobName(applicationReport.getName());\n    jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n    jobReport.setFinishTime(applicationReport.getFinishTime());\n\n    GetJobReportResponse resp \u003d\n        recordFactory.newRecordInstance(GetJobReportResponse.class);\n    resp.setJobReport(jobReport);\n    return resp;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java",
      "extendedDetails": {}
    },
    "7359dc32d3781d5318efee4cf6185616c7c00c18": {
      "type": "Yexceptionschange",
      "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/05/13 8:34 PM",
      "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/04/13 10:42 PM",
      "commitNameOld": "448df186467c64d992d6d8c9b35b645dbd48898c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 17.91,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public GetJobReportResponse getJobReport(GetJobReportRequest request)\n-      throws YarnRemoteException {\n+      throws IOException {\n     JobReport jobReport \u003d\n       recordFactory.newRecordInstance(JobReport.class);\n     jobReport.setJobId(request.getJobId());\n     jobReport.setJobState(jobState);\n     jobReport.setUser(applicationReport.getUser());\n     jobReport.setStartTime(applicationReport.getStartTime());\n     jobReport.setDiagnostics(applicationReport.getDiagnostics());\n     jobReport.setJobName(applicationReport.getName());\n     jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n     jobReport.setFinishTime(applicationReport.getFinishTime());\n \n     GetJobReportResponse resp \u003d\n         recordFactory.newRecordInstance(GetJobReportResponse.class);\n     resp.setJobReport(jobReport);\n     return resp;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetJobReportResponse getJobReport(GetJobReportRequest request)\n      throws IOException {\n    JobReport jobReport \u003d\n      recordFactory.newRecordInstance(JobReport.class);\n    jobReport.setJobId(request.getJobId());\n    jobReport.setJobState(jobState);\n    jobReport.setUser(applicationReport.getUser());\n    jobReport.setStartTime(applicationReport.getStartTime());\n    jobReport.setDiagnostics(applicationReport.getDiagnostics());\n    jobReport.setJobName(applicationReport.getName());\n    jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n    jobReport.setFinishTime(applicationReport.getFinishTime());\n\n    GetJobReportResponse resp \u003d\n        recordFactory.newRecordInstance(GetJobReportResponse.class);\n    resp.setJobReport(jobReport);\n    return resp;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[IOException]"
      }
    },
    "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2952. Fixed ResourceManager/MR-client to consume diagnostics for AM failures in a couple of corner cases. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/09/11 7:46 AM",
      "commitName": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "02/09/11 11:22 PM",
      "commitNameOld": "6bdf5746d5d677f9c17598768c4ae86384c000c6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 22.35,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n   public GetJobReportResponse getJobReport(GetJobReportRequest request)\n       throws YarnRemoteException {\n-    GetJobReportResponse resp \u003d \n-      recordFactory.newRecordInstance(GetJobReportResponse.class);\n     JobReport jobReport \u003d\n       recordFactory.newRecordInstance(JobReport.class);\n     jobReport.setJobId(request.getJobId());\n-    jobReport.setJobState(this.jobState);\n+    jobReport.setJobState(jobState);\n+    jobReport.setUser(applicationReport.getUser());\n+    jobReport.setStartTime(applicationReport.getStartTime());\n+    jobReport.setDiagnostics(applicationReport.getDiagnostics());\n+    jobReport.setJobName(applicationReport.getName());\n+    jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n+    jobReport.setFinishTime(applicationReport.getFinishTime());\n \n-    jobReport.setUser(this.user);\n-    // TODO: Add jobName \u0026 other job information that is available\n+    GetJobReportResponse resp \u003d \n+        recordFactory.newRecordInstance(GetJobReportResponse.class);\n     resp.setJobReport(jobReport);\n     return resp;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetJobReportResponse getJobReport(GetJobReportRequest request)\n      throws YarnRemoteException {\n    JobReport jobReport \u003d\n      recordFactory.newRecordInstance(JobReport.class);\n    jobReport.setJobId(request.getJobId());\n    jobReport.setJobState(jobState);\n    jobReport.setUser(applicationReport.getUser());\n    jobReport.setStartTime(applicationReport.getStartTime());\n    jobReport.setDiagnostics(applicationReport.getDiagnostics());\n    jobReport.setJobName(applicationReport.getName());\n    jobReport.setTrackingUrl(applicationReport.getTrackingUrl());\n    jobReport.setFinishTime(applicationReport.getFinishTime());\n\n    GetJobReportResponse resp \u003d \n        recordFactory.newRecordInstance(GetJobReportResponse.class);\n    resp.setJobReport(jobReport);\n    return resp;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java",
      "extendedDetails": {}
    },
    "6bdf5746d5d677f9c17598768c4ae86384c000c6": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2716. MRReliabilityTest job fails because of missing job-file. Contributed by Jeffrey Naisbitt.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1164805 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/09/11 11:22 PM",
      "commitName": "6bdf5746d5d677f9c17598768c4ae86384c000c6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 11:35 PM",
      "commitNameOld": "f2b91a8367a762091482074505618b570a520b19",
      "commitAuthorOld": "Sharad Agarwal",
      "daysBetweenCommits": 8.99,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n   public GetJobReportResponse getJobReport(GetJobReportRequest request)\n       throws YarnRemoteException {\n     GetJobReportResponse resp \u003d \n       recordFactory.newRecordInstance(GetJobReportResponse.class);\n     JobReport jobReport \u003d\n       recordFactory.newRecordInstance(JobReport.class);\n     jobReport.setJobId(request.getJobId());\n-    jobReport.setJobState(jobState);\n+    jobReport.setJobState(this.jobState);\n+\n+    jobReport.setUser(this.user);\n+    // TODO: Add jobName \u0026 other job information that is available\n     resp.setJobReport(jobReport);\n     return resp;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetJobReportResponse getJobReport(GetJobReportRequest request)\n      throws YarnRemoteException {\n    GetJobReportResponse resp \u003d \n      recordFactory.newRecordInstance(GetJobReportResponse.class);\n    JobReport jobReport \u003d\n      recordFactory.newRecordInstance(JobReport.class);\n    jobReport.setJobId(request.getJobId());\n    jobReport.setJobState(this.jobState);\n\n    jobReport.setUser(this.user);\n    // TODO: Add jobName \u0026 other job information that is available\n    resp.setJobReport(jobReport);\n    return resp;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java",
      "extendedDetails": {}
    },
    "f2b91a8367a762091482074505618b570a520b19": {
      "type": "Yintroduced",
      "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 11:35 PM",
      "commitName": "f2b91a8367a762091482074505618b570a520b19",
      "commitAuthor": "Sharad Agarwal",
      "diff": "@@ -0,0 +1,11 @@\n+  public GetJobReportResponse getJobReport(GetJobReportRequest request)\n+      throws YarnRemoteException {\n+    GetJobReportResponse resp \u003d \n+      recordFactory.newRecordInstance(GetJobReportResponse.class);\n+    JobReport jobReport \u003d\n+      recordFactory.newRecordInstance(JobReport.class);\n+    jobReport.setJobId(request.getJobId());\n+    jobReport.setJobState(jobState);\n+    resp.setJobReport(jobReport);\n+    return resp;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetJobReportResponse getJobReport(GetJobReportRequest request)\n      throws YarnRemoteException {\n    GetJobReportResponse resp \u003d \n      recordFactory.newRecordInstance(GetJobReportResponse.class);\n    JobReport jobReport \u003d\n      recordFactory.newRecordInstance(JobReport.class);\n    jobReport.setJobId(request.getJobId());\n    jobReport.setJobState(jobState);\n    resp.setJobReport(jobReport);\n    return resp;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java"
    }
  }
}