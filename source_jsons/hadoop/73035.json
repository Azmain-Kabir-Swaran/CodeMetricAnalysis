{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpensslAesCtrCryptoCodec.java",
  "functionName": "setConf",
  "functionId": "setConf___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/OpensslAesCtrCryptoCodec.java",
  "functionStartLine": 57,
  "functionEndLine": 72,
  "numCommitsSeen": 10,
  "timeTaken": 1405,
  "changeHistory": [
    "e62cbcbc83026a7af43eac6223fe53f9de963d91",
    "df4dcd3e75f1f935bd9a537e63758fee71cf4e02",
    "905c90b066503c966ff78e3d1add57f4aff6e9c6",
    "03c858dad46e440028c58a716630160338db4b14"
  ],
  "changeHistoryShort": {
    "e62cbcbc83026a7af43eac6223fe53f9de963d91": "Ybodychange",
    "df4dcd3e75f1f935bd9a537e63758fee71cf4e02": "Ybodychange",
    "905c90b066503c966ff78e3d1add57f4aff6e9c6": "Ybodychange",
    "03c858dad46e440028c58a716630160338db4b14": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e62cbcbc83026a7af43eac6223fe53f9de963d91": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16011. OsSecureRandom very slow compared to other SecureRandom implementations. Contributed by Siyao Meng.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/04/19 2:29 PM",
      "commitName": "e62cbcbc83026a7af43eac6223fe53f9de963d91",
      "commitAuthor": "Siyao Meng",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 624.71,
      "commitsBetweenForRepo": 5348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     final Class\u003c? extends Random\u003e klass \u003d conf.getClass(\n-        HADOOP_SECURITY_SECURE_RANDOM_IMPL_KEY, OsSecureRandom.class, \n+        HADOOP_SECURITY_SECURE_RANDOM_IMPL_KEY, OpensslSecureRandom.class,\n         Random.class);\n     try {\n       random \u003d ReflectionUtils.newInstance(klass, conf);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Using \" + klass.getName() + \" as random number generator.\");\n       }\n     } catch (Exception e) {\n       LOG.info(\"Unable to use \" + klass.getName() + \".  Falling back to \" +\n           \"Java SecureRandom.\", e);\n       this.random \u003d new SecureRandom();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    final Class\u003c? extends Random\u003e klass \u003d conf.getClass(\n        HADOOP_SECURITY_SECURE_RANDOM_IMPL_KEY, OpensslSecureRandom.class,\n        Random.class);\n    try {\n      random \u003d ReflectionUtils.newInstance(klass, conf);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Using \" + klass.getName() + \" as random number generator.\");\n      }\n    } catch (Exception e) {\n      LOG.info(\"Unable to use \" + klass.getName() + \".  Falling back to \" +\n          \"Java SecureRandom.\", e);\n      this.random \u003d new SecureRandom();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/OpensslAesCtrCryptoCodec.java",
      "extendedDetails": {}
    },
    "df4dcd3e75f1f935bd9a537e63758fee71cf4e02": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12788. OpensslAesCtrCryptoCodec should log which random number generator is used. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "10/02/16 2:54 PM",
      "commitName": "df4dcd3e75f1f935bd9a537e63758fee71cf4e02",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "21/07/14 5:58 PM",
      "commitNameOld": "6fac3e9b611c43b4f7a97c80f86dd761782cef09",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 568.91,
      "commitsBetweenForRepo": 4673,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     final Class\u003c? extends Random\u003e klass \u003d conf.getClass(\n         HADOOP_SECURITY_SECURE_RANDOM_IMPL_KEY, OsSecureRandom.class, \n         Random.class);\n     try {\n       random \u003d ReflectionUtils.newInstance(klass, conf);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Using \" + klass.getName() + \" as random number generator.\");\n+      }\n     } catch (Exception e) {\n       LOG.info(\"Unable to use \" + klass.getName() + \".  Falling back to \" +\n           \"Java SecureRandom.\", e);\n       this.random \u003d new SecureRandom();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    final Class\u003c? extends Random\u003e klass \u003d conf.getClass(\n        HADOOP_SECURITY_SECURE_RANDOM_IMPL_KEY, OsSecureRandom.class, \n        Random.class);\n    try {\n      random \u003d ReflectionUtils.newInstance(klass, conf);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Using \" + klass.getName() + \" as random number generator.\");\n      }\n    } catch (Exception e) {\n      LOG.info(\"Unable to use \" + klass.getName() + \".  Falling back to \" +\n          \"Java SecureRandom.\", e);\n      this.random \u003d new SecureRandom();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/OpensslAesCtrCryptoCodec.java",
      "extendedDetails": {}
    },
    "905c90b066503c966ff78e3d1add57f4aff6e9c6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10734. Implement high-performance secure random number sources. (Yi Liu via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1609874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/14 6:29 PM",
      "commitName": "905c90b066503c966ff78e3d1add57f4aff6e9c6",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "09/07/14 11:27 PM",
      "commitNameOld": "d90671137e005e05b3f41ee1f66387dee95b609a",
      "commitAuthorOld": "Yi Liu",
      "daysBetweenCommits": 1.79,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,13 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n+    final Class\u003c? extends Random\u003e klass \u003d conf.getClass(\n+        HADOOP_SECURITY_SECURE_RANDOM_IMPL_KEY, OsSecureRandom.class, \n+        Random.class);\n+    try {\n+      random \u003d ReflectionUtils.newInstance(klass, conf);\n+    } catch (Exception e) {\n+      LOG.info(\"Unable to use \" + klass.getName() + \".  Falling back to \" +\n+          \"Java SecureRandom.\", e);\n+      this.random \u003d new SecureRandom();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    final Class\u003c? extends Random\u003e klass \u003d conf.getClass(\n        HADOOP_SECURITY_SECURE_RANDOM_IMPL_KEY, OsSecureRandom.class, \n        Random.class);\n    try {\n      random \u003d ReflectionUtils.newInstance(klass, conf);\n    } catch (Exception e) {\n      LOG.info(\"Unable to use \" + klass.getName() + \".  Falling back to \" +\n          \"Java SecureRandom.\", e);\n      this.random \u003d new SecureRandom();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/OpensslAesCtrCryptoCodec.java",
      "extendedDetails": {}
    },
    "03c858dad46e440028c58a716630160338db4b14": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10693: add files left out of previous checkin (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607769 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 4:51 PM",
      "commitName": "03c858dad46e440028c58a716630160338db4b14",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,3 @@\n+  public void setConf(Configuration conf) {\n+    this.conf \u003d conf;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/OpensslAesCtrCryptoCodec.java"
    }
  }
}