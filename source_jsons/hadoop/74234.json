{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LdapGroupsMapping.java",
  "functionName": "getPasswordForBindUser",
  "functionId": "getPasswordForBindUser___keyPrefix-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
  "functionStartLine": 903,
  "functionEndLine": 917,
  "numCommitsSeen": 29,
  "timeTaken": 713,
  "changeHistory": [
    "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000"
  ],
  "changeHistoryShort": {
    "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16125. Support multiple bind users in LdapGroupsMapping. Contributed by Lukas Majercak.\n",
      "commitDate": "25/02/19 1:39 PM",
      "commitName": "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,15 @@\n+  private String getPasswordForBindUser(String keyPrefix) {\n+    String password;\n+    String alias \u003d conf.get(keyPrefix + BIND_PASSWORD_ALIAS_SUFFIX,\n+        BIND_PASSWORD_ALIAS_DEFAULT);\n+    password \u003d getPasswordFromCredentialProviders(conf, alias, \"\");\n+    if (password.isEmpty()) {\n+      password \u003d getPassword(conf, keyPrefix + BIND_PASSWORD_SUFFIX,\n+          BIND_PASSWORD_DEFAULT);\n+      if (password.isEmpty()) {\n+        password \u003d extractPassword(conf.get(\n+            keyPrefix + BIND_PASSWORD_FILE_SUFFIX, BIND_PASSWORD_FILE_DEFAULT));\n+      }\n+    }\n+    return password;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getPasswordForBindUser(String keyPrefix) {\n    String password;\n    String alias \u003d conf.get(keyPrefix + BIND_PASSWORD_ALIAS_SUFFIX,\n        BIND_PASSWORD_ALIAS_DEFAULT);\n    password \u003d getPasswordFromCredentialProviders(conf, alias, \"\");\n    if (password.isEmpty()) {\n      password \u003d getPassword(conf, keyPrefix + BIND_PASSWORD_SUFFIX,\n          BIND_PASSWORD_DEFAULT);\n      if (password.isEmpty()) {\n        password \u003d extractPassword(conf.get(\n            keyPrefix + BIND_PASSWORD_FILE_SUFFIX, BIND_PASSWORD_FILE_DEFAULT));\n      }\n    }\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java"
    }
  }
}