{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BootstrapStandby.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
  "functionStartLine": 109,
  "functionEndLine": 131,
  "numCommitsSeen": 35,
  "timeTaken": 2541,
  "changeHistory": [
    "9d0d580031006ca6db9b4150f17ab678ce68a257",
    "9eee97508f350ed4629abb04e7781514ffa04070",
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd",
    "5dbbe0e0a5d31689d3425e490865f95057dc051c",
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7"
  ],
  "changeHistoryShort": {
    "9d0d580031006ca6db9b4150f17ab678ce68a257": "Ybodychange",
    "9eee97508f350ed4629abb04e7781514ffa04070": "Ybodychange",
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd": "Ybodychange",
    "5dbbe0e0a5d31689d3425e490865f95057dc051c": "Ybodychange",
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d0d580031006ca6db9b4150f17ab678ce68a257": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14806. Bootstrap standby may fail if with in-progress tailing. Contributed by Chen Liang and Erik Krogen.\n",
      "commitDate": "06/11/19 9:30 AM",
      "commitName": "9d0d580031006ca6db9b4150f17ab678ce68a257",
      "commitAuthor": "Chen Liang",
      "commitDateOld": "07/12/18 6:30 PM",
      "commitNameOld": "8fc0d04517912766a3102f3e611f7d0fabd2f815",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 333.62,
      "commitsBetweenForRepo": 2438,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   public int run(String[] args) throws Exception {\n     parseArgs(args);\n+    // Disable using the RPC tailing mechanism for bootstrapping the standby\n+    // since it is less efficient in this case; see HDFS-14806\n+    conf.setBoolean(DFSConfigKeys.DFS_HA_TAILEDITS_INPROGRESS_KEY, false);\n     parseConfAndFindOtherNN();\n     NameNode.checkAllowFormat(conf);\n \n     InetSocketAddress myAddr \u003d DFSUtilClient.getNNAddress(conf);\n     SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n         DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, myAddr.getHostName());\n \n     return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n       @Override\n       public Integer run() {\n         try {\n           return doRun();\n         } catch (IOException e) {\n           throw new RuntimeException(e);\n         }\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    parseArgs(args);\n    // Disable using the RPC tailing mechanism for bootstrapping the standby\n    // since it is less efficient in this case; see HDFS-14806\n    conf.setBoolean(DFSConfigKeys.DFS_HA_TAILEDITS_INPROGRESS_KEY, false);\n    parseConfAndFindOtherNN();\n    NameNode.checkAllowFormat(conf);\n\n    InetSocketAddress myAddr \u003d DFSUtilClient.getNNAddress(conf);\n    SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n        DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, myAddr.getHostName());\n\n    return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n      @Override\n      public Integer run() {\n        try {\n          return doRun();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "9eee97508f350ed4629abb04e7781514ffa04070": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "17/09/15 2:18 PM",
      "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/06/15 5:26 PM",
      "commitNameOld": "49dfad942970459297f72632ed8dfd353e0c86de",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 85.87,
      "commitsBetweenForRepo": 506,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public int run(String[] args) throws Exception {\n     parseArgs(args);\n     parseConfAndFindOtherNN();\n     NameNode.checkAllowFormat(conf);\n \n-    InetSocketAddress myAddr \u003d NameNode.getAddress(conf);\n+    InetSocketAddress myAddr \u003d DFSUtilClient.getNNAddress(conf);\n     SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n         DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, myAddr.getHostName());\n \n     return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n       @Override\n       public Integer run() {\n         try {\n           return doRun();\n         } catch (IOException e) {\n           throw new RuntimeException(e);\n         }\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    parseArgs(args);\n    parseConfAndFindOtherNN();\n    NameNode.checkAllowFormat(conf);\n\n    InetSocketAddress myAddr \u003d DFSUtilClient.getNNAddress(conf);\n    SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n        DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, myAddr.getHostName());\n\n    return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n      @Override\n      public Integer run() {\n        try {\n          return doRun();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6181. Fix the wrong property names in NFS user guide. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1585563 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/04/14 11:55 AM",
      "commitName": "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "27/02/14 5:21 PM",
      "commitNameOld": "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 38.73,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public int run(String[] args) throws Exception {\n     parseArgs(args);\n     parseConfAndFindOtherNN();\n     NameNode.checkAllowFormat(conf);\n \n     InetSocketAddress myAddr \u003d NameNode.getAddress(conf);\n     SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n-        DFS_NAMENODE_USER_NAME_KEY, myAddr.getHostName());\n+        DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, myAddr.getHostName());\n \n     return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n       @Override\n       public Integer run() {\n         try {\n           return doRun();\n         } catch (IOException e) {\n           throw new RuntimeException(e);\n         }\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    parseArgs(args);\n    parseConfAndFindOtherNN();\n    NameNode.checkAllowFormat(conf);\n\n    InetSocketAddress myAddr \u003d NameNode.getAddress(conf);\n    SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n        DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY, myAddr.getHostName());\n\n    return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n      @Override\n      public Integer run() {\n        try {\n          return doRun();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "5dbbe0e0a5d31689d3425e490865f95057dc051c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2617. Replaced Kerberized SSL for image transfer and fsck with SPNEGO-based solution. Contributed by Jakob Homan, Alejandro Abdelnur, and Aaron T. Myers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1334216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/12 2:58 PM",
      "commitName": "5dbbe0e0a5d31689d3425e490865f95057dc051c",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "16/04/12 2:51 PM",
      "commitNameOld": "574f99bd6b596c39bd1accc7a134de3f5ad96bd2",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 18.0,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   public int run(String[] args) throws Exception {\n-    SecurityUtil.initKrb5CipherSuites();\n     parseArgs(args);\n     parseConfAndFindOtherNN();\n     NameNode.checkAllowFormat(conf);\n \n     InetSocketAddress myAddr \u003d NameNode.getAddress(conf);\n     SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n         DFS_NAMENODE_USER_NAME_KEY, myAddr.getHostName());\n \n     return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n       @Override\n       public Integer run() {\n         try {\n           return doRun();\n         } catch (IOException e) {\n           throw new RuntimeException(e);\n         }\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    parseArgs(args);\n    parseConfAndFindOtherNN();\n    NameNode.checkAllowFormat(conf);\n\n    InetSocketAddress myAddr \u003d NameNode.getAddress(conf);\n    SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n        DFS_NAMENODE_USER_NAME_KEY, myAddr.getHostName());\n\n    return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n      @Override\n      public Integer run() {\n        try {\n          return doRun();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2731. Add command to bootstrap the Standby Node\u0027s name directories from the Active NameNode. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299807 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/12 12:41 PM",
      "commitName": "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+  public int run(String[] args) throws Exception {\n+    SecurityUtil.initKrb5CipherSuites();\n+    parseArgs(args);\n+    parseConfAndFindOtherNN();\n+    NameNode.checkAllowFormat(conf);\n+\n+    InetSocketAddress myAddr \u003d NameNode.getAddress(conf);\n+    SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n+        DFS_NAMENODE_USER_NAME_KEY, myAddr.getHostName());\n+\n+    return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n+      @Override\n+      public Integer run() {\n+        try {\n+          return doRun();\n+        } catch (IOException e) {\n+          throw new RuntimeException(e);\n+        }\n+      }\n+    });\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    SecurityUtil.initKrb5CipherSuites();\n    parseArgs(args);\n    parseConfAndFindOtherNN();\n    NameNode.checkAllowFormat(conf);\n\n    InetSocketAddress myAddr \u003d NameNode.getAddress(conf);\n    SecurityUtil.login(conf, DFS_NAMENODE_KEYTAB_FILE_KEY,\n        DFS_NAMENODE_USER_NAME_KEY, myAddr.getHostName());\n\n    return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n      @Override\n      public Integer run() {\n        try {\n          return doRun();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java"
    }
  }
}