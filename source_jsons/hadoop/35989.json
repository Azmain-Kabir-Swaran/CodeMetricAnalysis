{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 142,
  "functionEndLine": 161,
  "numCommitsSeen": 78,
  "timeTaken": 6822,
  "changeHistory": [
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "a6410a542e59acd9827457df4a257a843f785c29",
    "733aa993134ba324c712590fa92b8ef230b0839a",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
    "db9304788187c700647c4d84caeb3b5ad6d868d8",
    "a826d432f9b45550cc5ab79ef63ca39b176dabb2",
    "db1b674b50ddecf2774f4092d677c412722bdcb1",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
    "e52f67e3897a67a0b6d29e557a31cfa881738821",
    "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4",
    "7a241aee90f042672fc30ba402ed9dff912bc535",
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
    "ca72e11158047f3d00db9e9e61c632e757383287",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
    "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "0928502029ef141759008997335ea2cd836a7154"
  ],
  "changeHistoryShort": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "a6410a542e59acd9827457df4a257a843f785c29": "Ybodychange",
    "733aa993134ba324c712590fa92b8ef230b0839a": "Ybodychange",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": "Ybodychange",
    "db9304788187c700647c4d84caeb3b5ad6d868d8": "Ybodychange",
    "a826d432f9b45550cc5ab79ef63ca39b176dabb2": "Ybodychange",
    "db1b674b50ddecf2774f4092d677c412722bdcb1": "Ybodychange",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": "Ybodychange",
    "e52f67e3897a67a0b6d29e557a31cfa881738821": "Ybodychange",
    "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4": "Ybodychange",
    "7a241aee90f042672fc30ba402ed9dff912bc535": "Ymodifierchange",
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d": "Ybodychange",
    "ca72e11158047f3d00db9e9e61c632e757383287": "Ybodychange",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": "Ybodychange",
    "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac": "Ybodychange",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": "Ybodychange",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ymultichange(Ymodifierchange,Ybodychange)",
    "0928502029ef141759008997335ea2cd836a7154": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/05/17 2:44 PM",
      "commitNameOld": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 75.35,
      "commitsBetweenForRepo": 358,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     autoFailoverEnabled \u003d\n-        rmContext.isHAEnabled() \u0026\u0026 HAUtil.isAutomaticFailoverEnabled(conf);\n+        rm.getRMContext().isHAEnabled()\n+            \u0026\u0026 HAUtil.isAutomaticFailoverEnabled(conf);\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     daemonUser \u003d UserGroupInformation.getCurrentUser();\n     authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n     authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n \n     isCentralizedNodeLabelConfiguration \u003d\n         YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    autoFailoverEnabled \u003d\n        rm.getRMContext().isHAEnabled()\n            \u0026\u0026 HAUtil.isAutomaticFailoverEnabled(conf);\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    daemonUser \u003d UserGroupInformation.getCurrentUser();\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n\n    isCentralizedNodeLabelConfiguration \u003d\n        YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a6410a542e59acd9827457df4a257a843f785c29": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5709. Cleanup leader election configs and pluggability. Contribtued by Karthik Kambatla\n",
      "commitDate": "09/12/16 5:00 PM",
      "commitName": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthor": "Jian He",
      "commitDateOld": "31/10/16 4:26 PM",
      "commitNameOld": "733aa993134ba324c712590fa92b8ef230b0839a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 39.07,
      "commitsBetweenForRepo": 299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,19 @@\n   public void serviceInit(Configuration conf) throws Exception {\n-    if (rmContext.isHAEnabled()) {\n-      curatorEnabled \u003d conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n-          YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n-      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n-      if (autoFailoverEnabled \u0026\u0026 !curatorEnabled) {\n-        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n-          embeddedElector \u003d createEmbeddedElectorService();\n-          addIfService(embeddedElector);\n-        }\n-      }\n-\n-    }\n+    autoFailoverEnabled \u003d\n+        rmContext.isHAEnabled() \u0026\u0026 HAUtil.isAutomaticFailoverEnabled(conf);\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     daemonUser \u003d UserGroupInformation.getCurrentUser();\n     authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n     authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n \n     isCentralizedNodeLabelConfiguration \u003d\n         YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    autoFailoverEnabled \u003d\n        rmContext.isHAEnabled() \u0026\u0026 HAUtil.isAutomaticFailoverEnabled(conf);\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    daemonUser \u003d UserGroupInformation.getCurrentUser();\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n\n    isCentralizedNodeLabelConfiguration \u003d\n        YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "733aa993134ba324c712590fa92b8ef230b0839a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4998. Minor cleanup to UGI use in AdminService. (Daniel Templeton via kasha)\n",
      "commitDate": "31/10/16 4:26 PM",
      "commitName": "733aa993134ba324c712590fa92b8ef230b0839a",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "02/10/16 11:02 PM",
      "commitNameOld": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 28.72,
      "commitsBetweenForRepo": 255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       curatorEnabled \u003d conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n           YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled \u0026\u0026 !curatorEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           embeddedElector \u003d createEmbeddedElectorService();\n           addIfService(embeddedElector);\n         }\n       }\n \n     }\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     daemonUser \u003d UserGroupInformation.getCurrentUser();\n     authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n-    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n-        .getCurrentUser());\n+    authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n \n     isCentralizedNodeLabelConfiguration \u003d\n         YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      curatorEnabled \u003d conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n          YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled \u0026\u0026 !curatorEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n\n    }\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    daemonUser \u003d UserGroupInformation.getCurrentUser();\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n\n    isCentralizedNodeLabelConfiguration \u003d\n        YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4438. Implement RM leader election with curator. Contributed by Jian He\n",
      "commitDate": "07/01/16 2:33 PM",
      "commitName": "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
      "commitAuthor": "Xuan",
      "commitDateOld": "10/10/15 10:51 PM",
      "commitNameOld": "db9304788187c700647c4d84caeb3b5ad6d868d8",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 88.7,
      "commitsBetweenForRepo": 600,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n+      curatorEnabled \u003d conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n+          YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n-      if (autoFailoverEnabled) {\n+      if (autoFailoverEnabled \u0026\u0026 !curatorEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           embeddedElector \u003d createEmbeddedElectorService();\n           addIfService(embeddedElector);\n         }\n       }\n+\n     }\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     daemonUser \u003d UserGroupInformation.getCurrentUser();\n     authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n     authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n         .getCurrentUser());\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n \n     isCentralizedNodeLabelConfiguration \u003d\n         YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      curatorEnabled \u003d conf.getBoolean(YarnConfiguration.CURATOR_LEADER_ELECTOR,\n          YarnConfiguration.DEFAULT_CURATOR_LEADER_ELECTOR_ENABLED);\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled \u0026\u0026 !curatorEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n\n    }\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    daemonUser \u003d UserGroupInformation.getCurrentUser();\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n        .getCurrentUser());\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n\n    isCentralizedNodeLabelConfiguration \u003d\n        YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "db9304788187c700647c4d84caeb3b5ad6d868d8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3964. Support NodeLabelsProvider at Resource Manager side.\nContributed by Dian Fu.\n",
      "commitDate": "10/10/15 10:51 PM",
      "commitName": "db9304788187c700647c4d84caeb3b5ad6d868d8",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "15/09/15 7:56 AM",
      "commitNameOld": "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 25.62,
      "commitsBetweenForRepo": 198,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           embeddedElector \u003d createEmbeddedElectorService();\n           addIfService(embeddedElector);\n         }\n       }\n     }\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     daemonUser \u003d UserGroupInformation.getCurrentUser();\n     authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n     authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n         .getCurrentUser());\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n \n-    isDistributedNodeLabelConfiguration \u003d\n-        YarnConfiguration.isDistributedNodeLabelConfiguration(conf);\n+    isCentralizedNodeLabelConfiguration \u003d\n+        YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n    }\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    daemonUser \u003d UserGroupInformation.getCurrentUser();\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n        .getCurrentUser());\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n\n    isCentralizedNodeLabelConfiguration \u003d\n        YarnConfiguration.isCentralizedNodeLabelConfiguration(conf);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a826d432f9b45550cc5ab79ef63ca39b176dabb2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3804. Both RM are on standBy state when kerberos user not in yarn.admin.acl. Contributed by Varun Saxena\n",
      "commitDate": "17/06/15 4:23 PM",
      "commitName": "a826d432f9b45550cc5ab79ef63ca39b176dabb2",
      "commitAuthor": "Xuan",
      "commitDateOld": "07/05/15 11:44 PM",
      "commitNameOld": "ef3d66d4624d360e75c016e36824a6782d6a9746",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 40.69,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           embeddedElector \u003d createEmbeddedElectorService();\n           addIfService(embeddedElector);\n         }\n       }\n     }\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n+    daemonUser \u003d UserGroupInformation.getCurrentUser();\n     authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n-    authorizer.setAdmins(new AccessControlList(conf.get(\n-      YarnConfiguration.YARN_ADMIN_ACL,\n-        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n+    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n         .getCurrentUser());\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n \n     isDistributedNodeLabelConfiguration \u003d\n         YarnConfiguration.isDistributedNodeLabelConfiguration(conf);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n    }\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    daemonUser \u003d UserGroupInformation.getCurrentUser();\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n        .getCurrentUser());\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n\n    isDistributedNodeLabelConfiguration \u003d\n        YarnConfiguration.isDistributedNodeLabelConfiguration(conf);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "db1b674b50ddecf2774f4092d677c412722bdcb1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
      "commitDate": "27/04/15 4:24 PM",
      "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/04/15 11:19 AM",
      "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.21,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           embeddedElector \u003d createEmbeddedElectorService();\n           addIfService(embeddedElector);\n         }\n       }\n     }\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n     authorizer.setAdmins(new AccessControlList(conf.get(\n       YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n         .getCurrentUser());\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n+\n+    isDistributedNodeLabelConfiguration \u003d\n+        YarnConfiguration.isDistributedNodeLabelConfiguration(conf);\n+\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n    }\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(new AccessControlList(conf.get(\n      YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n        .getCurrentUser());\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n\n    isDistributedNodeLabelConfiguration \u003d\n        YarnConfiguration.isDistributedNodeLabelConfiguration(conf);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3100. Made YARN authorization pluggable. Contributed by Jian He.\n",
      "commitDate": "09/02/15 8:34 PM",
      "commitName": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "26/12/14 6:59 AM",
      "commitNameOld": "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 45.57,
      "commitsBetweenForRepo": 302,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           embeddedElector \u003d createEmbeddedElectorService();\n           addIfService(embeddedElector);\n         }\n       }\n     }\n \n     masterServiceBindAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n-\n-    adminAcl \u003d new AccessControlList(conf.get(\n-        YarnConfiguration.YARN_ADMIN_ACL,\n-        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n+    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n+    authorizer.setAdmins(new AccessControlList(conf.get(\n+      YarnConfiguration.YARN_ADMIN_ACL,\n+        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n+        .getCurrentUser());\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n    }\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    authorizer \u003d YarnAuthorizationProvider.getInstance(conf);\n    authorizer.setAdmins(new AccessControlList(conf.get(\n      YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n        .getCurrentUser());\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "e52f67e3897a67a0b6d29e557a31cfa881738821": {
      "type": "Ybodychange",
      "commitMessage": "    YARN-1994. Expose YARN/MR endpoints on multiple interfaces. Contributed by Craig Welch, Milan Potocnik,and Arpit Agarwal\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1614981 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 1:06 PM",
      "commitName": "e52f67e3897a67a0b6d29e557a31cfa881738821",
      "commitAuthor": "Xuan Gong",
      "commitDateOld": "13/05/14 1:00 PM",
      "commitNameOld": "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 79.0,
      "commitsBetweenForRepo": 505,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           embeddedElector \u003d createEmbeddedElectorService();\n           addIfService(embeddedElector);\n         }\n       }\n     }\n \n-    masterServiceAddress \u003d conf.getSocketAddr(\n+    masterServiceBindAddress \u003d conf.getSocketAddr(\n+        YarnConfiguration.RM_BIND_HOST,\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n+\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n    }\n\n    masterServiceBindAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_BIND_HOST,\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1861. Fixed a bug in RM to reset leader-election on fencing that was causing both RMs to be stuck in standby mode when automatic failover is enabled. Contributed by Karthik Kambatla and Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594356 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 1:00 PM",
      "commitName": "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/04/14 12:49 PM",
      "commitNameOld": "7a241aee90f042672fc30ba402ed9dff912bc535",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.01,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n-          addIfService(createEmbeddedElectorService());\n+          embeddedElector \u003d createEmbeddedElectorService();\n+          addIfService(embeddedElector);\n         }\n       }\n     }\n \n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          embeddedElector \u003d createEmbeddedElectorService();\n          addIfService(embeddedElector);\n        }\n      }\n    }\n\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "7a241aee90f042672fc30ba402ed9dff912bc535": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1929. Fixed a deadlock in ResourceManager that occurs when failover happens right at the time of shutdown. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1591071 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/04/14 12:49 PM",
      "commitName": "7a241aee90f042672fc30ba402ed9dff912bc535",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/03/14 11:41 AM",
      "commitNameOld": "a60434368cdf0fd119d024c2ed10942abdb2e7f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 57.01,
      "commitsBetweenForRepo": 413,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-  public synchronized void serviceInit(Configuration conf) throws Exception {\n+  public void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           addIfService(createEmbeddedElectorService());\n         }\n       }\n     }\n \n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          addIfService(createEmbeddedElectorService());\n        }\n      }\n    }\n\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[public]"
      }
    },
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1459. Changed ResourceManager to depend its service initialization on the configuration-provider mechanism during startup too. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566791 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 2:50 PM",
      "commitName": "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/02/14 2:46 PM",
      "commitNameOld": "b812af964d100c50d065cdd9007cef31ea2642a8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.0,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,20 @@\n   public synchronized void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           addIfService(createEmbeddedElectorService());\n         }\n       }\n     }\n \n-    this.configurationProvider \u003d\n-        ConfigurationProviderFactory.getConfigurationProvider(conf);\n-    configurationProvider.init(conf);\n-\n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          addIfService(createEmbeddedElectorService());\n        }\n      }\n    }\n\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "ca72e11158047f3d00db9e9e61c632e757383287": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1611. Introduced the concept of a configuration provider which can be used by ResourceManager to read configuration locally or from remote systems so as to help RM failover. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564002 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/14 11:07 AM",
      "commitName": "ca72e11158047f3d00db9e9e61c632e757383287",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/01/14 5:56 PM",
      "commitNameOld": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 27.72,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   public synchronized void serviceInit(Configuration conf) throws Exception {\n     if (rmContext.isHAEnabled()) {\n       autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n       if (autoFailoverEnabled) {\n         if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n           addIfService(createEmbeddedElectorService());\n         }\n       }\n     }\n \n+    this.configurationProvider \u003d\n+        ConfigurationProviderFactory.getConfigurationProvider(conf);\n+    configurationProvider.init(conf);\n+\n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          addIfService(createEmbeddedElectorService());\n        }\n      }\n    }\n\n    this.configurationProvider \u003d\n        ConfigurationProviderFactory.getConfigurationProvider(conf);\n    configurationProvider.init(conf);\n\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 5:56 PM",
      "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "28/12/13 9:43 PM",
      "commitNameOld": "e7120079bd1dd8c87267e126dac58cbc70b8d827",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 8.84,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,20 @@\n   public synchronized void serviceInit(Configuration conf) throws Exception {\n+    if (rmContext.isHAEnabled()) {\n+      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n+      if (autoFailoverEnabled) {\n+        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n+          addIfService(createEmbeddedElectorService());\n+        }\n+      }\n+    }\n+\n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void serviceInit(Configuration conf) throws Exception {\n    if (rmContext.isHAEnabled()) {\n      autoFailoverEnabled \u003d HAUtil.isAutomaticFailoverEnabled(conf);\n      if (autoFailoverEnabled) {\n        if (HAUtil.isAutomaticFailoverEmbedded(conf)) {\n          addIfService(createEmbeddedElectorService());\n        }\n      }\n    }\n\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1523. Use StandbyException instead of RMNotYetReadyException (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/12/13 7:28 PM",
      "commitName": "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "16/12/13 3:36 PM",
      "commitNameOld": "49ad07af9782c2c2608799573e815a7cfc26851f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.16,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public synchronized void serviceInit(Configuration conf) throws Exception {\n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n+    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void serviceInit(Configuration conf) throws Exception {\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 7:13 AM",
      "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "02/12/13 2:18 PM",
      "commitNameOld": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.7,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,10 @@\n   public synchronized void serviceInit(Configuration conf) throws Exception {\n-    haEnabled \u003d HAUtil.isHAEnabled(conf);\n-    if (haEnabled) {\n-      HAUtil.verifyAndSetConfiguration(conf);\n-      rm.setConf(conf);\n-    }\n-    rm.createAndInitActiveServices();\n-\n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void serviceInit(Configuration conf) throws Exception {\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "29/10/13 2:03 PM",
          "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 34.05,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,17 @@\n-  public void serviceInit(Configuration conf) throws Exception {\n+  public synchronized void serviceInit(Configuration conf) throws Exception {\n+    haEnabled \u003d HAUtil.isHAEnabled(conf);\n+    if (haEnabled) {\n+      HAUtil.verifyAndSetConfiguration(conf);\n+      rm.setConf(conf);\n+    }\n+    rm.createAndInitActiveServices();\n+\n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void serviceInit(Configuration conf) throws Exception {\n    haEnabled \u003d HAUtil.isHAEnabled(conf);\n    if (haEnabled) {\n      HAUtil.verifyAndSetConfiguration(conf);\n      rm.setConf(conf);\n    }\n    rm.createAndInitActiveServices();\n\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "29/10/13 2:03 PM",
          "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 34.05,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,17 @@\n-  public void serviceInit(Configuration conf) throws Exception {\n+  public synchronized void serviceInit(Configuration conf) throws Exception {\n+    haEnabled \u003d HAUtil.isHAEnabled(conf);\n+    if (haEnabled) {\n+      HAUtil.verifyAndSetConfiguration(conf);\n+      rm.setConf(conf);\n+    }\n+    rm.createAndInitActiveServices();\n+\n     masterServiceAddress \u003d conf.getSocketAddr(\n         YarnConfiguration.RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void serviceInit(Configuration conf) throws Exception {\n    haEnabled \u003d HAUtil.isHAEnabled(conf);\n    if (haEnabled) {\n      HAUtil.verifyAndSetConfiguration(conf);\n      rm.setConf(conf);\n    }\n    rm.createAndInitActiveServices();\n\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Yintroduced",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,10 @@\n+  public void serviceInit(Configuration conf) throws Exception {\n+    masterServiceAddress \u003d conf.getSocketAddr(\n+        YarnConfiguration.RM_ADMIN_ADDRESS,\n+        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n+        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n+    adminAcl \u003d new AccessControlList(conf.get(\n+        YarnConfiguration.YARN_ADMIN_ACL,\n+        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    masterServiceAddress \u003d conf.getSocketAddr(\n        YarnConfiguration.RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADMIN_PORT);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}