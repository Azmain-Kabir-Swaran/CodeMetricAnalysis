{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "addResourceRequestToAsk",
  "functionId": "addResourceRequestToAsk___remoteRequest-ResourceRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 908,
  "functionEndLine": 923,
  "numCommitsSeen": 69,
  "timeTaken": 1509,
  "changeHistory": [
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "0a61990855c23ebfa065145fa01084e84781b51c"
  ],
  "changeHistoryShort": {
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "0a61990855c23ebfa065145fa01084e84781b51c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void addResourceRequestToAsk(ResourceRequest remoteRequest) {\n    // This code looks weird but is needed because of the following scenario.\n    // A ResourceRequest is removed from the remoteRequestTable. A 0 container \n    // request is added to \u0027ask\u0027 to notify the RM about not needing it any more.\n    // Before the call to allocate, the user now requests more containers. If \n    // the locations of the 0 size request and the new request are the same\n    // (with the difference being only container count), then the set comparator\n    // will consider both to be the same and not add the new request to ask. So \n    // we need to check for the \"same\" request being present and remove it and \n    // then add it back. The comparator is container count agnostic.\n    // This should happen only rarely but we do need to guard against it.\n    if(ask.contains(remoteRequest)) {\n      ask.remove(remoteRequest);\n    }\n    ask.add(remoteRequest);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
      }
    },
    "0a61990855c23ebfa065145fa01084e84781b51c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-103. Add a yarn AM-RM client module. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/13 11:11 AM",
      "commitName": "0a61990855c23ebfa065145fa01084e84781b51c",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,16 @@\n+  private void addResourceRequestToAsk(ResourceRequest remoteRequest) {\n+    // This code looks weird but is needed because of the following scenario.\n+    // A ResourceRequest is removed from the remoteRequestTable. A 0 container \n+    // request is added to \u0027ask\u0027 to notify the RM about not needing it any more.\n+    // Before the call to allocate, the user now requests more containers. If \n+    // the locations of the 0 size request and the new request are the same\n+    // (with the difference being only container count), then the set comparator\n+    // will consider both to be the same and not add the new request to ask. So \n+    // we need to check for the \"same\" request being present and remove it and \n+    // then add it back. The comparator is container count agnostic.\n+    // This should happen only rarely but we do need to guard against it.\n+    if(ask.contains(remoteRequest)) {\n+      ask.remove(remoteRequest);\n+    }\n+    ask.add(remoteRequest);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequestToAsk(ResourceRequest remoteRequest) {\n    // This code looks weird but is needed because of the following scenario.\n    // A ResourceRequest is removed from the remoteRequestTable. A 0 container \n    // request is added to \u0027ask\u0027 to notify the RM about not needing it any more.\n    // Before the call to allocate, the user now requests more containers. If \n    // the locations of the 0 size request and the new request are the same\n    // (with the difference being only container count), then the set comparator\n    // will consider both to be the same and not add the new request to ask. So \n    // we need to check for the \"same\" request being present and remove it and \n    // then add it back. The comparator is container count agnostic.\n    // This should happen only rarely but we do need to guard against it.\n    if(ask.contains(remoteRequest)) {\n      ask.remove(remoteRequest);\n    }\n    ask.add(remoteRequest);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java"
    }
  }
}