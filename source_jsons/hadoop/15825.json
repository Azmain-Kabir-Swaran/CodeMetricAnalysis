{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpFSServer.java",
  "functionName": "delete",
  "functionId": "delete___path-String(annotations-@PathParam(\"path\"))__op-OperationParam(annotations-@QueryParam(OperationParam.NAME))__params-Parameters(annotations-@Context)__request-HttpServletRequest(annotations-@Context)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
  "functionStartLine": 488,
  "functionEndLine": 526,
  "numCommitsSeen": 75,
  "timeTaken": 2457,
  "changeHistory": [
    "8a4bff02c1534c6bf529726f2bbe414ac4c172e8",
    "828429dec1a7fd3bb5aab6f5bd81423cf8fcbc90",
    "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686",
    "d263653ae22217439d1740c936d1c78e1644d73e",
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "8a4bff02c1534c6bf529726f2bbe414ac4c172e8": "Ybodychange",
    "828429dec1a7fd3bb5aab6f5bd81423cf8fcbc90": "Ymultichange(Yparameterchange,Ybodychange)",
    "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686": "Ymultichange(Yparameterchange,Ybodychange)",
    "d263653ae22217439d1740c936d1c78e1644d73e": "Ymultichange(Yparameterchange,Ybodychange)",
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a4bff02c1534c6bf529726f2bbe414ac4c172e8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12117. HttpFS does not seem to support SNAPSHOT related methods for WebHDFS REST Interface. Contributed by Wellington Chevreuil.\n",
      "commitDate": "08/08/17 11:58 PM",
      "commitName": "8a4bff02c1534c6bf529726f2bbe414ac4c172e8",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "12/07/17 2:15 PM",
      "commitNameOld": "931a49800ef05ee0a6fdc143be1799abb228735d",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 27.41,
      "commitsBetweenForRepo": 215,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,39 @@\n   public Response delete(@PathParam(\"path\") String path,\n                          @QueryParam(OperationParam.NAME) OperationParam op,\n                          @Context Parameters params,\n                          @Context HttpServletRequest request)\n     throws IOException, FileSystemAccessException {\n     UserGroupInformation user \u003d HttpUserGroupInformation.get();\n     Response response;\n     path \u003d makeAbsolute(path);\n     MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n     MDC.put(\"hostname\", request.getRemoteAddr());\n     switch (op.value()) {\n       case DELETE: {\n         Boolean recursive \u003d\n           params.get(RecursiveParam.NAME,  RecursiveParam.class);\n         AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n         FSOperations.FSDelete command \u003d\n           new FSOperations.FSDelete(path, recursive);\n         JSONObject json \u003d fsExecute(user, command);\n         response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n         break;\n       }\n+      case DELETESNAPSHOT: {\n+        String snapshotName \u003d params.get(SnapshotNameParam.NAME,\n+            SnapshotNameParam.class);\n+        FSOperations.FSDeleteSnapshot command \u003d\n+                new FSOperations.FSDeleteSnapshot(path, snapshotName);\n+        fsExecute(user, command);\n+        AUDIT_LOG.info(\"[{}] deleted snapshot [{}]\", path, snapshotName);\n+        response \u003d Response.ok().build();\n+        break;\n+      }\n       default: {\n         throw new IOException(\n           MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                                op.value()));\n       }\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response delete(@PathParam(\"path\") String path,\n                         @QueryParam(OperationParam.NAME) OperationParam op,\n                         @Context Parameters params,\n                         @Context HttpServletRequest request)\n    throws IOException, FileSystemAccessException {\n    UserGroupInformation user \u003d HttpUserGroupInformation.get();\n    Response response;\n    path \u003d makeAbsolute(path);\n    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n    MDC.put(\"hostname\", request.getRemoteAddr());\n    switch (op.value()) {\n      case DELETE: {\n        Boolean recursive \u003d\n          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d\n          new FSOperations.FSDelete(path, recursive);\n        JSONObject json \u003d fsExecute(user, command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n      case DELETESNAPSHOT: {\n        String snapshotName \u003d params.get(SnapshotNameParam.NAME,\n            SnapshotNameParam.class);\n        FSOperations.FSDeleteSnapshot command \u003d\n                new FSOperations.FSDeleteSnapshot(path, snapshotName);\n        fsExecute(user, command);\n        AUDIT_LOG.info(\"[{}] deleted snapshot [{}]\", path, snapshotName);\n        response \u003d Response.ok().build();\n        break;\n      }\n      default: {\n        throw new IOException(\n          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                               op.value()));\n      }\n    }\n    return response;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
      "extendedDetails": {}
    },
    "828429dec1a7fd3bb5aab6f5bd81423cf8fcbc90": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7232. Populate hostname in httpfs audit log (Zoran Dimitrijevic via aw)\n",
      "commitDate": "23/10/14 2:06 PM",
      "commitName": "828429dec1a7fd3bb5aab6f5bd81423cf8fcbc90",
      "commitAuthor": "Allen Wittenauer",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7232. Populate hostname in httpfs audit log (Zoran Dimitrijevic via aw)\n",
          "commitDate": "23/10/14 2:06 PM",
          "commitName": "828429dec1a7fd3bb5aab6f5bd81423cf8fcbc90",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "13/08/14 1:27 PM",
          "commitNameOld": "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 71.03,
          "commitsBetweenForRepo": 700,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,29 @@\n   public Response delete(@PathParam(\"path\") String path,\n                          @QueryParam(OperationParam.NAME) OperationParam op,\n-                         @Context Parameters params)\n+                         @Context Parameters params,\n+                         @Context HttpServletRequest request)\n     throws IOException, FileSystemAccessException {\n     UserGroupInformation user \u003d HttpUserGroupInformation.get();\n     Response response;\n     path \u003d makeAbsolute(path);\n     MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n+    MDC.put(\"hostname\", request.getRemoteAddr());\n     switch (op.value()) {\n       case DELETE: {\n         Boolean recursive \u003d\n           params.get(RecursiveParam.NAME,  RecursiveParam.class);\n         AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n         FSOperations.FSDelete command \u003d\n           new FSOperations.FSDelete(path, recursive);\n         JSONObject json \u003d fsExecute(user, command);\n         response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n         break;\n       }\n       default: {\n         throw new IOException(\n           MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                                op.value()));\n       }\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response delete(@PathParam(\"path\") String path,\n                         @QueryParam(OperationParam.NAME) OperationParam op,\n                         @Context Parameters params,\n                         @Context HttpServletRequest request)\n    throws IOException, FileSystemAccessException {\n    UserGroupInformation user \u003d HttpUserGroupInformation.get();\n    Response response;\n    path \u003d makeAbsolute(path);\n    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n    MDC.put(\"hostname\", request.getRemoteAddr());\n    switch (op.value()) {\n      case DELETE: {\n        Boolean recursive \u003d\n          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d\n          new FSOperations.FSDelete(path, recursive);\n        JSONObject json \u003d fsExecute(user, command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n      default: {\n        throw new IOException(\n          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                               op.value()));\n      }\n    }\n    return response;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
          "extendedDetails": {
            "oldValue": "[path-String(annotations-@PathParam(\"path\")), op-OperationParam(annotations-@QueryParam(OperationParam.NAME)), params-Parameters(annotations-@Context)]",
            "newValue": "[path-String(annotations-@PathParam(\"path\")), op-OperationParam(annotations-@QueryParam(OperationParam.NAME)), params-Parameters(annotations-@Context), request-HttpServletRequest(annotations-@Context)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7232. Populate hostname in httpfs audit log (Zoran Dimitrijevic via aw)\n",
          "commitDate": "23/10/14 2:06 PM",
          "commitName": "828429dec1a7fd3bb5aab6f5bd81423cf8fcbc90",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "13/08/14 1:27 PM",
          "commitNameOld": "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 71.03,
          "commitsBetweenForRepo": 700,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,29 @@\n   public Response delete(@PathParam(\"path\") String path,\n                          @QueryParam(OperationParam.NAME) OperationParam op,\n-                         @Context Parameters params)\n+                         @Context Parameters params,\n+                         @Context HttpServletRequest request)\n     throws IOException, FileSystemAccessException {\n     UserGroupInformation user \u003d HttpUserGroupInformation.get();\n     Response response;\n     path \u003d makeAbsolute(path);\n     MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n+    MDC.put(\"hostname\", request.getRemoteAddr());\n     switch (op.value()) {\n       case DELETE: {\n         Boolean recursive \u003d\n           params.get(RecursiveParam.NAME,  RecursiveParam.class);\n         AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n         FSOperations.FSDelete command \u003d\n           new FSOperations.FSDelete(path, recursive);\n         JSONObject json \u003d fsExecute(user, command);\n         response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n         break;\n       }\n       default: {\n         throw new IOException(\n           MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                                op.value()));\n       }\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response delete(@PathParam(\"path\") String path,\n                         @QueryParam(OperationParam.NAME) OperationParam op,\n                         @Context Parameters params,\n                         @Context HttpServletRequest request)\n    throws IOException, FileSystemAccessException {\n    UserGroupInformation user \u003d HttpUserGroupInformation.get();\n    Response response;\n    path \u003d makeAbsolute(path);\n    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n    MDC.put(\"hostname\", request.getRemoteAddr());\n    switch (op.value()) {\n      case DELETE: {\n        Boolean recursive \u003d\n          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d\n          new FSOperations.FSDelete(path, recursive);\n        JSONObject json \u003d fsExecute(user, command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n      default: {\n        throw new IOException(\n          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                               op.value()));\n      }\n    }\n    return response;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6849. Replace HttpFS custom proxyuser handling with common implementation. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617831 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/08/14 1:27 PM",
      "commitName": "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6849. Replace HttpFS custom proxyuser handling with common implementation. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617831 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/08/14 1:27 PM",
          "commitName": "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/06/14 8:59 AM",
          "commitNameOld": "46162a213f60f915df76c60b0412f45a021e1e7e",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 50.19,
          "commitsBetweenForRepo": 363,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,27 @@\n-  public Response delete(@Context Principal user,\n-                      @PathParam(\"path\") String path,\n-                      @QueryParam(OperationParam.NAME) OperationParam op,\n-                      @Context Parameters params)\n+  public Response delete(@PathParam(\"path\") String path,\n+                         @QueryParam(OperationParam.NAME) OperationParam op,\n+                         @Context Parameters params)\n     throws IOException, FileSystemAccessException {\n+    UserGroupInformation user \u003d HttpUserGroupInformation.get();\n     Response response;\n     path \u003d makeAbsolute(path);\n     MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n-    String doAs \u003d params.get(DoAsParam.NAME, DoAsParam.class);\n     switch (op.value()) {\n       case DELETE: {\n         Boolean recursive \u003d\n           params.get(RecursiveParam.NAME,  RecursiveParam.class);\n         AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n         FSOperations.FSDelete command \u003d\n           new FSOperations.FSDelete(path, recursive);\n-        JSONObject json \u003d fsExecute(user, doAs, command);\n+        JSONObject json \u003d fsExecute(user, command);\n         response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n         break;\n       }\n       default: {\n         throw new IOException(\n           MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                                op.value()));\n       }\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response delete(@PathParam(\"path\") String path,\n                         @QueryParam(OperationParam.NAME) OperationParam op,\n                         @Context Parameters params)\n    throws IOException, FileSystemAccessException {\n    UserGroupInformation user \u003d HttpUserGroupInformation.get();\n    Response response;\n    path \u003d makeAbsolute(path);\n    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n    switch (op.value()) {\n      case DELETE: {\n        Boolean recursive \u003d\n          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d\n          new FSOperations.FSDelete(path, recursive);\n        JSONObject json \u003d fsExecute(user, command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n      default: {\n        throw new IOException(\n          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                               op.value()));\n      }\n    }\n    return response;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
          "extendedDetails": {
            "oldValue": "[user-Principal(annotations-@Context), path-String(annotations-@PathParam(\"path\")), op-OperationParam(annotations-@QueryParam(OperationParam.NAME)), params-Parameters(annotations-@Context)]",
            "newValue": "[path-String(annotations-@PathParam(\"path\")), op-OperationParam(annotations-@QueryParam(OperationParam.NAME)), params-Parameters(annotations-@Context)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6849. Replace HttpFS custom proxyuser handling with common implementation. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617831 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/08/14 1:27 PM",
          "commitName": "065d9ec5d93e37b4bbd6fd27cb411dc58b0fb686",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/06/14 8:59 AM",
          "commitNameOld": "46162a213f60f915df76c60b0412f45a021e1e7e",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 50.19,
          "commitsBetweenForRepo": 363,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,27 @@\n-  public Response delete(@Context Principal user,\n-                      @PathParam(\"path\") String path,\n-                      @QueryParam(OperationParam.NAME) OperationParam op,\n-                      @Context Parameters params)\n+  public Response delete(@PathParam(\"path\") String path,\n+                         @QueryParam(OperationParam.NAME) OperationParam op,\n+                         @Context Parameters params)\n     throws IOException, FileSystemAccessException {\n+    UserGroupInformation user \u003d HttpUserGroupInformation.get();\n     Response response;\n     path \u003d makeAbsolute(path);\n     MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n-    String doAs \u003d params.get(DoAsParam.NAME, DoAsParam.class);\n     switch (op.value()) {\n       case DELETE: {\n         Boolean recursive \u003d\n           params.get(RecursiveParam.NAME,  RecursiveParam.class);\n         AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n         FSOperations.FSDelete command \u003d\n           new FSOperations.FSDelete(path, recursive);\n-        JSONObject json \u003d fsExecute(user, doAs, command);\n+        JSONObject json \u003d fsExecute(user, command);\n         response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n         break;\n       }\n       default: {\n         throw new IOException(\n           MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                                op.value()));\n       }\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response delete(@PathParam(\"path\") String path,\n                         @QueryParam(OperationParam.NAME) OperationParam op,\n                         @Context Parameters params)\n    throws IOException, FileSystemAccessException {\n    UserGroupInformation user \u003d HttpUserGroupInformation.get();\n    Response response;\n    path \u003d makeAbsolute(path);\n    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n    switch (op.value()) {\n      case DELETE: {\n        Boolean recursive \u003d\n          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d\n          new FSOperations.FSDelete(path, recursive);\n        JSONObject json \u003d fsExecute(user, command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n      default: {\n        throw new IOException(\n          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                               op.value()));\n      }\n    }\n    return response;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "d263653ae22217439d1740c936d1c78e1644d73e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3481. Refactor HttpFS handling of JAX-RS query string parameters (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1354599 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/12 9:06 AM",
      "commitName": "d263653ae22217439d1740c936d1c78e1644d73e",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3481. Refactor HttpFS handling of JAX-RS query string parameters (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1354599 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/06/12 9:06 AM",
          "commitName": "d263653ae22217439d1740c936d1c78e1644d73e",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/05/12 9:51 AM",
          "commitNameOld": "e937068c0bc68fc56e5c75ccc6b91fd164acf30d",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 33.97,
          "commitsBetweenForRepo": 136,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,28 @@\n   public Response delete(@Context Principal user,\n-                         @PathParam(\"path\") FsPathParam path,\n-                         @QueryParam(DeleteOpParam.NAME) DeleteOpParam op,\n-                         @QueryParam(DeleteRecursiveParam.NAME) @DefaultValue(DeleteRecursiveParam.DEFAULT)\n-                         DeleteRecursiveParam recursive,\n-                         @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) DoAsParam doAs)\n+                      @PathParam(\"path\") String path,\n+                      @QueryParam(OperationParam.NAME) OperationParam op,\n+                      @Context Parameters params)\n     throws IOException, FileSystemAccessException {\n-    Response response \u003d null;\n-    if (op \u003d\u003d null) {\n-      throw new UnsupportedOperationException(MessageFormat.format(\"Missing [{0}] parameter\", DeleteOpParam.NAME));\n-    }\n+    Response response;\n+    path \u003d makeAbsolute(path);\n+    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n+    String doAs \u003d params.get(DoAsParam.NAME, DoAsParam.class);\n     switch (op.value()) {\n       case DELETE: {\n-        path.makeAbsolute();\n-        MDC.put(HttpFSFileSystem.OP_PARAM, \"DELETE\");\n+        Boolean recursive \u003d\n+          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n         AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n-        FSOperations.FSDelete command \u003d new FSOperations.FSDelete(path.value(), recursive.value());\n-        JSONObject json \u003d fsExecute(user, doAs.value(), command);\n+        FSOperations.FSDelete command \u003d\n+          new FSOperations.FSDelete(path, recursive);\n+        JSONObject json \u003d fsExecute(user, doAs, command);\n         response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n         break;\n       }\n+      default: {\n+        throw new IOException(\n+          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n+                               op.value()));\n+      }\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response delete(@Context Principal user,\n                      @PathParam(\"path\") String path,\n                      @QueryParam(OperationParam.NAME) OperationParam op,\n                      @Context Parameters params)\n    throws IOException, FileSystemAccessException {\n    Response response;\n    path \u003d makeAbsolute(path);\n    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n    String doAs \u003d params.get(DoAsParam.NAME, DoAsParam.class);\n    switch (op.value()) {\n      case DELETE: {\n        Boolean recursive \u003d\n          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d\n          new FSOperations.FSDelete(path, recursive);\n        JSONObject json \u003d fsExecute(user, doAs, command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n      default: {\n        throw new IOException(\n          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                               op.value()));\n      }\n    }\n    return response;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
          "extendedDetails": {
            "oldValue": "[user-Principal(annotations-@Context), path-FsPathParam(annotations-@PathParam(\"path\")), op-DeleteOpParam(annotations-@QueryParam(DeleteOpParam.NAME)), recursive-DeleteRecursiveParam(annotations-@QueryParam(DeleteRecursiveParam.NAME)-@DefaultValue(DeleteRecursiveParam.DEFAULT)), doAs-DoAsParam(annotations-@QueryParam(DoAsParam.NAME)-@DefaultValue(DoAsParam.DEFAULT))]",
            "newValue": "[user-Principal(annotations-@Context), path-String(annotations-@PathParam(\"path\")), op-OperationParam(annotations-@QueryParam(OperationParam.NAME)), params-Parameters(annotations-@Context)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3481. Refactor HttpFS handling of JAX-RS query string parameters (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1354599 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/06/12 9:06 AM",
          "commitName": "d263653ae22217439d1740c936d1c78e1644d73e",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/05/12 9:51 AM",
          "commitNameOld": "e937068c0bc68fc56e5c75ccc6b91fd164acf30d",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 33.97,
          "commitsBetweenForRepo": 136,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,28 @@\n   public Response delete(@Context Principal user,\n-                         @PathParam(\"path\") FsPathParam path,\n-                         @QueryParam(DeleteOpParam.NAME) DeleteOpParam op,\n-                         @QueryParam(DeleteRecursiveParam.NAME) @DefaultValue(DeleteRecursiveParam.DEFAULT)\n-                         DeleteRecursiveParam recursive,\n-                         @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) DoAsParam doAs)\n+                      @PathParam(\"path\") String path,\n+                      @QueryParam(OperationParam.NAME) OperationParam op,\n+                      @Context Parameters params)\n     throws IOException, FileSystemAccessException {\n-    Response response \u003d null;\n-    if (op \u003d\u003d null) {\n-      throw new UnsupportedOperationException(MessageFormat.format(\"Missing [{0}] parameter\", DeleteOpParam.NAME));\n-    }\n+    Response response;\n+    path \u003d makeAbsolute(path);\n+    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n+    String doAs \u003d params.get(DoAsParam.NAME, DoAsParam.class);\n     switch (op.value()) {\n       case DELETE: {\n-        path.makeAbsolute();\n-        MDC.put(HttpFSFileSystem.OP_PARAM, \"DELETE\");\n+        Boolean recursive \u003d\n+          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n         AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n-        FSOperations.FSDelete command \u003d new FSOperations.FSDelete(path.value(), recursive.value());\n-        JSONObject json \u003d fsExecute(user, doAs.value(), command);\n+        FSOperations.FSDelete command \u003d\n+          new FSOperations.FSDelete(path, recursive);\n+        JSONObject json \u003d fsExecute(user, doAs, command);\n         response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n         break;\n       }\n+      default: {\n+        throw new IOException(\n+          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n+                               op.value()));\n+      }\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response delete(@Context Principal user,\n                      @PathParam(\"path\") String path,\n                      @QueryParam(OperationParam.NAME) OperationParam op,\n                      @Context Parameters params)\n    throws IOException, FileSystemAccessException {\n    Response response;\n    path \u003d makeAbsolute(path);\n    MDC.put(HttpFSFileSystem.OP_PARAM, op.value().name());\n    String doAs \u003d params.get(DoAsParam.NAME, DoAsParam.class);\n    switch (op.value()) {\n      case DELETE: {\n        Boolean recursive \u003d\n          params.get(RecursiveParam.NAME,  RecursiveParam.class);\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d\n          new FSOperations.FSDelete(path, recursive);\n        JSONObject json \u003d fsExecute(user, doAs, command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n      default: {\n        throw new IOException(\n          MessageFormat.format(\"Invalid HTTP DELETE operation [{0}]\",\n                               op.value()));\n      }\n    }\n    return response;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,24 @@\n+  public Response delete(@Context Principal user,\n+                         @PathParam(\"path\") FsPathParam path,\n+                         @QueryParam(DeleteOpParam.NAME) DeleteOpParam op,\n+                         @QueryParam(DeleteRecursiveParam.NAME) @DefaultValue(DeleteRecursiveParam.DEFAULT)\n+                         DeleteRecursiveParam recursive,\n+                         @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) DoAsParam doAs)\n+    throws IOException, FileSystemAccessException {\n+    Response response \u003d null;\n+    if (op \u003d\u003d null) {\n+      throw new UnsupportedOperationException(MessageFormat.format(\"Missing [{0}] parameter\", DeleteOpParam.NAME));\n+    }\n+    switch (op.value()) {\n+      case DELETE: {\n+        path.makeAbsolute();\n+        MDC.put(HttpFSFileSystem.OP_PARAM, \"DELETE\");\n+        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n+        FSOperations.FSDelete command \u003d new FSOperations.FSDelete(path.value(), recursive.value());\n+        JSONObject json \u003d fsExecute(user, doAs.value(), command);\n+        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n+        break;\n+      }\n+    }\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response delete(@Context Principal user,\n                         @PathParam(\"path\") FsPathParam path,\n                         @QueryParam(DeleteOpParam.NAME) DeleteOpParam op,\n                         @QueryParam(DeleteRecursiveParam.NAME) @DefaultValue(DeleteRecursiveParam.DEFAULT)\n                         DeleteRecursiveParam recursive,\n                         @QueryParam(DoAsParam.NAME) @DefaultValue(DoAsParam.DEFAULT) DoAsParam doAs)\n    throws IOException, FileSystemAccessException {\n    Response response \u003d null;\n    if (op \u003d\u003d null) {\n      throw new UnsupportedOperationException(MessageFormat.format(\"Missing [{0}] parameter\", DeleteOpParam.NAME));\n    }\n    switch (op.value()) {\n      case DELETE: {\n        path.makeAbsolute();\n        MDC.put(HttpFSFileSystem.OP_PARAM, \"DELETE\");\n        AUDIT_LOG.info(\"[{}] recursive [{}]\", path, recursive);\n        FSOperations.FSDelete command \u003d new FSOperations.FSDelete(path.value(), recursive.value());\n        JSONObject json \u003d fsExecute(user, doAs.value(), command);\n        response \u003d Response.ok(json).type(MediaType.APPLICATION_JSON).build();\n        break;\n      }\n    }\n    return response;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/HttpFSServer.java"
    }
  }
}