{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IncrementalBlockReportManager.java",
  "functionName": "getPerStorageIBR",
  "functionId": "getPerStorageIBR___storage-DatanodeStorage",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/IncrementalBlockReportManager.java",
  "functionStartLine": 233,
  "functionEndLine": 243,
  "numCommitsSeen": 6,
  "timeTaken": 1265,
  "changeHistory": [
    "1168ece59640d8ad3166e355d2e82deec2fbaf14",
    "4e5e1c0f9938e51699c0437731e7b2eef699d6da"
  ],
  "changeHistoryShort": {
    "1168ece59640d8ad3166e355d2e82deec2fbaf14": "Ybodychange",
    "4e5e1c0f9938e51699c0437731e7b2eef699d6da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1168ece59640d8ad3166e355d2e82deec2fbaf14": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11534. Add counters for number of blocks in pending IBR. Contributed by Xiaobing Zhou.\n",
      "commitDate": "24/03/17 2:33 PM",
      "commitName": "1168ece59640d8ad3166e355d2e82deec2fbaf14",
      "commitAuthor": "Xiaobing Zhou",
      "commitDateOld": "04/04/16 6:49 PM",
      "commitNameOld": "818d6b799eead13a17a0214172df60a269b046fb",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 353.82,
      "commitsBetweenForRepo": 2389,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   private PerStorageIBR getPerStorageIBR(DatanodeStorage storage) {\n     PerStorageIBR perStorage \u003d pendingIBRs.get(storage);\n     if (perStorage \u003d\u003d null) {\n       // This is the first time we are adding incremental BR state for\n       // this storage so create a new map. This is required once per\n       // storage, per service actor.\n-      perStorage \u003d new PerStorageIBR();\n+      perStorage \u003d new PerStorageIBR(dnMetrics);\n       pendingIBRs.put(storage, perStorage);\n     }\n     return perStorage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private PerStorageIBR getPerStorageIBR(DatanodeStorage storage) {\n    PerStorageIBR perStorage \u003d pendingIBRs.get(storage);\n    if (perStorage \u003d\u003d null) {\n      // This is the first time we are adding incremental BR state for\n      // this storage so create a new map. This is required once per\n      // storage, per service actor.\n      perStorage \u003d new PerStorageIBR(dnMetrics);\n      pendingIBRs.put(storage, perStorage);\n    }\n    return perStorage;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/IncrementalBlockReportManager.java",
      "extendedDetails": {}
    },
    "4e5e1c0f9938e51699c0437731e7b2eef699d6da": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9726. Refactor IBR code to a new class.\n",
      "commitDate": "05/02/16 7:17 AM",
      "commitName": "4e5e1c0f9938e51699c0437731e7b2eef699d6da",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,11 @@\n+  private PerStorageIBR getPerStorageIBR(DatanodeStorage storage) {\n+    PerStorageIBR perStorage \u003d pendingIBRs.get(storage);\n+    if (perStorage \u003d\u003d null) {\n+      // This is the first time we are adding incremental BR state for\n+      // this storage so create a new map. This is required once per\n+      // storage, per service actor.\n+      perStorage \u003d new PerStorageIBR();\n+      pendingIBRs.put(storage, perStorage);\n+    }\n+    return perStorage;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private PerStorageIBR getPerStorageIBR(DatanodeStorage storage) {\n    PerStorageIBR perStorage \u003d pendingIBRs.get(storage);\n    if (perStorage \u003d\u003d null) {\n      // This is the first time we are adding incremental BR state for\n      // this storage so create a new map. This is required once per\n      // storage, per service actor.\n      perStorage \u003d new PerStorageIBR();\n      pendingIBRs.put(storage, perStorage);\n    }\n    return perStorage;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/IncrementalBlockReportManager.java"
    }
  }
}