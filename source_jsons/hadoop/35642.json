{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineServiceV1Publisher.java",
  "functionName": "containerCreated",
  "functionId": "containerCreated___container-RMContainer__createdTime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
  "functionStartLine": 292,
  "functionEndLine": 318,
  "numCommitsSeen": 40,
  "timeTaken": 4542,
  "changeHistory": [
    "1f304b0c7f261369dd68839507bb609a949965ad",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
    "f3c661e8dddc80726f1084ff27815d179540889c",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "85f6d67fa78511f255fcfa810afc9a156a7b483b",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "1f304b0c7f261369dd68839507bb609a949965ad": "Ybodychange",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "f3c661e8dddc80726f1084ff27815d179540889c": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "85f6d67fa78511f255fcfa810afc9a156a7b483b": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f304b0c7f261369dd68839507bb609a949965ad": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5699. Retrospect yarn entity fields which are publishing in events info fields. Contributed by Rohith Sharma K S.\n",
      "commitDate": "15/10/16 1:54 PM",
      "commitName": "1f304b0c7f261369dd68839507bb609a949965ad",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "28/09/16 3:40 AM",
      "commitNameOld": "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 17.43,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void containerCreated(RMContainer container, long createdTime) {\n     TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_INFO,\n         container.getAllocatedResource().getMemorySize());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_INFO,\n         container.getAllocatedResource().getVirtualCores());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_INFO,\n         container.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_INFO,\n         container.getAllocatedNode().getPort());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_INFO,\n         container.getAllocatedPriority().getPriority());\n     entityInfo.put(\n-        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n+        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_INFO,\n         container.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n         SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n             .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerCreated(RMContainer container, long createdTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_INFO,\n        container.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_INFO,\n        container.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_INFO,\n        container.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_INFO,\n        container.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_INFO,\n        container.getAllocatedPriority().getPriority());\n    entityInfo.put(\n        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_INFO,\n        container.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
      "extendedDetails": {}
    },
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerCreated(RMContainer container, long createdTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n-        event.getAllocatedResource().getMemorySize());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n-        .getAllocatedResource().getVirtualCores());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n-        .getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n-        .getAllocatedNode().getPort());\n+        container.getAllocatedResource().getMemorySize());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n+        container.getAllocatedResource().getVirtualCores());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+        container.getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+        container.getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n-        event.getAllocatedPriority().getPriority());\n+        container.getAllocatedPriority().getPriority());\n     entityInfo.put(\n         ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n-        event.getNodeHttpAddress());\n+        container.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerCreated(RMContainer container, long createdTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        container.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n        container.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        container.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        container.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        container.getAllocatedPriority().getPriority());\n    entityInfo.put(\n        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n        container.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "publishContainerCreatedEvent",
            "newValue": "containerCreated"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerCreated(RMContainer container, long createdTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n-        event.getAllocatedResource().getMemorySize());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n-        .getAllocatedResource().getVirtualCores());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n-        .getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n-        .getAllocatedNode().getPort());\n+        container.getAllocatedResource().getMemorySize());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n+        container.getAllocatedResource().getVirtualCores());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+        container.getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+        container.getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n-        event.getAllocatedPriority().getPriority());\n+        container.getAllocatedPriority().getPriority());\n     entityInfo.put(\n         ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n-        event.getNodeHttpAddress());\n+        container.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerCreated(RMContainer container, long createdTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        container.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n        container.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        container.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        container.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        container.getAllocatedPriority().getPriority());\n    entityInfo.put(\n        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n        container.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "[event-ContainerCreatedEvent]",
            "newValue": "[container-RMContainer, createdTime-long]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerCreated(RMContainer container, long createdTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n-        event.getAllocatedResource().getMemorySize());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n-        .getAllocatedResource().getVirtualCores());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n-        .getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n-        .getAllocatedNode().getPort());\n+        container.getAllocatedResource().getMemorySize());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n+        container.getAllocatedResource().getVirtualCores());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+        container.getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+        container.getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n-        event.getAllocatedPriority().getPriority());\n+        container.getAllocatedPriority().getPriority());\n     entityInfo.put(\n         ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n-        event.getNodeHttpAddress());\n+        container.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerCreated(RMContainer container, long createdTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        container.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n        container.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        container.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        container.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        container.getAllocatedPriority().getPriority());\n    entityInfo.put(\n        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n        container.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerCreated(RMContainer container, long createdTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n-        event.getAllocatedResource().getMemorySize());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n-        .getAllocatedResource().getVirtualCores());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n-        .getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n-        .getAllocatedNode().getPort());\n+        container.getAllocatedResource().getMemorySize());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n+        container.getAllocatedResource().getVirtualCores());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+        container.getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+        container.getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n-        event.getAllocatedPriority().getPriority());\n+        container.getAllocatedPriority().getPriority());\n     entityInfo.put(\n         ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n-        event.getNodeHttpAddress());\n+        container.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(createdTime);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerCreated(RMContainer container, long createdTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        container.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n        container.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        container.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        container.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        container.getAllocatedPriority().getPriority());\n    entityInfo.put(\n        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n        container.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(createdTime);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "f3c661e8dddc80726f1084ff27815d179540889c": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n-  private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n+  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n     TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n         event.getAllocatedResource().getMemorySize());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n-        event.getAllocatedResource().getVirtualCores());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n-        event.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n-        event.getAllocatedNode().getPort());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n+        .getAllocatedResource().getVirtualCores());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n+        .getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n+        .getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n         event.getAllocatedPriority().getPriority());\n     entityInfo.put(\n-      ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n-      event.getNodeHttpAddress());\n+        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n+        event.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n+\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        event.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n        .getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n        .getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n        .getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        event.getAllocatedPriority().getPriority());\n    entityInfo.put(\n        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n        event.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
            "oldMethodName": "publishContainerCreatedEvent",
            "newMethodName": "publishContainerCreatedEvent"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n-  private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n+  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n     TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n         event.getAllocatedResource().getMemorySize());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n-        event.getAllocatedResource().getVirtualCores());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n-        event.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n-        event.getAllocatedNode().getPort());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n+        .getAllocatedResource().getVirtualCores());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n+        .getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n+        .getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n         event.getAllocatedPriority().getPriority());\n     entityInfo.put(\n-      ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n-      event.getNodeHttpAddress());\n+        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n+        event.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n+\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        event.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO, event\n        .getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO, event\n        .getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO, event\n        .getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        event.getAllocatedPriority().getPriority());\n    entityInfo.put(\n        ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n        event.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        }
      ]
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "11/05/16 9:28 AM",
      "commitNameOld": "39f2bac38b111f90d3402229201cdb4315f5d4f5",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 17.98,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n     TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n-        event.getAllocatedResource().getMemory());\n+        event.getAllocatedResource().getMemorySize());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n         event.getAllocatedResource().getVirtualCores());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n         event.getAllocatedNode().getHost());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n         event.getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n         event.getAllocatedPriority().getPriority());\n     entityInfo.put(\n       ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n       event.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        event.getAllocatedResource().getMemorySize());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n        event.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        event.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        event.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        event.getAllocatedPriority().getPriority());\n    entityInfo.put(\n      ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n      event.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
      "extendedDetails": {}
    },
    "85f6d67fa78511f255fcfa810afc9a156a7b483b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1884. Added nodeHttpAddress into ContainerReport and fixed the link to NM web page. Contributed by Xuan Gong.\n",
      "commitDate": "11/03/15 7:35 PM",
      "commitName": "85f6d67fa78511f255fcfa810afc9a156a7b483b",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "03/02/15 5:34 PM",
      "commitNameOld": "e5b56e2af6b48cbc8501f624ae4b4f9d13eccacf",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 36.04,
      "commitsBetweenForRepo": 358,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n     TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n         event.getAllocatedResource().getMemory());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n         event.getAllocatedResource().getVirtualCores());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n         event.getAllocatedNode().getHost());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n         event.getAllocatedNode().getPort());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n         event.getAllocatedPriority().getPriority());\n+    entityInfo.put(\n+      ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n+      event.getNodeHttpAddress());\n     entity.setOtherInfo(entityInfo);\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        event.getAllocatedResource().getMemory());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n        event.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        event.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        event.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        event.getAllocatedPriority().getPriority());\n    entityInfo.put(\n      ContainerMetricsConstants.ALLOCATED_HOST_HTTP_ADDRESS_ENTITY_INFO,\n      event.getNodeHttpAddress());\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,20 @@\n+  private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n+    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n+        event.getAllocatedResource().getMemory());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n+        event.getAllocatedResource().getVirtualCores());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+        event.getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+        event.getAllocatedNode().getPort());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n+        event.getAllocatedPriority().getPriority());\n+    entity.setOtherInfo(entityInfo);\n+    TimelineEvent tEvent \u003d new TimelineEvent();\n+    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n+    tEvent.setTimestamp(event.getTimestamp());\n+    entity.addEvent(tEvent);\n+    putEntity(entity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerCreatedEvent(ContainerCreatedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_MEMORY_ENTITY_INFO,\n        event.getAllocatedResource().getMemory());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_VCORE_ENTITY_INFO,\n        event.getAllocatedResource().getVirtualCores());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        event.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        event.getAllocatedNode().getPort());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PRIORITY_ENTITY_INFO,\n        event.getAllocatedPriority().getPriority());\n    entity.setOtherInfo(entityInfo);\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.CREATED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java"
    }
  }
}