{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceUtils.java",
  "functionName": "tarGzipFolder",
  "functionId": "tarGzipFolder___libDirs-String[]__tarGzipFile-File__filter-FilenameFilter",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java",
  "functionStartLine": 500,
  "functionEndLine": 525,
  "numCommitsSeen": 29,
  "timeTaken": 4851,
  "changeHistory": [
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "09e4b9e897757a678e68f31606a69f62c54d2ca3",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec"
  ],
  "changeHistoryShort": {
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Yfilerename",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymovefromfile",
    "09e4b9e897757a678e68f31606a69f62c54d2ca3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void tarGzipFolder(String[] libDirs, File tarGzipFile,\n      FilenameFilter filter) throws IOException {\n    log.info(\"Tar-gzipping folders {} to {}\", libDirs,\n        tarGzipFile.getAbsolutePath());\n\n    try(TarArchiveOutputStream taos \u003d\n            new TarArchiveOutputStream(new GZIPOutputStream(\n        new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n      for (String libDir : libDirs) {\n        File srcFolder \u003d new File(libDir);\n        List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n        generateFileList(files, srcFolder, srcFolder, true, filter);\n        for (String file : files) {\n          File srcFile \u003d new File(srcFolder, file);\n          TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n              srcFile, file);\n          taos.putArchiveEntry(tarEntry);\n          try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n            org.apache.commons.io.IOUtils.copy(in, taos);\n          }\n          taos.flush();\n          taos.closeArchiveEntry();\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java"
      }
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void tarGzipFolder(String[] libDirs, File tarGzipFile,\n      FilenameFilter filter) throws IOException {\n    log.info(\"Tar-gzipping folders {} to {}\", libDirs,\n        tarGzipFile.getAbsolutePath());\n\n    try(TarArchiveOutputStream taos \u003d\n            new TarArchiveOutputStream(new GZIPOutputStream(\n        new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n      for (String libDir : libDirs) {\n        File srcFolder \u003d new File(libDir);\n        List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n        generateFileList(files, srcFolder, srcFolder, true, filter);\n        for (String file : files) {\n          File srcFile \u003d new File(srcFolder, file);\n          TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n              srcFile, file);\n          taos.putArchiveEntry(tarEntry);\n          try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n            org.apache.commons.io.IOUtils.copy(in, taos);\n          }\n          taos.flush();\n          taos.closeArchiveEntry();\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void tarGzipFolder(String[] libDirs, File tarGzipFile,\n      FilenameFilter filter) throws IOException {\n    log.info(\"Tar-gzipping folders {} to {}\", libDirs,\n        tarGzipFile.getAbsolutePath());\n\n    try(TarArchiveOutputStream taos \u003d\n            new TarArchiveOutputStream(new GZIPOutputStream(\n        new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n      for (String libDir : libDirs) {\n        File srcFolder \u003d new File(libDir);\n        List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n        generateFileList(files, srcFolder, srcFolder, true, filter);\n        for (String file : files) {\n          File srcFile \u003d new File(srcFolder, file);\n          TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n              srcFile, file);\n          taos.putArchiveEntry(tarEntry);\n          try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n            org.apache.commons.io.IOUtils.copy(in, taos);\n          }\n          taos.flush();\n          taos.closeArchiveEntry();\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/SliderUtils.java",
        "oldMethodName": "tarGzipFolder",
        "newMethodName": "tarGzipFolder"
      }
    },
    "09e4b9e897757a678e68f31606a69f62c54d2ca3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5690. Integrate native services modules into maven build. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "09e4b9e897757a678e68f31606a69f62c54d2ca3",
      "commitAuthor": "Gour Saha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5690. Integrate native services modules into maven build. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "09e4b9e897757a678e68f31606a69f62c54d2ca3",
          "commitAuthor": "Gour Saha",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "bce06ed1af8183865889e554c2b353836deb034a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,26 @@\n-  public static void tarGzipFolder(File srcFolder, File tarGzipFile,\n+  public static void tarGzipFolder(String[] libDirs, File tarGzipFile,\n       FilenameFilter filter) throws IOException {\n-    log.info(\"Tar-gzipping folder {} to {}\", srcFolder.getAbsolutePath(),\n+    log.info(\"Tar-gzipping folders {} to {}\", libDirs,\n         tarGzipFile.getAbsolutePath());\n-    List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n-    generateFileList(files, srcFolder, srcFolder, true, filter);\n \n     try(TarArchiveOutputStream taos \u003d\n             new TarArchiveOutputStream(new GZIPOutputStream(\n         new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n-      for (String file : files) {\n-        File srcFile \u003d new File(srcFolder, file);\n-        TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n-            srcFile, file);\n-        taos.putArchiveEntry(tarEntry);\n-        try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n-          org.apache.commons.io.IOUtils.copy(in, taos);\n+      for (String libDir : libDirs) {\n+        File srcFolder \u003d new File(libDir);\n+        List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n+        generateFileList(files, srcFolder, srcFolder, true, filter);\n+        for (String file : files) {\n+          File srcFile \u003d new File(srcFolder, file);\n+          TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n+              srcFile, file);\n+          taos.putArchiveEntry(tarEntry);\n+          try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n+            org.apache.commons.io.IOUtils.copy(in, taos);\n+          }\n+          taos.flush();\n+          taos.closeArchiveEntry();\n         }\n-        taos.flush();\n-        taos.closeArchiveEntry();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void tarGzipFolder(String[] libDirs, File tarGzipFile,\n      FilenameFilter filter) throws IOException {\n    log.info(\"Tar-gzipping folders {} to {}\", libDirs,\n        tarGzipFile.getAbsolutePath());\n\n    try(TarArchiveOutputStream taos \u003d\n            new TarArchiveOutputStream(new GZIPOutputStream(\n        new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n      for (String libDir : libDirs) {\n        File srcFolder \u003d new File(libDir);\n        List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n        generateFileList(files, srcFolder, srcFolder, true, filter);\n        for (String file : files) {\n          File srcFile \u003d new File(srcFolder, file);\n          TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n              srcFile, file);\n          taos.putArchiveEntry(tarEntry);\n          try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n            org.apache.commons.io.IOUtils.copy(in, taos);\n          }\n          taos.flush();\n          taos.closeArchiveEntry();\n        }\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java",
          "extendedDetails": {
            "oldValue": "[srcFolder-File, tarGzipFile-File, filter-FilenameFilter]",
            "newValue": "[libDirs-String[], tarGzipFile-File, filter-FilenameFilter]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5690. Integrate native services modules into maven build. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "09e4b9e897757a678e68f31606a69f62c54d2ca3",
          "commitAuthor": "Gour Saha",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "bce06ed1af8183865889e554c2b353836deb034a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,26 @@\n-  public static void tarGzipFolder(File srcFolder, File tarGzipFile,\n+  public static void tarGzipFolder(String[] libDirs, File tarGzipFile,\n       FilenameFilter filter) throws IOException {\n-    log.info(\"Tar-gzipping folder {} to {}\", srcFolder.getAbsolutePath(),\n+    log.info(\"Tar-gzipping folders {} to {}\", libDirs,\n         tarGzipFile.getAbsolutePath());\n-    List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n-    generateFileList(files, srcFolder, srcFolder, true, filter);\n \n     try(TarArchiveOutputStream taos \u003d\n             new TarArchiveOutputStream(new GZIPOutputStream(\n         new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n-      for (String file : files) {\n-        File srcFile \u003d new File(srcFolder, file);\n-        TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n-            srcFile, file);\n-        taos.putArchiveEntry(tarEntry);\n-        try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n-          org.apache.commons.io.IOUtils.copy(in, taos);\n+      for (String libDir : libDirs) {\n+        File srcFolder \u003d new File(libDir);\n+        List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n+        generateFileList(files, srcFolder, srcFolder, true, filter);\n+        for (String file : files) {\n+          File srcFile \u003d new File(srcFolder, file);\n+          TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n+              srcFile, file);\n+          taos.putArchiveEntry(tarEntry);\n+          try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n+            org.apache.commons.io.IOUtils.copy(in, taos);\n+          }\n+          taos.flush();\n+          taos.closeArchiveEntry();\n         }\n-        taos.flush();\n-        taos.closeArchiveEntry();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void tarGzipFolder(String[] libDirs, File tarGzipFile,\n      FilenameFilter filter) throws IOException {\n    log.info(\"Tar-gzipping folders {} to {}\", libDirs,\n        tarGzipFile.getAbsolutePath());\n\n    try(TarArchiveOutputStream taos \u003d\n            new TarArchiveOutputStream(new GZIPOutputStream(\n        new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n      for (String libDir : libDirs) {\n        File srcFolder \u003d new File(libDir);\n        List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n        generateFileList(files, srcFolder, srcFolder, true, filter);\n        for (String file : files) {\n          File srcFile \u003d new File(srcFolder, file);\n          TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n              srcFile, file);\n          taos.putArchiveEntry(tarEntry);\n          try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n            org.apache.commons.io.IOUtils.copy(in, taos);\n          }\n          taos.flush();\n          taos.closeArchiveEntry();\n        }\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5461. Initial code ported from slider-core module. (jianhe)\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,23 @@\n+  public static void tarGzipFolder(File srcFolder, File tarGzipFile,\n+      FilenameFilter filter) throws IOException {\n+    log.info(\"Tar-gzipping folder {} to {}\", srcFolder.getAbsolutePath(),\n+        tarGzipFile.getAbsolutePath());\n+    List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n+    generateFileList(files, srcFolder, srcFolder, true, filter);\n+\n+    try(TarArchiveOutputStream taos \u003d\n+            new TarArchiveOutputStream(new GZIPOutputStream(\n+        new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n+      for (String file : files) {\n+        File srcFile \u003d new File(srcFolder, file);\n+        TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n+            srcFile, file);\n+        taos.putArchiveEntry(tarEntry);\n+        try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n+          org.apache.commons.io.IOUtils.copy(in, taos);\n+        }\n+        taos.flush();\n+        taos.closeArchiveEntry();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void tarGzipFolder(File srcFolder, File tarGzipFile,\n      FilenameFilter filter) throws IOException {\n    log.info(\"Tar-gzipping folder {} to {}\", srcFolder.getAbsolutePath(),\n        tarGzipFile.getAbsolutePath());\n    List\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n    generateFileList(files, srcFolder, srcFolder, true, filter);\n\n    try(TarArchiveOutputStream taos \u003d\n            new TarArchiveOutputStream(new GZIPOutputStream(\n        new BufferedOutputStream(new FileOutputStream(tarGzipFile))))) {\n      for (String file : files) {\n        File srcFile \u003d new File(srcFolder, file);\n        TarArchiveEntry tarEntry \u003d new TarArchiveEntry(\n            srcFile, file);\n        taos.putArchiveEntry(tarEntry);\n        try(FileInputStream in \u003d new FileInputStream(srcFile)) {\n          org.apache.commons.io.IOUtils.copy(in, taos);\n        }\n        taos.flush();\n        taos.closeArchiveEntry();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/SliderUtils.java"
    }
  }
}