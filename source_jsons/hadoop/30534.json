{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RollingLevelDB.java",
  "functionName": "initRollingLevelDB",
  "functionId": "initRollingLevelDB___dbStartTime-Long__rollingInstanceDBPath-Path",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/RollingLevelDB.java",
  "functionStartLine": 243,
  "functionEndLine": 272,
  "numCommitsSeen": 5,
  "timeTaken": 775,
  "changeHistory": [
    "daf3e4ef8bf73cbe4a799d51b4765809cd81089f"
  ],
  "changeHistoryShort": {
    "daf3e4ef8bf73cbe4a799d51b4765809cd81089f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "daf3e4ef8bf73cbe4a799d51b4765809cd81089f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3448. Added a rolling time-to-live LevelDB timeline store implementation. Contributed by Jonathan Eagles.\n",
      "commitDate": "07/05/15 10:01 AM",
      "commitName": "daf3e4ef8bf73cbe4a799d51b4765809cd81089f",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,30 @@\n+  private void initRollingLevelDB(Long dbStartTime,\n+      Path rollingInstanceDBPath) {\n+    if (rollingdbs.containsKey(dbStartTime)) {\n+      return;\n+    }\n+    Options options \u003d new Options();\n+    options.createIfMissing(true);\n+    options.cacheSize(conf.getLong(\n+        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_READ_CACHE_SIZE,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_LEVELDB_READ_CACHE_SIZE));\n+    options.maxOpenFiles(conf.getInt(\n+        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_MAX_OPEN_FILES,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_LEVELDB_MAX_OPEN_FILES));\n+    options.writeBufferSize(conf.getInt(\n+        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_WRITE_BUFFER_SIZE,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_LEVELDB_WRITE_BUFFER_SIZE));\n+    LOG.info(\"Initializing rolling leveldb instance :\" + rollingInstanceDBPath\n+        + \" for start time: \" + dbStartTime);\n+    DB db \u003d null;\n+    try {\n+      db \u003d factory.open(\n+          new File(rollingInstanceDBPath.toUri().getPath()), options);\n+      rollingdbs.put(dbStartTime, db);\n+      String dbName \u003d fdf.format(dbStartTime);\n+      LOG.info(\"Added rolling leveldb instance \" + dbName + \" to \" + getName());\n+    } catch (IOException ioe) {\n+      LOG.warn(\"Failed to open rolling leveldb instance :\"\n+          + new File(rollingInstanceDBPath.toUri().getPath()), ioe);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initRollingLevelDB(Long dbStartTime,\n      Path rollingInstanceDBPath) {\n    if (rollingdbs.containsKey(dbStartTime)) {\n      return;\n    }\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    options.cacheSize(conf.getLong(\n        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_READ_CACHE_SIZE,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_LEVELDB_READ_CACHE_SIZE));\n    options.maxOpenFiles(conf.getInt(\n        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_MAX_OPEN_FILES,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_LEVELDB_MAX_OPEN_FILES));\n    options.writeBufferSize(conf.getInt(\n        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_WRITE_BUFFER_SIZE,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_LEVELDB_WRITE_BUFFER_SIZE));\n    LOG.info(\"Initializing rolling leveldb instance :\" + rollingInstanceDBPath\n        + \" for start time: \" + dbStartTime);\n    DB db \u003d null;\n    try {\n      db \u003d factory.open(\n          new File(rollingInstanceDBPath.toUri().getPath()), options);\n      rollingdbs.put(dbStartTime, db);\n      String dbName \u003d fdf.format(dbStartTime);\n      LOG.info(\"Added rolling leveldb instance \" + dbName + \" to \" + getName());\n    } catch (IOException ioe) {\n      LOG.warn(\"Failed to open rolling leveldb instance :\"\n          + new File(rollingInstanceDBPath.toUri().getPath()), ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/RollingLevelDB.java"
    }
  }
}