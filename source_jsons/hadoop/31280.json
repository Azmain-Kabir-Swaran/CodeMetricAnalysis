{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationClientInterceptor.java",
  "functionName": "getNewApplication",
  "functionId": "getNewApplication___request-GetNewApplicationRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java",
  "functionStartLine": 270,
  "functionEndLine": 309,
  "numCommitsSeen": 16,
  "timeTaken": 1802,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e",
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": "Ybodychange",
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/11/18 10:23 AM",
      "commitNameOld": "abd6d48c46342d2694a1cb56c40f208de797794c",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 119.21,
      "commitsBetweenForRepo": 863,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public GetNewApplicationResponse getNewApplication(\n       GetNewApplicationRequest request) throws YarnException, IOException {\n \n     long startTime \u003d clock.getTime();\n \n     Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive \u003d\n         federationFacade.getSubClusters(true);\n \n     for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n       SubClusterId subClusterId \u003d getRandomActiveSubCluster(subClustersActive);\n       LOG.debug(\n-          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n+          \"getNewApplication try #{} on SubCluster {}\", i, subClusterId);\n       ApplicationClientProtocol clientRMProxy \u003d\n           getClientRMProxyForSubCluster(subClusterId);\n       GetNewApplicationResponse response \u003d null;\n       try {\n         response \u003d clientRMProxy.getNewApplication(request);\n       } catch (Exception e) {\n         LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n             + subClusterId.getId(), e);\n       }\n \n       if (response !\u003d null) {\n \n         long stopTime \u003d clock.getTime();\n         routerMetrics.succeededAppsCreated(stopTime - startTime);\n         return response;\n       } else {\n         // Empty response from the ResourceManager.\n         // Blacklist this subcluster for this request.\n         subClustersActive.remove(subClusterId);\n       }\n \n     }\n \n     routerMetrics.incrAppsFailedCreated();\n     String errMsg \u003d \"Fail to create a new application.\";\n     LOG.error(errMsg);\n     throw new YarnException(errMsg);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetNewApplicationResponse getNewApplication(\n      GetNewApplicationRequest request) throws YarnException, IOException {\n\n    long startTime \u003d clock.getTime();\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive \u003d\n        federationFacade.getSubClusters(true);\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n      SubClusterId subClusterId \u003d getRandomActiveSubCluster(subClustersActive);\n      LOG.debug(\n          \"getNewApplication try #{} on SubCluster {}\", i, subClusterId);\n      ApplicationClientProtocol clientRMProxy \u003d\n          getClientRMProxyForSubCluster(subClusterId);\n      GetNewApplicationResponse response \u003d null;\n      try {\n        response \u003d clientRMProxy.getNewApplication(request);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n            + subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null) {\n\n        long stopTime \u003d clock.getTime();\n        routerMetrics.succeededAppsCreated(stopTime - startTime);\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        subClustersActive.remove(subClusterId);\n      }\n\n    }\n\n    routerMetrics.incrAppsFailedCreated();\n    String errMsg \u003d \"Fail to create a new application.\";\n    LOG.error(errMsg);\n    throw new YarnException(errMsg);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java",
      "extendedDetails": {}
    },
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)\n",
      "commitDate": "21/08/17 10:50 PM",
      "commitName": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "86f05c33125af3b435d6793551680ffa35047aa7",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 20.22,
      "commitsBetweenForRepo": 129,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,40 @@\n   public GetNewApplicationResponse getNewApplication(\n       GetNewApplicationRequest request) throws YarnException, IOException {\n+\n+    long startTime \u003d clock.getTime();\n+\n     Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive \u003d\n         federationFacade.getSubClusters(true);\n \n     for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n       SubClusterId subClusterId \u003d getRandomActiveSubCluster(subClustersActive);\n       LOG.debug(\n           \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n       ApplicationClientProtocol clientRMProxy \u003d\n           getClientRMProxyForSubCluster(subClusterId);\n       GetNewApplicationResponse response \u003d null;\n       try {\n         response \u003d clientRMProxy.getNewApplication(request);\n       } catch (Exception e) {\n         LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n             + subClusterId.getId(), e);\n       }\n \n       if (response !\u003d null) {\n+\n+        long stopTime \u003d clock.getTime();\n+        routerMetrics.succeededAppsCreated(stopTime - startTime);\n         return response;\n       } else {\n         // Empty response from the ResourceManager.\n         // Blacklist this subcluster for this request.\n         subClustersActive.remove(subClusterId);\n       }\n \n     }\n \n+    routerMetrics.incrAppsFailedCreated();\n     String errMsg \u003d \"Fail to create a new application.\";\n     LOG.error(errMsg);\n     throw new YarnException(errMsg);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetNewApplicationResponse getNewApplication(\n      GetNewApplicationRequest request) throws YarnException, IOException {\n\n    long startTime \u003d clock.getTime();\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive \u003d\n        federationFacade.getSubClusters(true);\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n      SubClusterId subClusterId \u003d getRandomActiveSubCluster(subClustersActive);\n      LOG.debug(\n          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n      ApplicationClientProtocol clientRMProxy \u003d\n          getClientRMProxyForSubCluster(subClusterId);\n      GetNewApplicationResponse response \u003d null;\n      try {\n        response \u003d clientRMProxy.getNewApplication(request);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n            + subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null) {\n\n        long stopTime \u003d clock.getTime();\n        routerMetrics.succeededAppsCreated(stopTime - startTime);\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        subClustersActive.remove(subClusterId);\n      }\n\n    }\n\n    routerMetrics.incrAppsFailedCreated();\n    String errMsg \u003d \"Fail to create a new application.\";\n    LOG.error(errMsg);\n    throw new YarnException(errMsg);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java",
      "extendedDetails": {}
    },
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3659. Federation: routing client invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 52daa6d971ae408d121b3737ea8c0575e7e8516d)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,33 @@\n+  public GetNewApplicationResponse getNewApplication(\n+      GetNewApplicationRequest request) throws YarnException, IOException {\n+    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive \u003d\n+        federationFacade.getSubClusters(true);\n+\n+    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n+      SubClusterId subClusterId \u003d getRandomActiveSubCluster(subClustersActive);\n+      LOG.debug(\n+          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n+      ApplicationClientProtocol clientRMProxy \u003d\n+          getClientRMProxyForSubCluster(subClusterId);\n+      GetNewApplicationResponse response \u003d null;\n+      try {\n+        response \u003d clientRMProxy.getNewApplication(request);\n+      } catch (Exception e) {\n+        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n+            + subClusterId.getId(), e);\n+      }\n+\n+      if (response !\u003d null) {\n+        return response;\n+      } else {\n+        // Empty response from the ResourceManager.\n+        // Blacklist this subcluster for this request.\n+        subClustersActive.remove(subClusterId);\n+      }\n+\n+    }\n+\n+    String errMsg \u003d \"Fail to create a new application.\";\n+    LOG.error(errMsg);\n+    throw new YarnException(errMsg);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetNewApplicationResponse getNewApplication(\n      GetNewApplicationRequest request) throws YarnException, IOException {\n    Map\u003cSubClusterId, SubClusterInfo\u003e subClustersActive \u003d\n        federationFacade.getSubClusters(true);\n\n    for (int i \u003d 0; i \u003c numSubmitRetries; ++i) {\n      SubClusterId subClusterId \u003d getRandomActiveSubCluster(subClustersActive);\n      LOG.debug(\n          \"getNewApplication try #\" + i + \" on SubCluster \" + subClusterId);\n      ApplicationClientProtocol clientRMProxy \u003d\n          getClientRMProxyForSubCluster(subClusterId);\n      GetNewApplicationResponse response \u003d null;\n      try {\n        response \u003d clientRMProxy.getNewApplication(request);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to create a new ApplicationId in SubCluster \"\n            + subClusterId.getId(), e);\n      }\n\n      if (response !\u003d null) {\n        return response;\n      } else {\n        // Empty response from the ResourceManager.\n        // Blacklist this subcluster for this request.\n        subClustersActive.remove(subClusterId);\n      }\n\n    }\n\n    String errMsg \u003d \"Fail to create a new application.\";\n    LOG.error(errMsg);\n    throw new YarnException(errMsg);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java"
    }
  }
}