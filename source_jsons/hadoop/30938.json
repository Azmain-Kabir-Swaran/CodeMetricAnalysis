{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DocumentStoreTimelineWriterImpl.java",
  "functionName": "getFlowActivityDoc",
  "functionId": "getFlowActivityDoc___context-TimelineCollectorContext__timelineEntity-TimelineEntity__flowRunDoc-FlowRunDocument__entityDocument-TimelineEntityDocument",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/src/main/java/org/apache/hadoop/yarn/server/timelineservice/documentstore/DocumentStoreTimelineWriterImpl.java",
  "functionStartLine": 216,
  "functionEndLine": 245,
  "numCommitsSeen": 1,
  "timeTaken": 471,
  "changeHistory": [
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40"
  ],
  "changeHistoryShort": {
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9016 DocumentStore as a backend for ATSv2. Contributed by Sushil Ks.\n",
      "commitDate": "13/03/19 4:45 PM",
      "commitName": "f235a942d5b7cab86f0cb4f5ba285f07cd939a40",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,30 @@\n+  private FlowActivityDocument getFlowActivityDoc(\n+      TimelineCollectorContext context,\n+      TimelineEntity timelineEntity, FlowRunDocument flowRunDoc,\n+      TimelineEntityDocument entityDocument) {\n+    FlowActivityDocument flowActivityDoc \u003d null;\n+    // check if the application is created\n+    TimelineEvent event \u003d DocumentStoreUtils.fetchEvent(\n+        timelineEntity, ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n+    if (event !\u003d null) {\n+      entityDocument.setCreatedTime(event.getTimestamp());\n+      flowRunDoc.setMinStartTime(event.getTimestamp());\n+      flowActivityDoc \u003d createFlowActivityDoc(context, context.getFlowName(),\n+          context.getFlowVersion(), context.getFlowRunId(), event);\n+    }\n+\n+    // if application has finished, store it\u0027s finish time\n+    event \u003d DocumentStoreUtils.fetchEvent(timelineEntity,\n+        ApplicationMetricsConstants.FINISHED_EVENT_TYPE);\n+    if (event !\u003d null) {\n+      flowRunDoc.setMaxEndTime(event.getTimestamp());\n+\n+      // this check is to handle in case both create and finish event exist\n+      // under the single list of events for an TimelineEntity\n+      if (flowActivityDoc \u003d\u003d null) {\n+        flowActivityDoc \u003d createFlowActivityDoc(context, context.getFlowName(),\n+            context.getFlowVersion(), context.getFlowRunId(), event);\n+      }\n+    }\n+    return flowActivityDoc;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FlowActivityDocument getFlowActivityDoc(\n      TimelineCollectorContext context,\n      TimelineEntity timelineEntity, FlowRunDocument flowRunDoc,\n      TimelineEntityDocument entityDocument) {\n    FlowActivityDocument flowActivityDoc \u003d null;\n    // check if the application is created\n    TimelineEvent event \u003d DocumentStoreUtils.fetchEvent(\n        timelineEntity, ApplicationMetricsConstants.CREATED_EVENT_TYPE);\n    if (event !\u003d null) {\n      entityDocument.setCreatedTime(event.getTimestamp());\n      flowRunDoc.setMinStartTime(event.getTimestamp());\n      flowActivityDoc \u003d createFlowActivityDoc(context, context.getFlowName(),\n          context.getFlowVersion(), context.getFlowRunId(), event);\n    }\n\n    // if application has finished, store it\u0027s finish time\n    event \u003d DocumentStoreUtils.fetchEvent(timelineEntity,\n        ApplicationMetricsConstants.FINISHED_EVENT_TYPE);\n    if (event !\u003d null) {\n      flowRunDoc.setMaxEndTime(event.getTimestamp());\n\n      // this check is to handle in case both create and finish event exist\n      // under the single list of events for an TimelineEntity\n      if (flowActivityDoc \u003d\u003d null) {\n        flowActivityDoc \u003d createFlowActivityDoc(context, context.getFlowName(),\n            context.getFlowVersion(), context.getFlowRunId(), event);\n      }\n    }\n    return flowActivityDoc;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/src/main/java/org/apache/hadoop/yarn/server/timelineservice/documentstore/DocumentStoreTimelineWriterImpl.java"
    }
  }
}