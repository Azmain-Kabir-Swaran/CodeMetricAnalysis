{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BootstrapStandby.java",
  "functionName": "checkLogsAvailableForRead",
  "functionId": "checkLogsAvailableForRead___image-FSImage__imageTxId-long__curTxIdOnOtherNode-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
  "functionStartLine": 372,
  "functionEndLine": 406,
  "numCommitsSeen": 39,
  "timeTaken": 3421,
  "changeHistory": [
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
    "de37f37543c2fb07ca53bb6000d50b36ec70d084",
    "dfd807afab0fae3839c9cc5d552aa0304444f956",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087",
    "74dfa8f1f22d58df64a78c660af111e17ab7053e",
    "d1a54b872dc0b38801e7cf6eef0a27272e867c1e",
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7"
  ],
  "changeHistoryShort": {
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568": "Ybodychange",
    "de37f37543c2fb07ca53bb6000d50b36ec70d084": "Ybodychange",
    "dfd807afab0fae3839c9cc5d552aa0304444f956": "Ybodychange",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": "Ybodychange",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": "Ybodychange",
    "74dfa8f1f22d58df64a78c660af111e17ab7053e": "Ybodychange",
    "d1a54b872dc0b38801e7cf6eef0a27272e867c1e": "Ymultichange(Yparameterchange,Ybodychange)",
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13695. Move logging to slf4j in HDFS package. Contributed by Ian Pickering.\n",
      "commitDate": "06/09/18 2:48 PM",
      "commitName": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "27/12/16 11:21 AM",
      "commitNameOld": "c0e0ef29696109af9a018462059f08fd99ee3121",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 618.1,
      "commitsBetweenForRepo": 4720,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n       long curTxIdOnOtherNode) {\n \n     if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n       // The other node hasn\u0027t written any logs since the last checkpoint.\n       // This can be the case if the NN was freshly formatted as HA, and\n       // then started in standby mode, so it has no edit logs at all.\n       return true;\n     }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n     \n     assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n       \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n           firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n           firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n-      LOG.fatal(msg, e);\n+      LOG.error(msg, e);\n \n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      LOG.error(msg, e);\n\n      return false;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "de37f37543c2fb07ca53bb6000d50b36ec70d084": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9639. Inconsistent Logging in BootstrapStandby. (Contributed by Xiaobing Zhou)\n",
      "commitDate": "11/01/16 3:08 PM",
      "commitName": "de37f37543c2fb07ca53bb6000d50b36ec70d084",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "17/12/15 3:11 PM",
      "commitNameOld": "5cb1e0118b173a95c1f7bdfae1e58d7833d61c26",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 25.0,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,35 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n       long curTxIdOnOtherNode) {\n \n     if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n       // The other node hasn\u0027t written any logs since the last checkpoint.\n       // This can be the case if the NN was freshly formatted as HA, and\n       // then started in standby mode, so it has no edit logs at all.\n       return true;\n     }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n     \n     assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n       \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n           firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n           firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(msg, e);\n-      } else {\n-        LOG.fatal(msg);\n-      }\n+      LOG.fatal(msg, e);\n+\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      LOG.fatal(msg, e);\n\n      return false;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "dfd807afab0fae3839c9cc5d552aa0304444f956": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12428. Fix inconsistency between log-level guards and statements. Contributed by Jagadesh Kiran N and Jackie Chang.\n",
      "commitDate": "21/09/15 8:54 PM",
      "commitName": "dfd807afab0fae3839c9cc5d552aa0304444f956",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "17/09/15 2:18 PM",
      "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 4.28,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n       long curTxIdOnOtherNode) {\n \n     if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n       // The other node hasn\u0027t written any logs since the last checkpoint.\n       // This can be the case if the NN was freshly formatted as HA, and\n       // then started in standby mode, so it has no edit logs at all.\n       return true;\n     }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n     \n     assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n       \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n           firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n           firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n       if (LOG.isDebugEnabled()) {\n-        LOG.fatal(msg, e);\n+        LOG.debug(msg, e);\n       } else {\n         LOG.fatal(msg);\n       }\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(msg, e);\n      } else {\n        LOG.fatal(msg);\n      }\n      return false;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/13 5:32 PM",
      "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "06/12/13 10:01 AM",
      "commitNameOld": "045dc880e13271737b3cf316296e92fb95806663",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 4.31,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n       long curTxIdOnOtherNode) {\n \n     if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n       // The other node hasn\u0027t written any logs since the last checkpoint.\n       // This can be the case if the NN was freshly formatted as HA, and\n       // then started in standby mode, so it has no edit logs at all.\n       return true;\n     }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n     \n     assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n       \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n-          firstTxIdInLogs, curTxIdOnOtherNode, null, true, false);\n+          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n           firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n       if (LOG.isDebugEnabled()) {\n         LOG.fatal(msg, e);\n       } else {\n         LOG.fatal(msg);\n       }\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      if (LOG.isDebugEnabled()) {\n        LOG.fatal(msg, e);\n      } else {\n        LOG.fatal(msg);\n      }\n      return false;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/13 10:19 AM",
      "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "09/08/12 3:13 PM",
      "commitNameOld": "9d0f8792a9a1d3d2b24adfc2c213247a099e7ad1",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 370.8,
      "commitsBetweenForRepo": 2165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n       long curTxIdOnOtherNode) {\n \n     if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n       // The other node hasn\u0027t written any logs since the last checkpoint.\n       // This can be the case if the NN was freshly formatted as HA, and\n       // then started in standby mode, so it has no edit logs at all.\n       return true;\n     }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n     \n     assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n       \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n-          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n+          firstTxIdInLogs, curTxIdOnOtherNode, null, true, false);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n           firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n       if (LOG.isDebugEnabled()) {\n         LOG.fatal(msg, e);\n       } else {\n         LOG.fatal(msg);\n       }\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, null, true, false);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      if (LOG.isDebugEnabled()) {\n        LOG.fatal(msg, e);\n      } else {\n        LOG.fatal(msg);\n      }\n      return false;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "74dfa8f1f22d58df64a78c660af111e17ab7053e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2982. Startup performance suffers when there are many edit log segments. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1342042 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/12 1:42 PM",
      "commitName": "74dfa8f1f22d58df64a78c660af111e17ab7053e",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "18/05/12 10:13 PM",
      "commitNameOld": "d1a54b872dc0b38801e7cf6eef0a27272e867c1e",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 4.65,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n       long curTxIdOnOtherNode) {\n \n     if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n       // The other node hasn\u0027t written any logs since the last checkpoint.\n       // This can be the case if the NN was freshly formatted as HA, and\n       // then started in standby mode, so it has no edit logs at all.\n       return true;\n     }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n     \n     assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n       \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n-          firstTxIdInLogs, curTxIdOnOtherNode, true);\n+          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n           firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n       if (LOG.isDebugEnabled()) {\n         LOG.fatal(msg, e);\n       } else {\n         LOG.fatal(msg);\n       }\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, null, true);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      if (LOG.isDebugEnabled()) {\n        LOG.fatal(msg, e);\n      } else {\n        LOG.fatal(msg);\n      }\n      return false;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
      "extendedDetails": {}
    },
    "d1a54b872dc0b38801e7cf6eef0a27272e867c1e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3438. BootstrapStandby should not require a rollEdits on active node. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1340343 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/12 10:13 PM",
      "commitName": "d1a54b872dc0b38801e7cf6eef0a27272e867c1e",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3438. BootstrapStandby should not require a rollEdits on active node. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1340343 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/05/12 10:13 PM",
          "commitName": "d1a54b872dc0b38801e7cf6eef0a27272e867c1e",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/05/12 2:58 PM",
          "commitNameOld": "5dbbe0e0a5d31689d3425e490865f95057dc051c",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 14.3,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,38 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n-      long rollTxId) {\n-    \n+      long curTxIdOnOtherNode) {\n+\n+    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n+      // The other node hasn\u0027t written any logs since the last checkpoint.\n+      // This can be the case if the NN was freshly formatted as HA, and\n+      // then started in standby mode, so it has no edit logs at all.\n+      return true;\n+    }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n-    long lastTxIdInLogs \u003d rollTxId - 1;\n-    assert lastTxIdInLogs \u003e\u003d firstTxIdInLogs;\n+    \n+    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n+      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n-          firstTxIdInLogs, lastTxIdInLogs, false);\n+          firstTxIdInLogs, curTxIdOnOtherNode, true);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n-          firstTxIdInLogs + \"-\" + lastTxIdInLogs +\n+          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n       if (LOG.isDebugEnabled()) {\n         LOG.fatal(msg, e);\n       } else {\n         LOG.fatal(msg);\n       }\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, true);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      if (LOG.isDebugEnabled()) {\n        LOG.fatal(msg, e);\n      } else {\n        LOG.fatal(msg);\n      }\n      return false;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
          "extendedDetails": {
            "oldValue": "[image-FSImage, imageTxId-long, rollTxId-long]",
            "newValue": "[image-FSImage, imageTxId-long, curTxIdOnOtherNode-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3438. BootstrapStandby should not require a rollEdits on active node. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1340343 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/05/12 10:13 PM",
          "commitName": "d1a54b872dc0b38801e7cf6eef0a27272e867c1e",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/05/12 2:58 PM",
          "commitNameOld": "5dbbe0e0a5d31689d3425e490865f95057dc051c",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 14.3,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,38 @@\n   private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n-      long rollTxId) {\n-    \n+      long curTxIdOnOtherNode) {\n+\n+    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n+      // The other node hasn\u0027t written any logs since the last checkpoint.\n+      // This can be the case if the NN was freshly formatted as HA, and\n+      // then started in standby mode, so it has no edit logs at all.\n+      return true;\n+    }\n     long firstTxIdInLogs \u003d imageTxId + 1;\n-    long lastTxIdInLogs \u003d rollTxId - 1;\n-    assert lastTxIdInLogs \u003e\u003d firstTxIdInLogs;\n+    \n+    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n+      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n     \n     try {\n       Collection\u003cEditLogInputStream\u003e streams \u003d\n         image.getEditLog().selectInputStreams(\n-          firstTxIdInLogs, lastTxIdInLogs, false);\n+          firstTxIdInLogs, curTxIdOnOtherNode, true);\n       for (EditLogInputStream stream : streams) {\n         IOUtils.closeStream(stream);\n       }\n       return true;\n     } catch (IOException e) {\n       String msg \u003d \"Unable to read transaction ids \" +\n-          firstTxIdInLogs + \"-\" + lastTxIdInLogs +\n+          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n           \" from the configured shared edits storage \" +\n           Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n           \"Please copy these logs into the shared edits storage \" + \n           \"or call saveNamespace on the active node.\\n\" +\n           \"Error: \" + e.getLocalizedMessage();\n       if (LOG.isDebugEnabled()) {\n         LOG.fatal(msg, e);\n       } else {\n         LOG.fatal(msg);\n       }\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long curTxIdOnOtherNode) {\n\n    if (imageTxId \u003d\u003d curTxIdOnOtherNode) {\n      // The other node hasn\u0027t written any logs since the last checkpoint.\n      // This can be the case if the NN was freshly formatted as HA, and\n      // then started in standby mode, so it has no edit logs at all.\n      return true;\n    }\n    long firstTxIdInLogs \u003d imageTxId + 1;\n    \n    assert curTxIdOnOtherNode \u003e\u003d firstTxIdInLogs :\n      \"first\u003d\" + firstTxIdInLogs + \" onOtherNode\u003d\" + curTxIdOnOtherNode;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, curTxIdOnOtherNode, true);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + curTxIdOnOtherNode +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      if (LOG.isDebugEnabled()) {\n        LOG.fatal(msg, e);\n      } else {\n        LOG.fatal(msg);\n      }\n      return false;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java",
          "extendedDetails": {}
        }
      ]
    },
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2731. Add command to bootstrap the Standby Node\u0027s name directories from the Active NameNode. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299807 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/12 12:41 PM",
      "commitName": "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,31 @@\n+  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n+      long rollTxId) {\n+    \n+    long firstTxIdInLogs \u003d imageTxId + 1;\n+    long lastTxIdInLogs \u003d rollTxId - 1;\n+    assert lastTxIdInLogs \u003e\u003d firstTxIdInLogs;\n+    \n+    try {\n+      Collection\u003cEditLogInputStream\u003e streams \u003d\n+        image.getEditLog().selectInputStreams(\n+          firstTxIdInLogs, lastTxIdInLogs, false);\n+      for (EditLogInputStream stream : streams) {\n+        IOUtils.closeStream(stream);\n+      }\n+      return true;\n+    } catch (IOException e) {\n+      String msg \u003d \"Unable to read transaction ids \" +\n+          firstTxIdInLogs + \"-\" + lastTxIdInLogs +\n+          \" from the configured shared edits storage \" +\n+          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n+          \"Please copy these logs into the shared edits storage \" + \n+          \"or call saveNamespace on the active node.\\n\" +\n+          \"Error: \" + e.getLocalizedMessage();\n+      if (LOG.isDebugEnabled()) {\n+        LOG.fatal(msg, e);\n+      } else {\n+        LOG.fatal(msg);\n+      }\n+      return false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkLogsAvailableForRead(FSImage image, long imageTxId,\n      long rollTxId) {\n    \n    long firstTxIdInLogs \u003d imageTxId + 1;\n    long lastTxIdInLogs \u003d rollTxId - 1;\n    assert lastTxIdInLogs \u003e\u003d firstTxIdInLogs;\n    \n    try {\n      Collection\u003cEditLogInputStream\u003e streams \u003d\n        image.getEditLog().selectInputStreams(\n          firstTxIdInLogs, lastTxIdInLogs, false);\n      for (EditLogInputStream stream : streams) {\n        IOUtils.closeStream(stream);\n      }\n      return true;\n    } catch (IOException e) {\n      String msg \u003d \"Unable to read transaction ids \" +\n          firstTxIdInLogs + \"-\" + lastTxIdInLogs +\n          \" from the configured shared edits storage \" +\n          Joiner.on(\",\").join(sharedEditsUris) + \". \" +\n          \"Please copy these logs into the shared edits storage \" + \n          \"or call saveNamespace on the active node.\\n\" +\n          \"Error: \" + e.getLocalizedMessage();\n      if (LOG.isDebugEnabled()) {\n        LOG.fatal(msg, e);\n      } else {\n        LOG.fatal(msg);\n      }\n      return false;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/BootstrapStandby.java"
    }
  }
}