{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalCacheDirectoryManager.java",
  "functionName": "getRelativePath",
  "functionId": "getRelativePath___directoryNo-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalCacheDirectoryManager.java",
  "functionStartLine": 164,
  "functionEndLine": 183,
  "numCommitsSeen": 3,
  "timeTaken": 1914,
  "changeHistory": [
    "66598697a6e777615334ebde5ba7738135da83ae"
  ],
  "changeHistoryShort": {
    "66598697a6e777615334ebde5ba7738135da83ae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,20 @@\n+    static String getRelativePath(int directoryNo) {\n+      String relativePath \u003d \"\";\n+      if (directoryNo \u003e 0) {\n+        String tPath \u003d Integer.toString(directoryNo - 1, DIRECTORIES_PER_LEVEL);\n+        StringBuffer sb \u003d new StringBuffer();\n+        if (tPath.length() \u003d\u003d 1) {\n+          sb.append(tPath.charAt(0));\n+        } else {\n+          // this is done to make sure we also reuse 0th sub directory\n+          sb.append(Integer.toString(\n+            Integer.parseInt(tPath.substring(0, 1), DIRECTORIES_PER_LEVEL) - 1,\n+            DIRECTORIES_PER_LEVEL));\n+        }\n+        for (int i \u003d 1; i \u003c tPath.length(); i++) {\n+          sb.append(Path.SEPARATOR).append(tPath.charAt(i));\n+        }\n+        relativePath \u003d sb.toString();\n+      }\n+      return relativePath;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    static String getRelativePath(int directoryNo) {\n      String relativePath \u003d \"\";\n      if (directoryNo \u003e 0) {\n        String tPath \u003d Integer.toString(directoryNo - 1, DIRECTORIES_PER_LEVEL);\n        StringBuffer sb \u003d new StringBuffer();\n        if (tPath.length() \u003d\u003d 1) {\n          sb.append(tPath.charAt(0));\n        } else {\n          // this is done to make sure we also reuse 0th sub directory\n          sb.append(Integer.toString(\n            Integer.parseInt(tPath.substring(0, 1), DIRECTORIES_PER_LEVEL) - 1,\n            DIRECTORIES_PER_LEVEL));\n        }\n        for (int i \u003d 1; i \u003c tPath.length(); i++) {\n          sb.append(Path.SEPARATOR).append(tPath.charAt(i));\n        }\n        relativePath \u003d sb.toString();\n      }\n      return relativePath;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalCacheDirectoryManager.java"
    }
  }
}