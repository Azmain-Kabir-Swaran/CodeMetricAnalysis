{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileContext.java",
  "functionName": "mkdir",
  "functionId": "mkdir___dir-Path(modifiers-final)__permission-FsPermission(modifiers-final)__createParent-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
  "functionStartLine": 796,
  "functionEndLine": 813,
  "numCommitsSeen": 97,
  "timeTaken": 3409,
  "changeHistory": [
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
    "3d191cc15244e1e29f837b34a9bd1d029e003064",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
    "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "322f9ac7b152713ae012cbeaa7ec6dc01860db15",
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
    "ea605b8cd79163444feead75d7b55dbd4ab537a0",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
    "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
    "0294c49df60150bd9b363af5cfbc312222c12c69"
  ],
  "changeHistoryShort": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": "Ybodychange",
    "3d191cc15244e1e29f837b34a9bd1d029e003064": "Ybodychange",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": "Ybodychange",
    "deead78e35b0cb81af875b5a8032cbd06c9a2dae": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "322f9ac7b152713ae012cbeaa7ec6dc01860db15": "Yexceptionschange",
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc": "Yexceptionschange",
    "ea605b8cd79163444feead75d7b55dbd4ab537a0": "Ybodychange",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": "Ybodychange",
    "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "0294c49df60150bd9b363af5cfbc312222c12c69": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6962. ACL inheritance conflicts with umaskmode. Contributed by Chris Nauroth.\n",
      "commitDate": "06/09/16 11:02 AM",
      "commitName": "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "15/08/16 9:30 PM",
      "commitNameOld": "b8a446ba57d89c0896ec2d56dd919b0101e69f44",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 21.56,
      "commitsBetweenForRepo": 129,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n       final boolean createParent) throws AccessControlException,\n       FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, UnsupportedFileSystemException, \n       IOException {\n     final Path absDir \u003d fixRelativePart(dir);\n-    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n-          FsPermission.getDirDefault() : permission).applyUMask(getUMask());\n+    final FsPermission absFerms \u003d FsCreateModes.applyUMask(\n+        permission \u003d\u003d null ?\n+            FsPermission.getDirDefault() : permission, getUMask());\n     new FSLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void next(final AbstractFileSystem fs, final Path p) \n         throws IOException, UnresolvedLinkException {\n         fs.mkdir(p, absFerms, createParent);\n         return null;\n       }\n     }.resolve(this, absDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d FsCreateModes.applyUMask(\n        permission \u003d\u003d null ?\n            FsPermission.getDirDefault() : permission, getUMask());\n    new FSLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "3d191cc15244e1e29f837b34a9bd1d029e003064": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13440. FileContext does not react on changing umask via configuration.\n",
      "commitDate": "30/07/16 7:29 PM",
      "commitName": "3d191cc15244e1e29f837b34a9bd1d029e003064",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "12/07/16 4:49 PM",
      "commitNameOld": "a290a98b6ab2424ae9b7faab0ce9496d09ca46f3",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 18.11,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n       final boolean createParent) throws AccessControlException,\n       FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, UnsupportedFileSystemException, \n       IOException {\n     final Path absDir \u003d fixRelativePart(dir);\n     final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n-          FsPermission.getDirDefault() : permission).applyUMask(umask);\n+          FsPermission.getDirDefault() : permission).applyUMask(getUMask());\n     new FSLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void next(final AbstractFileSystem fs, final Path p) \n         throws IOException, UnresolvedLinkException {\n         fs.mkdir(p, absFerms, createParent);\n         return null;\n       }\n     }.resolve(this, absDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDirDefault() : permission).applyUMask(getUMask());\n    new FSLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9155. FsPermission should have different default value, 777 for directory and 666 for file. Contributed by Binglin Chang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431148 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 3:30 PM",
      "commitName": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "20/11/12 9:55 PM",
      "commitNameOld": "c24bc56484369404afae52fc2f3a23b75bfbbe75",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 49.73,
      "commitsBetweenForRepo": 183,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n       final boolean createParent) throws AccessControlException,\n       FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, UnsupportedFileSystemException, \n       IOException {\n     final Path absDir \u003d fixRelativePart(dir);\n     final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n-          FsPermission.getDefault() : permission).applyUMask(umask);\n+          FsPermission.getDirDefault() : permission).applyUMask(umask);\n     new FSLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void next(final AbstractFileSystem fs, final Path p) \n         throws IOException, UnresolvedLinkException {\n         fs.mkdir(p, absFerms, createParent);\n         return null;\n       }\n     }.resolve(this, absDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDirDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "deead78e35b0cb81af875b5a8032cbd06c9a2dae": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3844. Add @Override and remove {@inheritdoc} and unnecessary imports. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377168 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/12 6:03 PM",
      "commitName": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "23/08/12 12:18 PM",
      "commitNameOld": "4f8e1f779b196ca83c49118c283286e3ee9ec386",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 1.24,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n       final boolean createParent) throws AccessControlException,\n       FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, UnsupportedFileSystemException, \n       IOException {\n     final Path absDir \u003d fixRelativePart(dir);\n     final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n     new FSLinkResolver\u003cVoid\u003e() {\n+      @Override\n       public Void next(final AbstractFileSystem fs, final Path p) \n         throws IOException, UnresolvedLinkException {\n         fs.mkdir(p, absFerms, createParent);\n         return null;\n       }\n     }.resolve(this, absDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "322f9ac7b152713ae012cbeaa7ec6dc01860db15": {
      "type": "Yexceptionschange",
      "commitMessage": "HADOOP-6727. Remove UnresolvedLinkException from public FileContext APIs. Contributed by Eli Collins.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@940527 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/10 10:36 AM",
      "commitName": "322f9ac7b152713ae012cbeaa7ec6dc01860db15",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/05/10 2:08 PM",
      "commitNameOld": "fe49f6e47391ff3eb6372dc5acc592bbc2e8f683",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 1.85,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n       final boolean createParent) throws AccessControlException,\n       FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, UnresolvedLinkException,\n-      UnsupportedFileSystemException, IOException {\n+      ParentNotDirectoryException, UnsupportedFileSystemException, \n+      IOException {\n     final Path absDir \u003d fixRelativePart(dir);\n     final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n     new FSLinkResolver\u003cVoid\u003e() {\n       public Void next(final AbstractFileSystem fs, final Path p) \n         throws IOException, UnresolvedLinkException {\n         fs.mkdir(p, absFerms, createParent);\n         return null;\n       }\n     }.resolve(this, absDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldValue": "[AccessControlException, FileAlreadyExistsException, FileNotFoundException, ParentNotDirectoryException, UnresolvedLinkException, UnsupportedFileSystemException, IOException]",
        "newValue": "[AccessControlException, FileAlreadyExistsException, FileNotFoundException, ParentNotDirectoryException, UnsupportedFileSystemException, IOException]"
      }
    },
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc": {
      "type": "Yexceptionschange",
      "commitMessage": "   HADOOP-6537 Declare more detailed exceptions in FileContext and AbstractFileSystem\n   (Suresh Srinivas via Sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@918309 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/10 6:48 PM",
      "commitName": "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "16/02/10 1:43 PM",
      "commitNameOld": "ea605b8cd79163444feead75d7b55dbd4ab537a0",
      "commitAuthorOld": "Sanjay Radia",
      "daysBetweenCommits": 14.21,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n-      final boolean createParent)\n-    throws IOException {\n+      final boolean createParent) throws AccessControlException,\n+      FileAlreadyExistsException, FileNotFoundException,\n+      ParentNotDirectoryException, UnresolvedLinkException,\n+      UnsupportedFileSystemException, IOException {\n     final Path absDir \u003d fixRelativePart(dir);\n     final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n     new FSLinkResolver\u003cVoid\u003e() {\n       public Void next(final AbstractFileSystem fs, final Path p) \n         throws IOException, UnresolvedLinkException {\n         fs.mkdir(p, absFerms, createParent);\n         return null;\n       }\n     }.resolve(this, absDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnresolvedLinkException,\n      UnsupportedFileSystemException, IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[AccessControlException, FileAlreadyExistsException, FileNotFoundException, ParentNotDirectoryException, UnresolvedLinkException, UnsupportedFileSystemException, IOException]"
      }
    },
    "ea605b8cd79163444feead75d7b55dbd4ab537a0": {
      "type": "Ybodychange",
      "commitMessage": "    HADOOP-6421 Adds Symbolic links to FileContext, AbstractFileSystem.\n    It also adds a limited implementation for the local file system\n     (RawLocalFs) that allows local symlinks. (Eli Collins via Sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@910706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/02/10 1:43 PM",
      "commitName": "ea605b8cd79163444feead75d7b55dbd4ab537a0",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "15/01/10 4:44 PM",
      "commitNameOld": "a90d3205d2a23945eaab8b756cfbeeb4377c3c04",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 31.87,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,14 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n       final boolean createParent)\n     throws IOException {\n-    Path absDir \u003d fixRelativePart(dir);\n-    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n+    final Path absDir \u003d fixRelativePart(dir);\n+    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n-    getFSofPath(absDir).mkdir(absDir, absFerms, createParent);\n+    new FSLinkResolver\u003cVoid\u003e() {\n+      public Void next(final AbstractFileSystem fs, final Path p) \n+        throws IOException, UnresolvedLinkException {\n+        fs.mkdir(p, absFerms, createParent);\n+        return null;\n+      }\n+    }.resolve(this, absDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent)\n    throws IOException {\n    final Path absDir \u003d fixRelativePart(dir);\n    final FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    new FSLinkResolver\u003cVoid\u003e() {\n      public Void next(final AbstractFileSystem fs, final Path p) \n        throws IOException, UnresolvedLinkException {\n        fs.mkdir(p, absFerms, createParent);\n        return null;\n      }\n    }.resolve(this, absDir);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": {
      "type": "Ybodychange",
      "commitMessage": "Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/09 3:24 PM",
      "commitName": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/10/09 10:07 AM",
      "commitNameOld": "64f537da0a216055d5b6eae49a2a9129189cacbf",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 23.22,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public void mkdir(final Path dir, final FsPermission permission,\n       final boolean createParent)\n     throws IOException {\n     Path absDir \u003d fixRelativePart(dir);\n     FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n-    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n+    getFSofPath(absDir).mkdir(absDir, absFerms, createParent);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent)\n    throws IOException {\n    Path absDir \u003d fixRelativePart(dir);\n    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    getFSofPath(absDir).mkdir(absDir, absFerms, createParent);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-6271. Add recursive and non recursive create and mkdir to FileContext. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816818 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/09/09 5:03 PM",
      "commitName": "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-6271. Add recursive and non recursive create and mkdir to FileContext. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816818 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/09/09 5:03 PM",
          "commitName": "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "18/09/09 2:52 PM",
          "commitNameOld": "1695ecd1a3bbdef1b6bb5d0c9246c42ec3e9a20f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,8 @@\n-  public boolean mkdirs(final Path dir, final FsPermission permission)\n+  public void mkdir(final Path dir, final FsPermission permission,\n+      final boolean createParent)\n     throws IOException {\n     Path absDir \u003d fixRelativePart(dir);\n     FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n-    return getFSofPath(absDir).primitiveMkdir(absDir, absFerms);\n+    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent)\n    throws IOException {\n    Path absDir \u003d fixRelativePart(dir);\n    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "mkdirs",
            "newValue": "mkdir"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-6271. Add recursive and non recursive create and mkdir to FileContext. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816818 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/09/09 5:03 PM",
          "commitName": "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "18/09/09 2:52 PM",
          "commitNameOld": "1695ecd1a3bbdef1b6bb5d0c9246c42ec3e9a20f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,8 @@\n-  public boolean mkdirs(final Path dir, final FsPermission permission)\n+  public void mkdir(final Path dir, final FsPermission permission,\n+      final boolean createParent)\n     throws IOException {\n     Path absDir \u003d fixRelativePart(dir);\n     FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n-    return getFSofPath(absDir).primitiveMkdir(absDir, absFerms);\n+    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent)\n    throws IOException {\n    Path absDir \u003d fixRelativePart(dir);\n    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "[dir-Path(modifiers-final), permission-FsPermission(modifiers-final)]",
            "newValue": "[dir-Path(modifiers-final), permission-FsPermission(modifiers-final), createParent-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-6271. Add recursive and non recursive create and mkdir to FileContext. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816818 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/09/09 5:03 PM",
          "commitName": "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "18/09/09 2:52 PM",
          "commitNameOld": "1695ecd1a3bbdef1b6bb5d0c9246c42ec3e9a20f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,8 @@\n-  public boolean mkdirs(final Path dir, final FsPermission permission)\n+  public void mkdir(final Path dir, final FsPermission permission,\n+      final boolean createParent)\n     throws IOException {\n     Path absDir \u003d fixRelativePart(dir);\n     FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n-    return getFSofPath(absDir).primitiveMkdir(absDir, absFerms);\n+    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent)\n    throws IOException {\n    Path absDir \u003d fixRelativePart(dir);\n    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6271. Add recursive and non recursive create and mkdir to FileContext. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816818 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/09/09 5:03 PM",
          "commitName": "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "18/09/09 2:52 PM",
          "commitNameOld": "1695ecd1a3bbdef1b6bb5d0c9246c42ec3e9a20f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,8 @@\n-  public boolean mkdirs(final Path dir, final FsPermission permission)\n+  public void mkdir(final Path dir, final FsPermission permission,\n+      final boolean createParent)\n     throws IOException {\n     Path absDir \u003d fixRelativePart(dir);\n     FsPermission absFerms \u003d (permission \u003d\u003d null ? \n           FsPermission.getDefault() : permission).applyUMask(umask);\n-    return getFSofPath(absDir).primitiveMkdir(absDir, absFerms);\n+    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void mkdir(final Path dir, final FsPermission permission,\n      final boolean createParent)\n    throws IOException {\n    Path absDir \u003d fixRelativePart(dir);\n    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    getFSofPath(absDir).primitiveMkdir(absDir, absFerms, createParent);\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {}
        }
      ]
    },
    "0294c49df60150bd9b363af5cfbc312222c12c69": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4952. Add new improved file system interface FileContext for the application writer. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816398 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/09/09 3:27 PM",
      "commitName": "0294c49df60150bd9b363af5cfbc312222c12c69",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,7 @@\n+  public boolean mkdirs(final Path dir, final FsPermission permission)\n+    throws IOException {\n+    Path absDir \u003d fixRelativePart(dir);\n+    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n+          FsPermission.getDefault() : permission).applyUMask(umask);\n+    return getFSofPath(absDir).primitiveMkdir(absDir, absFerms);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path dir, final FsPermission permission)\n    throws IOException {\n    Path absDir \u003d fixRelativePart(dir);\n    FsPermission absFerms \u003d (permission \u003d\u003d null ? \n          FsPermission.getDefault() : permission).applyUMask(umask);\n    return getFSofPath(absDir).primitiveMkdir(absDir, absFerms);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java"
    }
  }
}