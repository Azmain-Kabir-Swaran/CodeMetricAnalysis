{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EditLogTailer.java",
  "functionName": "triggerActiveLogRoll",
  "functionId": "triggerActiveLogRoll",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
  "functionStartLine": 420,
  "functionEndLine": 439,
  "numCommitsSeen": 51,
  "timeTaken": 4138,
  "changeHistory": [
    "1bc282e0b3f74968c92751f0972746b012e72810",
    "090272d7de7cb5f1133359d66780aef7c5cce5c9",
    "67406460f0b6c05edde1d1185aeb42b6324df202",
    "49dfad942970459297f72632ed8dfd353e0c86de",
    "cce66ba3c9ec293e8ba1afd0eb518c7ca0bbc7c9",
    "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa"
  ],
  "changeHistoryShort": {
    "1bc282e0b3f74968c92751f0972746b012e72810": "Ybodychange",
    "090272d7de7cb5f1133359d66780aef7c5cce5c9": "Ybodychange",
    "67406460f0b6c05edde1d1185aeb42b6324df202": "Ymultichange(Ymodifierchange,Ybodychange)",
    "49dfad942970459297f72632ed8dfd353e0c86de": "Ybodychange",
    "cce66ba3c9ec293e8ba1afd0eb518c7ca0bbc7c9": "Ybodychange",
    "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1bc282e0b3f74968c92751f0972746b012e72810": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14317. Ensure checkpoints are created when in-progress edit log tailing is enabled with a period shorter than the log roll period. Contributed by Ekanth Sethuramalingam.\n",
      "commitDate": "07/03/19 8:41 AM",
      "commitName": "1bc282e0b3f74968c92751f0972746b012e72810",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "24/12/18 9:34 AM",
      "commitNameOld": "b5b9b77707933257d446a09f076d594aa170b3d8",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 72.96,
      "commitsBetweenForRepo": 547,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   void triggerActiveLogRoll() {\n     LOG.info(\"Triggering log roll on remote NameNode\");\n     Future\u003cVoid\u003e future \u003d null;\n     try {\n       future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n       future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n+      lastRollTimeMs \u003d monotonicNow();\n       lastRollTriggerTxId \u003d lastLoadedTxnId;\n     } catch (ExecutionException e) {\n       LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n     } catch (TimeoutException e) {\n       if (future !\u003d null) {\n         future.cancel(true);\n       }\n       LOG.warn(String.format(\n           \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n     } catch (InterruptedException e) {\n       LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void triggerActiveLogRoll() {\n    LOG.info(\"Triggering log roll on remote NameNode\");\n    Future\u003cVoid\u003e future \u003d null;\n    try {\n      future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n      future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n      lastRollTimeMs \u003d monotonicNow();\n      lastRollTriggerTxId \u003d lastLoadedTxnId;\n    } catch (ExecutionException e) {\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    } catch (TimeoutException e) {\n      if (future !\u003d null) {\n        future.cancel(true);\n      }\n      LOG.warn(String.format(\n          \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "090272d7de7cb5f1133359d66780aef7c5cce5c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15684. triggerActiveLogRoll stuck on dead name node, when ConnectTimeoutException happens. Contributed by Rong Tang.\n",
      "commitDate": "19/09/18 1:00 PM",
      "commitName": "090272d7de7cb5f1133359d66780aef7c5cce5c9",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 12.93,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,19 @@\n   void triggerActiveLogRoll() {\n     LOG.info(\"Triggering log roll on remote NameNode\");\n     Future\u003cVoid\u003e future \u003d null;\n     try {\n       future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n       future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n       lastRollTriggerTxId \u003d lastLoadedTxnId;\n     } catch (ExecutionException e) {\n-      Throwable cause \u003d e.getCause();\n-      if (cause instanceof RemoteException) {\n-        IOException ioe \u003d ((RemoteException) cause).unwrapRemoteException();\n-        if (ioe instanceof StandbyException) {\n-          LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n-              ioe.getMessage().split(\"\\n\")[0]);\n-          return;\n-        }\n-      }\n       LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n     } catch (TimeoutException e) {\n       if (future !\u003d null) {\n         future.cancel(true);\n       }\n       LOG.warn(String.format(\n           \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n     } catch (InterruptedException e) {\n       LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void triggerActiveLogRoll() {\n    LOG.info(\"Triggering log roll on remote NameNode\");\n    Future\u003cVoid\u003e future \u003d null;\n    try {\n      future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n      future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n      lastRollTriggerTxId \u003d lastLoadedTxnId;\n    } catch (ExecutionException e) {\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    } catch (TimeoutException e) {\n      if (future !\u003d null) {\n        future.cancel(true);\n      }\n      LOG.warn(String.format(\n          \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "67406460f0b6c05edde1d1185aeb42b6324df202": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-4176. EditLogTailer should call rollEdits with a timeout. (Lei Xu)\n",
      "commitDate": "28/07/16 1:32 PM",
      "commitName": "67406460f0b6c05edde1d1185aeb42b6324df202",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-4176. EditLogTailer should call rollEdits with a timeout. (Lei Xu)\n",
          "commitDate": "28/07/16 1:32 PM",
          "commitName": "67406460f0b6c05edde1d1185aeb42b6324df202",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "27/07/16 5:55 PM",
          "commitNameOld": "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.82,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,28 @@\n-  private void triggerActiveLogRoll() {\n+  void triggerActiveLogRoll() {\n     LOG.info(\"Triggering log roll on remote NameNode\");\n+    Future\u003cVoid\u003e future \u003d null;\n     try {\n-      new MultipleNameNodeProxy\u003cVoid\u003e() {\n-        @Override\n-        protected Void doWork() throws IOException {\n-          cachedActiveProxy.rollEditLog();\n-          return null;\n-        }\n-      }.call();\n+      future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n+      future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n       lastRollTriggerTxId \u003d lastLoadedTxnId;\n-    } catch (IOException ioe) {\n-      if (ioe instanceof RemoteException) {\n-        ioe \u003d ((RemoteException)ioe).unwrapRemoteException();\n+    } catch (ExecutionException e) {\n+      Throwable cause \u003d e.getCause();\n+      if (cause instanceof RemoteException) {\n+        IOException ioe \u003d ((RemoteException) cause).unwrapRemoteException();\n         if (ioe instanceof StandbyException) {\n           LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n               ioe.getMessage().split(\"\\n\")[0]);\n           return;\n         }\n       }\n-\n-      LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n+      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n+    } catch (TimeoutException e) {\n+      if (future !\u003d null) {\n+        future.cancel(true);\n+      }\n+      LOG.warn(String.format(\n+          \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n+    } catch (InterruptedException e) {\n+      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void triggerActiveLogRoll() {\n    LOG.info(\"Triggering log roll on remote NameNode\");\n    Future\u003cVoid\u003e future \u003d null;\n    try {\n      future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n      future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n      lastRollTriggerTxId \u003d lastLoadedTxnId;\n    } catch (ExecutionException e) {\n      Throwable cause \u003d e.getCause();\n      if (cause instanceof RemoteException) {\n        IOException ioe \u003d ((RemoteException) cause).unwrapRemoteException();\n        if (ioe instanceof StandbyException) {\n          LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n              ioe.getMessage().split(\"\\n\")[0]);\n          return;\n        }\n      }\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    } catch (TimeoutException e) {\n      if (future !\u003d null) {\n        future.cancel(true);\n      }\n      LOG.warn(String.format(\n          \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4176. EditLogTailer should call rollEdits with a timeout. (Lei Xu)\n",
          "commitDate": "28/07/16 1:32 PM",
          "commitName": "67406460f0b6c05edde1d1185aeb42b6324df202",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "27/07/16 5:55 PM",
          "commitNameOld": "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.82,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,28 @@\n-  private void triggerActiveLogRoll() {\n+  void triggerActiveLogRoll() {\n     LOG.info(\"Triggering log roll on remote NameNode\");\n+    Future\u003cVoid\u003e future \u003d null;\n     try {\n-      new MultipleNameNodeProxy\u003cVoid\u003e() {\n-        @Override\n-        protected Void doWork() throws IOException {\n-          cachedActiveProxy.rollEditLog();\n-          return null;\n-        }\n-      }.call();\n+      future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n+      future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n       lastRollTriggerTxId \u003d lastLoadedTxnId;\n-    } catch (IOException ioe) {\n-      if (ioe instanceof RemoteException) {\n-        ioe \u003d ((RemoteException)ioe).unwrapRemoteException();\n+    } catch (ExecutionException e) {\n+      Throwable cause \u003d e.getCause();\n+      if (cause instanceof RemoteException) {\n+        IOException ioe \u003d ((RemoteException) cause).unwrapRemoteException();\n         if (ioe instanceof StandbyException) {\n           LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n               ioe.getMessage().split(\"\\n\")[0]);\n           return;\n         }\n       }\n-\n-      LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n+      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n+    } catch (TimeoutException e) {\n+      if (future !\u003d null) {\n+        future.cancel(true);\n+      }\n+      LOG.warn(String.format(\n+          \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n+    } catch (InterruptedException e) {\n+      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void triggerActiveLogRoll() {\n    LOG.info(\"Triggering log roll on remote NameNode\");\n    Future\u003cVoid\u003e future \u003d null;\n    try {\n      future \u003d rollEditsRpcExecutor.submit(getNameNodeProxy());\n      future.get(rollEditsTimeoutMs, TimeUnit.MILLISECONDS);\n      lastRollTriggerTxId \u003d lastLoadedTxnId;\n    } catch (ExecutionException e) {\n      Throwable cause \u003d e.getCause();\n      if (cause instanceof RemoteException) {\n        IOException ioe \u003d ((RemoteException) cause).unwrapRemoteException();\n        if (ioe instanceof StandbyException) {\n          LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n              ioe.getMessage().split(\"\\n\")[0]);\n          return;\n        }\n      }\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    } catch (TimeoutException e) {\n      if (future !\u003d null) {\n        future.cancel(true);\n      }\n      LOG.warn(String.format(\n          \"Unable to finish rolling edits in %d ms\", rollEditsTimeoutMs));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Unable to trigger a roll of the active NN\", e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
          "extendedDetails": {}
        }
      ]
    },
    "49dfad942970459297f72632ed8dfd353e0c86de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6440. Support more than 2 NameNodes. Contributed by Jesse Yates.\n",
      "commitDate": "23/06/15 5:26 PM",
      "commitName": "49dfad942970459297f72632ed8dfd353e0c86de",
      "commitAuthor": "Aaron T. Myers",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 52.31,
      "commitsBetweenForRepo": 466,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,24 @@\n   private void triggerActiveLogRoll() {\n-    LOG.info(\"Triggering log roll on remote NameNode \" + activeAddr);\n+    LOG.info(\"Triggering log roll on remote NameNode\");\n     try {\n-      getActiveNodeProxy().rollEditLog();\n+      new MultipleNameNodeProxy\u003cVoid\u003e() {\n+        @Override\n+        protected Void doWork() throws IOException {\n+          cachedActiveProxy.rollEditLog();\n+          return null;\n+        }\n+      }.call();\n       lastRollTriggerTxId \u003d lastLoadedTxnId;\n     } catch (IOException ioe) {\n       if (ioe instanceof RemoteException) {\n         ioe \u003d ((RemoteException)ioe).unwrapRemoteException();\n         if (ioe instanceof StandbyException) {\n           LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n               ioe.getMessage().split(\"\\n\")[0]);\n           return;\n         }\n       }\n \n       LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void triggerActiveLogRoll() {\n    LOG.info(\"Triggering log roll on remote NameNode\");\n    try {\n      new MultipleNameNodeProxy\u003cVoid\u003e() {\n        @Override\n        protected Void doWork() throws IOException {\n          cachedActiveProxy.rollEditLog();\n          return null;\n        }\n      }.call();\n      lastRollTriggerTxId \u003d lastLoadedTxnId;\n    } catch (IOException ioe) {\n      if (ioe instanceof RemoteException) {\n        ioe \u003d ((RemoteException)ioe).unwrapRemoteException();\n        if (ioe instanceof StandbyException) {\n          LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n              ioe.getMessage().split(\"\\n\")[0]);\n          return;\n        }\n      }\n\n      LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "cce66ba3c9ec293e8ba1afd0eb518c7ca0bbc7c9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3918. EditLogTailer shouldn\u0027t log WARN when other node is in standby mode. Contributed by Todd Lipcon.\n",
      "commitDate": "30/03/15 7:34 PM",
      "commitName": "cce66ba3c9ec293e8ba1afd0eb518c7ca0bbc7c9",
      "commitAuthor": "Harsh J",
      "commitDateOld": "20/03/15 12:02 PM",
      "commitNameOld": "75ead273bea8a7dad61c4f99c3a16cab2697c498",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 10.31,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,18 @@\n   private void triggerActiveLogRoll() {\n     LOG.info(\"Triggering log roll on remote NameNode \" + activeAddr);\n     try {\n       getActiveNodeProxy().rollEditLog();\n       lastRollTriggerTxId \u003d lastLoadedTxnId;\n     } catch (IOException ioe) {\n+      if (ioe instanceof RemoteException) {\n+        ioe \u003d ((RemoteException)ioe).unwrapRemoteException();\n+        if (ioe instanceof StandbyException) {\n+          LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n+              ioe.getMessage().split(\"\\n\")[0]);\n+          return;\n+        }\n+      }\n+\n       LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void triggerActiveLogRoll() {\n    LOG.info(\"Triggering log roll on remote NameNode \" + activeAddr);\n    try {\n      getActiveNodeProxy().rollEditLog();\n      lastRollTriggerTxId \u003d lastLoadedTxnId;\n    } catch (IOException ioe) {\n      if (ioe instanceof RemoteException) {\n        ioe \u003d ((RemoteException)ioe).unwrapRemoteException();\n        if (ioe instanceof StandbyException) {\n          LOG.info(\"Skipping log roll. Remote node is not in Active state: \" +\n              ioe.getMessage().split(\"\\n\")[0]);\n          return;\n        }\n      }\n\n      LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2737. Automatically trigger log rolls periodically on the active NN. Contributed by Todd Lipcon and Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1234256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/01/12 7:17 PM",
      "commitName": "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,9 @@\n+  private void triggerActiveLogRoll() {\n+    LOG.info(\"Triggering log roll on remote NameNode \" + activeAddr);\n+    try {\n+      getActiveNodeProxy().rollEditLog();\n+      lastRollTriggerTxId \u003d lastLoadedTxnId;\n+    } catch (IOException ioe) {\n+      LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void triggerActiveLogRoll() {\n    LOG.info(\"Triggering log roll on remote NameNode \" + activeAddr);\n    try {\n      getActiveNodeProxy().rollEditLog();\n      lastRollTriggerTxId \u003d lastLoadedTxnId;\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to trigger a roll of the active NN\", ioe);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java"
    }
  }
}