{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Router.java",
  "functionName": "lookupRoute",
  "functionId": "lookupRoute___method-WebApp.HTTP__path-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
  "functionStartLine": 160,
  "functionEndLine": 194,
  "numCommitsSeen": 10,
  "timeTaken": 7000,
  "changeHistory": [
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Dest lookupRoute(WebApp.HTTP method, String path) {\n    String key \u003d path;\n    do {\n      Dest dest \u003d routes.get(key);\n      if (dest !\u003d null \u0026\u0026 methodAllowed(method, dest)) {\n        if ((Object)key \u003d\u003d path) { // shut up warnings\n          LOG.debug(\"exact match for {}: {}\", key, dest.action);\n          return dest;\n        } else if (isGoodMatch(dest, path)) {\n          LOG.debug(\"prefix match2 for {}: {}\", key, dest.action);\n          return dest;\n        }\n        return resolveAction(method, dest, path);\n      }\n      Map.Entry\u003cString, Dest\u003e lower \u003d routes.lowerEntry(key);\n      if (lower \u003d\u003d null) {\n        return null;\n      }\n      dest \u003d lower.getValue();\n      if (prefixMatches(dest, path)) {\n        if (methodAllowed(method, dest)) {\n          if (isGoodMatch(dest, path)) {\n            LOG.debug(\"prefix match for {}: {}\", lower.getKey(), dest.action);\n            return dest;\n          }\n          return resolveAction(method, dest, path);\n        }\n        // check other candidates\n        int slashPos \u003d key.lastIndexOf(\u0027/\u0027);\n        key \u003d slashPos \u003e 0 ? path.substring(0, slashPos) : \"/\";\n      } else {\n        key \u003d \"/\";\n      }\n    } while (true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Dest lookupRoute(WebApp.HTTP method, String path) {\n    String key \u003d path;\n    do {\n      Dest dest \u003d routes.get(key);\n      if (dest !\u003d null \u0026\u0026 methodAllowed(method, dest)) {\n        if ((Object)key \u003d\u003d path) { // shut up warnings\n          LOG.debug(\"exact match for {}: {}\", key, dest.action);\n          return dest;\n        } else if (isGoodMatch(dest, path)) {\n          LOG.debug(\"prefix match2 for {}: {}\", key, dest.action);\n          return dest;\n        }\n        return resolveAction(method, dest, path);\n      }\n      Map.Entry\u003cString, Dest\u003e lower \u003d routes.lowerEntry(key);\n      if (lower \u003d\u003d null) {\n        return null;\n      }\n      dest \u003d lower.getValue();\n      if (prefixMatches(dest, path)) {\n        if (methodAllowed(method, dest)) {\n          if (isGoodMatch(dest, path)) {\n            LOG.debug(\"prefix match for {}: {}\", lower.getKey(), dest.action);\n            return dest;\n          }\n          return resolveAction(method, dest, path);\n        }\n        // check other candidates\n        int slashPos \u003d key.lastIndexOf(\u0027/\u0027);\n        key \u003d slashPos \u003e 0 ? path.substring(0, slashPos) : \"/\";\n      } else {\n        key \u003d \"/\";\n      }\n    } while (true);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,35 @@\n+  private Dest lookupRoute(WebApp.HTTP method, String path) {\n+    String key \u003d path;\n+    do {\n+      Dest dest \u003d routes.get(key);\n+      if (dest !\u003d null \u0026\u0026 methodAllowed(method, dest)) {\n+        if ((Object)key \u003d\u003d path) { // shut up warnings\n+          LOG.debug(\"exact match for {}: {}\", key, dest.action);\n+          return dest;\n+        } else if (isGoodMatch(dest, path)) {\n+          LOG.debug(\"prefix match2 for {}: {}\", key, dest.action);\n+          return dest;\n+        }\n+        return resolveAction(method, dest, path);\n+      }\n+      Map.Entry\u003cString, Dest\u003e lower \u003d routes.lowerEntry(key);\n+      if (lower \u003d\u003d null) {\n+        return null;\n+      }\n+      dest \u003d lower.getValue();\n+      if (prefixMatches(dest, path)) {\n+        if (methodAllowed(method, dest)) {\n+          if (isGoodMatch(dest, path)) {\n+            LOG.debug(\"prefix match for {}: {}\", lower.getKey(), dest.action);\n+            return dest;\n+          }\n+          return resolveAction(method, dest, path);\n+        }\n+        // check other candidates\n+        int slashPos \u003d key.lastIndexOf(\u0027/\u0027);\n+        key \u003d slashPos \u003e 0 ? path.substring(0, slashPos) : \"/\";\n+      } else {\n+        key \u003d \"/\";\n+      }\n+    } while (true);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Dest lookupRoute(WebApp.HTTP method, String path) {\n    String key \u003d path;\n    do {\n      Dest dest \u003d routes.get(key);\n      if (dest !\u003d null \u0026\u0026 methodAllowed(method, dest)) {\n        if ((Object)key \u003d\u003d path) { // shut up warnings\n          LOG.debug(\"exact match for {}: {}\", key, dest.action);\n          return dest;\n        } else if (isGoodMatch(dest, path)) {\n          LOG.debug(\"prefix match2 for {}: {}\", key, dest.action);\n          return dest;\n        }\n        return resolveAction(method, dest, path);\n      }\n      Map.Entry\u003cString, Dest\u003e lower \u003d routes.lowerEntry(key);\n      if (lower \u003d\u003d null) {\n        return null;\n      }\n      dest \u003d lower.getValue();\n      if (prefixMatches(dest, path)) {\n        if (methodAllowed(method, dest)) {\n          if (isGoodMatch(dest, path)) {\n            LOG.debug(\"prefix match for {}: {}\", lower.getKey(), dest.action);\n            return dest;\n          }\n          return resolveAction(method, dest, path);\n        }\n        // check other candidates\n        int slashPos \u003d key.lastIndexOf(\u0027/\u0027);\n        key \u003d slashPos \u003e 0 ? path.substring(0, slashPos) : \"/\";\n      } else {\n        key \u003d \"/\";\n      }\n    } while (true);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
    }
  }
}