{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMDelegationTokenIdentifier.java",
  "functionName": "getRmClient",
  "functionId": "getRmClient___token-Token__?____conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/RMDelegationTokenIdentifier.java",
  "functionStartLine": 137,
  "functionEndLine": 155,
  "numCommitsSeen": 10,
  "timeTaken": 1791,
  "changeHistory": [
    "88245b6a41171f939b22186c533ea2bc7994f9b3",
    "8006467e58775ab2404be713f45efeea023819fd",
    "77e134d13fb87cd098f2e9c23212affe0a7be1be",
    "ab16a375720f1b5fa8400498d6a727007275e1d8"
  ],
  "changeHistoryShort": {
    "88245b6a41171f939b22186c533ea2bc7994f9b3": "Ybodychange",
    "8006467e58775ab2404be713f45efeea023819fd": "Ymultichange(Yexceptionschange,Ybodychange)",
    "77e134d13fb87cd098f2e9c23212affe0a7be1be": "Ymultichange(Yreturntypechange,Ybodychange)",
    "ab16a375720f1b5fa8400498d6a727007275e1d8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "88245b6a41171f939b22186c533ea2bc7994f9b3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-986. Changed client side to be able to figure out the right RM Delegation token for the right ResourceManager when HA is enabled. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574190 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/14 12:39 PM",
      "commitName": "88245b6a41171f939b22186c533ea2bc7994f9b3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "28/01/14 12:26 AM",
      "commitNameOld": "8006467e58775ab2404be713f45efeea023819fd",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 35.51,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n     private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n         Configuration conf) throws IOException {\n-      InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n-      if (localSecretManager !\u003d null) {\n-        // return null if it\u0027s our token\n-        if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n+      String[] services \u003d token.getService().toString().split(\",\");\n+      for (String service : services) {\n+        InetSocketAddress addr \u003d NetUtils.createSocketAddr(service);\n+        if (localSecretManager !\u003d null) {\n+          // return null if it\u0027s our token\n+          if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n             if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                 addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n               return null;\n             }\n-        } else if (addr.equals(localServiceAddress)) {\n-          return null;\n+          } else if (addr.equals(localServiceAddress)) {\n+            return null;\n+          }\n         }\n       }\n       return ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n        Configuration conf) throws IOException {\n      String[] services \u003d token.getService().toString().split(\",\");\n      for (String service : services) {\n        InetSocketAddress addr \u003d NetUtils.createSocketAddr(service);\n        if (localSecretManager !\u003d null) {\n          // return null if it\u0027s our token\n          if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n            if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n              return null;\n            }\n          } else if (addr.equals(localServiceAddress)) {\n            return null;\n          }\n        }\n      }\n      return ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/RMDelegationTokenIdentifier.java",
      "extendedDetails": {}
    },
    "8006467e58775ab2404be713f45efeea023819fd": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-1642. RMDTRenewer#getRMClient should use ClientRMProxy (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561990 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/01/14 12:26 AM",
      "commitName": "8006467e58775ab2404be713f45efeea023819fd",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-1642. RMDTRenewer#getRMClient should use ClientRMProxy (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561990 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/01/14 12:26 AM",
          "commitName": "8006467e58775ab2404be713f45efeea023819fd",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "16/06/13 7:27 PM",
          "commitNameOld": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 225.25,
          "commitsBetweenForRepo": 1356,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n     private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n-        Configuration conf) {\n+        Configuration conf) throws IOException {\n       InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n       if (localSecretManager !\u003d null) {\n         // return null if it\u0027s our token\n         if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n             if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                 addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n               return null;\n             }\n         } else if (addr.equals(localServiceAddress)) {\n           return null;\n         }\n       }\n-      final YarnRPC rpc \u003d YarnRPC.create(conf);\n-      return (ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class, addr, conf);        \n+      return ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n        Configuration conf) throws IOException {\n      InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n      if (localSecretManager !\u003d null) {\n        // return null if it\u0027s our token\n        if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n            if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n              return null;\n            }\n        } else if (addr.equals(localServiceAddress)) {\n          return null;\n        }\n      }\n      return ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/RMDelegationTokenIdentifier.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1642. RMDTRenewer#getRMClient should use ClientRMProxy (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561990 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/01/14 12:26 AM",
          "commitName": "8006467e58775ab2404be713f45efeea023819fd",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "16/06/13 7:27 PM",
          "commitNameOld": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 225.25,
          "commitsBetweenForRepo": 1356,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n     private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n-        Configuration conf) {\n+        Configuration conf) throws IOException {\n       InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n       if (localSecretManager !\u003d null) {\n         // return null if it\u0027s our token\n         if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n             if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                 addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n               return null;\n             }\n         } else if (addr.equals(localServiceAddress)) {\n           return null;\n         }\n       }\n-      final YarnRPC rpc \u003d YarnRPC.create(conf);\n-      return (ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class, addr, conf);        \n+      return ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n        Configuration conf) throws IOException {\n      InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n      if (localSecretManager !\u003d null) {\n        // return null if it\u0027s our token\n        if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n            if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n              return null;\n            }\n        } else if (addr.equals(localServiceAddress)) {\n          return null;\n        }\n      }\n      return ClientRMProxy.createRMProxy(conf, ApplicationClientProtocol.class);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/RMDelegationTokenIdentifier.java",
          "extendedDetails": {}
        }
      ]
    },
    "77e134d13fb87cd098f2e9c23212affe0a7be1be": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-387. Renamed YARN protocols for consistency. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493623 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 7:27 PM",
      "commitName": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-387. Renamed YARN protocols for consistency. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493623 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/06/13 7:27 PM",
          "commitName": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 12.93,
          "commitsBetweenForRepo": 96,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    private static ClientRMProtocol getRmClient(Token\u003c?\u003e token,\n+    private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n         Configuration conf) {\n       InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n       if (localSecretManager !\u003d null) {\n         // return null if it\u0027s our token\n         if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n             if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                 addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n               return null;\n             }\n         } else if (addr.equals(localServiceAddress)) {\n           return null;\n         }\n       }\n       final YarnRPC rpc \u003d YarnRPC.create(conf);\n-      return (ClientRMProtocol)rpc.getProxy(ClientRMProtocol.class, addr, conf);        \n+      return (ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class, addr, conf);        \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n        Configuration conf) {\n      InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n      if (localSecretManager !\u003d null) {\n        // return null if it\u0027s our token\n        if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n            if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n              return null;\n            }\n        } else if (addr.equals(localServiceAddress)) {\n          return null;\n        }\n      }\n      final YarnRPC rpc \u003d YarnRPC.create(conf);\n      return (ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class, addr, conf);        \n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/RMDelegationTokenIdentifier.java",
          "extendedDetails": {
            "oldValue": "ClientRMProtocol",
            "newValue": "ApplicationClientProtocol"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-387. Renamed YARN protocols for consistency. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493623 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/06/13 7:27 PM",
          "commitName": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 12.93,
          "commitsBetweenForRepo": 96,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    private static ClientRMProtocol getRmClient(Token\u003c?\u003e token,\n+    private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n         Configuration conf) {\n       InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n       if (localSecretManager !\u003d null) {\n         // return null if it\u0027s our token\n         if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n             if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                 addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n               return null;\n             }\n         } else if (addr.equals(localServiceAddress)) {\n           return null;\n         }\n       }\n       final YarnRPC rpc \u003d YarnRPC.create(conf);\n-      return (ClientRMProtocol)rpc.getProxy(ClientRMProtocol.class, addr, conf);        \n+      return (ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class, addr, conf);        \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static ApplicationClientProtocol getRmClient(Token\u003c?\u003e token,\n        Configuration conf) {\n      InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n      if (localSecretManager !\u003d null) {\n        // return null if it\u0027s our token\n        if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n            if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n              return null;\n            }\n        } else if (addr.equals(localServiceAddress)) {\n          return null;\n        }\n      }\n      final YarnRPC rpc \u003d YarnRPC.create(conf);\n      return (ApplicationClientProtocol)rpc.getProxy(ApplicationClientProtocol.class, addr, conf);        \n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/RMDelegationTokenIdentifier.java",
          "extendedDetails": {}
        }
      ]
    },
    "ab16a375720f1b5fa8400498d6a727007275e1d8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-355. Fixes a bug where RM app submission could jam under load. Contributed by Daryn Sharp.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1443131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/13 11:03 AM",
      "commitName": "ab16a375720f1b5fa8400498d6a727007275e1d8",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,17 @@\n+    private static ClientRMProtocol getRmClient(Token\u003c?\u003e token,\n+        Configuration conf) {\n+      InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n+      if (localSecretManager !\u003d null) {\n+        // return null if it\u0027s our token\n+        if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n+            if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n+                addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n+              return null;\n+            }\n+        } else if (addr.equals(localServiceAddress)) {\n+          return null;\n+        }\n+      }\n+      final YarnRPC rpc \u003d YarnRPC.create(conf);\n+      return (ClientRMProtocol)rpc.getProxy(ClientRMProtocol.class, addr, conf);        \n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static ClientRMProtocol getRmClient(Token\u003c?\u003e token,\n        Configuration conf) {\n      InetSocketAddress addr \u003d SecurityUtil.getTokenServiceAddr(token);\n      if (localSecretManager !\u003d null) {\n        // return null if it\u0027s our token\n        if (localServiceAddress.getAddress().isAnyLocalAddress()) {\n            if (NetUtils.isLocalAddress(addr.getAddress()) \u0026\u0026\n                addr.getPort() \u003d\u003d localServiceAddress.getPort()) {\n              return null;\n            }\n        } else if (addr.equals(localServiceAddress)) {\n          return null;\n        }\n      }\n      final YarnRPC rpc \u003d YarnRPC.create(conf);\n      return (ClientRMProtocol)rpc.getProxy(ClientRMProtocol.class, addr, conf);        \n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/RMDelegationTokenIdentifier.java"
    }
  }
}