{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "refreshAdminAcls",
  "functionId": "refreshAdminAcls___checkRMHAState-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 552,
  "functionEndLine": 568,
  "numCommitsSeen": 78,
  "timeTaken": 2921,
  "changeHistory": [
    "733aa993134ba324c712590fa92b8ef230b0839a",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b",
    "a826d432f9b45550cc5ab79ef63ca39b176dabb2",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
    "ad70f26b1fe6579166a042fec2e9f21ec56464cb"
  ],
  "changeHistoryShort": {
    "733aa993134ba324c712590fa92b8ef230b0839a": "Ybodychange",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": "Ybodychange",
    "a826d432f9b45550cc5ab79ef63ca39b176dabb2": "Ybodychange",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": "Ybodychange",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": "Ybodychange",
    "ad70f26b1fe6579166a042fec2e9f21ec56464cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "733aa993134ba324c712590fa92b8ef230b0839a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4998. Minor cleanup to UGI use in AdminService. (Daniel Templeton via kasha)\n",
      "commitDate": "31/10/16 4:26 PM",
      "commitName": "733aa993134ba324c712590fa92b8ef230b0839a",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "02/10/16 11:02 PM",
      "commitNameOld": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 28.72,
      "commitsBetweenForRepo": 255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n       throws YarnException, IOException {\n     final String operation \u003d \"refreshAdminAcls\";\n     UserGroupInformation user \u003d checkAcls(operation);\n \n     if (checkRMHAState) {\n       checkRMStatus(user.getShortUserName(), operation, \"refresh Admin ACLs.\");\n     }\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n-    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n-        .getCurrentUser());\n+    authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n     RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n         \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n      throws YarnException, IOException {\n    final String operation \u003d \"refreshAdminAcls\";\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    if (checkRMHAState) {\n      checkRMStatus(user.getShortUserName(), operation, \"refresh Admin ACLs.\");\n    }\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    authorizer.setAdmins(getAdminAclList(conf), daemonUser);\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n        \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4883. Make consistent operation name in AdminService. Contributed by Kai Sasaki.\n",
      "commitDate": "20/07/16 4:51 PM",
      "commitName": "c63afdbe14df7359841aa4b213252a8a275e8c4b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "09/04/16 10:31 AM",
      "commitNameOld": "ff95fd547b3030529983fa4e701ac728c54ab63a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 102.26,
      "commitsBetweenForRepo": 794,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n       throws YarnException, IOException {\n-    String argName \u003d \"refreshAdminAcls\";\n-    UserGroupInformation user \u003d checkAcls(argName);\n+    final String operation \u003d \"refreshAdminAcls\";\n+    UserGroupInformation user \u003d checkAcls(operation);\n \n     if (checkRMHAState) {\n-      checkRMStatus(user.getShortUserName(), argName, \"refresh Admin ACLs.\");\n+      checkRMStatus(user.getShortUserName(), operation, \"refresh Admin ACLs.\");\n     }\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n     authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n         .getCurrentUser());\n-    RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n         \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n      throws YarnException, IOException {\n    final String operation \u003d \"refreshAdminAcls\";\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    if (checkRMHAState) {\n      checkRMStatus(user.getShortUserName(), operation, \"refresh Admin ACLs.\");\n    }\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n        .getCurrentUser());\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n        \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a826d432f9b45550cc5ab79ef63ca39b176dabb2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3804. Both RM are on standBy state when kerberos user not in yarn.admin.acl. Contributed by Varun Saxena\n",
      "commitDate": "17/06/15 4:23 PM",
      "commitName": "a826d432f9b45550cc5ab79ef63ca39b176dabb2",
      "commitAuthor": "Xuan",
      "commitDateOld": "07/05/15 11:44 PM",
      "commitNameOld": "ef3d66d4624d360e75c016e36824a6782d6a9746",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 40.69,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n       throws YarnException, IOException {\n     String argName \u003d \"refreshAdminAcls\";\n     UserGroupInformation user \u003d checkAcls(argName);\n \n     if (checkRMHAState) {\n       checkRMStatus(user.getShortUserName(), argName, \"refresh Admin ACLs.\");\n     }\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n-    authorizer.setAdmins(new AccessControlList(conf.get(\n-      YarnConfiguration.YARN_ADMIN_ACL,\n-        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n+    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n         .getCurrentUser());\n     RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n         \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n      throws YarnException, IOException {\n    String argName \u003d \"refreshAdminAcls\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    if (checkRMHAState) {\n      checkRMStatus(user.getShortUserName(), argName, \"refresh Admin ACLs.\");\n    }\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    authorizer.setAdmins(getAdminAclList(conf), UserGroupInformation\n        .getCurrentUser());\n    RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n        \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3100. Made YARN authorization pluggable. Contributed by Jian He.\n",
      "commitDate": "09/02/15 8:34 PM",
      "commitName": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "26/12/14 6:59 AM",
      "commitNameOld": "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 45.57,
      "commitsBetweenForRepo": 302,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n       throws YarnException, IOException {\n     String argName \u003d \"refreshAdminAcls\";\n     UserGroupInformation user \u003d checkAcls(argName);\n \n     if (checkRMHAState) {\n       checkRMStatus(user.getShortUserName(), argName, \"refresh Admin ACLs.\");\n     }\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n-    adminAcl \u003d new AccessControlList(conf.get(\n-        YarnConfiguration.YARN_ADMIN_ACL,\n-        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n+    authorizer.setAdmins(new AccessControlList(conf.get(\n+      YarnConfiguration.YARN_ADMIN_ACL,\n+        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n+        .getCurrentUser());\n     RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n         \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n      throws YarnException, IOException {\n    String argName \u003d \"refreshAdminAcls\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    if (checkRMHAState) {\n      checkRMStatus(user.getShortUserName(), argName, \"refresh Admin ACLs.\");\n    }\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    authorizer.setAdmins(new AccessControlList(conf.get(\n      YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL)), UserGroupInformation\n        .getCurrentUser());\n    RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n        \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2993. Several fixes (missing acl check, error log msg ...) and some refinement in AdminService. (Contributed by Yi Liu)\n",
      "commitDate": "26/12/14 6:59 AM",
      "commitName": "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
      "commitAuthor": "Junping Du",
      "commitDateOld": "30/10/14 10:59 PM",
      "commitNameOld": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 56.37,
      "commitsBetweenForRepo": 427,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,19 @@\n   private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n       throws YarnException, IOException {\n     String argName \u003d \"refreshAdminAcls\";\n     UserGroupInformation user \u003d checkAcls(argName);\n \n-    if (checkRMHAState \u0026\u0026 !isRMActive()) {\n-      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n-          adminAcl.toString(), \"AdminService\",\n-          \"ResourceManager is not active. Can not refresh user-groups.\");\n-      throwStandbyException();\n+    if (checkRMHAState) {\n+      checkRMStatus(user.getShortUserName(), argName, \"refresh Admin ACLs.\");\n     }\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n     adminAcl \u003d new AccessControlList(conf.get(\n         YarnConfiguration.YARN_ADMIN_ACL,\n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n         \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n      throws YarnException, IOException {\n    String argName \u003d \"refreshAdminAcls\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    if (checkRMHAState) {\n      checkRMStatus(user.getShortUserName(), argName, \"refresh Admin ACLs.\");\n    }\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n        \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "ad70f26b1fe6579166a042fec2e9f21ec56464cb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1734. Fixed ResourceManager to update the configurations when it transits from standby to active mode so as to assimilate any changes that happened while it was in standby mode. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1571539 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/14 6:07 PM",
      "commitName": "ad70f26b1fe6579166a042fec2e9f21ec56464cb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n+      throws YarnException, IOException {\n+    String argName \u003d \"refreshAdminAcls\";\n+    UserGroupInformation user \u003d checkAcls(argName);\n+\n+    if (checkRMHAState \u0026\u0026 !isRMActive()) {\n+      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n+          adminAcl.toString(), \"AdminService\",\n+          \"ResourceManager is not active. Can not refresh user-groups.\");\n+      throwStandbyException();\n+    }\n+    Configuration conf \u003d\n+        getConfiguration(new Configuration(false),\n+            YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n+    adminAcl \u003d new AccessControlList(conf.get(\n+        YarnConfiguration.YARN_ADMIN_ACL,\n+        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n+    RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n+        \"AdminService\");\n+\n+    return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RefreshAdminAclsResponse refreshAdminAcls(boolean checkRMHAState)\n      throws YarnException, IOException {\n    String argName \u003d \"refreshAdminAcls\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    if (checkRMHAState \u0026\u0026 !isRMActive()) {\n      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh user-groups.\");\n      throwStandbyException();\n    }\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    adminAcl \u003d new AccessControlList(conf.get(\n        YarnConfiguration.YARN_ADMIN_ACL,\n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n        \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshAdminAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}