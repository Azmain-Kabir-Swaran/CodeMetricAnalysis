{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionName": "listOpenFiles",
  "functionId": "listOpenFiles___controller-RpcController__req-ListOpenFilesRequestProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionStartLine": 1964,
  "functionEndLine": 1982,
  "numCommitsSeen": 141,
  "timeTaken": 3157,
  "changeHistory": [
    "bf5c94899537011465350d5d999fad9ffaeb605d",
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
    "fb68980959f95f0d89e86f91909867724ad01791"
  ],
  "changeHistoryShort": {
    "bf5c94899537011465350d5d999fad9ffaeb605d": "Ybodychange",
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090": "Ybodychange",
    "fb68980959f95f0d89e86f91909867724ad01791": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf5c94899537011465350d5d999fad9ffaeb605d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11848. Enhance dfsadmin listOpenFiles command to list files under a given path. Contributed by Yiqun Lin.\n",
      "commitDate": "05/01/18 10:31 PM",
      "commitName": "bf5c94899537011465350d5d999fad9ffaeb605d",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "02/01/18 2:59 PM",
      "commitNameOld": "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
      "commitAuthorOld": "Manoj Govindassamy",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public ListOpenFilesResponseProto listOpenFiles(RpcController controller,\n       ListOpenFilesRequestProto req) throws ServiceException {\n     try {\n       EnumSet\u003cOpenFilesType\u003e openFilesTypes \u003d\n           PBHelperClient.convertOpenFileTypes(req.getTypesList());\n       BatchedEntries\u003cOpenFileEntry\u003e entries \u003d server.listOpenFiles(req.getId(),\n-          openFilesTypes);\n+          openFilesTypes, req.getPath());\n       ListOpenFilesResponseProto.Builder builder \u003d\n           ListOpenFilesResponseProto.newBuilder();\n       builder.setHasMore(entries.hasMore());\n       for (int i \u003d 0; i \u003c entries.size(); i++) {\n         builder.addEntries(PBHelperClient.convert(entries.get(i)));\n       }\n       builder.addAllTypes(req.getTypesList());\n       return builder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListOpenFilesResponseProto listOpenFiles(RpcController controller,\n      ListOpenFilesRequestProto req) throws ServiceException {\n    try {\n      EnumSet\u003cOpenFilesType\u003e openFilesTypes \u003d\n          PBHelperClient.convertOpenFileTypes(req.getTypesList());\n      BatchedEntries\u003cOpenFileEntry\u003e entries \u003d server.listOpenFiles(req.getId(),\n          openFilesTypes, req.getPath());\n      ListOpenFilesResponseProto.Builder builder \u003d\n          ListOpenFilesResponseProto.newBuilder();\n      builder.setHasMore(entries.hasMore());\n      for (int i \u003d 0; i \u003c entries.size(); i++) {\n        builder.addEntries(PBHelperClient.convert(entries.get(i)));\n      }\n      builder.addAllTypes(req.getTypesList());\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11847. Enhance dfsadmin listOpenFiles command to list files blocking datanode decommissioning.\n",
      "commitDate": "02/01/18 2:59 PM",
      "commitName": "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
      "commitAuthor": "Manoj Govindassamy",
      "commitDateOld": "11/12/17 8:14 PM",
      "commitNameOld": "693169ef34f856a27dc09d90a45fb4ec5b66ed2c",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 21.78,
      "commitsBetweenForRepo": 115,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   public ListOpenFilesResponseProto listOpenFiles(RpcController controller,\n       ListOpenFilesRequestProto req) throws ServiceException {\n     try {\n-      BatchedEntries\u003cOpenFileEntry\u003e entries \u003d server.listOpenFiles(req.getId());\n+      EnumSet\u003cOpenFilesType\u003e openFilesTypes \u003d\n+          PBHelperClient.convertOpenFileTypes(req.getTypesList());\n+      BatchedEntries\u003cOpenFileEntry\u003e entries \u003d server.listOpenFiles(req.getId(),\n+          openFilesTypes);\n       ListOpenFilesResponseProto.Builder builder \u003d\n           ListOpenFilesResponseProto.newBuilder();\n       builder.setHasMore(entries.hasMore());\n       for (int i \u003d 0; i \u003c entries.size(); i++) {\n         builder.addEntries(PBHelperClient.convert(entries.get(i)));\n       }\n+      builder.addAllTypes(req.getTypesList());\n       return builder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListOpenFilesResponseProto listOpenFiles(RpcController controller,\n      ListOpenFilesRequestProto req) throws ServiceException {\n    try {\n      EnumSet\u003cOpenFilesType\u003e openFilesTypes \u003d\n          PBHelperClient.convertOpenFileTypes(req.getTypesList());\n      BatchedEntries\u003cOpenFileEntry\u003e entries \u003d server.listOpenFiles(req.getId(),\n          openFilesTypes);\n      ListOpenFilesResponseProto.Builder builder \u003d\n          ListOpenFilesResponseProto.newBuilder();\n      builder.setHasMore(entries.hasMore());\n      for (int i \u003d 0; i \u003c entries.size(); i++) {\n        builder.addEntries(PBHelperClient.convert(entries.get(i)));\n      }\n      builder.addAllTypes(req.getTypesList());\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "fb68980959f95f0d89e86f91909867724ad01791": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10480. Add an admin command to list currently open files. Contributed by Manoj Govindassamy.\n",
      "commitDate": "15/06/17 2:46 PM",
      "commitName": "fb68980959f95f0d89e86f91909867724ad01791",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,15 @@\n+  public ListOpenFilesResponseProto listOpenFiles(RpcController controller,\n+      ListOpenFilesRequestProto req) throws ServiceException {\n+    try {\n+      BatchedEntries\u003cOpenFileEntry\u003e entries \u003d server.listOpenFiles(req.getId());\n+      ListOpenFilesResponseProto.Builder builder \u003d\n+          ListOpenFilesResponseProto.newBuilder();\n+      builder.setHasMore(entries.hasMore());\n+      for (int i \u003d 0; i \u003c entries.size(); i++) {\n+        builder.addEntries(PBHelperClient.convert(entries.get(i)));\n+      }\n+      return builder.build();\n+    } catch (IOException e) {\n+      throw new ServiceException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ListOpenFilesResponseProto listOpenFiles(RpcController controller,\n      ListOpenFilesRequestProto req) throws ServiceException {\n    try {\n      BatchedEntries\u003cOpenFileEntry\u003e entries \u003d server.listOpenFiles(req.getId());\n      ListOpenFilesResponseProto.Builder builder \u003d\n          ListOpenFilesResponseProto.newBuilder();\n      builder.setHasMore(entries.hasMore());\n      for (int i \u003d 0; i \u003c entries.size(); i++) {\n        builder.addEntries(PBHelperClient.convert(entries.get(i)));\n      }\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java"
    }
  }
}