{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RemoteWasbAuthorizerImpl.java",
  "functionName": "init",
  "functionId": "init___conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java",
  "functionStartLine": 118,
  "functionEndLine": 147,
  "numCommitsSeen": 12,
  "timeTaken": 2569,
  "changeHistory": [
    "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
    "38996fdcf0987d1da00ce46f8284d8fcdce57329",
    "8b5f2c372e70999f3ee0a0bd685a494e06bc3652",
    "8e15e240597f821968e14893eabfea39815de207",
    "686823529be09bea2a6cecb3503ef722017475bc"
  ],
  "changeHistoryShort": {
    "2843c688bcc21c65eb3538ffb3caeaffe440eda8": "Ymultichange(Yexceptionschange,Ybodychange)",
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc": "Ybodychange",
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": "Ybodychange",
    "8b5f2c372e70999f3ee0a0bd685a494e06bc3652": "Ybodychange",
    "8e15e240597f821968e14893eabfea39815de207": "Ybodychange",
    "686823529be09bea2a6cecb3503ef722017475bc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2843c688bcc21c65eb3538ffb3caeaffe440eda8": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-14642. wasb: add support for caching Authorization and SASKeys. Contributed by Sivaguru Sankaridurg.\n",
      "commitDate": "19/07/17 12:13 AM",
      "commitName": "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-14642. wasb: add support for caching Authorization and SASKeys. Contributed by Sivaguru Sankaridurg.\n",
          "commitDate": "19/07/17 12:13 AM",
          "commitName": "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/07/17 2:27 AM",
          "commitNameOld": "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
          "commitAuthorOld": "Jitendra Pandey",
          "daysBetweenCommits": 1.91,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,30 @@\n   public void init(Configuration conf)\n-      throws WasbAuthorizationException, IOException {\n+      throws IOException {\n     LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n     this.isKerberosSupportEnabled \u003d\n         conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n     this.isSpnegoTokenCacheEnabled \u003d\n         conf.getBoolean(Constants.AZURE_ENABLE_SPNEGO_TOKEN_CACHE, true);\n     this.commaSeparatedUrls \u003d\n         conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n     if (this.commaSeparatedUrls \u003d\u003d null\n         || this.commaSeparatedUrls.length \u003c\u003d 0) {\n       throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n           + \" in configuration.\");\n     }\n     this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n     if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false,\n           isSpnegoTokenCacheEnabled);\n     } else {\n       this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n     }\n+\n+    this.cache \u003d new CachingAuthorizer\u003c\u003e(\n+        conf.getTimeDuration(AUTHORIZATION_CACHEENTRY_EXPIRY_PERIOD, 5L, TimeUnit.MINUTES), \"AUTHORIZATION\"\n+    );\n+    this.cache.init(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(Configuration conf)\n      throws IOException {\n    LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n    this.isKerberosSupportEnabled \u003d\n        conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n    this.isSpnegoTokenCacheEnabled \u003d\n        conf.getBoolean(Constants.AZURE_ENABLE_SPNEGO_TOKEN_CACHE, true);\n    this.commaSeparatedUrls \u003d\n        conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n    if (this.commaSeparatedUrls \u003d\u003d null\n        || this.commaSeparatedUrls.length \u003c\u003d 0) {\n      throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n          + \" in configuration.\");\n    }\n    this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n    if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n      this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false,\n          isSpnegoTokenCacheEnabled);\n    } else {\n      this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n    }\n\n    this.cache \u003d new CachingAuthorizer\u003c\u003e(\n        conf.getTimeDuration(AUTHORIZATION_CACHEENTRY_EXPIRY_PERIOD, 5L, TimeUnit.MINUTES), \"AUTHORIZATION\"\n    );\n    this.cache.init(conf);\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java",
          "extendedDetails": {
            "oldValue": "[WasbAuthorizationException, IOException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14642. wasb: add support for caching Authorization and SASKeys. Contributed by Sivaguru Sankaridurg.\n",
          "commitDate": "19/07/17 12:13 AM",
          "commitName": "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/07/17 2:27 AM",
          "commitNameOld": "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
          "commitAuthorOld": "Jitendra Pandey",
          "daysBetweenCommits": 1.91,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,30 @@\n   public void init(Configuration conf)\n-      throws WasbAuthorizationException, IOException {\n+      throws IOException {\n     LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n     this.isKerberosSupportEnabled \u003d\n         conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n     this.isSpnegoTokenCacheEnabled \u003d\n         conf.getBoolean(Constants.AZURE_ENABLE_SPNEGO_TOKEN_CACHE, true);\n     this.commaSeparatedUrls \u003d\n         conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n     if (this.commaSeparatedUrls \u003d\u003d null\n         || this.commaSeparatedUrls.length \u003c\u003d 0) {\n       throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n           + \" in configuration.\");\n     }\n     this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n     if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false,\n           isSpnegoTokenCacheEnabled);\n     } else {\n       this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n     }\n+\n+    this.cache \u003d new CachingAuthorizer\u003c\u003e(\n+        conf.getTimeDuration(AUTHORIZATION_CACHEENTRY_EXPIRY_PERIOD, 5L, TimeUnit.MINUTES), \"AUTHORIZATION\"\n+    );\n+    this.cache.init(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(Configuration conf)\n      throws IOException {\n    LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n    this.isKerberosSupportEnabled \u003d\n        conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n    this.isSpnegoTokenCacheEnabled \u003d\n        conf.getBoolean(Constants.AZURE_ENABLE_SPNEGO_TOKEN_CACHE, true);\n    this.commaSeparatedUrls \u003d\n        conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n    if (this.commaSeparatedUrls \u003d\u003d null\n        || this.commaSeparatedUrls.length \u003c\u003d 0) {\n      throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n          + \" in configuration.\");\n    }\n    this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n    if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n      this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false,\n          isSpnegoTokenCacheEnabled);\n    } else {\n      this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n    }\n\n    this.cache \u003d new CachingAuthorizer\u003c\u003e(\n        conf.getTimeDuration(AUTHORIZATION_CACHEENTRY_EXPIRY_PERIOD, 5L, TimeUnit.MINUTES), \"AUTHORIZATION\"\n    );\n    this.cache.init(conf);\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14640. Azure: Support affinity for service running on localhost and reuse SPNEGO hadoop.auth cookie for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak.\n",
      "commitDate": "17/07/17 2:27 AM",
      "commitName": "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
      "commitAuthor": "Jitendra Pandey",
      "commitDateOld": "30/06/17 4:53 PM",
      "commitNameOld": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 16.4,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   public void init(Configuration conf)\n       throws WasbAuthorizationException, IOException {\n     LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n     this.isKerberosSupportEnabled \u003d\n         conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n+    this.isSpnegoTokenCacheEnabled \u003d\n+        conf.getBoolean(Constants.AZURE_ENABLE_SPNEGO_TOKEN_CACHE, true);\n     this.commaSeparatedUrls \u003d\n         conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n     if (this.commaSeparatedUrls \u003d\u003d null\n         || this.commaSeparatedUrls.length \u003c\u003d 0) {\n       throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n           + \" in configuration.\");\n     }\n     this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n         AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n     if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n-      this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false);\n+      this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false,\n+          isSpnegoTokenCacheEnabled);\n     } else {\n       this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf)\n      throws WasbAuthorizationException, IOException {\n    LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n    this.isKerberosSupportEnabled \u003d\n        conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n    this.isSpnegoTokenCacheEnabled \u003d\n        conf.getBoolean(Constants.AZURE_ENABLE_SPNEGO_TOKEN_CACHE, true);\n    this.commaSeparatedUrls \u003d\n        conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n    if (this.commaSeparatedUrls \u003d\u003d null\n        || this.commaSeparatedUrls.length \u003c\u003d 0) {\n      throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n          + \" in configuration.\");\n    }\n    this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n    if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n      this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false,\n          isSpnegoTokenCacheEnabled);\n    } else {\n      this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java",
      "extendedDetails": {}
    },
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14443. Azure: Support retry and client side failover for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak\n",
      "commitDate": "30/06/17 4:53 PM",
      "commitName": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "29/06/17 9:22 AM",
      "commitNameOld": "b08cc973964b4eb7e7a7445a440b19d3a0f3d4d5",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 1.31,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public void init(Configuration conf)\n       throws WasbAuthorizationException, IOException {\n     LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n-    setDelegationToken();\n-    remoteAuthorizerServiceUrl \u003d SecurityUtils\n-        .getRemoteAuthServiceUrls(conf);\n-\n-    if (remoteAuthorizerServiceUrl \u003d\u003d null\n-          || remoteAuthorizerServiceUrl.isEmpty()) {\n-      throw new WasbAuthorizationException(\n-          \"fs.azure.authorization.remote.service.url config not set\"\n-              + \" in configuration.\");\n+    this.isKerberosSupportEnabled \u003d\n+        conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n+    this.commaSeparatedUrls \u003d\n+        conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n+    if (this.commaSeparatedUrls \u003d\u003d null\n+        || this.commaSeparatedUrls.length \u003c\u003d 0) {\n+      throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n+          + \" in configuration.\");\n     }\n-\n-    this.remoteCallHelper \u003d new WasbRemoteCallHelper();\n-    this.isSecurityEnabled \u003d UserGroupInformation.isSecurityEnabled();\n-    this.isKerberosSupportEnabled \u003d conf\n-        .getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n+    this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n+        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n+        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n+        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n+    if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n+      this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false);\n+    } else {\n+      this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf)\n      throws WasbAuthorizationException, IOException {\n    LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n    this.isKerberosSupportEnabled \u003d\n        conf.getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n    this.commaSeparatedUrls \u003d\n        conf.getTrimmedStrings(KEY_REMOTE_AUTH_SERVICE_URLS);\n    if (this.commaSeparatedUrls \u003d\u003d null\n        || this.commaSeparatedUrls.length \u003c\u003d 0) {\n      throw new IOException(KEY_REMOTE_AUTH_SERVICE_URLS + \" config not set\"\n          + \" in configuration.\");\n    }\n    this.retryPolicy \u003d RetryUtils.getMultipleLinearRandomRetry(conf,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_ENABLED_KEY, true,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_SPEC,\n        AUTHORIZER_HTTP_CLIENT_RETRY_POLICY_SPEC_DEFAULT);\n    if (isKerberosSupportEnabled \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n      this.remoteCallHelper \u003d new SecureWasbRemoteCallHelper(retryPolicy, false);\n    } else {\n      this.remoteCallHelper \u003d new WasbRemoteCallHelper(retryPolicy);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java",
      "extendedDetails": {}
    },
    "8b5f2c372e70999f3ee0a0bd685a494e06bc3652": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14351. Azure: RemoteWasbAuthorizerImpl and RemoteSASKeyGeneratorImpl should not use Kerberos interactive user cache. Contributed by Santhosh G Nayak\n",
      "commitDate": "26/04/17 1:47 PM",
      "commitName": "8b5f2c372e70999f3ee0a0bd685a494e06bc3652",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "12/04/17 4:07 PM",
      "commitNameOld": "0cab57223e3f54be17a5f27cefdb6d1da1b073e5",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 13.9,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,19 @@\n   public void init(Configuration conf)\n       throws WasbAuthorizationException, IOException {\n     LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n-    Iterator\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokenIterator \u003d null;\n-    try {\n-          delegationToken \u003d SecurityUtils.getDelegationTokenFromCredentials();\n-    } catch (IOException e) {\n-      final String msg \u003d \"Error in fetching the WASB delegation token\";\n-      LOG.error(msg, e);\n-      throw new IOException(msg, e);\n-    }\n-\n+    setDelegationToken();\n     remoteAuthorizerServiceUrl \u003d SecurityUtils\n         .getRemoteAuthServiceUrls(conf);\n \n     if (remoteAuthorizerServiceUrl \u003d\u003d null\n           || remoteAuthorizerServiceUrl.isEmpty()) {\n       throw new WasbAuthorizationException(\n           \"fs.azure.authorization.remote.service.url config not set\"\n               + \" in configuration.\");\n     }\n \n     this.remoteCallHelper \u003d new WasbRemoteCallHelper();\n     this.isSecurityEnabled \u003d UserGroupInformation.isSecurityEnabled();\n     this.isKerberosSupportEnabled \u003d conf\n         .getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf)\n      throws WasbAuthorizationException, IOException {\n    LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n    setDelegationToken();\n    remoteAuthorizerServiceUrl \u003d SecurityUtils\n        .getRemoteAuthServiceUrls(conf);\n\n    if (remoteAuthorizerServiceUrl \u003d\u003d null\n          || remoteAuthorizerServiceUrl.isEmpty()) {\n      throw new WasbAuthorizationException(\n          \"fs.azure.authorization.remote.service.url config not set\"\n              + \" in configuration.\");\n    }\n\n    this.remoteCallHelper \u003d new WasbRemoteCallHelper();\n    this.isSecurityEnabled \u003d UserGroupInformation.isSecurityEnabled();\n    this.isKerberosSupportEnabled \u003d conf\n        .getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java",
      "extendedDetails": {}
    },
    "8e15e240597f821968e14893eabfea39815de207": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13945. Azure: Add Kerberos and Delegation token support to WASB client. Contributed by Santhosh G Nayak\n\nChange-Id: I39fb0a3b0491bf2160571366939a0502a0045429\n",
      "commitDate": "20/03/17 4:31 PM",
      "commitName": "8e15e240597f821968e14893eabfea39815de207",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "06/03/17 5:16 PM",
      "commitNameOld": "686823529be09bea2a6cecb3503ef722017475bc",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 13.93,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,27 @@\n   public void init(Configuration conf)\n       throws WasbAuthorizationException, IOException {\n+    LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n+    Iterator\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokenIterator \u003d null;\n+    try {\n+          delegationToken \u003d SecurityUtils.getDelegationTokenFromCredentials();\n+    } catch (IOException e) {\n+      final String msg \u003d \"Error in fetching the WASB delegation token\";\n+      LOG.error(msg, e);\n+      throw new IOException(msg, e);\n+    }\n \n-    remoteAuthorizerServiceUrl \u003d conf.get(KEY_REMOTE_AUTH_SERVICE_URL);\n+    remoteAuthorizerServiceUrl \u003d SecurityUtils\n+        .getRemoteAuthServiceUrls(conf);\n \n     if (remoteAuthorizerServiceUrl \u003d\u003d null\n           || remoteAuthorizerServiceUrl.isEmpty()) {\n       throw new WasbAuthorizationException(\n           \"fs.azure.authorization.remote.service.url config not set\"\n-          + \" in configuration.\");\n+              + \" in configuration.\");\n     }\n \n     this.remoteCallHelper \u003d new WasbRemoteCallHelper();\n+    this.isSecurityEnabled \u003d UserGroupInformation.isSecurityEnabled();\n+    this.isKerberosSupportEnabled \u003d conf\n+        .getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf)\n      throws WasbAuthorizationException, IOException {\n    LOG.debug(\"Initializing RemoteWasbAuthorizerImpl instance\");\n    Iterator\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokenIterator \u003d null;\n    try {\n          delegationToken \u003d SecurityUtils.getDelegationTokenFromCredentials();\n    } catch (IOException e) {\n      final String msg \u003d \"Error in fetching the WASB delegation token\";\n      LOG.error(msg, e);\n      throw new IOException(msg, e);\n    }\n\n    remoteAuthorizerServiceUrl \u003d SecurityUtils\n        .getRemoteAuthServiceUrls(conf);\n\n    if (remoteAuthorizerServiceUrl \u003d\u003d null\n          || remoteAuthorizerServiceUrl.isEmpty()) {\n      throw new WasbAuthorizationException(\n          \"fs.azure.authorization.remote.service.url config not set\"\n              + \" in configuration.\");\n    }\n\n    this.remoteCallHelper \u003d new WasbRemoteCallHelper();\n    this.isSecurityEnabled \u003d UserGroupInformation.isSecurityEnabled();\n    this.isKerberosSupportEnabled \u003d conf\n        .getBoolean(Constants.AZURE_KERBEROS_SUPPORT_PROPERTY_NAME, false);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java",
      "extendedDetails": {}
    },
    "686823529be09bea2a6cecb3503ef722017475bc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth\n",
      "commitDate": "06/03/17 5:16 PM",
      "commitName": "686823529be09bea2a6cecb3503ef722017475bc",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,14 @@\n+  public void init(Configuration conf)\n+      throws WasbAuthorizationException, IOException {\n+\n+    remoteAuthorizerServiceUrl \u003d conf.get(KEY_REMOTE_AUTH_SERVICE_URL);\n+\n+    if (remoteAuthorizerServiceUrl \u003d\u003d null\n+          || remoteAuthorizerServiceUrl.isEmpty()) {\n+      throw new WasbAuthorizationException(\n+          \"fs.azure.authorization.remote.service.url config not set\"\n+          + \" in configuration.\");\n+    }\n+\n+    this.remoteCallHelper \u003d new WasbRemoteCallHelper();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf)\n      throws WasbAuthorizationException, IOException {\n\n    remoteAuthorizerServiceUrl \u003d conf.get(KEY_REMOTE_AUTH_SERVICE_URL);\n\n    if (remoteAuthorizerServiceUrl \u003d\u003d null\n          || remoteAuthorizerServiceUrl.isEmpty()) {\n      throw new WasbAuthorizationException(\n          \"fs.azure.authorization.remote.service.url config not set\"\n          + \" in configuration.\");\n    }\n\n    this.remoteCallHelper \u003d new WasbRemoteCallHelper();\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteWasbAuthorizerImpl.java"
    }
  }
}