{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataStorage.java",
  "functionName": "prepareVolume",
  "functionId": "prepareVolume___datanode-DataNode__location-StorageLocation__nsInfos-List__NamespaceInfo__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
  "functionStartLine": 324,
  "functionEndLine": 346,
  "numCommitsSeen": 130,
  "timeTaken": 4499,
  "changeHistory": [
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
    "f209e93566b159c22054dcb276e45f23a2b7b7d1",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "66289a3bf403f307844ea0b6ceed35b603d12c0b",
    "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671"
  ],
  "changeHistoryShort": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": "Ybodychange",
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": "Ybodychange",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ymultichange(Yparameterchange,Ybodychange)",
    "66289a3bf403f307844ea0b6ceed35b603d12c0b": "Ybodychange",
    "662e17b46a0f41ade6a304e12925b70b5d09fc2f": "Ybodychange",
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12997. Move logging to slf4j in BlockPoolSliceStorage and Storage. Contributed by Ajay Kumar.\n",
      "commitDate": "01/02/18 10:45 AM",
      "commitName": "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 47.7,
      "commitsBetweenForRepo": 240,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public VolumeBuilder prepareVolume(DataNode datanode,\n       StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n           throws IOException {\n     if (containsStorageDir(location)) {\n-      final String errorMessage \u003d \"Storage directory is in use\";\n-      LOG.warn(errorMessage + \".\");\n+      final String errorMessage \u003d \"Storage directory is in use.\";\n+      LOG.warn(errorMessage);\n       throw new IOException(errorMessage);\n     }\n \n     StorageDirectory sd \u003d loadStorageDirectory(\n         datanode, nsInfos.get(0), location, StartupOption.HOTSWAP, null);\n     VolumeBuilder builder \u003d\n         new VolumeBuilder(this, sd);\n     for (NamespaceInfo nsInfo : nsInfos) {\n       location.makeBlockPoolDir(nsInfo.getBlockPoolID(), null);\n \n       final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n       final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n           nsInfo, location, StartupOption.HOTSWAP, null, datanode.getConf());\n       builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n     }\n     return builder;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public VolumeBuilder prepareVolume(DataNode datanode,\n      StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n          throws IOException {\n    if (containsStorageDir(location)) {\n      final String errorMessage \u003d \"Storage directory is in use.\";\n      LOG.warn(errorMessage);\n      throw new IOException(errorMessage);\n    }\n\n    StorageDirectory sd \u003d loadStorageDirectory(\n        datanode, nsInfos.get(0), location, StartupOption.HOTSWAP, null);\n    VolumeBuilder builder \u003d\n        new VolumeBuilder(this, sd);\n    for (NamespaceInfo nsInfo : nsInfos) {\n      location.makeBlockPoolDir(nsInfo.getBlockPoolID(), null);\n\n      final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n      final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n          nsInfo, location, StartupOption.HOTSWAP, null, datanode.getConf());\n      builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n    }\n    return builder;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {}
    },
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
      "commitDate": "26/10/16 10:32 AM",
      "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "10/10/16 3:30 PM",
      "commitNameOld": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 15.79,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,23 @@\n   public VolumeBuilder prepareVolume(DataNode datanode,\n       StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n           throws IOException {\n-    File volume \u003d location.getFile();\n-    if (containsStorageDir(volume)) {\n+    if (containsStorageDir(location)) {\n       final String errorMessage \u003d \"Storage directory is in use\";\n       LOG.warn(errorMessage + \".\");\n       throw new IOException(errorMessage);\n     }\n \n     StorageDirectory sd \u003d loadStorageDirectory(\n-        datanode, nsInfos.get(0), volume, location,\n-        StartupOption.HOTSWAP, null);\n+        datanode, nsInfos.get(0), location, StartupOption.HOTSWAP, null);\n     VolumeBuilder builder \u003d\n         new VolumeBuilder(this, sd);\n     for (NamespaceInfo nsInfo : nsInfos) {\n-      List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n-      bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n-          nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n-      makeBlockPoolDataDir(bpDataDirs, null);\n+      location.makeBlockPoolDir(nsInfo.getBlockPoolID(), null);\n \n       final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n       final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n-          nsInfo, bpDataDirs, location, StartupOption.HOTSWAP,\n-          null, datanode.getConf());\n+          nsInfo, location, StartupOption.HOTSWAP, null, datanode.getConf());\n       builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n     }\n     return builder;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public VolumeBuilder prepareVolume(DataNode datanode,\n      StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n          throws IOException {\n    if (containsStorageDir(location)) {\n      final String errorMessage \u003d \"Storage directory is in use\";\n      LOG.warn(errorMessage + \".\");\n      throw new IOException(errorMessage);\n    }\n\n    StorageDirectory sd \u003d loadStorageDirectory(\n        datanode, nsInfos.get(0), location, StartupOption.HOTSWAP, null);\n    VolumeBuilder builder \u003d\n        new VolumeBuilder(this, sd);\n    for (NamespaceInfo nsInfo : nsInfos) {\n      location.makeBlockPoolDir(nsInfo.getBlockPoolID(), null);\n\n      final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n      final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n          nsInfo, location, StartupOption.HOTSWAP, null, datanode.getConf());\n      builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n    }\n    return builder;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {}
    },
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "10/10/16 3:30 PM",
          "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/09/16 12:54 PM",
          "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 27.11,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,29 @@\n-  public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n-      List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n+  public VolumeBuilder prepareVolume(DataNode datanode,\n+      StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n+          throws IOException {\n+    File volume \u003d location.getFile();\n     if (containsStorageDir(volume)) {\n       final String errorMessage \u003d \"Storage directory is in use\";\n       LOG.warn(errorMessage + \".\");\n       throw new IOException(errorMessage);\n     }\n \n     StorageDirectory sd \u003d loadStorageDirectory(\n-        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP, null);\n+        datanode, nsInfos.get(0), volume, location,\n+        StartupOption.HOTSWAP, null);\n     VolumeBuilder builder \u003d\n         new VolumeBuilder(this, sd);\n     for (NamespaceInfo nsInfo : nsInfos) {\n       List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n       bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n           nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n       makeBlockPoolDataDir(bpDataDirs, null);\n \n       final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n       final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n-          nsInfo, bpDataDirs, StartupOption.HOTSWAP, null, datanode.getConf());\n+          nsInfo, bpDataDirs, location, StartupOption.HOTSWAP,\n+          null, datanode.getConf());\n       builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n     }\n     return builder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public VolumeBuilder prepareVolume(DataNode datanode,\n      StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n          throws IOException {\n    File volume \u003d location.getFile();\n    if (containsStorageDir(volume)) {\n      final String errorMessage \u003d \"Storage directory is in use\";\n      LOG.warn(errorMessage + \".\");\n      throw new IOException(errorMessage);\n    }\n\n    StorageDirectory sd \u003d loadStorageDirectory(\n        datanode, nsInfos.get(0), volume, location,\n        StartupOption.HOTSWAP, null);\n    VolumeBuilder builder \u003d\n        new VolumeBuilder(this, sd);\n    for (NamespaceInfo nsInfo : nsInfos) {\n      List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n      bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n          nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n      makeBlockPoolDataDir(bpDataDirs, null);\n\n      final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n      final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n          nsInfo, bpDataDirs, location, StartupOption.HOTSWAP,\n          null, datanode.getConf());\n      builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n    }\n    return builder;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
          "extendedDetails": {
            "oldValue": "[datanode-DataNode, volume-File, nsInfos-List\u003cNamespaceInfo\u003e]",
            "newValue": "[datanode-DataNode, location-StorageLocation, nsInfos-List\u003cNamespaceInfo\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "10/10/16 3:30 PM",
          "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/09/16 12:54 PM",
          "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 27.11,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,29 @@\n-  public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n-      List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n+  public VolumeBuilder prepareVolume(DataNode datanode,\n+      StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n+          throws IOException {\n+    File volume \u003d location.getFile();\n     if (containsStorageDir(volume)) {\n       final String errorMessage \u003d \"Storage directory is in use\";\n       LOG.warn(errorMessage + \".\");\n       throw new IOException(errorMessage);\n     }\n \n     StorageDirectory sd \u003d loadStorageDirectory(\n-        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP, null);\n+        datanode, nsInfos.get(0), volume, location,\n+        StartupOption.HOTSWAP, null);\n     VolumeBuilder builder \u003d\n         new VolumeBuilder(this, sd);\n     for (NamespaceInfo nsInfo : nsInfos) {\n       List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n       bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n           nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n       makeBlockPoolDataDir(bpDataDirs, null);\n \n       final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n       final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n-          nsInfo, bpDataDirs, StartupOption.HOTSWAP, null, datanode.getConf());\n+          nsInfo, bpDataDirs, location, StartupOption.HOTSWAP,\n+          null, datanode.getConf());\n       builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n     }\n     return builder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public VolumeBuilder prepareVolume(DataNode datanode,\n      StorageLocation location, List\u003cNamespaceInfo\u003e nsInfos)\n          throws IOException {\n    File volume \u003d location.getFile();\n    if (containsStorageDir(volume)) {\n      final String errorMessage \u003d \"Storage directory is in use\";\n      LOG.warn(errorMessage + \".\");\n      throw new IOException(errorMessage);\n    }\n\n    StorageDirectory sd \u003d loadStorageDirectory(\n        datanode, nsInfos.get(0), volume, location,\n        StartupOption.HOTSWAP, null);\n    VolumeBuilder builder \u003d\n        new VolumeBuilder(this, sd);\n    for (NamespaceInfo nsInfo : nsInfos) {\n      List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n      bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n          nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n      makeBlockPoolDataDir(bpDataDirs, null);\n\n      final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n      final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n          nsInfo, bpDataDirs, location, StartupOption.HOTSWAP,\n          null, datanode.getConf());\n      builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n    }\n    return builder;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "66289a3bf403f307844ea0b6ceed35b603d12c0b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8578. On upgrade, Datanode should process all storage/data dirs in parallel.  Contributed by vinayakumarb and szetszwo\n",
      "commitDate": "22/02/16 3:01 PM",
      "commitName": "66289a3bf403f307844ea0b6ceed35b603d12c0b",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "04/02/16 11:19 AM",
      "commitNameOld": "496f33de0ce80dc455cfd51f19612da6f9b914f9",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 18.15,
      "commitsBetweenForRepo": 115,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n       List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n     if (containsStorageDir(volume)) {\n       final String errorMessage \u003d \"Storage directory is in use\";\n       LOG.warn(errorMessage + \".\");\n       throw new IOException(errorMessage);\n     }\n \n     StorageDirectory sd \u003d loadStorageDirectory(\n-        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP);\n+        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP, null);\n     VolumeBuilder builder \u003d\n         new VolumeBuilder(this, sd);\n     for (NamespaceInfo nsInfo : nsInfos) {\n       List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n       bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n           nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n       makeBlockPoolDataDir(bpDataDirs, null);\n \n       final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n       final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n-          nsInfo, bpDataDirs, StartupOption.HOTSWAP, datanode.getConf());\n+          nsInfo, bpDataDirs, StartupOption.HOTSWAP, null, datanode.getConf());\n       builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n     }\n     return builder;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n      List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n    if (containsStorageDir(volume)) {\n      final String errorMessage \u003d \"Storage directory is in use\";\n      LOG.warn(errorMessage + \".\");\n      throw new IOException(errorMessage);\n    }\n\n    StorageDirectory sd \u003d loadStorageDirectory(\n        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP, null);\n    VolumeBuilder builder \u003d\n        new VolumeBuilder(this, sd);\n    for (NamespaceInfo nsInfo : nsInfos) {\n      List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n      bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n          nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n      makeBlockPoolDataDir(bpDataDirs, null);\n\n      final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n      final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n          nsInfo, bpDataDirs, StartupOption.HOTSWAP, null, datanode.getConf());\n      builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n    }\n    return builder;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {}
    },
    "662e17b46a0f41ade6a304e12925b70b5d09fc2f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9654. Code refactoring for HDFS-8578.\n",
      "commitDate": "27/01/16 6:58 PM",
      "commitName": "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "05/11/15 10:00 AM",
      "commitNameOld": "efc73d7896e65a8a03d226ac21309257a7dc126c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 83.37,
      "commitsBetweenForRepo": 510,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,25 @@\n   public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n       List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n     if (containsStorageDir(volume)) {\n       final String errorMessage \u003d \"Storage directory is in use\";\n       LOG.warn(errorMessage + \".\");\n       throw new IOException(errorMessage);\n     }\n \n     StorageDirectory sd \u003d loadStorageDirectory(\n         datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP);\n     VolumeBuilder builder \u003d\n         new VolumeBuilder(this, sd);\n     for (NamespaceInfo nsInfo : nsInfos) {\n       List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n       bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n           nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n       makeBlockPoolDataDir(bpDataDirs, null);\n \n-      BlockPoolSliceStorage bpStorage;\n-      final String bpid \u003d nsInfo.getBlockPoolID();\n-      synchronized (this) {\n-        bpStorage \u003d this.bpStorageMap.get(bpid);\n-        if (bpStorage \u003d\u003d null) {\n-          bpStorage \u003d new BlockPoolSliceStorage(\n-              nsInfo.getNamespaceID(), bpid, nsInfo.getCTime(),\n-              nsInfo.getClusterID());\n-          addBlockPoolStorage(bpid, bpStorage);\n-        }\n-      }\n-      builder.addBpStorageDirectories(\n-          bpid, bpStorage.loadBpStorageDirectories(\n-              datanode, nsInfo, bpDataDirs, StartupOption.HOTSWAP));\n+      final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n+      final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n+          nsInfo, bpDataDirs, StartupOption.HOTSWAP, datanode.getConf());\n+      builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n     }\n     return builder;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n      List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n    if (containsStorageDir(volume)) {\n      final String errorMessage \u003d \"Storage directory is in use\";\n      LOG.warn(errorMessage + \".\");\n      throw new IOException(errorMessage);\n    }\n\n    StorageDirectory sd \u003d loadStorageDirectory(\n        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP);\n    VolumeBuilder builder \u003d\n        new VolumeBuilder(this, sd);\n    for (NamespaceInfo nsInfo : nsInfos) {\n      List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n      bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n          nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n      makeBlockPoolDataDir(bpDataDirs, null);\n\n      final BlockPoolSliceStorage bpStorage \u003d getBlockPoolSliceStorage(nsInfo);\n      final List\u003cStorageDirectory\u003e dirs \u003d bpStorage.loadBpStorageDirectories(\n          nsInfo, bpDataDirs, StartupOption.HOTSWAP, datanode.getConf());\n      builder.addBpStorageDirectories(nsInfo.getBlockPoolID(), dirs);\n    }\n    return builder;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {}
    },
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7035. Make adding a new data directory to the DataNode an atomic operation and improve error handling (Lei Xu via Colin P. McCabe)\n",
      "commitDate": "30/10/14 5:31 PM",
      "commitName": "a9331fe9b071fdcdae0c6c747d7b6b306142e671",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,35 @@\n+  public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n+      List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n+    if (containsStorageDir(volume)) {\n+      final String errorMessage \u003d \"Storage directory is in use\";\n+      LOG.warn(errorMessage + \".\");\n+      throw new IOException(errorMessage);\n+    }\n+\n+    StorageDirectory sd \u003d loadStorageDirectory(\n+        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP);\n+    VolumeBuilder builder \u003d\n+        new VolumeBuilder(this, sd);\n+    for (NamespaceInfo nsInfo : nsInfos) {\n+      List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n+      bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n+          nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n+      makeBlockPoolDataDir(bpDataDirs, null);\n+\n+      BlockPoolSliceStorage bpStorage;\n+      final String bpid \u003d nsInfo.getBlockPoolID();\n+      synchronized (this) {\n+        bpStorage \u003d this.bpStorageMap.get(bpid);\n+        if (bpStorage \u003d\u003d null) {\n+          bpStorage \u003d new BlockPoolSliceStorage(\n+              nsInfo.getNamespaceID(), bpid, nsInfo.getCTime(),\n+              nsInfo.getClusterID());\n+          addBlockPoolStorage(bpid, bpStorage);\n+        }\n+      }\n+      builder.addBpStorageDirectories(\n+          bpid, bpStorage.loadBpStorageDirectories(\n+              datanode, nsInfo, bpDataDirs, StartupOption.HOTSWAP));\n+    }\n+    return builder;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public VolumeBuilder prepareVolume(DataNode datanode, File volume,\n      List\u003cNamespaceInfo\u003e nsInfos) throws IOException {\n    if (containsStorageDir(volume)) {\n      final String errorMessage \u003d \"Storage directory is in use\";\n      LOG.warn(errorMessage + \".\");\n      throw new IOException(errorMessage);\n    }\n\n    StorageDirectory sd \u003d loadStorageDirectory(\n        datanode, nsInfos.get(0), volume, StartupOption.HOTSWAP);\n    VolumeBuilder builder \u003d\n        new VolumeBuilder(this, sd);\n    for (NamespaceInfo nsInfo : nsInfos) {\n      List\u003cFile\u003e bpDataDirs \u003d Lists.newArrayList();\n      bpDataDirs.add(BlockPoolSliceStorage.getBpRoot(\n          nsInfo.getBlockPoolID(), new File(volume, STORAGE_DIR_CURRENT)));\n      makeBlockPoolDataDir(bpDataDirs, null);\n\n      BlockPoolSliceStorage bpStorage;\n      final String bpid \u003d nsInfo.getBlockPoolID();\n      synchronized (this) {\n        bpStorage \u003d this.bpStorageMap.get(bpid);\n        if (bpStorage \u003d\u003d null) {\n          bpStorage \u003d new BlockPoolSliceStorage(\n              nsInfo.getNamespaceID(), bpid, nsInfo.getCTime(),\n              nsInfo.getClusterID());\n          addBlockPoolStorage(bpid, bpStorage);\n        }\n      }\n      builder.addBpStorageDirectories(\n          bpid, bpStorage.loadBpStorageDirectories(\n              datanode, nsInfo, bpDataDirs, StartupOption.HOTSWAP));\n    }\n    return builder;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java"
    }
  }
}