{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtil.java",
  "functionName": "getNameServiceIdFromAddress",
  "functionId": "getNameServiceIdFromAddress___conf-Configuration(modifiers-final)__address-InetSocketAddress(modifiers-final)__keys-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
  "functionStartLine": 927,
  "functionEndLine": 932,
  "numCommitsSeen": 157,
  "timeTaken": 6608,
  "changeHistory": [
    "f22677ef8e49e0193ad97d3aa9cf295eb6225547",
    "9146ad23f3f1af7c5547fba08e2a867cee49e015",
    "7ca7832158333e4ddcd6914596ff7d781c9283fe",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "f22677ef8e49e0193ad97d3aa9cf295eb6225547": "Ybodychange",
    "9146ad23f3f1af7c5547fba08e2a867cee49e015": "Ybodychange",
    "7ca7832158333e4ddcd6914596ff7d781c9283fe": "Ymultichange(Ybodychange,Yparametermetachange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f22677ef8e49e0193ad97d3aa9cf295eb6225547": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3036. Remove unused method DFSUtil#isDefaultNamenodeAddress. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295961 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/03/12 2:52 PM",
      "commitName": "f22677ef8e49e0193ad97d3aa9cf295eb6225547",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/02/12 9:03 AM",
      "commitNameOld": "62c7e2edfc0cd5baeda71d7c3737398302aea795",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 6.24,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   public static String getNameServiceIdFromAddress(Configuration conf, \n       InetSocketAddress address, String... keys) {\n     Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n \n     // Configuration with a single namenode and no nameserviceId\n     if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n-      // client should try {@link isDefaultNamenodeAddress} instead\n       return null;\n     }\n     // Get the candidateAddresses for all the configured nameServiceIds\n     for (String nameserviceId : nameserviceIds) {\n       for (String key : keys) {\n         String candidateAddress \u003d conf.get(\n             getNameServiceIdKey(key, nameserviceId));\n         if (candidateAddress !\u003d null\n             \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n           return nameserviceId;\n       }\n     }\n     // didn\u0027t find a match\n-    // client should try {@link isDefaultNamenodeAddress} instead\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getNameServiceIdFromAddress(Configuration conf, \n      InetSocketAddress address, String... keys) {\n    Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n\n    // Configuration with a single namenode and no nameserviceId\n    if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n      return null;\n    }\n    // Get the candidateAddresses for all the configured nameServiceIds\n    for (String nameserviceId : nameserviceIds) {\n      for (String key : keys) {\n        String candidateAddress \u003d conf.get(\n            getNameServiceIdKey(key, nameserviceId));\n        if (candidateAddress !\u003d null\n            \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n          return nameserviceId;\n      }\n    }\n    // didn\u0027t find a match\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "9146ad23f3f1af7c5547fba08e2a867cee49e015": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2582. Scope dfs.ha.namenodes config by nameservice. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1207738 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/11 6:27 PM",
      "commitName": "9146ad23f3f1af7c5547fba08e2a867cee49e015",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "21/11/11 7:18 PM",
      "commitNameOld": "6a0671977b0d51f143df6171f3621532c04eef04",
      "commitAuthorOld": "",
      "daysBetweenCommits": 6.96,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,6 @@\n   public static String getNameServiceIdFromAddress(final Configuration conf, \n       final InetSocketAddress address, String... keys) {\n     // Configuration with a single namenode and no nameserviceId\n-    if (!isFederationEnabled(conf)) {\n-      return null;\n-    }    \n     String[] ids \u003d getSuffixIDs(conf, address, keys);\n-    return (ids !\u003d null \u0026\u0026 ids.length \u003e 0) ? ids[0] : null;\n+    return (ids !\u003d null) ? ids[0] : null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getNameServiceIdFromAddress(final Configuration conf, \n      final InetSocketAddress address, String... keys) {\n    // Configuration with a single namenode and no nameserviceId\n    String[] ids \u003d getSuffixIDs(conf, address, keys);\n    return (ids !\u003d null) ? ids[0] : null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "7ca7832158333e4ddcd6914596ff7d781c9283fe": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-2231. Configuration changes for HA namenode. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1182626 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/11 5:09 PM",
      "commitName": "7ca7832158333e4ddcd6914596ff7d781c9283fe",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2231. Configuration changes for HA namenode. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1182626 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/10/11 5:09 PM",
          "commitName": "7ca7832158333e4ddcd6914596ff7d781c9283fe",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "06/10/11 4:26 PM",
          "commitNameOld": "8b4f497af85b49519da2e05e8269db6c4e9d621f",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 6.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,9 @@\n-  public static String getNameServiceIdFromAddress(Configuration conf, \n-      InetSocketAddress address, String... keys) {\n-    Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n-\n+  public static String getNameServiceIdFromAddress(final Configuration conf, \n+      final InetSocketAddress address, String... keys) {\n     // Configuration with a single namenode and no nameserviceId\n-    if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n-      // client should try {@link isDefaultNamenodeAddress} instead\n+    if (!isFederationEnabled(conf)) {\n       return null;\n-    }\n-    // Get the candidateAddresses for all the configured nameServiceIds\n-    for (String nameserviceId : nameserviceIds) {\n-      for (String key : keys) {\n-        String candidateAddress \u003d conf.get(\n-            getNameServiceIdKey(key, nameserviceId));\n-        if (candidateAddress !\u003d null\n-            \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n-          return nameserviceId;\n-      }\n-    }\n-    // didn\u0027t find a match\n-    // client should try {@link isDefaultNamenodeAddress} instead\n-    return null;\n+    }    \n+    String[] ids \u003d getSuffixIDs(conf, address, keys);\n+    return (ids !\u003d null \u0026\u0026 ids.length \u003e 0) ? ids[0] : null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getNameServiceIdFromAddress(final Configuration conf, \n      final InetSocketAddress address, String... keys) {\n    // Configuration with a single namenode and no nameserviceId\n    if (!isFederationEnabled(conf)) {\n      return null;\n    }    \n    String[] ids \u003d getSuffixIDs(conf, address, keys);\n    return (ids !\u003d null \u0026\u0026 ids.length \u003e 0) ? ids[0] : null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-2231. Configuration changes for HA namenode. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1182626 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/10/11 5:09 PM",
          "commitName": "7ca7832158333e4ddcd6914596ff7d781c9283fe",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "06/10/11 4:26 PM",
          "commitNameOld": "8b4f497af85b49519da2e05e8269db6c4e9d621f",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 6.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,9 @@\n-  public static String getNameServiceIdFromAddress(Configuration conf, \n-      InetSocketAddress address, String... keys) {\n-    Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n-\n+  public static String getNameServiceIdFromAddress(final Configuration conf, \n+      final InetSocketAddress address, String... keys) {\n     // Configuration with a single namenode and no nameserviceId\n-    if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n-      // client should try {@link isDefaultNamenodeAddress} instead\n+    if (!isFederationEnabled(conf)) {\n       return null;\n-    }\n-    // Get the candidateAddresses for all the configured nameServiceIds\n-    for (String nameserviceId : nameserviceIds) {\n-      for (String key : keys) {\n-        String candidateAddress \u003d conf.get(\n-            getNameServiceIdKey(key, nameserviceId));\n-        if (candidateAddress !\u003d null\n-            \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n-          return nameserviceId;\n-      }\n-    }\n-    // didn\u0027t find a match\n-    // client should try {@link isDefaultNamenodeAddress} instead\n-    return null;\n+    }    \n+    String[] ids \u003d getSuffixIDs(conf, address, keys);\n+    return (ids !\u003d null \u0026\u0026 ids.length \u003e 0) ? ids[0] : null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getNameServiceIdFromAddress(final Configuration conf, \n      final InetSocketAddress address, String... keys) {\n    // Configuration with a single namenode and no nameserviceId\n    if (!isFederationEnabled(conf)) {\n      return null;\n    }    \n    String[] ids \u003d getSuffixIDs(conf, address, keys);\n    return (ids !\u003d null \u0026\u0026 ids.length \u003e 0) ? ids[0] : null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, address-InetSocketAddress, keys-String]",
            "newValue": "[conf-Configuration(modifiers-final), address-InetSocketAddress(modifiers-final), keys-String]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String getNameServiceIdFromAddress(Configuration conf, \n      InetSocketAddress address, String... keys) {\n    Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n\n    // Configuration with a single namenode and no nameserviceId\n    if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n      // client should try {@link isDefaultNamenodeAddress} instead\n      return null;\n    }\n    // Get the candidateAddresses for all the configured nameServiceIds\n    for (String nameserviceId : nameserviceIds) {\n      for (String key : keys) {\n        String candidateAddress \u003d conf.get(\n            getNameServiceIdKey(key, nameserviceId));\n        if (candidateAddress !\u003d null\n            \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n          return nameserviceId;\n      }\n    }\n    // didn\u0027t find a match\n    // client should try {@link isDefaultNamenodeAddress} instead\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String getNameServiceIdFromAddress(Configuration conf, \n      InetSocketAddress address, String... keys) {\n    Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n\n    // Configuration with a single namenode and no nameserviceId\n    if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n      // client should try {@link isDefaultNamenodeAddress} instead\n      return null;\n    }\n    // Get the candidateAddresses for all the configured nameServiceIds\n    for (String nameserviceId : nameserviceIds) {\n      for (String key : keys) {\n        String candidateAddress \u003d conf.get(\n            getNameServiceIdKey(key, nameserviceId));\n        if (candidateAddress !\u003d null\n            \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n          return nameserviceId;\n      }\n    }\n    // didn\u0027t find a match\n    // client should try {@link isDefaultNamenodeAddress} instead\n    return null;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSUtil.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,23 @@\n+  public static String getNameServiceIdFromAddress(Configuration conf, \n+      InetSocketAddress address, String... keys) {\n+    Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n+\n+    // Configuration with a single namenode and no nameserviceId\n+    if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n+      // client should try {@link isDefaultNamenodeAddress} instead\n+      return null;\n+    }\n+    // Get the candidateAddresses for all the configured nameServiceIds\n+    for (String nameserviceId : nameserviceIds) {\n+      for (String key : keys) {\n+        String candidateAddress \u003d conf.get(\n+            getNameServiceIdKey(key, nameserviceId));\n+        if (candidateAddress !\u003d null\n+            \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n+          return nameserviceId;\n+      }\n+    }\n+    // didn\u0027t find a match\n+    // client should try {@link isDefaultNamenodeAddress} instead\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getNameServiceIdFromAddress(Configuration conf, \n      InetSocketAddress address, String... keys) {\n    Collection\u003cString\u003e nameserviceIds \u003d getNameServiceIds(conf);\n\n    // Configuration with a single namenode and no nameserviceId\n    if (nameserviceIds \u003d\u003d null || nameserviceIds.isEmpty()) {\n      // client should try {@link isDefaultNamenodeAddress} instead\n      return null;\n    }\n    // Get the candidateAddresses for all the configured nameServiceIds\n    for (String nameserviceId : nameserviceIds) {\n      for (String key : keys) {\n        String candidateAddress \u003d conf.get(\n            getNameServiceIdKey(key, nameserviceId));\n        if (candidateAddress !\u003d null\n            \u0026\u0026 address.equals(NetUtils.createSocketAddr(candidateAddress)))\n          return nameserviceId;\n      }\n    }\n    // didn\u0027t find a match\n    // client should try {@link isDefaultNamenodeAddress} instead\n    return null;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSUtil.java"
    }
  }
}