{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "getAccountFromAuthority",
  "functionId": "getAccountFromAuthority___uri-URI",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 604,
  "functionEndLine": 644,
  "numCommitsSeen": 53,
  "timeTaken": 2194,
  "changeHistory": [
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,42 @@\n+  private String getAccountFromAuthority(URI uri) throws URISyntaxException {\n+\n+    // Check to make sure that the authority is valid for the URI.\n+    //\n+    String authority \u003d uri.getRawAuthority();\n+    if (null \u003d\u003d authority) {\n+      // Badly formed or illegal URI.\n+      //\n+      throw new URISyntaxException(uri.toString(),\n+          \"Expected URI with a valid authority\");\n+    }\n+\n+    // Check if authority container the delimiter separating the account name\n+    // from the\n+    // the container.\n+    //\n+    if (!authority.contains(WASB_AUTHORITY_DELIMITER)) {\n+      return authority;\n+    }\n+\n+    // Split off the container name and the authority.\n+    //\n+    String[] authorityParts \u003d authority.split(WASB_AUTHORITY_DELIMITER, 2);\n+\n+    // Because the string contains an \u0027@\u0027 delimiter, a container must be\n+    // specified.\n+    //\n+    if (authorityParts.length \u003c 2 || \"\".equals(authorityParts[0])) {\n+      // Badly formed WASB authority since there is no container.\n+      //\n+      final String errMsg \u003d String\n+          .format(\n+              \"URI \u0027%s\u0027 has a malformed WASB authority, expected container name. \"\n+                  + \"Authority takes the form wasb://[\u003ccontainer name\u003e@]\u003caccount name\u003e\",\n+              uri.toString());\n+      throw new IllegalArgumentException(errMsg);\n+    }\n+\n+    // Return with the account name. It is possible that this name is NULL.\n+    //\n+    return authorityParts[1];\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAccountFromAuthority(URI uri) throws URISyntaxException {\n\n    // Check to make sure that the authority is valid for the URI.\n    //\n    String authority \u003d uri.getRawAuthority();\n    if (null \u003d\u003d authority) {\n      // Badly formed or illegal URI.\n      //\n      throw new URISyntaxException(uri.toString(),\n          \"Expected URI with a valid authority\");\n    }\n\n    // Check if authority container the delimiter separating the account name\n    // from the\n    // the container.\n    //\n    if (!authority.contains(WASB_AUTHORITY_DELIMITER)) {\n      return authority;\n    }\n\n    // Split off the container name and the authority.\n    //\n    String[] authorityParts \u003d authority.split(WASB_AUTHORITY_DELIMITER, 2);\n\n    // Because the string contains an \u0027@\u0027 delimiter, a container must be\n    // specified.\n    //\n    if (authorityParts.length \u003c 2 || \"\".equals(authorityParts[0])) {\n      // Badly formed WASB authority since there is no container.\n      //\n      final String errMsg \u003d String\n          .format(\n              \"URI \u0027%s\u0027 has a malformed WASB authority, expected container name. \"\n                  + \"Authority takes the form wasb://[\u003ccontainer name\u003e@]\u003caccount name\u003e\",\n              uri.toString());\n      throw new IllegalArgumentException(errMsg);\n    }\n\n    // Return with the account name. It is possible that this name is NULL.\n    //\n    return authorityParts[1];\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}