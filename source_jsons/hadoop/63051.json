{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationSubmissionContext.java",
  "functionName": "newInstance",
  "functionId": "newInstance___applicationId-ApplicationId__applicationName-String__queue-String__priority-Priority__amContainer-ContainerLaunchContext__isUnmanagedAM-boolean__cancelTokensWhenComplete-boolean__maxAppAttempts-int__resource-Resource__applicationType-String__keepContainers-boolean__appLabelExpression-String__amContainerLabelExpression-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationSubmissionContext.java",
  "functionStartLine": 77,
  "functionEndLine": 107,
  "numCommitsSeen": 28,
  "timeTaken": 1266,
  "changeHistory": [
    "9bae6720cb8432efd78c909dc624c00e367cedf5",
    "e532ed8faa8db4b008a5b8d3f82b48a1b314fa6c",
    "180afa2f86f9854c536c3d4ff7476880e41ac48d"
  ],
  "changeHistoryShort": {
    "9bae6720cb8432efd78c909dc624c00e367cedf5": "Ybodychange",
    "e532ed8faa8db4b008a5b8d3f82b48a1b314fa6c": "Ybodychange",
    "180afa2f86f9854c536c3d4ff7476880e41ac48d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9bae6720cb8432efd78c909dc624c00e367cedf5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6050. AMs can\u0027t be scheduled on racks or nodes (rkanter)\n",
      "commitDate": "27/03/17 5:23 PM",
      "commitName": "9bae6720cb8432efd78c909dc624c00e367cedf5",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "09/11/16 4:08 PM",
      "commitNameOld": "bcc15c6290b3912a054323695a6a931b0de163bd",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 138.01,
      "commitsBetweenForRepo": 739,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public static ApplicationSubmissionContext newInstance(\n       ApplicationId applicationId, String applicationName, String queue,\n       Priority priority, ContainerLaunchContext amContainer,\n       boolean isUnmanagedAM, boolean cancelTokensWhenComplete,\n       int maxAppAttempts, Resource resource, String applicationType,\n       boolean keepContainers, String appLabelExpression,\n       String amContainerLabelExpression) {\n     ApplicationSubmissionContext context \u003d\n         Records.newRecord(ApplicationSubmissionContext.class);\n     context.setApplicationId(applicationId);\n     context.setApplicationName(applicationName);\n     context.setQueue(queue);\n     context.setPriority(priority);\n     context.setAMContainerSpec(amContainer);\n     context.setUnmanagedAM(isUnmanagedAM);\n     context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\n     context.setMaxAppAttempts(maxAppAttempts);\n     context.setApplicationType(applicationType);\n     context.setKeepContainersAcrossApplicationAttempts(keepContainers);\n     context.setNodeLabelExpression(appLabelExpression);\n     context.setResource(resource);\n     \n     ResourceRequest amReq \u003d Records.newRecord(ResourceRequest.class);\n     amReq.setResourceName(ResourceRequest.ANY);\n     amReq.setCapability(resource);\n     amReq.setNumContainers(1);\n     amReq.setRelaxLocality(true);\n     amReq.setNodeLabelExpression(amContainerLabelExpression);\n-    context.setAMContainerResourceRequest(amReq);\n+    context.setAMContainerResourceRequests(Collections.singletonList(amReq));\n     return context;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationSubmissionContext newInstance(\n      ApplicationId applicationId, String applicationName, String queue,\n      Priority priority, ContainerLaunchContext amContainer,\n      boolean isUnmanagedAM, boolean cancelTokensWhenComplete,\n      int maxAppAttempts, Resource resource, String applicationType,\n      boolean keepContainers, String appLabelExpression,\n      String amContainerLabelExpression) {\n    ApplicationSubmissionContext context \u003d\n        Records.newRecord(ApplicationSubmissionContext.class);\n    context.setApplicationId(applicationId);\n    context.setApplicationName(applicationName);\n    context.setQueue(queue);\n    context.setPriority(priority);\n    context.setAMContainerSpec(amContainer);\n    context.setUnmanagedAM(isUnmanagedAM);\n    context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\n    context.setMaxAppAttempts(maxAppAttempts);\n    context.setApplicationType(applicationType);\n    context.setKeepContainersAcrossApplicationAttempts(keepContainers);\n    context.setNodeLabelExpression(appLabelExpression);\n    context.setResource(resource);\n    \n    ResourceRequest amReq \u003d Records.newRecord(ResourceRequest.class);\n    amReq.setResourceName(ResourceRequest.ANY);\n    amReq.setCapability(resource);\n    amReq.setNumContainers(1);\n    amReq.setRelaxLocality(true);\n    amReq.setNodeLabelExpression(amContainerLabelExpression);\n    context.setAMContainerResourceRequests(Collections.singletonList(amReq));\n    return context;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationSubmissionContext.java",
      "extendedDetails": {}
    },
    "e532ed8faa8db4b008a5b8d3f82b48a1b314fa6c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2617. Fixed ApplicationSubmissionContext to still set resource for backward compatibility. Contributed by Wangda Tan.\n",
      "commitDate": "09/10/14 5:57 PM",
      "commitName": "e532ed8faa8db4b008a5b8d3f82b48a1b314fa6c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "09/10/14 11:26 AM",
      "commitNameOld": "180afa2f86f9854c536c3d4ff7476880e41ac48d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.27,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   public static ApplicationSubmissionContext newInstance(\n       ApplicationId applicationId, String applicationName, String queue,\n       Priority priority, ContainerLaunchContext amContainer,\n       boolean isUnmanagedAM, boolean cancelTokensWhenComplete,\n       int maxAppAttempts, Resource resource, String applicationType,\n       boolean keepContainers, String appLabelExpression,\n       String amContainerLabelExpression) {\n     ApplicationSubmissionContext context \u003d\n         Records.newRecord(ApplicationSubmissionContext.class);\n     context.setApplicationId(applicationId);\n     context.setApplicationName(applicationName);\n     context.setQueue(queue);\n     context.setPriority(priority);\n     context.setAMContainerSpec(amContainer);\n     context.setUnmanagedAM(isUnmanagedAM);\n     context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\n     context.setMaxAppAttempts(maxAppAttempts);\n     context.setApplicationType(applicationType);\n     context.setKeepContainersAcrossApplicationAttempts(keepContainers);\n     context.setNodeLabelExpression(appLabelExpression);\n+    context.setResource(resource);\n     \n     ResourceRequest amReq \u003d Records.newRecord(ResourceRequest.class);\n     amReq.setResourceName(ResourceRequest.ANY);\n     amReq.setCapability(resource);\n     amReq.setNumContainers(1);\n     amReq.setRelaxLocality(true);\n     amReq.setNodeLabelExpression(amContainerLabelExpression);\n     context.setAMContainerResourceRequest(amReq);\n     return context;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationSubmissionContext newInstance(\n      ApplicationId applicationId, String applicationName, String queue,\n      Priority priority, ContainerLaunchContext amContainer,\n      boolean isUnmanagedAM, boolean cancelTokensWhenComplete,\n      int maxAppAttempts, Resource resource, String applicationType,\n      boolean keepContainers, String appLabelExpression,\n      String amContainerLabelExpression) {\n    ApplicationSubmissionContext context \u003d\n        Records.newRecord(ApplicationSubmissionContext.class);\n    context.setApplicationId(applicationId);\n    context.setApplicationName(applicationName);\n    context.setQueue(queue);\n    context.setPriority(priority);\n    context.setAMContainerSpec(amContainer);\n    context.setUnmanagedAM(isUnmanagedAM);\n    context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\n    context.setMaxAppAttempts(maxAppAttempts);\n    context.setApplicationType(applicationType);\n    context.setKeepContainersAcrossApplicationAttempts(keepContainers);\n    context.setNodeLabelExpression(appLabelExpression);\n    context.setResource(resource);\n    \n    ResourceRequest amReq \u003d Records.newRecord(ResourceRequest.class);\n    amReq.setResourceName(ResourceRequest.ANY);\n    amReq.setCapability(resource);\n    amReq.setNumContainers(1);\n    amReq.setRelaxLocality(true);\n    amReq.setNodeLabelExpression(amContainerLabelExpression);\n    context.setAMContainerResourceRequest(amReq);\n    return context;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationSubmissionContext.java",
      "extendedDetails": {}
    },
    "180afa2f86f9854c536c3d4ff7476880e41ac48d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2493. Added user-APIs for using node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "09/10/14 11:26 AM",
      "commitName": "180afa2f86f9854c536c3d4ff7476880e41ac48d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,30 @@\n+  public static ApplicationSubmissionContext newInstance(\n+      ApplicationId applicationId, String applicationName, String queue,\n+      Priority priority, ContainerLaunchContext amContainer,\n+      boolean isUnmanagedAM, boolean cancelTokensWhenComplete,\n+      int maxAppAttempts, Resource resource, String applicationType,\n+      boolean keepContainers, String appLabelExpression,\n+      String amContainerLabelExpression) {\n+    ApplicationSubmissionContext context \u003d\n+        Records.newRecord(ApplicationSubmissionContext.class);\n+    context.setApplicationId(applicationId);\n+    context.setApplicationName(applicationName);\n+    context.setQueue(queue);\n+    context.setPriority(priority);\n+    context.setAMContainerSpec(amContainer);\n+    context.setUnmanagedAM(isUnmanagedAM);\n+    context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\n+    context.setMaxAppAttempts(maxAppAttempts);\n+    context.setApplicationType(applicationType);\n+    context.setKeepContainersAcrossApplicationAttempts(keepContainers);\n+    context.setNodeLabelExpression(appLabelExpression);\n+    \n+    ResourceRequest amReq \u003d Records.newRecord(ResourceRequest.class);\n+    amReq.setResourceName(ResourceRequest.ANY);\n+    amReq.setCapability(resource);\n+    amReq.setNumContainers(1);\n+    amReq.setRelaxLocality(true);\n+    amReq.setNodeLabelExpression(amContainerLabelExpression);\n+    context.setAMContainerResourceRequest(amReq);\n+    return context;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationSubmissionContext newInstance(\n      ApplicationId applicationId, String applicationName, String queue,\n      Priority priority, ContainerLaunchContext amContainer,\n      boolean isUnmanagedAM, boolean cancelTokensWhenComplete,\n      int maxAppAttempts, Resource resource, String applicationType,\n      boolean keepContainers, String appLabelExpression,\n      String amContainerLabelExpression) {\n    ApplicationSubmissionContext context \u003d\n        Records.newRecord(ApplicationSubmissionContext.class);\n    context.setApplicationId(applicationId);\n    context.setApplicationName(applicationName);\n    context.setQueue(queue);\n    context.setPriority(priority);\n    context.setAMContainerSpec(amContainer);\n    context.setUnmanagedAM(isUnmanagedAM);\n    context.setCancelTokensWhenComplete(cancelTokensWhenComplete);\n    context.setMaxAppAttempts(maxAppAttempts);\n    context.setApplicationType(applicationType);\n    context.setKeepContainersAcrossApplicationAttempts(keepContainers);\n    context.setNodeLabelExpression(appLabelExpression);\n    \n    ResourceRequest amReq \u003d Records.newRecord(ResourceRequest.class);\n    amReq.setResourceName(ResourceRequest.ANY);\n    amReq.setCapability(resource);\n    amReq.setNumContainers(1);\n    amReq.setRelaxLocality(true);\n    amReq.setNodeLabelExpression(amContainerLabelExpression);\n    context.setAMContainerResourceRequest(amReq);\n    return context;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationSubmissionContext.java"
    }
  }
}