{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProtoTranslatorFactory.java",
  "functionName": "getTranslator",
  "functionId": "getTranslator___yarnProto-Class__A____csiProto-Class__B__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslatorFactory.java",
  "functionStartLine": 55,
  "functionEndLine": 77,
  "numCommitsSeen": 2,
  "timeTaken": 1291,
  "changeHistory": [
    "f4906ac01960c78ff0c91797eaa4b36d80f6826d",
    "5fb14e0635f850c63e009f954b8539a401d0f90a"
  ],
  "changeHistoryShort": {
    "f4906ac01960c78ff0c91797eaa4b36d80f6826d": "Ybodychange",
    "5fb14e0635f850c63e009f954b8539a401d0f90a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f4906ac01960c78ff0c91797eaa4b36d80f6826d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9038. [CSI] Add ability to publish/unpublish volumes on node managers. Contributed by Weiwei Yang.\n",
      "commitDate": "03/01/19 10:40 PM",
      "commitName": "f4906ac01960c78ff0c91797eaa4b36d80f6826d",
      "commitAuthor": "Sunil G",
      "commitDateOld": "19/11/18 6:32 PM",
      "commitNameOld": "5fb14e0635f850c63e009f954b8539a401d0f90a",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 45.17,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,23 @@\n   public static \u003cA, B\u003e ProtoTranslator\u003cA, B\u003e getTranslator(\n       Class\u003cA\u003e yarnProto, Class\u003cB\u003e csiProto) {\n     if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesRequest.class\n         \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesRequest.class) {\n       return new ValidateVolumeCapabilitiesRequestProtoTranslator();\n     } else if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesResponse.class\n         \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesResponse.class) {\n       return new ValidationVolumeCapabilitiesResponseProtoTranslator();\n+    } else if (yarnProto \u003d\u003d NodePublishVolumeRequest.class\n+        \u0026\u0026 csiProto \u003d\u003d Csi.NodePublishVolumeRequest.class) {\n+      return new NodePublishVolumeRequestProtoTranslator();\n+    } else if (yarnProto \u003d\u003d GetPluginInfoResponse.class\n+        \u0026\u0026 csiProto \u003d\u003d Csi.GetPluginInfoResponse.class) {\n+      return new GetPluginInfoResponseProtoTranslator();\n+    } else if (yarnProto \u003d\u003d NodeUnpublishVolumeRequest.class\n+        \u0026\u0026 csiProto \u003d\u003d Csi.NodeUnpublishVolumeRequest.class) {\n+      return new NodeUnpublishVolumeRequestProtoTranslator();\n     }\n     throw new IllegalArgumentException(\"A problem is found while processing\"\n         + \" proto message translating. Unexpected message types,\"\n         + \" no transformer is found can handle the transformation from type \"\n         + yarnProto.getName() + \" \u003c-\u003e \" + csiProto.getName());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cA, B\u003e ProtoTranslator\u003cA, B\u003e getTranslator(\n      Class\u003cA\u003e yarnProto, Class\u003cB\u003e csiProto) {\n    if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesRequest.class\n        \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesRequest.class) {\n      return new ValidateVolumeCapabilitiesRequestProtoTranslator();\n    } else if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesResponse.class\n        \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesResponse.class) {\n      return new ValidationVolumeCapabilitiesResponseProtoTranslator();\n    } else if (yarnProto \u003d\u003d NodePublishVolumeRequest.class\n        \u0026\u0026 csiProto \u003d\u003d Csi.NodePublishVolumeRequest.class) {\n      return new NodePublishVolumeRequestProtoTranslator();\n    } else if (yarnProto \u003d\u003d GetPluginInfoResponse.class\n        \u0026\u0026 csiProto \u003d\u003d Csi.GetPluginInfoResponse.class) {\n      return new GetPluginInfoResponseProtoTranslator();\n    } else if (yarnProto \u003d\u003d NodeUnpublishVolumeRequest.class\n        \u0026\u0026 csiProto \u003d\u003d Csi.NodeUnpublishVolumeRequest.class) {\n      return new NodeUnpublishVolumeRequestProtoTranslator();\n    }\n    throw new IllegalArgumentException(\"A problem is found while processing\"\n        + \" proto message translating. Unexpected message types,\"\n        + \" no transformer is found can handle the transformation from type \"\n        + yarnProto.getName() + \" \u003c-\u003e \" + csiProto.getName());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslatorFactory.java",
      "extendedDetails": {}
    },
    "5fb14e0635f850c63e009f954b8539a401d0f90a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8953. [CSI] CSI driver adaptor module support in NodeManager. Contributed by Weiwei Yang.\n",
      "commitDate": "19/11/18 6:32 PM",
      "commitName": "5fb14e0635f850c63e009f954b8539a401d0f90a",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,14 @@\n+  public static \u003cA, B\u003e ProtoTranslator\u003cA, B\u003e getTranslator(\n+      Class\u003cA\u003e yarnProto, Class\u003cB\u003e csiProto) {\n+    if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesRequest.class\n+        \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesRequest.class) {\n+      return new ValidateVolumeCapabilitiesRequestProtoTranslator();\n+    } else if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesResponse.class\n+        \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesResponse.class) {\n+      return new ValidationVolumeCapabilitiesResponseProtoTranslator();\n+    }\n+    throw new IllegalArgumentException(\"A problem is found while processing\"\n+        + \" proto message translating. Unexpected message types,\"\n+        + \" no transformer is found can handle the transformation from type \"\n+        + yarnProto.getName() + \" \u003c-\u003e \" + csiProto.getName());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cA, B\u003e ProtoTranslator\u003cA, B\u003e getTranslator(\n      Class\u003cA\u003e yarnProto, Class\u003cB\u003e csiProto) {\n    if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesRequest.class\n        \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesRequest.class) {\n      return new ValidateVolumeCapabilitiesRequestProtoTranslator();\n    } else if (yarnProto \u003d\u003d ValidateVolumeCapabilitiesResponse.class\n        \u0026\u0026 csiProto \u003d\u003d Csi.ValidateVolumeCapabilitiesResponse.class) {\n      return new ValidationVolumeCapabilitiesResponseProtoTranslator();\n    }\n    throw new IllegalArgumentException(\"A problem is found while processing\"\n        + \" proto message translating. Unexpected message types,\"\n        + \" no transformer is found can handle the transformation from type \"\n        + yarnProto.getName() + \" \u003c-\u003e \" + csiProto.getName());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-csi/src/main/java/org/apache/hadoop/yarn/csi/translator/ProtoTranslatorFactory.java"
    }
  }
}