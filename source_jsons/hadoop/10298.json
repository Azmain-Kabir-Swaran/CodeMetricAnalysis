{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalReplica.java",
  "functionName": "setDirInternal",
  "functionId": "setDirInternal___dir-File",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplica.java",
  "functionStartLine": 134,
  "functionEndLine": 152,
  "numCommitsSeen": 29,
  "timeTaken": 4146,
  "changeHistory": [
    "32607dbd98a7ab70741a2efc98eff548c1e431c1",
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "1ba3f8971433cdbc3e43fd3605065d811dab5b16",
    "14556cc5d8fee8f8a846e4f65572828553be386c",
    "5428bfbf53d264cc3c67b39b94c30a93cc4578c3"
  ],
  "changeHistoryShort": {
    "32607dbd98a7ab70741a2efc98eff548c1e431c1": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ymovefromfile",
    "1ba3f8971433cdbc3e43fd3605065d811dab5b16": "Ybodychange",
    "14556cc5d8fee8f8a846e4f65572828553be386c": "Ybodychange",
    "5428bfbf53d264cc3c67b39b94c30a93cc4578c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "32607dbd98a7ab70741a2efc98eff548c1e431c1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14631.The DirectoryScanner doesn\u0027t fix the wrongly placed replica. Contributed by Jinglun.\n",
      "commitDate": "01/08/19 3:48 PM",
      "commitName": "32607dbd98a7ab70741a2efc98eff548c1e431c1",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "28/04/18 9:05 AM",
      "commitNameOld": "eb7fe1d588de903be2ff6e20384c25c184881532",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 460.28,
      "commitsBetweenForRepo": 3479,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void setDirInternal(File dir) {\n     if (dir \u003d\u003d null) {\n       baseDir \u003d null;\n       return;\n     }\n \n-    ReplicaDirInfo dirInfo \u003d parseBaseDir(dir);\n+    ReplicaDirInfo dirInfo \u003d parseBaseDir(dir, getBlockId());\n     this.hasSubdirs \u003d dirInfo.hasSubidrs;\n \n     synchronized (internedBaseDirs) {\n       if (!internedBaseDirs.containsKey(dirInfo.baseDirPath)) {\n         // Create a new String path of this file and make a brand new File object\n         // to guarantee we drop the reference to the underlying char[] storage.\n         File baseDir \u003d new File(dirInfo.baseDirPath);\n         internedBaseDirs.put(dirInfo.baseDirPath, baseDir);\n       }\n       this.baseDir \u003d internedBaseDirs.get(dirInfo.baseDirPath);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setDirInternal(File dir) {\n    if (dir \u003d\u003d null) {\n      baseDir \u003d null;\n      return;\n    }\n\n    ReplicaDirInfo dirInfo \u003d parseBaseDir(dir, getBlockId());\n    this.hasSubdirs \u003d dirInfo.hasSubidrs;\n\n    synchronized (internedBaseDirs) {\n      if (!internedBaseDirs.containsKey(dirInfo.baseDirPath)) {\n        // Create a new String path of this file and make a brand new File object\n        // to guarantee we drop the reference to the underlying char[] storage.\n        File baseDir \u003d new File(dirInfo.baseDirPath);\n        internedBaseDirs.put(dirInfo.baseDirPath, baseDir);\n      }\n      this.baseDir \u003d internedBaseDirs.get(dirInfo.baseDirPath);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplica.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "13/09/16 12:42 PM",
      "commitNameOld": "1c0d18f32289837b8981aed80e7bdcd360adfb85",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void setDirInternal(File dir) {\n     if (dir \u003d\u003d null) {\n       baseDir \u003d null;\n       return;\n     }\n \n     ReplicaDirInfo dirInfo \u003d parseBaseDir(dir);\n     this.hasSubdirs \u003d dirInfo.hasSubidrs;\n-    \n+\n     synchronized (internedBaseDirs) {\n       if (!internedBaseDirs.containsKey(dirInfo.baseDirPath)) {\n         // Create a new String path of this file and make a brand new File object\n         // to guarantee we drop the reference to the underlying char[] storage.\n         File baseDir \u003d new File(dirInfo.baseDirPath);\n         internedBaseDirs.put(dirInfo.baseDirPath, baseDir);\n       }\n       this.baseDir \u003d internedBaseDirs.get(dirInfo.baseDirPath);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setDirInternal(File dir) {\n    if (dir \u003d\u003d null) {\n      baseDir \u003d null;\n      return;\n    }\n\n    ReplicaDirInfo dirInfo \u003d parseBaseDir(dir);\n    this.hasSubdirs \u003d dirInfo.hasSubidrs;\n\n    synchronized (internedBaseDirs) {\n      if (!internedBaseDirs.containsKey(dirInfo.baseDirPath)) {\n        // Create a new String path of this file and make a brand new File object\n        // to guarantee we drop the reference to the underlying char[] storage.\n        File baseDir \u003d new File(dirInfo.baseDirPath);\n        internedBaseDirs.put(dirInfo.baseDirPath, baseDir);\n      }\n      this.baseDir \u003d internedBaseDirs.get(dirInfo.baseDirPath);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplica.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInfo.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplica.java",
        "oldMethodName": "setDirInternal",
        "newMethodName": "setDirInternal"
      }
    },
    "1ba3f8971433cdbc3e43fd3605065d811dab5b16": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6482. Use block ID-based block layout on datanodes (James Thomas via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615223 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/14 1:41 PM",
      "commitName": "1ba3f8971433cdbc3e43fd3605065d811dab5b16",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "23/04/14 1:13 PM",
      "commitNameOld": "876fd8ab7913a259ff9f69c16cc2d9af46ad3f9b",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 100.02,
      "commitsBetweenForRepo": 630,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   private void setDirInternal(File dir) {\n     if (dir \u003d\u003d null) {\n-      subDirs \u003d null;\n       baseDir \u003d null;\n       return;\n     }\n \n-    ReplicaDirInfo replicaDirInfo \u003d parseSubDirs(dir);\n-    this.subDirs \u003d replicaDirInfo.subDirs;\n+    ReplicaDirInfo dirInfo \u003d parseBaseDir(dir);\n+    this.hasSubdirs \u003d dirInfo.hasSubidrs;\n     \n     synchronized (internedBaseDirs) {\n-      if (!internedBaseDirs.containsKey(replicaDirInfo.baseDirPath)) {\n+      if (!internedBaseDirs.containsKey(dirInfo.baseDirPath)) {\n         // Create a new String path of this file and make a brand new File object\n         // to guarantee we drop the reference to the underlying char[] storage.\n-        File baseDir \u003d new File(replicaDirInfo.baseDirPath);\n-        internedBaseDirs.put(replicaDirInfo.baseDirPath, baseDir);\n+        File baseDir \u003d new File(dirInfo.baseDirPath);\n+        internedBaseDirs.put(dirInfo.baseDirPath, baseDir);\n       }\n-      this.baseDir \u003d internedBaseDirs.get(replicaDirInfo.baseDirPath);\n+      this.baseDir \u003d internedBaseDirs.get(dirInfo.baseDirPath);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setDirInternal(File dir) {\n    if (dir \u003d\u003d null) {\n      baseDir \u003d null;\n      return;\n    }\n\n    ReplicaDirInfo dirInfo \u003d parseBaseDir(dir);\n    this.hasSubdirs \u003d dirInfo.hasSubidrs;\n    \n    synchronized (internedBaseDirs) {\n      if (!internedBaseDirs.containsKey(dirInfo.baseDirPath)) {\n        // Create a new String path of this file and make a brand new File object\n        // to guarantee we drop the reference to the underlying char[] storage.\n        File baseDir \u003d new File(dirInfo.baseDirPath);\n        internedBaseDirs.put(dirInfo.baseDirPath, baseDir);\n      }\n      this.baseDir \u003d internedBaseDirs.get(dirInfo.baseDirPath);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInfo.java",
      "extendedDetails": {}
    },
    "14556cc5d8fee8f8a846e4f65572828553be386c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6155. Fix Boxing/unboxing to parse a primitive findbugs warnings. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582068 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/14 2:27 PM",
      "commitName": "14556cc5d8fee8f8a846e4f65572828553be386c",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "22/10/13 6:28 PM",
      "commitNameOld": "01f37e42f050207b7659bf74e2484cf8bdae2d89",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 154.83,
      "commitsBetweenForRepo": 1081,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void setDirInternal(File dir) {\n     if (dir \u003d\u003d null) {\n       subDirs \u003d null;\n       baseDir \u003d null;\n       return;\n     }\n \n     ReplicaDirInfo replicaDirInfo \u003d parseSubDirs(dir);\n     this.subDirs \u003d replicaDirInfo.subDirs;\n     \n     synchronized (internedBaseDirs) {\n       if (!internedBaseDirs.containsKey(replicaDirInfo.baseDirPath)) {\n         // Create a new String path of this file and make a brand new File object\n         // to guarantee we drop the reference to the underlying char[] storage.\n-        File baseDir \u003d new File(new String(replicaDirInfo.baseDirPath));\n+        File baseDir \u003d new File(replicaDirInfo.baseDirPath);\n         internedBaseDirs.put(replicaDirInfo.baseDirPath, baseDir);\n       }\n       this.baseDir \u003d internedBaseDirs.get(replicaDirInfo.baseDirPath);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setDirInternal(File dir) {\n    if (dir \u003d\u003d null) {\n      subDirs \u003d null;\n      baseDir \u003d null;\n      return;\n    }\n\n    ReplicaDirInfo replicaDirInfo \u003d parseSubDirs(dir);\n    this.subDirs \u003d replicaDirInfo.subDirs;\n    \n    synchronized (internedBaseDirs) {\n      if (!internedBaseDirs.containsKey(replicaDirInfo.baseDirPath)) {\n        // Create a new String path of this file and make a brand new File object\n        // to guarantee we drop the reference to the underlying char[] storage.\n        File baseDir \u003d new File(replicaDirInfo.baseDirPath);\n        internedBaseDirs.put(replicaDirInfo.baseDirPath, baseDir);\n      }\n      this.baseDir \u003d internedBaseDirs.get(replicaDirInfo.baseDirPath);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInfo.java",
      "extendedDetails": {}
    },
    "5428bfbf53d264cc3c67b39b94c30a93cc4578c3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4465. Optimize datanode ReplicasMap and ReplicaInfo. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1499659 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/13 10:52 PM",
      "commitName": "5428bfbf53d264cc3c67b39b94c30a93cc4578c3",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,20 @@\n+  private void setDirInternal(File dir) {\n+    if (dir \u003d\u003d null) {\n+      subDirs \u003d null;\n+      baseDir \u003d null;\n+      return;\n+    }\n+\n+    ReplicaDirInfo replicaDirInfo \u003d parseSubDirs(dir);\n+    this.subDirs \u003d replicaDirInfo.subDirs;\n+    \n+    synchronized (internedBaseDirs) {\n+      if (!internedBaseDirs.containsKey(replicaDirInfo.baseDirPath)) {\n+        // Create a new String path of this file and make a brand new File object\n+        // to guarantee we drop the reference to the underlying char[] storage.\n+        File baseDir \u003d new File(new String(replicaDirInfo.baseDirPath));\n+        internedBaseDirs.put(replicaDirInfo.baseDirPath, baseDir);\n+      }\n+      this.baseDir \u003d internedBaseDirs.get(replicaDirInfo.baseDirPath);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setDirInternal(File dir) {\n    if (dir \u003d\u003d null) {\n      subDirs \u003d null;\n      baseDir \u003d null;\n      return;\n    }\n\n    ReplicaDirInfo replicaDirInfo \u003d parseSubDirs(dir);\n    this.subDirs \u003d replicaDirInfo.subDirs;\n    \n    synchronized (internedBaseDirs) {\n      if (!internedBaseDirs.containsKey(replicaDirInfo.baseDirPath)) {\n        // Create a new String path of this file and make a brand new File object\n        // to guarantee we drop the reference to the underlying char[] storage.\n        File baseDir \u003d new File(new String(replicaDirInfo.baseDirPath));\n        internedBaseDirs.put(replicaDirInfo.baseDirPath, baseDir);\n      }\n      this.baseDir \u003d internedBaseDirs.get(replicaDirInfo.baseDirPath);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInfo.java"
    }
  }
}