{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceManager.java",
  "functionName": "resolveCompsToUpgrade",
  "functionId": "resolveCompsToUpgrade___sourceSpec-Service__targetSpec-Service",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java",
  "functionStartLine": 457,
  "functionEndLine": 486,
  "numCommitsSeen": 8,
  "timeTaken": 1781,
  "changeHistory": [
    "913f87dada27776c539dfb352400ecf8d40e7943"
  ],
  "changeHistoryShort": {
    "913f87dada27776c539dfb352400ecf8d40e7943": "Yintroduced"
  },
  "changeHistoryDetails": {
    "913f87dada27776c539dfb352400ecf8d40e7943": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/09/18 11:51 AM",
      "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,30 @@\n+      resolveCompsToUpgrade(Service sourceSpec, Service targetSpec) {\n+\n+    List\u003corg.apache.hadoop.yarn.service.api.records.Component\u003e\n+        compsNeedUpgradeList \u003d componentsFinder.\n+        findTargetComponentSpecs(sourceSpec, targetSpec);\n+\n+    // remove all components from need upgrade list if there restart policy\n+    // doesn\u0027t all upgrade.\n+    if (compsNeedUpgradeList !\u003d null) {\n+      compsNeedUpgradeList.removeIf(component -\u003e {\n+        org.apache.hadoop.yarn.service.api.records.Component.RestartPolicyEnum\n+            restartPolicy \u003d component.getRestartPolicy();\n+\n+        final ComponentRestartPolicy restartPolicyHandler \u003d\n+            Component.getRestartPolicyHandler(restartPolicy);\n+        // Do not allow upgrades for components which have NEVER/ON_FAILURE\n+        // restart policy\n+        if (!restartPolicyHandler.allowUpgrades()) {\n+          LOG.info(\"The component {} has a restart policy that doesnt \" +\n+                  \"allow upgrades {} \", component.getName(),\n+              component.getRestartPolicy().toString());\n+          return true;\n+        }\n+\n+        return false;\n+      });\n+    }\n+\n+    return compsNeedUpgradeList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      resolveCompsToUpgrade(Service sourceSpec, Service targetSpec) {\n\n    List\u003corg.apache.hadoop.yarn.service.api.records.Component\u003e\n        compsNeedUpgradeList \u003d componentsFinder.\n        findTargetComponentSpecs(sourceSpec, targetSpec);\n\n    // remove all components from need upgrade list if there restart policy\n    // doesn\u0027t all upgrade.\n    if (compsNeedUpgradeList !\u003d null) {\n      compsNeedUpgradeList.removeIf(component -\u003e {\n        org.apache.hadoop.yarn.service.api.records.Component.RestartPolicyEnum\n            restartPolicy \u003d component.getRestartPolicy();\n\n        final ComponentRestartPolicy restartPolicyHandler \u003d\n            Component.getRestartPolicyHandler(restartPolicy);\n        // Do not allow upgrades for components which have NEVER/ON_FAILURE\n        // restart policy\n        if (!restartPolicyHandler.allowUpgrades()) {\n          LOG.info(\"The component {} has a restart policy that doesnt \" +\n                  \"allow upgrades {} \", component.getName(),\n              component.getRestartPolicy().toString());\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return compsNeedUpgradeList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java"
    }
  }
}