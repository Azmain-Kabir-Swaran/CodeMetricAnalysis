{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "getDecomNodes",
  "functionId": "getDecomNodes",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 6470,
  "functionEndLine": 6489,
  "numCommitsSeen": 899,
  "timeTaken": 51323,
  "changeHistory": [
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
    "45fa7f023532e79dff3cf381056eff717dc4ecc7",
    "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a",
    "cf0cf0a6910244d929f40842223e7d0b2c9445e8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "371f4a59059322000a40eb4bdf5386b96b626ece",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": "Ybodychange",
    "45fa7f023532e79dff3cf381056eff717dc4ecc7": "Ybodychange",
    "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a": "Ybodychange",
    "cf0cf0a6910244d929f40842223e7d0b2c9445e8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "371f4a59059322000a40eb4bdf5386b96b626ece": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9390. Block management for maintenance states.\n",
      "commitDate": "17/10/16 5:45 PM",
      "commitName": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "14/10/16 1:21 PM",
      "commitNameOld": "adb96e109f1ab4a2c3d469e716c084d0a891b951",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 3.18,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public String getDecomNodes() {\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n       new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n         ).getDecommissioningNodes();\n     for (DatanodeDescriptor node : decomNodeList) {\n       Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n           .\u003cString, Object\u003e builder()\n           .put(\"xferaddr\", node.getXferAddr())\n           .put(\"underReplicatedBlocks\",\n-              node.decommissioningStatus.getUnderReplicatedBlocks())\n+          node.getLeavingServiceStatus().getUnderReplicatedBlocks())\n+           // TODO use another property name for outOfServiceOnlyReplicas.\n           .put(\"decommissionOnlyReplicas\",\n-              node.decommissioningStatus.getDecommissionOnlyReplicas())\n+          node.getLeavingServiceStatus().getOutOfServiceOnlyReplicas())\n           .put(\"underReplicateInOpenFiles\",\n-              node.decommissioningStatus.getUnderReplicatedInOpenFiles())\n+          node.getLeavingServiceStatus().getUnderReplicatedInOpenFiles())\n           .build();\n       info.put(node.getHostName() + \":\" + node.getXferPort(), innerinfo);\n     }\n     return JSON.toString(info);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n        ).getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n          .\u003cString, Object\u003e builder()\n          .put(\"xferaddr\", node.getXferAddr())\n          .put(\"underReplicatedBlocks\",\n          node.getLeavingServiceStatus().getUnderReplicatedBlocks())\n           // TODO use another property name for outOfServiceOnlyReplicas.\n          .put(\"decommissionOnlyReplicas\",\n          node.getLeavingServiceStatus().getOutOfServiceOnlyReplicas())\n          .put(\"underReplicateInOpenFiles\",\n          node.getLeavingServiceStatus().getUnderReplicatedInOpenFiles())\n          .build();\n      info.put(node.getHostName() + \":\" + node.getXferPort(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "45fa7f023532e79dff3cf381056eff717dc4ecc7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7303. NN UI fails to distinguish datanodes on the same host. Contributed by Benoy Antony.\n",
      "commitDate": "24/11/14 5:46 PM",
      "commitName": "45fa7f023532e79dff3cf381056eff717dc4ecc7",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "24/11/14 3:42 PM",
      "commitNameOld": "8caf537afabc70b0c74e0a29aea0cc2935ecb162",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public String getDecomNodes() {\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n       new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n         ).getDecommissioningNodes();\n     for (DatanodeDescriptor node : decomNodeList) {\n       Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n           .\u003cString, Object\u003e builder()\n           .put(\"xferaddr\", node.getXferAddr())\n           .put(\"underReplicatedBlocks\",\n               node.decommissioningStatus.getUnderReplicatedBlocks())\n           .put(\"decommissionOnlyReplicas\",\n               node.decommissioningStatus.getDecommissionOnlyReplicas())\n           .put(\"underReplicateInOpenFiles\",\n               node.decommissioningStatus.getUnderReplicatedInOpenFiles())\n           .build();\n-      info.put(node.getHostName(), innerinfo);\n+      info.put(node.getHostName() + \":\" + node.getXferPort(), innerinfo);\n     }\n     return JSON.toString(info);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n        ).getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n          .\u003cString, Object\u003e builder()\n          .put(\"xferaddr\", node.getXferAddr())\n          .put(\"underReplicatedBlocks\",\n              node.decommissioningStatus.getUnderReplicatedBlocks())\n          .put(\"decommissionOnlyReplicas\",\n              node.decommissioningStatus.getDecommissionOnlyReplicas())\n          .put(\"underReplicateInOpenFiles\",\n              node.decommissioningStatus.getUnderReplicatedInOpenFiles())\n          .build();\n      info.put(node.getHostName() + \":\" + node.getXferPort(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a": {
      "type": "Ybodychange",
      "commitMessage": "merge trunk to branch HDFS-4949\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532952 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/13 7:14 PM",
      "commitName": "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "16/10/13 3:15 PM",
      "commitNameOld": "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   public String getDecomNodes() {\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n       new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n         ).getDecommissioningNodes();\n     for (DatanodeDescriptor node : decomNodeList) {\n-      final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n-      innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n-          .getUnderReplicatedBlocks());\n-      innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n-          .getDecommissionOnlyReplicas());\n-      innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n-          .getUnderReplicatedInOpenFiles());\n+      Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n+          .\u003cString, Object\u003e builder()\n+          .put(\"xferaddr\", node.getXferAddr())\n+          .put(\"underReplicatedBlocks\",\n+              node.decommissioningStatus.getUnderReplicatedBlocks())\n+          .put(\"decommissionOnlyReplicas\",\n+              node.decommissioningStatus.getDecommissionOnlyReplicas())\n+          .put(\"underReplicateInOpenFiles\",\n+              node.decommissioningStatus.getUnderReplicatedInOpenFiles())\n+          .build();\n       info.put(node.getHostName(), innerinfo);\n     }\n     return JSON.toString(info);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n        ).getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n          .\u003cString, Object\u003e builder()\n          .put(\"xferaddr\", node.getXferAddr())\n          .put(\"underReplicatedBlocks\",\n              node.decommissioningStatus.getUnderReplicatedBlocks())\n          .put(\"decommissionOnlyReplicas\",\n              node.decommissioningStatus.getDecommissionOnlyReplicas())\n          .put(\"underReplicateInOpenFiles\",\n              node.decommissioningStatus.getUnderReplicatedInOpenFiles())\n          .build();\n      info.put(node.getHostName(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cf0cf0a6910244d929f40842223e7d0b2c9445e8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5342. Provide more information in the FSNamesystem JMX interfaces. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1532090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/10/13 1:56 PM",
      "commitName": "cf0cf0a6910244d929f40842223e7d0b2c9445e8",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "12/10/13 9:28 PM",
      "commitNameOld": "7cd044b1aa03745180d6cc56f2da09bc6e901e15",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 1.69,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   public String getDecomNodes() {\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n       new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n         ).getDecommissioningNodes();\n     for (DatanodeDescriptor node : decomNodeList) {\n-      final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n-      innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n-          .getUnderReplicatedBlocks());\n-      innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n-          .getDecommissionOnlyReplicas());\n-      innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n-          .getUnderReplicatedInOpenFiles());\n+      Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n+          .\u003cString, Object\u003e builder()\n+          .put(\"xferaddr\", node.getXferAddr())\n+          .put(\"underReplicatedBlocks\",\n+              node.decommissioningStatus.getUnderReplicatedBlocks())\n+          .put(\"decommissionOnlyReplicas\",\n+              node.decommissioningStatus.getDecommissionOnlyReplicas())\n+          .put(\"underReplicateInOpenFiles\",\n+              node.decommissioningStatus.getUnderReplicatedInOpenFiles())\n+          .build();\n       info.put(node.getHostName(), innerinfo);\n     }\n     return JSON.toString(info);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n        ).getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      Map\u003cString, Object\u003e innerinfo \u003d ImmutableMap\n          .\u003cString, Object\u003e builder()\n          .put(\"xferaddr\", node.getXferAddr())\n          .put(\"underReplicatedBlocks\",\n              node.decommissioningStatus.getUnderReplicatedBlocks())\n          .put(\"decommissionOnlyReplicas\",\n              node.decommissioningStatus.getDecommissionOnlyReplicas())\n          .put(\"underReplicateInOpenFiles\",\n              node.decommissioningStatus.getUnderReplicatedInOpenFiles())\n          .build();\n      info.put(node.getHostName(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n        ).getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n      innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n          .getUnderReplicatedBlocks());\n      innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n          .getDecommissionOnlyReplicas());\n      innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n          .getUnderReplicatedInOpenFiles());\n      info.put(node.getHostName(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n        ).getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n      innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n          .getUnderReplicatedBlocks());\n      innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n          .getDecommissionOnlyReplicas());\n      innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n          .getUnderReplicatedInOpenFiles());\n      info.put(node.getHostName(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "371f4a59059322000a40eb4bdf5386b96b626ece": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/11 3:06 AM",
      "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "04/08/11 3:55 PM",
      "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.47,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public String getDecomNodes() {\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n       new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n-    final ArrayList\u003cDatanodeDescriptor\u003e decomNodeList \u003d \n-      this.getDecommissioningNodes();\n+    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n+        ).getDecommissioningNodes();\n     for (DatanodeDescriptor node : decomNodeList) {\n       final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n       innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n           .getUnderReplicatedBlocks());\n       innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n           .getDecommissionOnlyReplicas());\n       innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n           .getUnderReplicatedInOpenFiles());\n       info.put(node.getHostName(), innerinfo);\n     }\n     return JSON.toString(info);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final List\u003cDatanodeDescriptor\u003e decomNodeList \u003d blockManager.getDatanodeManager(\n        ).getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n      innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n          .getUnderReplicatedBlocks());\n      innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n          .getDecommissionOnlyReplicas());\n      innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n          .getUnderReplicatedInOpenFiles());\n      info.put(node.getHostName(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+  public String getDecomNodes() {\n+    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n+      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n+    final ArrayList\u003cDatanodeDescriptor\u003e decomNodeList \u003d \n+      this.getDecommissioningNodes();\n+    for (DatanodeDescriptor node : decomNodeList) {\n+      final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n+      innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n+          .getUnderReplicatedBlocks());\n+      innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n+          .getDecommissionOnlyReplicas());\n+      innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n+          .getUnderReplicatedInOpenFiles());\n+      info.put(node.getHostName(), innerinfo);\n+    }\n+    return JSON.toString(info);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDecomNodes() {\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e info \u003d \n      new HashMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    final ArrayList\u003cDatanodeDescriptor\u003e decomNodeList \u003d \n      this.getDecommissioningNodes();\n    for (DatanodeDescriptor node : decomNodeList) {\n      final Map\u003cString, Object\u003e innerinfo \u003d new HashMap\u003cString, Object\u003e();\n      innerinfo.put(\"underReplicatedBlocks\", node.decommissioningStatus\n          .getUnderReplicatedBlocks());\n      innerinfo.put(\"decommissionOnlyReplicas\", node.decommissioningStatus\n          .getDecommissionOnlyReplicas());\n      innerinfo.put(\"underReplicateInOpenFiles\", node.decommissioningStatus\n          .getUnderReplicatedInOpenFiles());\n      info.put(node.getHostName(), innerinfo);\n    }\n    return JSON.toString(info);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}