{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryServerFileSystemStateStoreService.java",
  "functionName": "updateToken",
  "functionId": "updateToken___tokenId-MRDelegationTokenIdentifier__renewDate-Long",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java",
  "functionStartLine": 141,
  "functionEndLine": 165,
  "numCommitsSeen": 6,
  "timeTaken": 778,
  "changeHistory": [
    "9579554988f82d506a32b81834f3a4fa9c698471",
    "2627e352d630d19c35b97eea9ef603342feb379f"
  ],
  "changeHistoryShort": {
    "9579554988f82d506a32b81834f3a4fa9c698471": "Ybodychange",
    "2627e352d630d19c35b97eea9ef603342feb379f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9579554988f82d506a32b81834f3a4fa9c698471": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6010. HistoryServerFileSystemStateStore fails to update tokens. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617984 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 8:55 AM",
      "commitName": "9579554988f82d506a32b81834f3a4fa9c698471",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "10/04/14 9:28 PM",
      "commitNameOld": "c1127d19c4233b0d9c2d5016069276c391c895b0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 125.48,
      "commitsBetweenForRepo": 797,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,25 @@\n   public void updateToken(MRDelegationTokenIdentifier tokenId,\n       Long renewDate) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Updating token \" + tokenId.getSequenceNumber());\n     }\n-    createFile(getTokenPath(tokenId), buildTokenData(tokenId, renewDate));\n+\n+    // Files cannot be atomically replaced, therefore we write a temporary\n+    // update file, remove the original token file, then rename the update\n+    // file to the token file. During recovery either the token file will be\n+    // used or if that is missing and an update file is present then the\n+    // update file is used.\n+    Path tokenPath \u003d getTokenPath(tokenId);\n+    Path tmp \u003d new Path(tokenPath.getParent(),\n+        UPDATE_TMP_FILE_PREFIX + tokenPath.getName());\n+    writeFile(tmp, buildTokenData(tokenId, renewDate));\n+    try {\n+      deleteFile(tokenPath);\n+    } catch (IOException e) {\n+      fs.delete(tmp, false);\n+      throw e;\n+    }\n+    if (!fs.rename(tmp, tokenPath)) {\n+      throw new IOException(\"Could not rename \" + tmp + \" to \" + tokenPath);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateToken(MRDelegationTokenIdentifier tokenId,\n      Long renewDate) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Updating token \" + tokenId.getSequenceNumber());\n    }\n\n    // Files cannot be atomically replaced, therefore we write a temporary\n    // update file, remove the original token file, then rename the update\n    // file to the token file. During recovery either the token file will be\n    // used or if that is missing and an update file is present then the\n    // update file is used.\n    Path tokenPath \u003d getTokenPath(tokenId);\n    Path tmp \u003d new Path(tokenPath.getParent(),\n        UPDATE_TMP_FILE_PREFIX + tokenPath.getName());\n    writeFile(tmp, buildTokenData(tokenId, renewDate));\n    try {\n      deleteFile(tokenPath);\n    } catch (IOException e) {\n      fs.delete(tmp, false);\n      throw e;\n    }\n    if (!fs.rename(tmp, tokenPath)) {\n      throw new IOException(\"Could not rename \" + tmp + \" to \" + tokenPath);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java",
      "extendedDetails": {}
    },
    "2627e352d630d19c35b97eea9ef603342feb379f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5332. Support token-preserving restart of history server. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 11:19 AM",
      "commitName": "2627e352d630d19c35b97eea9ef603342feb379f",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,7 @@\n+  public void updateToken(MRDelegationTokenIdentifier tokenId,\n+      Long renewDate) throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Updating token \" + tokenId.getSequenceNumber());\n+    }\n+    createFile(getTokenPath(tokenId), buildTokenData(tokenId, renewDate));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateToken(MRDelegationTokenIdentifier tokenId,\n      Long renewDate) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Updating token \" + tokenId.getSequenceNumber());\n    }\n    createFile(getTokenPath(tokenId), buildTokenData(tokenId, renewDate));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java"
    }
  }
}