{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CompositeGroupsMapping.java",
  "functionName": "getGroups",
  "functionId": "getGroups___user-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java",
  "functionStartLine": 69,
  "functionEndLine": 90,
  "numCommitsSeen": 3,
  "timeTaken": 897,
  "changeHistory": [
    "a8b75466b21edfe8b12beb4420492817f0e03147",
    "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5"
  ],
  "changeHistoryShort": {
    "a8b75466b21edfe8b12beb4420492817f0e03147": "Ybodychange",
    "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a8b75466b21edfe8b12beb4420492817f0e03147": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14743. CompositeGroupsMapping should not swallow exceptions. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "10/08/17 9:35 AM",
      "commitName": "a8b75466b21edfe8b12beb4420492817f0e03147",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 23.5,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public synchronized List\u003cString\u003e getGroups(String user) throws IOException {\n     Set\u003cString\u003e groupSet \u003d new TreeSet\u003cString\u003e();\n \n     List\u003cString\u003e groups \u003d null;\n     for (GroupMappingServiceProvider provider : providersList) {\n       try {\n         groups \u003d provider.getGroups(user);\n       } catch (Exception e) {\n-        //LOG.warn(\"Exception trying to get groups for user \" + user, e);      \n+        LOG.warn(\"Unable to get groups for user {} via {} because: {}\",\n+            user, provider.getClass().getSimpleName(), e.toString());\n+        LOG.debug(\"Stacktrace: \", e);\n       }        \n       if (groups !\u003d null \u0026\u0026 ! groups.isEmpty()) {\n         groupSet.addAll(groups);\n         if (!combined) break;\n       }\n     }\n \n     List\u003cString\u003e results \u003d new ArrayList\u003cString\u003e(groupSet.size());\n     results.addAll(groupSet);\n     return results;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized List\u003cString\u003e getGroups(String user) throws IOException {\n    Set\u003cString\u003e groupSet \u003d new TreeSet\u003cString\u003e();\n\n    List\u003cString\u003e groups \u003d null;\n    for (GroupMappingServiceProvider provider : providersList) {\n      try {\n        groups \u003d provider.getGroups(user);\n      } catch (Exception e) {\n        LOG.warn(\"Unable to get groups for user {} via {} because: {}\",\n            user, provider.getClass().getSimpleName(), e.toString());\n        LOG.debug(\"Stacktrace: \", e);\n      }        \n      if (groups !\u003d null \u0026\u0026 ! groups.isEmpty()) {\n        groupSet.addAll(groups);\n        if (!combined) break;\n      }\n    }\n\n    List\u003cString\u003e results \u003d new ArrayList\u003cString\u003e(groupSet.size());\n    results.addAll(groupSet);\n    return results;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java",
      "extendedDetails": {}
    },
    "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8943. Support multiple group mapping providers. Contributed by Kai Zheng\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/06/14 10:14 AM",
      "commitName": "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,20 @@\n+  public synchronized List\u003cString\u003e getGroups(String user) throws IOException {\n+    Set\u003cString\u003e groupSet \u003d new TreeSet\u003cString\u003e();\n+\n+    List\u003cString\u003e groups \u003d null;\n+    for (GroupMappingServiceProvider provider : providersList) {\n+      try {\n+        groups \u003d provider.getGroups(user);\n+      } catch (Exception e) {\n+        //LOG.warn(\"Exception trying to get groups for user \" + user, e);      \n+      }        \n+      if (groups !\u003d null \u0026\u0026 ! groups.isEmpty()) {\n+        groupSet.addAll(groups);\n+        if (!combined) break;\n+      }\n+    }\n+\n+    List\u003cString\u003e results \u003d new ArrayList\u003cString\u003e(groupSet.size());\n+    results.addAll(groupSet);\n+    return results;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized List\u003cString\u003e getGroups(String user) throws IOException {\n    Set\u003cString\u003e groupSet \u003d new TreeSet\u003cString\u003e();\n\n    List\u003cString\u003e groups \u003d null;\n    for (GroupMappingServiceProvider provider : providersList) {\n      try {\n        groups \u003d provider.getGroups(user);\n      } catch (Exception e) {\n        //LOG.warn(\"Exception trying to get groups for user \" + user, e);      \n      }        \n      if (groups !\u003d null \u0026\u0026 ! groups.isEmpty()) {\n        groupSet.addAll(groups);\n        if (!combined) break;\n      }\n    }\n\n    List\u003cString\u003e results \u003d new ArrayList\u003cString\u003e(groupSet.size());\n    results.addAll(groupSet);\n    return results;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java"
    }
  }
}