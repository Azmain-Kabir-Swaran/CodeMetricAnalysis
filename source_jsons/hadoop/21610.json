{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContextFactory.java",
  "functionName": "cloneMapContext",
  "functionId": "cloneMapContext___context-MapContext__K1,V1,K2,V2____conf-Configuration__reader-RecordReader__K1,V1____writer-RecordWriter__K2,V2__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/ContextFactory.java",
  "functionStartLine": 196,
  "functionEndLine": 242,
  "numCommitsSeen": 3,
  "timeTaken": 424,
  "changeHistory": [
    "4f97e37648a2e70eb87346d88261fb042142bf9a"
  ],
  "changeHistoryShort": {
    "4f97e37648a2e70eb87346d88261fb042142bf9a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4f97e37648a2e70eb87346d88261fb042142bf9a": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3138. Add a utility to help applications bridge changes in Context Objects APIs due to MAPREDUCE-954. Contributed by omalley.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1178650 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/10/11 5:42 PM",
      "commitName": "4f97e37648a2e70eb87346d88261fb042142bf9a",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,47 @@\n+       cloneMapContext(MapContext\u003cK1,V1,K2,V2\u003e context,\n+                       Configuration conf,\n+                       RecordReader\u003cK1,V1\u003e reader,\n+                       RecordWriter\u003cK2,V2\u003e writer\n+                      ) throws IOException, InterruptedException {\n+    try {\n+      // get the outer object pointer\n+      Object outer \u003d OUTER_MAP_FIELD.get(context);\n+      // if it is a wrapped 21 context, unwrap it\n+      if (\"org.apache.hadoop.mapreduce.lib.map.WrappedMapper$Context\".equals\n+            (context.getClass().getName())) {\n+        context \u003d (MapContext\u003cK1,V1,K2,V2\u003e) WRAPPED_CONTEXT_FIELD.get(context);\n+      }\n+      // if the reader or writer aren\u0027t given, use the same ones\n+      if (reader \u003d\u003d null) {\n+        reader \u003d (RecordReader\u003cK1,V1\u003e) READER_FIELD.get(context);\n+      }\n+      if (writer \u003d\u003d null) {\n+        writer \u003d (RecordWriter\u003cK2,V2\u003e) WRITER_FIELD.get(context);\n+      }\n+      if (useV21) {\n+        Object basis \u003d \n+          MAP_CONTEXT_IMPL_CONSTRUCTOR.newInstance(conf, \n+                                                   context.getTaskAttemptID(),\n+                                                   reader, writer,\n+                                                   context.getOutputCommitter(),\n+                                                   REPORTER_FIELD.get(context),\n+                                                   context.getInputSplit());\n+        return (Mapper.Context) \n+          MAP_CONTEXT_CONSTRUCTOR.newInstance(outer, basis);\n+      } else {\n+        return (Mapper.Context)\n+          MAP_CONTEXT_CONSTRUCTOR.newInstance(outer,\n+                                              conf, context.getTaskAttemptID(),\n+                                              reader, writer,\n+                                              context.getOutputCommitter(),\n+                                              REPORTER_FIELD.get(context),\n+                                              context.getInputSplit());\n+      }\n+    } catch (IllegalAccessException e) {\n+      throw new IllegalArgumentException(\"Can\u0027t access field\", e);\n+    } catch (InstantiationException e) {\n+      throw new IllegalArgumentException(\"Can\u0027t create object\", e);\n+    } catch (InvocationTargetException e) {\n+      throw new IllegalArgumentException(\"Can\u0027t invoke constructor\", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "       cloneMapContext(MapContext\u003cK1,V1,K2,V2\u003e context,\n                       Configuration conf,\n                       RecordReader\u003cK1,V1\u003e reader,\n                       RecordWriter\u003cK2,V2\u003e writer\n                      ) throws IOException, InterruptedException {\n    try {\n      // get the outer object pointer\n      Object outer \u003d OUTER_MAP_FIELD.get(context);\n      // if it is a wrapped 21 context, unwrap it\n      if (\"org.apache.hadoop.mapreduce.lib.map.WrappedMapper$Context\".equals\n            (context.getClass().getName())) {\n        context \u003d (MapContext\u003cK1,V1,K2,V2\u003e) WRAPPED_CONTEXT_FIELD.get(context);\n      }\n      // if the reader or writer aren\u0027t given, use the same ones\n      if (reader \u003d\u003d null) {\n        reader \u003d (RecordReader\u003cK1,V1\u003e) READER_FIELD.get(context);\n      }\n      if (writer \u003d\u003d null) {\n        writer \u003d (RecordWriter\u003cK2,V2\u003e) WRITER_FIELD.get(context);\n      }\n      if (useV21) {\n        Object basis \u003d \n          MAP_CONTEXT_IMPL_CONSTRUCTOR.newInstance(conf, \n                                                   context.getTaskAttemptID(),\n                                                   reader, writer,\n                                                   context.getOutputCommitter(),\n                                                   REPORTER_FIELD.get(context),\n                                                   context.getInputSplit());\n        return (Mapper.Context) \n          MAP_CONTEXT_CONSTRUCTOR.newInstance(outer, basis);\n      } else {\n        return (Mapper.Context)\n          MAP_CONTEXT_CONSTRUCTOR.newInstance(outer,\n                                              conf, context.getTaskAttemptID(),\n                                              reader, writer,\n                                              context.getOutputCommitter(),\n                                              REPORTER_FIELD.get(context),\n                                              context.getInputSplit());\n      }\n    } catch (IllegalAccessException e) {\n      throw new IllegalArgumentException(\"Can\u0027t access field\", e);\n    } catch (InstantiationException e) {\n      throw new IllegalArgumentException(\"Can\u0027t create object\", e);\n    } catch (InvocationTargetException e) {\n      throw new IllegalArgumentException(\"Can\u0027t invoke constructor\", e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/ContextFactory.java"
    }
  }
}