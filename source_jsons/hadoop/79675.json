{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FTPFileSystem.java",
  "functionName": "delete",
  "functionId": "delete___client-FTPClient__file-Path__recursive-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
  "functionStartLine": 416,
  "functionEndLine": 438,
  "numCommitsSeen": 25,
  "timeTaken": 1421,
  "changeHistory": [
    "bbd6a3277678a60d472e76a207f25a916220946c",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "7578282edce0eba3f24c96355c944c02156ece79",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "bbd6a3277678a60d472e76a207f25a916220946c": "Ybodychange",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "7578282edce0eba3f24c96355c944c02156ece79": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbd6a3277678a60d472e76a207f25a916220946c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10482. Fix various findbugs warnings in hadoop-common. Contributed by Haohui Mai.\n",
      "commitDate": "10/12/14 12:44 PM",
      "commitName": "bbd6a3277678a60d472e76a207f25a916220946c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "03/07/14 5:04 AM",
      "commitNameOld": "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 160.36,
      "commitsBetweenForRepo": 1472,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   private boolean delete(FTPClient client, Path file, boolean recursive)\n       throws IOException {\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     String pathName \u003d absolute.toUri().getPath();\n     try {\n       FileStatus fileStat \u003d getFileStatus(client, absolute);\n       if (fileStat.isFile()) {\n         return client.deleteFile(pathName);\n       }\n     } catch (FileNotFoundException e) {\n       //the file is not there\n       return false;\n     }\n     FileStatus[] dirEntries \u003d listStatus(client, absolute);\n     if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n       throw new IOException(\"Directory: \" + file + \" is not empty.\");\n     }\n-    if (dirEntries !\u003d null) {\n-      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n-        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n-      }\n+    for (FileStatus dirEntry : dirEntries) {\n+      delete(client, new Path(absolute, dirEntry.getPath()), recursive);\n     }\n     return client.removeDirectory(pathName);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean delete(FTPClient client, Path file, boolean recursive)\n      throws IOException {\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.toUri().getPath();\n    try {\n      FileStatus fileStat \u003d getFileStatus(client, absolute);\n      if (fileStat.isFile()) {\n        return client.deleteFile(pathName);\n      }\n    } catch (FileNotFoundException e) {\n      //the file is not there\n      return false;\n    }\n    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n    }\n    for (FileStatus dirEntry : dirEntries) {\n      delete(client, new Path(absolute, dirEntry.getPath()), recursive);\n    }\n    return client.removeDirectory(pathName);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9361: Strictly define FileSystem APIs\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:04 AM",
      "commitName": "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "09/01/13 3:30 PM",
      "commitNameOld": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 539.52,
      "commitsBetweenForRepo": 3454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   private boolean delete(FTPClient client, Path file, boolean recursive)\n       throws IOException {\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     String pathName \u003d absolute.toUri().getPath();\n-    FileStatus fileStat \u003d getFileStatus(client, absolute);\n-    if (fileStat.isFile()) {\n-      return client.deleteFile(pathName);\n+    try {\n+      FileStatus fileStat \u003d getFileStatus(client, absolute);\n+      if (fileStat.isFile()) {\n+        return client.deleteFile(pathName);\n+      }\n+    } catch (FileNotFoundException e) {\n+      //the file is not there\n+      return false;\n     }\n     FileStatus[] dirEntries \u003d listStatus(client, absolute);\n     if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n       throw new IOException(\"Directory: \" + file + \" is not empty.\");\n     }\n     if (dirEntries !\u003d null) {\n       for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n         delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n       }\n     }\n     return client.removeDirectory(pathName);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean delete(FTPClient client, Path file, boolean recursive)\n      throws IOException {\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.toUri().getPath();\n    try {\n      FileStatus fileStat \u003d getFileStatus(client, absolute);\n      if (fileStat.isFile()) {\n        return client.deleteFile(pathName);\n      }\n    } catch (FileNotFoundException e) {\n      //the file is not there\n      return false;\n    }\n    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n    }\n    if (dirEntries !\u003d null) {\n      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n      }\n    }\n    return client.removeDirectory(pathName);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean delete(FTPClient client, Path file, boolean recursive)\n      throws IOException {\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.toUri().getPath();\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isFile()) {\n      return client.deleteFile(pathName);\n    }\n    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n    }\n    if (dirEntries !\u003d null) {\n      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n      }\n    }\n    return client.removeDirectory(pathName);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean delete(FTPClient client, Path file, boolean recursive)\n      throws IOException {\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.toUri().getPath();\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isFile()) {\n      return client.deleteFile(pathName);\n    }\n    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n    }\n    if (dirEntries !\u003d null) {\n      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n      }\n    }\n    return client.removeDirectory(pathName);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean delete(FTPClient client, Path file, boolean recursive)\n      throws IOException {\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.toUri().getPath();\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isFile()) {\n      return client.deleteFile(pathName);\n    }\n    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n    }\n    if (dirEntries !\u003d null) {\n      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n      }\n    }\n    return client.removeDirectory(pathName);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "7578282edce0eba3f24c96355c944c02156ece79": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6585.  Add FileStatus#isDirectory and isFile.  Contributed by Eli Collins.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@949658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/10 8:14 PM",
      "commitName": "7578282edce0eba3f24c96355c944c02156ece79",
      "commitAuthor": "Thomas White",
      "commitDateOld": "15/06/09 1:28 PM",
      "commitNameOld": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 349.28,
      "commitsBetweenForRepo": 338,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private boolean delete(FTPClient client, Path file, boolean recursive)\n       throws IOException {\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     String pathName \u003d absolute.toUri().getPath();\n     FileStatus fileStat \u003d getFileStatus(client, absolute);\n-    if (!fileStat.isDir()) {\n+    if (fileStat.isFile()) {\n       return client.deleteFile(pathName);\n     }\n     FileStatus[] dirEntries \u003d listStatus(client, absolute);\n     if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n       throw new IOException(\"Directory: \" + file + \" is not empty.\");\n     }\n     if (dirEntries !\u003d null) {\n       for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n         delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n       }\n     }\n     return client.removeDirectory(pathName);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean delete(FTPClient client, Path file, boolean recursive)\n      throws IOException {\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.toUri().getPath();\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isFile()) {\n      return client.deleteFile(pathName);\n    }\n    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n    }\n    if (dirEntries !\u003d null) {\n      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n      }\n    }\n    return client.removeDirectory(pathName);\n  }",
      "path": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,20 @@\n+  private boolean delete(FTPClient client, Path file, boolean recursive)\n+      throws IOException {\n+    Path workDir \u003d new Path(client.printWorkingDirectory());\n+    Path absolute \u003d makeAbsolute(workDir, file);\n+    String pathName \u003d absolute.toUri().getPath();\n+    FileStatus fileStat \u003d getFileStatus(client, absolute);\n+    if (!fileStat.isDir()) {\n+      return client.deleteFile(pathName);\n+    }\n+    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n+    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n+      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n+    }\n+    if (dirEntries !\u003d null) {\n+      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n+        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n+      }\n+    }\n+    return client.removeDirectory(pathName);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean delete(FTPClient client, Path file, boolean recursive)\n      throws IOException {\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    String pathName \u003d absolute.toUri().getPath();\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (!fileStat.isDir()) {\n      return client.deleteFile(pathName);\n    }\n    FileStatus[] dirEntries \u003d listStatus(client, absolute);\n    if (dirEntries !\u003d null \u0026\u0026 dirEntries.length \u003e 0 \u0026\u0026 !(recursive)) {\n      throw new IOException(\"Directory: \" + file + \" is not empty.\");\n    }\n    if (dirEntries !\u003d null) {\n      for (int i \u003d 0; i \u003c dirEntries.length; i++) {\n        delete(client, new Path(absolute, dirEntries[i].getPath()), recursive);\n      }\n    }\n    return client.removeDirectory(pathName);\n  }",
      "path": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
    }
  }
}