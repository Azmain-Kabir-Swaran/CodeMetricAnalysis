{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SystemServiceManagerImpl.java",
  "functionName": "launchUserService",
  "functionId": "launchUserService___userServices-Map__String,Set__Service____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java",
  "functionStartLine": 159,
  "functionEndLine": 199,
  "numCommitsSeen": 5,
  "timeTaken": 1454,
  "changeHistory": [
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "d4e63ccca0763b452e4a0169dd932b3f32066281"
  ],
  "changeHistoryShort": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "d4e63ccca0763b452e4a0169dd932b3f32066281": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void launchUserService(Map\u003cString, Set\u003cService\u003e\u003e userServices) {\n    for (Map.Entry\u003cString, Set\u003cService\u003e\u003e entry : userServices.entrySet()) {\n      String user \u003d entry.getKey();\n      Set\u003cService\u003e services \u003d entry.getValue();\n      if (services.isEmpty()) {\n        continue;\n      }\n      ServiceClient serviceClient \u003d null;\n      try {\n        UserGroupInformation userUgi \u003d getProxyUser(user);\n        serviceClient \u003d createServiceClient(userUgi);\n        for (Service service : services) {\n          LOG.info(\"POST: createService \u003d {} user \u003d {}\", service, userUgi);\n          try {\n            launchServices(userUgi, serviceClient, service);\n          } catch (IOException | UndeclaredThrowableException e) {\n            if (e.getCause() !\u003d null) {\n              LOG.warn(e.getCause().getMessage());\n            } else {\n              String message \u003d\n                  \"Failed to create service \" + service.getName() + \" : \";\n              LOG.error(message, e);\n            }\n          }\n        }\n      } catch (InterruptedException e) {\n        LOG.warn(\"System service launcher thread interrupted\", e);\n        break;\n      } catch (Exception e) {\n        LOG.error(\"Error while submitting services for user \" + user, e);\n      } finally {\n        if (serviceClient !\u003d null) {\n          try {\n            serviceClient.close();\n          } catch (IOException e) {\n            LOG.warn(\"Error while closing serviceClient for user {}\", user);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java"
      }
    },
    "d4e63ccca0763b452e4a0169dd932b3f32066281": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8048. Support auto-spawning of admin configured services during bootstrap of RM (Rohith Sharma K S via wangda)\n\nChange-Id: I2d8d61ccad55e1118009294d7e17822df3cd0fd5\n",
      "commitDate": "06/04/18 9:24 PM",
      "commitName": "d4e63ccca0763b452e4a0169dd932b3f32066281",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,41 @@\n+  void launchUserService(Map\u003cString, Set\u003cService\u003e\u003e userServices) {\n+    for (Map.Entry\u003cString, Set\u003cService\u003e\u003e entry : userServices.entrySet()) {\n+      String user \u003d entry.getKey();\n+      Set\u003cService\u003e services \u003d entry.getValue();\n+      if (services.isEmpty()) {\n+        continue;\n+      }\n+      ServiceClient serviceClient \u003d null;\n+      try {\n+        UserGroupInformation userUgi \u003d getProxyUser(user);\n+        serviceClient \u003d createServiceClient(userUgi);\n+        for (Service service : services) {\n+          LOG.info(\"POST: createService \u003d {} user \u003d {}\", service, userUgi);\n+          try {\n+            launchServices(userUgi, serviceClient, service);\n+          } catch (IOException | UndeclaredThrowableException e) {\n+            if (e.getCause() !\u003d null) {\n+              LOG.warn(e.getCause().getMessage());\n+            } else {\n+              String message \u003d\n+                  \"Failed to create service \" + service.getName() + \" : \";\n+              LOG.error(message, e);\n+            }\n+          }\n+        }\n+      } catch (InterruptedException e) {\n+        LOG.warn(\"System service launcher thread interrupted\", e);\n+        break;\n+      } catch (Exception e) {\n+        LOG.error(\"Error while submitting services for user \" + user, e);\n+      } finally {\n+        if (serviceClient !\u003d null) {\n+          try {\n+            serviceClient.close();\n+          } catch (IOException e) {\n+            LOG.warn(\"Error while closing serviceClient for user {}\", user);\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void launchUserService(Map\u003cString, Set\u003cService\u003e\u003e userServices) {\n    for (Map.Entry\u003cString, Set\u003cService\u003e\u003e entry : userServices.entrySet()) {\n      String user \u003d entry.getKey();\n      Set\u003cService\u003e services \u003d entry.getValue();\n      if (services.isEmpty()) {\n        continue;\n      }\n      ServiceClient serviceClient \u003d null;\n      try {\n        UserGroupInformation userUgi \u003d getProxyUser(user);\n        serviceClient \u003d createServiceClient(userUgi);\n        for (Service service : services) {\n          LOG.info(\"POST: createService \u003d {} user \u003d {}\", service, userUgi);\n          try {\n            launchServices(userUgi, serviceClient, service);\n          } catch (IOException | UndeclaredThrowableException e) {\n            if (e.getCause() !\u003d null) {\n              LOG.warn(e.getCause().getMessage());\n            } else {\n              String message \u003d\n                  \"Failed to create service \" + service.getName() + \" : \";\n              LOG.error(message, e);\n            }\n          }\n        }\n      } catch (InterruptedException e) {\n        LOG.warn(\"System service launcher thread interrupted\", e);\n        break;\n      } catch (Exception e) {\n        LOG.error(\"Error while submitting services for user \" + user, e);\n      } finally {\n        if (serviceClient !\u003d null) {\n          try {\n            serviceClient.close();\n          } catch (IOException e) {\n            LOG.warn(\"Error while closing serviceClient for user {}\", user);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java"
    }
  }
}