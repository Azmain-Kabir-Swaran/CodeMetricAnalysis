{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImage.java",
  "functionName": "checkUpgrade",
  "functionId": "checkUpgrade___storage-NNStorage",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
  "functionStartLine": 420,
  "functionEndLine": 430,
  "numCommitsSeen": 216,
  "timeTaken": 2697,
  "changeHistory": [
    "fddd55279d0bdd08b3b40aba6fe2ded1d2e0d846"
  ],
  "changeHistoryShort": {
    "fddd55279d0bdd08b3b40aba6fe2ded1d2e0d846": "Ymultichange(Yparameterchange,Ymodifierchange)"
  },
  "changeHistoryDetails": {
    "fddd55279d0bdd08b3b40aba6fe2ded1d2e0d846": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange)",
      "commitMessage": "HDFS-8127. NameNode Failover during HA upgrade can cause DataNode to finalize upgrade. Contributed by Jing Zhao.\n",
      "commitDate": "14/04/15 3:05 PM",
      "commitName": "fddd55279d0bdd08b3b40aba6fe2ded1d2e0d846",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8127. NameNode Failover during HA upgrade can cause DataNode to finalize upgrade. Contributed by Jing Zhao.\n",
          "commitDate": "14/04/15 3:05 PM",
          "commitName": "fddd55279d0bdd08b3b40aba6fe2ded1d2e0d846",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "09/04/15 10:42 PM",
          "commitNameOld": "987c9e12e184b35a5abab49f4188e22509ad63a5",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 4.68,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  void checkUpgrade(FSNamesystem target) throws IOException {\n+  public static void checkUpgrade(NNStorage storage) throws IOException {\n     // Upgrade or rolling upgrade is allowed only if there are \n     // no previous fs states in any of the local directories\n     for (Iterator\u003cStorageDirectory\u003e it \u003d storage.dirIterator(false); it.hasNext();) {\n       StorageDirectory sd \u003d it.next();\n       if (sd.getPreviousDir().exists())\n         throw new InconsistentFSStateException(sd.getRoot(),\n             \"previous fs state should not exist during upgrade. \"\n             + \"Finalize or rollback first.\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void checkUpgrade(NNStorage storage) throws IOException {\n    // Upgrade or rolling upgrade is allowed only if there are \n    // no previous fs states in any of the local directories\n    for (Iterator\u003cStorageDirectory\u003e it \u003d storage.dirIterator(false); it.hasNext();) {\n      StorageDirectory sd \u003d it.next();\n      if (sd.getPreviousDir().exists())\n        throw new InconsistentFSStateException(sd.getRoot(),\n            \"previous fs state should not exist during upgrade. \"\n            + \"Finalize or rollback first.\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[target-FSNamesystem]",
            "newValue": "[storage-NNStorage]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8127. NameNode Failover during HA upgrade can cause DataNode to finalize upgrade. Contributed by Jing Zhao.\n",
          "commitDate": "14/04/15 3:05 PM",
          "commitName": "fddd55279d0bdd08b3b40aba6fe2ded1d2e0d846",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "09/04/15 10:42 PM",
          "commitNameOld": "987c9e12e184b35a5abab49f4188e22509ad63a5",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 4.68,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  void checkUpgrade(FSNamesystem target) throws IOException {\n+  public static void checkUpgrade(NNStorage storage) throws IOException {\n     // Upgrade or rolling upgrade is allowed only if there are \n     // no previous fs states in any of the local directories\n     for (Iterator\u003cStorageDirectory\u003e it \u003d storage.dirIterator(false); it.hasNext();) {\n       StorageDirectory sd \u003d it.next();\n       if (sd.getPreviousDir().exists())\n         throw new InconsistentFSStateException(sd.getRoot(),\n             \"previous fs state should not exist during upgrade. \"\n             + \"Finalize or rollback first.\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void checkUpgrade(NNStorage storage) throws IOException {\n    // Upgrade or rolling upgrade is allowed only if there are \n    // no previous fs states in any of the local directories\n    for (Iterator\u003cStorageDirectory\u003e it \u003d storage.dirIterator(false); it.hasNext();) {\n      StorageDirectory sd \u003d it.next();\n      if (sd.getPreviousDir().exists())\n        throw new InconsistentFSStateException(sd.getRoot(),\n            \"previous fs state should not exist during upgrade. \"\n            + \"Finalize or rollback first.\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public, static]"
          }
        }
      ]
    }
  }
}