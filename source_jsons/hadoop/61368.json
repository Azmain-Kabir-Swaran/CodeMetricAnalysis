{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PlacementConstraintFromProtoConverter.java",
  "functionName": "convert",
  "functionId": "convert___proto-CompositePlacementConstraintProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/pb/PlacementConstraintFromProtoConverter.java",
  "functionStartLine": 89,
  "functionEndLine": 110,
  "numCommitsSeen": 2,
  "timeTaken": 516,
  "changeHistory": [
    "33a796d9b778bf7350e87a4e36ca30c925cf7036"
  ],
  "changeHistoryShort": {
    "33a796d9b778bf7350e87a4e36ca30c925cf7036": "Yintroduced"
  },
  "changeHistoryDetails": {
    "33a796d9b778bf7350e87a4e36ca30c925cf7036": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6593. [API] Introduce Placement Constraint object. (Konstantinos Karanasos via wangda)\n\nChange-Id: Id00edb7185fdf01cce6e40f920cac3585f8cbe9c\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "33a796d9b778bf7350e87a4e36ca30c925cf7036",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,22 @@\n+  private AbstractConstraint convert(CompositePlacementConstraintProto proto) {\n+    switch (proto.getCompositeType()) {\n+    case AND:\n+    case OR:\n+      List\u003cAbstractConstraint\u003e children \u003d new ArrayList\u003c\u003e();\n+      for (PlacementConstraintProto cp : proto.getChildConstraintsList()) {\n+        children.add(convert(cp));\n+      }\n+      return (proto.getCompositeType() \u003d\u003d AND) ? new And(children)\n+          : new Or(children);\n+    case DELAYED_OR:\n+      List\u003cTimedPlacementConstraint\u003e tChildren \u003d new ArrayList\u003c\u003e();\n+      for (TimedPlacementConstraintProto cp : proto\n+          .getTimedChildConstraintsList()) {\n+        tChildren.add(convert(cp));\n+      }\n+      return new DelayedOr(tChildren);\n+    default:\n+      throw new YarnRuntimeException(\n+          \"Encountered unexpected type of composite constraint.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private AbstractConstraint convert(CompositePlacementConstraintProto proto) {\n    switch (proto.getCompositeType()) {\n    case AND:\n    case OR:\n      List\u003cAbstractConstraint\u003e children \u003d new ArrayList\u003c\u003e();\n      for (PlacementConstraintProto cp : proto.getChildConstraintsList()) {\n        children.add(convert(cp));\n      }\n      return (proto.getCompositeType() \u003d\u003d AND) ? new And(children)\n          : new Or(children);\n    case DELAYED_OR:\n      List\u003cTimedPlacementConstraint\u003e tChildren \u003d new ArrayList\u003c\u003e();\n      for (TimedPlacementConstraintProto cp : proto\n          .getTimedChildConstraintsList()) {\n        tChildren.add(convert(cp));\n      }\n      return new DelayedOr(tChildren);\n    default:\n      throw new YarnRuntimeException(\n          \"Encountered unexpected type of composite constraint.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/pb/PlacementConstraintFromProtoConverter.java"
    }
  }
}