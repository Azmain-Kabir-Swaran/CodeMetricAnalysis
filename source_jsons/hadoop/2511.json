{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___entry-DiffReportListingEntry",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 2671,
  "functionEndLine": 2690,
  "numCommitsSeen": 80,
  "timeTaken": 2488,
  "changeHistory": [
    "b1c7654ee40b372ed777525a42981c7cf55b5c72"
  ],
  "changeHistoryShort": {
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12594. snapshotDiff fails if the report exceeds the RPC response limit. Contributed by Shashikant Banerjee\n",
      "commitDate": "30/11/17 12:18 PM",
      "commitName": "b1c7654ee40b372ed777525a42981c7cf55b5c72",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,20 @@\n+  public static SnapshotDiffReportListingEntryProto convert(\n+      DiffReportListingEntry entry) {\n+    if (entry \u003d\u003d null) {\n+      return null;\n+    }\n+    ByteString sourcePath \u003d getByteString(\n+        entry.getSourcePath() \u003d\u003d null ? DFSUtilClient.EMPTY_BYTES :\n+            DFSUtilClient.byteArray2bytes(entry.getSourcePath()));\n+    long dirId \u003d entry.getDirId();\n+    long fileId \u003d entry.getFileId();\n+    boolean isReference \u003d entry.isReference();\n+    ByteString targetPath \u003d getByteString(\n+        entry.getTargetPath() \u003d\u003d null ? DFSUtilClient.EMPTY_BYTES :\n+            DFSUtilClient.byteArray2bytes(entry.getTargetPath()));\n+    SnapshotDiffReportListingEntryProto.Builder builder \u003d\n+        SnapshotDiffReportListingEntryProto.newBuilder().setFullpath(sourcePath)\n+            .setDirId(dirId).setFileId(fileId).setIsReference(isReference)\n+            .setTargetPath(targetPath);\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static SnapshotDiffReportListingEntryProto convert(\n      DiffReportListingEntry entry) {\n    if (entry \u003d\u003d null) {\n      return null;\n    }\n    ByteString sourcePath \u003d getByteString(\n        entry.getSourcePath() \u003d\u003d null ? DFSUtilClient.EMPTY_BYTES :\n            DFSUtilClient.byteArray2bytes(entry.getSourcePath()));\n    long dirId \u003d entry.getDirId();\n    long fileId \u003d entry.getFileId();\n    boolean isReference \u003d entry.isReference();\n    ByteString targetPath \u003d getByteString(\n        entry.getTargetPath() \u003d\u003d null ? DFSUtilClient.EMPTY_BYTES :\n            DFSUtilClient.byteArray2bytes(entry.getTargetPath()));\n    SnapshotDiffReportListingEntryProto.Builder builder \u003d\n        SnapshotDiffReportListingEntryProto.newBuilder().setFullpath(sourcePath)\n            .setDirId(dirId).setFileId(fileId).setIsReference(isReference)\n            .setTargetPath(targetPath);\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java"
    }
  }
}