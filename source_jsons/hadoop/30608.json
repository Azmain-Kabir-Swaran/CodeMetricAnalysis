{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbTimelineStore.java",
  "functionName": "getEntityEvent",
  "functionId": "getEntityEvent___eventTypes-Set__String____key-byte[]__offset-int__value-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
  "functionStartLine": 1207,
  "functionEndLine": 1229,
  "numCommitsSeen": 26,
  "timeTaken": 2024,
  "changeHistory": [
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
    "84425fb435cb603fd8adcc2f76631c0244175310",
    "23b2e43f5d678517e33590d15dec73225b9c5682"
  ],
  "changeHistoryShort": {
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": "Yfilerename",
    "84425fb435cb603fd8adcc2f76631c0244175310": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
    "23b2e43f5d678517e33590d15dec73225b9c5682": "Yintroduced"
  },
  "changeHistoryDetails": {
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2107. Refactored timeline classes into o.a.h.y.s.timeline package. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/14 11:09 AM",
      "commitName": "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "28/05/14 10:44 AM",
      "commitNameOld": "cfd8647d0f20c08761f908be1f5b718c1c372498",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static TimelineEvent getEntityEvent(Set\u003cString\u003e eventTypes,\n      byte[] key, int offset, byte[] value) throws IOException {\n    KeyParser kp \u003d new KeyParser(key, offset);\n    long ts \u003d kp.getNextLong();\n    String tstype \u003d kp.getNextString();\n    if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n      TimelineEvent event \u003d new TimelineEvent();\n      event.setTimestamp(ts);\n      event.setEventType(tstype);\n      Object o \u003d GenericObjectMapper.read(value);\n      if (o \u003d\u003d null) {\n        event.setEventInfo(null);\n      } else if (o instanceof Map) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n        event.setEventInfo(m);\n      } else {\n        throw new IOException(\"Couldn\u0027t deserialize event info map\");\n      }\n      return event;\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java"
      }
    },
    "84425fb435cb603fd8adcc2f76631c0244175310": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 12:55 PM",
      "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  private static ATSEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n+  private static TimelineEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n       int offset, byte[] value) throws IOException {\n     KeyParser kp \u003d new KeyParser(key, offset);\n     long ts \u003d kp.getNextLong();\n     String tstype \u003d kp.getNextString();\n     if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n-      ATSEvent event \u003d new ATSEvent();\n+      TimelineEvent event \u003d new TimelineEvent();\n       event.setTimestamp(ts);\n       event.setEventType(tstype);\n       Object o \u003d GenericObjectMapper.read(value);\n       if (o \u003d\u003d null) {\n         event.setEventInfo(null);\n       } else if (o instanceof Map) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n         event.setEventInfo(m);\n       } else {\n         throw new IOException(\"Couldn\u0027t deserialize event info map\");\n       }\n       return event;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static TimelineEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n      int offset, byte[] value) throws IOException {\n    KeyParser kp \u003d new KeyParser(key, offset);\n    long ts \u003d kp.getNextLong();\n    String tstype \u003d kp.getNextString();\n    if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n      TimelineEvent event \u003d new TimelineEvent();\n      event.setTimestamp(ts);\n      event.setEventType(tstype);\n      Object o \u003d GenericObjectMapper.read(value);\n      if (o \u003d\u003d null) {\n        event.setEventInfo(null);\n      } else if (o instanceof Map) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n        event.setEventInfo(m);\n      } else {\n        throw new IOException(\"Couldn\u0027t deserialize event info map\");\n      }\n      return event;\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/apptimeline/LeveldbApplicationTimelineStore.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  private static ATSEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n+  private static TimelineEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n       int offset, byte[] value) throws IOException {\n     KeyParser kp \u003d new KeyParser(key, offset);\n     long ts \u003d kp.getNextLong();\n     String tstype \u003d kp.getNextString();\n     if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n-      ATSEvent event \u003d new ATSEvent();\n+      TimelineEvent event \u003d new TimelineEvent();\n       event.setTimestamp(ts);\n       event.setEventType(tstype);\n       Object o \u003d GenericObjectMapper.read(value);\n       if (o \u003d\u003d null) {\n         event.setEventInfo(null);\n       } else if (o instanceof Map) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n         event.setEventInfo(m);\n       } else {\n         throw new IOException(\"Couldn\u0027t deserialize event info map\");\n       }\n       return event;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static TimelineEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n      int offset, byte[] value) throws IOException {\n    KeyParser kp \u003d new KeyParser(key, offset);\n    long ts \u003d kp.getNextLong();\n    String tstype \u003d kp.getNextString();\n    if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n      TimelineEvent event \u003d new TimelineEvent();\n      event.setTimestamp(ts);\n      event.setEventType(tstype);\n      Object o \u003d GenericObjectMapper.read(value);\n      if (o \u003d\u003d null) {\n        event.setEventInfo(null);\n      } else if (o instanceof Map) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n        event.setEventInfo(m);\n      } else {\n        throw new IOException(\"Couldn\u0027t deserialize event info map\");\n      }\n      return event;\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {
            "oldValue": "ATSEvent",
            "newValue": "TimelineEvent"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  private static ATSEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n+  private static TimelineEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n       int offset, byte[] value) throws IOException {\n     KeyParser kp \u003d new KeyParser(key, offset);\n     long ts \u003d kp.getNextLong();\n     String tstype \u003d kp.getNextString();\n     if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n-      ATSEvent event \u003d new ATSEvent();\n+      TimelineEvent event \u003d new TimelineEvent();\n       event.setTimestamp(ts);\n       event.setEventType(tstype);\n       Object o \u003d GenericObjectMapper.read(value);\n       if (o \u003d\u003d null) {\n         event.setEventInfo(null);\n       } else if (o instanceof Map) {\n         @SuppressWarnings(\"unchecked\")\n         Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n         event.setEventInfo(m);\n       } else {\n         throw new IOException(\"Couldn\u0027t deserialize event info map\");\n       }\n       return event;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static TimelineEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n      int offset, byte[] value) throws IOException {\n    KeyParser kp \u003d new KeyParser(key, offset);\n    long ts \u003d kp.getNextLong();\n    String tstype \u003d kp.getNextString();\n    if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n      TimelineEvent event \u003d new TimelineEvent();\n      event.setTimestamp(ts);\n      event.setEventType(tstype);\n      Object o \u003d GenericObjectMapper.read(value);\n      if (o \u003d\u003d null) {\n        event.setEventInfo(null);\n      } else if (o instanceof Map) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n        event.setEventInfo(m);\n      } else {\n        throw new IOException(\"Couldn\u0027t deserialize event info map\");\n      }\n      return event;\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "23b2e43f5d678517e33590d15dec73225b9c5682": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1635. Implemented a Leveldb based ApplicationTimelineStore. Contributed by Billie Rinaldi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1565868 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/14 6:15 PM",
      "commitName": "23b2e43f5d678517e33590d15dec73225b9c5682",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,23 @@\n+  private static ATSEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n+      int offset, byte[] value) throws IOException {\n+    KeyParser kp \u003d new KeyParser(key, offset);\n+    long ts \u003d kp.getNextLong();\n+    String tstype \u003d kp.getNextString();\n+    if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n+      ATSEvent event \u003d new ATSEvent();\n+      event.setTimestamp(ts);\n+      event.setEventType(tstype);\n+      Object o \u003d GenericObjectMapper.read(value);\n+      if (o \u003d\u003d null) {\n+        event.setEventInfo(null);\n+      } else if (o instanceof Map) {\n+        @SuppressWarnings(\"unchecked\")\n+        Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n+        event.setEventInfo(m);\n+      } else {\n+        throw new IOException(\"Couldn\u0027t deserialize event info map\");\n+      }\n+      return event;\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ATSEvent getEntityEvent(Set\u003cString\u003e eventTypes, byte[] key,\n      int offset, byte[] value) throws IOException {\n    KeyParser kp \u003d new KeyParser(key, offset);\n    long ts \u003d kp.getNextLong();\n    String tstype \u003d kp.getNextString();\n    if (eventTypes \u003d\u003d null || eventTypes.contains(tstype)) {\n      ATSEvent event \u003d new ATSEvent();\n      event.setTimestamp(ts);\n      event.setEventType(tstype);\n      Object o \u003d GenericObjectMapper.read(value);\n      if (o \u003d\u003d null) {\n        event.setEventInfo(null);\n      } else if (o instanceof Map) {\n        @SuppressWarnings(\"unchecked\")\n        Map\u003cString, Object\u003e m \u003d (Map\u003cString, Object\u003e) o;\n        event.setEventInfo(m);\n      } else {\n        throw new IOException(\"Couldn\u0027t deserialize event info map\");\n      }\n      return event;\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/apptimeline/LeveldbApplicationTimelineStore.java"
    }
  }
}