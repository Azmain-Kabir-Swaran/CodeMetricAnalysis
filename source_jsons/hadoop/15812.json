{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CheckUploadContentTypeFilter.java",
  "functionName": "doFilter",
  "functionId": "doFilter___request-ServletRequest__response-ServletResponse__chain-FilterChain",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/CheckUploadContentTypeFilter.java",
  "functionStartLine": 77,
  "functionEndLine": 104,
  "numCommitsSeen": 8,
  "timeTaken": 1175,
  "changeHistory": [
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
    "9cedad11d8d2197a54732667a15344983de5c437",
    "946456c6d88780abe0251b098dd771e9e1e93ab3",
    "d263653ae22217439d1740c936d1c78e1644d73e",
    "6b4f40cbf913c048fb33da6c5d8271cd77766d0a"
  ],
  "changeHistoryShort": {
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": "Ybodychange",
    "9cedad11d8d2197a54732667a15344983de5c437": "Ybodychange",
    "946456c6d88780abe0251b098dd771e9e1e93ab3": "Ybodychange",
    "d263653ae22217439d1740c936d1c78e1644d73e": "Ybodychange",
    "6b4f40cbf913c048fb33da6c5d8271cd77766d0a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "02/03/15 9:17 PM",
      "commitName": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public void doFilter(ServletRequest request, ServletResponse response,\n                        FilterChain chain)\n     throws IOException, ServletException {\n     boolean contentTypeOK \u003d true;\n     HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n     HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n     String method \u003d httpReq.getMethod();\n     if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n       String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n-      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n+      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(\n+          StringUtils.toUpperCase(op))) {\n         if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n           String contentType \u003d httpReq.getContentType();\n           contentTypeOK \u003d\n             HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n         }\n       }\n     }\n     if (contentTypeOK) {\n       chain.doFilter(httpReq, httpRes);\n     }\n     else {\n       httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                         \"Data upload requests must have content-type set to \u0027\" +\n                         HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void doFilter(ServletRequest request, ServletResponse response,\n                       FilterChain chain)\n    throws IOException, ServletException {\n    boolean contentTypeOK \u003d true;\n    HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n    HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n    String method \u003d httpReq.getMethod();\n    if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n      String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(\n          StringUtils.toUpperCase(op))) {\n        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n          String contentType \u003d httpReq.getContentType();\n          contentTypeOK \u003d\n            HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n        }\n      }\n    }\n    if (contentTypeOK) {\n      chain.doFilter(httpReq, httpRes);\n    }\n    else {\n      httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                        \"Data upload requests must have content-type set to \u0027\" +\n                        HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/CheckUploadContentTypeFilter.java",
      "extendedDetails": {}
    },
    "9cedad11d8d2197a54732667a15344983de5c437": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\"\n\nThis reverts commit 946456c6d88780abe0251b098dd771e9e1e93ab3.\n\nConflicts:\n\thadoop-common-project/hadoop-common/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/QuotaByStorageTypeEntry.java\n",
      "commitDate": "24/02/15 7:32 AM",
      "commitName": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "18/02/15 8:06 PM",
      "commitNameOld": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 5.48,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n   public void doFilter(ServletRequest request, ServletResponse response,\n                        FilterChain chain)\n     throws IOException, ServletException {\n     boolean contentTypeOK \u003d true;\n     HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n     HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n     String method \u003d httpReq.getMethod();\n     if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n       String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n-      if (op !\u003d null \u0026\u0026\n-          UPLOAD_OPERATIONS.contains(op.toUpperCase(Locale.ENGLISH))) {\n+      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n         if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n           String contentType \u003d httpReq.getContentType();\n           contentTypeOK \u003d\n             HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n         }\n       }\n     }\n     if (contentTypeOK) {\n       chain.doFilter(httpReq, httpRes);\n     }\n     else {\n       httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                         \"Data upload requests must have content-type set to \u0027\" +\n                         HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void doFilter(ServletRequest request, ServletResponse response,\n                       FilterChain chain)\n    throws IOException, ServletException {\n    boolean contentTypeOK \u003d true;\n    HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n    HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n    String method \u003d httpReq.getMethod();\n    if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n      String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n          String contentType \u003d httpReq.getContentType();\n          contentTypeOK \u003d\n            HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n        }\n      }\n    }\n    if (contentTypeOK) {\n      chain.doFilter(httpReq, httpRes);\n    }\n    else {\n      httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                        \"Data upload requests must have content-type set to \u0027\" +\n                        HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/CheckUploadContentTypeFilter.java",
      "extendedDetails": {}
    },
    "946456c6d88780abe0251b098dd771e9e1e93ab3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "18/02/15 8:06 PM",
      "commitName": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "10/12/14 2:54 PM",
      "commitNameOld": "92916ae4876e4e24f85b22ccf9418f347d8d9666",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 70.22,
      "commitsBetweenForRepo": 530,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public void doFilter(ServletRequest request, ServletResponse response,\n                        FilterChain chain)\n     throws IOException, ServletException {\n     boolean contentTypeOK \u003d true;\n     HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n     HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n     String method \u003d httpReq.getMethod();\n     if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n       String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n-      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n+      if (op !\u003d null \u0026\u0026\n+          UPLOAD_OPERATIONS.contains(op.toUpperCase(Locale.ENGLISH))) {\n         if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n           String contentType \u003d httpReq.getContentType();\n           contentTypeOK \u003d\n             HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n         }\n       }\n     }\n     if (contentTypeOK) {\n       chain.doFilter(httpReq, httpRes);\n     }\n     else {\n       httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                         \"Data upload requests must have content-type set to \u0027\" +\n                         HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void doFilter(ServletRequest request, ServletResponse response,\n                       FilterChain chain)\n    throws IOException, ServletException {\n    boolean contentTypeOK \u003d true;\n    HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n    HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n    String method \u003d httpReq.getMethod();\n    if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n      String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n      if (op !\u003d null \u0026\u0026\n          UPLOAD_OPERATIONS.contains(op.toUpperCase(Locale.ENGLISH))) {\n        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n          String contentType \u003d httpReq.getContentType();\n          contentTypeOK \u003d\n            HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n        }\n      }\n    }\n    if (contentTypeOK) {\n      chain.doFilter(httpReq, httpRes);\n    }\n    else {\n      httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                        \"Data upload requests must have content-type set to \u0027\" +\n                        HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/CheckUploadContentTypeFilter.java",
      "extendedDetails": {}
    },
    "d263653ae22217439d1740c936d1c78e1644d73e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3481. Refactor HttpFS handling of JAX-RS query string parameters (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1354599 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/12 9:06 AM",
      "commitName": "d263653ae22217439d1740c936d1c78e1644d73e",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "20/12/11 9:26 PM",
      "commitNameOld": "6b4f40cbf913c048fb33da6c5d8271cd77766d0a",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 189.44,
      "commitsBetweenForRepo": 1228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void doFilter(ServletRequest request, ServletResponse response,\n                        FilterChain chain)\n     throws IOException, ServletException {\n     boolean contentTypeOK \u003d true;\n     HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n     HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n     String method \u003d httpReq.getMethod();\n     if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n       String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n       if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n-        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParams.DataParam.NAME))) {\n+        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n           String contentType \u003d httpReq.getContentType();\n           contentTypeOK \u003d\n             HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n         }\n       }\n     }\n     if (contentTypeOK) {\n       chain.doFilter(httpReq, httpRes);\n     }\n     else {\n       httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                         \"Data upload requests must have content-type set to \u0027\" +\n                         HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void doFilter(ServletRequest request, ServletResponse response,\n                       FilterChain chain)\n    throws IOException, ServletException {\n    boolean contentTypeOK \u003d true;\n    HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n    HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n    String method \u003d httpReq.getMethod();\n    if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n      String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParametersProvider.DataParam.NAME))) {\n          String contentType \u003d httpReq.getContentType();\n          contentTypeOK \u003d\n            HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n        }\n      }\n    }\n    if (contentTypeOK) {\n      chain.doFilter(httpReq, httpRes);\n    }\n    else {\n      httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                        \"Data upload requests must have content-type set to \u0027\" +\n                        HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/CheckUploadContentTypeFilter.java",
      "extendedDetails": {}
    },
    "6b4f40cbf913c048fb33da6c5d8271cd77766d0a": {
      "type": "Yintroduced",
      "commitMessage": "HttpFS server should check that upload requests have correct content-type. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1221616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/11 9:26 PM",
      "commitName": "6b4f40cbf913c048fb33da6c5d8271cd77766d0a",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,27 @@\n+  public void doFilter(ServletRequest request, ServletResponse response,\n+                       FilterChain chain)\n+    throws IOException, ServletException {\n+    boolean contentTypeOK \u003d true;\n+    HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n+    HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n+    String method \u003d httpReq.getMethod();\n+    if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n+      String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n+      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n+        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParams.DataParam.NAME))) {\n+          String contentType \u003d httpReq.getContentType();\n+          contentTypeOK \u003d\n+            HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n+        }\n+      }\n+    }\n+    if (contentTypeOK) {\n+      chain.doFilter(httpReq, httpRes);\n+    }\n+    else {\n+      httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n+                        \"Data upload requests must have content-type set to \u0027\" +\n+                        HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n+\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void doFilter(ServletRequest request, ServletResponse response,\n                       FilterChain chain)\n    throws IOException, ServletException {\n    boolean contentTypeOK \u003d true;\n    HttpServletRequest httpReq \u003d (HttpServletRequest) request;\n    HttpServletResponse httpRes \u003d (HttpServletResponse) response;\n    String method \u003d httpReq.getMethod();\n    if (method.equals(\"PUT\") || method.equals(\"POST\")) {\n      String op \u003d httpReq.getParameter(HttpFSFileSystem.OP_PARAM);\n      if (op !\u003d null \u0026\u0026 UPLOAD_OPERATIONS.contains(op.toUpperCase())) {\n        if (\"true\".equalsIgnoreCase(httpReq.getParameter(HttpFSParams.DataParam.NAME))) {\n          String contentType \u003d httpReq.getContentType();\n          contentTypeOK \u003d\n            HttpFSFileSystem.UPLOAD_CONTENT_TYPE.equalsIgnoreCase(contentType);\n        }\n      }\n    }\n    if (contentTypeOK) {\n      chain.doFilter(httpReq, httpRes);\n    }\n    else {\n      httpRes.sendError(HttpServletResponse.SC_BAD_REQUEST,\n                        \"Data upload requests must have content-type set to \u0027\" +\n                        HttpFSFileSystem.UPLOAD_CONTENT_TYPE + \"\u0027\");\n\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/CheckUploadContentTypeFilter.java"
    }
  }
}