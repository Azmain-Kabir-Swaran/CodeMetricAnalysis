{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppSchedulingInfo.java",
  "functionName": "addSchedulingRequests",
  "functionId": "addSchedulingRequests___recoverPreemptedRequestForAContainer-boolean__schedulingRequests-List__SchedulingRequest__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
  "functionStartLine": 263,
  "functionEndLine": 290,
  "numCommitsSeen": 80,
  "timeTaken": 2625,
  "changeHistory": [
    "38af23796971193fa529c3d08ffde8fcd6e607b6"
  ],
  "changeHistoryShort": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,28 @@\n+  private boolean addSchedulingRequests(\n+      boolean recoverPreemptedRequestForAContainer,\n+      List\u003cSchedulingRequest\u003e schedulingRequests) {\n+    // Do we need to update pending resource for app/queue, etc.?\n+    boolean requireUpdatePendingResource \u003d false;\n+\n+    for (SchedulingRequest request : schedulingRequests) {\n+      SchedulerRequestKey schedulerRequestKey \u003d SchedulerRequestKey.create(\n+          request);\n+\n+      AppPlacementAllocator appPlacementAllocator \u003d\n+          getAndAddAppPlacementAllocatorIfNotExist(schedulerRequestKey,\n+              SingleConstraintAppPlacementAllocator.class.getCanonicalName());\n+\n+      // Update AppPlacementAllocator\n+      PendingAskUpdateResult pendingAmountChanges \u003d\n+          appPlacementAllocator.updatePendingAsk(schedulerRequestKey,\n+              request, recoverPreemptedRequestForAContainer);\n+\n+      if (null !\u003d pendingAmountChanges) {\n+        updatePendingResources(pendingAmountChanges, schedulerRequestKey,\n+            queue.getMetrics());\n+        requireUpdatePendingResource \u003d true;\n+      }\n+    }\n+\n+    return requireUpdatePendingResource;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean addSchedulingRequests(\n      boolean recoverPreemptedRequestForAContainer,\n      List\u003cSchedulingRequest\u003e schedulingRequests) {\n    // Do we need to update pending resource for app/queue, etc.?\n    boolean requireUpdatePendingResource \u003d false;\n\n    for (SchedulingRequest request : schedulingRequests) {\n      SchedulerRequestKey schedulerRequestKey \u003d SchedulerRequestKey.create(\n          request);\n\n      AppPlacementAllocator appPlacementAllocator \u003d\n          getAndAddAppPlacementAllocatorIfNotExist(schedulerRequestKey,\n              SingleConstraintAppPlacementAllocator.class.getCanonicalName());\n\n      // Update AppPlacementAllocator\n      PendingAskUpdateResult pendingAmountChanges \u003d\n          appPlacementAllocator.updatePendingAsk(schedulerRequestKey,\n              request, recoverPreemptedRequestForAContainer);\n\n      if (null !\u003d pendingAmountChanges) {\n        updatePendingResources(pendingAmountChanges, schedulerRequestKey,\n            queue.getMetrics());\n        requireUpdatePendingResource \u003d true;\n      }\n    }\n\n    return requireUpdatePendingResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
    }
  }
}