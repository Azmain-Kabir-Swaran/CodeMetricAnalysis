{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EntityGroupFSTimelineStore.java",
  "functionName": "getEntities",
  "functionId": "getEntities___entityType-String__limit-Long__windowStart-Long__windowEnd-Long__fromId-String__fromTs-Long__primaryFilter-NameValuePair__secondaryFilters-Collection__NameValuePair____fieldsToRetrieve-EnumSet__Field____checkAcl-CheckAcl",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
  "functionStartLine": 1063,
  "functionEndLine": 1082,
  "numCommitsSeen": 17,
  "timeTaken": 1568,
  "changeHistory": [
    "7f3c306e2ed9e865171324898decb9b587d90e73",
    "705286ccaeea36941d97ec1c1700746b74264924",
    "02f597c5db36ded385413958bdee793ad7eda40e"
  ],
  "changeHistoryShort": {
    "7f3c306e2ed9e865171324898decb9b587d90e73": "Ybodychange",
    "705286ccaeea36941d97ec1c1700746b74264924": "Ybodychange",
    "02f597c5db36ded385413958bdee793ad7eda40e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f3c306e2ed9e865171324898decb9b587d90e73": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5432. Lock already held by another process while LevelDB cache store creation for dag. Contributed by Li Lu.\n",
      "commitDate": "28/07/16 6:35 AM",
      "commitName": "7f3c306e2ed9e865171324898decb9b587d90e73",
      "commitAuthor": "Junping Du",
      "commitDateOld": "07/07/16 10:37 PM",
      "commitNameOld": "673e5e02feba9171498a518c06ae70639c5f8854",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.33,
      "commitsBetweenForRepo": 249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   public TimelineEntities getEntities(String entityType, Long limit,\n       Long windowStart, Long windowEnd, String fromId, Long fromTs,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve, CheckAcl checkAcl) throws IOException {\n     LOG.debug(\"getEntities type\u003d{} primary\u003d{}\", entityType, primaryFilter);\n     List\u003cEntityCacheItem\u003e relatedCacheItems \u003d new ArrayList\u003c\u003e();\n     List\u003cTimelineStore\u003e stores \u003d getTimelineStoresForRead(entityType,\n         primaryFilter, secondaryFilters, relatedCacheItems);\n     TimelineEntities returnEntities \u003d new TimelineEntities();\n     for (TimelineStore store : stores) {\n       LOG.debug(\"Try timeline store {} for the request\", store.getName());\n       TimelineEntities entities \u003d store.getEntities(entityType, limit,\n           windowStart, windowEnd, fromId, fromTs, primaryFilter,\n           secondaryFilters, fieldsToRetrieve, checkAcl);\n       if (entities !\u003d null) {\n         returnEntities.addEntities(entities.getEntities());\n       }\n     }\n-    tryReleaseCacheItems(relatedCacheItems);\n     return returnEntities;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntities getEntities(String entityType, Long limit,\n      Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve, CheckAcl checkAcl) throws IOException {\n    LOG.debug(\"getEntities type\u003d{} primary\u003d{}\", entityType, primaryFilter);\n    List\u003cEntityCacheItem\u003e relatedCacheItems \u003d new ArrayList\u003c\u003e();\n    List\u003cTimelineStore\u003e stores \u003d getTimelineStoresForRead(entityType,\n        primaryFilter, secondaryFilters, relatedCacheItems);\n    TimelineEntities returnEntities \u003d new TimelineEntities();\n    for (TimelineStore store : stores) {\n      LOG.debug(\"Try timeline store {} for the request\", store.getName());\n      TimelineEntities entities \u003d store.getEntities(entityType, limit,\n          windowStart, windowEnd, fromId, fromTs, primaryFilter,\n          secondaryFilters, fieldsToRetrieve, checkAcl);\n      if (entities !\u003d null) {\n        returnEntities.addEntities(entities.getEntities());\n      }\n    }\n    return returnEntities;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
      "extendedDetails": {}
    },
    "705286ccaeea36941d97ec1c1700746b74264924": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4987. Read cache concurrency issue between read and evict in EntityGroupFS timeline store. Contributed by Li Lu.\n",
      "commitDate": "27/05/16 6:58 AM",
      "commitName": "705286ccaeea36941d97ec1c1700746b74264924",
      "commitAuthor": "Junping Du",
      "commitDateOld": "03/05/16 4:16 AM",
      "commitNameOld": "06413da72efed9a50e49efaf7110c220c88a7f4a",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 24.11,
      "commitsBetweenForRepo": 182,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,21 @@\n   public TimelineEntities getEntities(String entityType, Long limit,\n       Long windowStart, Long windowEnd, String fromId, Long fromTs,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve, CheckAcl checkAcl) throws IOException {\n     LOG.debug(\"getEntities type\u003d{} primary\u003d{}\", entityType, primaryFilter);\n+    List\u003cEntityCacheItem\u003e relatedCacheItems \u003d new ArrayList\u003c\u003e();\n     List\u003cTimelineStore\u003e stores \u003d getTimelineStoresForRead(entityType,\n-        primaryFilter, secondaryFilters);\n+        primaryFilter, secondaryFilters, relatedCacheItems);\n     TimelineEntities returnEntities \u003d new TimelineEntities();\n     for (TimelineStore store : stores) {\n       LOG.debug(\"Try timeline store {} for the request\", store.getName());\n-      returnEntities.addEntities(\n-          store.getEntities(entityType, limit, windowStart, windowEnd, fromId,\n-              fromTs, primaryFilter, secondaryFilters, fieldsToRetrieve,\n-              checkAcl).getEntities());\n+      TimelineEntities entities \u003d store.getEntities(entityType, limit,\n+          windowStart, windowEnd, fromId, fromTs, primaryFilter,\n+          secondaryFilters, fieldsToRetrieve, checkAcl);\n+      if (entities !\u003d null) {\n+        returnEntities.addEntities(entities.getEntities());\n+      }\n     }\n+    tryReleaseCacheItems(relatedCacheItems);\n     return returnEntities;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntities getEntities(String entityType, Long limit,\n      Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve, CheckAcl checkAcl) throws IOException {\n    LOG.debug(\"getEntities type\u003d{} primary\u003d{}\", entityType, primaryFilter);\n    List\u003cEntityCacheItem\u003e relatedCacheItems \u003d new ArrayList\u003c\u003e();\n    List\u003cTimelineStore\u003e stores \u003d getTimelineStoresForRead(entityType,\n        primaryFilter, secondaryFilters, relatedCacheItems);\n    TimelineEntities returnEntities \u003d new TimelineEntities();\n    for (TimelineStore store : stores) {\n      LOG.debug(\"Try timeline store {} for the request\", store.getName());\n      TimelineEntities entities \u003d store.getEntities(entityType, limit,\n          windowStart, windowEnd, fromId, fromTs, primaryFilter,\n          secondaryFilters, fieldsToRetrieve, checkAcl);\n      if (entities !\u003d null) {\n        returnEntities.addEntities(entities.getEntities());\n      }\n    }\n    tryReleaseCacheItems(relatedCacheItems);\n    return returnEntities;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
      "extendedDetails": {}
    },
    "02f597c5db36ded385413958bdee793ad7eda40e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4265. Provide new timeline plugin storage to support fine-grained entity caching. Contributed by Li Lu and Jason Lowe\n",
      "commitDate": "17/01/16 5:37 PM",
      "commitName": "02f597c5db36ded385413958bdee793ad7eda40e",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,17 @@\n+  public TimelineEntities getEntities(String entityType, Long limit,\n+      Long windowStart, Long windowEnd, String fromId, Long fromTs,\n+      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n+      EnumSet\u003cField\u003e fieldsToRetrieve, CheckAcl checkAcl) throws IOException {\n+    LOG.debug(\"getEntities type\u003d{} primary\u003d{}\", entityType, primaryFilter);\n+    List\u003cTimelineStore\u003e stores \u003d getTimelineStoresForRead(entityType,\n+        primaryFilter, secondaryFilters);\n+    TimelineEntities returnEntities \u003d new TimelineEntities();\n+    for (TimelineStore store : stores) {\n+      LOG.debug(\"Try timeline store {} for the request\", store.getName());\n+      returnEntities.addEntities(\n+          store.getEntities(entityType, limit, windowStart, windowEnd, fromId,\n+              fromTs, primaryFilter, secondaryFilters, fieldsToRetrieve,\n+              checkAcl).getEntities());\n+    }\n+    return returnEntities;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineEntities getEntities(String entityType, Long limit,\n      Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve, CheckAcl checkAcl) throws IOException {\n    LOG.debug(\"getEntities type\u003d{} primary\u003d{}\", entityType, primaryFilter);\n    List\u003cTimelineStore\u003e stores \u003d getTimelineStoresForRead(entityType,\n        primaryFilter, secondaryFilters);\n    TimelineEntities returnEntities \u003d new TimelineEntities();\n    for (TimelineStore store : stores) {\n      LOG.debug(\"Try timeline store {} for the request\", store.getName());\n      returnEntities.addEntities(\n          store.getEntities(entityType, limit, windowStart, windowEnd, fromId,\n              fromTs, primaryFilter, secondaryFilters, fieldsToRetrieve,\n              checkAcl).getEntities());\n    }\n    return returnEntities;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java"
    }
  }
}