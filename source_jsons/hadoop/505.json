{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeaseRenewer.java",
  "functionName": "renew",
  "functionId": "renew",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
  "functionStartLine": 380,
  "functionEndLine": 404,
  "numCommitsSeen": 30,
  "timeTaken": 6333,
  "changeHistory": [
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "39285e6a1978ea5e53bdc1b0aef62421382124a8",
    "6ee0539ede78b640f01c5eac18ded161182a7835",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
    "520a39ac2daf86c0d67fff1b67f5f8d63e65114c",
    "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": "Ybodychange",
    "6ee0539ede78b640f01c5eac18ded161182a7835": "Ybodychange",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3": "Yfilerename",
    "520a39ac2daf86c0d67fff1b67f5f8d63e65114c": "Ybodychange",
    "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:52 PM",
      "commitNameOld": "39285e6a1978ea5e53bdc1b0aef62421382124a8",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.74,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   private void renew() throws IOException {\n     final List\u003cDFSClient\u003e copies;\n     synchronized(this) {\n-      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n+      copies \u003d new ArrayList\u003c\u003e(dfsclients);\n     }\n     //sort the client names for finding out repeated names.\n     Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n       @Override\n       public int compare(final DFSClient left, final DFSClient right) {\n         return left.getClientName().compareTo(right.getClientName());\n       }\n     });\n     String previousName \u003d \"\";\n-    for(int i \u003d 0; i \u003c copies.size(); i++) {\n-      final DFSClient c \u003d copies.get(i);\n+    for (final DFSClient c : copies) {\n       //skip if current client name is the same as the previous name.\n       if (!c.getClientName().equals(previousName)) {\n         if (!c.renewLease()) {\n           LOG.debug(\"Did not renew lease for client {}\", c);\n           continue;\n         }\n         previousName \u003d c.getClientName();\n         LOG.debug(\"Lease renewed for client {}\", previousName);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003c\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for (final DFSClient c : copies) {\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        if (!c.renewLease()) {\n          LOG.debug(\"Did not renew lease for client {}\", c);\n          continue;\n        }\n        previousName \u003d c.getClientName();\n        LOG.debug(\"Lease renewed for client {}\", previousName);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8971. Remove guards when calling LOG.debug() and LOG.trace() in client package. Contributed by Mingliang Liu.\n",
      "commitDate": "29/09/15 5:52 PM",
      "commitName": "39285e6a1978ea5e53bdc1b0aef62421382124a8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:51 PM",
      "commitNameOld": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,26 @@\n   private void renew() throws IOException {\n     final List\u003cDFSClient\u003e copies;\n     synchronized(this) {\n       copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n     }\n     //sort the client names for finding out repeated names.\n     Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n       @Override\n       public int compare(final DFSClient left, final DFSClient right) {\n         return left.getClientName().compareTo(right.getClientName());\n       }\n     });\n     String previousName \u003d \"\";\n     for(int i \u003d 0; i \u003c copies.size(); i++) {\n       final DFSClient c \u003d copies.get(i);\n       //skip if current client name is the same as the previous name.\n       if (!c.getClientName().equals(previousName)) {\n         if (!c.renewLease()) {\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Did not renew lease for client \" +\n-                c);\n-          }\n+          LOG.debug(\"Did not renew lease for client {}\", c);\n           continue;\n         }\n         previousName \u003d c.getClientName();\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Lease renewed for client \" + previousName);\n-        }\n+        LOG.debug(\"Lease renewed for client {}\", previousName);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        if (!c.renewLease()) {\n          LOG.debug(\"Did not renew lease for client {}\", c);\n          continue;\n        }\n        previousName \u003d c.getClientName();\n        LOG.debug(\"Lease renewed for client {}\", previousName);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "6ee0539ede78b640f01c5eac18ded161182a7835": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\"\n\nThis reverts commit d5a9a3daa0224249221ffa7b8bd5751ab2feca56.\n",
      "commitDate": "29/09/15 5:51 PM",
      "commitName": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:48 PM",
      "commitNameOld": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,31 @@\n   private void renew() throws IOException {\n     final List\u003cDFSClient\u003e copies;\n     synchronized(this) {\n       copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n     }\n     //sort the client names for finding out repeated names.\n     Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n       @Override\n       public int compare(final DFSClient left, final DFSClient right) {\n         return left.getClientName().compareTo(right.getClientName());\n       }\n     });\n     String previousName \u003d \"\";\n     for(int i \u003d 0; i \u003c copies.size(); i++) {\n       final DFSClient c \u003d copies.get(i);\n       //skip if current client name is the same as the previous name.\n       if (!c.getClientName().equals(previousName)) {\n         if (!c.renewLease()) {\n-          LOG.debug(\"Did not renew lease for client {}\", c);\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Did not renew lease for client \" +\n+                c);\n+          }\n           continue;\n         }\n         previousName \u003d c.getClientName();\n-        LOG.debug(\"Lease renewed for client {}\", previousName);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Lease renewed for client \" + previousName);\n+        }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        if (!c.renewLease()) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Did not renew lease for client \" +\n                c);\n          }\n          continue;\n        }\n        previousName \u003d c.getClientName();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Lease renewed for client \" + previousName);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "29/09/15 5:48 PM",
      "commitName": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 11:08 AM",
      "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.28,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,26 @@\n   private void renew() throws IOException {\n     final List\u003cDFSClient\u003e copies;\n     synchronized(this) {\n       copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n     }\n     //sort the client names for finding out repeated names.\n     Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n       @Override\n       public int compare(final DFSClient left, final DFSClient right) {\n         return left.getClientName().compareTo(right.getClientName());\n       }\n     });\n     String previousName \u003d \"\";\n     for(int i \u003d 0; i \u003c copies.size(); i++) {\n       final DFSClient c \u003d copies.get(i);\n       //skip if current client name is the same as the previous name.\n       if (!c.getClientName().equals(previousName)) {\n         if (!c.renewLease()) {\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Did not renew lease for client \" +\n-                c);\n-          }\n+          LOG.debug(\"Did not renew lease for client {}\", c);\n           continue;\n         }\n         previousName \u003d c.getClientName();\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Lease renewed for client \" + previousName);\n-        }\n+        LOG.debug(\"Lease renewed for client {}\", previousName);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        if (!c.renewLease()) {\n          LOG.debug(\"Did not renew lease for client {}\", c);\n          continue;\n        }\n        previousName \u003d c.getClientName();\n        LOG.debug(\"Lease renewed for client {}\", previousName);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        if (!c.renewLease()) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Did not renew lease for client \" +\n                c);\n          }\n          continue;\n        }\n        previousName \u003d c.getClientName();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Lease renewed for client \" + previousName);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java"
      }
    },
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8086. Move LeaseRenewer to the hdfs.client.impl package.  Contributed by Takanobu\n",
      "commitDate": "01/05/15 3:12 PM",
      "commitName": "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "01/05/15 2:43 PM",
      "commitNameOld": "64d30a61867e5cb0a2acaa7ae4fa4d3eb3be8edd",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        if (!c.renewLease()) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Did not renew lease for client \" +\n                c);\n          }\n          continue;\n        }\n        previousName \u003d c.getClientName();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Lease renewed for client \" + previousName);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/LeaseRenewer.java"
      }
    },
    "520a39ac2daf86c0d67fff1b67f5f8d63e65114c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2810. Leases not getting renewed properly by clients. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233794 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 11:26 PM",
      "commitName": "520a39ac2daf86c0d67fff1b67f5f8d63e65114c",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "19/01/12 8:35 AM",
      "commitNameOld": "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.62,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,31 @@\n   private void renew() throws IOException {\n     final List\u003cDFSClient\u003e copies;\n     synchronized(this) {\n       copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n     }\n     //sort the client names for finding out repeated names.\n     Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n       @Override\n       public int compare(final DFSClient left, final DFSClient right) {\n         return left.getClientName().compareTo(right.getClientName());\n       }\n     });\n     String previousName \u003d \"\";\n     for(int i \u003d 0; i \u003c copies.size(); i++) {\n       final DFSClient c \u003d copies.get(i);\n       //skip if current client name is the same as the previous name.\n       if (!c.getClientName().equals(previousName)) {\n-        c.renewLease();\n+        if (!c.renewLease()) {\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Did not renew lease for client \" +\n+                c);\n+          }\n+          continue;\n+        }\n         previousName \u003d c.getClientName();\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Lease renewed for client \" + previousName);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        if (!c.renewLease()) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Did not renew lease for client \" +\n                c);\n          }\n          continue;\n        }\n        previousName \u003d c.getClientName();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Lease renewed for client \" + previousName);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2803. Add logging to LeaseRenewer for better lease expiration debugging. Contributed by Jimmy Xiang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233453 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 8:35 AM",
      "commitName": "1d2e706dd1e4b0cab5595ab57f21b38abb01fda9",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "04/09/11 12:30 PM",
      "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 136.88,
      "commitsBetweenForRepo": 856,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   private void renew() throws IOException {\n     final List\u003cDFSClient\u003e copies;\n     synchronized(this) {\n       copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n     }\n     //sort the client names for finding out repeated names.\n     Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n       @Override\n       public int compare(final DFSClient left, final DFSClient right) {\n         return left.getClientName().compareTo(right.getClientName());\n       }\n     });\n     String previousName \u003d \"\";\n     for(int i \u003d 0; i \u003c copies.size(); i++) {\n       final DFSClient c \u003d copies.get(i);\n       //skip if current client name is the same as the previous name.\n       if (!c.getClientName().equals(previousName)) {\n         c.renewLease();\n         previousName \u003d c.getClientName();\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Lease renewed for client \" + previousName);\n+        }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        c.renewLease();\n        previousName \u003d c.getClientName();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Lease renewed for client \" + previousName);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        c.renewLease();\n        previousName \u003d c.getClientName();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        c.renewLease();\n        previousName \u003d c.getClientName();\n      }\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/LeaseRenewer.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/LeaseRenewer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,22 @@\n+  private void renew() throws IOException {\n+    final List\u003cDFSClient\u003e copies;\n+    synchronized(this) {\n+      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n+    }\n+    //sort the client names for finding out repeated names.\n+    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n+      @Override\n+      public int compare(final DFSClient left, final DFSClient right) {\n+        return left.getClientName().compareTo(right.getClientName());\n+      }\n+    });\n+    String previousName \u003d \"\";\n+    for(int i \u003d 0; i \u003c copies.size(); i++) {\n+      final DFSClient c \u003d copies.get(i);\n+      //skip if current client name is the same as the previous name.\n+      if (!c.getClientName().equals(previousName)) {\n+        c.renewLease();\n+        previousName \u003d c.getClientName();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void renew() throws IOException {\n    final List\u003cDFSClient\u003e copies;\n    synchronized(this) {\n      copies \u003d new ArrayList\u003cDFSClient\u003e(dfsclients);\n    }\n    //sort the client names for finding out repeated names.\n    Collections.sort(copies, new Comparator\u003cDFSClient\u003e() {\n      @Override\n      public int compare(final DFSClient left, final DFSClient right) {\n        return left.getClientName().compareTo(right.getClientName());\n      }\n    });\n    String previousName \u003d \"\";\n    for(int i \u003d 0; i \u003c copies.size(); i++) {\n      final DFSClient c \u003d copies.get(i);\n      //skip if current client name is the same as the previous name.\n      if (!c.getClientName().equals(previousName)) {\n        c.renewLease();\n        previousName \u003d c.getClientName();\n      }\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/LeaseRenewer.java"
    }
  }
}