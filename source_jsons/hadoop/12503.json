{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Dispatcher.java",
  "functionName": "init",
  "functionId": "init",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
  "functionStartLine": 1107,
  "functionEndLine": 1122,
  "numCommitsSeen": 50,
  "timeTaken": 2705,
  "changeHistory": [
    "1de25d134f64d815f9b43606fa426ece5ddbc430",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658",
    "c3cf331dc91e2beef2afeed11105084843b02858"
  ],
  "changeHistoryShort": {
    "1de25d134f64d815f9b43606fa426ece5ddbc430": "Ybodychange",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": "Ymodifierchange",
    "c3cf331dc91e2beef2afeed11105084843b02858": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1de25d134f64d815f9b43606fa426ece5ddbc430": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9596. Remove Shuffle Method From DFSUtil. Contributed by BELUGA BEHR.\n",
      "commitDate": "18/02/19 3:30 PM",
      "commitName": "1de25d134f64d815f9b43606fa426ece5ddbc430",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 165.07,
      "commitsBetweenForRepo": 1314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public List\u003cDatanodeStorageReport\u003e init() throws IOException {\n     final DatanodeStorageReport[] reports \u003d nnc.getLiveDatanodeStorageReport();\n     final List\u003cDatanodeStorageReport\u003e trimmed \u003d new ArrayList\u003cDatanodeStorageReport\u003e(); \n     // create network topology and classify utilization collections:\n     // over-utilized, above-average, below-average and under-utilized.\n-    for (DatanodeStorageReport r : DFSUtil.shuffle(reports)) {\n+    Collections.shuffle(Arrays.asList(reports));\n+    for (DatanodeStorageReport r : reports) {\n       final DatanodeInfo datanode \u003d r.getDatanodeInfo();\n       if (shouldIgnore(datanode)) {\n         continue;\n       }\n       trimmed.add(r);\n       cluster.add(datanode);\n     }\n     return trimmed;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cDatanodeStorageReport\u003e init() throws IOException {\n    final DatanodeStorageReport[] reports \u003d nnc.getLiveDatanodeStorageReport();\n    final List\u003cDatanodeStorageReport\u003e trimmed \u003d new ArrayList\u003cDatanodeStorageReport\u003e(); \n    // create network topology and classify utilization collections:\n    // over-utilized, above-average, below-average and under-utilized.\n    Collections.shuffle(Arrays.asList(reports));\n    for (DatanodeStorageReport r : reports) {\n      final DatanodeInfo datanode \u003d r.getDatanodeInfo();\n      if (shouldIgnore(datanode)) {\n        continue;\n      }\n      trimmed.add(r);\n      cluster.add(datanode);\n    }\n    return trimmed;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6801. Archival Storage: Add a new data migration tool. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1618675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/14 10:51 AM",
      "commitName": "5d5aae0694bc27df5b9fa50819854cd3050a8658",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "13/08/14 11:43 AM",
      "commitNameOld": "195961a7c1da86421761162836766b1de07930fd",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 4.96,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-  List\u003cDatanodeStorageReport\u003e init() throws IOException {\n+  public List\u003cDatanodeStorageReport\u003e init() throws IOException {\n     final DatanodeStorageReport[] reports \u003d nnc.getLiveDatanodeStorageReport();\n     final List\u003cDatanodeStorageReport\u003e trimmed \u003d new ArrayList\u003cDatanodeStorageReport\u003e(); \n     // create network topology and classify utilization collections:\n     // over-utilized, above-average, below-average and under-utilized.\n     for (DatanodeStorageReport r : DFSUtil.shuffle(reports)) {\n       final DatanodeInfo datanode \u003d r.getDatanodeInfo();\n       if (shouldIgnore(datanode)) {\n         continue;\n       }\n       trimmed.add(r);\n       cluster.add(datanode);\n     }\n     return trimmed;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cDatanodeStorageReport\u003e init() throws IOException {\n    final DatanodeStorageReport[] reports \u003d nnc.getLiveDatanodeStorageReport();\n    final List\u003cDatanodeStorageReport\u003e trimmed \u003d new ArrayList\u003cDatanodeStorageReport\u003e(); \n    // create network topology and classify utilization collections:\n    // over-utilized, above-average, below-average and under-utilized.\n    for (DatanodeStorageReport r : DFSUtil.shuffle(reports)) {\n      final DatanodeInfo datanode \u003d r.getDatanodeInfo();\n      if (shouldIgnore(datanode)) {\n        continue;\n      }\n      trimmed.add(r);\n      cluster.add(datanode);\n    }\n    return trimmed;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "c3cf331dc91e2beef2afeed11105084843b02858": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:33 PM",
      "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,15 @@\n+  List\u003cDatanodeStorageReport\u003e init() throws IOException {\n+    final DatanodeStorageReport[] reports \u003d nnc.getLiveDatanodeStorageReport();\n+    final List\u003cDatanodeStorageReport\u003e trimmed \u003d new ArrayList\u003cDatanodeStorageReport\u003e(); \n+    // create network topology and classify utilization collections:\n+    // over-utilized, above-average, below-average and under-utilized.\n+    for (DatanodeStorageReport r : DFSUtil.shuffle(reports)) {\n+      final DatanodeInfo datanode \u003d r.getDatanodeInfo();\n+      if (shouldIgnore(datanode)) {\n+        continue;\n+      }\n+      trimmed.add(r);\n+      cluster.add(datanode);\n+    }\n+    return trimmed;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cDatanodeStorageReport\u003e init() throws IOException {\n    final DatanodeStorageReport[] reports \u003d nnc.getLiveDatanodeStorageReport();\n    final List\u003cDatanodeStorageReport\u003e trimmed \u003d new ArrayList\u003cDatanodeStorageReport\u003e(); \n    // create network topology and classify utilization collections:\n    // over-utilized, above-average, below-average and under-utilized.\n    for (DatanodeStorageReport r : DFSUtil.shuffle(reports)) {\n      final DatanodeInfo datanode \u003d r.getDatanodeInfo();\n      if (shouldIgnore(datanode)) {\n        continue;\n      }\n      trimmed.add(r);\n      cluster.add(datanode);\n    }\n    return trimmed;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java"
    }
  }
}