{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "getDeadNodes",
  "functionId": "getDeadNodes___dfsInputStream-DFSInputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 3293,
  "functionEndLine": 3311,
  "numCommitsSeen": 97,
  "timeTaken": 1293,
  "changeHistory": [
    "b3119b9ab60a19d624db476c4e1c53410870c7a6"
  ],
  "changeHistoryShort": {
    "b3119b9ab60a19d624db476c4e1c53410870c7a6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3119b9ab60a19d624db476c4e1c53410870c7a6": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14648. Implement DeadNodeDetector basic model. Contributed by Lisheng Sun.\n",
      "commitDate": "15/11/19 7:32 PM",
      "commitName": "b3119b9ab60a19d624db476c4e1c53410870c7a6",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,19 @@\n+  public ConcurrentHashMap\u003cDatanodeInfo, DatanodeInfo\u003e getDeadNodes(\n+      DFSInputStream dfsInputStream) {\n+    if (clientContext.isDeadNodeDetectionEnabled()) {\n+      ConcurrentHashMap\u003cDatanodeInfo, DatanodeInfo\u003e deadNodes \u003d\n+          new ConcurrentHashMap\u003cDatanodeInfo, DatanodeInfo\u003e();\n+      if (dfsInputStream !\u003d null) {\n+        deadNodes.putAll(dfsInputStream.getLocalDeadNodes());\n+      }\n+\n+      Set\u003cDatanodeInfo\u003e detectDeadNodes \u003d\n+          clientContext.getDeadNodeDetector().clearAndGetDetectedDeadNodes();\n+      for (DatanodeInfo detectDeadNode : detectDeadNodes) {\n+        deadNodes.put(detectDeadNode, detectDeadNode);\n+      }\n+      return deadNodes;\n+    } else {\n+      return dfsInputStream.getLocalDeadNodes();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ConcurrentHashMap\u003cDatanodeInfo, DatanodeInfo\u003e getDeadNodes(\n      DFSInputStream dfsInputStream) {\n    if (clientContext.isDeadNodeDetectionEnabled()) {\n      ConcurrentHashMap\u003cDatanodeInfo, DatanodeInfo\u003e deadNodes \u003d\n          new ConcurrentHashMap\u003cDatanodeInfo, DatanodeInfo\u003e();\n      if (dfsInputStream !\u003d null) {\n        deadNodes.putAll(dfsInputStream.getLocalDeadNodes());\n      }\n\n      Set\u003cDatanodeInfo\u003e detectDeadNodes \u003d\n          clientContext.getDeadNodeDetector().clearAndGetDetectedDeadNodes();\n      for (DatanodeInfo detectDeadNode : detectDeadNodes) {\n        deadNodes.put(detectDeadNode, detectDeadNode);\n      }\n      return deadNodes;\n    } else {\n      return dfsInputStream.getLocalDeadNodes();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}