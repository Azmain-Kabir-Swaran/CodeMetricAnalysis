{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientRMService.java",
  "functionName": "createRequestInterceptorChain",
  "functionId": "createRequestInterceptorChain",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/RouterClientRMService.java",
  "functionStartLine": 509,
  "functionEndLine": 549,
  "numCommitsSeen": 8,
  "timeTaken": 751,
  "changeHistory": [
    "80e1904000923819c98ae68456cb0452c255d5f3"
  ],
  "changeHistoryShort": {
    "80e1904000923819c98ae68456cb0452c255d5f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "80e1904000923819c98ae68456cb0452c255d5f3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5411. Create a proxy chain for ApplicationClientProtocol in the Router. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 4846069061b6baa06da3b524b9e36567dd368388)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "80e1904000923819c98ae68456cb0452c255d5f3",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,41 @@\n+  protected ClientRequestInterceptor createRequestInterceptorChain() {\n+    Configuration conf \u003d getConfig();\n+\n+    List\u003cString\u003e interceptorClassNames \u003d getInterceptorClassNames(conf);\n+\n+    ClientRequestInterceptor pipeline \u003d null;\n+    ClientRequestInterceptor current \u003d null;\n+    for (String interceptorClassName : interceptorClassNames) {\n+      try {\n+        Class\u003c?\u003e interceptorClass \u003d conf.getClassByName(interceptorClassName);\n+        if (ClientRequestInterceptor.class.isAssignableFrom(interceptorClass)) {\n+          ClientRequestInterceptor interceptorInstance \u003d\n+              (ClientRequestInterceptor) ReflectionUtils\n+                  .newInstance(interceptorClass, conf);\n+          if (pipeline \u003d\u003d null) {\n+            pipeline \u003d interceptorInstance;\n+            current \u003d interceptorInstance;\n+            continue;\n+          } else {\n+            current.setNextInterceptor(interceptorInstance);\n+            current \u003d interceptorInstance;\n+          }\n+        } else {\n+          throw new YarnRuntimeException(\n+              \"Class: \" + interceptorClassName + \" not instance of \"\n+                  + ClientRequestInterceptor.class.getCanonicalName());\n+        }\n+      } catch (ClassNotFoundException e) {\n+        throw new YarnRuntimeException(\n+            \"Could not instantiate ApplicationClientRequestInterceptor: \"\n+                + interceptorClassName,\n+            e);\n+      }\n+    }\n+\n+    if (pipeline \u003d\u003d null) {\n+      throw new YarnRuntimeException(\n+          \"RequestInterceptor pipeline is not configured in the system\");\n+    }\n+    return pipeline;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected ClientRequestInterceptor createRequestInterceptorChain() {\n    Configuration conf \u003d getConfig();\n\n    List\u003cString\u003e interceptorClassNames \u003d getInterceptorClassNames(conf);\n\n    ClientRequestInterceptor pipeline \u003d null;\n    ClientRequestInterceptor current \u003d null;\n    for (String interceptorClassName : interceptorClassNames) {\n      try {\n        Class\u003c?\u003e interceptorClass \u003d conf.getClassByName(interceptorClassName);\n        if (ClientRequestInterceptor.class.isAssignableFrom(interceptorClass)) {\n          ClientRequestInterceptor interceptorInstance \u003d\n              (ClientRequestInterceptor) ReflectionUtils\n                  .newInstance(interceptorClass, conf);\n          if (pipeline \u003d\u003d null) {\n            pipeline \u003d interceptorInstance;\n            current \u003d interceptorInstance;\n            continue;\n          } else {\n            current.setNextInterceptor(interceptorInstance);\n            current \u003d interceptorInstance;\n          }\n        } else {\n          throw new YarnRuntimeException(\n              \"Class: \" + interceptorClassName + \" not instance of \"\n                  + ClientRequestInterceptor.class.getCanonicalName());\n        }\n      } catch (ClassNotFoundException e) {\n        throw new YarnRuntimeException(\n            \"Could not instantiate ApplicationClientRequestInterceptor: \"\n                + interceptorClassName,\n            e);\n      }\n    }\n\n    if (pipeline \u003d\u003d null) {\n      throw new YarnRuntimeException(\n          \"RequestInterceptor pipeline is not configured in the system\");\n    }\n    return pipeline;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/RouterClientRMService.java"
    }
  }
}