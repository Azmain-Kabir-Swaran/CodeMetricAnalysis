{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClientCache.java",
  "functionName": "clientLoader",
  "functionId": "clientLoader",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
  "functionStartLine": 232,
  "functionEndLine": 253,
  "numCommitsSeen": 14,
  "timeTaken": 2589,
  "changeHistory": [
    "d6602b5f39833611b4afa4581552f6c4c37e23a8",
    "9eee97508f350ed4629abb04e7781514ffa04070",
    "1f7dd7811a1152d0a798524e831586eebbe110b6",
    "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0",
    "e4154fc83a5cf5207861f58f9e06f49f383aef43"
  ],
  "changeHistoryShort": {
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": "Ymultichange(Yreturntypechange,Ybodychange)",
    "9eee97508f350ed4629abb04e7781514ffa04070": "Ybodychange",
    "1f7dd7811a1152d0a798524e831586eebbe110b6": "Ybodychange",
    "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0": "Ybodychange",
    "e4154fc83a5cf5207861f58f9e06f49f383aef43": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
      "commitDate": "10/10/17 10:38 AM",
      "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/09/15 2:18 PM",
          "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 753.85,
          "commitsBetweenForRepo": 5078,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,22 @@\n-  private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n-    return new CacheLoader\u003cString, DFSClient\u003e() {\n+  private CacheLoader\u003cDfsClientKey, DFSClient\u003e clientLoader() {\n+    return new CacheLoader\u003cDfsClientKey, DFSClient\u003e() {\n       @Override\n-      public DFSClient load(String userName) throws Exception {\n+      public DFSClient load(final DfsClientKey key) throws Exception {\n         UserGroupInformation ugi \u003d getUserGroupInformation(\n-                userName,\n-                UserGroupInformation.getCurrentUser());\n+            key.userName, UserGroupInformation.getCurrentUser());\n \n         // Guava requires CacheLoader never returns null.\n         return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n           @Override\n           public DFSClient run() throws IOException {\n-            return new DFSClient(DFSUtilClient.getNNAddress(config), config);\n+            URI namenodeURI \u003d namenodeUriMap.get(key.namenodeId);\n+            if (namenodeURI \u003d\u003d null) {\n+              throw new IOException(\"No namenode URI found for user:\" +\n+                  key.userName + \" namenodeId:\" + key.namenodeId);\n+            }\n+            return new DFSClient(namenodeURI, config);\n           }\n         });\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CacheLoader\u003cDfsClientKey, DFSClient\u003e clientLoader() {\n    return new CacheLoader\u003cDfsClientKey, DFSClient\u003e() {\n      @Override\n      public DFSClient load(final DfsClientKey key) throws Exception {\n        UserGroupInformation ugi \u003d getUserGroupInformation(\n            key.userName, UserGroupInformation.getCurrentUser());\n\n        // Guava requires CacheLoader never returns null.\n        return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n          @Override\n          public DFSClient run() throws IOException {\n            URI namenodeURI \u003d namenodeUriMap.get(key.namenodeId);\n            if (namenodeURI \u003d\u003d null) {\n              throw new IOException(\"No namenode URI found for user:\" +\n                  key.userName + \" namenodeId:\" + key.namenodeId);\n            }\n            return new DFSClient(namenodeURI, config);\n          }\n        });\n      }\n    };\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {
            "oldValue": "CacheLoader\u003cString,DFSClient\u003e",
            "newValue": "CacheLoader\u003cDfsClientKey,DFSClient\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/09/15 2:18 PM",
          "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 753.85,
          "commitsBetweenForRepo": 5078,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,22 @@\n-  private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n-    return new CacheLoader\u003cString, DFSClient\u003e() {\n+  private CacheLoader\u003cDfsClientKey, DFSClient\u003e clientLoader() {\n+    return new CacheLoader\u003cDfsClientKey, DFSClient\u003e() {\n       @Override\n-      public DFSClient load(String userName) throws Exception {\n+      public DFSClient load(final DfsClientKey key) throws Exception {\n         UserGroupInformation ugi \u003d getUserGroupInformation(\n-                userName,\n-                UserGroupInformation.getCurrentUser());\n+            key.userName, UserGroupInformation.getCurrentUser());\n \n         // Guava requires CacheLoader never returns null.\n         return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n           @Override\n           public DFSClient run() throws IOException {\n-            return new DFSClient(DFSUtilClient.getNNAddress(config), config);\n+            URI namenodeURI \u003d namenodeUriMap.get(key.namenodeId);\n+            if (namenodeURI \u003d\u003d null) {\n+              throw new IOException(\"No namenode URI found for user:\" +\n+                  key.userName + \" namenodeId:\" + key.namenodeId);\n+            }\n+            return new DFSClient(namenodeURI, config);\n           }\n         });\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CacheLoader\u003cDfsClientKey, DFSClient\u003e clientLoader() {\n    return new CacheLoader\u003cDfsClientKey, DFSClient\u003e() {\n      @Override\n      public DFSClient load(final DfsClientKey key) throws Exception {\n        UserGroupInformation ugi \u003d getUserGroupInformation(\n            key.userName, UserGroupInformation.getCurrentUser());\n\n        // Guava requires CacheLoader never returns null.\n        return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n          @Override\n          public DFSClient run() throws IOException {\n            URI namenodeURI \u003d namenodeUriMap.get(key.namenodeId);\n            if (namenodeURI \u003d\u003d null) {\n              throw new IOException(\"No namenode URI found for user:\" +\n                  key.userName + \" namenodeId:\" + key.namenodeId);\n            }\n            return new DFSClient(namenodeURI, config);\n          }\n        });\n      }\n    };\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {}
        }
      ]
    },
    "9eee97508f350ed4629abb04e7781514ffa04070": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "17/09/15 2:18 PM",
      "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/10/14 9:27 PM",
      "commitNameOld": "d71d40a63d198991077d5babd70be5e9787a53f1",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 329.7,
      "commitsBetweenForRepo": 2539,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n     return new CacheLoader\u003cString, DFSClient\u003e() {\n       @Override\n       public DFSClient load(String userName) throws Exception {\n         UserGroupInformation ugi \u003d getUserGroupInformation(\n                 userName,\n                 UserGroupInformation.getCurrentUser());\n \n         // Guava requires CacheLoader never returns null.\n         return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n           @Override\n           public DFSClient run() throws IOException {\n-            return new DFSClient(NameNode.getAddress(config), config);\n+            return new DFSClient(DFSUtilClient.getNNAddress(config), config);\n           }\n         });\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n    return new CacheLoader\u003cString, DFSClient\u003e() {\n      @Override\n      public DFSClient load(String userName) throws Exception {\n        UserGroupInformation ugi \u003d getUserGroupInformation(\n                userName,\n                UserGroupInformation.getCurrentUser());\n\n        // Guava requires CacheLoader never returns null.\n        return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n          @Override\n          public DFSClient run() throws IOException {\n            return new DFSClient(DFSUtilClient.getNNAddress(config), config);\n          }\n        });\n      }\n    };\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
      "extendedDetails": {}
    },
    "1f7dd7811a1152d0a798524e831586eebbe110b6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5804. HDFS NFS Gateway fails to mount and proxy when using Kerberos. Contributed by Abin Shahab.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563323 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/14 3:00 PM",
      "commitName": "1f7dd7811a1152d0a798524e831586eebbe110b6",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "07/01/14 3:43 PM",
      "commitNameOld": "1be8ee24244425b6b5b668ec5b06993ffcea2559",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 23.97,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n     return new CacheLoader\u003cString, DFSClient\u003e() {\n       @Override\n       public DFSClient load(String userName) throws Exception {\n-        UserGroupInformation ugi \u003d UserGroupInformation\n-            .createRemoteUser(userName);\n+        UserGroupInformation ugi \u003d getUserGroupInformation(\n+                userName,\n+                UserGroupInformation.getCurrentUser());\n \n         // Guava requires CacheLoader never returns null.\n         return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n           @Override\n           public DFSClient run() throws IOException {\n             return new DFSClient(NameNode.getAddress(config), config);\n           }\n         });\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n    return new CacheLoader\u003cString, DFSClient\u003e() {\n      @Override\n      public DFSClient load(String userName) throws Exception {\n        UserGroupInformation ugi \u003d getUserGroupInformation(\n                userName,\n                UserGroupInformation.getCurrentUser());\n\n        // Guava requires CacheLoader never returns null.\n        return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n          @Override\n          public DFSClient run() throws IOException {\n            return new DFSClient(NameNode.getAddress(config), config);\n          }\n        });\n      }\n    };\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
      "extendedDetails": {}
    },
    "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5469. Add configuration property for the sub-directroy export path. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1540443 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/11/13 8:07 PM",
      "commitName": "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "24/10/13 4:40 PM",
      "commitNameOld": "05f35518f19d48890770128727289582cca3457b",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 16.19,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n     return new CacheLoader\u003cString, DFSClient\u003e() {\n       @Override\n       public DFSClient load(String userName) throws Exception {\n         UserGroupInformation ugi \u003d UserGroupInformation\n             .createRemoteUser(userName);\n \n         // Guava requires CacheLoader never returns null.\n         return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n+          @Override\n           public DFSClient run() throws IOException {\n             return new DFSClient(NameNode.getAddress(config), config);\n           }\n         });\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n    return new CacheLoader\u003cString, DFSClient\u003e() {\n      @Override\n      public DFSClient load(String userName) throws Exception {\n        UserGroupInformation ugi \u003d UserGroupInformation\n            .createRemoteUser(userName);\n\n        // Guava requires CacheLoader never returns null.\n        return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n          @Override\n          public DFSClient run() throws IOException {\n            return new DFSClient(NameNode.getAddress(config), config);\n          }\n        });\n      }\n    };\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
      "extendedDetails": {}
    },
    "e4154fc83a5cf5207861f58f9e06f49f383aef43": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5256. Use guava LoadingCache to implement DFSClientCache. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/13 11:06 PM",
      "commitName": "e4154fc83a5cf5207861f58f9e06f49f383aef43",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,16 @@\n+  private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n+    return new CacheLoader\u003cString, DFSClient\u003e() {\n+      @Override\n+      public DFSClient load(String userName) throws Exception {\n+        UserGroupInformation ugi \u003d UserGroupInformation\n+            .createRemoteUser(userName);\n+\n+        // Guava requires CacheLoader never returns null.\n+        return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n+          public DFSClient run() throws IOException {\n+            return new DFSClient(NameNode.getAddress(config), config);\n+          }\n+        });\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private CacheLoader\u003cString, DFSClient\u003e clientLoader() {\n    return new CacheLoader\u003cString, DFSClient\u003e() {\n      @Override\n      public DFSClient load(String userName) throws Exception {\n        UserGroupInformation ugi \u003d UserGroupInformation\n            .createRemoteUser(userName);\n\n        // Guava requires CacheLoader never returns null.\n        return ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n          public DFSClient run() throws IOException {\n            return new DFSClient(NameNode.getAddress(config), config);\n          }\n        });\n      }\n    };\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java"
    }
  }
}