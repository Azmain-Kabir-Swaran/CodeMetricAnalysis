{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SingleCounterBlock.java",
  "functionName": "populateMembers",
  "functionId": "populateMembers___ctx-AppContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/SingleCounterBlock.java",
  "functionStartLine": 102,
  "functionEndLine": 169,
  "numCommitsSeen": 6,
  "timeTaken": 1129,
  "changeHistory": [
    "4fd37eed9054cd292a30bb1e71bb72efee458419",
    "ca2265b581a0eccbd366a9a1b504a61eb67d23df",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
    "c2fe4a7e83775589481210383f62faa2dcb00ecc",
    "71886657f89f64b289c6f426bd9f557ed0e53590"
  ],
  "changeHistoryShort": {
    "4fd37eed9054cd292a30bb1e71bb72efee458419": "Ybodychange",
    "ca2265b581a0eccbd366a9a1b504a61eb67d23df": "Ybodychange",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": "Ybodychange",
    "c2fe4a7e83775589481210383f62faa2dcb00ecc": "Ybodychange",
    "71886657f89f64b289c6f426bd9f557ed0e53590": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4fd37eed9054cd292a30bb1e71bb72efee458419": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5803. Counters page display all task nevertheless of task type( Map or Reduce). Contributed by Kai Sasaki.\n",
      "commitDate": "27/06/16 9:12 PM",
      "commitName": "4fd37eed9054cd292a30bb1e71bb72efee458419",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/05/13 1:19 PM",
      "commitNameOld": "ca2265b581a0eccbd366a9a1b504a61eb67d23df",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 1137.33,
      "commitsBetweenForRepo": 8455,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,68 @@\n   private void populateMembers(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n+    if ($(TITLE).contains(\"MAPS\")) {\n+      counterType \u003d TaskType.MAP;\n+    } else if ($(TITLE).contains(\"REDUCES\")) {\n+      counterType \u003d TaskType.REDUCE;\n+    } else {\n+      counterType \u003d null;\n+    }\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n       if (!jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n         task.getAttempts().entrySet()) {\n         long value \u003d 0;\n         Counters counters \u003d entry.getValue().getCounters();\n         CounterGroup group \u003d (counters !\u003d null) ? counters\n           .getGroup($(COUNTER_GROUP)) : null;\n         if(group !\u003d null)  {\n           Counter c \u003d group.findCounter($(COUNTER_NAME));\n           if(c !\u003d null) {\n             value \u003d c.getValue();\n           }\n         }\n         values.put(MRApps.toString(entry.getKey()), value);\n       }\n       \n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n     for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n       long value \u003d 0;\n       Counters counters \u003d entry.getValue().getCounters();\n       CounterGroup group \u003d (counters !\u003d null) ? counters\n         .getGroup($(COUNTER_GROUP)) : null;\n       if(group !\u003d null)  {\n         Counter c \u003d group.findCounter($(COUNTER_NAME));\n         if(c !\u003d null) {\n           value \u003d c.getValue();\n         }\n       }\n-      values.put(MRApps.toString(entry.getKey()), value);\n+      if (counterType \u003d\u003d null ||\n+              counterType \u003d\u003d entry.getValue().getType()) {\n+        values.put(MRApps.toString(entry.getKey()), value);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void populateMembers(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if ($(TITLE).contains(\"MAPS\")) {\n      counterType \u003d TaskType.MAP;\n    } else if ($(TITLE).contains(\"REDUCES\")) {\n      counterType \u003d TaskType.REDUCE;\n    } else {\n      counterType \u003d null;\n    }\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (!jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n        task.getAttempts().entrySet()) {\n        long value \u003d 0;\n        Counters counters \u003d entry.getValue().getCounters();\n        CounterGroup group \u003d (counters !\u003d null) ? counters\n          .getGroup($(COUNTER_GROUP)) : null;\n        if(group !\u003d null)  {\n          Counter c \u003d group.findCounter($(COUNTER_NAME));\n          if(c !\u003d null) {\n            value \u003d c.getValue();\n          }\n        }\n        values.put(MRApps.toString(entry.getKey()), value);\n      }\n      \n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n      long value \u003d 0;\n      Counters counters \u003d entry.getValue().getCounters();\n      CounterGroup group \u003d (counters !\u003d null) ? counters\n        .getGroup($(COUNTER_GROUP)) : null;\n      if(group !\u003d null)  {\n        Counter c \u003d group.findCounter($(COUNTER_NAME));\n        if(c !\u003d null) {\n          value \u003d c.getValue();\n        }\n      }\n      if (counterType \u003d\u003d null ||\n              counterType \u003d\u003d entry.getValue().getType()) {\n        values.put(MRApps.toString(entry.getKey()), value);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/SingleCounterBlock.java",
      "extendedDetails": {}
    },
    "ca2265b581a0eccbd366a9a1b504a61eb67d23df": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4927. Historyserver 500 error due to NPE when accessing specific counters page for failed job. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1483974 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/13 1:19 PM",
      "commitName": "ca2265b581a0eccbd366a9a1b504a61eb67d23df",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "09/01/12 1:04 PM",
      "commitNameOld": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 493.97,
      "commitsBetweenForRepo": 3032,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,58 @@\n   private void populateMembers(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n       if (!jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n         task.getAttempts().entrySet()) {\n         long value \u003d 0;\n         Counters counters \u003d entry.getValue().getCounters();\n         CounterGroup group \u003d (counters !\u003d null) ? counters\n           .getGroup($(COUNTER_GROUP)) : null;\n         if(group !\u003d null)  {\n           Counter c \u003d group.findCounter($(COUNTER_NAME));\n           if(c !\u003d null) {\n             value \u003d c.getValue();\n           }\n         }\n         values.put(MRApps.toString(entry.getKey()), value);\n       }\n       \n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n     for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n       long value \u003d 0;\n-      CounterGroup group \u003d entry.getValue().getCounters()\n-        .getGroup($(COUNTER_GROUP));\n+      Counters counters \u003d entry.getValue().getCounters();\n+      CounterGroup group \u003d (counters !\u003d null) ? counters\n+        .getGroup($(COUNTER_GROUP)) : null;\n       if(group !\u003d null)  {\n         Counter c \u003d group.findCounter($(COUNTER_NAME));\n         if(c !\u003d null) {\n           value \u003d c.getValue();\n         }\n       }\n       values.put(MRApps.toString(entry.getKey()), value);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void populateMembers(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (!jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n        task.getAttempts().entrySet()) {\n        long value \u003d 0;\n        Counters counters \u003d entry.getValue().getCounters();\n        CounterGroup group \u003d (counters !\u003d null) ? counters\n          .getGroup($(COUNTER_GROUP)) : null;\n        if(group !\u003d null)  {\n          Counter c \u003d group.findCounter($(COUNTER_NAME));\n          if(c !\u003d null) {\n            value \u003d c.getValue();\n          }\n        }\n        values.put(MRApps.toString(entry.getKey()), value);\n      }\n      \n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n      long value \u003d 0;\n      Counters counters \u003d entry.getValue().getCounters();\n      CounterGroup group \u003d (counters !\u003d null) ? counters\n        .getGroup($(COUNTER_GROUP)) : null;\n      if(group !\u003d null)  {\n        Counter c \u003d group.findCounter($(COUNTER_NAME));\n        if(c !\u003d null) {\n          value \u003d c.getValue();\n        }\n      }\n      values.put(MRApps.toString(entry.getKey()), value);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/SingleCounterBlock.java",
      "extendedDetails": {}
    },
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3511. Removed a multitude of cloned/duplicate counters in the AM thereby reducing the AM heap size and preventing full GCs. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229347 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/12 1:04 PM",
      "commitName": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/12/11 5:51 PM",
      "commitNameOld": "c2fe4a7e83775589481210383f62faa2dcb00ecc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 24.8,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,57 @@\n   private void populateMembers(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n       if (!jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n         task.getAttempts().entrySet()) {\n         long value \u003d 0;\n         Counters counters \u003d entry.getValue().getCounters();\n-        CounterGroup group \u003d (counters !\u003d null)\n-        \t\t? counters.getCounterGroup($(COUNTER_GROUP)) : null;\n+        CounterGroup group \u003d (counters !\u003d null) ? counters\n+          .getGroup($(COUNTER_GROUP)) : null;\n         if(group !\u003d null)  {\n-          Counter c \u003d group.getCounter($(COUNTER_NAME));\n+          Counter c \u003d group.findCounter($(COUNTER_NAME));\n           if(c !\u003d null) {\n             value \u003d c.getValue();\n           }\n         }\n         values.put(MRApps.toString(entry.getKey()), value);\n       }\n       \n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n     for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n       long value \u003d 0;\n       CounterGroup group \u003d entry.getValue().getCounters()\n-      .getCounterGroup($(COUNTER_GROUP));\n+        .getGroup($(COUNTER_GROUP));\n       if(group !\u003d null)  {\n-        Counter c \u003d group.getCounter($(COUNTER_NAME));\n+        Counter c \u003d group.findCounter($(COUNTER_NAME));\n         if(c !\u003d null) {\n           value \u003d c.getValue();\n         }\n       }\n       values.put(MRApps.toString(entry.getKey()), value);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void populateMembers(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (!jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n        task.getAttempts().entrySet()) {\n        long value \u003d 0;\n        Counters counters \u003d entry.getValue().getCounters();\n        CounterGroup group \u003d (counters !\u003d null) ? counters\n          .getGroup($(COUNTER_GROUP)) : null;\n        if(group !\u003d null)  {\n          Counter c \u003d group.findCounter($(COUNTER_NAME));\n          if(c !\u003d null) {\n            value \u003d c.getValue();\n          }\n        }\n        values.put(MRApps.toString(entry.getKey()), value);\n      }\n      \n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n      long value \u003d 0;\n      CounterGroup group \u003d entry.getValue().getCounters()\n        .getGroup($(COUNTER_GROUP));\n      if(group !\u003d null)  {\n        Counter c \u003d group.findCounter($(COUNTER_NAME));\n        if(c !\u003d null) {\n          value \u003d c.getValue();\n        }\n      }\n      values.put(MRApps.toString(entry.getKey()), value);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/SingleCounterBlock.java",
      "extendedDetails": {}
    },
    "c2fe4a7e83775589481210383f62faa2dcb00ecc": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3487. Fixed JobHistory web-UI to display links to single task\u0027s counters\u0027 page. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/12/11 5:51 PM",
      "commitName": "c2fe4a7e83775589481210383f62faa2dcb00ecc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/09/11 1:08 AM",
      "commitNameOld": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 77.74,
      "commitsBetweenForRepo": 555,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,57 @@\n   private void populateMembers(AppContext ctx) {\n     JobId jobID \u003d null;\n     TaskId taskID \u003d null;\n     String tid \u003d $(TASK_ID);\n     if (!tid.isEmpty()) {\n       taskID \u003d MRApps.toTaskID(tid);\n       jobID \u003d taskID.getJobId();\n     } else {\n       String jid \u003d $(JOB_ID);\n       if (!jid.isEmpty()) {\n         jobID \u003d MRApps.toJobID(jid);\n       }\n     }\n     if (jobID \u003d\u003d null) {\n       return;\n     }\n     job \u003d ctx.getJob(jobID);\n     if (job \u003d\u003d null) {\n       return;\n     }\n     if (taskID !\u003d null) {\n       task \u003d job.getTask(taskID);\n       if (task \u003d\u003d null) {\n         return;\n       }\n       for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n         task.getAttempts().entrySet()) {\n         long value \u003d 0;\n-        CounterGroup group \u003d entry.getValue().getCounters()\n-        .getCounterGroup($(COUNTER_GROUP));\n+        Counters counters \u003d entry.getValue().getCounters();\n+        CounterGroup group \u003d (counters !\u003d null)\n+        \t\t? counters.getCounterGroup($(COUNTER_GROUP)) : null;\n         if(group !\u003d null)  {\n           Counter c \u003d group.getCounter($(COUNTER_NAME));\n           if(c !\u003d null) {\n             value \u003d c.getValue();\n           }\n         }\n         values.put(MRApps.toString(entry.getKey()), value);\n       }\n       \n       return;\n     }\n     // Get all types of counters\n     Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n     for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n       long value \u003d 0;\n       CounterGroup group \u003d entry.getValue().getCounters()\n       .getCounterGroup($(COUNTER_GROUP));\n       if(group !\u003d null)  {\n         Counter c \u003d group.getCounter($(COUNTER_NAME));\n         if(c !\u003d null) {\n           value \u003d c.getValue();\n         }\n       }\n       values.put(MRApps.toString(entry.getKey()), value);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void populateMembers(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (!jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n        task.getAttempts().entrySet()) {\n        long value \u003d 0;\n        Counters counters \u003d entry.getValue().getCounters();\n        CounterGroup group \u003d (counters !\u003d null)\n        \t\t? counters.getCounterGroup($(COUNTER_GROUP)) : null;\n        if(group !\u003d null)  {\n          Counter c \u003d group.getCounter($(COUNTER_NAME));\n          if(c !\u003d null) {\n            value \u003d c.getValue();\n          }\n        }\n        values.put(MRApps.toString(entry.getKey()), value);\n      }\n      \n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n      long value \u003d 0;\n      CounterGroup group \u003d entry.getValue().getCounters()\n      .getCounterGroup($(COUNTER_GROUP));\n      if(group !\u003d null)  {\n        Counter c \u003d group.getCounter($(COUNTER_NAME));\n        if(c !\u003d null) {\n          value \u003d c.getValue();\n        }\n      }\n      values.put(MRApps.toString(entry.getKey()), value);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/SingleCounterBlock.java",
      "extendedDetails": {}
    },
    "71886657f89f64b289c6f426bd9f557ed0e53590": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3001. Added task-specific counters to AppMaster and JobHistory web-UIs. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 1:08 AM",
      "commitName": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,56 @@\n+  private void populateMembers(AppContext ctx) {\n+    JobId jobID \u003d null;\n+    TaskId taskID \u003d null;\n+    String tid \u003d $(TASK_ID);\n+    if (!tid.isEmpty()) {\n+      taskID \u003d MRApps.toTaskID(tid);\n+      jobID \u003d taskID.getJobId();\n+    } else {\n+      String jid \u003d $(JOB_ID);\n+      if (!jid.isEmpty()) {\n+        jobID \u003d MRApps.toJobID(jid);\n+      }\n+    }\n+    if (jobID \u003d\u003d null) {\n+      return;\n+    }\n+    job \u003d ctx.getJob(jobID);\n+    if (job \u003d\u003d null) {\n+      return;\n+    }\n+    if (taskID !\u003d null) {\n+      task \u003d job.getTask(taskID);\n+      if (task \u003d\u003d null) {\n+        return;\n+      }\n+      for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n+        task.getAttempts().entrySet()) {\n+        long value \u003d 0;\n+        CounterGroup group \u003d entry.getValue().getCounters()\n+        .getCounterGroup($(COUNTER_GROUP));\n+        if(group !\u003d null)  {\n+          Counter c \u003d group.getCounter($(COUNTER_NAME));\n+          if(c !\u003d null) {\n+            value \u003d c.getValue();\n+          }\n+        }\n+        values.put(MRApps.toString(entry.getKey()), value);\n+      }\n+      \n+      return;\n+    }\n+    // Get all types of counters\n+    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n+    for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n+      long value \u003d 0;\n+      CounterGroup group \u003d entry.getValue().getCounters()\n+      .getCounterGroup($(COUNTER_GROUP));\n+      if(group !\u003d null)  {\n+        Counter c \u003d group.getCounter($(COUNTER_NAME));\n+        if(c !\u003d null) {\n+          value \u003d c.getValue();\n+        }\n+      }\n+      values.put(MRApps.toString(entry.getKey()), value);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void populateMembers(AppContext ctx) {\n    JobId jobID \u003d null;\n    TaskId taskID \u003d null;\n    String tid \u003d $(TASK_ID);\n    if (!tid.isEmpty()) {\n      taskID \u003d MRApps.toTaskID(tid);\n      jobID \u003d taskID.getJobId();\n    } else {\n      String jid \u003d $(JOB_ID);\n      if (!jid.isEmpty()) {\n        jobID \u003d MRApps.toJobID(jid);\n      }\n    }\n    if (jobID \u003d\u003d null) {\n      return;\n    }\n    job \u003d ctx.getJob(jobID);\n    if (job \u003d\u003d null) {\n      return;\n    }\n    if (taskID !\u003d null) {\n      task \u003d job.getTask(taskID);\n      if (task \u003d\u003d null) {\n        return;\n      }\n      for(Map.Entry\u003cTaskAttemptId, TaskAttempt\u003e entry : \n        task.getAttempts().entrySet()) {\n        long value \u003d 0;\n        CounterGroup group \u003d entry.getValue().getCounters()\n        .getCounterGroup($(COUNTER_GROUP));\n        if(group !\u003d null)  {\n          Counter c \u003d group.getCounter($(COUNTER_NAME));\n          if(c !\u003d null) {\n            value \u003d c.getValue();\n          }\n        }\n        values.put(MRApps.toString(entry.getKey()), value);\n      }\n      \n      return;\n    }\n    // Get all types of counters\n    Map\u003cTaskId, Task\u003e tasks \u003d job.getTasks();\n    for(Map.Entry\u003cTaskId, Task\u003e entry : tasks.entrySet()) {\n      long value \u003d 0;\n      CounterGroup group \u003d entry.getValue().getCounters()\n      .getCounterGroup($(COUNTER_GROUP));\n      if(group !\u003d null)  {\n        Counter c \u003d group.getCounter($(COUNTER_NAME));\n        if(c !\u003d null) {\n          value \u003d c.getValue();\n        }\n      }\n      values.put(MRApps.toString(entry.getKey()), value);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/SingleCounterBlock.java"
    }
  }
}