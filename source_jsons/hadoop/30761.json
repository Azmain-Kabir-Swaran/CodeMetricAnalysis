{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineEntityDocument.java",
  "functionName": "setMetrics",
  "functionId": "setMetrics___metrics-Map__String,Set__TimelineMetricSubDoc____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/src/main/java/org/apache/hadoop/yarn/server/timelineservice/documentstore/collection/document/entity/TimelineEntityDocument.java",
  "functionStartLine": 140,
  "functionEndLine": 155,
  "numCommitsSeen": 2,
  "timeTaken": 1011,
  "changeHistory": [
    "1943db557124439f9f41c18a618455ccf4c3e6cc",
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40"
  ],
  "changeHistoryShort": {
    "1943db557124439f9f41c18a618455ccf4c3e6cc": "Ybodychange",
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1943db557124439f9f41c18a618455ccf4c3e6cc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16237. Fix new findbugs issues after updating guava to 27.0-jre.\n\nAuthor:    Gabor Bota \u003cgabor.bota@cloudera.com\u003e\n",
      "commitDate": "12/04/19 6:28 PM",
      "commitName": "1943db557124439f9f41c18a618455ccf4c3e6cc",
      "commitAuthor": "Gabor Bota",
      "commitDateOld": "13/03/19 4:45 PM",
      "commitNameOld": "f235a942d5b7cab86f0cb4f5ba285f07cd939a40",
      "commitAuthorOld": "Vrushali C",
      "daysBetweenCommits": 30.07,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,16 @@\n   public void setMetrics(Map\u003cString, Set\u003cTimelineMetricSubDoc\u003e\u003e metrics) {\n-    for (String metricId : metrics.keySet()) {\n-      for(TimelineMetricSubDoc metricSubDoc : metrics.get(metricId)) {\n+    for (Map.Entry\u003cString, Set\u003cTimelineMetricSubDoc\u003e\u003e metricEntry :\n+        metrics.entrySet()) {\n+      final String metricId \u003d metricEntry.getKey();\n+      final Set\u003cTimelineMetricSubDoc\u003e metricValue \u003d metricEntry.getValue();\n+\n+      for(TimelineMetricSubDoc metricSubDoc : metricValue) {\n         timelineEntity.addMetric(metricSubDoc.fetchTimelineMetric());\n       }\n       if (this.metrics.containsKey(metricId)) {\n-        this.metrics.get(metricId).addAll(metrics.get(metricId));\n+        this.metrics.get(metricId).addAll(metricValue);\n       } else {\n-        this.metrics.put(metricId, new HashSet\u003c\u003e(metrics.get(metricId)));\n+        this.metrics.put(metricId, new HashSet\u003c\u003e(metricValue));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setMetrics(Map\u003cString, Set\u003cTimelineMetricSubDoc\u003e\u003e metrics) {\n    for (Map.Entry\u003cString, Set\u003cTimelineMetricSubDoc\u003e\u003e metricEntry :\n        metrics.entrySet()) {\n      final String metricId \u003d metricEntry.getKey();\n      final Set\u003cTimelineMetricSubDoc\u003e metricValue \u003d metricEntry.getValue();\n\n      for(TimelineMetricSubDoc metricSubDoc : metricValue) {\n        timelineEntity.addMetric(metricSubDoc.fetchTimelineMetric());\n      }\n      if (this.metrics.containsKey(metricId)) {\n        this.metrics.get(metricId).addAll(metricValue);\n      } else {\n        this.metrics.put(metricId, new HashSet\u003c\u003e(metricValue));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/src/main/java/org/apache/hadoop/yarn/server/timelineservice/documentstore/collection/document/entity/TimelineEntityDocument.java",
      "extendedDetails": {}
    },
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9016 DocumentStore as a backend for ATSv2. Contributed by Sushil Ks.\n",
      "commitDate": "13/03/19 4:45 PM",
      "commitName": "f235a942d5b7cab86f0cb4f5ba285f07cd939a40",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,12 @@\n+  public void setMetrics(Map\u003cString, Set\u003cTimelineMetricSubDoc\u003e\u003e metrics) {\n+    for (String metricId : metrics.keySet()) {\n+      for(TimelineMetricSubDoc metricSubDoc : metrics.get(metricId)) {\n+        timelineEntity.addMetric(metricSubDoc.fetchTimelineMetric());\n+      }\n+      if (this.metrics.containsKey(metricId)) {\n+        this.metrics.get(metricId).addAll(metrics.get(metricId));\n+      } else {\n+        this.metrics.put(metricId, new HashSet\u003c\u003e(metrics.get(metricId)));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setMetrics(Map\u003cString, Set\u003cTimelineMetricSubDoc\u003e\u003e metrics) {\n    for (String metricId : metrics.keySet()) {\n      for(TimelineMetricSubDoc metricSubDoc : metrics.get(metricId)) {\n        timelineEntity.addMetric(metricSubDoc.fetchTimelineMetric());\n      }\n      if (this.metrics.containsKey(metricId)) {\n        this.metrics.get(metricId).addAll(metrics.get(metricId));\n      } else {\n        this.metrics.put(metricId, new HashSet\u003c\u003e(metrics.get(metricId)));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/src/main/java/org/apache/hadoop/yarn/server/timelineservice/documentstore/collection/document/entity/TimelineEntityDocument.java"
    }
  }
}