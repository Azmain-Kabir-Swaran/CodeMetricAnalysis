{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMSimulator.java",
  "functionName": "packageRequests",
  "functionId": "packageRequests___csList-List__ContainerSimulator____priority-int",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
  "functionStartLine": 407,
  "functionEndLine": 478,
  "numCommitsSeen": 19,
  "timeTaken": 1833,
  "changeHistory": [
    "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312",
    "7af4f34de54f6e667b47374e31fc9328eba869f0",
    "3082552b3b991df846caf572b58e44308ddf8eeb",
    "b32ffa2753e83615b980721b6067fcc35ce54372",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312": "Ybodychange",
    "7af4f34de54f6e667b47374e31fc9328eba869f0": "Ybodychange",
    "3082552b3b991df846caf572b58e44308ddf8eeb": "Ybodychange",
    "b32ffa2753e83615b980721b6067fcc35ce54372": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9752. Add support for allocation id in SLS. Contributed by Abhishek Modi\n",
      "commitDate": "21/08/19 8:09 AM",
      "commitName": "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "14/02/19 9:26 AM",
      "commitNameOld": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 187.9,
      "commitsBetweenForRepo": 1452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,72 @@\n   protected List\u003cResourceRequest\u003e packageRequests(\n           List\u003cContainerSimulator\u003e csList, int priority) {\n     // create requests\n-    Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n-    Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n-    ResourceRequest anyRequest \u003d null;\n+    Map\u003cLong, Map\u003cString, ResourceRequest\u003e\u003e rackLocalRequests \u003d\n+        new HashMap\u003c\u003e();\n+    Map\u003cLong, Map\u003cString, ResourceRequest\u003e\u003e nodeLocalRequests \u003d\n+        new HashMap\u003c\u003e();\n+    Map\u003cLong, ResourceRequest\u003e anyRequests \u003d new HashMap\u003c\u003e();\n     for (ContainerSimulator cs : csList) {\n+      long allocationId \u003d cs.getAllocationId();\n+      ResourceRequest anyRequest \u003d anyRequests.get(allocationId);\n       if (cs.getHostname() !\u003d null) {\n+        Map\u003cString, ResourceRequest\u003e rackLocalRequestMap;\n+        if (rackLocalRequests.containsKey(allocationId)) {\n+          rackLocalRequestMap \u003d rackLocalRequests.get(allocationId);\n+        } else {\n+          rackLocalRequestMap \u003d new HashMap\u003c\u003e();\n+          rackLocalRequests.put(allocationId, rackLocalRequestMap);\n+        }\n         String[] rackHostNames \u003d SLSUtils.getRackHostName(cs.getHostname());\n         // check rack local\n         String rackname \u003d \"/\" + rackHostNames[0];\n         if (rackLocalRequestMap.containsKey(rackname)) {\n           rackLocalRequestMap.get(rackname).setNumContainers(\n               rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n         } else {\n           ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n-              cs.getExecutionType(), rackname, priority, 1);\n+              cs.getExecutionType(), rackname, priority,\n+              cs.getAllocationId(), 1);\n           rackLocalRequestMap.put(rackname, request);\n         }\n         // check node local\n+        Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap;\n+        if (nodeLocalRequests.containsKey(allocationId)) {\n+          nodeLocalRequestMap \u003d nodeLocalRequests.get(allocationId);\n+        } else {\n+          nodeLocalRequestMap \u003d new HashMap\u003c\u003e();\n+          nodeLocalRequests.put(allocationId, nodeLocalRequestMap);\n+        }\n         String hostname \u003d rackHostNames[1];\n         if (nodeLocalRequestMap.containsKey(hostname)) {\n           nodeLocalRequestMap.get(hostname).setNumContainers(\n               nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n         } else {\n           ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n-              cs.getExecutionType(), hostname, priority, 1);\n+              cs.getExecutionType(), hostname, priority,\n+              cs.getAllocationId(), 1);\n           nodeLocalRequestMap.put(hostname, request);\n         }\n       }\n       // any\n       if (anyRequest \u003d\u003d null) {\n         anyRequest \u003d createResourceRequest(cs.getResource(),\n-            cs.getExecutionType(), ResourceRequest.ANY, priority, 1);\n+            cs.getExecutionType(), ResourceRequest.ANY, priority,\n+            cs.getAllocationId(), 1);\n+        anyRequests.put(allocationId, anyRequest);\n       } else {\n         anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n       }\n     }\n     List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n-    ask.addAll(nodeLocalRequestMap.values());\n-    ask.addAll(rackLocalRequestMap.values());\n-    if (anyRequest !\u003d null) {\n-      ask.add(anyRequest);\n+    for (Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap :\n+        nodeLocalRequests.values()) {\n+      ask.addAll(nodeLocalRequestMap.values());\n     }\n+    for (Map\u003cString, ResourceRequest\u003e rackLocalRequestMap :\n+        rackLocalRequests.values()) {\n+      ask.addAll(rackLocalRequestMap.values());\n+    }\n+    ask.addAll(anyRequests.values());\n     return ask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cResourceRequest\u003e packageRequests(\n          List\u003cContainerSimulator\u003e csList, int priority) {\n    // create requests\n    Map\u003cLong, Map\u003cString, ResourceRequest\u003e\u003e rackLocalRequests \u003d\n        new HashMap\u003c\u003e();\n    Map\u003cLong, Map\u003cString, ResourceRequest\u003e\u003e nodeLocalRequests \u003d\n        new HashMap\u003c\u003e();\n    Map\u003cLong, ResourceRequest\u003e anyRequests \u003d new HashMap\u003c\u003e();\n    for (ContainerSimulator cs : csList) {\n      long allocationId \u003d cs.getAllocationId();\n      ResourceRequest anyRequest \u003d anyRequests.get(allocationId);\n      if (cs.getHostname() !\u003d null) {\n        Map\u003cString, ResourceRequest\u003e rackLocalRequestMap;\n        if (rackLocalRequests.containsKey(allocationId)) {\n          rackLocalRequestMap \u003d rackLocalRequests.get(allocationId);\n        } else {\n          rackLocalRequestMap \u003d new HashMap\u003c\u003e();\n          rackLocalRequests.put(allocationId, rackLocalRequestMap);\n        }\n        String[] rackHostNames \u003d SLSUtils.getRackHostName(cs.getHostname());\n        // check rack local\n        String rackname \u003d \"/\" + rackHostNames[0];\n        if (rackLocalRequestMap.containsKey(rackname)) {\n          rackLocalRequestMap.get(rackname).setNumContainers(\n              rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n        } else {\n          ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n              cs.getExecutionType(), rackname, priority,\n              cs.getAllocationId(), 1);\n          rackLocalRequestMap.put(rackname, request);\n        }\n        // check node local\n        Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap;\n        if (nodeLocalRequests.containsKey(allocationId)) {\n          nodeLocalRequestMap \u003d nodeLocalRequests.get(allocationId);\n        } else {\n          nodeLocalRequestMap \u003d new HashMap\u003c\u003e();\n          nodeLocalRequests.put(allocationId, nodeLocalRequestMap);\n        }\n        String hostname \u003d rackHostNames[1];\n        if (nodeLocalRequestMap.containsKey(hostname)) {\n          nodeLocalRequestMap.get(hostname).setNumContainers(\n              nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n        } else {\n          ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n              cs.getExecutionType(), hostname, priority,\n              cs.getAllocationId(), 1);\n          nodeLocalRequestMap.put(hostname, request);\n        }\n      }\n      // any\n      if (anyRequest \u003d\u003d null) {\n        anyRequest \u003d createResourceRequest(cs.getResource(),\n            cs.getExecutionType(), ResourceRequest.ANY, priority,\n            cs.getAllocationId(), 1);\n        anyRequests.put(allocationId, anyRequest);\n      } else {\n        anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n      }\n    }\n    List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n    for (Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap :\n        nodeLocalRequests.values()) {\n      ask.addAll(nodeLocalRequestMap.values());\n    }\n    for (Map\u003cString, ResourceRequest\u003e rackLocalRequestMap :\n        rackLocalRequests.values()) {\n      ask.addAll(rackLocalRequestMap.values());\n    }\n    ask.addAll(anyRequests.values());\n    return ask;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
      "extendedDetails": {}
    },
    "7af4f34de54f6e667b47374e31fc9328eba869f0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7929. Support to set container execution type in SLS. (Jiandan Yang via Weiwei Yang)\n",
      "commitDate": "28/02/18 1:58 AM",
      "commitName": "7af4f34de54f6e667b47374e31fc9328eba869f0",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "20/02/18 5:00 PM",
      "commitNameOld": "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 7.37,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   protected List\u003cResourceRequest\u003e packageRequests(\n           List\u003cContainerSimulator\u003e csList, int priority) {\n     // create requests\n     Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n     Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n     ResourceRequest anyRequest \u003d null;\n     for (ContainerSimulator cs : csList) {\n       if (cs.getHostname() !\u003d null) {\n         String[] rackHostNames \u003d SLSUtils.getRackHostName(cs.getHostname());\n         // check rack local\n         String rackname \u003d \"/\" + rackHostNames[0];\n         if (rackLocalRequestMap.containsKey(rackname)) {\n           rackLocalRequestMap.get(rackname).setNumContainers(\n               rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n         } else {\n-          ResourceRequest request \u003d\n-              createResourceRequest(cs.getResource(), rackname, priority, 1);\n+          ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n+              cs.getExecutionType(), rackname, priority, 1);\n           rackLocalRequestMap.put(rackname, request);\n         }\n         // check node local\n         String hostname \u003d rackHostNames[1];\n         if (nodeLocalRequestMap.containsKey(hostname)) {\n           nodeLocalRequestMap.get(hostname).setNumContainers(\n               nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n         } else {\n-          ResourceRequest request \u003d\n-              createResourceRequest(cs.getResource(), hostname, priority, 1);\n+          ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n+              cs.getExecutionType(), hostname, priority, 1);\n           nodeLocalRequestMap.put(hostname, request);\n         }\n       }\n       // any\n       if (anyRequest \u003d\u003d null) {\n-        anyRequest \u003d createResourceRequest(\n-                cs.getResource(), ResourceRequest.ANY, priority, 1);\n+        anyRequest \u003d createResourceRequest(cs.getResource(),\n+            cs.getExecutionType(), ResourceRequest.ANY, priority, 1);\n       } else {\n         anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n       }\n     }\n     List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n     ask.addAll(nodeLocalRequestMap.values());\n     ask.addAll(rackLocalRequestMap.values());\n     if (anyRequest !\u003d null) {\n       ask.add(anyRequest);\n     }\n     return ask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cResourceRequest\u003e packageRequests(\n          List\u003cContainerSimulator\u003e csList, int priority) {\n    // create requests\n    Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    ResourceRequest anyRequest \u003d null;\n    for (ContainerSimulator cs : csList) {\n      if (cs.getHostname() !\u003d null) {\n        String[] rackHostNames \u003d SLSUtils.getRackHostName(cs.getHostname());\n        // check rack local\n        String rackname \u003d \"/\" + rackHostNames[0];\n        if (rackLocalRequestMap.containsKey(rackname)) {\n          rackLocalRequestMap.get(rackname).setNumContainers(\n              rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n        } else {\n          ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n              cs.getExecutionType(), rackname, priority, 1);\n          rackLocalRequestMap.put(rackname, request);\n        }\n        // check node local\n        String hostname \u003d rackHostNames[1];\n        if (nodeLocalRequestMap.containsKey(hostname)) {\n          nodeLocalRequestMap.get(hostname).setNumContainers(\n              nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n        } else {\n          ResourceRequest request \u003d createResourceRequest(cs.getResource(),\n              cs.getExecutionType(), hostname, priority, 1);\n          nodeLocalRequestMap.put(hostname, request);\n        }\n      }\n      // any\n      if (anyRequest \u003d\u003d null) {\n        anyRequest \u003d createResourceRequest(cs.getResource(),\n            cs.getExecutionType(), ResourceRequest.ANY, priority, 1);\n      } else {\n        anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n      }\n    }\n    List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n    ask.addAll(nodeLocalRequestMap.values());\n    ask.addAll(rackLocalRequestMap.values());\n    if (anyRequest !\u003d null) {\n      ask.add(anyRequest);\n    }\n    return ask;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
      "extendedDetails": {}
    },
    "3082552b3b991df846caf572b58e44308ddf8eeb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6522. Make SLS JSON input file format simple and scalable (yufeigu via rkanter)\n",
      "commitDate": "04/05/17 5:21 PM",
      "commitName": "3082552b3b991df846caf572b58e44308ddf8eeb",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "20/04/17 9:54 PM",
      "commitNameOld": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 13.81,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,46 @@\n   protected List\u003cResourceRequest\u003e packageRequests(\n           List\u003cContainerSimulator\u003e csList, int priority) {\n     // create requests\n     Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n     Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n     ResourceRequest anyRequest \u003d null;\n     for (ContainerSimulator cs : csList) {\n-      String rackHostNames[] \u003d SLSUtils.getRackHostName(cs.getHostname());\n-      // check rack local\n-      String rackname \u003d \"/\" + rackHostNames[0];\n-      if (rackLocalRequestMap.containsKey(rackname)) {\n-        rackLocalRequestMap.get(rackname).setNumContainers(\n-            rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n-      } else {\n-        ResourceRequest request \u003d createResourceRequest(\n-                cs.getResource(), rackname, priority, 1);\n-        rackLocalRequestMap.put(rackname, request);\n-      }\n-      // check node local\n-      String hostname \u003d rackHostNames[1];\n-      if (nodeLocalRequestMap.containsKey(hostname)) {\n-        nodeLocalRequestMap.get(hostname).setNumContainers(\n-            nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n-      } else {\n-        ResourceRequest request \u003d createResourceRequest(\n-                cs.getResource(), hostname, priority, 1);\n-        nodeLocalRequestMap.put(hostname, request);\n+      if (cs.getHostname() !\u003d null) {\n+        String[] rackHostNames \u003d SLSUtils.getRackHostName(cs.getHostname());\n+        // check rack local\n+        String rackname \u003d \"/\" + rackHostNames[0];\n+        if (rackLocalRequestMap.containsKey(rackname)) {\n+          rackLocalRequestMap.get(rackname).setNumContainers(\n+              rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n+        } else {\n+          ResourceRequest request \u003d\n+              createResourceRequest(cs.getResource(), rackname, priority, 1);\n+          rackLocalRequestMap.put(rackname, request);\n+        }\n+        // check node local\n+        String hostname \u003d rackHostNames[1];\n+        if (nodeLocalRequestMap.containsKey(hostname)) {\n+          nodeLocalRequestMap.get(hostname).setNumContainers(\n+              nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n+        } else {\n+          ResourceRequest request \u003d\n+              createResourceRequest(cs.getResource(), hostname, priority, 1);\n+          nodeLocalRequestMap.put(hostname, request);\n+        }\n       }\n       // any\n       if (anyRequest \u003d\u003d null) {\n         anyRequest \u003d createResourceRequest(\n                 cs.getResource(), ResourceRequest.ANY, priority, 1);\n       } else {\n         anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n       }\n     }\n     List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n     ask.addAll(nodeLocalRequestMap.values());\n     ask.addAll(rackLocalRequestMap.values());\n     if (anyRequest !\u003d null) {\n       ask.add(anyRequest);\n     }\n     return ask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cResourceRequest\u003e packageRequests(\n          List\u003cContainerSimulator\u003e csList, int priority) {\n    // create requests\n    Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    ResourceRequest anyRequest \u003d null;\n    for (ContainerSimulator cs : csList) {\n      if (cs.getHostname() !\u003d null) {\n        String[] rackHostNames \u003d SLSUtils.getRackHostName(cs.getHostname());\n        // check rack local\n        String rackname \u003d \"/\" + rackHostNames[0];\n        if (rackLocalRequestMap.containsKey(rackname)) {\n          rackLocalRequestMap.get(rackname).setNumContainers(\n              rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n        } else {\n          ResourceRequest request \u003d\n              createResourceRequest(cs.getResource(), rackname, priority, 1);\n          rackLocalRequestMap.put(rackname, request);\n        }\n        // check node local\n        String hostname \u003d rackHostNames[1];\n        if (nodeLocalRequestMap.containsKey(hostname)) {\n          nodeLocalRequestMap.get(hostname).setNumContainers(\n              nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n        } else {\n          ResourceRequest request \u003d\n              createResourceRequest(cs.getResource(), hostname, priority, 1);\n          nodeLocalRequestMap.put(hostname, request);\n        }\n      }\n      // any\n      if (anyRequest \u003d\u003d null) {\n        anyRequest \u003d createResourceRequest(\n                cs.getResource(), ResourceRequest.ANY, priority, 1);\n      } else {\n        anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n      }\n    }\n    List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n    ask.addAll(nodeLocalRequestMap.values());\n    ask.addAll(rackLocalRequestMap.values());\n    if (anyRequest !\u003d null) {\n      ask.add(anyRequest);\n    }\n    return ask;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
      "extendedDetails": {}
    },
    "b32ffa2753e83615b980721b6067fcc35ce54372": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4779. Fix AM container allocation logic in SLS. Contributed by Wangda Tan.\n",
      "commitDate": "24/02/17 8:09 AM",
      "commitName": "b32ffa2753e83615b980721b6067fcc35ce54372",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/12/15 3:30 PM",
      "commitNameOld": "8310b2e9ff3d6804bad703c4c15458b0dfeeb4af",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 421.69,
      "commitsBetweenForRepo": 2829,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   protected List\u003cResourceRequest\u003e packageRequests(\n           List\u003cContainerSimulator\u003e csList, int priority) {\n     // create requests\n     Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n     Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n     ResourceRequest anyRequest \u003d null;\n     for (ContainerSimulator cs : csList) {\n       String rackHostNames[] \u003d SLSUtils.getRackHostName(cs.getHostname());\n       // check rack local\n-      String rackname \u003d rackHostNames[0];\n+      String rackname \u003d \"/\" + rackHostNames[0];\n       if (rackLocalRequestMap.containsKey(rackname)) {\n         rackLocalRequestMap.get(rackname).setNumContainers(\n             rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n       } else {\n         ResourceRequest request \u003d createResourceRequest(\n                 cs.getResource(), rackname, priority, 1);\n         rackLocalRequestMap.put(rackname, request);\n       }\n       // check node local\n       String hostname \u003d rackHostNames[1];\n       if (nodeLocalRequestMap.containsKey(hostname)) {\n         nodeLocalRequestMap.get(hostname).setNumContainers(\n             nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n       } else {\n         ResourceRequest request \u003d createResourceRequest(\n                 cs.getResource(), hostname, priority, 1);\n         nodeLocalRequestMap.put(hostname, request);\n       }\n       // any\n       if (anyRequest \u003d\u003d null) {\n         anyRequest \u003d createResourceRequest(\n                 cs.getResource(), ResourceRequest.ANY, priority, 1);\n       } else {\n         anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n       }\n     }\n     List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n     ask.addAll(nodeLocalRequestMap.values());\n     ask.addAll(rackLocalRequestMap.values());\n     if (anyRequest !\u003d null) {\n       ask.add(anyRequest);\n     }\n     return ask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cResourceRequest\u003e packageRequests(\n          List\u003cContainerSimulator\u003e csList, int priority) {\n    // create requests\n    Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    ResourceRequest anyRequest \u003d null;\n    for (ContainerSimulator cs : csList) {\n      String rackHostNames[] \u003d SLSUtils.getRackHostName(cs.getHostname());\n      // check rack local\n      String rackname \u003d \"/\" + rackHostNames[0];\n      if (rackLocalRequestMap.containsKey(rackname)) {\n        rackLocalRequestMap.get(rackname).setNumContainers(\n            rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n      } else {\n        ResourceRequest request \u003d createResourceRequest(\n                cs.getResource(), rackname, priority, 1);\n        rackLocalRequestMap.put(rackname, request);\n      }\n      // check node local\n      String hostname \u003d rackHostNames[1];\n      if (nodeLocalRequestMap.containsKey(hostname)) {\n        nodeLocalRequestMap.get(hostname).setNumContainers(\n            nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n      } else {\n        ResourceRequest request \u003d createResourceRequest(\n                cs.getResource(), hostname, priority, 1);\n        nodeLocalRequestMap.put(hostname, request);\n      }\n      // any\n      if (anyRequest \u003d\u003d null) {\n        anyRequest \u003d createResourceRequest(\n                cs.getResource(), ResourceRequest.ANY, priority, 1);\n      } else {\n        anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n      }\n    }\n    List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n    ask.addAll(nodeLocalRequestMap.values());\n    ask.addAll(rackLocalRequestMap.values());\n    if (anyRequest !\u003d null) {\n      ask.add(anyRequest);\n    }\n    return ask;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,44 @@\n+  protected List\u003cResourceRequest\u003e packageRequests(\n+          List\u003cContainerSimulator\u003e csList, int priority) {\n+    // create requests\n+    Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n+    Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n+    ResourceRequest anyRequest \u003d null;\n+    for (ContainerSimulator cs : csList) {\n+      String rackHostNames[] \u003d SLSUtils.getRackHostName(cs.getHostname());\n+      // check rack local\n+      String rackname \u003d rackHostNames[0];\n+      if (rackLocalRequestMap.containsKey(rackname)) {\n+        rackLocalRequestMap.get(rackname).setNumContainers(\n+            rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n+      } else {\n+        ResourceRequest request \u003d createResourceRequest(\n+                cs.getResource(), rackname, priority, 1);\n+        rackLocalRequestMap.put(rackname, request);\n+      }\n+      // check node local\n+      String hostname \u003d rackHostNames[1];\n+      if (nodeLocalRequestMap.containsKey(hostname)) {\n+        nodeLocalRequestMap.get(hostname).setNumContainers(\n+            nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n+      } else {\n+        ResourceRequest request \u003d createResourceRequest(\n+                cs.getResource(), hostname, priority, 1);\n+        nodeLocalRequestMap.put(hostname, request);\n+      }\n+      // any\n+      if (anyRequest \u003d\u003d null) {\n+        anyRequest \u003d createResourceRequest(\n+                cs.getResource(), ResourceRequest.ANY, priority, 1);\n+      } else {\n+        anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n+      }\n+    }\n+    List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n+    ask.addAll(nodeLocalRequestMap.values());\n+    ask.addAll(rackLocalRequestMap.values());\n+    if (anyRequest !\u003d null) {\n+      ask.add(anyRequest);\n+    }\n+    return ask;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cResourceRequest\u003e packageRequests(\n          List\u003cContainerSimulator\u003e csList, int priority) {\n    // create requests\n    Map\u003cString, ResourceRequest\u003e rackLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    Map\u003cString, ResourceRequest\u003e nodeLocalRequestMap \u003d new HashMap\u003cString, ResourceRequest\u003e();\n    ResourceRequest anyRequest \u003d null;\n    for (ContainerSimulator cs : csList) {\n      String rackHostNames[] \u003d SLSUtils.getRackHostName(cs.getHostname());\n      // check rack local\n      String rackname \u003d rackHostNames[0];\n      if (rackLocalRequestMap.containsKey(rackname)) {\n        rackLocalRequestMap.get(rackname).setNumContainers(\n            rackLocalRequestMap.get(rackname).getNumContainers() + 1);\n      } else {\n        ResourceRequest request \u003d createResourceRequest(\n                cs.getResource(), rackname, priority, 1);\n        rackLocalRequestMap.put(rackname, request);\n      }\n      // check node local\n      String hostname \u003d rackHostNames[1];\n      if (nodeLocalRequestMap.containsKey(hostname)) {\n        nodeLocalRequestMap.get(hostname).setNumContainers(\n            nodeLocalRequestMap.get(hostname).getNumContainers() + 1);\n      } else {\n        ResourceRequest request \u003d createResourceRequest(\n                cs.getResource(), hostname, priority, 1);\n        nodeLocalRequestMap.put(hostname, request);\n      }\n      // any\n      if (anyRequest \u003d\u003d null) {\n        anyRequest \u003d createResourceRequest(\n                cs.getResource(), ResourceRequest.ANY, priority, 1);\n      } else {\n        anyRequest.setNumContainers(anyRequest.getNumContainers() + 1);\n      }\n    }\n    List\u003cResourceRequest\u003e ask \u003d new ArrayList\u003cResourceRequest\u003e();\n    ask.addAll(nodeLocalRequestMap.values());\n    ask.addAll(rackLocalRequestMap.values());\n    if (anyRequest !\u003d null) {\n      ask.add(anyRequest);\n    }\n    return ask;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java"
    }
  }
}