{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KeyValueBasedTimelineStore.java",
  "functionName": "maskFields",
  "functionId": "maskFields___entity-TimelineEntity__fields-EnumSet__Field__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
  "functionStartLine": 509,
  "functionEndLine": 541,
  "numCommitsSeen": 19,
  "timeTaken": 2771,
  "changeHistory": [
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
    "9e40de6af7959ac7bb5f4e4d2833ca14ea457614",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
    "892ada8fb35d57a1120d548fdefb056824aa939f",
    "84425fb435cb603fd8adcc2f76631c0244175310",
    "96578f0e01ba751175d4bcbad48d6f679e662382"
  ],
  "changeHistoryShort": {
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "9e40de6af7959ac7bb5f4e4d2833ca14ea457614": "Ybodychange",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": "Yfilerename",
    "892ada8fb35d57a1120d548fdefb056824aa939f": "Ybodychange",
    "84425fb435cb603fd8adcc2f76631c0244175310": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
    "96578f0e01ba751175d4bcbad48d6f679e662382": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
      "commitDate": "28/01/16 2:24 PM",
      "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
          "commitDate": "28/01/16 2:24 PM",
          "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
          "commitAuthor": "Xuan",
          "commitDateOld": "28/01/16 10:59 AM",
          "commitNameOld": "61382ff8fabc76b3a51f227646573cdf367fea1a",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-  private static TimelineEntity maskFields(\n-      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n-    // Conceal the fields that are not going to be exposed\n-    TimelineEntity entityToReturn \u003d new TimelineEntity();\n-    entityToReturn.setEntityId(entity.getEntityId());\n-    entityToReturn.setEntityType(entity.getEntityType());\n-    entityToReturn.setStartTime(entity.getStartTime());\n-    entityToReturn.setDomainId(entity.getDomainId());\n-    // Deep copy\n-    if (fields.contains(Field.EVENTS)) {\n-      entityToReturn.addEvents(entity.getEvents());\n-    } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n-      entityToReturn.addEvent(entity.getEvents().get(0));\n-    } else {\n-      entityToReturn.setEvents(null);\n-    }\n-    if (fields.contains(Field.RELATED_ENTITIES)) {\n-      entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n-    } else {\n-      entityToReturn.setRelatedEntities(null);\n-    }\n-    if (fields.contains(Field.PRIMARY_FILTERS)) {\n-      entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n-    } else {\n-      entityToReturn.setPrimaryFilters(null);\n-    }\n-    if (fields.contains(Field.OTHER_INFO)) {\n-      entityToReturn.addOtherInfo(entity.getOtherInfo());\n-    } else {\n-      entityToReturn.setOtherInfo(null);\n-    }\n-    return entityToReturn;\n-  }\n\\ No newline at end of file\n+    static TimelineEntity maskFields(\n+        TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n+      // Conceal the fields that are not going to be exposed\n+      TimelineEntity entityToReturn \u003d new TimelineEntity();\n+      entityToReturn.setEntityId(entity.getEntityId());\n+      entityToReturn.setEntityType(entity.getEntityType());\n+      entityToReturn.setStartTime(entity.getStartTime());\n+      entityToReturn.setDomainId(entity.getDomainId());\n+      // Deep copy\n+      if (fields.contains(Field.EVENTS)) {\n+        entityToReturn.addEvents(entity.getEvents());\n+      } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n+        entityToReturn.addEvent(entity.getEvents().get(0));\n+      } else {\n+        entityToReturn.setEvents(null);\n+      }\n+      if (fields.contains(Field.RELATED_ENTITIES)) {\n+        entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n+      } else {\n+        entityToReturn.setRelatedEntities(null);\n+      }\n+      if (fields.contains(Field.PRIMARY_FILTERS)) {\n+        entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n+      } else {\n+        entityToReturn.setPrimaryFilters(null);\n+      }\n+      if (fields.contains(Field.OTHER_INFO)) {\n+        entityToReturn.addOtherInfo(entity.getOtherInfo());\n+      } else {\n+        entityToReturn.setOtherInfo(null);\n+      }\n+      return entityToReturn;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    static TimelineEntity maskFields(\n        TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n      // Conceal the fields that are not going to be exposed\n      TimelineEntity entityToReturn \u003d new TimelineEntity();\n      entityToReturn.setEntityId(entity.getEntityId());\n      entityToReturn.setEntityType(entity.getEntityType());\n      entityToReturn.setStartTime(entity.getStartTime());\n      entityToReturn.setDomainId(entity.getDomainId());\n      // Deep copy\n      if (fields.contains(Field.EVENTS)) {\n        entityToReturn.addEvents(entity.getEvents());\n      } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n        entityToReturn.addEvent(entity.getEvents().get(0));\n      } else {\n        entityToReturn.setEvents(null);\n      }\n      if (fields.contains(Field.RELATED_ENTITIES)) {\n        entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n      } else {\n        entityToReturn.setRelatedEntities(null);\n      }\n      if (fields.contains(Field.PRIMARY_FILTERS)) {\n        entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n      } else {\n        entityToReturn.setPrimaryFilters(null);\n      }\n      if (fields.contains(Field.OTHER_INFO)) {\n        entityToReturn.addOtherInfo(entity.getOtherInfo());\n      } else {\n        entityToReturn.setOtherInfo(null);\n      }\n      return entityToReturn;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
            "oldMethodName": "maskFields",
            "newMethodName": "maskFields"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
          "commitDate": "28/01/16 2:24 PM",
          "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
          "commitAuthor": "Xuan",
          "commitDateOld": "28/01/16 10:59 AM",
          "commitNameOld": "61382ff8fabc76b3a51f227646573cdf367fea1a",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-  private static TimelineEntity maskFields(\n-      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n-    // Conceal the fields that are not going to be exposed\n-    TimelineEntity entityToReturn \u003d new TimelineEntity();\n-    entityToReturn.setEntityId(entity.getEntityId());\n-    entityToReturn.setEntityType(entity.getEntityType());\n-    entityToReturn.setStartTime(entity.getStartTime());\n-    entityToReturn.setDomainId(entity.getDomainId());\n-    // Deep copy\n-    if (fields.contains(Field.EVENTS)) {\n-      entityToReturn.addEvents(entity.getEvents());\n-    } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n-      entityToReturn.addEvent(entity.getEvents().get(0));\n-    } else {\n-      entityToReturn.setEvents(null);\n-    }\n-    if (fields.contains(Field.RELATED_ENTITIES)) {\n-      entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n-    } else {\n-      entityToReturn.setRelatedEntities(null);\n-    }\n-    if (fields.contains(Field.PRIMARY_FILTERS)) {\n-      entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n-    } else {\n-      entityToReturn.setPrimaryFilters(null);\n-    }\n-    if (fields.contains(Field.OTHER_INFO)) {\n-      entityToReturn.addOtherInfo(entity.getOtherInfo());\n-    } else {\n-      entityToReturn.setOtherInfo(null);\n-    }\n-    return entityToReturn;\n-  }\n\\ No newline at end of file\n+    static TimelineEntity maskFields(\n+        TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n+      // Conceal the fields that are not going to be exposed\n+      TimelineEntity entityToReturn \u003d new TimelineEntity();\n+      entityToReturn.setEntityId(entity.getEntityId());\n+      entityToReturn.setEntityType(entity.getEntityType());\n+      entityToReturn.setStartTime(entity.getStartTime());\n+      entityToReturn.setDomainId(entity.getDomainId());\n+      // Deep copy\n+      if (fields.contains(Field.EVENTS)) {\n+        entityToReturn.addEvents(entity.getEvents());\n+      } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n+        entityToReturn.addEvent(entity.getEvents().get(0));\n+      } else {\n+        entityToReturn.setEvents(null);\n+      }\n+      if (fields.contains(Field.RELATED_ENTITIES)) {\n+        entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n+      } else {\n+        entityToReturn.setRelatedEntities(null);\n+      }\n+      if (fields.contains(Field.PRIMARY_FILTERS)) {\n+        entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n+      } else {\n+        entityToReturn.setPrimaryFilters(null);\n+      }\n+      if (fields.contains(Field.OTHER_INFO)) {\n+        entityToReturn.addOtherInfo(entity.getOtherInfo());\n+      } else {\n+        entityToReturn.setOtherInfo(null);\n+      }\n+      return entityToReturn;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    static TimelineEntity maskFields(\n        TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n      // Conceal the fields that are not going to be exposed\n      TimelineEntity entityToReturn \u003d new TimelineEntity();\n      entityToReturn.setEntityId(entity.getEntityId());\n      entityToReturn.setEntityType(entity.getEntityType());\n      entityToReturn.setStartTime(entity.getStartTime());\n      entityToReturn.setDomainId(entity.getDomainId());\n      // Deep copy\n      if (fields.contains(Field.EVENTS)) {\n        entityToReturn.addEvents(entity.getEvents());\n      } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n        entityToReturn.addEvent(entity.getEvents().get(0));\n      } else {\n        entityToReturn.setEvents(null);\n      }\n      if (fields.contains(Field.RELATED_ENTITIES)) {\n        entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n      } else {\n        entityToReturn.setRelatedEntities(null);\n      }\n      if (fields.contains(Field.PRIMARY_FILTERS)) {\n        entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n      } else {\n        entityToReturn.setPrimaryFilters(null);\n      }\n      if (fields.contains(Field.OTHER_INFO)) {\n        entityToReturn.addOtherInfo(entity.getOtherInfo());\n      } else {\n        entityToReturn.setOtherInfo(null);\n      }\n      return entityToReturn;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[static]"
          }
        }
      ]
    },
    "9e40de6af7959ac7bb5f4e4d2833ca14ea457614": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2446. Augmented Timeline service APIs to start taking in domains as a parameter while posting entities and events. Contributed by Zhijie Shen.\n",
      "commitDate": "01/10/14 5:52 PM",
      "commitName": "9e40de6af7959ac7bb5f4e4d2833ca14ea457614",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/09/14 11:27 AM",
      "commitNameOld": "d78b452a4f413c6931a494c33df0666ce9b44973",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.27,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   private static TimelineEntity maskFields(\n       TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n     // Conceal the fields that are not going to be exposed\n     TimelineEntity entityToReturn \u003d new TimelineEntity();\n     entityToReturn.setEntityId(entity.getEntityId());\n     entityToReturn.setEntityType(entity.getEntityType());\n     entityToReturn.setStartTime(entity.getStartTime());\n+    entityToReturn.setDomainId(entity.getDomainId());\n     // Deep copy\n     if (fields.contains(Field.EVENTS)) {\n       entityToReturn.addEvents(entity.getEvents());\n     } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n       entityToReturn.addEvent(entity.getEvents().get(0));\n     } else {\n       entityToReturn.setEvents(null);\n     }\n     if (fields.contains(Field.RELATED_ENTITIES)) {\n       entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n     } else {\n       entityToReturn.setRelatedEntities(null);\n     }\n     if (fields.contains(Field.PRIMARY_FILTERS)) {\n       entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n     } else {\n       entityToReturn.setPrimaryFilters(null);\n     }\n     if (fields.contains(Field.OTHER_INFO)) {\n       entityToReturn.addOtherInfo(entity.getOtherInfo());\n     } else {\n       entityToReturn.setOtherInfo(null);\n     }\n     return entityToReturn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static TimelineEntity maskFields(\n      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    TimelineEntity entityToReturn \u003d new TimelineEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    entityToReturn.setDomainId(entity.getDomainId());\n    // Deep copy\n    if (fields.contains(Field.EVENTS)) {\n      entityToReturn.addEvents(entity.getEvents());\n    } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n      entityToReturn.addEvent(entity.getEvents().get(0));\n    } else {\n      entityToReturn.setEvents(null);\n    }\n    if (fields.contains(Field.RELATED_ENTITIES)) {\n      entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n    } else {\n      entityToReturn.setRelatedEntities(null);\n    }\n    if (fields.contains(Field.PRIMARY_FILTERS)) {\n      entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n    } else {\n      entityToReturn.setPrimaryFilters(null);\n    }\n    if (fields.contains(Field.OTHER_INFO)) {\n      entityToReturn.addOtherInfo(entity.getOtherInfo());\n    } else {\n      entityToReturn.setOtherInfo(null);\n    }\n    return entityToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java",
      "extendedDetails": {}
    },
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2107. Refactored timeline classes into o.a.h.y.s.timeline package. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/14 11:09 AM",
      "commitName": "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "28/05/14 10:44 AM",
      "commitNameOld": "cfd8647d0f20c08761f908be1f5b718c1c372498",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static TimelineEntity maskFields(\n      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    TimelineEntity entityToReturn \u003d new TimelineEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    // Deep copy\n    if (fields.contains(Field.EVENTS)) {\n      entityToReturn.addEvents(entity.getEvents());\n    } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n      entityToReturn.addEvent(entity.getEvents().get(0));\n    } else {\n      entityToReturn.setEvents(null);\n    }\n    if (fields.contains(Field.RELATED_ENTITIES)) {\n      entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n    } else {\n      entityToReturn.setRelatedEntities(null);\n    }\n    if (fields.contains(Field.PRIMARY_FILTERS)) {\n      entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n    } else {\n      entityToReturn.setPrimaryFilters(null);\n    }\n    if (fields.contains(Field.OTHER_INFO)) {\n      entityToReturn.addOtherInfo(entity.getOtherInfo());\n    } else {\n      entityToReturn.setOtherInfo(null);\n    }\n    return entityToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/MemoryTimelineStore.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java"
      }
    },
    "892ada8fb35d57a1120d548fdefb056824aa939f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1937. Added owner-only ACLs support for Timeline Client and server. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1597186 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/14 2:19 PM",
      "commitName": "892ada8fb35d57a1120d548fdefb056824aa939f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/03/14 11:14 AM",
      "commitNameOld": "0f1eda6bbf895a1239b25cdf8b17fabd3759e806",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 60.13,
      "commitsBetweenForRepo": 371,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,32 @@\n   private static TimelineEntity maskFields(\n       TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n     // Conceal the fields that are not going to be exposed\n     TimelineEntity entityToReturn \u003d new TimelineEntity();\n     entityToReturn.setEntityId(entity.getEntityId());\n     entityToReturn.setEntityType(entity.getEntityType());\n     entityToReturn.setStartTime(entity.getStartTime());\n-    entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n-        entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n-            Arrays.asList(entity.getEvents().get(0)) : null);\n-    entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n-        entity.getRelatedEntities() : null);\n-    entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n-        entity.getPrimaryFilters() : null);\n-    entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n-        entity.getOtherInfo() : null);\n+    // Deep copy\n+    if (fields.contains(Field.EVENTS)) {\n+      entityToReturn.addEvents(entity.getEvents());\n+    } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n+      entityToReturn.addEvent(entity.getEvents().get(0));\n+    } else {\n+      entityToReturn.setEvents(null);\n+    }\n+    if (fields.contains(Field.RELATED_ENTITIES)) {\n+      entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n+    } else {\n+      entityToReturn.setRelatedEntities(null);\n+    }\n+    if (fields.contains(Field.PRIMARY_FILTERS)) {\n+      entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n+    } else {\n+      entityToReturn.setPrimaryFilters(null);\n+    }\n+    if (fields.contains(Field.OTHER_INFO)) {\n+      entityToReturn.addOtherInfo(entity.getOtherInfo());\n+    } else {\n+      entityToReturn.setOtherInfo(null);\n+    }\n     return entityToReturn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static TimelineEntity maskFields(\n      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    TimelineEntity entityToReturn \u003d new TimelineEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    // Deep copy\n    if (fields.contains(Field.EVENTS)) {\n      entityToReturn.addEvents(entity.getEvents());\n    } else if (fields.contains(Field.LAST_EVENT_ONLY)) {\n      entityToReturn.addEvent(entity.getEvents().get(0));\n    } else {\n      entityToReturn.setEvents(null);\n    }\n    if (fields.contains(Field.RELATED_ENTITIES)) {\n      entityToReturn.addRelatedEntities(entity.getRelatedEntities());\n    } else {\n      entityToReturn.setRelatedEntities(null);\n    }\n    if (fields.contains(Field.PRIMARY_FILTERS)) {\n      entityToReturn.addPrimaryFilters(entity.getPrimaryFilters());\n    } else {\n      entityToReturn.setPrimaryFilters(null);\n    }\n    if (fields.contains(Field.OTHER_INFO)) {\n      entityToReturn.addOtherInfo(entity.getOtherInfo());\n    } else {\n      entityToReturn.setOtherInfo(null);\n    }\n    return entityToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/MemoryTimelineStore.java",
      "extendedDetails": {}
    },
    "84425fb435cb603fd8adcc2f76631c0244175310": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 12:55 PM",
      "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private static ATSEntity maskFields(\n-      ATSEntity entity, EnumSet\u003cField\u003e fields) {\n+  private static TimelineEntity maskFields(\n+      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n     // Conceal the fields that are not going to be exposed\n-    ATSEntity entityToReturn \u003d new ATSEntity();\n+    TimelineEntity entityToReturn \u003d new TimelineEntity();\n     entityToReturn.setEntityId(entity.getEntityId());\n     entityToReturn.setEntityType(entity.getEntityType());\n     entityToReturn.setStartTime(entity.getStartTime());\n     entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n         entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n             Arrays.asList(entity.getEvents().get(0)) : null);\n     entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n         entity.getRelatedEntities() : null);\n     entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n         entity.getPrimaryFilters() : null);\n     entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n         entity.getOtherInfo() : null);\n     return entityToReturn;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static TimelineEntity maskFields(\n      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    TimelineEntity entityToReturn \u003d new TimelineEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n        entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n            Arrays.asList(entity.getEvents().get(0)) : null);\n    entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n        entity.getRelatedEntities() : null);\n    entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n        entity.getPrimaryFilters() : null);\n    entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n        entity.getOtherInfo() : null);\n    return entityToReturn;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/MemoryTimelineStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/apptimeline/MemoryApplicationTimelineStore.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/MemoryTimelineStore.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private static ATSEntity maskFields(\n-      ATSEntity entity, EnumSet\u003cField\u003e fields) {\n+  private static TimelineEntity maskFields(\n+      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n     // Conceal the fields that are not going to be exposed\n-    ATSEntity entityToReturn \u003d new ATSEntity();\n+    TimelineEntity entityToReturn \u003d new TimelineEntity();\n     entityToReturn.setEntityId(entity.getEntityId());\n     entityToReturn.setEntityType(entity.getEntityType());\n     entityToReturn.setStartTime(entity.getStartTime());\n     entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n         entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n             Arrays.asList(entity.getEvents().get(0)) : null);\n     entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n         entity.getRelatedEntities() : null);\n     entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n         entity.getPrimaryFilters() : null);\n     entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n         entity.getOtherInfo() : null);\n     return entityToReturn;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static TimelineEntity maskFields(\n      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    TimelineEntity entityToReturn \u003d new TimelineEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n        entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n            Arrays.asList(entity.getEvents().get(0)) : null);\n    entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n        entity.getRelatedEntities() : null);\n    entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n        entity.getPrimaryFilters() : null);\n    entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n        entity.getOtherInfo() : null);\n    return entityToReturn;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/MemoryTimelineStore.java",
          "extendedDetails": {
            "oldValue": "ATSEntity",
            "newValue": "TimelineEntity"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private static ATSEntity maskFields(\n-      ATSEntity entity, EnumSet\u003cField\u003e fields) {\n+  private static TimelineEntity maskFields(\n+      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n     // Conceal the fields that are not going to be exposed\n-    ATSEntity entityToReturn \u003d new ATSEntity();\n+    TimelineEntity entityToReturn \u003d new TimelineEntity();\n     entityToReturn.setEntityId(entity.getEntityId());\n     entityToReturn.setEntityType(entity.getEntityType());\n     entityToReturn.setStartTime(entity.getStartTime());\n     entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n         entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n             Arrays.asList(entity.getEvents().get(0)) : null);\n     entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n         entity.getRelatedEntities() : null);\n     entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n         entity.getPrimaryFilters() : null);\n     entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n         entity.getOtherInfo() : null);\n     return entityToReturn;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static TimelineEntity maskFields(\n      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    TimelineEntity entityToReturn \u003d new TimelineEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n        entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n            Arrays.asList(entity.getEvents().get(0)) : null);\n    entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n        entity.getRelatedEntities() : null);\n    entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n        entity.getPrimaryFilters() : null);\n    entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n        entity.getOtherInfo() : null);\n    return entityToReturn;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/MemoryTimelineStore.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private static ATSEntity maskFields(\n-      ATSEntity entity, EnumSet\u003cField\u003e fields) {\n+  private static TimelineEntity maskFields(\n+      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n     // Conceal the fields that are not going to be exposed\n-    ATSEntity entityToReturn \u003d new ATSEntity();\n+    TimelineEntity entityToReturn \u003d new TimelineEntity();\n     entityToReturn.setEntityId(entity.getEntityId());\n     entityToReturn.setEntityType(entity.getEntityType());\n     entityToReturn.setStartTime(entity.getStartTime());\n     entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n         entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n             Arrays.asList(entity.getEvents().get(0)) : null);\n     entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n         entity.getRelatedEntities() : null);\n     entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n         entity.getPrimaryFilters() : null);\n     entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n         entity.getOtherInfo() : null);\n     return entityToReturn;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static TimelineEntity maskFields(\n      TimelineEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    TimelineEntity entityToReturn \u003d new TimelineEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n        entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n            Arrays.asList(entity.getEvents().get(0)) : null);\n    entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n        entity.getRelatedEntities() : null);\n    entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n        entity.getPrimaryFilters() : null);\n    entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n        entity.getOtherInfo() : null);\n    return entityToReturn;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/MemoryTimelineStore.java",
          "extendedDetails": {
            "oldValue": "[entity-ATSEntity, fields-EnumSet\u003cField\u003e]",
            "newValue": "[entity-TimelineEntity, fields-EnumSet\u003cField\u003e]"
          }
        }
      ]
    },
    "96578f0e01ba751175d4bcbad48d6f679e662382": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1634. Added a testable in-memory implementation of ApplicationTimelineStore. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564583 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/14 4:32 PM",
      "commitName": "96578f0e01ba751175d4bcbad48d6f679e662382",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,18 @@\n+  private static ATSEntity maskFields(\n+      ATSEntity entity, EnumSet\u003cField\u003e fields) {\n+    // Conceal the fields that are not going to be exposed\n+    ATSEntity entityToReturn \u003d new ATSEntity();\n+    entityToReturn.setEntityId(entity.getEntityId());\n+    entityToReturn.setEntityType(entity.getEntityType());\n+    entityToReturn.setStartTime(entity.getStartTime());\n+    entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n+        entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n+            Arrays.asList(entity.getEvents().get(0)) : null);\n+    entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n+        entity.getRelatedEntities() : null);\n+    entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n+        entity.getPrimaryFilters() : null);\n+    entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n+        entity.getOtherInfo() : null);\n+    return entityToReturn;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ATSEntity maskFields(\n      ATSEntity entity, EnumSet\u003cField\u003e fields) {\n    // Conceal the fields that are not going to be exposed\n    ATSEntity entityToReturn \u003d new ATSEntity();\n    entityToReturn.setEntityId(entity.getEntityId());\n    entityToReturn.setEntityType(entity.getEntityType());\n    entityToReturn.setStartTime(entity.getStartTime());\n    entityToReturn.setEvents(fields.contains(Field.EVENTS) ?\n        entity.getEvents() : fields.contains(Field.LAST_EVENT_ONLY) ?\n            Arrays.asList(entity.getEvents().get(0)) : null);\n    entityToReturn.setRelatedEntities(fields.contains(Field.RELATED_ENTITIES) ?\n        entity.getRelatedEntities() : null);\n    entityToReturn.setPrimaryFilters(fields.contains(Field.PRIMARY_FILTERS) ?\n        entity.getPrimaryFilters() : null);\n    entityToReturn.setOtherInfo(fields.contains(Field.OTHER_INFO) ?\n        entity.getOtherInfo() : null);\n    return entityToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/apptimeline/MemoryApplicationTimelineStore.java"
    }
  }
}