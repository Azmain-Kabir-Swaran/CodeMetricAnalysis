{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseTimelineWriterImpl.java",
  "functionName": "storeFlowMetrics",
  "functionId": "storeFlowMetrics___rowKey-byte[]__metrics-Set__TimelineMetric____attributes-Attribute",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
  "functionStartLine": 385,
  "functionEndLine": 397,
  "numCommitsSeen": 36,
  "timeTaken": 2825,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "892b193bd77c15932b4c084c1d525b7017def0d4",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymultichange(Yfilerename,Ybodychange)",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "892b193bd77c15932b4c084c1d525b7017def0d4": "Ybodychange",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": "Ybodychange",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n       Attribute... attributes) throws IOException {\n     for (TimelineMetric metric : metrics) {\n       byte[] metricColumnQualifier \u003d stringKeyConverter.encode(metric.getId());\n       Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n       for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n         Long timestamp \u003d timeseriesEntry.getKey();\n-        FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n+        ColumnRWHelper.store(rowKey, flowRunTable, FlowRunColumnPrefix.METRIC,\n             metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n             attributes);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n      Attribute... attributes) throws IOException {\n    for (TimelineMetric metric : metrics) {\n      byte[] metricColumnQualifier \u003d stringKeyConverter.encode(metric.getId());\n      Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n      for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n        Long timestamp \u003d timeseriesEntry.getKey();\n        ColumnRWHelper.store(rowKey, flowRunTable, FlowRunColumnPrefix.METRIC,\n            metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n            attributes);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n       Attribute... attributes) throws IOException {\n     for (TimelineMetric metric : metrics) {\n       byte[] metricColumnQualifier \u003d stringKeyConverter.encode(metric.getId());\n       Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n       for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n         Long timestamp \u003d timeseriesEntry.getKey();\n-        FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n+        ColumnRWHelper.store(rowKey, flowRunTable, FlowRunColumnPrefix.METRIC,\n             metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n             attributes);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n      Attribute... attributes) throws IOException {\n    for (TimelineMetric metric : metrics) {\n      byte[] metricColumnQualifier \u003d stringKeyConverter.encode(metric.getId());\n      Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n      for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n        Long timestamp \u003d timeseriesEntry.getKey();\n        ColumnRWHelper.store(rowKey, flowRunTable, FlowRunColumnPrefix.METRIC,\n            metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n            attributes);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n      Attribute... attributes) throws IOException {\n    for (TimelineMetric metric : metrics) {\n      byte[] metricColumnQualifier \u003d stringKeyConverter.encode(metric.getId());\n      Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n      for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n        Long timestamp \u003d timeseriesEntry.getKey();\n        FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n            metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n            attributes);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
      }
    },
    "892b193bd77c15932b4c084c1d525b7017def0d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n   private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n       Attribute... attributes) throws IOException {\n     for (TimelineMetric metric : metrics) {\n-      byte[] metricColumnQualifier \u003d\n-          StringKeyConverter.getInstance().encode(metric.getId());\n+      byte[] metricColumnQualifier \u003d stringKeyConverter.encode(metric.getId());\n       Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n       for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n         Long timestamp \u003d timeseriesEntry.getKey();\n         FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n             metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n             attributes);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n      Attribute... attributes) throws IOException {\n    for (TimelineMetric metric : metrics) {\n      byte[] metricColumnQualifier \u003d stringKeyConverter.encode(metric.getId());\n      Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n      for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n        Long timestamp \u003d timeseriesEntry.getKey();\n        FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n            metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n            attributes);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5109. timestamps are stored unencoded causing parse errors (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "831a3ffd6ef49214b08cb30329494418703be0f9",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n       Attribute... attributes) throws IOException {\n     for (TimelineMetric metric : metrics) {\n-      String metricColumnQualifier \u003d metric.getId();\n+      byte[] metricColumnQualifier \u003d\n+          StringKeyConverter.getInstance().encode(metric.getId());\n       Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n       for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n         Long timestamp \u003d timeseriesEntry.getKey();\n         FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n             metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n             attributes);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n      Attribute... attributes) throws IOException {\n    for (TimelineMetric metric : metrics) {\n      byte[] metricColumnQualifier \u003d\n          StringKeyConverter.getInstance().encode(metric.getId());\n      Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n      for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n        Long timestamp \u003d timeseriesEntry.getKey();\n        FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n            metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n            attributes);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,13 @@\n+  private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n+      Attribute... attributes) throws IOException {\n+    for (TimelineMetric metric : metrics) {\n+      String metricColumnQualifier \u003d metric.getId();\n+      Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n+      for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n+        Long timestamp \u003d timeseriesEntry.getKey();\n+        FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n+            metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n+            attributes);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeFlowMetrics(byte[] rowKey, Set\u003cTimelineMetric\u003e metrics,\n      Attribute... attributes) throws IOException {\n    for (TimelineMetric metric : metrics) {\n      String metricColumnQualifier \u003d metric.getId();\n      Map\u003cLong, Number\u003e timeseries \u003d metric.getValues();\n      for (Map.Entry\u003cLong, Number\u003e timeseriesEntry : timeseries.entrySet()) {\n        Long timestamp \u003d timeseriesEntry.getKey();\n        FlowRunColumnPrefix.METRIC.store(rowKey, flowRunTable,\n            metricColumnQualifier, timestamp, timeseriesEntry.getValue(),\n            attributes);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
    }
  }
}