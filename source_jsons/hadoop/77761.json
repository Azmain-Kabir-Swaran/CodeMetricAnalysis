{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SFTPFileSystem.java",
  "functionName": "listStatus",
  "functionId": "listStatus___client-ChannelSftp__file-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java",
  "functionStartLine": 419,
  "functionEndLine": 448,
  "numCommitsSeen": 7,
  "timeTaken": 660,
  "changeHistory": [
    "559425dcb9302861c3c28b759492a68f8d597092"
  ],
  "changeHistoryShort": {
    "559425dcb9302861c3c28b759492a68f8d597092": "Yintroduced"
  },
  "changeHistoryDetails": {
    "559425dcb9302861c3c28b759492a68f8d597092": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-5732. Add SFTPFileSystem. Contributed by Ramtin Boustani and Inigo Goiri\n",
      "commitDate": "07/07/15 10:08 AM",
      "commitName": "559425dcb9302861c3c28b759492a68f8d597092",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,30 @@\n+  private FileStatus[] listStatus(ChannelSftp client, Path file)\n+      throws IOException {\n+    Path workDir;\n+    try {\n+      workDir \u003d new Path(client.pwd());\n+    } catch (SftpException e) {\n+      throw new IOException(e);\n+    }\n+    Path absolute \u003d makeAbsolute(workDir, file);\n+    FileStatus fileStat \u003d getFileStatus(client, absolute);\n+    if (!fileStat.isDirectory()) {\n+      return new FileStatus[] {fileStat};\n+    }\n+    Vector\u003cLsEntry\u003e sftpFiles;\n+    try {\n+      sftpFiles \u003d (Vector\u003cLsEntry\u003e) client.ls(absolute.toUri().getPath());\n+    } catch (SftpException e) {\n+      throw new IOException(e);\n+    }\n+    ArrayList\u003cFileStatus\u003e fileStats \u003d new ArrayList\u003cFileStatus\u003e();\n+    for (int i \u003d 0; i \u003c sftpFiles.size(); i++) {\n+      LsEntry entry \u003d sftpFiles.get(i);\n+      String fname \u003d entry.getFilename();\n+      // skip current and parent directory, ie. \".\" and \"..\"\n+      if (!\".\".equalsIgnoreCase(fname) \u0026\u0026 !\"..\".equalsIgnoreCase(fname)) {\n+        fileStats.add(getFileStatus(client, entry, absolute));\n+      }\n+    }\n+    return fileStats.toArray(new FileStatus[fileStats.size()]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus[] listStatus(ChannelSftp client, Path file)\n      throws IOException {\n    Path workDir;\n    try {\n      workDir \u003d new Path(client.pwd());\n    } catch (SftpException e) {\n      throw new IOException(e);\n    }\n    Path absolute \u003d makeAbsolute(workDir, file);\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (!fileStat.isDirectory()) {\n      return new FileStatus[] {fileStat};\n    }\n    Vector\u003cLsEntry\u003e sftpFiles;\n    try {\n      sftpFiles \u003d (Vector\u003cLsEntry\u003e) client.ls(absolute.toUri().getPath());\n    } catch (SftpException e) {\n      throw new IOException(e);\n    }\n    ArrayList\u003cFileStatus\u003e fileStats \u003d new ArrayList\u003cFileStatus\u003e();\n    for (int i \u003d 0; i \u003c sftpFiles.size(); i++) {\n      LsEntry entry \u003d sftpFiles.get(i);\n      String fname \u003d entry.getFilename();\n      // skip current and parent directory, ie. \".\" and \"..\"\n      if (!\".\".equalsIgnoreCase(fname) \u0026\u0026 !\"..\".equalsIgnoreCase(fname)) {\n        fileStats.add(getFileStatus(client, entry, absolute));\n      }\n    }\n    return fileStats.toArray(new FileStatus[fileStats.size()]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/sftp/SFTPFileSystem.java"
    }
  }
}