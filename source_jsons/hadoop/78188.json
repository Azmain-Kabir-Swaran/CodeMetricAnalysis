{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AclCommands.java",
  "functionName": "printExtendedAclEntry",
  "functionId": "printExtendedAclEntry___aclStatus-AclStatus__fsPerm-FsPermission__entry-AclEntry",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
  "functionStartLine": 138,
  "functionEndLine": 153,
  "numCommitsSeen": 29,
  "timeTaken": 1787,
  "changeHistory": [
    "1d330fbaf6b50802750aa461640773fb788ef884",
    "ffe942b82c1208bc7b22899da3a233944cb5ab52",
    "d5639c85fb92a666abebd75390bad8b7fdd9df50",
    "d5f4f76a238c66be30f27f3d418d0f431c0f10b1"
  ],
  "changeHistoryShort": {
    "1d330fbaf6b50802750aa461640773fb788ef884": "Ybodychange",
    "ffe942b82c1208bc7b22899da3a233944cb5ab52": "Ymultichange(Yparameterchange,Ybodychange)",
    "d5639c85fb92a666abebd75390bad8b7fdd9df50": "Ybodychange",
    "d5f4f76a238c66be30f27f3d418d0f431c0f10b1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1d330fbaf6b50802750aa461640773fb788ef884": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13150. Avoid use of toString() in output of HDFS ACL shell commands. Contributed by Chris Nauroth.\n",
      "commitDate": "06/10/16 1:19 PM",
      "commitName": "1d330fbaf6b50802750aa461640773fb788ef884",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "21/07/16 2:12 PM",
      "commitNameOld": "43cf6b101dacd96bacfd199826b717f6946109af",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 76.96,
      "commitsBetweenForRepo": 494,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void printExtendedAclEntry(AclStatus aclStatus,\n         FsPermission fsPerm, AclEntry entry) {\n       if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n         FsAction entryPerm \u003d entry.getPermission();\n         FsAction effectivePerm \u003d aclStatus\n             .getEffectivePermission(entry, fsPerm);\n         if (entryPerm !\u003d effectivePerm) {\n           out.println(String.format(\"%s\\t#effective:%s\", entry,\n             effectivePerm.SYMBOL));\n         } else {\n-          out.println(entry);\n+          out.println(entry.toStringStable());\n         }\n       } else {\n-        out.println(entry);\n+        out.println(entry.toStringStable());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void printExtendedAclEntry(AclStatus aclStatus,\n        FsPermission fsPerm, AclEntry entry) {\n      if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n        FsAction entryPerm \u003d entry.getPermission();\n        FsAction effectivePerm \u003d aclStatus\n            .getEffectivePermission(entry, fsPerm);\n        if (entryPerm !\u003d effectivePerm) {\n          out.println(String.format(\"%s\\t#effective:%s\", entry,\n            effectivePerm.SYMBOL));\n        } else {\n          out.println(entry.toStringStable());\n        }\n      } else {\n        out.println(entry.toStringStable());\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
      "extendedDetails": {}
    },
    "ffe942b82c1208bc7b22899da3a233944cb5ab52": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7384. getfacl command and getAclStatus output should be in sync. Contributed by Vinayakumar B.\n",
      "commitDate": "08/12/14 10:23 AM",
      "commitName": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7384. getfacl command and getAclStatus output should be in sync. Contributed by Vinayakumar B.\n",
          "commitDate": "08/12/14 10:23 AM",
          "commitName": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
          "commitAuthor": "cnauroth",
          "commitDateOld": "12/06/14 11:39 PM",
          "commitNameOld": "be3fdd1c40140e24df1a5414cf91537862b66e82",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 178.49,
          "commitsBetweenForRepo": 1588,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-    private void printExtendedAclEntry(AclEntry entry, FsAction maskPerm) {\n+    private void printExtendedAclEntry(AclStatus aclStatus,\n+        FsPermission fsPerm, AclEntry entry) {\n       if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n         FsAction entryPerm \u003d entry.getPermission();\n-        FsAction effectivePerm \u003d entryPerm.and(maskPerm);\n+        FsAction effectivePerm \u003d aclStatus\n+            .getEffectivePermission(entry, fsPerm);\n         if (entryPerm !\u003d effectivePerm) {\n           out.println(String.format(\"%s\\t#effective:%s\", entry,\n             effectivePerm.SYMBOL));\n         } else {\n           out.println(entry);\n         }\n       } else {\n         out.println(entry);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void printExtendedAclEntry(AclStatus aclStatus,\n        FsPermission fsPerm, AclEntry entry) {\n      if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n        FsAction entryPerm \u003d entry.getPermission();\n        FsAction effectivePerm \u003d aclStatus\n            .getEffectivePermission(entry, fsPerm);\n        if (entryPerm !\u003d effectivePerm) {\n          out.println(String.format(\"%s\\t#effective:%s\", entry,\n            effectivePerm.SYMBOL));\n        } else {\n          out.println(entry);\n        }\n      } else {\n        out.println(entry);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
          "extendedDetails": {
            "oldValue": "[entry-AclEntry, maskPerm-FsAction]",
            "newValue": "[aclStatus-AclStatus, fsPerm-FsPermission, entry-AclEntry]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7384. getfacl command and getAclStatus output should be in sync. Contributed by Vinayakumar B.\n",
          "commitDate": "08/12/14 10:23 AM",
          "commitName": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
          "commitAuthor": "cnauroth",
          "commitDateOld": "12/06/14 11:39 PM",
          "commitNameOld": "be3fdd1c40140e24df1a5414cf91537862b66e82",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 178.49,
          "commitsBetweenForRepo": 1588,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-    private void printExtendedAclEntry(AclEntry entry, FsAction maskPerm) {\n+    private void printExtendedAclEntry(AclStatus aclStatus,\n+        FsPermission fsPerm, AclEntry entry) {\n       if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n         FsAction entryPerm \u003d entry.getPermission();\n-        FsAction effectivePerm \u003d entryPerm.and(maskPerm);\n+        FsAction effectivePerm \u003d aclStatus\n+            .getEffectivePermission(entry, fsPerm);\n         if (entryPerm !\u003d effectivePerm) {\n           out.println(String.format(\"%s\\t#effective:%s\", entry,\n             effectivePerm.SYMBOL));\n         } else {\n           out.println(entry);\n         }\n       } else {\n         out.println(entry);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void printExtendedAclEntry(AclStatus aclStatus,\n        FsPermission fsPerm, AclEntry entry) {\n      if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n        FsAction entryPerm \u003d entry.getPermission();\n        FsAction effectivePerm \u003d aclStatus\n            .getEffectivePermission(entry, fsPerm);\n        if (entryPerm !\u003d effectivePerm) {\n          out.println(String.format(\"%s\\t#effective:%s\", entry,\n            effectivePerm.SYMBOL));\n        } else {\n          out.println(entry);\n        }\n      } else {\n        out.println(entry);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
          "extendedDetails": {}
        }
      ]
    },
    "d5639c85fb92a666abebd75390bad8b7fdd9df50": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10361. Correct alignment in CLI output for ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1571573 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/14 9:54 PM",
      "commitName": "d5639c85fb92a666abebd75390bad8b7fdd9df50",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "20/02/14 10:29 PM",
      "commitNameOld": "327d2ceca22119a73ea05ddf4620e5253a2fded6",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void printExtendedAclEntry(AclEntry entry, FsAction maskPerm) {\n       if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n         FsAction entryPerm \u003d entry.getPermission();\n         FsAction effectivePerm \u003d entryPerm.and(maskPerm);\n         if (entryPerm !\u003d effectivePerm) {\n-          out.println(String.format(\"%-31s #effective:%s\", entry,\n+          out.println(String.format(\"%s\\t#effective:%s\", entry,\n             effectivePerm.SYMBOL));\n         } else {\n           out.println(entry);\n         }\n       } else {\n         out.println(entry);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void printExtendedAclEntry(AclEntry entry, FsAction maskPerm) {\n      if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n        FsAction entryPerm \u003d entry.getPermission();\n        FsAction effectivePerm \u003d entryPerm.and(maskPerm);\n        if (entryPerm !\u003d effectivePerm) {\n          out.println(String.format(\"%s\\t#effective:%s\", entry,\n            effectivePerm.SYMBOL));\n        } else {\n          out.println(entry);\n        }\n      } else {\n        out.println(entry);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java",
      "extendedDetails": {}
    },
    "d5f4f76a238c66be30f27f3d418d0f431c0f10b1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10270. getfacl does not display effective permissions of masked. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1563219 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/14 10:59 AM",
      "commitName": "d5f4f76a238c66be30f27f3d418d0f431c0f10b1",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,14 @@\n+    private void printExtendedAclEntry(AclEntry entry, FsAction maskPerm) {\n+      if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n+        FsAction entryPerm \u003d entry.getPermission();\n+        FsAction effectivePerm \u003d entryPerm.and(maskPerm);\n+        if (entryPerm !\u003d effectivePerm) {\n+          out.println(String.format(\"%-31s #effective:%s\", entry,\n+            effectivePerm.SYMBOL));\n+        } else {\n+          out.println(entry);\n+        }\n+      } else {\n+        out.println(entry);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void printExtendedAclEntry(AclEntry entry, FsAction maskPerm) {\n      if (entry.getName() !\u003d null || entry.getType() \u003d\u003d AclEntryType.GROUP) {\n        FsAction entryPerm \u003d entry.getPermission();\n        FsAction effectivePerm \u003d entryPerm.and(maskPerm);\n        if (entryPerm !\u003d effectivePerm) {\n          out.println(String.format(\"%-31s #effective:%s\", entry,\n            effectivePerm.SYMBOL));\n        } else {\n          out.println(entry);\n        }\n      } else {\n        out.println(entry);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/AclCommands.java"
    }
  }
}