{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogServlet.java",
  "functionName": "validateUserInput",
  "functionId": "validateUserInput___applicationId-ApplicationId__applicationAttemptId-ApplicationAttemptId__containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogServlet.java",
  "functionStartLine": 131,
  "functionEndLine": 167,
  "numCommitsSeen": 4,
  "timeTaken": 1091,
  "changeHistory": [
    "71b2c2ffe962ff4f5799e1f55961db687cb55842"
  ],
  "changeHistoryShort": {
    "71b2c2ffe962ff4f5799e1f55961db687cb55842": "Yintroduced"
  },
  "changeHistoryDetails": {
    "71b2c2ffe962ff4f5799e1f55961db687cb55842": {
      "type": "Yintroduced",
      "commitMessage": "YARN-10101. Support listing of aggregated logs for containers belonging to an application attempt. Contributed by Adam Antal\n",
      "commitDate": "06/02/20 3:25 AM",
      "commitName": "71b2c2ffe962ff4f5799e1f55961db687cb55842",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,37 @@\n+  private void validateUserInput(ApplicationId applicationId,\n+      ApplicationAttemptId applicationAttemptId, ContainerId containerId) {\n+    // At least one field should be set\n+    if (applicationId \u003d\u003d null \u0026\u0026 applicationAttemptId \u003d\u003d null \u0026\u0026\n+        containerId \u003d\u003d null) {\n+      throw new IllegalArgumentException(\"Should set application id, \" +\n+          \"application attempt id or container id.\");\n+    }\n+\n+    // container id should belong to the app attempt and the app id,\n+    // if provided\n+    if (containerId !\u003d null) {\n+      if (applicationAttemptId !\u003d null \u0026\u0026 !applicationAttemptId.equals(\n+          containerId.getApplicationAttemptId())) {\n+        throw new IllegalArgumentException(\n+            String.format(\n+                \"Container %s does not belong to application attempt %s!\",\n+                containerId, applicationAttemptId));\n+      }\n+      if (applicationId !\u003d null \u0026\u0026 !applicationId.equals(\n+          containerId.getApplicationAttemptId().getApplicationId())) {\n+        throw new IllegalArgumentException(\n+            String.format(\n+                \"Container %s does not belong to application %s!\",\n+                containerId, applicationId));\n+      }\n+    }\n+\n+    // app attempt id should match the app id, if provided\n+    if (applicationAttemptId !\u003d null \u0026\u0026 applicationId !\u003d null \u0026\u0026\n+        !applicationId.equals(applicationAttemptId.getApplicationId())) {\n+      throw new IllegalArgumentException(\n+          String.format(\n+              \"Application attempt %s does not belong to application %s!\",\n+              applicationAttemptId, applicationId));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateUserInput(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, ContainerId containerId) {\n    // At least one field should be set\n    if (applicationId \u003d\u003d null \u0026\u0026 applicationAttemptId \u003d\u003d null \u0026\u0026\n        containerId \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Should set application id, \" +\n          \"application attempt id or container id.\");\n    }\n\n    // container id should belong to the app attempt and the app id,\n    // if provided\n    if (containerId !\u003d null) {\n      if (applicationAttemptId !\u003d null \u0026\u0026 !applicationAttemptId.equals(\n          containerId.getApplicationAttemptId())) {\n        throw new IllegalArgumentException(\n            String.format(\n                \"Container %s does not belong to application attempt %s!\",\n                containerId, applicationAttemptId));\n      }\n      if (applicationId !\u003d null \u0026\u0026 !applicationId.equals(\n          containerId.getApplicationAttemptId().getApplicationId())) {\n        throw new IllegalArgumentException(\n            String.format(\n                \"Container %s does not belong to application %s!\",\n                containerId, applicationId));\n      }\n    }\n\n    // app attempt id should match the app id, if provided\n    if (applicationAttemptId !\u003d null \u0026\u0026 applicationId !\u003d null \u0026\u0026\n        !applicationId.equals(applicationAttemptId.getApplicationId())) {\n      throw new IllegalArgumentException(\n          String.format(\n              \"Application attempt %s does not belong to application %s!\",\n              applicationAttemptId, applicationId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogServlet.java"
    }
  }
}