{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbConfigurationStore.java",
  "functionName": "compare",
  "functionId": "compare___key1-byte[]__key2-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
  "functionStartLine": 122,
  "functionEndLine": 137,
  "numCommitsSeen": 15,
  "timeTaken": 3006,
  "changeHistory": [
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
    "4510970e2f7728d036c750b596985e5ffa357b60",
    "d6622daaa3c95a5040d06f91dc0c793bafa70f95",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
    "74ba6ffa0b601badc68366685dcf993a0844520a"
  ],
  "changeHistoryShort": {
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e": "Ybodychange",
    "4510970e2f7728d036c750b596985e5ffa357b60": "Ybodychange",
    "d6622daaa3c95a5040d06f91dc0c793bafa70f95": "Ybodychange",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Ybodychange",
    "74ba6ffa0b601badc68366685dcf993a0844520a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-9873. Mutation API Config Change updates Version Number. Contributed by Prabhu Joseph\"\n\nThis reverts commit 4510970e2f7728d036c750b596985e5ffa357b60.\n",
      "commitDate": "04/10/19 8:45 PM",
      "commitName": "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
      "commitAuthor": "Sunil G",
      "commitDateOld": "04/10/19 9:19 AM",
      "commitNameOld": "4510970e2f7728d036c750b596985e5ffa357b60",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,16 @@\n       public int compare(byte[] key1, byte[] key2) {\n         String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n         String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n         if (key1Str.equals(key2Str)) {\n           return 0;\n         } else if (key1Str.equals(VERSION_KEY)) {\n           return 1;\n         } else if (key2Str.equals(VERSION_KEY)) {\n           return -1;\n         } else if (key1Str.equals(LOG_KEY)) {\n           return 1;\n         } else if (key2Str.equals(LOG_KEY)) {\n           return -1;\n-        } else if (key1Str.equals(CONF_VERSION_KEY)) {\n-          return 1;\n-        } else if (key2Str.equals(CONF_VERSION_KEY)) {\n-          return -1;\n         }\n         return key1Str.compareTo(key2Str);\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(byte[] key1, byte[] key2) {\n        String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n        String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n        if (key1Str.equals(key2Str)) {\n          return 0;\n        } else if (key1Str.equals(VERSION_KEY)) {\n          return 1;\n        } else if (key2Str.equals(VERSION_KEY)) {\n          return -1;\n        } else if (key1Str.equals(LOG_KEY)) {\n          return 1;\n        } else if (key2Str.equals(LOG_KEY)) {\n          return -1;\n        }\n        return key1Str.compareTo(key2Str);\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
      "extendedDetails": {}
    },
    "4510970e2f7728d036c750b596985e5ffa357b60": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9873. Mutation API Config Change updates Version Number. Contributed by Prabhu Joseph\n",
      "commitDate": "04/10/19 9:19 AM",
      "commitName": "4510970e2f7728d036c750b596985e5ffa357b60",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/09/19 8:38 PM",
      "commitNameOld": "137546a78a45adbfb5ef338c1c2984a97b3cecc2",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 3.53,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,20 @@\n       public int compare(byte[] key1, byte[] key2) {\n         String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n         String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n         if (key1Str.equals(key2Str)) {\n           return 0;\n         } else if (key1Str.equals(VERSION_KEY)) {\n           return 1;\n         } else if (key2Str.equals(VERSION_KEY)) {\n           return -1;\n         } else if (key1Str.equals(LOG_KEY)) {\n           return 1;\n         } else if (key2Str.equals(LOG_KEY)) {\n           return -1;\n+        } else if (key1Str.equals(CONF_VERSION_KEY)) {\n+          return 1;\n+        } else if (key2Str.equals(CONF_VERSION_KEY)) {\n+          return -1;\n         }\n         return key1Str.compareTo(key2Str);\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(byte[] key1, byte[] key2) {\n        String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n        String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n        if (key1Str.equals(key2Str)) {\n          return 0;\n        } else if (key1Str.equals(VERSION_KEY)) {\n          return 1;\n        } else if (key2Str.equals(VERSION_KEY)) {\n          return -1;\n        } else if (key1Str.equals(LOG_KEY)) {\n          return 1;\n        } else if (key2Str.equals(LOG_KEY)) {\n          return -1;\n        } else if (key1Str.equals(CONF_VERSION_KEY)) {\n          return 1;\n        } else if (key2Str.equals(CONF_VERSION_KEY)) {\n          return -1;\n        }\n        return key1Str.compareTo(key2Str);\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
      "extendedDetails": {}
    },
    "d6622daaa3c95a5040d06f91dc0c793bafa70f95": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7046. Add closing logic to configuration store\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "d6622daaa3c95a5040d06f91dc0c793bafa70f95",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n       public int compare(byte[] key1, byte[] key2) {\n         String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n         String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n         if (key1Str.equals(key2Str)) {\n           return 0;\n         } else if (key1Str.equals(VERSION_KEY)) {\n-          return -1;\n+          return 1;\n         } else if (key2Str.equals(VERSION_KEY)) {\n-          return 1;\n-        } else if (key1Str.equals(LOG_KEY)) {\n           return -1;\n-        } else if (key2Str.equals(LOG_KEY)) {\n+        } else if (key1Str.equals(LOG_KEY)) {\n           return 1;\n+        } else if (key2Str.equals(LOG_KEY)) {\n+          return -1;\n         }\n         return key1Str.compareTo(key2Str);\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(byte[] key1, byte[] key2) {\n        String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n        String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n        if (key1Str.equals(key2Str)) {\n          return 0;\n        } else if (key1Str.equals(VERSION_KEY)) {\n          return 1;\n        } else if (key2Str.equals(VERSION_KEY)) {\n          return -1;\n        } else if (key1Str.equals(LOG_KEY)) {\n          return 1;\n        } else if (key2Str.equals(LOG_KEY)) {\n          return -1;\n        }\n        return key1Str.compareTo(key2Str);\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
      "extendedDetails": {}
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,16 @@\n       public int compare(byte[] key1, byte[] key2) {\n         String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n         String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n-        int key1Txn \u003d Integer.MAX_VALUE;\n-        int key2Txn \u003d Integer.MAX_VALUE;\n-        if (key1Str.startsWith(LOG_PREFIX)) {\n-          key1Txn \u003d Integer.parseInt(key1Str.substring(\n-              key1Str.indexOf(\u0027.\u0027) + 1));\n+        if (key1Str.equals(key2Str)) {\n+          return 0;\n+        } else if (key1Str.equals(VERSION_KEY)) {\n+          return -1;\n+        } else if (key2Str.equals(VERSION_KEY)) {\n+          return 1;\n+        } else if (key1Str.equals(LOG_KEY)) {\n+          return -1;\n+        } else if (key2Str.equals(LOG_KEY)) {\n+          return 1;\n         }\n-        if (key2Str.startsWith(LOG_PREFIX)) {\n-          key2Txn \u003d Integer.parseInt(key2Str.substring(\n-              key2Str.indexOf(\u0027.\u0027) + 1));\n-        }\n-        // TODO txnId could overflow, in theory\n-        if (key1Txn \u003d\u003d Integer.MAX_VALUE \u0026\u0026 key2Txn \u003d\u003d Integer.MAX_VALUE) {\n-          if (key1Str.equals(key2Str) \u0026\u0026 key1Str.equals(LOG_COMMITTED_TXN)) {\n-            return 0;\n-          } else if (key1Str.equals(LOG_COMMITTED_TXN)) {\n-            return -1;\n-          } else if (key2Str.equals(LOG_COMMITTED_TXN)) {\n-            return 1;\n-          }\n-          return key1Str.compareTo(key2Str);\n-        }\n-        return key1Txn - key2Txn;\n+        return key1Str.compareTo(key2Str);\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(byte[] key1, byte[] key2) {\n        String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n        String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n        if (key1Str.equals(key2Str)) {\n          return 0;\n        } else if (key1Str.equals(VERSION_KEY)) {\n          return -1;\n        } else if (key2Str.equals(VERSION_KEY)) {\n          return 1;\n        } else if (key1Str.equals(LOG_KEY)) {\n          return -1;\n        } else if (key2Str.equals(LOG_KEY)) {\n          return 1;\n        }\n        return key1Str.compareTo(key2Str);\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java",
      "extendedDetails": {}
    },
    "74ba6ffa0b601badc68366685dcf993a0844520a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5947: Create LeveldbConfigurationStore class using Leveldb as backing store. Contributed by Jonathan Hung\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "74ba6ffa0b601badc68366685dcf993a0844520a",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,26 @@\n+      public int compare(byte[] key1, byte[] key2) {\n+        String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n+        String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n+        int key1Txn \u003d Integer.MAX_VALUE;\n+        int key2Txn \u003d Integer.MAX_VALUE;\n+        if (key1Str.startsWith(LOG_PREFIX)) {\n+          key1Txn \u003d Integer.parseInt(key1Str.substring(\n+              key1Str.indexOf(\u0027.\u0027) + 1));\n+        }\n+        if (key2Str.startsWith(LOG_PREFIX)) {\n+          key2Txn \u003d Integer.parseInt(key2Str.substring(\n+              key2Str.indexOf(\u0027.\u0027) + 1));\n+        }\n+        // TODO txnId could overflow, in theory\n+        if (key1Txn \u003d\u003d Integer.MAX_VALUE \u0026\u0026 key2Txn \u003d\u003d Integer.MAX_VALUE) {\n+          if (key1Str.equals(key2Str) \u0026\u0026 key1Str.equals(LOG_COMMITTED_TXN)) {\n+            return 0;\n+          } else if (key1Str.equals(LOG_COMMITTED_TXN)) {\n+            return -1;\n+          } else if (key2Str.equals(LOG_COMMITTED_TXN)) {\n+            return 1;\n+          }\n+          return key1Str.compareTo(key2Str);\n+        }\n+        return key1Txn - key2Txn;\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public int compare(byte[] key1, byte[] key2) {\n        String key1Str \u003d new String(key1, StandardCharsets.UTF_8);\n        String key2Str \u003d new String(key2, StandardCharsets.UTF_8);\n        int key1Txn \u003d Integer.MAX_VALUE;\n        int key2Txn \u003d Integer.MAX_VALUE;\n        if (key1Str.startsWith(LOG_PREFIX)) {\n          key1Txn \u003d Integer.parseInt(key1Str.substring(\n              key1Str.indexOf(\u0027.\u0027) + 1));\n        }\n        if (key2Str.startsWith(LOG_PREFIX)) {\n          key2Txn \u003d Integer.parseInt(key2Str.substring(\n              key2Str.indexOf(\u0027.\u0027) + 1));\n        }\n        // TODO txnId could overflow, in theory\n        if (key1Txn \u003d\u003d Integer.MAX_VALUE \u0026\u0026 key2Txn \u003d\u003d Integer.MAX_VALUE) {\n          if (key1Str.equals(key2Str) \u0026\u0026 key1Str.equals(LOG_COMMITTED_TXN)) {\n            return 0;\n          } else if (key1Str.equals(LOG_COMMITTED_TXN)) {\n            return -1;\n          } else if (key2Str.equals(LOG_COMMITTED_TXN)) {\n            return 1;\n          }\n          return key1Str.compareTo(key2Str);\n        }\n        return key1Txn - key2Txn;\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/LeveldbConfigurationStore.java"
    }
  }
}