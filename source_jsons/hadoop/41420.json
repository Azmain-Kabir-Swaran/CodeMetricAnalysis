{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairSchedulerConfiguration.java",
  "functionName": "parseOldStyleResource",
  "functionId": "parseOldStyleResource___input-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
  "functionStartLine": 604,
  "functionEndLine": 620,
  "numCommitsSeen": 91,
  "timeTaken": 4018,
  "changeHistory": [
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
    "64411a6ff74ef87756aae12224ff9c25f7e2a143",
    "9edc74f64a31450af3c55c0dadf352862e4b359d"
  ],
  "changeHistoryShort": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": "Ymultichange(Yparameterchange,Ybodychange)",
    "64411a6ff74ef87756aae12224ff9c25f7e2a143": "Ybodychange",
    "9edc74f64a31450af3c55c0dadf352862e4b359d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
      "commitDate": "21/08/19 8:01 AM",
      "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
          "commitDate": "21/08/19 8:01 AM",
          "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 169.41,
          "commitsBetweenForRepo": 1280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,17 @@\n-  private static ConfigurableResource parseOldStyleResource(String value)\n+  private static ConfigurableResource parseOldStyleResource(String input)\n           throws AllocationConfigurationException {\n-    final String lCaseValue \u003d StringUtils.toLowerCase(value);\n-    final int memory \u003d parseOldStyleResourceMemory(lCaseValue);\n-    final int vcores \u003d parseOldStyleResourceVcores(lCaseValue);\n+    final String lowerCaseInput \u003d StringUtils.toLowerCase(input);\n+    String[] resources \u003d lowerCaseInput.split(\",\");\n+\n+    if (resources.length !\u003d 2) {\n+      resources \u003d findOldStyleResourcesInSpaceSeparatedInput(lowerCaseInput);\n+      if (resources.length !\u003d 2) {\n+        throw new AllocationConfigurationException(\n+            \"Cannot parse resource values from input: \" + input);\n+      }\n+    }\n+    final int memory \u003d parseOldStyleResourceMemory(resources);\n+    final int vcores \u003d parseOldStyleResourceVcores(resources);\n     return new ConfigurableResource(\n             BuilderUtils.newResource(memory, vcores));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static ConfigurableResource parseOldStyleResource(String input)\n          throws AllocationConfigurationException {\n    final String lowerCaseInput \u003d StringUtils.toLowerCase(input);\n    String[] resources \u003d lowerCaseInput.split(\",\");\n\n    if (resources.length !\u003d 2) {\n      resources \u003d findOldStyleResourcesInSpaceSeparatedInput(lowerCaseInput);\n      if (resources.length !\u003d 2) {\n        throw new AllocationConfigurationException(\n            \"Cannot parse resource values from input: \" + input);\n      }\n    }\n    final int memory \u003d parseOldStyleResourceMemory(resources);\n    final int vcores \u003d parseOldStyleResourceVcores(resources);\n    return new ConfigurableResource(\n            BuilderUtils.newResource(memory, vcores));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
          "extendedDetails": {
            "oldValue": "[value-String]",
            "newValue": "[input-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
          "commitDate": "21/08/19 8:01 AM",
          "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 169.41,
          "commitsBetweenForRepo": 1280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,17 @@\n-  private static ConfigurableResource parseOldStyleResource(String value)\n+  private static ConfigurableResource parseOldStyleResource(String input)\n           throws AllocationConfigurationException {\n-    final String lCaseValue \u003d StringUtils.toLowerCase(value);\n-    final int memory \u003d parseOldStyleResourceMemory(lCaseValue);\n-    final int vcores \u003d parseOldStyleResourceVcores(lCaseValue);\n+    final String lowerCaseInput \u003d StringUtils.toLowerCase(input);\n+    String[] resources \u003d lowerCaseInput.split(\",\");\n+\n+    if (resources.length !\u003d 2) {\n+      resources \u003d findOldStyleResourcesInSpaceSeparatedInput(lowerCaseInput);\n+      if (resources.length !\u003d 2) {\n+        throw new AllocationConfigurationException(\n+            \"Cannot parse resource values from input: \" + input);\n+      }\n+    }\n+    final int memory \u003d parseOldStyleResourceMemory(resources);\n+    final int vcores \u003d parseOldStyleResourceVcores(resources);\n     return new ConfigurableResource(\n             BuilderUtils.newResource(memory, vcores));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static ConfigurableResource parseOldStyleResource(String input)\n          throws AllocationConfigurationException {\n    final String lowerCaseInput \u003d StringUtils.toLowerCase(input);\n    String[] resources \u003d lowerCaseInput.split(\",\");\n\n    if (resources.length !\u003d 2) {\n      resources \u003d findOldStyleResourcesInSpaceSeparatedInput(lowerCaseInput);\n      if (resources.length !\u003d 2) {\n        throw new AllocationConfigurationException(\n            \"Cannot parse resource values from input: \" + input);\n      }\n    }\n    final int memory \u003d parseOldStyleResourceMemory(resources);\n    final int vcores \u003d parseOldStyleResourceVcores(resources);\n    return new ConfigurableResource(\n            BuilderUtils.newResource(memory, vcores));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
          "extendedDetails": {}
        }
      ]
    },
    "64411a6ff74ef87756aae12224ff9c25f7e2a143": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8738. FairScheduler should not parse negative maxResources or minResources values as positive. (Contributed by Szilard Nemeth)\n",
      "commitDate": "10/12/18 11:06 AM",
      "commitName": "64411a6ff74ef87756aae12224ff9c25f7e2a143",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "06/07/18 11:03 AM",
      "commitNameOld": "9edc74f64a31450af3c55c0dadf352862e4b359d",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 157.04,
      "commitsBetweenForRepo": 1295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,8 @@\n   private static ConfigurableResource parseOldStyleResource(String value)\n           throws AllocationConfigurationException {\n     final String lCaseValue \u003d StringUtils.toLowerCase(value);\n-    int memory \u003d findResource(lCaseValue, \"mb\");\n-    int vcores \u003d findResource(lCaseValue, \"vcores\");\n-\n+    final int memory \u003d parseOldStyleResourceMemory(lCaseValue);\n+    final int vcores \u003d parseOldStyleResourceVcores(lCaseValue);\n     return new ConfigurableResource(\n             BuilderUtils.newResource(memory, vcores));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static ConfigurableResource parseOldStyleResource(String value)\n          throws AllocationConfigurationException {\n    final String lCaseValue \u003d StringUtils.toLowerCase(value);\n    final int memory \u003d parseOldStyleResourceMemory(lCaseValue);\n    final int vcores \u003d parseOldStyleResourceVcores(lCaseValue);\n    return new ConfigurableResource(\n            BuilderUtils.newResource(memory, vcores));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "9edc74f64a31450af3c55c0dadf352862e4b359d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7556. Fair scheduler configuration should allow resource types in the minResources and maxResources properties. (Daniel Templeton and Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "06/07/18 11:03 AM",
      "commitName": "9edc74f64a31450af3c55c0dadf352862e4b359d",
      "commitAuthor": "Haibo Chen",
      "diff": "@@ -0,0 +1,9 @@\n+  private static ConfigurableResource parseOldStyleResource(String value)\n+          throws AllocationConfigurationException {\n+    final String lCaseValue \u003d StringUtils.toLowerCase(value);\n+    int memory \u003d findResource(lCaseValue, \"mb\");\n+    int vcores \u003d findResource(lCaseValue, \"vcores\");\n+\n+    return new ConfigurableResource(\n+            BuilderUtils.newResource(memory, vcores));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ConfigurableResource parseOldStyleResource(String value)\n          throws AllocationConfigurationException {\n    final String lCaseValue \u003d StringUtils.toLowerCase(value);\n    int memory \u003d findResource(lCaseValue, \"mb\");\n    int vcores \u003d findResource(lCaseValue, \"vcores\");\n\n    return new ConfigurableResource(\n            BuilderUtils.newResource(memory, vcores));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java"
    }
  }
}