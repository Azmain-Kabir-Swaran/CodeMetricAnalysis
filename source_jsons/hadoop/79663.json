{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FTPFileSystem.java",
  "functionName": "connect",
  "functionId": "connect",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
  "functionStartLine": 141,
  "functionEndLine": 167,
  "numCommitsSeen": 25,
  "timeTaken": 1979,
  "changeHistory": [
    "24dc068a361648b4e59e1807b07ff2239f41c740",
    "0a212a40fcbd12a11294bff7a31e7433111733c9",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "24dc068a361648b4e59e1807b07ff2239f41c740": "Ybodychange",
    "0a212a40fcbd12a11294bff7a31e7433111733c9": "Ybodychange",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "24dc068a361648b4e59e1807b07ff2239f41c740": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11100. Support to configure ftpClient.setControlKeepAliveTimeout.\nContributed by Adam Antal.\n\nSigned-off-by: Xiao Chen \u003cxiao@apache.org\u003e\n",
      "commitDate": "17/10/18 11:34 AM",
      "commitName": "24dc068a361648b4e59e1807b07ff2239f41c740",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "10/10/18 9:51 PM",
      "commitNameOld": "7b57f2f71fbaa5af4897309597cca70a95b04edd",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   private FTPClient connect() throws IOException {\n     FTPClient client \u003d null;\n     Configuration conf \u003d getConf();\n     String host \u003d conf.get(FS_FTP_HOST);\n     int port \u003d conf.getInt(FS_FTP_HOST_PORT, FTP.DEFAULT_PORT);\n     String user \u003d conf.get(FS_FTP_USER_PREFIX + host);\n     String password \u003d conf.get(FS_FTP_PASSWORD_PREFIX + host);\n     client \u003d new FTPClient();\n     client.connect(host, port);\n     int reply \u003d client.getReplyCode();\n     if (!FTPReply.isPositiveCompletion(reply)) {\n       throw NetUtils.wrapException(host, port,\n                    NetUtils.UNKNOWN_HOST, 0,\n                    new ConnectException(\"Server response \" + reply));\n     } else if (client.login(user, password)) {\n       client.setFileTransferMode(getTransferMode(conf));\n       client.setFileType(FTP.BINARY_FILE_TYPE);\n       client.setBufferSize(DEFAULT_BUFFER_SIZE);\n+      setTimeout(client, conf);\n       setDataConnectionMode(client, conf);\n     } else {\n       throw new IOException(\"Login failed on server - \" + host + \", port - \"\n           + port + \" as user \u0027\" + user + \"\u0027\");\n     }\n \n     return client;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FTPClient connect() throws IOException {\n    FTPClient client \u003d null;\n    Configuration conf \u003d getConf();\n    String host \u003d conf.get(FS_FTP_HOST);\n    int port \u003d conf.getInt(FS_FTP_HOST_PORT, FTP.DEFAULT_PORT);\n    String user \u003d conf.get(FS_FTP_USER_PREFIX + host);\n    String password \u003d conf.get(FS_FTP_PASSWORD_PREFIX + host);\n    client \u003d new FTPClient();\n    client.connect(host, port);\n    int reply \u003d client.getReplyCode();\n    if (!FTPReply.isPositiveCompletion(reply)) {\n      throw NetUtils.wrapException(host, port,\n                   NetUtils.UNKNOWN_HOST, 0,\n                   new ConnectException(\"Server response \" + reply));\n    } else if (client.login(user, password)) {\n      client.setFileTransferMode(getTransferMode(conf));\n      client.setFileType(FTP.BINARY_FILE_TYPE);\n      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n      setTimeout(client, conf);\n      setDataConnectionMode(client, conf);\n    } else {\n      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n          + port + \" as user \u0027\" + user + \"\u0027\");\n    }\n\n    return client;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "0a212a40fcbd12a11294bff7a31e7433111733c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13953. Make FTPFileSystem\u0027s data connection mode and transfer mode configurable. Contributed by Xiao Chen.\n",
      "commitDate": "09/01/17 3:18 PM",
      "commitName": "0a212a40fcbd12a11294bff7a31e7433111733c9",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/09/16 5:36 PM",
      "commitNameOld": "9a44a832a99eb967aa4e34338dfa75baf35f9845",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 103.95,
      "commitsBetweenForRepo": 711,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   private FTPClient connect() throws IOException {\n     FTPClient client \u003d null;\n     Configuration conf \u003d getConf();\n     String host \u003d conf.get(FS_FTP_HOST);\n     int port \u003d conf.getInt(FS_FTP_HOST_PORT, FTP.DEFAULT_PORT);\n     String user \u003d conf.get(FS_FTP_USER_PREFIX + host);\n     String password \u003d conf.get(FS_FTP_PASSWORD_PREFIX + host);\n     client \u003d new FTPClient();\n     client.connect(host, port);\n     int reply \u003d client.getReplyCode();\n     if (!FTPReply.isPositiveCompletion(reply)) {\n       throw NetUtils.wrapException(host, port,\n                    NetUtils.UNKNOWN_HOST, 0,\n                    new ConnectException(\"Server response \" + reply));\n     } else if (client.login(user, password)) {\n-      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n+      client.setFileTransferMode(getTransferMode(conf));\n       client.setFileType(FTP.BINARY_FILE_TYPE);\n       client.setBufferSize(DEFAULT_BUFFER_SIZE);\n+      setDataConnectionMode(client, conf);\n     } else {\n       throw new IOException(\"Login failed on server - \" + host + \", port - \"\n           + port + \" as user \u0027\" + user + \"\u0027\");\n     }\n \n     return client;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FTPClient connect() throws IOException {\n    FTPClient client \u003d null;\n    Configuration conf \u003d getConf();\n    String host \u003d conf.get(FS_FTP_HOST);\n    int port \u003d conf.getInt(FS_FTP_HOST_PORT, FTP.DEFAULT_PORT);\n    String user \u003d conf.get(FS_FTP_USER_PREFIX + host);\n    String password \u003d conf.get(FS_FTP_PASSWORD_PREFIX + host);\n    client \u003d new FTPClient();\n    client.connect(host, port);\n    int reply \u003d client.getReplyCode();\n    if (!FTPReply.isPositiveCompletion(reply)) {\n      throw NetUtils.wrapException(host, port,\n                   NetUtils.UNKNOWN_HOST, 0,\n                   new ConnectException(\"Server response \" + reply));\n    } else if (client.login(user, password)) {\n      client.setFileTransferMode(getTransferMode(conf));\n      client.setFileType(FTP.BINARY_FILE_TYPE);\n      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n      setDataConnectionMode(client, conf);\n    } else {\n      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n          + port + \" as user \u0027\" + user + \"\u0027\");\n    }\n\n    return client;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9361: Strictly define FileSystem APIs\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:04 AM",
      "commitName": "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "09/01/13 3:30 PM",
      "commitNameOld": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 539.52,
      "commitsBetweenForRepo": 3454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   private FTPClient connect() throws IOException {\n     FTPClient client \u003d null;\n     Configuration conf \u003d getConf();\n-    String host \u003d conf.get(\"fs.ftp.host\");\n-    int port \u003d conf.getInt(\"fs.ftp.host.port\", FTP.DEFAULT_PORT);\n-    String user \u003d conf.get(\"fs.ftp.user.\" + host);\n-    String password \u003d conf.get(\"fs.ftp.password.\" + host);\n+    String host \u003d conf.get(FS_FTP_HOST);\n+    int port \u003d conf.getInt(FS_FTP_HOST_PORT, FTP.DEFAULT_PORT);\n+    String user \u003d conf.get(FS_FTP_USER_PREFIX + host);\n+    String password \u003d conf.get(FS_FTP_PASSWORD_PREFIX + host);\n     client \u003d new FTPClient();\n     client.connect(host, port);\n     int reply \u003d client.getReplyCode();\n     if (!FTPReply.isPositiveCompletion(reply)) {\n-      throw new IOException(\"Server - \" + host\n-          + \" refused connection on port - \" + port);\n+      throw NetUtils.wrapException(host, port,\n+                   NetUtils.UNKNOWN_HOST, 0,\n+                   new ConnectException(\"Server response \" + reply));\n     } else if (client.login(user, password)) {\n       client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n       client.setFileType(FTP.BINARY_FILE_TYPE);\n       client.setBufferSize(DEFAULT_BUFFER_SIZE);\n     } else {\n       throw new IOException(\"Login failed on server - \" + host + \", port - \"\n-          + port);\n+          + port + \" as user \u0027\" + user + \"\u0027\");\n     }\n \n     return client;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FTPClient connect() throws IOException {\n    FTPClient client \u003d null;\n    Configuration conf \u003d getConf();\n    String host \u003d conf.get(FS_FTP_HOST);\n    int port \u003d conf.getInt(FS_FTP_HOST_PORT, FTP.DEFAULT_PORT);\n    String user \u003d conf.get(FS_FTP_USER_PREFIX + host);\n    String password \u003d conf.get(FS_FTP_PASSWORD_PREFIX + host);\n    client \u003d new FTPClient();\n    client.connect(host, port);\n    int reply \u003d client.getReplyCode();\n    if (!FTPReply.isPositiveCompletion(reply)) {\n      throw NetUtils.wrapException(host, port,\n                   NetUtils.UNKNOWN_HOST, 0,\n                   new ConnectException(\"Server response \" + reply));\n    } else if (client.login(user, password)) {\n      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n      client.setFileType(FTP.BINARY_FILE_TYPE);\n      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n    } else {\n      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n          + port + \" as user \u0027\" + user + \"\u0027\");\n    }\n\n    return client;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private FTPClient connect() throws IOException {\n    FTPClient client \u003d null;\n    Configuration conf \u003d getConf();\n    String host \u003d conf.get(\"fs.ftp.host\");\n    int port \u003d conf.getInt(\"fs.ftp.host.port\", FTP.DEFAULT_PORT);\n    String user \u003d conf.get(\"fs.ftp.user.\" + host);\n    String password \u003d conf.get(\"fs.ftp.password.\" + host);\n    client \u003d new FTPClient();\n    client.connect(host, port);\n    int reply \u003d client.getReplyCode();\n    if (!FTPReply.isPositiveCompletion(reply)) {\n      throw new IOException(\"Server - \" + host\n          + \" refused connection on port - \" + port);\n    } else if (client.login(user, password)) {\n      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n      client.setFileType(FTP.BINARY_FILE_TYPE);\n      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n    } else {\n      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n          + port);\n    }\n\n    return client;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private FTPClient connect() throws IOException {\n    FTPClient client \u003d null;\n    Configuration conf \u003d getConf();\n    String host \u003d conf.get(\"fs.ftp.host\");\n    int port \u003d conf.getInt(\"fs.ftp.host.port\", FTP.DEFAULT_PORT);\n    String user \u003d conf.get(\"fs.ftp.user.\" + host);\n    String password \u003d conf.get(\"fs.ftp.password.\" + host);\n    client \u003d new FTPClient();\n    client.connect(host, port);\n    int reply \u003d client.getReplyCode();\n    if (!FTPReply.isPositiveCompletion(reply)) {\n      throw new IOException(\"Server - \" + host\n          + \" refused connection on port - \" + port);\n    } else if (client.login(user, password)) {\n      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n      client.setFileType(FTP.BINARY_FILE_TYPE);\n      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n    } else {\n      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n          + port);\n    }\n\n    return client;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private FTPClient connect() throws IOException {\n    FTPClient client \u003d null;\n    Configuration conf \u003d getConf();\n    String host \u003d conf.get(\"fs.ftp.host\");\n    int port \u003d conf.getInt(\"fs.ftp.host.port\", FTP.DEFAULT_PORT);\n    String user \u003d conf.get(\"fs.ftp.user.\" + host);\n    String password \u003d conf.get(\"fs.ftp.password.\" + host);\n    client \u003d new FTPClient();\n    client.connect(host, port);\n    int reply \u003d client.getReplyCode();\n    if (!FTPReply.isPositiveCompletion(reply)) {\n      throw new IOException(\"Server - \" + host\n          + \" refused connection on port - \" + port);\n    } else if (client.login(user, password)) {\n      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n      client.setFileType(FTP.BINARY_FILE_TYPE);\n      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n    } else {\n      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n          + port);\n    }\n\n    return client;\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,24 @@\n+  private FTPClient connect() throws IOException {\n+    FTPClient client \u003d null;\n+    Configuration conf \u003d getConf();\n+    String host \u003d conf.get(\"fs.ftp.host\");\n+    int port \u003d conf.getInt(\"fs.ftp.host.port\", FTP.DEFAULT_PORT);\n+    String user \u003d conf.get(\"fs.ftp.user.\" + host);\n+    String password \u003d conf.get(\"fs.ftp.password.\" + host);\n+    client \u003d new FTPClient();\n+    client.connect(host, port);\n+    int reply \u003d client.getReplyCode();\n+    if (!FTPReply.isPositiveCompletion(reply)) {\n+      throw new IOException(\"Server - \" + host\n+          + \" refused connection on port - \" + port);\n+    } else if (client.login(user, password)) {\n+      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n+      client.setFileType(FTP.BINARY_FILE_TYPE);\n+      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n+    } else {\n+      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n+          + port);\n+    }\n+\n+    return client;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FTPClient connect() throws IOException {\n    FTPClient client \u003d null;\n    Configuration conf \u003d getConf();\n    String host \u003d conf.get(\"fs.ftp.host\");\n    int port \u003d conf.getInt(\"fs.ftp.host.port\", FTP.DEFAULT_PORT);\n    String user \u003d conf.get(\"fs.ftp.user.\" + host);\n    String password \u003d conf.get(\"fs.ftp.password.\" + host);\n    client \u003d new FTPClient();\n    client.connect(host, port);\n    int reply \u003d client.getReplyCode();\n    if (!FTPReply.isPositiveCompletion(reply)) {\n      throw new IOException(\"Server - \" + host\n          + \" refused connection on port - \" + port);\n    } else if (client.login(user, password)) {\n      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);\n      client.setFileType(FTP.BINARY_FILE_TYPE);\n      client.setBufferSize(DEFAULT_BUFFER_SIZE);\n    } else {\n      throw new IOException(\"Login failed on server - \" + host + \", port - \"\n          + port);\n    }\n\n    return client;\n  }",
      "path": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
    }
  }
}