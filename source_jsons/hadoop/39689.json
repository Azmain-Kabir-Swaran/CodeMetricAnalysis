{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "attachContainer",
  "functionId": "attachContainer___clusterResource-Resource__application-FiCaSchedulerApp__rmContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 2018,
  "functionEndLine": 2035,
  "numCommitsSeen": 176,
  "timeTaken": 6455,
  "changeHistory": [
    "8afabe41e4175551ae71217a45f7c4276f10b7da",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434",
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
    "86358221fc85a7743052a0b4c1647353508bf308",
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
    "7360cec692be5dcc3377ae5082fe22870caac96b"
  ],
  "changeHistoryShort": {
    "8afabe41e4175551ae71217a45f7c4276f10b7da": "Ybodychange",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": "Ybodychange",
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": "Ybodychange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Ybodychange",
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51": "Ybodychange",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": "Ybodychange",
    "86358221fc85a7743052a0b4c1647353508bf308": "Ybodychange",
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb": "Ybodychange",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": "Ybodychange",
    "7360cec692be5dcc3377ae5082fe22870caac96b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8afabe41e4175551ae71217a45f7c4276f10b7da": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9838. Fix resource inconsistency for queues when moving app with reserved container to another queue. Contributed by jiulongzhu.\n",
      "commitDate": "22/11/19 12:06 AM",
      "commitName": "8afabe41e4175551ae71217a45f7c4276f10b7da",
      "commitAuthor": "Tao Yang",
      "commitDateOld": "24/09/19 1:51 PM",
      "commitNameOld": "c2731d4b6399f88f76341ed697e80652ed1b61ea",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 58.47,
      "commitsBetweenForRepo": 308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null \u0026\u0026 rmContainer !\u003d null\n         \u0026\u0026 rmContainer.getExecutionType() \u003d\u003d ExecutionType.GUARANTEED) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n           .getResource(), node.getPartition(), rmContainer);\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n+          + \" containerState\u003d\"+ rmContainer.getState()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null \u0026\u0026 rmContainer !\u003d null\n        \u0026\u0026 rmContainer.getExecutionType() \u003d\u003d ExecutionType.GUARANTEED) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getPartition(), rmContainer);\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" containerState\u003d\"+ rmContainer.getState()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6216. Unify Container Resizing code paths with Container Updates making it scheduler agnostic. (Arun Suresh via wangda)\n",
      "commitDate": "28/02/17 10:35 AM",
      "commitName": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/02/17 10:23 AM",
      "commitNameOld": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 19.01,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null \u0026\u0026 rmContainer !\u003d null\n         \u0026\u0026 rmContainer.getExecutionType() \u003d\u003d ExecutionType.GUARANTEED) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n-          .getResource(), node.getPartition(), rmContainer, false);\n+          .getResource(), node.getPartition(), rmContainer);\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null \u0026\u0026 rmContainer !\u003d null\n        \u0026\u0026 rmContainer.getExecutionType() \u003d\u003d ExecutionType.GUARANTEED) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getPartition(), rmContainer);\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5938. Refactoring OpportunisticContainerAllocator to use SchedulerRequestKey instead of Priority and other misc fixes (asuresh)\n",
      "commitDate": "27/12/16 12:40 PM",
      "commitName": "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "06/12/16 9:09 PM",
      "commitNameOld": "563480dccd0136d82730f4228f1df44449ed5822",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 20.65,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n-    if (application !\u003d null) {\n+    if (application !\u003d null \u0026\u0026 rmContainer !\u003d null\n+        \u0026\u0026 rmContainer.getExecutionType() \u003d\u003d ExecutionType.GUARANTEED) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n           .getResource(), node.getPartition(), rmContainer, false);\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null \u0026\u0026 rmContainer !\u003d null\n        \u0026\u0026 rmContainer.getExecutionType() \u003d\u003d ExecutionType.GUARANTEED) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getPartition(), rmContainer, false);\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "commitDateOld": "21/09/15 8:54 PM",
      "commitNameOld": "dfd807afab0fae3839c9cc5d552aa0304444f956",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 1.69,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n-          .getResource(), node.getPartition(), rmContainer);\n+          .getResource(), node.getPartition(), rmContainer, false);\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getPartition(), rmContainer, false);\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2498. Respect labels in preemption policy of capacity scheduler for inter-queue preemption. Contributed by Wangda Tan\n",
      "commitDate": "24/04/15 5:03 PM",
      "commitName": "d497f6ea2be559aa31ed76f37ae949dbfabe2a51",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/04/15 7:39 AM",
      "commitNameOld": "189a63a719c63b67a1783a280bfc2f72dcb55277",
      "commitAuthorOld": "tgraves",
      "daysBetweenCommits": 1.39,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n-          .getResource(), node.getPartition());\n+          .getResource(), node.getPartition(), rmContainer);\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getPartition(), rmContainer);\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3361. CapacityScheduler side changes to support non-exclusive node labels. Contributed by Wangda Tan\n",
      "commitDate": "14/04/15 11:45 AM",
      "commitName": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/04/15 11:38 PM",
      "commitNameOld": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 4.51,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n-          .getResource(), node.getLabels());\n+          .getResource(), node.getPartition());\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getPartition());\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "86358221fc85a7743052a0b4c1647353508bf308": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3099. Capacity Scheduler LeafQueue/ParentQueue should use ResourceUsage to track used-resources-by-label. Contributed by Wangda Tan\n",
      "commitDate": "30/01/15 3:15 PM",
      "commitName": "86358221fc85a7743052a0b4c1647353508bf308",
      "commitAuthor": "Jian He",
      "commitDateOld": "27/01/15 3:36 PM",
      "commitNameOld": "18741adf97f4fda5f8743318b59c440928e51297",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 2.99,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n           .getResource(), node.getLabels());\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n-          + usedResources + \" cluster\u003d\" + clusterResource);\n+          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getLabels());\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + queueUsage.getUsed() + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2920. Changed CapacityScheduler to kill containers on nodes where node labels are changed. Contributed by  Wangda Tan\n",
      "commitDate": "22/12/14 4:51 PM",
      "commitName": "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb",
      "commitAuthor": "Jian He",
      "commitDateOld": "15/10/14 6:33 PM",
      "commitNameOld": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 67.97,
      "commitsBetweenForRepo": 558,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n+      FiCaSchedulerNode node \u003d\n+          scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n-          .getResource(), labelManager.getLabelsOnNode(rmContainer\n-          .getContainer().getNodeId()));\n+          .getResource(), node.getLabels());\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + usedResources + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), node.getLabels());\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + usedResources + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "15/10/14 6:33 PM",
      "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/10/14 1:45 PM",
      "commitNameOld": "30d56fdbb40d06c4e267d6c314c8c767a7adc6a3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 8.2,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       allocateResource(clusterResource, application, rmContainer.getContainer()\n-          .getResource());\n+          .getResource(), labelManager.getLabelsOnNode(rmContainer\n+          .getContainer().getNodeId()));\n       LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n           + \" resource\u003d\" + rmContainer.getContainer().getResource()\n           + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n           + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n           + usedResources + \" cluster\u003d\" + clusterResource);\n       // Inform the parent queue\n       getParent().attachContainer(clusterResource, application, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource(), labelManager.getLabelsOnNode(rmContainer\n          .getContainer().getNodeId()));\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + usedResources + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "7360cec692be5dcc3377ae5082fe22870caac96b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2378. Added support for moving applications across queues in CapacityScheduler. Contributed by Subramaniam Venkatraman Krishnan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 11:00 PM",
      "commitName": "7360cec692be5dcc3377ae5082fe22870caac96b",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,14 @@\n+  public void attachContainer(Resource clusterResource,\n+      FiCaSchedulerApp application, RMContainer rmContainer) {\n+    if (application !\u003d null) {\n+      allocateResource(clusterResource, application, rmContainer.getContainer()\n+          .getResource());\n+      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n+          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n+          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n+          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n+          + usedResources + \" cluster\u003d\" + clusterResource);\n+      // Inform the parent queue\n+      getParent().attachContainer(clusterResource, application, rmContainer);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      allocateResource(clusterResource, application, rmContainer.getContainer()\n          .getResource());\n      LOG.info(\"movedContainer\" + \" container\u003d\" + rmContainer.getContainer()\n          + \" resource\u003d\" + rmContainer.getContainer().getResource()\n          + \" queueMoveIn\u003d\" + this + \" usedCapacity\u003d\" + getUsedCapacity()\n          + \" absoluteUsedCapacity\u003d\" + getAbsoluteUsedCapacity() + \" used\u003d\"\n          + usedResources + \" cluster\u003d\" + clusterResource);\n      // Inform the parent queue\n      getParent().attachContainer(clusterResource, application, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}