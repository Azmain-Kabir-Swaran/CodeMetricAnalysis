{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MBeans.java",
  "functionName": "register",
  "functionId": "register___serviceName-String__nameName-String__properties-Map__String,String____theMbean-Object",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/util/MBeans.java",
  "functionStartLine": 90,
  "functionEndLine": 115,
  "numCommitsSeen": 8,
  "timeTaken": 658,
  "changeHistory": [
    "22194f3d21fd28b97c6197a8dd1917d3d23d7cc8"
  ],
  "changeHistoryShort": {
    "22194f3d21fd28b97c6197a8dd1917d3d23d7cc8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "22194f3d21fd28b97c6197a8dd1917d3d23d7cc8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15339. Support additional key/value propereties in JMX bean registration. Contributed by Elek Marton.\n",
      "commitDate": "26/03/18 10:45 AM",
      "commitName": "22194f3d21fd28b97c6197a8dd1917d3d23d7cc8",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,26 @@\n+  static public ObjectName register(String serviceName, String nameName,\n+                                    Map\u003cString, String\u003e properties,\n+                                    Object theMbean) {\n+    final MBeanServer mbs \u003d ManagementFactory.getPlatformMBeanServer();\n+    Preconditions.checkNotNull(properties,\n+        \"JMX bean properties should not be null for \"\n+            + \"bean registration.\");\n+    ObjectName name \u003d getMBeanName(serviceName, nameName, properties);\n+    if (name !\u003d null) {\n+      try {\n+        mbs.registerMBean(theMbean, name);\n+        LOG.debug(\"Registered \" + name);\n+        return name;\n+      } catch (InstanceAlreadyExistsException iaee) {\n+        if (LOG.isTraceEnabled()) {\n+          LOG.trace(\"Failed to register MBean \\\"\" + name + \"\\\"\", iaee);\n+        } else {\n+          LOG.warn(\"Failed to register MBean \\\"\" + name\n+              + \"\\\": Instance already exists.\");\n+        }\n+      } catch (Exception e) {\n+        LOG.warn(\"Failed to register MBean \\\"\" + name + \"\\\"\", e);\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static public ObjectName register(String serviceName, String nameName,\n                                    Map\u003cString, String\u003e properties,\n                                    Object theMbean) {\n    final MBeanServer mbs \u003d ManagementFactory.getPlatformMBeanServer();\n    Preconditions.checkNotNull(properties,\n        \"JMX bean properties should not be null for \"\n            + \"bean registration.\");\n    ObjectName name \u003d getMBeanName(serviceName, nameName, properties);\n    if (name !\u003d null) {\n      try {\n        mbs.registerMBean(theMbean, name);\n        LOG.debug(\"Registered \" + name);\n        return name;\n      } catch (InstanceAlreadyExistsException iaee) {\n        if (LOG.isTraceEnabled()) {\n          LOG.trace(\"Failed to register MBean \\\"\" + name + \"\\\"\", iaee);\n        } else {\n          LOG.warn(\"Failed to register MBean \\\"\" + name\n              + \"\\\": Instance already exists.\");\n        }\n      } catch (Exception e) {\n        LOG.warn(\"Failed to register MBean \\\"\" + name + \"\\\"\", e);\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/util/MBeans.java"
    }
  }
}