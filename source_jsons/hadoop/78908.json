{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileStatus.java",
  "functionName": "write",
  "functionId": "write___out-DataOutput",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
  "functionStartLine": 516,
  "functionEndLine": 521,
  "numCommitsSeen": 37,
  "timeTaken": 1469,
  "changeHistory": [
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
    "0199fe97636625da5f33b01c376df0f656c6843f",
    "032216a3a79ddec3298eccd2e37d95af1c144b38",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "f1c74df922058e88791ed6971bbb96b53f6770f1",
    "ea605b8cd79163444feead75d7b55dbd4ab537a0",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": "Ybodychange",
    "0199fe97636625da5f33b01c376df0f656c6843f": "Ybodychange",
    "032216a3a79ddec3298eccd2e37d95af1c144b38": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "f1c74df922058e88791ed6971bbb96b53f6770f1": "Ybodychange",
    "ea605b8cd79163444feead75d7b55dbd4ab537a0": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6984. Serialize FileStatus via protobuf.\n",
      "commitDate": "02/08/17 12:12 PM",
      "commitName": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "01/08/17 5:13 PM",
      "commitNameOld": "cf6794ebe93906c406a54acc5c8854dc600a9a7f",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,6 @@\n   public void write(DataOutput out) throws IOException {\n-    Text.writeString(out, getPath().toString(), Text.DEFAULT_MAX_LEN);\n-    out.writeLong(getLen());\n-    out.writeBoolean(isDirectory());\n-    out.writeShort(getReplication());\n-    out.writeLong(getBlockSize());\n-    out.writeLong(getModificationTime());\n-    out.writeLong(getAccessTime());\n-    getPermission().write(out);\n-    Text.writeString(out, getOwner(), Text.DEFAULT_MAX_LEN);\n-    Text.writeString(out, getGroup(), Text.DEFAULT_MAX_LEN);\n-    out.writeBoolean(isSymlink());\n-    if (isSymlink()) {\n-      Text.writeString(out, getSymlink().toString(), Text.DEFAULT_MAX_LEN);\n-    }\n+    FileStatusProto proto \u003d PBHelper.convert(this);\n+    int size \u003d proto.getSerializedSize();\n+    out.writeInt(size);\n+    out.write(proto.toByteArray());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    FileStatusProto proto \u003d PBHelper.convert(this);\n    int size \u003d proto.getSerializedSize();\n    out.writeInt(size);\n    out.write(proto.toByteArray());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "0199fe97636625da5f33b01c376df0f656c6843f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8507. Avoid OOM while deserializing DelegationTokenIdentifer. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349561 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/12 3:10 PM",
      "commitName": "0199fe97636625da5f33b01c376df0f656c6843f",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "10/05/12 4:15 PM",
      "commitNameOld": "032216a3a79ddec3298eccd2e37d95af1c144b38",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 32.95,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void write(DataOutput out) throws IOException {\n-    Text.writeString(out, getPath().toString(), Text.ONE_MEGABYTE);\n+    Text.writeString(out, getPath().toString(), Text.DEFAULT_MAX_LEN);\n     out.writeLong(getLen());\n     out.writeBoolean(isDirectory());\n     out.writeShort(getReplication());\n     out.writeLong(getBlockSize());\n     out.writeLong(getModificationTime());\n     out.writeLong(getAccessTime());\n     getPermission().write(out);\n-    Text.writeString(out, getOwner(), Text.ONE_MEGABYTE);\n-    Text.writeString(out, getGroup(), Text.ONE_MEGABYTE);\n+    Text.writeString(out, getOwner(), Text.DEFAULT_MAX_LEN);\n+    Text.writeString(out, getGroup(), Text.DEFAULT_MAX_LEN);\n     out.writeBoolean(isSymlink());\n     if (isSymlink()) {\n-      Text.writeString(out, getSymlink().toString(), Text.ONE_MEGABYTE);\n+      Text.writeString(out, getSymlink().toString(), Text.DEFAULT_MAX_LEN);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString(), Text.DEFAULT_MAX_LEN);\n    out.writeLong(getLen());\n    out.writeBoolean(isDirectory());\n    out.writeShort(getReplication());\n    out.writeLong(getBlockSize());\n    out.writeLong(getModificationTime());\n    out.writeLong(getAccessTime());\n    getPermission().write(out);\n    Text.writeString(out, getOwner(), Text.DEFAULT_MAX_LEN);\n    Text.writeString(out, getGroup(), Text.DEFAULT_MAX_LEN);\n    out.writeBoolean(isSymlink());\n    if (isSymlink()) {\n      Text.writeString(out, getSymlink().toString(), Text.DEFAULT_MAX_LEN);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "032216a3a79ddec3298eccd2e37d95af1c144b38": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8361. Avoid out-of-memory problems when deserializing strings. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1336945 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/05/12 4:15 PM",
      "commitName": "032216a3a79ddec3298eccd2e37d95af1c144b38",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "05/12/11 10:35 PM",
      "commitNameOld": "788f28b6798df10e199618cc08d90284a1ee15ad",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 156.7,
      "commitsBetweenForRepo": 1127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void write(DataOutput out) throws IOException {\n-    Text.writeString(out, getPath().toString());\n+    Text.writeString(out, getPath().toString(), Text.ONE_MEGABYTE);\n     out.writeLong(getLen());\n     out.writeBoolean(isDirectory());\n     out.writeShort(getReplication());\n     out.writeLong(getBlockSize());\n     out.writeLong(getModificationTime());\n     out.writeLong(getAccessTime());\n     getPermission().write(out);\n-    Text.writeString(out, getOwner());\n-    Text.writeString(out, getGroup());\n+    Text.writeString(out, getOwner(), Text.ONE_MEGABYTE);\n+    Text.writeString(out, getGroup(), Text.ONE_MEGABYTE);\n     out.writeBoolean(isSymlink());\n     if (isSymlink()) {\n-      Text.writeString(out, getSymlink().toString());\n+      Text.writeString(out, getSymlink().toString(), Text.ONE_MEGABYTE);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString(), Text.ONE_MEGABYTE);\n    out.writeLong(getLen());\n    out.writeBoolean(isDirectory());\n    out.writeShort(getReplication());\n    out.writeLong(getBlockSize());\n    out.writeLong(getModificationTime());\n    out.writeLong(getAccessTime());\n    getPermission().write(out);\n    Text.writeString(out, getOwner(), Text.ONE_MEGABYTE);\n    Text.writeString(out, getGroup(), Text.ONE_MEGABYTE);\n    out.writeBoolean(isSymlink());\n    if (isSymlink()) {\n      Text.writeString(out, getSymlink().toString(), Text.ONE_MEGABYTE);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString());\n    out.writeLong(getLen());\n    out.writeBoolean(isDirectory());\n    out.writeShort(getReplication());\n    out.writeLong(getBlockSize());\n    out.writeLong(getModificationTime());\n    out.writeLong(getAccessTime());\n    getPermission().write(out);\n    Text.writeString(out, getOwner());\n    Text.writeString(out, getGroup());\n    out.writeBoolean(isSymlink());\n    if (isSymlink()) {\n      Text.writeString(out, getSymlink().toString());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString());\n    out.writeLong(getLen());\n    out.writeBoolean(isDirectory());\n    out.writeShort(getReplication());\n    out.writeLong(getBlockSize());\n    out.writeLong(getModificationTime());\n    out.writeLong(getAccessTime());\n    getPermission().write(out);\n    Text.writeString(out, getOwner());\n    Text.writeString(out, getGroup());\n    out.writeBoolean(isSymlink());\n    if (isSymlink()) {\n      Text.writeString(out, getSymlink().toString());\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileStatus.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileStatus.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString());\n    out.writeLong(getLen());\n    out.writeBoolean(isDirectory());\n    out.writeShort(getReplication());\n    out.writeLong(getBlockSize());\n    out.writeLong(getModificationTime());\n    out.writeLong(getAccessTime());\n    getPermission().write(out);\n    Text.writeString(out, getOwner());\n    Text.writeString(out, getGroup());\n    out.writeBoolean(isSymlink());\n    if (isSymlink()) {\n      Text.writeString(out, getSymlink().toString());\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileStatus.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileStatus.java"
      }
    },
    "f1c74df922058e88791ed6971bbb96b53f6770f1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7257 Client side mount tables (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1100026 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/11 7:11 PM",
      "commitName": "f1c74df922058e88791ed6971bbb96b53f6770f1",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "14/11/10 9:05 PM",
      "commitNameOld": "ee08b2c8035a3ad067c865f1d49fc671aa778a47",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 171.88,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void write(DataOutput out) throws IOException {\n     Text.writeString(out, getPath().toString());\n-    out.writeLong(length);\n-    out.writeBoolean(isdir);\n-    out.writeShort(block_replication);\n-    out.writeLong(blocksize);\n-    out.writeLong(modification_time);\n-    out.writeLong(access_time);\n-    permission.write(out);\n-    Text.writeString(out, owner);\n-    Text.writeString(out, group);\n+    out.writeLong(getLen());\n+    out.writeBoolean(isDirectory());\n+    out.writeShort(getReplication());\n+    out.writeLong(getBlockSize());\n+    out.writeLong(getModificationTime());\n+    out.writeLong(getAccessTime());\n+    getPermission().write(out);\n+    Text.writeString(out, getOwner());\n+    Text.writeString(out, getGroup());\n     out.writeBoolean(isSymlink());\n     if (isSymlink()) {\n-      Text.writeString(out, symlink.toString());\n+      Text.writeString(out, getSymlink().toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString());\n    out.writeLong(getLen());\n    out.writeBoolean(isDirectory());\n    out.writeShort(getReplication());\n    out.writeLong(getBlockSize());\n    out.writeLong(getModificationTime());\n    out.writeLong(getAccessTime());\n    getPermission().write(out);\n    Text.writeString(out, getOwner());\n    Text.writeString(out, getGroup());\n    out.writeBoolean(isSymlink());\n    if (isSymlink()) {\n      Text.writeString(out, getSymlink().toString());\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "ea605b8cd79163444feead75d7b55dbd4ab537a0": {
      "type": "Ybodychange",
      "commitMessage": "    HADOOP-6421 Adds Symbolic links to FileContext, AbstractFileSystem.\n    It also adds a limited implementation for the local file system\n     (RawLocalFs) that allows local symlinks. (Eli Collins via Sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@910706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/02/10 1:43 PM",
      "commitName": "ea605b8cd79163444feead75d7b55dbd4ab537a0",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "30/10/09 3:24 PM",
      "commitNameOld": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 108.97,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,16 @@\n   public void write(DataOutput out) throws IOException {\n     Text.writeString(out, getPath().toString());\n     out.writeLong(length);\n     out.writeBoolean(isdir);\n     out.writeShort(block_replication);\n     out.writeLong(blocksize);\n     out.writeLong(modification_time);\n     out.writeLong(access_time);\n     permission.write(out);\n     Text.writeString(out, owner);\n     Text.writeString(out, group);\n+    out.writeBoolean(isSymlink());\n+    if (isSymlink()) {\n+      Text.writeString(out, symlink.toString());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString());\n    out.writeLong(length);\n    out.writeBoolean(isdir);\n    out.writeShort(block_replication);\n    out.writeLong(blocksize);\n    out.writeLong(modification_time);\n    out.writeLong(access_time);\n    permission.write(out);\n    Text.writeString(out, owner);\n    Text.writeString(out, group);\n    out.writeBoolean(isSymlink());\n    if (isSymlink()) {\n      Text.writeString(out, symlink.toString());\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileStatus.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,12 @@\n+  public void write(DataOutput out) throws IOException {\n+    Text.writeString(out, getPath().toString());\n+    out.writeLong(length);\n+    out.writeBoolean(isdir);\n+    out.writeShort(block_replication);\n+    out.writeLong(blocksize);\n+    out.writeLong(modification_time);\n+    out.writeLong(access_time);\n+    permission.write(out);\n+    Text.writeString(out, owner);\n+    Text.writeString(out, group);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    Text.writeString(out, getPath().toString());\n    out.writeLong(length);\n    out.writeBoolean(isdir);\n    out.writeShort(block_replication);\n    out.writeLong(blocksize);\n    out.writeLong(modification_time);\n    out.writeLong(access_time);\n    permission.write(out);\n    Text.writeString(out, owner);\n    Text.writeString(out, group);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileStatus.java"
    }
  }
}