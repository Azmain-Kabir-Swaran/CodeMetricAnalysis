{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShellBasedIdMapping.java",
  "functionName": "updateMaps",
  "functionId": "updateMaps",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
  "functionStartLine": 335,
  "functionEndLine": 349,
  "numCommitsSeen": 27,
  "timeTaken": 1957,
  "changeHistory": [
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3",
    "351c5561c2fd380ab7746ca4e91d7b838e61e03f",
    "72a556d3b0def0ab4e4509528cc513f6df06b084",
    "c88c6c57aa79e8a1f33d2e075491656f472c858b",
    "1ba203e3e0ead72afd9c3351827f44ff2d51b974",
    "674c523db17b1f15792f4ba7c8c5bb4ad4f28ba2",
    "aa4fba6d92faf5e51bb330c6d18825fbed63b553",
    "4d63b7a016232d3d816e9a0229a029a07a06757a"
  ],
  "changeHistoryShort": {
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3": "Ybodychange",
    "351c5561c2fd380ab7746ca4e91d7b838e61e03f": "Ybodychange",
    "72a556d3b0def0ab4e4509528cc513f6df06b084": "Yfilerename",
    "c88c6c57aa79e8a1f33d2e075491656f472c858b": "Ybodychange",
    "1ba203e3e0ead72afd9c3351827f44ff2d51b974": "Ybodychange",
    "674c523db17b1f15792f4ba7c8c5bb4ad4f28ba2": "Ybodychange",
    "aa4fba6d92faf5e51bb330c6d18825fbed63b553": "Ymultichange(Yexceptionschange,Ybodychange)",
    "4d63b7a016232d3d816e9a0229a029a07a06757a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7564. NFS gateway dynamically reload UID/GID mapping file /etc/nfs.map. Contributed by Yongjun Zhang\n",
      "commitDate": "06/01/15 4:19 PM",
      "commitName": "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "05/01/15 7:45 PM",
      "commitNameOld": "9803ae374f69942aec82ec6eeeb9722523a1ade0",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,15 @@\n   synchronized public void updateMaps() throws IOException {\n     if (!checkSupportedPlatform()) {\n       return;\n     }\n \n     if (constructFullMapAtInit) {\n       loadFullMaps();\n+      // set constructFullMapAtInit to false to allow testing code to\n+      // do incremental update to maps after initial construction\n+      constructFullMapAtInit \u003d false;\n     } else {\n+      updateStaticMapping();\n       clearNameMaps();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void updateMaps() throws IOException {\n    if (!checkSupportedPlatform()) {\n      return;\n    }\n\n    if (constructFullMapAtInit) {\n      loadFullMaps();\n      // set constructFullMapAtInit to false to allow testing code to\n      // do incremental update to maps after initial construction\n      constructFullMapAtInit \u003d false;\n    } else {\n      updateStaticMapping();\n      clearNameMaps();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
      "extendedDetails": {}
    },
    "351c5561c2fd380ab7746ca4e91d7b838e61e03f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7146. NFS ID/Group lookup requires SSSD enumeration on the server. Contributed by Yongjun Zhang\n",
      "commitDate": "17/11/14 1:23 PM",
      "commitName": "351c5561c2fd380ab7746ca4e91d7b838e61e03f",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "29/10/14 11:05 AM",
      "commitNameOld": "72a556d3b0def0ab4e4509528cc513f6df06b084",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 19.14,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,11 @@\n   synchronized public void updateMaps() throws IOException {\n-    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n-    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n-\n-    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n-      LOG.error(\"Platform is not supported:\" + OS\n-          + \". Can\u0027t update user map and group map and\"\n-          + \" \u0027nobody\u0027 will be used for any user and group.\");\n+    if (!checkSupportedPlatform()) {\n       return;\n     }\n-    \n-    StaticMapping staticMapping \u003d new StaticMapping(\n-        new HashMap\u003cInteger, Integer\u003e(), new HashMap\u003cInteger, Integer\u003e());\n-    if (staticMappingFile.exists()) {\n-      LOG.info(\"Using \u0027\" + staticMappingFile + \"\u0027 for static UID/GID mapping...\");\n-      staticMapping \u003d parseStaticMap(staticMappingFile);\n-    } else {\n-      LOG.info(\"Not doing static UID/GID mapping because \u0027\" + staticMappingFile\n-          + \"\u0027 does not exist.\");\n-    }\n \n-    if (OS.startsWith(\"Mac\")) {\n-      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\",\n-          staticMapping.uidMapping);\n-      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\",\n-          staticMapping.gidMapping);\n+    if (constructFullMapAtInit) {\n+      loadFullMaps();\n     } else {\n-      updateMapInternal(uMap, \"user\", GET_ALL_USERS_CMD, \":\",\n-          staticMapping.uidMapping);\n-      updateMapInternal(gMap, \"group\", GET_ALL_GROUPS_CMD, \":\",\n-          staticMapping.gidMapping);\n+      clearNameMaps();\n     }\n-\n-    uidNameMap \u003d uMap;\n-    gidNameMap \u003d gMap;\n-    lastUpdateTime \u003d Time.monotonicNow();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void updateMaps() throws IOException {\n    if (!checkSupportedPlatform()) {\n      return;\n    }\n\n    if (constructFullMapAtInit) {\n      loadFullMaps();\n    } else {\n      clearNameMaps();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
      "extendedDetails": {}
    },
    "72a556d3b0def0ab4e4509528cc513f6df06b084": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-11195. Move Id-Name mapping in NFS to the hadoop-common area for better maintenance. Contributed by Yongjun Zhang\n",
      "commitDate": "29/10/14 11:05 AM",
      "commitName": "72a556d3b0def0ab4e4509528cc513f6df06b084",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "29/10/14 10:29 AM",
      "commitNameOld": "b056048114bf4701ef9dd22486db937cb589e81b",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized public void updateMaps() throws IOException {\n    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n\n    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n      LOG.error(\"Platform is not supported:\" + OS\n          + \". Can\u0027t update user map and group map and\"\n          + \" \u0027nobody\u0027 will be used for any user and group.\");\n      return;\n    }\n    \n    StaticMapping staticMapping \u003d new StaticMapping(\n        new HashMap\u003cInteger, Integer\u003e(), new HashMap\u003cInteger, Integer\u003e());\n    if (staticMappingFile.exists()) {\n      LOG.info(\"Using \u0027\" + staticMappingFile + \"\u0027 for static UID/GID mapping...\");\n      staticMapping \u003d parseStaticMap(staticMappingFile);\n    } else {\n      LOG.info(\"Not doing static UID/GID mapping because \u0027\" + staticMappingFile\n          + \"\u0027 does not exist.\");\n    }\n\n    if (OS.startsWith(\"Mac\")) {\n      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\",\n          staticMapping.uidMapping);\n      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\",\n          staticMapping.gidMapping);\n    } else {\n      updateMapInternal(uMap, \"user\", GET_ALL_USERS_CMD, \":\",\n          staticMapping.uidMapping);\n      updateMapInternal(gMap, \"group\", GET_ALL_GROUPS_CMD, \":\",\n          staticMapping.gidMapping);\n    }\n\n    uidNameMap \u003d uMap;\n    gidNameMap \u003d gMap;\n    lastUpdateTime \u003d Time.monotonicNow();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java"
      }
    },
    "c88c6c57aa79e8a1f33d2e075491656f472c858b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11130. NFS updateMaps OS check is reversed. Contributed by Brandon Li\n",
      "commitDate": "29/09/14 3:05 PM",
      "commitName": "c88c6c57aa79e8a1f33d2e075491656f472c858b",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "30/05/14 4:53 PM",
      "commitNameOld": "42391d260da400593812396c1ffd45d1a371d3cb",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 121.93,
      "commitsBetweenForRepo": 1045,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,37 @@\n   synchronized public void updateMaps() throws IOException {\n     BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n     BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n \n     if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n       LOG.error(\"Platform is not supported:\" + OS\n           + \". Can\u0027t update user map and group map and\"\n           + \" \u0027nobody\u0027 will be used for any user and group.\");\n       return;\n     }\n     \n     StaticMapping staticMapping \u003d new StaticMapping(\n         new HashMap\u003cInteger, Integer\u003e(), new HashMap\u003cInteger, Integer\u003e());\n     if (staticMappingFile.exists()) {\n       LOG.info(\"Using \u0027\" + staticMappingFile + \"\u0027 for static UID/GID mapping...\");\n       staticMapping \u003d parseStaticMap(staticMappingFile);\n     } else {\n       LOG.info(\"Not doing static UID/GID mapping because \u0027\" + staticMappingFile\n           + \"\u0027 does not exist.\");\n     }\n \n-    if (OS.startsWith(\"Linux\")) {\n-      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\",\n-          staticMapping.uidMapping);\n-      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\",\n-          staticMapping.gidMapping);\n-    } else {\n-      // Mac\n+    if (OS.startsWith(\"Mac\")) {\n       updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\",\n           staticMapping.uidMapping);\n       updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\",\n           staticMapping.gidMapping);\n+    } else {\n+      updateMapInternal(uMap, \"user\", GET_ALL_USERS_CMD, \":\",\n+          staticMapping.uidMapping);\n+      updateMapInternal(gMap, \"group\", GET_ALL_GROUPS_CMD, \":\",\n+          staticMapping.gidMapping);\n     }\n \n     uidNameMap \u003d uMap;\n     gidNameMap \u003d gMap;\n     lastUpdateTime \u003d Time.monotonicNow();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void updateMaps() throws IOException {\n    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n\n    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n      LOG.error(\"Platform is not supported:\" + OS\n          + \". Can\u0027t update user map and group map and\"\n          + \" \u0027nobody\u0027 will be used for any user and group.\");\n      return;\n    }\n    \n    StaticMapping staticMapping \u003d new StaticMapping(\n        new HashMap\u003cInteger, Integer\u003e(), new HashMap\u003cInteger, Integer\u003e());\n    if (staticMappingFile.exists()) {\n      LOG.info(\"Using \u0027\" + staticMappingFile + \"\u0027 for static UID/GID mapping...\");\n      staticMapping \u003d parseStaticMap(staticMappingFile);\n    } else {\n      LOG.info(\"Not doing static UID/GID mapping because \u0027\" + staticMappingFile\n          + \"\u0027 does not exist.\");\n    }\n\n    if (OS.startsWith(\"Mac\")) {\n      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\",\n          staticMapping.uidMapping);\n      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\",\n          staticMapping.gidMapping);\n    } else {\n      updateMapInternal(uMap, \"user\", GET_ALL_USERS_CMD, \":\",\n          staticMapping.uidMapping);\n      updateMapInternal(gMap, \"group\", GET_ALL_GROUPS_CMD, \":\",\n          staticMapping.gidMapping);\n    }\n\n    uidNameMap \u003d uMap;\n    gidNameMap \u003d gMap;\n    lastUpdateTime \u003d Time.monotonicNow();\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java",
      "extendedDetails": {}
    },
    "1ba203e3e0ead72afd9c3351827f44ff2d51b974": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6435. Add support for specifying a static uid/gid mapping for the NFS gateway. (atm via wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596966 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/14 1:44 PM",
      "commitName": "1ba203e3e0ead72afd9c3351827f44ff2d51b974",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "19/05/14 3:16 PM",
      "commitNameOld": "674c523db17b1f15792f4ba7c8c5bb4ad4f28ba2",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 2.94,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,38 @@\n   synchronized public void updateMaps() throws IOException {\n     BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n     BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n \n     if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n       LOG.error(\"Platform is not supported:\" + OS\n           + \". Can\u0027t update user map and group map and\"\n           + \" \u0027nobody\u0027 will be used for any user and group.\");\n       return;\n     }\n+    \n+    StaticMapping staticMapping \u003d new StaticMapping(\n+        new HashMap\u003cInteger, Integer\u003e(), new HashMap\u003cInteger, Integer\u003e());\n+    if (staticMappingFile.exists()) {\n+      LOG.info(\"Using \u0027\" + staticMappingFile + \"\u0027 for static UID/GID mapping...\");\n+      staticMapping \u003d parseStaticMap(staticMappingFile);\n+    } else {\n+      LOG.info(\"Not doing static UID/GID mapping because \u0027\" + staticMappingFile\n+          + \"\u0027 does not exist.\");\n+    }\n \n     if (OS.startsWith(\"Linux\")) {\n-      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n-      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n+      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\",\n+          staticMapping.uidMapping);\n+      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\",\n+          staticMapping.gidMapping);\n     } else {\n       // Mac\n-      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n-      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n+      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\",\n+          staticMapping.uidMapping);\n+      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\",\n+          staticMapping.gidMapping);\n     }\n \n     uidNameMap \u003d uMap;\n     gidNameMap \u003d gMap;\n     lastUpdateTime \u003d Time.monotonicNow();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void updateMaps() throws IOException {\n    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n\n    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n      LOG.error(\"Platform is not supported:\" + OS\n          + \". Can\u0027t update user map and group map and\"\n          + \" \u0027nobody\u0027 will be used for any user and group.\");\n      return;\n    }\n    \n    StaticMapping staticMapping \u003d new StaticMapping(\n        new HashMap\u003cInteger, Integer\u003e(), new HashMap\u003cInteger, Integer\u003e());\n    if (staticMappingFile.exists()) {\n      LOG.info(\"Using \u0027\" + staticMappingFile + \"\u0027 for static UID/GID mapping...\");\n      staticMapping \u003d parseStaticMap(staticMappingFile);\n    } else {\n      LOG.info(\"Not doing static UID/GID mapping because \u0027\" + staticMappingFile\n          + \"\u0027 does not exist.\");\n    }\n\n    if (OS.startsWith(\"Linux\")) {\n      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\",\n          staticMapping.uidMapping);\n      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\",\n          staticMapping.gidMapping);\n    } else {\n      // Mac\n      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\",\n          staticMapping.uidMapping);\n      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\",\n          staticMapping.gidMapping);\n    }\n\n    uidNameMap \u003d uMap;\n    gidNameMap \u003d gMap;\n    lastUpdateTime \u003d Time.monotonicNow();\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java",
      "extendedDetails": {}
    },
    "674c523db17b1f15792f4ba7c8c5bb4ad4f28ba2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10612. NFS failed to refresh the user group id mapping table. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596075 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/05/14 3:16 PM",
      "commitName": "674c523db17b1f15792f4ba7c8c5bb4ad4f28ba2",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "15/05/14 2:23 PM",
      "commitNameOld": "1c0e7a318e0e68e7c18c2555c1848d527a710722",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 4.04,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   synchronized public void updateMaps() throws IOException {\n     BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n     BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n \n     if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n       LOG.error(\"Platform is not supported:\" + OS\n           + \". Can\u0027t update user map and group map and\"\n           + \" \u0027nobody\u0027 will be used for any user and group.\");\n       return;\n     }\n \n     if (OS.startsWith(\"Linux\")) {\n       updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n       updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n     } else {\n       // Mac\n       updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n       updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n     }\n \n     uidNameMap \u003d uMap;\n     gidNameMap \u003d gMap;\n-    lastUpdateTime \u003d System.currentTimeMillis();\n+    lastUpdateTime \u003d Time.monotonicNow();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void updateMaps() throws IOException {\n    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n\n    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n      LOG.error(\"Platform is not supported:\" + OS\n          + \". Can\u0027t update user map and group map and\"\n          + \" \u0027nobody\u0027 will be used for any user and group.\");\n      return;\n    }\n\n    if (OS.startsWith(\"Linux\")) {\n      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n    } else {\n      // Mac\n      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n    }\n\n    uidNameMap \u003d uMap;\n    gidNameMap \u003d gMap;\n    lastUpdateTime \u003d Time.monotonicNow();\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java",
      "extendedDetails": {}
    },
    "aa4fba6d92faf5e51bb330c6d18825fbed63b553": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-5587. add debug information when NFS fails to start with duplicate user or group names. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548028 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 11:13 PM",
      "commitName": "aa4fba6d92faf5e51bb330c6d18825fbed63b553",
      "commitAuthor": "Brandon Li",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-5587. add debug information when NFS fails to start with duplicate user or group names. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548028 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/13 11:13 PM",
          "commitName": "aa4fba6d92faf5e51bb330c6d18825fbed63b553",
          "commitAuthor": "Brandon Li",
          "commitDateOld": "12/09/13 9:21 PM",
          "commitNameOld": "ede10b8a1f9a4d099c16469f827345cb359cef3d",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 83.12,
          "commitsBetweenForRepo": 523,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  synchronized public void updateMaps() {\n+  synchronized public void updateMaps() throws IOException {\n     BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n     BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n \n-    try {\n-      if (OS.startsWith(\"Linux\")) {\n-        updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n-        updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n-      } else if (OS.startsWith(\"Mac\")) {\n-        updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n-        updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n-      } else {\n-        throw new IOException(\"Platform is not supported:\" + OS);\n-      }\n-    } catch (IOException e) {\n-      LOG.error(\"Can\u0027t update maps:\" + e);\n+    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n+      LOG.error(\"Platform is not supported:\" + OS\n+          + \". Can\u0027t update user map and group map and\"\n+          + \" \u0027nobody\u0027 will be used for any user and group.\");\n       return;\n     }\n+\n+    if (OS.startsWith(\"Linux\")) {\n+      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n+      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n+    } else {\n+      // Mac\n+      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n+      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n+    }\n+\n     uidNameMap \u003d uMap;\n     gidNameMap \u003d gMap;\n     lastUpdateTime \u003d System.currentTimeMillis();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized public void updateMaps() throws IOException {\n    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n\n    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n      LOG.error(\"Platform is not supported:\" + OS\n          + \". Can\u0027t update user map and group map and\"\n          + \" \u0027nobody\u0027 will be used for any user and group.\");\n      return;\n    }\n\n    if (OS.startsWith(\"Linux\")) {\n      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n    } else {\n      // Mac\n      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n    }\n\n    uidNameMap \u003d uMap;\n    gidNameMap \u003d gMap;\n    lastUpdateTime \u003d System.currentTimeMillis();\n  }",
          "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5587. add debug information when NFS fails to start with duplicate user or group names. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548028 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/13 11:13 PM",
          "commitName": "aa4fba6d92faf5e51bb330c6d18825fbed63b553",
          "commitAuthor": "Brandon Li",
          "commitDateOld": "12/09/13 9:21 PM",
          "commitNameOld": "ede10b8a1f9a4d099c16469f827345cb359cef3d",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 83.12,
          "commitsBetweenForRepo": 523,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  synchronized public void updateMaps() {\n+  synchronized public void updateMaps() throws IOException {\n     BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n     BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n \n-    try {\n-      if (OS.startsWith(\"Linux\")) {\n-        updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n-        updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n-      } else if (OS.startsWith(\"Mac\")) {\n-        updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n-        updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n-      } else {\n-        throw new IOException(\"Platform is not supported:\" + OS);\n-      }\n-    } catch (IOException e) {\n-      LOG.error(\"Can\u0027t update maps:\" + e);\n+    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n+      LOG.error(\"Platform is not supported:\" + OS\n+          + \". Can\u0027t update user map and group map and\"\n+          + \" \u0027nobody\u0027 will be used for any user and group.\");\n       return;\n     }\n+\n+    if (OS.startsWith(\"Linux\")) {\n+      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n+      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n+    } else {\n+      // Mac\n+      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n+      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n+    }\n+\n     uidNameMap \u003d uMap;\n     gidNameMap \u003d gMap;\n     lastUpdateTime \u003d System.currentTimeMillis();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized public void updateMaps() throws IOException {\n    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n\n    if (!OS.startsWith(\"Linux\") \u0026\u0026 !OS.startsWith(\"Mac\")) {\n      LOG.error(\"Platform is not supported:\" + OS\n          + \". Can\u0027t update user map and group map and\"\n          + \" \u0027nobody\u0027 will be used for any user and group.\");\n      return;\n    }\n\n    if (OS.startsWith(\"Linux\")) {\n      updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n      updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n    } else {\n      // Mac\n      updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n      updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n    }\n\n    uidNameMap \u003d uMap;\n    gidNameMap \u003d gMap;\n    lastUpdateTime \u003d System.currentTimeMillis();\n  }",
          "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java",
          "extendedDetails": {}
        }
      ]
    },
    "4d63b7a016232d3d816e9a0229a029a07a06757a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9515. Add general interface for NFS and Mount. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493924 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 1:32 PM",
      "commitName": "4d63b7a016232d3d816e9a0229a029a07a06757a",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,22 @@\n+  synchronized public void updateMaps() {\n+    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n+    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n+\n+    try {\n+      if (OS.startsWith(\"Linux\")) {\n+        updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n+        updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n+      } else if (OS.startsWith(\"Mac\")) {\n+        updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n+        updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n+      } else {\n+        throw new IOException(\"Platform is not supported:\" + OS);\n+      }\n+    } catch (IOException e) {\n+      LOG.error(\"Can\u0027t update maps:\" + e);\n+      return;\n+    }\n+    uidNameMap \u003d uMap;\n+    gidNameMap \u003d gMap;\n+    lastUpdateTime \u003d System.currentTimeMillis();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void updateMaps() {\n    BiMap\u003cInteger, String\u003e uMap \u003d HashBiMap.create();\n    BiMap\u003cInteger, String\u003e gMap \u003d HashBiMap.create();\n\n    try {\n      if (OS.startsWith(\"Linux\")) {\n        updateMapInternal(uMap, \"user\", LINUX_GET_ALL_USERS_CMD, \":\");\n        updateMapInternal(gMap, \"group\", LINUX_GET_ALL_GROUPS_CMD, \":\");\n      } else if (OS.startsWith(\"Mac\")) {\n        updateMapInternal(uMap, \"user\", MAC_GET_ALL_USERS_CMD, \"\\\\s+\");\n        updateMapInternal(gMap, \"group\", MAC_GET_ALL_GROUPS_CMD, \"\\\\s+\");\n      } else {\n        throw new IOException(\"Platform is not supported:\" + OS);\n      }\n    } catch (IOException e) {\n      LOG.error(\"Can\u0027t update maps:\" + e);\n      return;\n    }\n    uidNameMap \u003d uMap;\n    gidNameMap \u003d gMap;\n    lastUpdateTime \u003d System.currentTimeMillis();\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java"
    }
  }
}