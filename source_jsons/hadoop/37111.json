{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairReservationSystem.java",
  "functionName": "reinitialize",
  "functionId": "reinitialize___conf-Configuration__rmContext-RMContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/FairReservationSystem.java",
  "functionStartLine": 41,
  "functionEndLine": 53,
  "numCommitsSeen": 2,
  "timeTaken": 902,
  "changeHistory": [
    "a22ffc318801698e86cd0e316b4824015f2486ac"
  ],
  "changeHistoryShort": {
    "a22ffc318801698e86cd0e316b4824015f2486ac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a22ffc318801698e86cd0e316b4824015f2486ac": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2738. [YARN-2574] Add FairReservationSystem for FairScheduler. (Anubhav Dhoot via kasha)\n",
      "commitDate": "19/12/14 3:37 PM",
      "commitName": "a22ffc318801698e86cd0e316b4824015f2486ac",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,13 @@\n+  public void reinitialize(Configuration conf, RMContext rmContext)\n+      throws YarnException {\n+    // Validate if the scheduler is fair scheduler\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    if (!(scheduler instanceof FairScheduler)) {\n+      throw new YarnRuntimeException(\"Class \"\n+          + scheduler.getClass().getCanonicalName() + \" not instance of \"\n+          + FairScheduler.class.getCanonicalName());\n+    }\n+    fairScheduler \u003d (FairScheduler) scheduler;\n+    this.conf \u003d conf;\n+    super.reinitialize(conf, rmContext);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(Configuration conf, RMContext rmContext)\n      throws YarnException {\n    // Validate if the scheduler is fair scheduler\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    if (!(scheduler instanceof FairScheduler)) {\n      throw new YarnRuntimeException(\"Class \"\n          + scheduler.getClass().getCanonicalName() + \" not instance of \"\n          + FairScheduler.class.getCanonicalName());\n    }\n    fairScheduler \u003d (FairScheduler) scheduler;\n    this.conf \u003d conf;\n    super.reinitialize(conf, rmContext);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/FairReservationSystem.java"
    }
  }
}