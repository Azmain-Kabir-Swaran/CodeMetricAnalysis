{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MRAppMaster.java",
  "functionName": "readJustAMInfos",
  "functionId": "readJustAMInfos",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
  "functionStartLine": 1475,
  "functionEndLine": 1516,
  "numCommitsSeen": 124,
  "timeTaken": 2431,
  "changeHistory": [
    "6a1c41111edcdc58c846fc50e53554fbba230171",
    "42d1eaf237ef0a3a30c061888d35329b2a2e1453"
  ],
  "changeHistoryShort": {
    "6a1c41111edcdc58c846fc50e53554fbba230171": "Ybodychange",
    "42d1eaf237ef0a3a30c061888d35329b2a2e1453": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a1c41111edcdc58c846fc50e53554fbba230171": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5079. Changes job recovery to restore state directly from job history, instaed of simulating state machine events. Contributed by Jason Lowe and Robert Parker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1466767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/13 9:52 PM",
      "commitName": "6a1c41111edcdc58c846fc50e53554fbba230171",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "03/04/13 6:56 PM",
      "commitNameOld": "fc75d3f3dc2733d6c783eb4d4f1c5c6ae680f08e",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 7.12,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,42 @@\n   private List\u003cAMInfo\u003e readJustAMInfos() {\n     List\u003cAMInfo\u003e amInfos \u003d new ArrayList\u003cAMInfo\u003e();\n     FSDataInputStream inputStream \u003d null;\n     try {\n-      inputStream \u003d\n-          RecoveryService.getPreviousJobHistoryFileStream(getConfig(),\n-            appAttemptID);\n+      inputStream \u003d getPreviousJobHistoryStream(getConfig(), appAttemptID);\n       EventReader jobHistoryEventReader \u003d new EventReader(inputStream);\n \n       // All AMInfos are contiguous. Track when the first AMStartedEvent\n       // appears.\n       boolean amStartedEventsBegan \u003d false;\n \n       HistoryEvent event;\n       while ((event \u003d jobHistoryEventReader.getNextEvent()) !\u003d null) {\n         if (event.getEventType() \u003d\u003d EventType.AM_STARTED) {\n           if (!amStartedEventsBegan) {\n             // First AMStartedEvent.\n             amStartedEventsBegan \u003d true;\n           }\n           AMStartedEvent amStartedEvent \u003d (AMStartedEvent) event;\n           amInfos.add(MRBuilderUtils.newAMInfo(\n             amStartedEvent.getAppAttemptId(), amStartedEvent.getStartTime(),\n             amStartedEvent.getContainerId(),\n             StringInterner.weakIntern(amStartedEvent.getNodeManagerHost()),\n             amStartedEvent.getNodeManagerPort(),\n             amStartedEvent.getNodeManagerHttpPort()));\n         } else if (amStartedEventsBegan) {\n           // This means AMStartedEvents began and this event is a\n           // non-AMStarted event.\n           // No need to continue reading all the other events.\n           break;\n         }\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Could not parse the old history file. \"\n           + \"Will not have old AMinfos \", e);\n     } finally {\n       if (inputStream !\u003d null) {\n         IOUtils.closeQuietly(inputStream);\n       }\n     }\n     return amInfos;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cAMInfo\u003e readJustAMInfos() {\n    List\u003cAMInfo\u003e amInfos \u003d new ArrayList\u003cAMInfo\u003e();\n    FSDataInputStream inputStream \u003d null;\n    try {\n      inputStream \u003d getPreviousJobHistoryStream(getConfig(), appAttemptID);\n      EventReader jobHistoryEventReader \u003d new EventReader(inputStream);\n\n      // All AMInfos are contiguous. Track when the first AMStartedEvent\n      // appears.\n      boolean amStartedEventsBegan \u003d false;\n\n      HistoryEvent event;\n      while ((event \u003d jobHistoryEventReader.getNextEvent()) !\u003d null) {\n        if (event.getEventType() \u003d\u003d EventType.AM_STARTED) {\n          if (!amStartedEventsBegan) {\n            // First AMStartedEvent.\n            amStartedEventsBegan \u003d true;\n          }\n          AMStartedEvent amStartedEvent \u003d (AMStartedEvent) event;\n          amInfos.add(MRBuilderUtils.newAMInfo(\n            amStartedEvent.getAppAttemptId(), amStartedEvent.getStartTime(),\n            amStartedEvent.getContainerId(),\n            StringInterner.weakIntern(amStartedEvent.getNodeManagerHost()),\n            amStartedEvent.getNodeManagerPort(),\n            amStartedEvent.getNodeManagerHttpPort()));\n        } else if (amStartedEventsBegan) {\n          // This means AMStartedEvents began and this event is a\n          // non-AMStarted event.\n          // No need to continue reading all the other events.\n          break;\n        }\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Could not parse the old history file. \"\n          + \"Will not have old AMinfos \", e);\n    } finally {\n      if (inputStream !\u003d null) {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return amInfos;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
      "extendedDetails": {}
    },
    "42d1eaf237ef0a3a30c061888d35329b2a2e1453": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4729. job history UI not showing all job attempts. Contributed by Vinod Kumar Vavilapalli\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1404817 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/11/12 3:59 PM",
      "commitName": "42d1eaf237ef0a3a30c061888d35329b2a2e1453",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,44 @@\n+  private List\u003cAMInfo\u003e readJustAMInfos() {\n+    List\u003cAMInfo\u003e amInfos \u003d new ArrayList\u003cAMInfo\u003e();\n+    FSDataInputStream inputStream \u003d null;\n+    try {\n+      inputStream \u003d\n+          RecoveryService.getPreviousJobHistoryFileStream(getConfig(),\n+            appAttemptID);\n+      EventReader jobHistoryEventReader \u003d new EventReader(inputStream);\n+\n+      // All AMInfos are contiguous. Track when the first AMStartedEvent\n+      // appears.\n+      boolean amStartedEventsBegan \u003d false;\n+\n+      HistoryEvent event;\n+      while ((event \u003d jobHistoryEventReader.getNextEvent()) !\u003d null) {\n+        if (event.getEventType() \u003d\u003d EventType.AM_STARTED) {\n+          if (!amStartedEventsBegan) {\n+            // First AMStartedEvent.\n+            amStartedEventsBegan \u003d true;\n+          }\n+          AMStartedEvent amStartedEvent \u003d (AMStartedEvent) event;\n+          amInfos.add(MRBuilderUtils.newAMInfo(\n+            amStartedEvent.getAppAttemptId(), amStartedEvent.getStartTime(),\n+            amStartedEvent.getContainerId(),\n+            StringInterner.weakIntern(amStartedEvent.getNodeManagerHost()),\n+            amStartedEvent.getNodeManagerPort(),\n+            amStartedEvent.getNodeManagerHttpPort()));\n+        } else if (amStartedEventsBegan) {\n+          // This means AMStartedEvents began and this event is a\n+          // non-AMStarted event.\n+          // No need to continue reading all the other events.\n+          break;\n+        }\n+      }\n+    } catch (IOException e) {\n+      LOG.warn(\"Could not parse the old history file. \"\n+          + \"Will not have old AMinfos \", e);\n+    } finally {\n+      if (inputStream !\u003d null) {\n+        IOUtils.closeQuietly(inputStream);\n+      }\n+    }\n+    return amInfos;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cAMInfo\u003e readJustAMInfos() {\n    List\u003cAMInfo\u003e amInfos \u003d new ArrayList\u003cAMInfo\u003e();\n    FSDataInputStream inputStream \u003d null;\n    try {\n      inputStream \u003d\n          RecoveryService.getPreviousJobHistoryFileStream(getConfig(),\n            appAttemptID);\n      EventReader jobHistoryEventReader \u003d new EventReader(inputStream);\n\n      // All AMInfos are contiguous. Track when the first AMStartedEvent\n      // appears.\n      boolean amStartedEventsBegan \u003d false;\n\n      HistoryEvent event;\n      while ((event \u003d jobHistoryEventReader.getNextEvent()) !\u003d null) {\n        if (event.getEventType() \u003d\u003d EventType.AM_STARTED) {\n          if (!amStartedEventsBegan) {\n            // First AMStartedEvent.\n            amStartedEventsBegan \u003d true;\n          }\n          AMStartedEvent amStartedEvent \u003d (AMStartedEvent) event;\n          amInfos.add(MRBuilderUtils.newAMInfo(\n            amStartedEvent.getAppAttemptId(), amStartedEvent.getStartTime(),\n            amStartedEvent.getContainerId(),\n            StringInterner.weakIntern(amStartedEvent.getNodeManagerHost()),\n            amStartedEvent.getNodeManagerPort(),\n            amStartedEvent.getNodeManagerHttpPort()));\n        } else if (amStartedEventsBegan) {\n          // This means AMStartedEvents began and this event is a\n          // non-AMStarted event.\n          // No need to continue reading all the other events.\n          break;\n        }\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Could not parse the old history file. \"\n          + \"Will not have old AMinfos \", e);\n    } finally {\n      if (inputStream !\u003d null) {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return amInfos;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java"
    }
  }
}