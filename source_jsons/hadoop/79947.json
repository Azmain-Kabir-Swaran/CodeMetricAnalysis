{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RawLocalFileSystem.java",
  "functionName": "truncate",
  "functionId": "truncate___f-Path__newLength-long(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
  "functionStartLine": 432,
  "functionEndLine": 454,
  "numCommitsSeen": 53,
  "timeTaken": 1277,
  "changeHistory": [
    "a0521bc83a168a06f21314a9aff78630a576fc75"
  ],
  "changeHistoryShort": {
    "a0521bc83a168a06f21314a9aff78630a576fc75": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a0521bc83a168a06f21314a9aff78630a576fc75": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11490. Expose truncate API via FileSystem and shell command. Contributed by Milan Desai.",
      "commitDate": "21/01/15 4:00 PM",
      "commitName": "a0521bc83a168a06f21314a9aff78630a576fc75",
      "commitAuthor": "Konstantin V Shvachko",
      "diff": "@@ -0,0 +1,23 @@\n+  public boolean truncate(Path f, final long newLength) throws IOException {\n+    FileStatus status \u003d getFileStatus(f);\n+    if(status \u003d\u003d null) {\n+      throw new FileNotFoundException(\"File \" + f + \" not found\");\n+    }\n+    if(status.isDirectory()) {\n+      throw new IOException(\"Cannot truncate a directory (\u003d\" + f + \")\");\n+    }\n+    long oldLength \u003d status.getLen();\n+    if(newLength \u003e oldLength) {\n+      throw new IllegalArgumentException(\n+          \"Cannot truncate to a larger file size. Current size: \" + oldLength +\n+          \", truncate size: \" + newLength + \".\");\n+    }\n+    try (FileOutputStream out \u003d new FileOutputStream(pathToFile(f), true)) {\n+      try {\n+        out.getChannel().truncate(newLength);\n+      } catch(IOException e) {\n+        throw new FSError(e);\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean truncate(Path f, final long newLength) throws IOException {\n    FileStatus status \u003d getFileStatus(f);\n    if(status \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" not found\");\n    }\n    if(status.isDirectory()) {\n      throw new IOException(\"Cannot truncate a directory (\u003d\" + f + \")\");\n    }\n    long oldLength \u003d status.getLen();\n    if(newLength \u003e oldLength) {\n      throw new IllegalArgumentException(\n          \"Cannot truncate to a larger file size. Current size: \" + oldLength +\n          \", truncate size: \" + newLength + \".\");\n    }\n    try (FileOutputStream out \u003d new FileOutputStream(pathToFile(f), true)) {\n      try {\n        out.getChannel().truncate(newLength);\n      } catch(IOException e) {\n        throw new FSError(e);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
    }
  }
}