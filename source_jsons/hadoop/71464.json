{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSRegistryOperationsService.java",
  "functionName": "mknode",
  "functionId": "mknode___path-String__createParents-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/impl/FSRegistryOperationsService.java",
  "functionStartLine": 102,
  "functionEndLine": 131,
  "numCommitsSeen": 3,
  "timeTaken": 1210,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "ed24da3dd73c137b44235e525112056ace6d3843"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "ed24da3dd73c137b44235e525112056ace6d3843": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean mknode(String path, boolean createParents)\n      throws PathNotFoundException, InvalidPathnameException, IOException {\n    Path registryPath \u003d makePath(path);\n\n    // getFileStatus throws FileNotFound if the path doesn\u0027t exist. If the\n    // file already exists, return.\n    try {\n      fs.getFileStatus(registryPath);\n      return false;\n    } catch (FileNotFoundException e) {\n    }\n\n    if (createParents) {\n      // By default, mkdirs creates any parent dirs it needs\n      fs.mkdirs(registryPath);\n    } else {\n      FileStatus parentStatus \u003d null;\n\n      if (registryPath.getParent() !\u003d null) {\n        parentStatus \u003d fs.getFileStatus(registryPath.getParent());\n      }\n\n      if (registryPath.getParent() \u003d\u003d null || parentStatus.isDirectory()) {\n        fs.mkdirs(registryPath);\n      } else {\n        throw new PathNotFoundException(\"no parent for \" + path);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/impl/FSRegistryOperationsService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/impl/FSRegistryOperationsService.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/impl/FSRegistryOperationsService.java"
      }
    },
    "ed24da3dd73c137b44235e525112056ace6d3843": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6413. FileSystem based Yarn Registry implementation. (Ellen Hui via Subru).\n",
      "commitDate": "31/10/17 12:05 PM",
      "commitName": "ed24da3dd73c137b44235e525112056ace6d3843",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,30 @@\n+  public boolean mknode(String path, boolean createParents)\n+      throws PathNotFoundException, InvalidPathnameException, IOException {\n+    Path registryPath \u003d makePath(path);\n+\n+    // getFileStatus throws FileNotFound if the path doesn\u0027t exist. If the\n+    // file already exists, return.\n+    try {\n+      fs.getFileStatus(registryPath);\n+      return false;\n+    } catch (FileNotFoundException e) {\n+    }\n+\n+    if (createParents) {\n+      // By default, mkdirs creates any parent dirs it needs\n+      fs.mkdirs(registryPath);\n+    } else {\n+      FileStatus parentStatus \u003d null;\n+\n+      if (registryPath.getParent() !\u003d null) {\n+        parentStatus \u003d fs.getFileStatus(registryPath.getParent());\n+      }\n+\n+      if (registryPath.getParent() \u003d\u003d null || parentStatus.isDirectory()) {\n+        fs.mkdirs(registryPath);\n+      } else {\n+        throw new PathNotFoundException(\"no parent for \" + path);\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mknode(String path, boolean createParents)\n      throws PathNotFoundException, InvalidPathnameException, IOException {\n    Path registryPath \u003d makePath(path);\n\n    // getFileStatus throws FileNotFound if the path doesn\u0027t exist. If the\n    // file already exists, return.\n    try {\n      fs.getFileStatus(registryPath);\n      return false;\n    } catch (FileNotFoundException e) {\n    }\n\n    if (createParents) {\n      // By default, mkdirs creates any parent dirs it needs\n      fs.mkdirs(registryPath);\n    } else {\n      FileStatus parentStatus \u003d null;\n\n      if (registryPath.getParent() !\u003d null) {\n        parentStatus \u003d fs.getFileStatus(registryPath.getParent());\n      }\n\n      if (registryPath.getParent() \u003d\u003d null || parentStatus.isDirectory()) {\n        fs.mkdirs(registryPath);\n      } else {\n        throw new PathNotFoundException(\"no parent for \" + path);\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/impl/FSRegistryOperationsService.java"
    }
  }
}