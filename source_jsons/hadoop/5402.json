{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystemLock.java",
  "functionName": "writeLockInterruptibly",
  "functionId": "writeLockInterruptibly",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java",
  "functionStartLine": 234,
  "functionEndLine": 236,
  "numCommitsSeen": 19,
  "timeTaken": 2813,
  "changeHistory": [
    "f96a2df38d889f29314c57f4d94227b2e419a11f",
    "ad49098eb324e238d97db68d7239ed2c4d84afa0",
    "434c5ea75dc3d87513e49290ac9999148ff5163c"
  ],
  "changeHistoryShort": {
    "f96a2df38d889f29314c57f4d94227b2e419a11f": "Ybodychange",
    "ad49098eb324e238d97db68d7239ed2c4d84afa0": "Ybodychange",
    "434c5ea75dc3d87513e49290ac9999148ff5163c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f96a2df38d889f29314c57f4d94227b2e419a11f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16266. Add more fine-grained processing time metrics to the RPC layer. Contributed by Christopher Gregorian.\n",
      "commitDate": "23/05/19 10:28 AM",
      "commitName": "f96a2df38d889f29314c57f4d94227b2e419a11f",
      "commitAuthor": "Christopher Gregorian",
      "commitDateOld": "22/12/18 7:09 AM",
      "commitNameOld": "feb2664ac4b246ca87fc4997a941190f00026dff",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 152.1,
      "commitsBetweenForRepo": 1048,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,3 @@\n   public void writeLockInterruptibly() throws InterruptedException {\n-    coarseLock.writeLock().lockInterruptibly();\n-    if (coarseLock.getWriteHoldCount() \u003d\u003d 1) {\n-      writeLockHeldTimeStampNanos \u003d timer.monotonicNowNanos();\n-    }\n+    doLockInterruptibly(true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeLockInterruptibly() throws InterruptedException {\n    doLockInterruptibly(true);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java",
      "extendedDetails": {}
    },
    "ad49098eb324e238d97db68d7239ed2c4d84afa0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11615. FSNamesystemLock metrics can be inaccurate due to millisecond precision. Contributed by Erik Krogen.\n",
      "commitDate": "17/04/17 4:22 PM",
      "commitName": "ad49098eb324e238d97db68d7239ed2c4d84afa0",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "14/11/16 11:05 AM",
      "commitNameOld": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 154.18,
      "commitsBetweenForRepo": 832,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   public void writeLockInterruptibly() throws InterruptedException {\n     coarseLock.writeLock().lockInterruptibly();\n     if (coarseLock.getWriteHoldCount() \u003d\u003d 1) {\n-      writeLockHeldTimeStamp \u003d timer.monotonicNow();\n+      writeLockHeldTimeStampNanos \u003d timer.monotonicNowNanos();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeLockInterruptibly() throws InterruptedException {\n    coarseLock.writeLock().lockInterruptibly();\n    if (coarseLock.getWriteHoldCount() \u003d\u003d 1) {\n      writeLockHeldTimeStampNanos \u003d timer.monotonicNowNanos();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java",
      "extendedDetails": {}
    },
    "434c5ea75dc3d87513e49290ac9999148ff5163c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10896. Move lock logging logic from FSNamesystem into FSNamesystemLock. Contributed by Erik Krogen.\n",
      "commitDate": "30/09/16 1:16 PM",
      "commitName": "434c5ea75dc3d87513e49290ac9999148ff5163c",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,6 @@\n+  public void writeLockInterruptibly() throws InterruptedException {\n+    coarseLock.writeLock().lockInterruptibly();\n+    if (coarseLock.getWriteHoldCount() \u003d\u003d 1) {\n+      writeLockHeldTimeStamp \u003d timer.monotonicNow();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeLockInterruptibly() throws InterruptedException {\n    coarseLock.writeLock().lockInterruptibly();\n    if (coarseLock.getWriteHoldCount() \u003d\u003d 1) {\n      writeLockHeldTimeStamp \u003d timer.monotonicNow();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java"
    }
  }
}