{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineV2ClientImpl.java",
  "functionName": "dispatchEntities",
  "functionId": "dispatchEntities___sync-boolean__entitiesTobePublished-TimelineEntity[]__subappwrite-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
  "functionStartLine": 546,
  "functionEndLine": 586,
  "numCommitsSeen": 62,
  "timeTaken": 4770,
  "changeHistory": [
    "60fa15366e8f2d59f4dc8e7beaa6edcbbcb9c18f",
    "f8b8bd53c4797d406bea5b1b0cdb179e209169cc",
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
    "0d02ab8729630ad3cfb4300702927333b1d349e3"
  ],
  "changeHistoryShort": {
    "60fa15366e8f2d59f4dc8e7beaa6edcbbcb9c18f": "Ybodychange",
    "f8b8bd53c4797d406bea5b1b0cdb179e209169cc": "Ymultichange(Yparameterchange,Ybodychange)",
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "0d02ab8729630ad3cfb4300702927333b1d349e3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "60fa15366e8f2d59f4dc8e7beaa6edcbbcb9c18f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10240. Prevent Fatal CancelledException in TimelineV2Client when stopping\n\nContributed by Tarun Parimi.\n",
      "commitDate": "20/04/20 11:31 PM",
      "commitName": "60fa15366e8f2d59f4dc8e7beaa6edcbbcb9c18f",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "07/01/20 10:31 PM",
      "commitNameOld": "571795cd180d3077e8ba189b3b70e81f0d1a7044",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 104.0,
      "commitsBetweenForRepo": 355,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,41 @@\n     public void dispatchEntities(boolean sync,\n         TimelineEntity[] entitiesTobePublished, boolean subappwrite)\n         throws YarnException {\n       if (executor.isShutdown()) {\n         throw new YarnException(\"Timeline client is in the process of stopping,\"\n             + \" not accepting any more TimelineEntities\");\n       }\n \n       // wrap all TimelineEntity into TimelineEntities object\n       TimelineEntities entities \u003d new TimelineEntities();\n       for (TimelineEntity entity : entitiesTobePublished) {\n         entities.addEntity(entity);\n       }\n \n       // created a holder and place it in queue\n       EntitiesHolder entitiesHolder \u003d\n           new EntitiesHolder(entities, sync, subappwrite);\n       try {\n         timelineEntityQueue.put(entitiesHolder);\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new YarnException(\n             \"Failed while adding entity to the queue for publishing\", e);\n       }\n \n       if (sync) {\n         // In sync call we need to wait till its published and if any error then\n         // throw it back\n         try {\n           entitiesHolder.get();\n         } catch (ExecutionException e) {\n           throw new YarnException(\"Failed while publishing entity\",\n               e.getCause());\n-        } catch (InterruptedException e) {\n+        } catch (InterruptedException | CancellationException e) {\n           Thread.currentThread().interrupt();\n           throw new YarnException(\"Interrupted while publishing entity\", e);\n+        } catch (Exception e) {\n+          throw new YarnException(\"Encountered error while publishing entity\", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void dispatchEntities(boolean sync,\n        TimelineEntity[] entitiesTobePublished, boolean subappwrite)\n        throws YarnException {\n      if (executor.isShutdown()) {\n        throw new YarnException(\"Timeline client is in the process of stopping,\"\n            + \" not accepting any more TimelineEntities\");\n      }\n\n      // wrap all TimelineEntity into TimelineEntities object\n      TimelineEntities entities \u003d new TimelineEntities();\n      for (TimelineEntity entity : entitiesTobePublished) {\n        entities.addEntity(entity);\n      }\n\n      // created a holder and place it in queue\n      EntitiesHolder entitiesHolder \u003d\n          new EntitiesHolder(entities, sync, subappwrite);\n      try {\n        timelineEntityQueue.put(entitiesHolder);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new YarnException(\n            \"Failed while adding entity to the queue for publishing\", e);\n      }\n\n      if (sync) {\n        // In sync call we need to wait till its published and if any error then\n        // throw it back\n        try {\n          entitiesHolder.get();\n        } catch (ExecutionException e) {\n          throw new YarnException(\"Failed while publishing entity\",\n              e.getCause());\n        } catch (InterruptedException | CancellationException e) {\n          Thread.currentThread().interrupt();\n          throw new YarnException(\"Interrupted while publishing entity\", e);\n        } catch (Exception e) {\n          throw new YarnException(\"Encountered error while publishing entity\", e);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
      "extendedDetails": {}
    },
    "f8b8bd53c4797d406bea5b1b0cdb179e209169cc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6936. [Atsv2] Retrospect storing entities into sub application table from client perspective. (Rohith Sharma K S via Haibo Chen)\n",
      "commitDate": "05/04/18 10:23 AM",
      "commitName": "f8b8bd53c4797d406bea5b1b0cdb179e209169cc",
      "commitAuthor": "Haibo Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6936. [Atsv2] Retrospect storing entities into sub application table from client perspective. (Rohith Sharma K S via Haibo Chen)\n",
          "commitDate": "05/04/18 10:23 AM",
          "commitName": "f8b8bd53c4797d406bea5b1b0cdb179e209169cc",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "15/01/18 6:28 PM",
          "commitNameOld": "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 79.62,
          "commitsBetweenForRepo": 651,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,39 @@\n     public void dispatchEntities(boolean sync,\n-        TimelineEntity[] entitiesTobePublished) throws YarnException {\n+        TimelineEntity[] entitiesTobePublished, boolean subappwrite)\n+        throws YarnException {\n       if (executor.isShutdown()) {\n         throw new YarnException(\"Timeline client is in the process of stopping,\"\n             + \" not accepting any more TimelineEntities\");\n       }\n \n       // wrap all TimelineEntity into TimelineEntities object\n       TimelineEntities entities \u003d new TimelineEntities();\n       for (TimelineEntity entity : entitiesTobePublished) {\n         entities.addEntity(entity);\n       }\n \n       // created a holder and place it in queue\n-      EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n+      EntitiesHolder entitiesHolder \u003d\n+          new EntitiesHolder(entities, sync, subappwrite);\n       try {\n         timelineEntityQueue.put(entitiesHolder);\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new YarnException(\n             \"Failed while adding entity to the queue for publishing\", e);\n       }\n \n       if (sync) {\n         // In sync call we need to wait till its published and if any error then\n         // throw it back\n         try {\n           entitiesHolder.get();\n         } catch (ExecutionException e) {\n           throw new YarnException(\"Failed while publishing entity\",\n               e.getCause());\n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n           throw new YarnException(\"Interrupted while publishing entity\", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void dispatchEntities(boolean sync,\n        TimelineEntity[] entitiesTobePublished, boolean subappwrite)\n        throws YarnException {\n      if (executor.isShutdown()) {\n        throw new YarnException(\"Timeline client is in the process of stopping,\"\n            + \" not accepting any more TimelineEntities\");\n      }\n\n      // wrap all TimelineEntity into TimelineEntities object\n      TimelineEntities entities \u003d new TimelineEntities();\n      for (TimelineEntity entity : entitiesTobePublished) {\n        entities.addEntity(entity);\n      }\n\n      // created a holder and place it in queue\n      EntitiesHolder entitiesHolder \u003d\n          new EntitiesHolder(entities, sync, subappwrite);\n      try {\n        timelineEntityQueue.put(entitiesHolder);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new YarnException(\n            \"Failed while adding entity to the queue for publishing\", e);\n      }\n\n      if (sync) {\n        // In sync call we need to wait till its published and if any error then\n        // throw it back\n        try {\n          entitiesHolder.get();\n        } catch (ExecutionException e) {\n          throw new YarnException(\"Failed while publishing entity\",\n              e.getCause());\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          throw new YarnException(\"Interrupted while publishing entity\", e);\n        }\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
          "extendedDetails": {
            "oldValue": "[sync-boolean, entitiesTobePublished-TimelineEntity[]]",
            "newValue": "[sync-boolean, entitiesTobePublished-TimelineEntity[], subappwrite-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6936. [Atsv2] Retrospect storing entities into sub application table from client perspective. (Rohith Sharma K S via Haibo Chen)\n",
          "commitDate": "05/04/18 10:23 AM",
          "commitName": "f8b8bd53c4797d406bea5b1b0cdb179e209169cc",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "15/01/18 6:28 PM",
          "commitNameOld": "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 79.62,
          "commitsBetweenForRepo": 651,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,39 @@\n     public void dispatchEntities(boolean sync,\n-        TimelineEntity[] entitiesTobePublished) throws YarnException {\n+        TimelineEntity[] entitiesTobePublished, boolean subappwrite)\n+        throws YarnException {\n       if (executor.isShutdown()) {\n         throw new YarnException(\"Timeline client is in the process of stopping,\"\n             + \" not accepting any more TimelineEntities\");\n       }\n \n       // wrap all TimelineEntity into TimelineEntities object\n       TimelineEntities entities \u003d new TimelineEntities();\n       for (TimelineEntity entity : entitiesTobePublished) {\n         entities.addEntity(entity);\n       }\n \n       // created a holder and place it in queue\n-      EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n+      EntitiesHolder entitiesHolder \u003d\n+          new EntitiesHolder(entities, sync, subappwrite);\n       try {\n         timelineEntityQueue.put(entitiesHolder);\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new YarnException(\n             \"Failed while adding entity to the queue for publishing\", e);\n       }\n \n       if (sync) {\n         // In sync call we need to wait till its published and if any error then\n         // throw it back\n         try {\n           entitiesHolder.get();\n         } catch (ExecutionException e) {\n           throw new YarnException(\"Failed while publishing entity\",\n               e.getCause());\n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n           throw new YarnException(\"Interrupted while publishing entity\", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void dispatchEntities(boolean sync,\n        TimelineEntity[] entitiesTobePublished, boolean subappwrite)\n        throws YarnException {\n      if (executor.isShutdown()) {\n        throw new YarnException(\"Timeline client is in the process of stopping,\"\n            + \" not accepting any more TimelineEntities\");\n      }\n\n      // wrap all TimelineEntity into TimelineEntities object\n      TimelineEntities entities \u003d new TimelineEntities();\n      for (TimelineEntity entity : entitiesTobePublished) {\n        entities.addEntity(entity);\n      }\n\n      // created a holder and place it in queue\n      EntitiesHolder entitiesHolder \u003d\n          new EntitiesHolder(entities, sync, subappwrite);\n      try {\n        timelineEntityQueue.put(entitiesHolder);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new YarnException(\n            \"Failed while adding entity to the queue for publishing\", e);\n      }\n\n      if (sync) {\n        // In sync call we need to wait till its published and if any error then\n        // throw it back\n        try {\n          entitiesHolder.get();\n        } catch (ExecutionException e) {\n          throw new YarnException(\"Failed while publishing entity\",\n              e.getCause());\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          throw new YarnException(\"Interrupted while publishing entity\", e);\n        }\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
      "commitDate": "16/02/17 11:41 AM",
      "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
          "commitDate": "16/02/17 11:41 AM",
          "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "16/02/17 5:39 AM",
          "commitNameOld": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,37 @@\n     public void dispatchEntities(boolean sync,\n-        org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity[]\n-            entitiesTobePublished) throws YarnException {\n+        TimelineEntity[] entitiesTobePublished) throws YarnException {\n       if (executor.isShutdown()) {\n         throw new YarnException(\"Timeline client is in the process of stopping,\"\n             + \" not accepting any more TimelineEntities\");\n       }\n \n       // wrap all TimelineEntity into TimelineEntities object\n-      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities\n-          entities \u003d\n-              new org.apache.hadoop.yarn.api.records.timelineservice.\n-                  TimelineEntities();\n-      for (org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity\n-               entity : entitiesTobePublished) {\n+      TimelineEntities entities \u003d new TimelineEntities();\n+      for (TimelineEntity entity : entitiesTobePublished) {\n         entities.addEntity(entity);\n       }\n \n       // created a holder and place it in queue\n       EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n       try {\n         timelineEntityQueue.put(entitiesHolder);\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new YarnException(\n             \"Failed while adding entity to the queue for publishing\", e);\n       }\n \n       if (sync) {\n         // In sync call we need to wait till its published and if any error then\n         // throw it back\n         try {\n           entitiesHolder.get();\n         } catch (ExecutionException e) {\n           throw new YarnException(\"Failed while publishing entity\",\n               e.getCause());\n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n           throw new YarnException(\"Interrupted while publishing entity\", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void dispatchEntities(boolean sync,\n        TimelineEntity[] entitiesTobePublished) throws YarnException {\n      if (executor.isShutdown()) {\n        throw new YarnException(\"Timeline client is in the process of stopping,\"\n            + \" not accepting any more TimelineEntities\");\n      }\n\n      // wrap all TimelineEntity into TimelineEntities object\n      TimelineEntities entities \u003d new TimelineEntities();\n      for (TimelineEntity entity : entitiesTobePublished) {\n        entities.addEntity(entity);\n      }\n\n      // created a holder and place it in queue\n      EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n      try {\n        timelineEntityQueue.put(entitiesHolder);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new YarnException(\n            \"Failed while adding entity to the queue for publishing\", e);\n      }\n\n      if (sync) {\n        // In sync call we need to wait till its published and if any error then\n        // throw it back\n        try {\n          entitiesHolder.get();\n        } catch (ExecutionException e) {\n          throw new YarnException(\"Failed while publishing entity\",\n              e.getCause());\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          throw new YarnException(\"Interrupted while publishing entity\", e);\n        }\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
            "oldMethodName": "dispatchEntities",
            "newMethodName": "dispatchEntities"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
          "commitDate": "16/02/17 11:41 AM",
          "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "16/02/17 5:39 AM",
          "commitNameOld": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,37 @@\n     public void dispatchEntities(boolean sync,\n-        org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity[]\n-            entitiesTobePublished) throws YarnException {\n+        TimelineEntity[] entitiesTobePublished) throws YarnException {\n       if (executor.isShutdown()) {\n         throw new YarnException(\"Timeline client is in the process of stopping,\"\n             + \" not accepting any more TimelineEntities\");\n       }\n \n       // wrap all TimelineEntity into TimelineEntities object\n-      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities\n-          entities \u003d\n-              new org.apache.hadoop.yarn.api.records.timelineservice.\n-                  TimelineEntities();\n-      for (org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity\n-               entity : entitiesTobePublished) {\n+      TimelineEntities entities \u003d new TimelineEntities();\n+      for (TimelineEntity entity : entitiesTobePublished) {\n         entities.addEntity(entity);\n       }\n \n       // created a holder and place it in queue\n       EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n       try {\n         timelineEntityQueue.put(entitiesHolder);\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new YarnException(\n             \"Failed while adding entity to the queue for publishing\", e);\n       }\n \n       if (sync) {\n         // In sync call we need to wait till its published and if any error then\n         // throw it back\n         try {\n           entitiesHolder.get();\n         } catch (ExecutionException e) {\n           throw new YarnException(\"Failed while publishing entity\",\n               e.getCause());\n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n           throw new YarnException(\"Interrupted while publishing entity\", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void dispatchEntities(boolean sync,\n        TimelineEntity[] entitiesTobePublished) throws YarnException {\n      if (executor.isShutdown()) {\n        throw new YarnException(\"Timeline client is in the process of stopping,\"\n            + \" not accepting any more TimelineEntities\");\n      }\n\n      // wrap all TimelineEntity into TimelineEntities object\n      TimelineEntities entities \u003d new TimelineEntities();\n      for (TimelineEntity entity : entitiesTobePublished) {\n        entities.addEntity(entity);\n      }\n\n      // created a holder and place it in queue\n      EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n      try {\n        timelineEntityQueue.put(entitiesHolder);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new YarnException(\n            \"Failed while adding entity to the queue for publishing\", e);\n      }\n\n      if (sync) {\n        // In sync call we need to wait till its published and if any error then\n        // throw it back\n        try {\n          entitiesHolder.get();\n        } catch (ExecutionException e) {\n          throw new YarnException(\"Failed while publishing entity\",\n              e.getCause());\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          throw new YarnException(\"Interrupted while publishing entity\", e);\n        }\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
          "commitDate": "16/02/17 11:41 AM",
          "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "16/02/17 5:39 AM",
          "commitNameOld": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,37 @@\n     public void dispatchEntities(boolean sync,\n-        org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity[]\n-            entitiesTobePublished) throws YarnException {\n+        TimelineEntity[] entitiesTobePublished) throws YarnException {\n       if (executor.isShutdown()) {\n         throw new YarnException(\"Timeline client is in the process of stopping,\"\n             + \" not accepting any more TimelineEntities\");\n       }\n \n       // wrap all TimelineEntity into TimelineEntities object\n-      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities\n-          entities \u003d\n-              new org.apache.hadoop.yarn.api.records.timelineservice.\n-                  TimelineEntities();\n-      for (org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity\n-               entity : entitiesTobePublished) {\n+      TimelineEntities entities \u003d new TimelineEntities();\n+      for (TimelineEntity entity : entitiesTobePublished) {\n         entities.addEntity(entity);\n       }\n \n       // created a holder and place it in queue\n       EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n       try {\n         timelineEntityQueue.put(entitiesHolder);\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new YarnException(\n             \"Failed while adding entity to the queue for publishing\", e);\n       }\n \n       if (sync) {\n         // In sync call we need to wait till its published and if any error then\n         // throw it back\n         try {\n           entitiesHolder.get();\n         } catch (ExecutionException e) {\n           throw new YarnException(\"Failed while publishing entity\",\n               e.getCause());\n         } catch (InterruptedException e) {\n           Thread.currentThread().interrupt();\n           throw new YarnException(\"Interrupted while publishing entity\", e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void dispatchEntities(boolean sync,\n        TimelineEntity[] entitiesTobePublished) throws YarnException {\n      if (executor.isShutdown()) {\n        throw new YarnException(\"Timeline client is in the process of stopping,\"\n            + \" not accepting any more TimelineEntities\");\n      }\n\n      // wrap all TimelineEntity into TimelineEntities object\n      TimelineEntities entities \u003d new TimelineEntities();\n      for (TimelineEntity entity : entitiesTobePublished) {\n        entities.addEntity(entity);\n      }\n\n      // created a holder and place it in queue\n      EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n      try {\n        timelineEntityQueue.put(entitiesHolder);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new YarnException(\n            \"Failed while adding entity to the queue for publishing\", e);\n      }\n\n      if (sync) {\n        // In sync call we need to wait till its published and if any error then\n        // throw it back\n        try {\n          entitiesHolder.get();\n        } catch (ExecutionException e) {\n          throw new YarnException(\"Failed while publishing entity\",\n              e.getCause());\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          throw new YarnException(\"Interrupted while publishing entity\", e);\n        }\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineV2ClientImpl.java",
          "extendedDetails": {
            "oldValue": "[sync-boolean, entitiesTobePublished-org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity[]]",
            "newValue": "[sync-boolean, entitiesTobePublished-TimelineEntity[]]"
          }
        }
      ]
    },
    "0d02ab8729630ad3cfb4300702927333b1d349e3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3367. Replace starting a separate thread for post entity with event loop in TimelineClient (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "0d02ab8729630ad3cfb4300702927333b1d349e3",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,39 @@\n+    public void dispatchEntities(boolean sync,\n+        org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity[] entitiesTobePublished)\n+            throws YarnException {\n+      if (executor.isShutdown()) {\n+        throw new YarnException(\"Timeline client is in the process of stopping,\"\n+            + \" not accepting any more TimelineEntities\");\n+      }\n+\n+      // wrap all TimelineEntity into TimelineEntities object\n+      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities entities \u003d\n+          new org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities();\n+      for (org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity entity : entitiesTobePublished) {\n+        entities.addEntity(entity);\n+      }\n+\n+      // created a holder and place it in queue\n+      EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n+      try {\n+        timelineEntityQueue.put(entitiesHolder);\n+      } catch (InterruptedException e) {\n+        Thread.currentThread().interrupt();\n+        throw new YarnException(\n+            \"Failed while adding entity to the queue for publishing\", e);\n+      }\n+\n+      if (sync) {\n+        // In sync call we need to wait till its published and if any error then\n+        // throw it back\n+        try {\n+          entitiesHolder.get();\n+        } catch (ExecutionException e) {\n+          throw new YarnException(\"Failed while publishing entity\",\n+              e.getCause());\n+        } catch (InterruptedException e) {\n+          Thread.currentThread().interrupt();\n+          throw new YarnException(\"Interrupted while publishing entity\", e);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void dispatchEntities(boolean sync,\n        org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity[] entitiesTobePublished)\n            throws YarnException {\n      if (executor.isShutdown()) {\n        throw new YarnException(\"Timeline client is in the process of stopping,\"\n            + \" not accepting any more TimelineEntities\");\n      }\n\n      // wrap all TimelineEntity into TimelineEntities object\n      org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities entities \u003d\n          new org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntities();\n      for (org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity entity : entitiesTobePublished) {\n        entities.addEntity(entity);\n      }\n\n      // created a holder and place it in queue\n      EntitiesHolder entitiesHolder \u003d new EntitiesHolder(entities, sync);\n      try {\n        timelineEntityQueue.put(entitiesHolder);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new YarnException(\n            \"Failed while adding entity to the queue for publishing\", e);\n      }\n\n      if (sync) {\n        // In sync call we need to wait till its published and if any error then\n        // throw it back\n        try {\n          entitiesHolder.get();\n        } catch (ExecutionException e) {\n          throw new YarnException(\"Failed while publishing entity\",\n              e.getCause());\n        } catch (InterruptedException e) {\n          Thread.currentThread().interrupt();\n          throw new YarnException(\"Interrupted while publishing entity\", e);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java"
    }
  }
}