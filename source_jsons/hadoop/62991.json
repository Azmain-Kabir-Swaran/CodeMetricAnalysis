{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceRequest.java",
  "functionName": "equals",
  "functionId": "equals___obj-Object",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
  "functionStartLine": 579,
  "functionEndLine": 635,
  "numCommitsSeen": 33,
  "timeTaken": 3217,
  "changeHistory": [
    "67bbbe1c0c05fa01b08a8dabe93c146935420450",
    "19c743c1bbcaf3df8f1d63e557143c960a538c42",
    "2d8d183b1992b82c4d8dd3d6b41a1964685d909e",
    "dc26601d8fe27a4223a50601bf7522cc42e8e2f3",
    "b2a654c5ee6524f81c971ea0b70e58ea0a455f1d",
    "180afa2f86f9854c536c3d4ff7476880e41ac48d",
    "f27e484636f9903bb80afac9c9e51a04a7dbce76",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce"
  ],
  "changeHistoryShort": {
    "67bbbe1c0c05fa01b08a8dabe93c146935420450": "Ybodychange",
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": "Ybodychange",
    "2d8d183b1992b82c4d8dd3d6b41a1964685d909e": "Ybodychange",
    "dc26601d8fe27a4223a50601bf7522cc42e8e2f3": "Ybodychange",
    "b2a654c5ee6524f81c971ea0b70e58ea0a455f1d": "Ybodychange",
    "180afa2f86f9854c536c3d4ff7476880e41ac48d": "Ybodychange",
    "f27e484636f9903bb80afac9c9e51a04a7dbce76": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": "Yintroduced"
  },
  "changeHistoryDetails": {
    "67bbbe1c0c05fa01b08a8dabe93c146935420450": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7531. ResourceRequest.equal does not check ExecutionTypeRequest.enforceExecutionType().\n",
      "commitDate": "21/11/17 9:09 AM",
      "commitName": "67bbbe1c0c05fa01b08a8dabe93c146935420450",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "05/10/17 9:58 AM",
      "commitNameOld": "b733348dde18a242e6c9074c512116a8baf1d281",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 47.01,
      "commitsBetweenForRepo": 414,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,57 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj)\n       return true;\n     if (obj \u003d\u003d null)\n       return false;\n     if (getClass() !\u003d obj.getClass())\n       return false;\n     ResourceRequest other \u003d (ResourceRequest) obj;\n     Resource capability \u003d getCapability();\n     if (capability \u003d\u003d null) {\n       if (other.getCapability() !\u003d null)\n         return false;\n     } else if (!capability.equals(other.getCapability()))\n       return false;\n     String hostName \u003d getResourceName();\n     if (hostName \u003d\u003d null) {\n       if (other.getResourceName() !\u003d null)\n         return false;\n     } else if (!hostName.equals(other.getResourceName()))\n       return false;\n     if (getNumContainers() !\u003d other.getNumContainers())\n       return false;\n     Priority priority \u003d getPriority();\n     if (priority \u003d\u003d null) {\n       if (other.getPriority() !\u003d null)\n         return false;\n     } else if (!priority.equals(other.getPriority()))\n       return false;\n     ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n     if (execTypeRequest \u003d\u003d null) {\n       if (other.getExecutionTypeRequest() !\u003d null) {\n         return false;\n       }\n-    } else if (!execTypeRequest.getExecutionType()\n-        .equals(other.getExecutionTypeRequest().getExecutionType())) {\n+    } else if (!execTypeRequest.equals(other.getExecutionTypeRequest())) {\n       return false;\n     }\n \n     if (getAllocationRequestId() !\u003d other.getAllocationRequestId()) {\n       return false;\n     }\n \n     if (getNodeLabelExpression() \u003d\u003d null) {\n       if (other.getNodeLabelExpression() !\u003d null) {\n         return false;\n       }\n     } else {\n       // do normalize on label expression before compare\n       String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       String label2 \u003d\n           other.getNodeLabelExpression() \u003d\u003d null ? null : other\n               .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       if (!label1.equals(label2)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getResourceName();\n    if (hostName \u003d\u003d null) {\n      if (other.getResourceName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getResourceName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n    if (execTypeRequest \u003d\u003d null) {\n      if (other.getExecutionTypeRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!execTypeRequest.equals(other.getExecutionTypeRequest())) {\n      return false;\n    }\n\n    if (getAllocationRequestId() !\u003d other.getAllocationRequestId()) {\n      return false;\n    }\n\n    if (getNodeLabelExpression() \u003d\u003d null) {\n      if (other.getNodeLabelExpression() !\u003d null) {\n        return false;\n      }\n    } else {\n      // do normalize on label expression before compare\n      String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      String label2 \u003d\n          other.getNodeLabelExpression() \u003d\u003d null ? null : other\n              .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      if (!label1.equals(label2)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4889. Changes in AMRMClient for identifying resource-requests explicitly. (Arun Suresh via wangda)\n",
      "commitDate": "26/08/16 5:14 PM",
      "commitName": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/07/16 7:08 PM",
      "commitNameOld": "2d8d183b1992b82c4d8dd3d6b41a1964685d909e",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 30.92,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,58 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj)\n       return true;\n     if (obj \u003d\u003d null)\n       return false;\n     if (getClass() !\u003d obj.getClass())\n       return false;\n     ResourceRequest other \u003d (ResourceRequest) obj;\n     Resource capability \u003d getCapability();\n     if (capability \u003d\u003d null) {\n       if (other.getCapability() !\u003d null)\n         return false;\n     } else if (!capability.equals(other.getCapability()))\n       return false;\n     String hostName \u003d getResourceName();\n     if (hostName \u003d\u003d null) {\n       if (other.getResourceName() !\u003d null)\n         return false;\n     } else if (!hostName.equals(other.getResourceName()))\n       return false;\n     if (getNumContainers() !\u003d other.getNumContainers())\n       return false;\n     Priority priority \u003d getPriority();\n     if (priority \u003d\u003d null) {\n       if (other.getPriority() !\u003d null)\n         return false;\n     } else if (!priority.equals(other.getPriority()))\n       return false;\n     ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n     if (execTypeRequest \u003d\u003d null) {\n       if (other.getExecutionTypeRequest() !\u003d null) {\n         return false;\n       }\n     } else if (!execTypeRequest.getExecutionType()\n         .equals(other.getExecutionTypeRequest().getExecutionType())) {\n       return false;\n     }\n+\n+    if (getAllocationRequestId() !\u003d other.getAllocationRequestId()) {\n+      return false;\n+    }\n+\n     if (getNodeLabelExpression() \u003d\u003d null) {\n       if (other.getNodeLabelExpression() !\u003d null) {\n         return false;\n       }\n     } else {\n       // do normalize on label expression before compare\n       String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       String label2 \u003d\n           other.getNodeLabelExpression() \u003d\u003d null ? null : other\n               .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       if (!label1.equals(label2)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getResourceName();\n    if (hostName \u003d\u003d null) {\n      if (other.getResourceName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getResourceName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n    if (execTypeRequest \u003d\u003d null) {\n      if (other.getExecutionTypeRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!execTypeRequest.getExecutionType()\n        .equals(other.getExecutionTypeRequest().getExecutionType())) {\n      return false;\n    }\n\n    if (getAllocationRequestId() !\u003d other.getAllocationRequestId()) {\n      return false;\n    }\n\n    if (getNodeLabelExpression() \u003d\u003d null) {\n      if (other.getNodeLabelExpression() !\u003d null) {\n        return false;\n      }\n    } else {\n      // do normalize on label expression before compare\n      String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      String label2 \u003d\n          other.getNodeLabelExpression() \u003d\u003d null ? null : other\n              .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      if (!label1.equals(label2)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "2d8d183b1992b82c4d8dd3d6b41a1964685d909e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5351. ResourceRequest should take ExecutionType into account during comparison. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "26/07/16 7:08 PM",
      "commitName": "2d8d183b1992b82c4d8dd3d6b41a1964685d909e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "13/06/16 9:57 PM",
      "commitNameOld": "eec835ec17f77bf713d90dbc2f77dea45f3ee660",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 42.88,
      "commitsBetweenForRepo": 410,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,53 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj)\n       return true;\n     if (obj \u003d\u003d null)\n       return false;\n     if (getClass() !\u003d obj.getClass())\n       return false;\n     ResourceRequest other \u003d (ResourceRequest) obj;\n     Resource capability \u003d getCapability();\n     if (capability \u003d\u003d null) {\n       if (other.getCapability() !\u003d null)\n         return false;\n     } else if (!capability.equals(other.getCapability()))\n       return false;\n     String hostName \u003d getResourceName();\n     if (hostName \u003d\u003d null) {\n       if (other.getResourceName() !\u003d null)\n         return false;\n     } else if (!hostName.equals(other.getResourceName()))\n       return false;\n     if (getNumContainers() !\u003d other.getNumContainers())\n       return false;\n     Priority priority \u003d getPriority();\n     if (priority \u003d\u003d null) {\n       if (other.getPriority() !\u003d null)\n         return false;\n     } else if (!priority.equals(other.getPriority()))\n       return false;\n     ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n     if (execTypeRequest \u003d\u003d null) {\n       if (other.getExecutionTypeRequest() !\u003d null) {\n         return false;\n       }\n-    } else if (!execTypeRequest.equals(other.getExecutionTypeRequest())) {\n+    } else if (!execTypeRequest.getExecutionType()\n+        .equals(other.getExecutionTypeRequest().getExecutionType())) {\n       return false;\n     }\n     if (getNodeLabelExpression() \u003d\u003d null) {\n       if (other.getNodeLabelExpression() !\u003d null) {\n         return false;\n       }\n     } else {\n       // do normalize on label expression before compare\n       String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       String label2 \u003d\n           other.getNodeLabelExpression() \u003d\u003d null ? null : other\n               .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       if (!label1.equals(label2)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getResourceName();\n    if (hostName \u003d\u003d null) {\n      if (other.getResourceName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getResourceName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n    if (execTypeRequest \u003d\u003d null) {\n      if (other.getExecutionTypeRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!execTypeRequest.getExecutionType()\n        .equals(other.getExecutionTypeRequest().getExecutionType())) {\n      return false;\n    }\n    if (getNodeLabelExpression() \u003d\u003d null) {\n      if (other.getNodeLabelExpression() !\u003d null) {\n        return false;\n      }\n    } else {\n      // do normalize on label expression before compare\n      String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      String label2 \u003d\n          other.getNodeLabelExpression() \u003d\u003d null ? null : other\n              .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      if (!label1.equals(label2)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "dc26601d8fe27a4223a50601bf7522cc42e8e2f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5180. Allow ResourceRequest to specify an enforceExecutionType flag. (asuresh)\n",
      "commitDate": "02/06/16 9:01 AM",
      "commitName": "dc26601d8fe27a4223a50601bf7522cc42e8e2f3",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "22/04/16 11:20 PM",
      "commitNameOld": "b2a654c5ee6524f81c971ea0b70e58ea0a455f1d",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 40.4,
      "commitsBetweenForRepo": 258,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,52 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj)\n       return true;\n     if (obj \u003d\u003d null)\n       return false;\n     if (getClass() !\u003d obj.getClass())\n       return false;\n     ResourceRequest other \u003d (ResourceRequest) obj;\n     Resource capability \u003d getCapability();\n     if (capability \u003d\u003d null) {\n       if (other.getCapability() !\u003d null)\n         return false;\n     } else if (!capability.equals(other.getCapability()))\n       return false;\n     String hostName \u003d getResourceName();\n     if (hostName \u003d\u003d null) {\n       if (other.getResourceName() !\u003d null)\n         return false;\n     } else if (!hostName.equals(other.getResourceName()))\n       return false;\n     if (getNumContainers() !\u003d other.getNumContainers())\n       return false;\n     Priority priority \u003d getPriority();\n     if (priority \u003d\u003d null) {\n       if (other.getPriority() !\u003d null)\n         return false;\n     } else if (!priority.equals(other.getPriority()))\n       return false;\n-    ExecutionType executionType \u003d getExecutionType();\n-    if (executionType \u003d\u003d null) {\n-      if (other.getExecutionType() !\u003d null) {\n+    ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n+    if (execTypeRequest \u003d\u003d null) {\n+      if (other.getExecutionTypeRequest() !\u003d null) {\n         return false;\n       }\n-    } else if (executionType !\u003d other.getExecutionType()) {\n+    } else if (!execTypeRequest.equals(other.getExecutionTypeRequest())) {\n       return false;\n     }\n     if (getNodeLabelExpression() \u003d\u003d null) {\n       if (other.getNodeLabelExpression() !\u003d null) {\n         return false;\n       }\n     } else {\n       // do normalize on label expression before compare\n       String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       String label2 \u003d\n           other.getNodeLabelExpression() \u003d\u003d null ? null : other\n               .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       if (!label1.equals(label2)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getResourceName();\n    if (hostName \u003d\u003d null) {\n      if (other.getResourceName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getResourceName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    ExecutionTypeRequest execTypeRequest \u003d getExecutionTypeRequest();\n    if (execTypeRequest \u003d\u003d null) {\n      if (other.getExecutionTypeRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!execTypeRequest.equals(other.getExecutionTypeRequest())) {\n      return false;\n    }\n    if (getNodeLabelExpression() \u003d\u003d null) {\n      if (other.getNodeLabelExpression() !\u003d null) {\n        return false;\n      }\n    } else {\n      // do normalize on label expression before compare\n      String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      String label2 \u003d\n          other.getNodeLabelExpression() \u003d\u003d null ? null : other\n              .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      if (!label1.equals(label2)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "b2a654c5ee6524f81c971ea0b70e58ea0a455f1d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4335. Allow ResourceRequests to specify ExecutionType of a request ask (kkaranasos via asuresh)\n\n(cherry picked from commit 8ffabfdf4fec104cdaa68133385cfe9cf88b95a8)\n",
      "commitDate": "22/04/16 11:20 PM",
      "commitName": "b2a654c5ee6524f81c971ea0b70e58ea0a455f1d",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "16/03/15 7:19 AM",
      "commitNameOld": "3da9a97cfbcc3a1c50aaf85b1a129d4d269cd5fd",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 403.67,
      "commitsBetweenForRepo": 3087,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,52 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj)\n       return true;\n     if (obj \u003d\u003d null)\n       return false;\n     if (getClass() !\u003d obj.getClass())\n       return false;\n     ResourceRequest other \u003d (ResourceRequest) obj;\n     Resource capability \u003d getCapability();\n     if (capability \u003d\u003d null) {\n       if (other.getCapability() !\u003d null)\n         return false;\n     } else if (!capability.equals(other.getCapability()))\n       return false;\n     String hostName \u003d getResourceName();\n     if (hostName \u003d\u003d null) {\n       if (other.getResourceName() !\u003d null)\n         return false;\n     } else if (!hostName.equals(other.getResourceName()))\n       return false;\n     if (getNumContainers() !\u003d other.getNumContainers())\n       return false;\n     Priority priority \u003d getPriority();\n     if (priority \u003d\u003d null) {\n       if (other.getPriority() !\u003d null)\n         return false;\n     } else if (!priority.equals(other.getPriority()))\n       return false;\n+    ExecutionType executionType \u003d getExecutionType();\n+    if (executionType \u003d\u003d null) {\n+      if (other.getExecutionType() !\u003d null) {\n+        return false;\n+      }\n+    } else if (executionType !\u003d other.getExecutionType()) {\n+      return false;\n+    }\n     if (getNodeLabelExpression() \u003d\u003d null) {\n       if (other.getNodeLabelExpression() !\u003d null) {\n         return false;\n       }\n     } else {\n       // do normalize on label expression before compare\n       String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       String label2 \u003d\n           other.getNodeLabelExpression() \u003d\u003d null ? null : other\n               .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n       if (!label1.equals(label2)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getResourceName();\n    if (hostName \u003d\u003d null) {\n      if (other.getResourceName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getResourceName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    ExecutionType executionType \u003d getExecutionType();\n    if (executionType \u003d\u003d null) {\n      if (other.getExecutionType() !\u003d null) {\n        return false;\n      }\n    } else if (executionType !\u003d other.getExecutionType()) {\n      return false;\n    }\n    if (getNodeLabelExpression() \u003d\u003d null) {\n      if (other.getNodeLabelExpression() !\u003d null) {\n        return false;\n      }\n    } else {\n      // do normalize on label expression before compare\n      String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      String label2 \u003d\n          other.getNodeLabelExpression() \u003d\u003d null ? null : other\n              .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      if (!label1.equals(label2)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "180afa2f86f9854c536c3d4ff7476880e41ac48d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2493. Added user-APIs for using node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "09/10/14 11:26 AM",
      "commitName": "180afa2f86f9854c536c3d4ff7476880e41ac48d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/06/14 6:57 AM",
      "commitNameOld": "cb2b34b01c512b4768a7469c49deab0d67c0dd84",
      "commitAuthorOld": "Devarajulu K",
      "daysBetweenCommits": 107.19,
      "commitsBetweenForRepo": 1026,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,44 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj)\n       return true;\n     if (obj \u003d\u003d null)\n       return false;\n     if (getClass() !\u003d obj.getClass())\n       return false;\n     ResourceRequest other \u003d (ResourceRequest) obj;\n     Resource capability \u003d getCapability();\n     if (capability \u003d\u003d null) {\n       if (other.getCapability() !\u003d null)\n         return false;\n     } else if (!capability.equals(other.getCapability()))\n       return false;\n     String hostName \u003d getResourceName();\n     if (hostName \u003d\u003d null) {\n       if (other.getResourceName() !\u003d null)\n         return false;\n     } else if (!hostName.equals(other.getResourceName()))\n       return false;\n     if (getNumContainers() !\u003d other.getNumContainers())\n       return false;\n     Priority priority \u003d getPriority();\n     if (priority \u003d\u003d null) {\n       if (other.getPriority() !\u003d null)\n         return false;\n     } else if (!priority.equals(other.getPriority()))\n       return false;\n+    if (getNodeLabelExpression() \u003d\u003d null) {\n+      if (other.getNodeLabelExpression() !\u003d null) {\n+        return false;\n+      }\n+    } else {\n+      // do normalize on label expression before compare\n+      String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n+      String label2 \u003d\n+          other.getNodeLabelExpression() \u003d\u003d null ? null : other\n+              .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n+      if (!label1.equals(label2)) {\n+        return false;\n+      }\n+    }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getResourceName();\n    if (hostName \u003d\u003d null) {\n      if (other.getResourceName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getResourceName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    if (getNodeLabelExpression() \u003d\u003d null) {\n      if (other.getNodeLabelExpression() !\u003d null) {\n        return false;\n      }\n    } else {\n      // do normalize on label expression before compare\n      String label1 \u003d getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      String label2 \u003d\n          other.getNodeLabelExpression() \u003d\u003d null ? null : other\n              .getNodeLabelExpression().replaceAll(\"[\\\\t ]\", \"\");\n      if (!label1.equals(label2)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "f27e484636f9903bb80afac9c9e51a04a7dbce76": {
      "type": "Ybodychange",
      "commitMessage": "YARN-749. Rename ResourceRequest.(get,set)HostName to ResourceRequest.(get,set)ResourceName. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488806 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/06/13 3:53 PM",
      "commitName": "f27e484636f9903bb80afac9c9e51a04a7dbce76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/05/13 10:26 AM",
      "commitNameOld": "781e82ca9a3d05e0463923cf3c709c99827ba10b",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 2.23,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj)\n       return true;\n     if (obj \u003d\u003d null)\n       return false;\n     if (getClass() !\u003d obj.getClass())\n       return false;\n     ResourceRequest other \u003d (ResourceRequest) obj;\n     Resource capability \u003d getCapability();\n     if (capability \u003d\u003d null) {\n       if (other.getCapability() !\u003d null)\n         return false;\n     } else if (!capability.equals(other.getCapability()))\n       return false;\n-    String hostName \u003d getHostName();\n+    String hostName \u003d getResourceName();\n     if (hostName \u003d\u003d null) {\n-      if (other.getHostName() !\u003d null)\n+      if (other.getResourceName() !\u003d null)\n         return false;\n-    } else if (!hostName.equals(other.getHostName()))\n+    } else if (!hostName.equals(other.getResourceName()))\n       return false;\n     if (getNumContainers() !\u003d other.getNumContainers())\n       return false;\n     Priority priority \u003d getPriority();\n     if (priority \u003d\u003d null) {\n       if (other.getPriority() !\u003d null)\n         return false;\n     } else if (!priority.equals(other.getPriority()))\n       return false;\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getResourceName();\n    if (hostName \u003d\u003d null) {\n      if (other.getResourceName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getResourceName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getHostName();\n    if (hostName \u003d\u003d null) {\n      if (other.getHostName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getHostName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java"
      }
    },
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest \u0026 Priority. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 2:01 PM",
      "commitName": "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,30 @@\n+  public boolean equals(Object obj) {\n+    if (this \u003d\u003d obj)\n+      return true;\n+    if (obj \u003d\u003d null)\n+      return false;\n+    if (getClass() !\u003d obj.getClass())\n+      return false;\n+    ResourceRequest other \u003d (ResourceRequest) obj;\n+    Resource capability \u003d getCapability();\n+    if (capability \u003d\u003d null) {\n+      if (other.getCapability() !\u003d null)\n+        return false;\n+    } else if (!capability.equals(other.getCapability()))\n+      return false;\n+    String hostName \u003d getHostName();\n+    if (hostName \u003d\u003d null) {\n+      if (other.getHostName() !\u003d null)\n+        return false;\n+    } else if (!hostName.equals(other.getHostName()))\n+      return false;\n+    if (getNumContainers() !\u003d other.getNumContainers())\n+      return false;\n+    Priority priority \u003d getPriority();\n+    if (priority \u003d\u003d null) {\n+      if (other.getPriority() !\u003d null)\n+        return false;\n+    } else if (!priority.equals(other.getPriority()))\n+      return false;\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj)\n      return true;\n    if (obj \u003d\u003d null)\n      return false;\n    if (getClass() !\u003d obj.getClass())\n      return false;\n    ResourceRequest other \u003d (ResourceRequest) obj;\n    Resource capability \u003d getCapability();\n    if (capability \u003d\u003d null) {\n      if (other.getCapability() !\u003d null)\n        return false;\n    } else if (!capability.equals(other.getCapability()))\n      return false;\n    String hostName \u003d getHostName();\n    if (hostName \u003d\u003d null) {\n      if (other.getHostName() !\u003d null)\n        return false;\n    } else if (!hostName.equals(other.getHostName()))\n      return false;\n    if (getNumContainers() !\u003d other.getNumContainers())\n      return false;\n    Priority priority \u003d getPriority();\n    if (priority \u003d\u003d null) {\n      if (other.getPriority() !\u003d null)\n        return false;\n    } else if (!priority.equals(other.getPriority()))\n      return false;\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java"
    }
  }
}