{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirListingMetadata.java",
  "functionName": "put",
  "functionId": "put___childPathMetadata-PathMetadata",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DirListingMetadata.java",
  "functionStartLine": 230,
  "functionEndLine": 238,
  "numCommitsSeen": 21,
  "timeTaken": 3578,
  "changeHistory": [
    "7b219778e05a50e33cca75d727e62783322b7f80",
    "a36274d69947648dbe82721220cc5240ec5d396d",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "7b219778e05a50e33cca75d727e62783322b7f80": "Ymultichange(Yparameterchange,Ybodychange)",
    "a36274d69947648dbe82721220cc5240ec5d396d": "Yparameterchange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b219778e05a50e33cca75d727e62783322b7f80": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16433. S3Guard: Filter expired entries and tombstones when listing with MetadataStore.listChildren().\n\nContributed by Gabor Bota.\n\nThis pulls the tracking of the lastUpdated timestamp of metadata entries up from the DDB metastore into all s3guard stores, and then uses this to filter out expired tombstones from listings.\n\nChange-Id: I80f121236b49c75a024116f65a3ef29d3580b462\n",
      "commitDate": "24/07/19 10:11 AM",
      "commitName": "7b219778e05a50e33cca75d727e62783322b7f80",
      "commitAuthor": "Gabor Bota",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16433. S3Guard: Filter expired entries and tombstones when listing with MetadataStore.listChildren().\n\nContributed by Gabor Bota.\n\nThis pulls the tracking of the lastUpdated timestamp of metadata entries up from the DDB metastore into all s3guard stores, and then uses this to filter out expired tombstones from listings.\n\nChange-Id: I80f121236b49c75a024116f65a3ef29d3580b462\n",
          "commitDate": "24/07/19 10:11 AM",
          "commitName": "7b219778e05a50e33cca75d727e62783322b7f80",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "19/05/19 2:29 PM",
          "commitNameOld": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 65.82,
          "commitsBetweenForRepo": 524,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public boolean put(S3AFileStatus childFileStatus) {\n-    Preconditions.checkNotNull(childFileStatus,\n-        \"childFileStatus must be non-null\");\n-    Path childPath \u003d childStatusToPathKey(childFileStatus);\n-    PathMetadata newValue \u003d new PathMetadata(childFileStatus);\n-    PathMetadata oldValue \u003d listMap.put(childPath, newValue);\n+  public boolean put(PathMetadata childPathMetadata) {\n+    Preconditions.checkNotNull(childPathMetadata,\n+        \"childPathMetadata must be non-null\");\n+    final S3AFileStatus fileStatus \u003d childPathMetadata.getFileStatus();\n+    Path childPath \u003d childStatusToPathKey(fileStatus);\n+    PathMetadata newValue \u003d childPathMetadata;\n+    PathMetadata oldValue \u003d listMap.put(childPath, childPathMetadata);\n     return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean put(PathMetadata childPathMetadata) {\n    Preconditions.checkNotNull(childPathMetadata,\n        \"childPathMetadata must be non-null\");\n    final S3AFileStatus fileStatus \u003d childPathMetadata.getFileStatus();\n    Path childPath \u003d childStatusToPathKey(fileStatus);\n    PathMetadata newValue \u003d childPathMetadata;\n    PathMetadata oldValue \u003d listMap.put(childPath, childPathMetadata);\n    return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DirListingMetadata.java",
          "extendedDetails": {
            "oldValue": "[childFileStatus-S3AFileStatus]",
            "newValue": "[childPathMetadata-PathMetadata]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16433. S3Guard: Filter expired entries and tombstones when listing with MetadataStore.listChildren().\n\nContributed by Gabor Bota.\n\nThis pulls the tracking of the lastUpdated timestamp of metadata entries up from the DDB metastore into all s3guard stores, and then uses this to filter out expired tombstones from listings.\n\nChange-Id: I80f121236b49c75a024116f65a3ef29d3580b462\n",
          "commitDate": "24/07/19 10:11 AM",
          "commitName": "7b219778e05a50e33cca75d727e62783322b7f80",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "19/05/19 2:29 PM",
          "commitNameOld": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 65.82,
          "commitsBetweenForRepo": 524,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  public boolean put(S3AFileStatus childFileStatus) {\n-    Preconditions.checkNotNull(childFileStatus,\n-        \"childFileStatus must be non-null\");\n-    Path childPath \u003d childStatusToPathKey(childFileStatus);\n-    PathMetadata newValue \u003d new PathMetadata(childFileStatus);\n-    PathMetadata oldValue \u003d listMap.put(childPath, newValue);\n+  public boolean put(PathMetadata childPathMetadata) {\n+    Preconditions.checkNotNull(childPathMetadata,\n+        \"childPathMetadata must be non-null\");\n+    final S3AFileStatus fileStatus \u003d childPathMetadata.getFileStatus();\n+    Path childPath \u003d childStatusToPathKey(fileStatus);\n+    PathMetadata newValue \u003d childPathMetadata;\n+    PathMetadata oldValue \u003d listMap.put(childPath, childPathMetadata);\n     return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean put(PathMetadata childPathMetadata) {\n    Preconditions.checkNotNull(childPathMetadata,\n        \"childPathMetadata must be non-null\");\n    final S3AFileStatus fileStatus \u003d childPathMetadata.getFileStatus();\n    Path childPath \u003d childStatusToPathKey(fileStatus);\n    PathMetadata newValue \u003d childPathMetadata;\n    PathMetadata oldValue \u003d listMap.put(childPath, childPathMetadata);\n    return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DirListingMetadata.java",
          "extendedDetails": {}
        }
      ]
    },
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Yparameterchange",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "commitDateOld": "11/02/19 1:07 PM",
      "commitNameOld": "6c999fe4b0181720c8e55be8388bd592196c8c87",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 97.02,
      "commitsBetweenForRepo": 683,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  public boolean put(FileStatus childFileStatus) {\n+  public boolean put(S3AFileStatus childFileStatus) {\n     Preconditions.checkNotNull(childFileStatus,\n         \"childFileStatus must be non-null\");\n     Path childPath \u003d childStatusToPathKey(childFileStatus);\n     PathMetadata newValue \u003d new PathMetadata(childFileStatus);\n     PathMetadata oldValue \u003d listMap.put(childPath, newValue);\n     return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean put(S3AFileStatus childFileStatus) {\n    Preconditions.checkNotNull(childFileStatus,\n        \"childFileStatus must be non-null\");\n    Path childPath \u003d childStatusToPathKey(childFileStatus);\n    PathMetadata newValue \u003d new PathMetadata(childFileStatus);\n    PathMetadata oldValue \u003d listMap.put(childPath, newValue);\n    return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DirListingMetadata.java",
      "extendedDetails": {
        "oldValue": "[childFileStatus-FileStatus]",
        "newValue": "[childFileStatus-S3AFileStatus]"
      }
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,8 @@\n+  public boolean put(FileStatus childFileStatus) {\n+    Preconditions.checkNotNull(childFileStatus,\n+        \"childFileStatus must be non-null\");\n+    Path childPath \u003d childStatusToPathKey(childFileStatus);\n+    PathMetadata newValue \u003d new PathMetadata(childFileStatus);\n+    PathMetadata oldValue \u003d listMap.put(childPath, newValue);\n+    return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean put(FileStatus childFileStatus) {\n    Preconditions.checkNotNull(childFileStatus,\n        \"childFileStatus must be non-null\");\n    Path childPath \u003d childStatusToPathKey(childFileStatus);\n    PathMetadata newValue \u003d new PathMetadata(childFileStatus);\n    PathMetadata oldValue \u003d listMap.put(childPath, newValue);\n    return oldValue \u003d\u003d null || !oldValue.equals(newValue);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DirListingMetadata.java"
    }
  }
}