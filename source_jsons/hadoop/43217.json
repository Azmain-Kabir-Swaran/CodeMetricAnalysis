{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "createAMProxy",
  "functionId": "createAMProxy___serviceName-String__appReport-ApplicationReport",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 1721,
  "functionEndLine": 1746,
  "numCommitsSeen": 66,
  "timeTaken": 5411,
  "changeHistory": [
    "d30d57828fddaa8667de49af879cde999907c7f6",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64"
  ],
  "changeHistoryShort": {
    "d30d57828fddaa8667de49af879cde999907c7f6": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d30d57828fddaa8667de49af879cde999907c7f6": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
      "commitDate": "04/12/17 12:11 PM",
      "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
          "commitDate": "04/12/17 12:11 PM",
          "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "16/11/17 10:53 AM",
          "commitNameOld": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 18.05,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,26 @@\n-  protected ClientAMProtocol createAMProxy(String host, int port)\n-      throws IOException {\n+  protected ClientAMProtocol createAMProxy(String serviceName,\n+      ApplicationReport appReport) throws IOException, YarnException {\n+\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      if (!cachedAppInfo.containsKey(serviceName)) {\n+        Service persistedService  \u003d ServiceApiUtil.loadService(fs, serviceName);\n+        cachedAppInfo.put(serviceName, new AppInfo(appReport.getApplicationId(),\n+            persistedService.getKerberosPrincipal().getPrincipalName()));\n+      }\n+      String principalName \u003d cachedAppInfo.get(serviceName).principalName;\n+      // Inject the principal into hadoop conf, because Hadoop\n+      // SaslRpcClient#getServerPrincipal requires a config for the\n+      // principal\n+      if (!StringUtils.isEmpty(principalName)) {\n+        getConfig().set(PRINCIPAL, principalName);\n+      } else {\n+        throw new YarnException(\"No principal specified in the persisted \" +\n+            \"service definition, fail to connect to AM.\");\n+      }\n+    }\n     InetSocketAddress address \u003d\n-        NetUtils.createSocketAddrForHost(host, port);\n+        NetUtils.createSocketAddrForHost(appReport.getHost(), appReport\n+            .getRpcPort());\n     return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String serviceName,\n      ApplicationReport appReport) throws IOException, YarnException {\n\n    if (UserGroupInformation.isSecurityEnabled()) {\n      if (!cachedAppInfo.containsKey(serviceName)) {\n        Service persistedService  \u003d ServiceApiUtil.loadService(fs, serviceName);\n        cachedAppInfo.put(serviceName, new AppInfo(appReport.getApplicationId(),\n            persistedService.getKerberosPrincipal().getPrincipalName()));\n      }\n      String principalName \u003d cachedAppInfo.get(serviceName).principalName;\n      // Inject the principal into hadoop conf, because Hadoop\n      // SaslRpcClient#getServerPrincipal requires a config for the\n      // principal\n      if (!StringUtils.isEmpty(principalName)) {\n        getConfig().set(PRINCIPAL, principalName);\n      } else {\n        throw new YarnException(\"No principal specified in the persisted \" +\n            \"service definition, fail to connect to AM.\");\n      }\n    }\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(appReport.getHost(), appReport\n            .getRpcPort());\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[host-String, port-int]",
            "newValue": "[serviceName-String, appReport-ApplicationReport]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
          "commitDate": "04/12/17 12:11 PM",
          "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "16/11/17 10:53 AM",
          "commitNameOld": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 18.05,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,26 @@\n-  protected ClientAMProtocol createAMProxy(String host, int port)\n-      throws IOException {\n+  protected ClientAMProtocol createAMProxy(String serviceName,\n+      ApplicationReport appReport) throws IOException, YarnException {\n+\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      if (!cachedAppInfo.containsKey(serviceName)) {\n+        Service persistedService  \u003d ServiceApiUtil.loadService(fs, serviceName);\n+        cachedAppInfo.put(serviceName, new AppInfo(appReport.getApplicationId(),\n+            persistedService.getKerberosPrincipal().getPrincipalName()));\n+      }\n+      String principalName \u003d cachedAppInfo.get(serviceName).principalName;\n+      // Inject the principal into hadoop conf, because Hadoop\n+      // SaslRpcClient#getServerPrincipal requires a config for the\n+      // principal\n+      if (!StringUtils.isEmpty(principalName)) {\n+        getConfig().set(PRINCIPAL, principalName);\n+      } else {\n+        throw new YarnException(\"No principal specified in the persisted \" +\n+            \"service definition, fail to connect to AM.\");\n+      }\n+    }\n     InetSocketAddress address \u003d\n-        NetUtils.createSocketAddrForHost(host, port);\n+        NetUtils.createSocketAddrForHost(appReport.getHost(), appReport\n+            .getRpcPort());\n     return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String serviceName,\n      ApplicationReport appReport) throws IOException, YarnException {\n\n    if (UserGroupInformation.isSecurityEnabled()) {\n      if (!cachedAppInfo.containsKey(serviceName)) {\n        Service persistedService  \u003d ServiceApiUtil.loadService(fs, serviceName);\n        cachedAppInfo.put(serviceName, new AppInfo(appReport.getApplicationId(),\n            persistedService.getKerberosPrincipal().getPrincipalName()));\n      }\n      String principalName \u003d cachedAppInfo.get(serviceName).principalName;\n      // Inject the principal into hadoop conf, because Hadoop\n      // SaslRpcClient#getServerPrincipal requires a config for the\n      // principal\n      if (!StringUtils.isEmpty(principalName)) {\n        getConfig().set(PRINCIPAL, principalName);\n      } else {\n        throw new YarnException(\"No principal specified in the persisted \" +\n            \"service definition, fail to connect to AM.\");\n      }\n    }\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(appReport.getHost(), appReport\n            .getRpcPort());\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[IOException, YarnException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
          "commitDate": "04/12/17 12:11 PM",
          "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "16/11/17 10:53 AM",
          "commitNameOld": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 18.05,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,26 @@\n-  protected ClientAMProtocol createAMProxy(String host, int port)\n-      throws IOException {\n+  protected ClientAMProtocol createAMProxy(String serviceName,\n+      ApplicationReport appReport) throws IOException, YarnException {\n+\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      if (!cachedAppInfo.containsKey(serviceName)) {\n+        Service persistedService  \u003d ServiceApiUtil.loadService(fs, serviceName);\n+        cachedAppInfo.put(serviceName, new AppInfo(appReport.getApplicationId(),\n+            persistedService.getKerberosPrincipal().getPrincipalName()));\n+      }\n+      String principalName \u003d cachedAppInfo.get(serviceName).principalName;\n+      // Inject the principal into hadoop conf, because Hadoop\n+      // SaslRpcClient#getServerPrincipal requires a config for the\n+      // principal\n+      if (!StringUtils.isEmpty(principalName)) {\n+        getConfig().set(PRINCIPAL, principalName);\n+      } else {\n+        throw new YarnException(\"No principal specified in the persisted \" +\n+            \"service definition, fail to connect to AM.\");\n+      }\n+    }\n     InetSocketAddress address \u003d\n-        NetUtils.createSocketAddrForHost(host, port);\n+        NetUtils.createSocketAddrForHost(appReport.getHost(), appReport\n+            .getRpcPort());\n     return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String serviceName,\n      ApplicationReport appReport) throws IOException, YarnException {\n\n    if (UserGroupInformation.isSecurityEnabled()) {\n      if (!cachedAppInfo.containsKey(serviceName)) {\n        Service persistedService  \u003d ServiceApiUtil.loadService(fs, serviceName);\n        cachedAppInfo.put(serviceName, new AppInfo(appReport.getApplicationId(),\n            persistedService.getKerberosPrincipal().getPrincipalName()));\n      }\n      String principalName \u003d cachedAppInfo.get(serviceName).principalName;\n      // Inject the principal into hadoop conf, because Hadoop\n      // SaslRpcClient#getServerPrincipal requires a config for the\n      // principal\n      if (!StringUtils.isEmpty(principalName)) {\n        getConfig().set(PRINCIPAL, principalName);\n      } else {\n        throw new YarnException(\"No principal specified in the persisted \" +\n            \"service definition, fail to connect to AM.\");\n      }\n    }\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(appReport.getHost(), appReport\n            .getRpcPort());\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,7 @@\n-  private ClientAMProtocol insertAMProxy(String appName, String host, int port)\n+  protected ClientAMProtocol createAMProxy(String host, int port)\n       throws IOException {\n     InetSocketAddress address \u003d\n         NetUtils.createSocketAddrForHost(host, port);\n-    ClientAMProtocol amProxy \u003d\n-        ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n+    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n-    cachedAMProxies.put(appName, amProxy);\n-    return amProxy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String host, int port)\n      throws IOException {\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(host, port);\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,7 @@\n-  private ClientAMProtocol insertAMProxy(String appName, String host, int port)\n+  protected ClientAMProtocol createAMProxy(String host, int port)\n       throws IOException {\n     InetSocketAddress address \u003d\n         NetUtils.createSocketAddrForHost(host, port);\n-    ClientAMProtocol amProxy \u003d\n-        ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n+    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n-    cachedAMProxies.put(appName, amProxy);\n-    return amProxy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String host, int port)\n      throws IOException {\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(host, port);\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,7 @@\n-  private ClientAMProtocol insertAMProxy(String appName, String host, int port)\n+  protected ClientAMProtocol createAMProxy(String host, int port)\n       throws IOException {\n     InetSocketAddress address \u003d\n         NetUtils.createSocketAddrForHost(host, port);\n-    ClientAMProtocol amProxy \u003d\n-        ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n+    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n-    cachedAMProxies.put(appName, amProxy);\n-    return amProxy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String host, int port)\n      throws IOException {\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(host, port);\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,7 @@\n-  private ClientAMProtocol insertAMProxy(String appName, String host, int port)\n+  protected ClientAMProtocol createAMProxy(String host, int port)\n       throws IOException {\n     InetSocketAddress address \u003d\n         NetUtils.createSocketAddrForHost(host, port);\n-    ClientAMProtocol amProxy \u003d\n-        ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n+    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n-    cachedAMProxies.put(appName, amProxy);\n-    return amProxy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String host, int port)\n      throws IOException {\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(host, port);\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "insertAMProxy",
            "newValue": "createAMProxy"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,7 @@\n-  private ClientAMProtocol insertAMProxy(String appName, String host, int port)\n+  protected ClientAMProtocol createAMProxy(String host, int port)\n       throws IOException {\n     InetSocketAddress address \u003d\n         NetUtils.createSocketAddrForHost(host, port);\n-    ClientAMProtocol amProxy \u003d\n-        ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n+    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n         UserGroupInformation.getCurrentUser(), rpc, address);\n-    cachedAMProxies.put(appName, amProxy);\n-    return amProxy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ClientAMProtocol createAMProxy(String host, int port)\n      throws IOException {\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(host, port);\n    return ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[appName-String, host-String, port-int]",
            "newValue": "[host-String, port-int]"
          }
        }
      ]
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,10 @@\n+  private ClientAMProtocol insertAMProxy(String appName, String host, int port)\n+      throws IOException {\n+    InetSocketAddress address \u003d\n+        NetUtils.createSocketAddrForHost(host, port);\n+    ClientAMProtocol amProxy \u003d\n+        ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n+        UserGroupInformation.getCurrentUser(), rpc, address);\n+    cachedAMProxies.put(appName, amProxy);\n+    return amProxy;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ClientAMProtocol insertAMProxy(String appName, String host, int port)\n      throws IOException {\n    InetSocketAddress address \u003d\n        NetUtils.createSocketAddrForHost(host, port);\n    ClientAMProtocol amProxy \u003d\n        ClientAMProxy.createProxy(getConfig(), ClientAMProtocol.class,\n        UserGroupInformation.getCurrentUser(), rpc, address);\n    cachedAMProxies.put(appName, amProxy);\n    return amProxy;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}