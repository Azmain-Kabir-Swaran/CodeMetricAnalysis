{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TopAuditLogger.java",
  "functionName": "logAuditEvent",
  "functionId": "logAuditEvent___succeeded-boolean__userName-String__addr-InetAddress__cmd-String__src-String__dst-String__status-FileStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/TopAuditLogger.java",
  "functionStartLine": 68,
  "functionEndLine": 95,
  "numCommitsSeen": 3,
  "timeTaken": 1511,
  "changeHistory": [
    "fa7b9248e415c04bb555772f44fadaf8d9f34974",
    "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb"
  ],
  "changeHistoryShort": {
    "fa7b9248e415c04bb555772f44fadaf8d9f34974": "Ybodychange",
    "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fa7b9248e415c04bb555772f44fadaf8d9f34974": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7426. Change nntop JMX format to be a JSON blob.\n",
      "commitDate": "12/12/14 5:04 PM",
      "commitName": "fa7b9248e415c04bb555772f44fadaf8d9f34974",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "17/11/14 5:33 PM",
      "commitNameOld": "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 24.98,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   public void logAuditEvent(boolean succeeded, String userName,\n       InetAddress addr, String cmd, String src, String dst, FileStatus status) {\n-\n-    TopMetrics instance \u003d TopMetrics.getInstance();\n-    if (instance !\u003d null) {\n-      instance.report(succeeded, userName, addr, cmd, src, dst, status);\n-    } else {\n-      LOG.error(\"TopMetrics is not initialized yet!\");\n+    try {\n+      topMetrics.report(succeeded, userName, addr, cmd, src, dst, status);\n+    } catch (Throwable t) {\n+      LOG.error(\"An error occurred while reflecting the event in top service, \"\n+          + \"event: (cmd\u003d{},userName\u003d{})\", cmd, userName);\n     }\n \n     if (LOG.isDebugEnabled()) {\n       final StringBuilder sb \u003d new StringBuilder();\n       sb.append(\"allowed\u003d\").append(succeeded).append(\"\\t\");\n       sb.append(\"ugi\u003d\").append(userName).append(\"\\t\");\n       sb.append(\"ip\u003d\").append(addr).append(\"\\t\");\n       sb.append(\"cmd\u003d\").append(cmd).append(\"\\t\");\n       sb.append(\"src\u003d\").append(src).append(\"\\t\");\n       sb.append(\"dst\u003d\").append(dst).append(\"\\t\");\n       if (null \u003d\u003d status) {\n         sb.append(\"perm\u003dnull\");\n       } else {\n         sb.append(\"perm\u003d\");\n         sb.append(status.getOwner()).append(\":\");\n         sb.append(status.getGroup()).append(\":\");\n         sb.append(status.getPermission());\n       }\n       LOG.debug(\"------------------- logged event for top service: \" + sb);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logAuditEvent(boolean succeeded, String userName,\n      InetAddress addr, String cmd, String src, String dst, FileStatus status) {\n    try {\n      topMetrics.report(succeeded, userName, addr, cmd, src, dst, status);\n    } catch (Throwable t) {\n      LOG.error(\"An error occurred while reflecting the event in top service, \"\n          + \"event: (cmd\u003d{},userName\u003d{})\", cmd, userName);\n    }\n\n    if (LOG.isDebugEnabled()) {\n      final StringBuilder sb \u003d new StringBuilder();\n      sb.append(\"allowed\u003d\").append(succeeded).append(\"\\t\");\n      sb.append(\"ugi\u003d\").append(userName).append(\"\\t\");\n      sb.append(\"ip\u003d\").append(addr).append(\"\\t\");\n      sb.append(\"cmd\u003d\").append(cmd).append(\"\\t\");\n      sb.append(\"src\u003d\").append(src).append(\"\\t\");\n      sb.append(\"dst\u003d\").append(dst).append(\"\\t\");\n      if (null \u003d\u003d status) {\n        sb.append(\"perm\u003dnull\");\n      } else {\n        sb.append(\"perm\u003d\");\n        sb.append(status.getOwner()).append(\":\");\n        sb.append(status.getGroup()).append(\":\");\n        sb.append(status.getPermission());\n      }\n      LOG.debug(\"------------------- logged event for top service: \" + sb);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/TopAuditLogger.java",
      "extendedDetails": {}
    },
    "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6982. nntop: topÂ­-like tool for name node users. (Maysam Yabandeh via wang)\n",
      "commitDate": "17/11/14 5:33 PM",
      "commitName": "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,29 @@\n+  public void logAuditEvent(boolean succeeded, String userName,\n+      InetAddress addr, String cmd, String src, String dst, FileStatus status) {\n+\n+    TopMetrics instance \u003d TopMetrics.getInstance();\n+    if (instance !\u003d null) {\n+      instance.report(succeeded, userName, addr, cmd, src, dst, status);\n+    } else {\n+      LOG.error(\"TopMetrics is not initialized yet!\");\n+    }\n+\n+    if (LOG.isDebugEnabled()) {\n+      final StringBuilder sb \u003d new StringBuilder();\n+      sb.append(\"allowed\u003d\").append(succeeded).append(\"\\t\");\n+      sb.append(\"ugi\u003d\").append(userName).append(\"\\t\");\n+      sb.append(\"ip\u003d\").append(addr).append(\"\\t\");\n+      sb.append(\"cmd\u003d\").append(cmd).append(\"\\t\");\n+      sb.append(\"src\u003d\").append(src).append(\"\\t\");\n+      sb.append(\"dst\u003d\").append(dst).append(\"\\t\");\n+      if (null \u003d\u003d status) {\n+        sb.append(\"perm\u003dnull\");\n+      } else {\n+        sb.append(\"perm\u003d\");\n+        sb.append(status.getOwner()).append(\":\");\n+        sb.append(status.getGroup()).append(\":\");\n+        sb.append(status.getPermission());\n+      }\n+      LOG.debug(\"------------------- logged event for top service: \" + sb);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void logAuditEvent(boolean succeeded, String userName,\n      InetAddress addr, String cmd, String src, String dst, FileStatus status) {\n\n    TopMetrics instance \u003d TopMetrics.getInstance();\n    if (instance !\u003d null) {\n      instance.report(succeeded, userName, addr, cmd, src, dst, status);\n    } else {\n      LOG.error(\"TopMetrics is not initialized yet!\");\n    }\n\n    if (LOG.isDebugEnabled()) {\n      final StringBuilder sb \u003d new StringBuilder();\n      sb.append(\"allowed\u003d\").append(succeeded).append(\"\\t\");\n      sb.append(\"ugi\u003d\").append(userName).append(\"\\t\");\n      sb.append(\"ip\u003d\").append(addr).append(\"\\t\");\n      sb.append(\"cmd\u003d\").append(cmd).append(\"\\t\");\n      sb.append(\"src\u003d\").append(src).append(\"\\t\");\n      sb.append(\"dst\u003d\").append(dst).append(\"\\t\");\n      if (null \u003d\u003d status) {\n        sb.append(\"perm\u003dnull\");\n      } else {\n        sb.append(\"perm\u003d\");\n        sb.append(status.getOwner()).append(\":\");\n        sb.append(status.getGroup()).append(\":\");\n        sb.append(status.getPermission());\n      }\n      LOG.debug(\"------------------- logged event for top service: \" + sb);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/top/TopAuditLogger.java"
    }
  }
}