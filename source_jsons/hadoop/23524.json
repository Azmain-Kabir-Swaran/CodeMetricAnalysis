{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryFileManager.java",
  "functionName": "makeDoneSubdir",
  "functionId": "makeDoneSubdir___path-Path",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
  "functionStartLine": 1125,
  "functionEndLine": 1146,
  "numCommitsSeen": 57,
  "timeTaken": 8267,
  "changeHistory": [
    "7d04a96027ad75877b41b7cd8f67455dd13159d7",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": "Ybodychange",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/04/12 6:59 PM",
      "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "10/04/12 11:11 AM",
      "commitNameOld": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 7.32,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,22 @@\n   private void makeDoneSubdir(Path path) throws IOException {\n-    boolean existsInExistingCache \u003d false;\n-    synchronized (existingDoneSubdirs) {\n-      if (existingDoneSubdirs.contains(path))\n-        existsInExistingCache \u003d true;\n-    }\n     try {\n       doneDirFc.getFileStatus(path);\n-      if (!existsInExistingCache) {\n-        existingDoneSubdirs.add(path);\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"JobHistory.maybeMakeSubdirectory -- We believed \" + path\n-              + \" already existed, but it didn\u0027t.\");\n-        }\n-      }\n+      existingDoneSubdirs.add(path);\n     } catch (FileNotFoundException fnfE) {\n       try {\n         FsPermission fsp \u003d new FsPermission(\n             JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n         doneDirFc.mkdir(path, fsp, true);\n         FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n         LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n             + \", Expected: \" + fsp.toShort());\n         if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n           LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n               + \", \" + fsp);\n           doneDirFc.setPermission(path, fsp);\n         }\n-        synchronized (existingDoneSubdirs) {\n-          existingDoneSubdirs.add(path);\n-        }\n-      } catch (FileAlreadyExistsException faeE) { \n-        // Nothing to do.\n+        existingDoneSubdirs.add(path);\n+      } catch (FileAlreadyExistsException faeE) { // Nothing to do.\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void makeDoneSubdir(Path path) throws IOException {\n    try {\n      doneDirFc.getFileStatus(path);\n      existingDoneSubdirs.add(path);\n    } catch (FileNotFoundException fnfE) {\n      try {\n        FsPermission fsp \u003d new FsPermission(\n            JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n        doneDirFc.mkdir(path, fsp, true);\n        FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n        LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n            + \", Expected: \" + fsp.toShort());\n        if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n          LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n              + \", \" + fsp);\n          doneDirFc.setPermission(path, fsp);\n        }\n        existingDoneSubdirs.add(path);\n      } catch (FileAlreadyExistsException faeE) { // Nothing to do.\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
      "extendedDetails": {}
    },
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
      "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 11:11 AM",
      "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/04/12 11:11 AM",
          "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "10/04/12 9:13 AM",
          "commitNameOld": "000859a534f4cc6a57524a676805d8af6ad199de",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,36 @@\n-  private void maybeMakeSubdirectory(Path path) throws IOException {\n+  private void makeDoneSubdir(Path path) throws IOException {\n     boolean existsInExistingCache \u003d false;\n-    synchronized(existingDoneSubdirs) {\n-      if (existingDoneSubdirs.contains(path)) existsInExistingCache \u003d true;\n+    synchronized (existingDoneSubdirs) {\n+      if (existingDoneSubdirs.contains(path))\n+        existsInExistingCache \u003d true;\n     }\n     try {\n       doneDirFc.getFileStatus(path);\n       if (!existsInExistingCache) {\n         existingDoneSubdirs.add(path);\n-        if (debugMode) {\n-          LOG.info(\"JobHistory.maybeMakeSubdirectory -- We believed \"\n-                             + path + \" already existed, but it didn\u0027t.\");\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"JobHistory.maybeMakeSubdirectory -- We believed \" + path\n+              + \" already existed, but it didn\u0027t.\");\n         }\n       }\n     } catch (FileNotFoundException fnfE) {\n       try {\n-        FsPermission fsp \u003d \n-          new FsPermission(JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n+        FsPermission fsp \u003d new FsPermission(\n+            JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n         doneDirFc.mkdir(path, fsp, true);\n         FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n         LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n             + \", Expected: \" + fsp.toShort());\n         if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n           LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n               + \", \" + fsp);\n           doneDirFc.setPermission(path, fsp);\n         }\n-        synchronized(existingDoneSubdirs) {\n+        synchronized (existingDoneSubdirs) {\n           existingDoneSubdirs.add(path);\n         }\n-      } catch (FileAlreadyExistsException faeE) { //Nothing to do.\n+      } catch (FileAlreadyExistsException faeE) { \n+        // Nothing to do.\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void makeDoneSubdir(Path path) throws IOException {\n    boolean existsInExistingCache \u003d false;\n    synchronized (existingDoneSubdirs) {\n      if (existingDoneSubdirs.contains(path))\n        existsInExistingCache \u003d true;\n    }\n    try {\n      doneDirFc.getFileStatus(path);\n      if (!existsInExistingCache) {\n        existingDoneSubdirs.add(path);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"JobHistory.maybeMakeSubdirectory -- We believed \" + path\n              + \" already existed, but it didn\u0027t.\");\n        }\n      }\n    } catch (FileNotFoundException fnfE) {\n      try {\n        FsPermission fsp \u003d new FsPermission(\n            JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n        doneDirFc.mkdir(path, fsp, true);\n        FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n        LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n            + \", Expected: \" + fsp.toShort());\n        if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n          LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n              + \", \" + fsp);\n          doneDirFc.setPermission(path, fsp);\n        }\n        synchronized (existingDoneSubdirs) {\n          existingDoneSubdirs.add(path);\n        }\n      } catch (FileAlreadyExistsException faeE) { \n        // Nothing to do.\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java",
            "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
            "oldMethodName": "maybeMakeSubdirectory",
            "newMethodName": "makeDoneSubdir"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/04/12 11:11 AM",
          "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "10/04/12 9:13 AM",
          "commitNameOld": "000859a534f4cc6a57524a676805d8af6ad199de",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,36 @@\n-  private void maybeMakeSubdirectory(Path path) throws IOException {\n+  private void makeDoneSubdir(Path path) throws IOException {\n     boolean existsInExistingCache \u003d false;\n-    synchronized(existingDoneSubdirs) {\n-      if (existingDoneSubdirs.contains(path)) existsInExistingCache \u003d true;\n+    synchronized (existingDoneSubdirs) {\n+      if (existingDoneSubdirs.contains(path))\n+        existsInExistingCache \u003d true;\n     }\n     try {\n       doneDirFc.getFileStatus(path);\n       if (!existsInExistingCache) {\n         existingDoneSubdirs.add(path);\n-        if (debugMode) {\n-          LOG.info(\"JobHistory.maybeMakeSubdirectory -- We believed \"\n-                             + path + \" already existed, but it didn\u0027t.\");\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"JobHistory.maybeMakeSubdirectory -- We believed \" + path\n+              + \" already existed, but it didn\u0027t.\");\n         }\n       }\n     } catch (FileNotFoundException fnfE) {\n       try {\n-        FsPermission fsp \u003d \n-          new FsPermission(JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n+        FsPermission fsp \u003d new FsPermission(\n+            JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n         doneDirFc.mkdir(path, fsp, true);\n         FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n         LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n             + \", Expected: \" + fsp.toShort());\n         if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n           LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n               + \", \" + fsp);\n           doneDirFc.setPermission(path, fsp);\n         }\n-        synchronized(existingDoneSubdirs) {\n+        synchronized (existingDoneSubdirs) {\n           existingDoneSubdirs.add(path);\n         }\n-      } catch (FileAlreadyExistsException faeE) { //Nothing to do.\n+      } catch (FileAlreadyExistsException faeE) { \n+        // Nothing to do.\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void makeDoneSubdir(Path path) throws IOException {\n    boolean existsInExistingCache \u003d false;\n    synchronized (existingDoneSubdirs) {\n      if (existingDoneSubdirs.contains(path))\n        existsInExistingCache \u003d true;\n    }\n    try {\n      doneDirFc.getFileStatus(path);\n      if (!existsInExistingCache) {\n        existingDoneSubdirs.add(path);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"JobHistory.maybeMakeSubdirectory -- We believed \" + path\n              + \" already existed, but it didn\u0027t.\");\n        }\n      }\n    } catch (FileNotFoundException fnfE) {\n      try {\n        FsPermission fsp \u003d new FsPermission(\n            JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n        doneDirFc.mkdir(path, fsp, true);\n        FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n        LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n            + \", Expected: \" + fsp.toShort());\n        if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n          LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n              + \", \" + fsp);\n          doneDirFc.setPermission(path, fsp);\n        }\n        synchronized (existingDoneSubdirs) {\n          existingDoneSubdirs.add(path);\n        }\n      } catch (FileAlreadyExistsException faeE) { \n        // Nothing to do.\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/04/12 11:11 AM",
          "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "10/04/12 9:13 AM",
          "commitNameOld": "000859a534f4cc6a57524a676805d8af6ad199de",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,36 @@\n-  private void maybeMakeSubdirectory(Path path) throws IOException {\n+  private void makeDoneSubdir(Path path) throws IOException {\n     boolean existsInExistingCache \u003d false;\n-    synchronized(existingDoneSubdirs) {\n-      if (existingDoneSubdirs.contains(path)) existsInExistingCache \u003d true;\n+    synchronized (existingDoneSubdirs) {\n+      if (existingDoneSubdirs.contains(path))\n+        existsInExistingCache \u003d true;\n     }\n     try {\n       doneDirFc.getFileStatus(path);\n       if (!existsInExistingCache) {\n         existingDoneSubdirs.add(path);\n-        if (debugMode) {\n-          LOG.info(\"JobHistory.maybeMakeSubdirectory -- We believed \"\n-                             + path + \" already existed, but it didn\u0027t.\");\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"JobHistory.maybeMakeSubdirectory -- We believed \" + path\n+              + \" already existed, but it didn\u0027t.\");\n         }\n       }\n     } catch (FileNotFoundException fnfE) {\n       try {\n-        FsPermission fsp \u003d \n-          new FsPermission(JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n+        FsPermission fsp \u003d new FsPermission(\n+            JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n         doneDirFc.mkdir(path, fsp, true);\n         FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n         LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n             + \", Expected: \" + fsp.toShort());\n         if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n           LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n               + \", \" + fsp);\n           doneDirFc.setPermission(path, fsp);\n         }\n-        synchronized(existingDoneSubdirs) {\n+        synchronized (existingDoneSubdirs) {\n           existingDoneSubdirs.add(path);\n         }\n-      } catch (FileAlreadyExistsException faeE) { //Nothing to do.\n+      } catch (FileAlreadyExistsException faeE) { \n+        // Nothing to do.\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void makeDoneSubdir(Path path) throws IOException {\n    boolean existsInExistingCache \u003d false;\n    synchronized (existingDoneSubdirs) {\n      if (existingDoneSubdirs.contains(path))\n        existsInExistingCache \u003d true;\n    }\n    try {\n      doneDirFc.getFileStatus(path);\n      if (!existsInExistingCache) {\n        existingDoneSubdirs.add(path);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"JobHistory.maybeMakeSubdirectory -- We believed \" + path\n              + \" already existed, but it didn\u0027t.\");\n        }\n      }\n    } catch (FileNotFoundException fnfE) {\n      try {\n        FsPermission fsp \u003d new FsPermission(\n            JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n        doneDirFc.mkdir(path, fsp, true);\n        FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n        LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n            + \", Expected: \" + fsp.toShort());\n        if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n          LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n              + \", \" + fsp);\n          doneDirFc.setPermission(path, fsp);\n        }\n        synchronized (existingDoneSubdirs) {\n          existingDoneSubdirs.add(path);\n        }\n      } catch (FileAlreadyExistsException faeE) { \n        // Nothing to do.\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {
            "oldValue": "maybeMakeSubdirectory",
            "newValue": "makeDoneSubdir"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void maybeMakeSubdirectory(Path path) throws IOException {\n    boolean existsInExistingCache \u003d false;\n    synchronized(existingDoneSubdirs) {\n      if (existingDoneSubdirs.contains(path)) existsInExistingCache \u003d true;\n    }\n    try {\n      doneDirFc.getFileStatus(path);\n      if (!existsInExistingCache) {\n        existingDoneSubdirs.add(path);\n        if (debugMode) {\n          LOG.info(\"JobHistory.maybeMakeSubdirectory -- We believed \"\n                             + path + \" already existed, but it didn\u0027t.\");\n        }\n      }\n    } catch (FileNotFoundException fnfE) {\n      try {\n        FsPermission fsp \u003d new FsPermission(JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n        doneDirFc.mkdir(path, fsp, true);\n        FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n        LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n            + \", Expected: \" + fsp.toShort());\n        if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n          LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n              + \", \" + fsp);\n          doneDirFc.setPermission(path, fsp);\n        }\n        synchronized(existingDoneSubdirs) {\n          existingDoneSubdirs.add(path);\n        }\n      } catch (FileAlreadyExistsException faeE) { //Nothing to do.\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,33 @@\n+  private void maybeMakeSubdirectory(Path path) throws IOException {\n+    boolean existsInExistingCache \u003d false;\n+    synchronized(existingDoneSubdirs) {\n+      if (existingDoneSubdirs.contains(path)) existsInExistingCache \u003d true;\n+    }\n+    try {\n+      doneDirFc.getFileStatus(path);\n+      if (!existsInExistingCache) {\n+        existingDoneSubdirs.add(path);\n+        if (debugMode) {\n+          LOG.info(\"JobHistory.maybeMakeSubdirectory -- We believed \"\n+                             + path + \" already existed, but it didn\u0027t.\");\n+        }\n+      }\n+    } catch (FileNotFoundException fnfE) {\n+      try {\n+        FsPermission fsp \u003d new FsPermission(JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n+        doneDirFc.mkdir(path, fsp, true);\n+        FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n+        LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n+            + \", Expected: \" + fsp.toShort());\n+        if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n+          LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n+              + \", \" + fsp);\n+          doneDirFc.setPermission(path, fsp);\n+        }\n+        synchronized(existingDoneSubdirs) {\n+          existingDoneSubdirs.add(path);\n+        }\n+      } catch (FileAlreadyExistsException faeE) { //Nothing to do.\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void maybeMakeSubdirectory(Path path) throws IOException {\n    boolean existsInExistingCache \u003d false;\n    synchronized(existingDoneSubdirs) {\n      if (existingDoneSubdirs.contains(path)) existsInExistingCache \u003d true;\n    }\n    try {\n      doneDirFc.getFileStatus(path);\n      if (!existsInExistingCache) {\n        existingDoneSubdirs.add(path);\n        if (debugMode) {\n          LOG.info(\"JobHistory.maybeMakeSubdirectory -- We believed \"\n                             + path + \" already existed, but it didn\u0027t.\");\n        }\n      }\n    } catch (FileNotFoundException fnfE) {\n      try {\n        FsPermission fsp \u003d new FsPermission(JobHistoryUtils.HISTORY_DONE_DIR_PERMISSION);\n        doneDirFc.mkdir(path, fsp, true);\n        FileStatus fsStatus \u003d doneDirFc.getFileStatus(path);\n        LOG.info(\"Perms after creating \" + fsStatus.getPermission().toShort()\n            + \", Expected: \" + fsp.toShort());\n        if (fsStatus.getPermission().toShort() !\u003d fsp.toShort()) {\n          LOG.info(\"Explicitly setting permissions to : \" + fsp.toShort()\n              + \", \" + fsp);\n          doneDirFc.setPermission(path, fsp);\n        }\n        synchronized(existingDoneSubdirs) {\n          existingDoneSubdirs.add(path);\n        }\n      } catch (FileAlreadyExistsException faeE) { //Nothing to do.\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java"
    }
  }
}