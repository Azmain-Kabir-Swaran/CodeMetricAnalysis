{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeS3FileSystem.java",
  "functionName": "listStatus",
  "functionId": "listStatus___f-Path",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
  "functionStartLine": 129,
  "functionEndLine": 132,
  "numCommitsSeen": 27,
  "timeTaken": 1986,
  "changeHistory": [
    "49467165a57fb77932d1d526796624b88ebacd91",
    "3fd844b99fdfae6be6e5e261f371d175aad14229",
    "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "174b3e8a7482efcf3afe659ca7b903fb7b087d10",
    "76a77aea78301c6b632d06d20520abc8a21d4cb0",
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "49467165a57fb77932d1d526796624b88ebacd91": "Ybodychange",
    "3fd844b99fdfae6be6e5e261f371d175aad14229": "Ybodychange",
    "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "174b3e8a7482efcf3afe659ca7b903fb7b087d10": "Ybodychange",
    "76a77aea78301c6b632d06d20520abc8a21d4cb0": "Ybodychange",
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49467165a57fb77932d1d526796624b88ebacd91": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14738 Remove S3N and obsolete bits of S3A; rework docs.  Contributed by Steve Loughran.\n",
      "commitDate": "14/09/17 2:10 PM",
      "commitName": "49467165a57fb77932d1d526796624b88ebacd91",
      "commitAuthor": "Aaron Fabbri",
      "commitDateOld": "30/11/16 1:01 PM",
      "commitNameOld": "3fd844b99fdfae6be6e5e261f371d175aad14229",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 288.01,
      "commitsBetweenForRepo": 1721,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,4 @@\n-  public FileStatus[] listStatus(Path f) throws IOException {\n-\n-    Path absolutePath \u003d makeAbsolute(f);\n-    String key \u003d pathToKey(absolutePath);\n-    \n-    if (key.length() \u003e 0) {\n-      FileMetadata meta \u003d store.retrieveMetadata(key);\n-      if (meta !\u003d null) {\n-        return new FileStatus[] { newFile(meta, absolutePath) };\n-      }\n-    }\n-    \n-    URI pathUri \u003d absolutePath.toUri();\n-    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n-    String priorLastKey \u003d null;\n-    do {\n-      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n-      for (FileMetadata fileMetadata : listing.getFiles()) {\n-        Path subpath \u003d keyToPath(fileMetadata.getKey());\n-        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n-\n-        if (fileMetadata.getKey().equals(key + \"/\")) {\n-          // this is just the directory we have been asked to list\n-        }\n-        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n-          status.add(newDirectory(new Path(\n-              absolutePath,\n-              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n-        }\n-        else {\n-          status.add(newFile(fileMetadata, subpath));\n-        }\n-      }\n-      for (String commonPrefix : listing.getCommonPrefixes()) {\n-        Path subpath \u003d keyToPath(commonPrefix);\n-        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n-        // sometimes the common prefix includes the base dir (HADOOP-13830).\n-        // avoid that problem by detecting it and keeping it out\n-        // of the list\n-        if (!relativePath.isEmpty()) {\n-          status.add(newDirectory(new Path(absolutePath, relativePath)));\n-        }\n-      }\n-      priorLastKey \u003d listing.getPriorLastKey();\n-    } while (priorLastKey !\u003d null);\n-    \n-    if (status.isEmpty() \u0026\u0026\n-        key.length() \u003e 0 \u0026\u0026\n-        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n-      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n-    }\n-    \n-    return status.toArray(new FileStatus[status.size()]);\n+  public FileStatus[] listStatus(Path f)\n+      throws IOException {\n+    throw new UnsupportedOperationException(UNSUPPORTED);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus[] listStatus(Path f)\n      throws IOException {\n    throw new UnsupportedOperationException(UNSUPPORTED);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "3fd844b99fdfae6be6e5e261f371d175aad14229": {
      "type": "Ybodychange",
      "commitMessage": " HADOOP-13830. Intermittent failure of ITestS3NContractRootDir#testRecursiveRootListing: \"Can not create a Path from an empty string\". Contributed by Steve Loughran\n",
      "commitDate": "30/11/16 1:01 PM",
      "commitName": "3fd844b99fdfae6be6e5e261f371d175aad14229",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "23/08/16 2:12 PM",
      "commitNameOld": "c37346d0e3f9d39d0aec7a9c5bda3e9772aa969b",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 98.99,
      "commitsBetweenForRepo": 725,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,54 @@\n   public FileStatus[] listStatus(Path f) throws IOException {\n \n     Path absolutePath \u003d makeAbsolute(f);\n     String key \u003d pathToKey(absolutePath);\n     \n     if (key.length() \u003e 0) {\n       FileMetadata meta \u003d store.retrieveMetadata(key);\n       if (meta !\u003d null) {\n         return new FileStatus[] { newFile(meta, absolutePath) };\n       }\n     }\n     \n     URI pathUri \u003d absolutePath.toUri();\n     Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n     String priorLastKey \u003d null;\n     do {\n       PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n       for (FileMetadata fileMetadata : listing.getFiles()) {\n         Path subpath \u003d keyToPath(fileMetadata.getKey());\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n \n         if (fileMetadata.getKey().equals(key + \"/\")) {\n           // this is just the directory we have been asked to list\n         }\n         else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n           status.add(newDirectory(new Path(\n               absolutePath,\n               relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n         }\n         else {\n           status.add(newFile(fileMetadata, subpath));\n         }\n       }\n       for (String commonPrefix : listing.getCommonPrefixes()) {\n         Path subpath \u003d keyToPath(commonPrefix);\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n-        status.add(newDirectory(new Path(absolutePath, relativePath)));\n+        // sometimes the common prefix includes the base dir (HADOOP-13830).\n+        // avoid that problem by detecting it and keeping it out\n+        // of the list\n+        if (!relativePath.isEmpty()) {\n+          status.add(newDirectory(new Path(absolutePath, relativePath)));\n+        }\n       }\n       priorLastKey \u003d listing.getPriorLastKey();\n     } while (priorLastKey !\u003d null);\n     \n     if (status.isEmpty() \u0026\u0026\n         key.length() \u003e 0 \u0026\u0026\n         store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n       throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n     }\n     \n     return status.toArray(new FileStatus[status.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        // sometimes the common prefix includes the base dir (HADOOP-13830).\n        // avoid that problem by detecting it and keeping it out\n        // of the list\n        if (!relativePath.isEmpty()) {\n          status.add(newDirectory(new Path(absolutePath, relativePath)));\n        }\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        key.length() \u003e 0 \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-11074. Move s3-related FS connector code to hadoop-aws. (David S. Wang via Colin Patrick McCabe)\n",
      "commitDate": "10/09/14 4:14 PM",
      "commitName": "5ec7fcd9dd6bb86858c6e2583321bb9a615bd392",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "10/09/14 3:22 PM",
      "commitNameOld": "7f80e142096ab21b4852635a127589e34a747bc4",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        key.length() \u003e 0 \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        key.length() \u003e 0 \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        key.length() \u003e 0 \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        key.length() \u003e 0 \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
      }
    },
    "174b3e8a7482efcf3afe659ca7b903fb7b087d10": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6009. S3N listStatus incorrectly returns null instead of empty array when called on empty root. Contributed by Ian Nowland.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812479 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/09 5:18 AM",
      "commitName": "174b3e8a7482efcf3afe659ca7b903fb7b087d10",
      "commitAuthor": "Thomas White",
      "commitDateOld": "21/08/09 3:50 PM",
      "commitNameOld": "76a77aea78301c6b632d06d20520abc8a21d4cb0",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 17.56,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,49 @@\n   public FileStatus[] listStatus(Path f) throws IOException {\n \n     Path absolutePath \u003d makeAbsolute(f);\n     String key \u003d pathToKey(absolutePath);\n     \n     if (key.length() \u003e 0) {\n       FileMetadata meta \u003d store.retrieveMetadata(key);\n       if (meta !\u003d null) {\n         return new FileStatus[] { newFile(meta, absolutePath) };\n       }\n     }\n     \n     URI pathUri \u003d absolutePath.toUri();\n     Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n     String priorLastKey \u003d null;\n     do {\n       PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n       for (FileMetadata fileMetadata : listing.getFiles()) {\n         Path subpath \u003d keyToPath(fileMetadata.getKey());\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n \n         if (fileMetadata.getKey().equals(key + \"/\")) {\n           // this is just the directory we have been asked to list\n         }\n         else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n           status.add(newDirectory(new Path(\n               absolutePath,\n               relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n         }\n         else {\n           status.add(newFile(fileMetadata, subpath));\n         }\n       }\n       for (String commonPrefix : listing.getCommonPrefixes()) {\n         Path subpath \u003d keyToPath(commonPrefix);\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n         status.add(newDirectory(new Path(absolutePath, relativePath)));\n       }\n       priorLastKey \u003d listing.getPriorLastKey();\n     } while (priorLastKey !\u003d null);\n     \n     if (status.isEmpty() \u0026\u0026\n+        key.length() \u003e 0 \u0026\u0026\n         store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n       throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n     }\n     \n     return status.toArray(new FileStatus[status.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        key.length() \u003e 0 \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "76a77aea78301c6b632d06d20520abc8a21d4cb0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6201. Change FileSystem::listStatus contract to throw\nFileNotFoundException if the directory does not exist, rather than letting\nthis be implementation-specific. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@806745 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/09 3:50 PM",
      "commitName": "76a77aea78301c6b632d06d20520abc8a21d4cb0",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "15/06/09 1:28 PM",
      "commitNameOld": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 67.1,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   public FileStatus[] listStatus(Path f) throws IOException {\n \n     Path absolutePath \u003d makeAbsolute(f);\n     String key \u003d pathToKey(absolutePath);\n     \n     if (key.length() \u003e 0) {\n       FileMetadata meta \u003d store.retrieveMetadata(key);\n       if (meta !\u003d null) {\n         return new FileStatus[] { newFile(meta, absolutePath) };\n       }\n     }\n     \n     URI pathUri \u003d absolutePath.toUri();\n     Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n     String priorLastKey \u003d null;\n     do {\n       PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n       for (FileMetadata fileMetadata : listing.getFiles()) {\n         Path subpath \u003d keyToPath(fileMetadata.getKey());\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n \n         if (fileMetadata.getKey().equals(key + \"/\")) {\n           // this is just the directory we have been asked to list\n         }\n         else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n           status.add(newDirectory(new Path(\n               absolutePath,\n               relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n         }\n         else {\n           status.add(newFile(fileMetadata, subpath));\n         }\n       }\n       for (String commonPrefix : listing.getCommonPrefixes()) {\n         Path subpath \u003d keyToPath(commonPrefix);\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n         status.add(newDirectory(new Path(absolutePath, relativePath)));\n       }\n       priorLastKey \u003d listing.getPriorLastKey();\n     } while (priorLastKey !\u003d null);\n     \n     if (status.isEmpty() \u0026\u0026\n         store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n-      return null;\n+      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n     }\n     \n     return status.toArray(new FileStatus[status.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      throw new FileNotFoundException(\"File \" + f + \" does not exist.\");\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58": {
      "type": "Ybodychange",
      "commitMessage": "Merged src/core, src/test/core, src/contrib/eclipse-plugin, and\nsrc/contrib/ec2 from trunk 776174:784663\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@784965 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/09 1:28 PM",
      "commitName": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 27.67,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,48 @@\n   public FileStatus[] listStatus(Path f) throws IOException {\n \n     Path absolutePath \u003d makeAbsolute(f);\n     String key \u003d pathToKey(absolutePath);\n     \n     if (key.length() \u003e 0) {\n       FileMetadata meta \u003d store.retrieveMetadata(key);\n       if (meta !\u003d null) {\n         return new FileStatus[] { newFile(meta, absolutePath) };\n       }\n     }\n     \n     URI pathUri \u003d absolutePath.toUri();\n     Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n     String priorLastKey \u003d null;\n     do {\n-      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, \n-          priorLastKey);\n+      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n       for (FileMetadata fileMetadata : listing.getFiles()) {\n         Path subpath \u003d keyToPath(fileMetadata.getKey());\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n-        if (relativePath.endsWith(FOLDER_SUFFIX)) {\n-          status.add(newDirectory(new Path(absolutePath,\n-              relativePath.substring(0,\n-                  relativePath.indexOf(FOLDER_SUFFIX)))));\n-        } else {\n+\n+        if (fileMetadata.getKey().equals(key + \"/\")) {\n+          // this is just the directory we have been asked to list\n+        }\n+        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n+          status.add(newDirectory(new Path(\n+              absolutePath,\n+              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n+        }\n+        else {\n           status.add(newFile(fileMetadata, subpath));\n         }\n       }\n       for (String commonPrefix : listing.getCommonPrefixes()) {\n         Path subpath \u003d keyToPath(commonPrefix);\n         String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n         status.add(newDirectory(new Path(absolutePath, relativePath)));\n       }\n       priorLastKey \u003d listing.getPriorLastKey();\n     } while (priorLastKey !\u003d null);\n     \n     if (status.isEmpty() \u0026\u0026\n         store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n       return null;\n     }\n     \n-    return status.toArray(new FileStatus[0]);\n+    return status.toArray(new FileStatus[status.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, priorLastKey, false);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n\n        if (fileMetadata.getKey().equals(key + \"/\")) {\n          // this is just the directory we have been asked to list\n        }\n        else if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(\n              absolutePath,\n              relativePath.substring(0, relativePath.indexOf(FOLDER_SUFFIX)))));\n        }\n        else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      return null;\n    }\n    \n    return status.toArray(new FileStatus[status.size()]);\n  }",
      "path": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,44 @@\n+  public FileStatus[] listStatus(Path f) throws IOException {\n+\n+    Path absolutePath \u003d makeAbsolute(f);\n+    String key \u003d pathToKey(absolutePath);\n+    \n+    if (key.length() \u003e 0) {\n+      FileMetadata meta \u003d store.retrieveMetadata(key);\n+      if (meta !\u003d null) {\n+        return new FileStatus[] { newFile(meta, absolutePath) };\n+      }\n+    }\n+    \n+    URI pathUri \u003d absolutePath.toUri();\n+    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n+    String priorLastKey \u003d null;\n+    do {\n+      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, \n+          priorLastKey);\n+      for (FileMetadata fileMetadata : listing.getFiles()) {\n+        Path subpath \u003d keyToPath(fileMetadata.getKey());\n+        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n+        if (relativePath.endsWith(FOLDER_SUFFIX)) {\n+          status.add(newDirectory(new Path(absolutePath,\n+              relativePath.substring(0,\n+                  relativePath.indexOf(FOLDER_SUFFIX)))));\n+        } else {\n+          status.add(newFile(fileMetadata, subpath));\n+        }\n+      }\n+      for (String commonPrefix : listing.getCommonPrefixes()) {\n+        Path subpath \u003d keyToPath(commonPrefix);\n+        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n+        status.add(newDirectory(new Path(absolutePath, relativePath)));\n+      }\n+      priorLastKey \u003d listing.getPriorLastKey();\n+    } while (priorLastKey !\u003d null);\n+    \n+    if (status.isEmpty() \u0026\u0026\n+        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n+      return null;\n+    }\n+    \n+    return status.toArray(new FileStatus[0]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus[] listStatus(Path f) throws IOException {\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    \n    if (key.length() \u003e 0) {\n      FileMetadata meta \u003d store.retrieveMetadata(key);\n      if (meta !\u003d null) {\n        return new FileStatus[] { newFile(meta, absolutePath) };\n      }\n    }\n    \n    URI pathUri \u003d absolutePath.toUri();\n    Set\u003cFileStatus\u003e status \u003d new TreeSet\u003cFileStatus\u003e();\n    String priorLastKey \u003d null;\n    do {\n      PartialListing listing \u003d store.list(key, S3_MAX_LISTING_LENGTH, \n          priorLastKey);\n      for (FileMetadata fileMetadata : listing.getFiles()) {\n        Path subpath \u003d keyToPath(fileMetadata.getKey());\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        if (relativePath.endsWith(FOLDER_SUFFIX)) {\n          status.add(newDirectory(new Path(absolutePath,\n              relativePath.substring(0,\n                  relativePath.indexOf(FOLDER_SUFFIX)))));\n        } else {\n          status.add(newFile(fileMetadata, subpath));\n        }\n      }\n      for (String commonPrefix : listing.getCommonPrefixes()) {\n        Path subpath \u003d keyToPath(commonPrefix);\n        String relativePath \u003d pathUri.relativize(subpath.toUri()).getPath();\n        status.add(newDirectory(new Path(absolutePath, relativePath)));\n      }\n      priorLastKey \u003d listing.getPriorLastKey();\n    } while (priorLastKey !\u003d null);\n    \n    if (status.isEmpty() \u0026\u0026\n        store.retrieveMetadata(key + FOLDER_SUFFIX) \u003d\u003d null) {\n      return null;\n    }\n    \n    return status.toArray(new FileStatus[0]);\n  }",
      "path": "src/java/org/apache/hadoop/fs/s3native/NativeS3FileSystem.java"
    }
  }
}