{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "getMessage",
  "functionId": "getMessage___message-Message__buffer-RpcWritable.Buffer",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 2803,
  "functionEndLine": 2813,
  "numCommitsSeen": 162,
  "timeTaken": 3375,
  "changeHistory": [
    "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
    "580a8334963709e728ed677c815fb7fef9bca70e"
  ],
  "changeHistoryShort": {
    "b6bb99c18a772d2179d5cc6757cddf141e8d39c0": "Ymultichange(Yexceptionschange,Ybodychange)",
    "580a8334963709e728ed677c815fb7fef9bca70e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b6bb99c18a772d2179d5cc6757cddf141e8d39c0": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-14034. Allow ipc layer exceptions to selectively close connections. Contributed by Daryn Sharp.\n",
      "commitDate": "09/02/17 8:47 AM",
      "commitName": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-14034. Allow ipc layer exceptions to selectively close connections. Contributed by Daryn Sharp.\n",
          "commitDate": "09/02/17 8:47 AM",
          "commitName": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/11/16 9:07 PM",
          "commitNameOld": "67d9f2808efb34b9a7b0b824cb4033b95ad33474",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 72.49,
          "commitsBetweenForRepo": 352,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n     \u003cT extends Message\u003e T getMessage(Message message,\n-        RpcWritable.Buffer buffer) throws WrappedRpcServerException {\n+        RpcWritable.Buffer buffer) throws RpcServerException {\n       try {\n         return (T)buffer.getValue(message);\n       } catch (Exception ioe) {\n         Class\u003c?\u003e protoClass \u003d message.getClass();\n-        throw new WrappedRpcServerException(\n+        throw new FatalRpcServerException(\n             RpcErrorCodeProto.FATAL_DESERIALIZING_REQUEST,\n             \"Error decoding \" + protoClass.getSimpleName() + \": \"+ ioe);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    \u003cT extends Message\u003e T getMessage(Message message,\n        RpcWritable.Buffer buffer) throws RpcServerException {\n      try {\n        return (T)buffer.getValue(message);\n      } catch (Exception ioe) {\n        Class\u003c?\u003e protoClass \u003d message.getClass();\n        throw new FatalRpcServerException(\n            RpcErrorCodeProto.FATAL_DESERIALIZING_REQUEST,\n            \"Error decoding \" + protoClass.getSimpleName() + \": \"+ ioe);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[WrappedRpcServerException]",
            "newValue": "[RpcServerException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14034. Allow ipc layer exceptions to selectively close connections. Contributed by Daryn Sharp.\n",
          "commitDate": "09/02/17 8:47 AM",
          "commitName": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/11/16 9:07 PM",
          "commitNameOld": "67d9f2808efb34b9a7b0b824cb4033b95ad33474",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 72.49,
          "commitsBetweenForRepo": 352,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n     \u003cT extends Message\u003e T getMessage(Message message,\n-        RpcWritable.Buffer buffer) throws WrappedRpcServerException {\n+        RpcWritable.Buffer buffer) throws RpcServerException {\n       try {\n         return (T)buffer.getValue(message);\n       } catch (Exception ioe) {\n         Class\u003c?\u003e protoClass \u003d message.getClass();\n-        throw new WrappedRpcServerException(\n+        throw new FatalRpcServerException(\n             RpcErrorCodeProto.FATAL_DESERIALIZING_REQUEST,\n             \"Error decoding \" + protoClass.getSimpleName() + \": \"+ ioe);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    \u003cT extends Message\u003e T getMessage(Message message,\n        RpcWritable.Buffer buffer) throws RpcServerException {\n      try {\n        return (T)buffer.getValue(message);\n      } catch (Exception ioe) {\n        Class\u003c?\u003e protoClass \u003d message.getClass();\n        throw new FatalRpcServerException(\n            RpcErrorCodeProto.FATAL_DESERIALIZING_REQUEST,\n            \"Error decoding \" + protoClass.getSimpleName() + \": \"+ ioe);\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "580a8334963709e728ed677c815fb7fef9bca70e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13483. Optimize IPC server protobuf decoding. Contributed by Daryn Sharp.\n",
      "commitDate": "03/08/16 11:22 AM",
      "commitName": "580a8334963709e728ed677c815fb7fef9bca70e",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,11 @@\n+    \u003cT extends Message\u003e T getMessage(Message message,\n+        RpcWritable.Buffer buffer) throws WrappedRpcServerException {\n+      try {\n+        return (T)buffer.getValue(message);\n+      } catch (Exception ioe) {\n+        Class\u003c?\u003e protoClass \u003d message.getClass();\n+        throw new WrappedRpcServerException(\n+            RpcErrorCodeProto.FATAL_DESERIALIZING_REQUEST,\n+            \"Error decoding \" + protoClass.getSimpleName() + \": \"+ ioe);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    \u003cT extends Message\u003e T getMessage(Message message,\n        RpcWritable.Buffer buffer) throws WrappedRpcServerException {\n      try {\n        return (T)buffer.getValue(message);\n      } catch (Exception ioe) {\n        Class\u003c?\u003e protoClass \u003d message.getClass();\n        throw new WrappedRpcServerException(\n            RpcErrorCodeProto.FATAL_DESERIALIZING_REQUEST,\n            \"Error decoding \" + protoClass.getSimpleName() + \": \"+ ioe);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}