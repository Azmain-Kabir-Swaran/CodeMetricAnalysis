{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "getSchedulerContainer",
  "functionId": "getSchedulerContainer___rmContainer-RMContainer__allocated-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 2773,
  "functionEndLine": 2799,
  "numCommitsSeen": 239,
  "timeTaken": 4588,
  "changeHistory": [
    "de3b4aac561258ad242a3c5ed1c919428893fd4c"
  ],
  "changeHistoryShort": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,27 @@\n+  private SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e getSchedulerContainer(\n+      RMContainer rmContainer, boolean allocated) {\n+    if (null \u003d\u003d rmContainer) {\n+      return null;\n+    }\n+\n+    FiCaSchedulerApp app \u003d getApplicationAttempt(\n+        rmContainer.getApplicationAttemptId());\n+    if (null \u003d\u003d app) { return null; }\n+\n+    NodeId nodeId;\n+    // Get nodeId\n+    if (rmContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n+      nodeId \u003d rmContainer.getReservedNode();\n+    } else {\n+      nodeId \u003d rmContainer.getNodeId();\n+    }\n+\n+    FiCaSchedulerNode node \u003d getNode(nodeId);\n+    if (null \u003d\u003d node) {\n+      return null;\n+    }\n+    return new SchedulerContainer\u003c\u003e(app, node, rmContainer,\n+        // TODO, node partition should come from CSAssignment to avoid partition\n+        // get updated before submitting the commit\n+        node.getPartition(), allocated);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e getSchedulerContainer(\n      RMContainer rmContainer, boolean allocated) {\n    if (null \u003d\u003d rmContainer) {\n      return null;\n    }\n\n    FiCaSchedulerApp app \u003d getApplicationAttempt(\n        rmContainer.getApplicationAttemptId());\n    if (null \u003d\u003d app) { return null; }\n\n    NodeId nodeId;\n    // Get nodeId\n    if (rmContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n      nodeId \u003d rmContainer.getReservedNode();\n    } else {\n      nodeId \u003d rmContainer.getNodeId();\n    }\n\n    FiCaSchedulerNode node \u003d getNode(nodeId);\n    if (null \u003d\u003d node) {\n      return null;\n    }\n    return new SchedulerContainer\u003c\u003e(app, node, rmContainer,\n        // TODO, node partition should come from CSAssignment to avoid partition\n        // get updated before submitting the commit\n        node.getPartition(), allocated);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}