{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "cloneAsks",
  "functionId": "cloneAsks",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 456,
  "functionEndLine": 464,
  "numCommitsSeen": 52,
  "timeTaken": 3928,
  "changeHistory": [
    "99948565cb5d5706241d7a8fc591e1617c499e03",
    "aae629913cee0157c945a2c7384c7bf398f10616",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
    "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661"
  ],
  "changeHistoryShort": {
    "99948565cb5d5706241d7a8fc591e1617c499e03": "Ybodychange",
    "aae629913cee0157c945a2c7384c7bf398f10616": "Ybodychange",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": "Ybodychange",
    "ede1a473f5061cf40f6affc1c8c30a645c1fef6c": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99948565cb5d5706241d7a8fc591e1617c499e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8412. Move ResourceRequest.clone logic everywhere into a proper API. Contributed by Botong Huang.\n",
      "commitDate": "21/06/18 6:24 PM",
      "commitName": "99948565cb5d5706241d7a8fc591e1617c499e03",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "17/05/18 8:00 PM",
      "commitNameOld": "3159bffce23abf35754da2d7d51de7d8c2631ae3",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 34.93,
      "commitsBetweenForRepo": 251,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,9 @@\n   private List\u003cResourceRequest\u003e cloneAsks() {\n     List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n     for(ResourceRequest r : ask) {\n       // create a copy of ResourceRequest as we might change it while the\n       // RPC layer is using it to send info across\n-      ResourceRequest rr \u003d\n-          ResourceRequest.newBuilder().priority(r.getPriority())\n-              .resourceName(r.getResourceName()).capability(r.getCapability())\n-              .numContainers(r.getNumContainers())\n-              .relaxLocality(r.getRelaxLocality())\n-              .nodeLabelExpression(r.getNodeLabelExpression())\n-              .executionTypeRequest(r.getExecutionTypeRequest())\n-              .allocationRequestId(r.getAllocationRequestId())\n-              .build();\n-      askList.add(rr);\n+      askList.add(ResourceRequest.clone(r));\n     }\n     return askList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cResourceRequest\u003e cloneAsks() {\n    List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n    for(ResourceRequest r : ask) {\n      // create a copy of ResourceRequest as we might change it while the\n      // RPC layer is using it to send info across\n      askList.add(ResourceRequest.clone(r));\n    }\n    return askList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "aae629913cee0157c945a2c7384c7bf398f10616": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 11:07 PM",
      "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthor": "Sunil G",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 15.9,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private List\u003cResourceRequest\u003e cloneAsks() {\n     List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n     for(ResourceRequest r : ask) {\n       // create a copy of ResourceRequest as we might change it while the\n       // RPC layer is using it to send info across\n       ResourceRequest rr \u003d\n           ResourceRequest.newBuilder().priority(r.getPriority())\n               .resourceName(r.getResourceName()).capability(r.getCapability())\n               .numContainers(r.getNumContainers())\n               .relaxLocality(r.getRelaxLocality())\n               .nodeLabelExpression(r.getNodeLabelExpression())\n               .executionTypeRequest(r.getExecutionTypeRequest())\n               .allocationRequestId(r.getAllocationRequestId())\n-              .profileCapability(r.getProfileCapability()).build();\n+              .build();\n       askList.add(rr);\n     }\n     return askList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cResourceRequest\u003e cloneAsks() {\n    List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n    for(ResourceRequest r : ask) {\n      // create a copy of ResourceRequest as we might change it while the\n      // RPC layer is using it to send info across\n      ResourceRequest rr \u003d\n          ResourceRequest.newBuilder().priority(r.getPriority())\n              .resourceName(r.getResourceName()).capability(r.getCapability())\n              .numContainers(r.getNumContainers())\n              .relaxLocality(r.getRelaxLocality())\n              .nodeLabelExpression(r.getNodeLabelExpression())\n              .executionTypeRequest(r.getExecutionTypeRequest())\n              .allocationRequestId(r.getAllocationRequestId())\n              .build();\n      askList.add(rr);\n    }\n    return askList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "24/07/17 12:03 PM",
      "commitNameOld": "4c40cd451cbdbce5d2b94ad0e7e3cc991c3439c5",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 49.89,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   private List\u003cResourceRequest\u003e cloneAsks() {\n     List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n     for(ResourceRequest r : ask) {\n       // create a copy of ResourceRequest as we might change it while the\n       // RPC layer is using it to send info across\n-      ResourceRequest rr \u003d ResourceRequest.newBuilder()\n-          .priority(r.getPriority()).resourceName(r.getResourceName())\n-          .capability(r.getCapability()).numContainers(r.getNumContainers())\n-          .relaxLocality(r.getRelaxLocality())\n-          .nodeLabelExpression(r.getNodeLabelExpression())\n-          .executionTypeRequest(r.getExecutionTypeRequest())\n-          .allocationRequestId(r.getAllocationRequestId()).build();\n+      ResourceRequest rr \u003d\n+          ResourceRequest.newBuilder().priority(r.getPriority())\n+              .resourceName(r.getResourceName()).capability(r.getCapability())\n+              .numContainers(r.getNumContainers())\n+              .relaxLocality(r.getRelaxLocality())\n+              .nodeLabelExpression(r.getNodeLabelExpression())\n+              .executionTypeRequest(r.getExecutionTypeRequest())\n+              .allocationRequestId(r.getAllocationRequestId())\n+              .profileCapability(r.getProfileCapability()).build();\n       askList.add(rr);\n     }\n     return askList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cResourceRequest\u003e cloneAsks() {\n    List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n    for(ResourceRequest r : ask) {\n      // create a copy of ResourceRequest as we might change it while the\n      // RPC layer is using it to send info across\n      ResourceRequest rr \u003d\n          ResourceRequest.newBuilder().priority(r.getPriority())\n              .resourceName(r.getResourceName()).capability(r.getCapability())\n              .numContainers(r.getNumContainers())\n              .relaxLocality(r.getRelaxLocality())\n              .nodeLabelExpression(r.getNodeLabelExpression())\n              .executionTypeRequest(r.getExecutionTypeRequest())\n              .allocationRequestId(r.getAllocationRequestId())\n              .profileCapability(r.getProfileCapability()).build();\n      askList.add(rr);\n    }\n    return askList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "ede1a473f5061cf40f6affc1c8c30a645c1fef6c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5552. Add Builder methods for common yarn API records. (Tao Jie via wangda)\n",
      "commitDate": "11/11/16 1:34 PM",
      "commitName": "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "25/10/16 11:59 PM",
      "commitNameOld": "44fdf009642ae4e99b15f89ec0ca43834f991ef3",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 16.61,
      "commitsBetweenForRepo": 198,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   private List\u003cResourceRequest\u003e cloneAsks() {\n     List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n     for(ResourceRequest r : ask) {\n       // create a copy of ResourceRequest as we might change it while the\n       // RPC layer is using it to send info across\n-      ResourceRequest rr \u003d ResourceRequest.newInstance(r.getPriority(),\n-          r.getResourceName(), r.getCapability(), r.getNumContainers(),\n-          r.getRelaxLocality(), r.getNodeLabelExpression(),\n-          r.getExecutionTypeRequest());\n-      rr.setAllocationRequestId(r.getAllocationRequestId());\n+      ResourceRequest rr \u003d ResourceRequest.newBuilder()\n+          .priority(r.getPriority()).resourceName(r.getResourceName())\n+          .capability(r.getCapability()).numContainers(r.getNumContainers())\n+          .relaxLocality(r.getRelaxLocality())\n+          .nodeLabelExpression(r.getNodeLabelExpression())\n+          .executionTypeRequest(r.getExecutionTypeRequest())\n+          .allocationRequestId(r.getAllocationRequestId()).build();\n       askList.add(rr);\n     }\n     return askList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cResourceRequest\u003e cloneAsks() {\n    List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n    for(ResourceRequest r : ask) {\n      // create a copy of ResourceRequest as we might change it while the\n      // RPC layer is using it to send info across\n      ResourceRequest rr \u003d ResourceRequest.newBuilder()\n          .priority(r.getPriority()).resourceName(r.getResourceName())\n          .capability(r.getCapability()).numContainers(r.getNumContainers())\n          .relaxLocality(r.getRelaxLocality())\n          .nodeLabelExpression(r.getNodeLabelExpression())\n          .executionTypeRequest(r.getExecutionTypeRequest())\n          .allocationRequestId(r.getAllocationRequestId()).build();\n      askList.add(rr);\n    }\n    return askList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,14 @@\n+  private List\u003cResourceRequest\u003e cloneAsks() {\n+    List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n+    for(ResourceRequest r : ask) {\n+      // create a copy of ResourceRequest as we might change it while the\n+      // RPC layer is using it to send info across\n+      ResourceRequest rr \u003d ResourceRequest.newInstance(r.getPriority(),\n+          r.getResourceName(), r.getCapability(), r.getNumContainers(),\n+          r.getRelaxLocality(), r.getNodeLabelExpression(),\n+          r.getExecutionTypeRequest());\n+      rr.setAllocationRequestId(r.getAllocationRequestId());\n+      askList.add(rr);\n+    }\n+    return askList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cResourceRequest\u003e cloneAsks() {\n    List\u003cResourceRequest\u003e askList \u003d new ArrayList\u003cResourceRequest\u003e(ask.size());\n    for(ResourceRequest r : ask) {\n      // create a copy of ResourceRequest as we might change it while the\n      // RPC layer is using it to send info across\n      ResourceRequest rr \u003d ResourceRequest.newInstance(r.getPriority(),\n          r.getResourceName(), r.getCapability(), r.getNumContainers(),\n          r.getRelaxLocality(), r.getNodeLabelExpression(),\n          r.getExecutionTypeRequest());\n      rr.setAllocationRequestId(r.getAllocationRequestId());\n      askList.add(rr);\n    }\n    return askList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
    }
  }
}