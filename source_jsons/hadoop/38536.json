{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FifoScheduler.java",
  "functionName": "addApplicationAttempt",
  "functionId": "addApplicationAttempt___appAttemptId-ApplicationAttemptId__transferStateFromPreviousAttempt-boolean__isAttemptRecovering-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
  "functionStartLine": 410,
  "functionEndLine": 438,
  "numCommitsSeen": 405,
  "timeTaken": 12720,
  "changeHistory": [
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "bda23181bf1931c37d2590e03da9acdc6688ad34",
    "c3f1c30e65cc6a10928299f50801782ecbb4ccb6",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
    "84dfae2f8a1c787380c65bf8de59bfd2d65901e3",
    "f677175f35f68bde9df72e648dffacbd31cfd620",
    "1393581bceda234c88cafec00dbfc0ef2a402e83",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "28db28d491b4e3e3ddf440db4cebab8c0ad6b7f3",
    "791e43c53b0be23b03d9b3f7d45a0df615eb90da",
    "38c32ed239d45051f5e4a51e3f29b201c17a4288",
    "1943fdbec613715f3cdc3ca60cbd273115f28299",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "d74bec2f883b562d377cc564ca86473c498a618a",
    "72d34e6594371112bb4e9835817b382bd4161a6d",
    "5262b7ba4d018562d4e7d60772af4ddc3d770a23",
    "312a7e71001d55f88781e56b331ab1b40a72a980",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ybodychange",
    "bda23181bf1931c37d2590e03da9acdc6688ad34": "Ymultichange(Yparameterchange,Ybodychange)",
    "c3f1c30e65cc6a10928299f50801782ecbb4ccb6": "Ymultichange(Yparameterchange,Ybodychange)",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": "Ybodychange",
    "84dfae2f8a1c787380c65bf8de59bfd2d65901e3": "Ymodifierchange",
    "f677175f35f68bde9df72e648dffacbd31cfd620": "Ybodychange",
    "1393581bceda234c88cafec00dbfc0ef2a402e83": "Ymultichange(Yparameterchange,Ybodychange)",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Ymultichange(Yparameterchange,Ybodychange)",
    "28db28d491b4e3e3ddf440db4cebab8c0ad6b7f3": "Yrename",
    "791e43c53b0be23b03d9b3f7d45a0df615eb90da": "Yrename",
    "38c32ed239d45051f5e4a51e3f29b201c17a4288": "Yrename",
    "1943fdbec613715f3cdc3ca60cbd273115f28299": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Ybodychange",
    "d74bec2f883b562d377cc564ca86473c498a618a": "Ybodychange",
    "72d34e6594371112bb4e9835817b382bd4161a6d": "Ybodychange",
    "5262b7ba4d018562d4e7d60772af4ddc3d770a23": "Ybodychange",
    "312a7e71001d55f88781e56b331ab1b40a72a980": "Yparameterchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9363.  Replaced debug logging with SLF4J parameterized log message.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "18/03/19 10:57 AM",
      "commitName": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 13.53,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,29 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n           boolean transferStateFromPreviousAttempt,\n           boolean isAttemptRecovering) {\n     SchedulerApplication\u003cFifoAppAttempt\u003e application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FifoAppAttempt schedulerApp \u003d\n         new FifoAppAttempt(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n     metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n     if (isAttemptRecovering) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(appAttemptId\n-            + \" is recovering. Skipping notifying ATTEMPT_ADDED\");\n-      }\n+      LOG.debug(\"{} is recovering. Skipping notifying ATTEMPT_ADDED\",\n+          appAttemptId);\n     } else {\n       rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.ATTEMPT_ADDED));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt,\n          boolean isAttemptRecovering) {\n    SchedulerApplication\u003cFifoAppAttempt\u003e application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FifoAppAttempt schedulerApp \u003d\n        new FifoAppAttempt(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    if (isAttemptRecovering) {\n      LOG.debug(\"{} is recovering. Skipping notifying ATTEMPT_ADDED\",\n          appAttemptId);\n    } else {\n      rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "commitDateOld": "20/10/16 9:17 PM",
      "commitNameOld": "754cb4e30fac1c5fe8d44626968c0ddbfe459335",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 17.58,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n           boolean transferStateFromPreviousAttempt,\n           boolean isAttemptRecovering) {\n-    SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n+    SchedulerApplication\u003cFifoAppAttempt\u003e application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n-    FiCaSchedulerApp schedulerApp \u003d\n-        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n+    FifoAppAttempt schedulerApp \u003d\n+        new FifoAppAttempt(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n     metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n     if (isAttemptRecovering) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(appAttemptId\n             + \" is recovering. Skipping notifying ATTEMPT_ADDED\");\n       }\n     } else {\n       rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.ATTEMPT_ADDED));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt,\n          boolean isAttemptRecovering) {\n    SchedulerApplication\u003cFifoAppAttempt\u003e application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FifoAppAttempt schedulerApp \u003d\n        new FifoAppAttempt(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    if (isAttemptRecovering) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(appAttemptId\n            + \" is recovering. Skipping notifying ATTEMPT_ADDED\");\n      }\n    } else {\n      rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "bda23181bf1931c37d2590e03da9acdc6688ad34": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2219. Changed ResourceManager to avoid AMs and NMs getting exceptions after RM recovery but before scheduler learns about apps and app-attempts. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611222 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/14 5:14 PM",
      "commitName": "bda23181bf1931c37d2590e03da9acdc6688ad34",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2219. Changed ResourceManager to avoid AMs and NMs getting exceptions after RM recovery but before scheduler learns about apps and app-attempts. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611222 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/14 5:14 PM",
          "commitName": "bda23181bf1931c37d2590e03da9acdc6688ad34",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "24/06/14 9:42 PM",
          "commitNameOld": "c3f1c30e65cc6a10928299f50801782ecbb4ccb6",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 21.81,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,31 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n           boolean transferStateFromPreviousAttempt,\n-          boolean shouldNotifyAttemptAdded) {\n+          boolean isAttemptRecovering) {\n     SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n     metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n-    if (shouldNotifyAttemptAdded) {\n-      rmContext.getDispatcher().getEventHandler().handle(\n-          new RMAppAttemptEvent(appAttemptId,\n-              RMAppAttemptEventType.ATTEMPT_ADDED));\n-    } else {\n+    if (isAttemptRecovering) {\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping notifying ATTEMPT_ADDED\");\n+        LOG.debug(appAttemptId\n+            + \" is recovering. Skipping notifying ATTEMPT_ADDED\");\n       }\n+    } else {\n+      rmContext.getDispatcher().getEventHandler().handle(\n+        new RMAppAttemptEvent(appAttemptId,\n+            RMAppAttemptEventType.ATTEMPT_ADDED));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt,\n          boolean isAttemptRecovering) {\n    SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    if (isAttemptRecovering) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(appAttemptId\n            + \" is recovering. Skipping notifying ATTEMPT_ADDED\");\n      }\n    } else {\n      rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {
            "oldValue": "[appAttemptId-ApplicationAttemptId, transferStateFromPreviousAttempt-boolean, shouldNotifyAttemptAdded-boolean]",
            "newValue": "[appAttemptId-ApplicationAttemptId, transferStateFromPreviousAttempt-boolean, isAttemptRecovering-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2219. Changed ResourceManager to avoid AMs and NMs getting exceptions after RM recovery but before scheduler learns about apps and app-attempts. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611222 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/14 5:14 PM",
          "commitName": "bda23181bf1931c37d2590e03da9acdc6688ad34",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "24/06/14 9:42 PM",
          "commitNameOld": "c3f1c30e65cc6a10928299f50801782ecbb4ccb6",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 21.81,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,31 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n           boolean transferStateFromPreviousAttempt,\n-          boolean shouldNotifyAttemptAdded) {\n+          boolean isAttemptRecovering) {\n     SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n     metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n-    if (shouldNotifyAttemptAdded) {\n-      rmContext.getDispatcher().getEventHandler().handle(\n-          new RMAppAttemptEvent(appAttemptId,\n-              RMAppAttemptEventType.ATTEMPT_ADDED));\n-    } else {\n+    if (isAttemptRecovering) {\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping notifying ATTEMPT_ADDED\");\n+        LOG.debug(appAttemptId\n+            + \" is recovering. Skipping notifying ATTEMPT_ADDED\");\n       }\n+    } else {\n+      rmContext.getDispatcher().getEventHandler().handle(\n+        new RMAppAttemptEvent(appAttemptId,\n+            RMAppAttemptEventType.ATTEMPT_ADDED));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt,\n          boolean isAttemptRecovering) {\n    SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    if (isAttemptRecovering) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(appAttemptId\n            + \" is recovering. Skipping notifying ATTEMPT_ADDED\");\n      }\n    } else {\n      rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "c3f1c30e65cc6a10928299f50801782ecbb4ccb6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1365. Changed ApplicationMasterService to allow an app to re-register after RM restart. Contributed by Anubhav Dhoot\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605263 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 9:42 PM",
      "commitName": "c3f1c30e65cc6a10928299f50801782ecbb4ccb6",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1365. Changed ApplicationMasterService to allow an app to re-register after RM restart. Contributed by Anubhav Dhoot\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605263 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 9:42 PM",
          "commitName": "c3f1c30e65cc6a10928299f50801782ecbb4ccb6",
          "commitAuthor": "Jian He",
          "commitDateOld": "08/06/14 8:09 PM",
          "commitNameOld": "424fd9494f144c035fdef8c533be51e2027ad8d9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 16.06,
          "commitsBetweenForRepo": 128,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,30 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n-          boolean transferStateFromPreviousAttempt) {\n+          boolean transferStateFromPreviousAttempt,\n+          boolean shouldNotifyAttemptAdded) {\n     SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n     metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n-    rmContext.getDispatcher().getEventHandler().handle(\n-        new RMAppAttemptEvent(appAttemptId,\n-            RMAppAttemptEventType.ATTEMPT_ADDED));\n+    if (shouldNotifyAttemptAdded) {\n+      rmContext.getDispatcher().getEventHandler().handle(\n+          new RMAppAttemptEvent(appAttemptId,\n+              RMAppAttemptEventType.ATTEMPT_ADDED));\n+    } else {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skipping notifying ATTEMPT_ADDED\");\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt,\n          boolean shouldNotifyAttemptAdded) {\n    SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    if (shouldNotifyAttemptAdded) {\n      rmContext.getDispatcher().getEventHandler().handle(\n          new RMAppAttemptEvent(appAttemptId,\n              RMAppAttemptEventType.ATTEMPT_ADDED));\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping notifying ATTEMPT_ADDED\");\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {
            "oldValue": "[appAttemptId-ApplicationAttemptId, transferStateFromPreviousAttempt-boolean]",
            "newValue": "[appAttemptId-ApplicationAttemptId, transferStateFromPreviousAttempt-boolean, shouldNotifyAttemptAdded-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1365. Changed ApplicationMasterService to allow an app to re-register after RM restart. Contributed by Anubhav Dhoot\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605263 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 9:42 PM",
          "commitName": "c3f1c30e65cc6a10928299f50801782ecbb4ccb6",
          "commitAuthor": "Jian He",
          "commitDateOld": "08/06/14 8:09 PM",
          "commitNameOld": "424fd9494f144c035fdef8c533be51e2027ad8d9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 16.06,
          "commitsBetweenForRepo": 128,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,30 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n-          boolean transferStateFromPreviousAttempt) {\n+          boolean transferStateFromPreviousAttempt,\n+          boolean shouldNotifyAttemptAdded) {\n     SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n     metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n-    rmContext.getDispatcher().getEventHandler().handle(\n-        new RMAppAttemptEvent(appAttemptId,\n-            RMAppAttemptEventType.ATTEMPT_ADDED));\n+    if (shouldNotifyAttemptAdded) {\n+      rmContext.getDispatcher().getEventHandler().handle(\n+          new RMAppAttemptEvent(appAttemptId,\n+              RMAppAttemptEventType.ATTEMPT_ADDED));\n+    } else {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skipping notifying ATTEMPT_ADDED\");\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt,\n          boolean shouldNotifyAttemptAdded) {\n    SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    if (shouldNotifyAttemptAdded) {\n      rmContext.getDispatcher().getEventHandler().handle(\n          new RMAppAttemptEvent(appAttemptId,\n              RMAppAttemptEventType.ATTEMPT_ADDED));\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping notifying ATTEMPT_ADDED\");\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 10:32 PM",
      "commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/05/14 11:41 PM",
      "commitNameOld": "84dfae2f8a1c787380c65bf8de59bfd2d65901e3",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 7.95,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n           boolean transferStateFromPreviousAttempt) {\n-    SchedulerApplication application \u003d\n+    SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n     metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.ATTEMPT_ADDED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt) {\n    SchedulerApplication\u003cFiCaSchedulerApp\u003e application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "84dfae2f8a1c787380c65bf8de59bfd2d65901e3": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1986. In Fifo Scheduler, node heartbeat in between creating app and attempt causes NPE (Hong Zhiguo via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594476 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 11:41 PM",
      "commitName": "84dfae2f8a1c787380c65bf8de59bfd2d65901e3",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "12/03/14 7:36 AM",
      "commitNameOld": "4ce0e4bf2e91278bbc33f4a1c44c7929627b5d6e",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 62.67,
      "commitsBetweenForRepo": 408,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt) {\n    SchedulerApplication application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[public, synchronized]"
      }
    },
    "f677175f35f68bde9df72e648dffacbd31cfd620": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1166. Fixed app-specific and attempt-specific QueueMetrics to be triggered by accordingly app event and attempt event. Contributed by Zhijie Shen\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557296 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 5:15 PM",
      "commitName": "f677175f35f68bde9df72e648dffacbd31cfd620",
      "commitAuthor": "Jian He",
      "commitDateOld": "10/01/14 7:04 AM",
      "commitNameOld": "1393581bceda234c88cafec00dbfc0ef2a402e83",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.42,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n       addApplicationAttempt(ApplicationAttemptId appAttemptId,\n           boolean transferStateFromPreviousAttempt) {\n     SchedulerApplication application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n \n     if (transferStateFromPreviousAttempt) {\n       schedulerApp.transferStateFromPreviousAttempt(application\n         .getCurrentAppAttempt());\n     }\n     application.setCurrentAppAttempt(schedulerApp);\n \n-    metrics.submitApp(user, appAttemptId.getAttemptId());\n+    metrics.submitAppAttempt(user);\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n         + \" to scheduler from user \" + application.getUser());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.ATTEMPT_ADDED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt) {\n    SchedulerApplication application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitAppAttempt(user);\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "1393581bceda234c88cafec00dbfc0ef2a402e83": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 7:04 AM",
      "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/01/14 7:04 AM",
          "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/01/14 12:19 PM",
          "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.78,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,23 @@\n-  private synchronized void addApplicationAttempt(\n-      ApplicationAttemptId appAttemptId) {\n+      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n+          boolean transferStateFromPreviousAttempt) {\n     SchedulerApplication application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n-    appAttempts.put(appAttemptId, schedulerApp);\n+\n+    if (transferStateFromPreviousAttempt) {\n+      schedulerApp.transferStateFromPreviousAttempt(application\n+        .getCurrentAppAttempt());\n+    }\n+    application.setCurrentAppAttempt(schedulerApp);\n+\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n-        + \" to scheduler from user \" + application.getUser()\n-        + \", currently active: \" + appAttempts.size());\n+        + \" to scheduler from user \" + application.getUser());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.ATTEMPT_ADDED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt) {\n    SchedulerApplication application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {
            "oldValue": "[appAttemptId-ApplicationAttemptId]",
            "newValue": "[appAttemptId-ApplicationAttemptId, transferStateFromPreviousAttempt-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/01/14 7:04 AM",
          "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/01/14 12:19 PM",
          "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.78,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,23 @@\n-  private synchronized void addApplicationAttempt(\n-      ApplicationAttemptId appAttemptId) {\n+      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n+          boolean transferStateFromPreviousAttempt) {\n     SchedulerApplication application \u003d\n         applications.get(appAttemptId.getApplicationId());\n     String user \u003d application.getUser();\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d\n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n           activeUsersManager, this.rmContext);\n-    appAttempts.put(appAttemptId, schedulerApp);\n+\n+    if (transferStateFromPreviousAttempt) {\n+      schedulerApp.transferStateFromPreviousAttempt(application\n+        .getCurrentAppAttempt());\n+    }\n+    application.setCurrentAppAttempt(schedulerApp);\n+\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Added Application Attempt \" + appAttemptId\n-        + \" to scheduler from user \" + application.getUser()\n-        + \", currently active: \" + appAttempts.size());\n+        + \" to scheduler from user \" + application.getUser());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.ATTEMPT_ADDED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "      addApplicationAttempt(ApplicationAttemptId appAttemptId,\n          boolean transferStateFromPreviousAttempt) {\n    SchedulerApplication application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n\n    if (transferStateFromPreviousAttempt) {\n      schedulerApp.transferStateFromPreviousAttempt(application\n        .getCurrentAppAttempt());\n    }\n    application.setCurrentAppAttempt(schedulerApp);\n\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:19 PM",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:19 PM",
          "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/12/13 5:44 PM",
          "commitNameOld": "28db28d491b4e3e3ddf440db4cebab8c0ad6b7f3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 20.77,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,18 @@\n-  private synchronized void addApplicationAttempt(ApplicationAttemptId appAttemptId,\n-      String user) {\n+  private synchronized void addApplicationAttempt(\n+      ApplicationAttemptId appAttemptId) {\n+    SchedulerApplication application \u003d\n+        applications.get(appAttemptId.getApplicationId());\n+    String user \u003d application.getUser();\n     // TODO: Fix store\n-    FiCaSchedulerApp schedulerApp \u003d \n-        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n-            this.rmContext);\n-    applications.put(appAttemptId, schedulerApp);\n+    FiCaSchedulerApp schedulerApp \u003d\n+        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n+          activeUsersManager, this.rmContext);\n+    appAttempts.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n-    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n-        \" from \" + user + \", currently active: \" + applications.size());\n+    LOG.info(\"Added Application Attempt \" + appAttemptId\n+        + \" to scheduler from user \" + application.getUser()\n+        + \", currently active: \" + appAttempts.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n-            RMAppAttemptEventType.APP_ACCEPTED));\n+            RMAppAttemptEventType.ATTEMPT_ADDED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void addApplicationAttempt(\n      ApplicationAttemptId appAttemptId) {\n    SchedulerApplication application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n    appAttempts.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser()\n        + \", currently active: \" + appAttempts.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {
            "oldValue": "[appAttemptId-ApplicationAttemptId, user-String]",
            "newValue": "[appAttemptId-ApplicationAttemptId]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:19 PM",
          "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/12/13 5:44 PM",
          "commitNameOld": "28db28d491b4e3e3ddf440db4cebab8c0ad6b7f3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 20.77,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,18 @@\n-  private synchronized void addApplicationAttempt(ApplicationAttemptId appAttemptId,\n-      String user) {\n+  private synchronized void addApplicationAttempt(\n+      ApplicationAttemptId appAttemptId) {\n+    SchedulerApplication application \u003d\n+        applications.get(appAttemptId.getApplicationId());\n+    String user \u003d application.getUser();\n     // TODO: Fix store\n-    FiCaSchedulerApp schedulerApp \u003d \n-        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n-            this.rmContext);\n-    applications.put(appAttemptId, schedulerApp);\n+    FiCaSchedulerApp schedulerApp \u003d\n+        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n+          activeUsersManager, this.rmContext);\n+    appAttempts.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n-    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n-        \" from \" + user + \", currently active: \" + applications.size());\n+    LOG.info(\"Added Application Attempt \" + appAttemptId\n+        + \" to scheduler from user \" + application.getUser()\n+        + \", currently active: \" + appAttempts.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n-            RMAppAttemptEventType.APP_ACCEPTED));\n+            RMAppAttemptEventType.ATTEMPT_ADDED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void addApplicationAttempt(\n      ApplicationAttemptId appAttemptId) {\n    SchedulerApplication application \u003d\n        applications.get(appAttemptId.getApplicationId());\n    String user \u003d application.getUser();\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d\n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE,\n          activeUsersManager, this.rmContext);\n    appAttempts.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Added Application Attempt \" + appAttemptId\n        + \" to scheduler from user \" + application.getUser()\n        + \", currently active: \" + appAttempts.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.ATTEMPT_ADDED));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "28db28d491b4e3e3ddf440db4cebab8c0ad6b7f3": {
      "type": "Yrename",
      "commitMessage": "YARN-1311. Fixed app specific scheduler-events\u0027 names to be app-attempt based. Contributed by Vinod Kumar Vavilapalli\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550613 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/13 5:44 PM",
      "commitName": "28db28d491b4e3e3ddf440db4cebab8c0ad6b7f3",
      "commitAuthor": "Jian He",
      "commitDateOld": "12/12/13 3:45 PM",
      "commitNameOld": "791e43c53b0be23b03d9b3f7d45a0df615eb90da",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n+  private synchronized void addApplicationAttempt(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d \n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n             this.rmContext);\n     applications.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplicationAttempt(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d \n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldValue": "addApplication",
        "newValue": "addApplicationAttempt"
      }
    },
    "791e43c53b0be23b03d9b3f7d45a0df615eb90da": {
      "type": "Yrename",
      "commitMessage": "Reverting YARN-1311. Fixed app specific scheduler-events\u0027 names to be app-attempt based. Contributed by Vinod Kumar Vavilapalli\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550594 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/13 3:45 PM",
      "commitName": "791e43c53b0be23b03d9b3f7d45a0df615eb90da",
      "commitAuthor": "Jian He",
      "commitDateOld": "12/12/13 3:07 PM",
      "commitNameOld": "38c32ed239d45051f5e4a51e3f29b201c17a4288",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  private synchronized void addApplicationAttempt(ApplicationAttemptId appAttemptId,\n+  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d \n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n             this.rmContext);\n     applications.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d \n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldValue": "addApplicationAttempt",
        "newValue": "addApplication"
      }
    },
    "38c32ed239d45051f5e4a51e3f29b201c17a4288": {
      "type": "Yrename",
      "commitMessage": "YARN-1311. Fixed app specific scheduler-events\u0027 names to be app-attempt based. Contributed by Vinod Kumar Vavilapalli\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550579 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/13 3:07 PM",
      "commitName": "38c32ed239d45051f5e4a51e3f29b201c17a4288",
      "commitAuthor": "Jian He",
      "commitDateOld": "07/12/13 7:09 PM",
      "commitNameOld": "e1d3670f4c233696dc673c37b578ce46b44a6876",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 4.83,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n+  private synchronized void addApplicationAttempt(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d \n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n             this.rmContext);\n     applications.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplicationAttempt(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d \n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldValue": "addApplication",
        "newValue": "addApplicationAttempt"
      }
    },
    "1943fdbec613715f3cdc3ca60cbd273115f28299": {
      "type": "Ybodychange",
      "commitMessage": "YARN-229. Remove old unused RM recovery code. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/12 5:56 PM",
      "commitName": "1943fdbec613715f3cdc3ca60cbd273115f28299",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "26/09/12 8:43 PM",
      "commitNameOld": "40062e1aaa09628c6f45d20298fd66d799fd1f3f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 62.93,
      "commitsBetweenForRepo": 338,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n     FiCaSchedulerApp schedulerApp \u003d \n         new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n-            this.rmContext, null);\n+            this.rmContext);\n     applications.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d \n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d \n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/07/12 1:53 PM",
      "commitNameOld": "17de78a43e8d010f3df91dc5a1a40d74b60dfb8c",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 3.2,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n-    SchedulerApp schedulerApp \u003d \n-        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n+    FiCaSchedulerApp schedulerApp \u003d \n+        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n             this.rmContext, null);\n     applications.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    FiCaSchedulerApp schedulerApp \u003d \n        new FiCaSchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "d74bec2f883b562d377cc564ca86473c498a618a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3870. Invalid App Metrics (Bhallamudi Venkata Siva Kamesh via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1341160 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/12 12:15 PM",
      "commitName": "d74bec2f883b562d377cc564ca86473c498a618a",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "23/04/12 8:26 AM",
      "commitNameOld": "1eb1d0ae4feca0bd234cd54158cbf9d19289e83e",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 28.16,
      "commitsBetweenForRepo": 182,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n   private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n     SchedulerApp schedulerApp \u003d \n         new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n             this.rmContext, null);\n     applications.put(appAttemptId, schedulerApp);\n-    if (appAttemptId.getAttemptId() \u003d\u003d 1) {\n-      metrics.submitApp(user);\n-    }\n+    metrics.submitApp(user, appAttemptId.getAttemptId());\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    SchedulerApp schedulerApp \u003d \n        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user, appAttemptId.getAttemptId());\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "72d34e6594371112bb4e9835817b382bd4161a6d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3708. Metrics: Incorrect Apps Submitted Count (Bhallamudi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1239954 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/02/12 4:33 PM",
      "commitName": "72d34e6594371112bb4e9835817b382bd4161a6d",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "27/01/12 5:32 PM",
      "commitNameOld": "5262b7ba4d018562d4e7d60772af4ddc3d770a23",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.96,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n     SchedulerApp schedulerApp \u003d \n         new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n             this.rmContext, null);\n     applications.put(appAttemptId, schedulerApp);\n-    metrics.submitApp(user);\n+    if (appAttemptId.getAttemptId() \u003d\u003d 1) {\n+      metrics.submitApp(user);\n+    }\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    SchedulerApp schedulerApp \u003d \n        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    if (appAttemptId.getAttemptId() \u003d\u003d 1) {\n      metrics.submitApp(user);\n    }\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "5262b7ba4d018562d4e7d60772af4ddc3d770a23": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3732. Modified CapacityScheduler to use only users with pending requests for computing user-limits. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236953 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/12 5:32 PM",
      "commitName": "5262b7ba4d018562d4e7d60772af4ddc3d770a23",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/01/12 3:31 PM",
      "commitNameOld": "21c9116309d8482e7e28522cd7386e65415b15e9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.08,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n       String user) {\n     // TODO: Fix store\n     SchedulerApp schedulerApp \u003d \n-        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, \n+        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n             this.rmContext, null);\n     applications.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user);\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    SchedulerApp schedulerApp \u003d \n        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, activeUsersManager,\n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user);\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "312a7e71001d55f88781e56b331ab1b40a72a980": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-3078. Ensure MapReduce AM reports progress correctly for displaying on the RM Web-UI. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/11 12:31 AM",
      "commitName": "312a7e71001d55f88781e56b331ab1b40a72a980",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "26/09/11 6:25 AM",
      "commitNameOld": "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.75,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n-      String queueName, String user) {\n+      String user) {\n     // TODO: Fix store\n     SchedulerApp schedulerApp \u003d \n         new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, \n             this.rmContext, null);\n     applications.put(appAttemptId, schedulerApp);\n     metrics.submitApp(user);\n     LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n         \" from \" + user + \", currently active: \" + applications.size());\n     rmContext.getDispatcher().getEventHandler().handle(\n         new RMAppAttemptEvent(appAttemptId,\n             RMAppAttemptEventType.APP_ACCEPTED));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String user) {\n    // TODO: Fix store\n    SchedulerApp schedulerApp \u003d \n        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, \n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user);\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldValue": "[appAttemptId-ApplicationAttemptId, queueName-String, user-String]",
        "newValue": "[appAttemptId-ApplicationAttemptId, user-String]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String queueName, String user) {\n    // TODO: Fix store\n    SchedulerApp schedulerApp \u003d \n        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, \n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user);\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n+      String queueName, String user) {\n+    // TODO: Fix store\n+    SchedulerApp schedulerApp \u003d \n+        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, \n+            this.rmContext, null);\n+    applications.put(appAttemptId, schedulerApp);\n+    metrics.submitApp(user);\n+    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n+        \" from \" + user + \", currently active: \" + applications.size());\n+    rmContext.getDispatcher().getEventHandler().handle(\n+        new RMAppAttemptEvent(appAttemptId,\n+            RMAppAttemptEventType.APP_ACCEPTED));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(ApplicationAttemptId appAttemptId,\n      String queueName, String user) {\n    // TODO: Fix store\n    SchedulerApp schedulerApp \u003d \n        new SchedulerApp(appAttemptId, user, DEFAULT_QUEUE, \n            this.rmContext, null);\n    applications.put(appAttemptId, schedulerApp);\n    metrics.submitApp(user);\n    LOG.info(\"Application Submission: \" + appAttemptId.getApplicationId() + \n        \" from \" + user + \", currently active: \" + applications.size());\n    rmContext.getDispatcher().getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId,\n            RMAppAttemptEventType.APP_ACCEPTED));\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
    }
  }
}