{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMStateStore.java",
  "functionName": "checkVersion",
  "functionId": "checkVersion",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
  "functionStartLine": 864,
  "functionEndLine": 882,
  "numCommitsSeen": 81,
  "timeTaken": 2015,
  "changeHistory": [
    "808cba3821d5bc4267f69d14220757f01cd55715",
    "1d6e178144e9e3915ceea92d8c5de8b14cd02714",
    "6369c8d81972a9a0b6ef41f4508fcb60d34e3d78"
  ],
  "changeHistoryShort": {
    "808cba3821d5bc4267f69d14220757f01cd55715": "Ybodychange",
    "1d6e178144e9e3915ceea92d8c5de8b14cd02714": "Ybodychange",
    "6369c8d81972a9a0b6ef41f4508fcb60d34e3d78": "Yintroduced"
  },
  "changeHistoryDetails": {
    "808cba3821d5bc4267f69d14220757f01cd55715": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2952. Fixed incorrect version check in StateStore. Contributed by Rohith Sharmaks\n",
      "commitDate": "19/12/14 4:56 PM",
      "commitName": "808cba3821d5bc4267f69d14220757f01cd55715",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/12/14 10:54 AM",
      "commitNameOld": "52bcefca8bb13d3757009f1f08203e7dca3b1e16",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 17.25,
      "commitsBetweenForRepo": 146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void checkVersion() throws Exception {\n     Version loadedVersion \u003d loadVersion();\n     LOG.info(\"Loaded RM state version info \" + loadedVersion);\n     if (loadedVersion !\u003d null \u0026\u0026 loadedVersion.equals(getCurrentVersion())) {\n       return;\n     }\n-    // if there is no version info, treat it as 1.0;\n+    // if there is no version info, treat it as CURRENT_VERSION_INFO;\n     if (loadedVersion \u003d\u003d null) {\n-      loadedVersion \u003d Version.newInstance(1, 0);\n+      loadedVersion \u003d getCurrentVersion();\n     }\n     if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n       LOG.info(\"Storing RM state version info \" + getCurrentVersion());\n       storeVersion();\n     } else {\n       throw new RMStateVersionIncompatibleException(\n         \"Expecting RM state version \" + getCurrentVersion()\n             + \", but loading version \" + loadedVersion);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkVersion() throws Exception {\n    Version loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded RM state version info \" + loadedVersion);\n    if (loadedVersion !\u003d null \u0026\u0026 loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    // if there is no version info, treat it as CURRENT_VERSION_INFO;\n    if (loadedVersion \u003d\u003d null) {\n      loadedVersion \u003d getCurrentVersion();\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing RM state version info \" + getCurrentVersion());\n      storeVersion();\n    } else {\n      throw new RMStateVersionIncompatibleException(\n        \"Expecting RM state version \" + getCurrentVersion()\n            + \", but loading version \" + loadedVersion);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "1d6e178144e9e3915ceea92d8c5de8b14cd02714": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2347. Consolidated RMStateVersion and NMDBSchemaVersion into Version in yarn-server-common. Contributed by Junping Du.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1614838 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 2:27 AM",
      "commitName": "1d6e178144e9e3915ceea92d8c5de8b14cd02714",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "25/07/14 1:42 PM",
      "commitNameOld": "d4fec3493351c619a0278929ae2d5c8cd67cbfbe",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 5.53,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void checkVersion() throws Exception {\n-    RMStateVersion loadedVersion \u003d loadVersion();\n+    Version loadedVersion \u003d loadVersion();\n     LOG.info(\"Loaded RM state version info \" + loadedVersion);\n     if (loadedVersion !\u003d null \u0026\u0026 loadedVersion.equals(getCurrentVersion())) {\n       return;\n     }\n     // if there is no version info, treat it as 1.0;\n     if (loadedVersion \u003d\u003d null) {\n-      loadedVersion \u003d RMStateVersion.newInstance(1, 0);\n+      loadedVersion \u003d Version.newInstance(1, 0);\n     }\n     if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n       LOG.info(\"Storing RM state version info \" + getCurrentVersion());\n       storeVersion();\n     } else {\n       throw new RMStateVersionIncompatibleException(\n         \"Expecting RM state version \" + getCurrentVersion()\n             + \", but loading version \" + loadedVersion);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkVersion() throws Exception {\n    Version loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded RM state version info \" + loadedVersion);\n    if (loadedVersion !\u003d null \u0026\u0026 loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    // if there is no version info, treat it as 1.0;\n    if (loadedVersion \u003d\u003d null) {\n      loadedVersion \u003d Version.newInstance(1, 0);\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing RM state version info \" + getCurrentVersion());\n      storeVersion();\n    } else {\n      throw new RMStateVersionIncompatibleException(\n        \"Expecting RM state version \" + getCurrentVersion()\n            + \", but loading version \" + loadedVersion);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "6369c8d81972a9a0b6ef41f4508fcb60d34e3d78": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1239. Modified ResourceManager state-store implementations to start storing version numbers. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/13 3:22 PM",
      "commitName": "6369c8d81972a9a0b6ef41f4508fcb60d34e3d78",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,19 @@\n+  public void checkVersion() throws Exception {\n+    RMStateVersion loadedVersion \u003d loadVersion();\n+    LOG.info(\"Loaded RM state version info \" + loadedVersion);\n+    if (loadedVersion !\u003d null \u0026\u0026 loadedVersion.equals(getCurrentVersion())) {\n+      return;\n+    }\n+    // if there is no version info, treat it as 1.0;\n+    if (loadedVersion \u003d\u003d null) {\n+      loadedVersion \u003d RMStateVersion.newInstance(1, 0);\n+    }\n+    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n+      LOG.info(\"Storing RM state version info \" + getCurrentVersion());\n+      storeVersion();\n+    } else {\n+      throw new RMStateVersionIncompatibleException(\n+        \"Expecting RM state version \" + getCurrentVersion()\n+            + \", but loading version \" + loadedVersion);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkVersion() throws Exception {\n    RMStateVersion loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded RM state version info \" + loadedVersion);\n    if (loadedVersion !\u003d null \u0026\u0026 loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    // if there is no version info, treat it as 1.0;\n    if (loadedVersion \u003d\u003d null) {\n      loadedVersion \u003d RMStateVersion.newInstance(1, 0);\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing RM state version info \" + getCurrentVersion());\n      storeVersion();\n    } else {\n      throw new RMStateVersionIncompatibleException(\n        \"Expecting RM state version \" + getCurrentVersion()\n            + \", but loading version \" + loadedVersion);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java"
    }
  }
}