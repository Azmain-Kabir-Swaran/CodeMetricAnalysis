{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegistryDNS.java",
  "functionName": "configureZone",
  "functionId": "configureZone___zoneName-Name__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
  "functionStartLine": 552,
  "functionEndLine": 577,
  "numCommitsSeen": 15,
  "timeTaken": 1375,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "f934f62fc71b4776e88f86d4254de0ea12147511"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "f934f62fc71b4776e88f86d4254de0ea12147511": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Zone configureZone(Name zoneName, Configuration conf)\n      throws IOException {\n    bindHost \u003d Name.fromString(\n        InetAddress.getLocalHost().getCanonicalHostName() + \".\");\n    SOARecord soaRecord \u003d new SOARecord(zoneName, DClass.IN, ttl,\n        bindHost,\n        bindHost, getSerial(), 86000, 7200,\n        1209600, 600);\n    NSRecord nsRecord \u003d new NSRecord(zoneName, DClass.IN, ttl, bindHost);\n    Zone zone \u003d zones.get(zoneName);\n    if (zone \u003d\u003d null) {\n      zone \u003d new SecureableZone(zoneName, new Record[] {soaRecord, nsRecord});\n    }\n\n    try {\n      enableDNSSECIfNecessary(zone, conf, soaRecord, nsRecord);\n    } catch (NoSuchAlgorithmException e) {\n      throw new IOException(e);\n    } catch (InvalidKeySpecException e) {\n      throw new IOException(e);\n    } catch (DNSSEC.DNSSECException e) {\n      throw new IOException(e);\n    }\n\n    return zone;\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
      }
    },
    "f934f62fc71b4776e88f86d4254de0ea12147511": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5218. Initial core change for DNS for YARN. Contributed by Jonathan Maron\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f934f62fc71b4776e88f86d4254de0ea12147511",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,26 @@\n+  private Zone configureZone(Name zoneName, Configuration conf)\n+      throws IOException {\n+    bindHost \u003d Name.fromString(\n+        InetAddress.getLocalHost().getCanonicalHostName() + \".\");\n+    SOARecord soaRecord \u003d new SOARecord(zoneName, DClass.IN, ttl,\n+        bindHost,\n+        bindHost, getSerial(), 86000, 7200,\n+        1209600, 600);\n+    NSRecord nsRecord \u003d new NSRecord(zoneName, DClass.IN, ttl, bindHost);\n+    Zone zone \u003d zones.get(zoneName);\n+    if (zone \u003d\u003d null) {\n+      zone \u003d new SecureableZone(zoneName, new Record[] {soaRecord, nsRecord});\n+    }\n+\n+    try {\n+      enableDNSSECIfNecessary(zone, conf, soaRecord, nsRecord);\n+    } catch (NoSuchAlgorithmException e) {\n+      throw new IOException(e);\n+    } catch (InvalidKeySpecException e) {\n+      throw new IOException(e);\n+    } catch (DNSSEC.DNSSECException e) {\n+      throw new IOException(e);\n+    }\n+\n+    return zone;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Zone configureZone(Name zoneName, Configuration conf)\n      throws IOException {\n    bindHost \u003d Name.fromString(\n        InetAddress.getLocalHost().getCanonicalHostName() + \".\");\n    SOARecord soaRecord \u003d new SOARecord(zoneName, DClass.IN, ttl,\n        bindHost,\n        bindHost, getSerial(), 86000, 7200,\n        1209600, 600);\n    NSRecord nsRecord \u003d new NSRecord(zoneName, DClass.IN, ttl, bindHost);\n    Zone zone \u003d zones.get(zoneName);\n    if (zone \u003d\u003d null) {\n      zone \u003d new SecureableZone(zoneName, new Record[] {soaRecord, nsRecord});\n    }\n\n    try {\n      enableDNSSECIfNecessary(zone, conf, soaRecord, nsRecord);\n    } catch (NoSuchAlgorithmException e) {\n      throw new IOException(e);\n    } catch (InvalidKeySpecException e) {\n      throw new IOException(e);\n    } catch (DNSSEC.DNSSECException e) {\n      throw new IOException(e);\n    }\n\n    return zone;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
    }
  }
}