{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Delete.java",
  "functionName": "canBeSafelyDeleted",
  "functionId": "canBeSafelyDeleted___item-PathData",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Delete.java",
  "functionStartLine": 128,
  "functionEndLine": 148,
  "numCommitsSeen": 13,
  "timeTaken": 813,
  "changeHistory": [
    "e1feaf6db03451068c660a863926032b35a569f8"
  ],
  "changeHistoryShort": {
    "e1feaf6db03451068c660a863926032b35a569f8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1feaf6db03451068c660a863926032b35a569f8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12358. Add -safely flag to rm to prompt when deleting many files. Contributed by Xiaoyu Yao.\n",
      "commitDate": "04/09/15 1:42 PM",
      "commitName": "e1feaf6db03451068c660a863926032b35a569f8",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,21 @@\n+    private boolean canBeSafelyDeleted(PathData item)\n+        throws IOException {\n+      boolean shouldDelete \u003d true;\n+      if (safeDelete) {\n+        final long deleteLimit \u003d getConf().getLong(\n+            HADOOP_SHELL_SAFELY_DELETE_LIMIT_NUM_FILES,\n+            HADOOP_SHELL_SAFELY_DELETE_LIMIT_NUM_FILES_DEFAULT);\n+        if (deleteLimit \u003e 0) {\n+          ContentSummary cs \u003d item.fs.getContentSummary(item.path);\n+          final long numFiles \u003d cs.getFileCount();\n+          if (numFiles \u003e deleteLimit) {\n+            if (!ToolRunner.confirmPrompt(\"Proceed deleting \" + numFiles +\n+                \" files?\")) {\n+              System.err.println(\"Delete aborted at user request.\\n\");\n+              shouldDelete \u003d false;\n+            }\n+          }\n+        }\n+      }\n+      return shouldDelete;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean canBeSafelyDeleted(PathData item)\n        throws IOException {\n      boolean shouldDelete \u003d true;\n      if (safeDelete) {\n        final long deleteLimit \u003d getConf().getLong(\n            HADOOP_SHELL_SAFELY_DELETE_LIMIT_NUM_FILES,\n            HADOOP_SHELL_SAFELY_DELETE_LIMIT_NUM_FILES_DEFAULT);\n        if (deleteLimit \u003e 0) {\n          ContentSummary cs \u003d item.fs.getContentSummary(item.path);\n          final long numFiles \u003d cs.getFileCount();\n          if (numFiles \u003e deleteLimit) {\n            if (!ToolRunner.confirmPrompt(\"Proceed deleting \" + numFiles +\n                \" files?\")) {\n              System.err.println(\"Delete aborted at user request.\\n\");\n              shouldDelete \u003d false;\n            }\n          }\n        }\n      }\n      return shouldDelete;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Delete.java"
    }
  }
}