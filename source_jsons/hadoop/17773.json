{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StateStoreFileBaseImpl.java",
  "functionName": "remove",
  "functionId": "remove___clazz-Class__T____query-Query__T__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/driver/impl/StateStoreFileBaseImpl.java",
  "functionStartLine": 387,
  "functionEndLine": 433,
  "numCommitsSeen": 5,
  "timeTaken": 1752,
  "changeHistory": [
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "76be6cbf6c33f866794f27ca2560ca7c7b2fa0e7",
    "4bf877b03f0e01c4bcedc689c66689701e62b560"
  ],
  "changeHistoryShort": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "76be6cbf6c33f866794f27ca2560ca7c7b2fa0e7": "Ybodychange",
    "4bf877b03f0e01c4bcedc689c66689701e62b560": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public \u003cT extends BaseRecord\u003e int remove(Class\u003cT\u003e clazz, Query\u003cT\u003e query)\n      throws StateStoreUnavailableException {\n    verifyDriverReady();\n\n    if (query \u003d\u003d null) {\n      return 0;\n    }\n\n    long start \u003d Time.monotonicNow();\n    StateStoreMetrics metrics \u003d getMetrics();\n    int removed \u003d 0;\n    // Get the current records\n    try {\n      final QueryResult\u003cT\u003e result \u003d get(clazz);\n      final List\u003cT\u003e existingRecords \u003d result.getRecords();\n      // Write all of the existing records except those to be removed\n      final List\u003cT\u003e recordsToRemove \u003d filterMultiple(query, existingRecords);\n      boolean success \u003d true;\n      for (T recordToRemove : recordsToRemove) {\n        String path \u003d getPathForClass(clazz);\n        String primaryKey \u003d getPrimaryKey(recordToRemove);\n        String recordToRemovePath \u003d path + \"/\" + primaryKey;\n        if (remove(recordToRemovePath)) {\n          removed++;\n        } else {\n          LOG.error(\"Cannot remove record {}\", recordToRemovePath);\n          success \u003d false;\n        }\n      }\n      if (!success) {\n        LOG.error(\"Cannot remove records {} query {}\", clazz, query);\n        if (metrics !\u003d null) {\n          metrics.addFailure(monotonicNow() - start);\n        }\n      }\n    } catch (IOException e) {\n      LOG.error(\"Cannot remove records {} query {}\", clazz, query, e);\n      if (metrics !\u003d null) {\n        metrics.addFailure(monotonicNow() - start);\n      }\n    }\n\n    if (removed \u003e 0 \u0026\u0026 metrics !\u003d null) {\n      metrics.addRemove(monotonicNow() - start);\n    }\n    return removed;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/driver/impl/StateStoreFileBaseImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/driver/impl/StateStoreFileBaseImpl.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/driver/impl/StateStoreFileBaseImpl.java"
      }
    },
    "76be6cbf6c33f866794f27ca2560ca7c7b2fa0e7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12773. RBF: Improve State Store FS implementation. Contributed by Inigo Goiri.\n",
      "commitDate": "13/03/18 8:20 PM",
      "commitName": "76be6cbf6c33f866794f27ca2560ca7c7b2fa0e7",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "29/11/17 9:43 AM",
      "commitNameOld": "301641811d93ac22dc6fe1a05f18c1f266cc5e54",
      "commitAuthorOld": "Wei Yan",
      "daysBetweenCommits": 104.4,
      "commitsBetweenForRepo": 654,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,47 @@\n   public \u003cT extends BaseRecord\u003e int remove(Class\u003cT\u003e clazz, Query\u003cT\u003e query)\n       throws StateStoreUnavailableException {\n     verifyDriverReady();\n \n     if (query \u003d\u003d null) {\n       return 0;\n     }\n \n+    long start \u003d Time.monotonicNow();\n+    StateStoreMetrics metrics \u003d getMetrics();\n     int removed \u003d 0;\n     // Get the current records\n     try {\n       final QueryResult\u003cT\u003e result \u003d get(clazz);\n       final List\u003cT\u003e existingRecords \u003d result.getRecords();\n       // Write all of the existing records except those to be removed\n       final List\u003cT\u003e recordsToRemove \u003d filterMultiple(query, existingRecords);\n-      removed \u003d recordsToRemove.size();\n-      final List\u003cT\u003e newRecords \u003d new LinkedList\u003c\u003e();\n-      for (T record : existingRecords) {\n-        if (!recordsToRemove.contains(record)) {\n-          newRecords.add(record);\n+      boolean success \u003d true;\n+      for (T recordToRemove : recordsToRemove) {\n+        String path \u003d getPathForClass(clazz);\n+        String primaryKey \u003d getPrimaryKey(recordToRemove);\n+        String recordToRemovePath \u003d path + \"/\" + primaryKey;\n+        if (remove(recordToRemovePath)) {\n+          removed++;\n+        } else {\n+          LOG.error(\"Cannot remove record {}\", recordToRemovePath);\n+          success \u003d false;\n         }\n       }\n-      if (!writeAll(newRecords, clazz)) {\n-        throw new IOException(\n-            \"Cannot remove record \" + clazz + \" query \" + query);\n+      if (!success) {\n+        LOG.error(\"Cannot remove records {} query {}\", clazz, query);\n+        if (metrics !\u003d null) {\n+          metrics.addFailure(monotonicNow() - start);\n+        }\n       }\n     } catch (IOException e) {\n       LOG.error(\"Cannot remove records {} query {}\", clazz, query, e);\n+      if (metrics !\u003d null) {\n+        metrics.addFailure(monotonicNow() - start);\n+      }\n     }\n \n+    if (removed \u003e 0 \u0026\u0026 metrics !\u003d null) {\n+      metrics.addRemove(monotonicNow() - start);\n+    }\n     return removed;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT extends BaseRecord\u003e int remove(Class\u003cT\u003e clazz, Query\u003cT\u003e query)\n      throws StateStoreUnavailableException {\n    verifyDriverReady();\n\n    if (query \u003d\u003d null) {\n      return 0;\n    }\n\n    long start \u003d Time.monotonicNow();\n    StateStoreMetrics metrics \u003d getMetrics();\n    int removed \u003d 0;\n    // Get the current records\n    try {\n      final QueryResult\u003cT\u003e result \u003d get(clazz);\n      final List\u003cT\u003e existingRecords \u003d result.getRecords();\n      // Write all of the existing records except those to be removed\n      final List\u003cT\u003e recordsToRemove \u003d filterMultiple(query, existingRecords);\n      boolean success \u003d true;\n      for (T recordToRemove : recordsToRemove) {\n        String path \u003d getPathForClass(clazz);\n        String primaryKey \u003d getPrimaryKey(recordToRemove);\n        String recordToRemovePath \u003d path + \"/\" + primaryKey;\n        if (remove(recordToRemovePath)) {\n          removed++;\n        } else {\n          LOG.error(\"Cannot remove record {}\", recordToRemovePath);\n          success \u003d false;\n        }\n      }\n      if (!success) {\n        LOG.error(\"Cannot remove records {} query {}\", clazz, query);\n        if (metrics !\u003d null) {\n          metrics.addFailure(monotonicNow() - start);\n        }\n      }\n    } catch (IOException e) {\n      LOG.error(\"Cannot remove records {} query {}\", clazz, query, e);\n      if (metrics !\u003d null) {\n        metrics.addFailure(monotonicNow() - start);\n      }\n    }\n\n    if (removed \u003e 0 \u0026\u0026 metrics !\u003d null) {\n      metrics.addRemove(monotonicNow() - start);\n    }\n    return removed;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/driver/impl/StateStoreFileBaseImpl.java",
      "extendedDetails": {}
    },
    "4bf877b03f0e01c4bcedc689c66689701e62b560": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10630. Federation State Store FS Implementation. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit c6e0bd640cdaf83a660fa050809cad6f1d4c6f4d)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "4bf877b03f0e01c4bcedc689c66689701e62b560",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,32 @@\n+  public \u003cT extends BaseRecord\u003e int remove(Class\u003cT\u003e clazz, Query\u003cT\u003e query)\n+      throws StateStoreUnavailableException {\n+    verifyDriverReady();\n+\n+    if (query \u003d\u003d null) {\n+      return 0;\n+    }\n+\n+    int removed \u003d 0;\n+    // Get the current records\n+    try {\n+      final QueryResult\u003cT\u003e result \u003d get(clazz);\n+      final List\u003cT\u003e existingRecords \u003d result.getRecords();\n+      // Write all of the existing records except those to be removed\n+      final List\u003cT\u003e recordsToRemove \u003d filterMultiple(query, existingRecords);\n+      removed \u003d recordsToRemove.size();\n+      final List\u003cT\u003e newRecords \u003d new LinkedList\u003c\u003e();\n+      for (T record : existingRecords) {\n+        if (!recordsToRemove.contains(record)) {\n+          newRecords.add(record);\n+        }\n+      }\n+      if (!writeAll(newRecords, clazz)) {\n+        throw new IOException(\n+            \"Cannot remove record \" + clazz + \" query \" + query);\n+      }\n+    } catch (IOException e) {\n+      LOG.error(\"Cannot remove records {} query {}\", clazz, query, e);\n+    }\n+\n+    return removed;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT extends BaseRecord\u003e int remove(Class\u003cT\u003e clazz, Query\u003cT\u003e query)\n      throws StateStoreUnavailableException {\n    verifyDriverReady();\n\n    if (query \u003d\u003d null) {\n      return 0;\n    }\n\n    int removed \u003d 0;\n    // Get the current records\n    try {\n      final QueryResult\u003cT\u003e result \u003d get(clazz);\n      final List\u003cT\u003e existingRecords \u003d result.getRecords();\n      // Write all of the existing records except those to be removed\n      final List\u003cT\u003e recordsToRemove \u003d filterMultiple(query, existingRecords);\n      removed \u003d recordsToRemove.size();\n      final List\u003cT\u003e newRecords \u003d new LinkedList\u003c\u003e();\n      for (T record : existingRecords) {\n        if (!recordsToRemove.contains(record)) {\n          newRecords.add(record);\n        }\n      }\n      if (!writeAll(newRecords, clazz)) {\n        throw new IOException(\n            \"Cannot remove record \" + clazz + \" query \" + query);\n      }\n    } catch (IOException e) {\n      LOG.error(\"Cannot remove records {} query {}\", clazz, query, e);\n    }\n\n    return removed;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/driver/impl/StateStoreFileBaseImpl.java"
    }
  }
}