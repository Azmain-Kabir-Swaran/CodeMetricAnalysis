{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "isAllowedUser",
  "functionId": "isAllowedUser___username-String__userList-List__String__",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 3650,
  "functionEndLine": 3667,
  "numCommitsSeen": 66,
  "timeTaken": 1283,
  "changeHistory": [
    "572cdb54632d8a29c4d9900f9e988ada8e3fe2ec"
  ],
  "changeHistoryShort": {
    "572cdb54632d8a29c4d9900f9e988ada8e3fe2ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "572cdb54632d8a29c4d9900f9e988ada8e3fe2ec": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14899. Restrict Access to setPermission operation when authorization is enabled in WASB\nContributed by Kannapiran Srinivasan.\n",
      "commitDate": "06/10/17 9:43 AM",
      "commitName": "572cdb54632d8a29c4d9900f9e988ada8e3fe2ec",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,18 @@\n+  private boolean isAllowedUser(String username, List\u003cString\u003e userList) {\n+\n+    if (null \u003d\u003d userList || userList.isEmpty()) {\n+      return false;\n+    }\n+\n+    boolean shouldSkipUserCheck \u003d userList.size() \u003d\u003d 1\n+        \u0026\u0026 userList.get(0).equals(\"*\");\n+\n+    // skip the check if the allowed users config value is set as \u0027*\u0027\n+    if (!shouldSkipUserCheck) {\n+      Preconditions.checkArgument(!userList.contains(\"*\"),\n+        \"User list must contain either \u0027*\u0027 or a list of user names,\"\n+            + \" but not both.\");\n+      return userList.contains(username);\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isAllowedUser(String username, List\u003cString\u003e userList) {\n\n    if (null \u003d\u003d userList || userList.isEmpty()) {\n      return false;\n    }\n\n    boolean shouldSkipUserCheck \u003d userList.size() \u003d\u003d 1\n        \u0026\u0026 userList.get(0).equals(\"*\");\n\n    // skip the check if the allowed users config value is set as \u0027*\u0027\n    if (!shouldSkipUserCheck) {\n      Preconditions.checkArgument(!userList.contains(\"*\"),\n        \"User list must contain either \u0027*\u0027 or a list of user names,\"\n            + \" but not both.\");\n      return userList.contains(username);\n    }\n    return true;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}