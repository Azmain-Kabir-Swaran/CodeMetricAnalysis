{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RandomWord.java",
  "functionName": "addCharacter",
  "functionId": "addCharacter___startBiGram-String[]__desiredLength-int__currentWord-String__lookupBiGram-String[]__nextCharLookup-String[][][]__flag-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/utils/RandomWord.java",
  "functionStartLine": 368,
  "functionEndLine": 395,
  "numCommitsSeen": 3,
  "timeTaken": 857,
  "changeHistory": [
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e"
  ],
  "changeHistoryShort": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "29/03/19 1:51 PM",
      "commitName": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,28 @@\n+  private static String addCharacter(String[] startBiGram, int desiredLength,\n+      String currentWord, String[] lookupBiGram, String[][][] nextCharLookup,\n+      int flag) {\n+    int mainIndex \u003d getLookupIndex(currentWord, lookupBiGram);\n+    int type \u003d 0;\n+    if (currentWord.length() \u003d\u003d (desiredLength - 1)) {\n+      type \u003d 1;\n+    }\n+    while (mainIndex \u003c 0 || mainIndex \u003e 263\n+        || nextCharLookup[mainIndex][type].length \u003c\u003d 0) {\n+      if (currentWord.length() \u003d\u003d 2) {\n+        return startBiGram[indexGenerator(startBiGram.length)];\n+      }\n+      if (flag \u003d\u003d 1) {\n+        currentWord \u003d backtrack(currentWord, 2);\n+        flag \u003d 0;\n+      } else {\n+        currentWord \u003d backtrack(currentWord, 1);\n+      }\n+      mainIndex \u003d getLookupIndex(currentWord, lookupBiGram);\n+      if (type \u003d\u003d 1) {\n+        type \u003d 0;\n+      }\n+    }\n+    String updatedWord \u003d currentWord\n+        + getNextCharacter(type, mainIndex, nextCharLookup);\n+    return updatedWord;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String addCharacter(String[] startBiGram, int desiredLength,\n      String currentWord, String[] lookupBiGram, String[][][] nextCharLookup,\n      int flag) {\n    int mainIndex \u003d getLookupIndex(currentWord, lookupBiGram);\n    int type \u003d 0;\n    if (currentWord.length() \u003d\u003d (desiredLength - 1)) {\n      type \u003d 1;\n    }\n    while (mainIndex \u003c 0 || mainIndex \u003e 263\n        || nextCharLookup[mainIndex][type].length \u003c\u003d 0) {\n      if (currentWord.length() \u003d\u003d 2) {\n        return startBiGram[indexGenerator(startBiGram.length)];\n      }\n      if (flag \u003d\u003d 1) {\n        currentWord \u003d backtrack(currentWord, 2);\n        flag \u003d 0;\n      } else {\n        currentWord \u003d backtrack(currentWord, 1);\n      }\n      mainIndex \u003d getLookupIndex(currentWord, lookupBiGram);\n      if (type \u003d\u003d 1) {\n        type \u003d 0;\n      }\n    }\n    String updatedWord \u003d currentWord\n        + getNextCharacter(type, mainIndex, nextCharLookup);\n    return updatedWord;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/utils/RandomWord.java"
    }
  }
}