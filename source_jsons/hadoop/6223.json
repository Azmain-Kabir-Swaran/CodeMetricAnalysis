{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BackupImage.java",
  "functionName": "journal",
  "functionId": "journal___firstTxId-long__numTxns-int__data-byte[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
  "functionStartLine": 163,
  "functionEndLine": 189,
  "numCommitsSeen": 32,
  "timeTaken": 4869,
  "changeHistory": [
    "841fdc5628fbba341efe0bfc6763fe12e7fca7f4",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "841fdc5628fbba341efe0bfc6763fe12e7fca7f4": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ymultichange(Yparameterchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "841fdc5628fbba341efe0bfc6763fe12e7fca7f4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3273. Refactor BackupImage and FSEditLog, and rename JournalListener.rollLogs(..) to startLogSegment(..). \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1326016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/04/12 4:41 PM",
      "commitName": "841fdc5628fbba341efe0bfc6763fe12e7fca7f4",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "09/04/12 12:39 PM",
      "commitNameOld": "706394d03992b394e9f907aff2155df493e4ea4e",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 4.17,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"Got journal, \" +\n           \"state \u003d \" + bnState +\n           \"; firstTxId \u003d \" + firstTxId +\n           \"; numTxns \u003d \" + numTxns);\n     }\n     \n     switch(bnState) {\n       case DROP_UNTIL_NEXT_ROLL:\n         return;\n \n       case IN_SYNC:\n         // update NameSpace in memory\n         applyEdits(firstTxId, numTxns, data);\n         break;\n       \n       case JOURNAL_ONLY:\n         break;\n       \n       default:\n         throw new AssertionError(\"Unhandled state: \" + bnState);\n     }\n     \n     // write to BN\u0027s local edit log.\n-    logEditsLocally(firstTxId, numTxns, data);\n+    editLog.journal(firstTxId, numTxns, data);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"Got journal, \" +\n          \"state \u003d \" + bnState +\n          \"; firstTxId \u003d \" + firstTxId +\n          \"; numTxns \u003d \" + numTxns);\n    }\n    \n    switch(bnState) {\n      case DROP_UNTIL_NEXT_ROLL:\n        return;\n\n      case IN_SYNC:\n        // update NameSpace in memory\n        applyEdits(firstTxId, numTxns, data);\n        break;\n      \n      case JOURNAL_ONLY:\n        break;\n      \n      default:\n        throw new AssertionError(\"Unhandled state: \" + bnState);\n    }\n    \n    // write to BN\u0027s local edit log.\n    editLog.journal(firstTxId, numTxns, data);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"Got journal, \" +\n          \"state \u003d \" + bnState +\n          \"; firstTxId \u003d \" + firstTxId +\n          \"; numTxns \u003d \" + numTxns);\n    }\n    \n    switch(bnState) {\n      case DROP_UNTIL_NEXT_ROLL:\n        return;\n\n      case IN_SYNC:\n        // update NameSpace in memory\n        applyEdits(firstTxId, numTxns, data);\n        break;\n      \n      case JOURNAL_ONLY:\n        break;\n      \n      default:\n        throw new AssertionError(\"Unhandled state: \" + bnState);\n    }\n    \n    // write to BN\u0027s local edit log.\n    logEditsLocally(firstTxId, numTxns, data);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"Got journal, \" +\n          \"state \u003d \" + bnState +\n          \"; firstTxId \u003d \" + firstTxId +\n          \"; numTxns \u003d \" + numTxns);\n    }\n    \n    switch(bnState) {\n      case DROP_UNTIL_NEXT_ROLL:\n        return;\n\n      case IN_SYNC:\n        // update NameSpace in memory\n        applyEdits(firstTxId, numTxns, data);\n        break;\n      \n      case JOURNAL_ONLY:\n        break;\n      \n      default:\n        throw new AssertionError(\"Unhandled state: \" + bnState);\n    }\n    \n    // write to BN\u0027s local edit log.\n    logEditsLocally(firstTxId, numTxns, data);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,27 @@\n-  synchronized void journal(int length, byte[] data) throws IOException {\n-    assert backupInputStream.length() \u003d\u003d 0 : \"backup input stream is not empty\";\n-    try {\n-      switch(jsState) {\n-        case WAIT:\n-        case OFF:\n-          // wait until spooling is off\n-          waitSpoolEnd();\n-          // update NameSpace in memory\n-          backupInputStream.setBytes(data);\n-          FSEditLogLoader logLoader \u003d new FSEditLogLoader(namesystem);\n-          int logVersion \u003d storage.getLayoutVersion();\n-          BufferedInputStream bin \u003d new BufferedInputStream(backupInputStream);\n-          DataInputStream in \u003d new DataInputStream(bin);\n-          Checksum checksum \u003d null;\n-          if (LayoutVersion.supports(Feature.EDITS_CHESKUM, logVersion)) {\n-            checksum \u003d FSEditLog.getChecksum();\n-            in \u003d new DataInputStream(new CheckedInputStream(bin, checksum));\n-          }\n-          logLoader.loadEditRecords(logVersion, in, checksum, true);\n-          getFSNamesystem().dir.updateCountForINodeWithQuota(); // inefficient!\n-          break;\n-        case INPROGRESS:\n-          break;\n-      }\n-      // write to files\n-      editLog.logEdit(length, data);\n-      editLog.logSync();\n-    } finally {\n-      backupInputStream.clear();\n+  synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n+    if (LOG.isTraceEnabled()) {\n+      LOG.trace(\"Got journal, \" +\n+          \"state \u003d \" + bnState +\n+          \"; firstTxId \u003d \" + firstTxId +\n+          \"; numTxns \u003d \" + numTxns);\n     }\n+    \n+    switch(bnState) {\n+      case DROP_UNTIL_NEXT_ROLL:\n+        return;\n+\n+      case IN_SYNC:\n+        // update NameSpace in memory\n+        applyEdits(firstTxId, numTxns, data);\n+        break;\n+      \n+      case JOURNAL_ONLY:\n+        break;\n+      \n+      default:\n+        throw new AssertionError(\"Unhandled state: \" + bnState);\n+    }\n+    \n+    // write to BN\u0027s local edit log.\n+    logEditsLocally(firstTxId, numTxns, data);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"Got journal, \" +\n          \"state \u003d \" + bnState +\n          \"; firstTxId \u003d \" + firstTxId +\n          \"; numTxns \u003d \" + numTxns);\n    }\n    \n    switch(bnState) {\n      case DROP_UNTIL_NEXT_ROLL:\n        return;\n\n      case IN_SYNC:\n        // update NameSpace in memory\n        applyEdits(firstTxId, numTxns, data);\n        break;\n      \n      case JOURNAL_ONLY:\n        break;\n      \n      default:\n        throw new AssertionError(\"Unhandled state: \" + bnState);\n    }\n    \n    // write to BN\u0027s local edit log.\n    logEditsLocally(firstTxId, numTxns, data);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
          "extendedDetails": {
            "oldValue": "[length-int, data-byte[]]",
            "newValue": "[firstTxId-long, numTxns-int, data-byte[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,27 @@\n-  synchronized void journal(int length, byte[] data) throws IOException {\n-    assert backupInputStream.length() \u003d\u003d 0 : \"backup input stream is not empty\";\n-    try {\n-      switch(jsState) {\n-        case WAIT:\n-        case OFF:\n-          // wait until spooling is off\n-          waitSpoolEnd();\n-          // update NameSpace in memory\n-          backupInputStream.setBytes(data);\n-          FSEditLogLoader logLoader \u003d new FSEditLogLoader(namesystem);\n-          int logVersion \u003d storage.getLayoutVersion();\n-          BufferedInputStream bin \u003d new BufferedInputStream(backupInputStream);\n-          DataInputStream in \u003d new DataInputStream(bin);\n-          Checksum checksum \u003d null;\n-          if (LayoutVersion.supports(Feature.EDITS_CHESKUM, logVersion)) {\n-            checksum \u003d FSEditLog.getChecksum();\n-            in \u003d new DataInputStream(new CheckedInputStream(bin, checksum));\n-          }\n-          logLoader.loadEditRecords(logVersion, in, checksum, true);\n-          getFSNamesystem().dir.updateCountForINodeWithQuota(); // inefficient!\n-          break;\n-        case INPROGRESS:\n-          break;\n-      }\n-      // write to files\n-      editLog.logEdit(length, data);\n-      editLog.logSync();\n-    } finally {\n-      backupInputStream.clear();\n+  synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n+    if (LOG.isTraceEnabled()) {\n+      LOG.trace(\"Got journal, \" +\n+          \"state \u003d \" + bnState +\n+          \"; firstTxId \u003d \" + firstTxId +\n+          \"; numTxns \u003d \" + numTxns);\n     }\n+    \n+    switch(bnState) {\n+      case DROP_UNTIL_NEXT_ROLL:\n+        return;\n+\n+      case IN_SYNC:\n+        // update NameSpace in memory\n+        applyEdits(firstTxId, numTxns, data);\n+        break;\n+      \n+      case JOURNAL_ONLY:\n+        break;\n+      \n+      default:\n+        throw new AssertionError(\"Unhandled state: \" + bnState);\n+    }\n+    \n+    // write to BN\u0027s local edit log.\n+    logEditsLocally(firstTxId, numTxns, data);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized void journal(long firstTxId, int numTxns, byte[] data) throws IOException {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"Got journal, \" +\n          \"state \u003d \" + bnState +\n          \"; firstTxId \u003d \" + firstTxId +\n          \"; numTxns \u003d \" + numTxns);\n    }\n    \n    switch(bnState) {\n      case DROP_UNTIL_NEXT_ROLL:\n        return;\n\n      case IN_SYNC:\n        // update NameSpace in memory\n        applyEdits(firstTxId, numTxns, data);\n        break;\n      \n      case JOURNAL_ONLY:\n        break;\n      \n      default:\n        throw new AssertionError(\"Unhandled state: \" + bnState);\n    }\n    \n    // write to BN\u0027s local edit log.\n    logEditsLocally(firstTxId, numTxns, data);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,32 @@\n+  synchronized void journal(int length, byte[] data) throws IOException {\n+    assert backupInputStream.length() \u003d\u003d 0 : \"backup input stream is not empty\";\n+    try {\n+      switch(jsState) {\n+        case WAIT:\n+        case OFF:\n+          // wait until spooling is off\n+          waitSpoolEnd();\n+          // update NameSpace in memory\n+          backupInputStream.setBytes(data);\n+          FSEditLogLoader logLoader \u003d new FSEditLogLoader(namesystem);\n+          int logVersion \u003d storage.getLayoutVersion();\n+          BufferedInputStream bin \u003d new BufferedInputStream(backupInputStream);\n+          DataInputStream in \u003d new DataInputStream(bin);\n+          Checksum checksum \u003d null;\n+          if (LayoutVersion.supports(Feature.EDITS_CHESKUM, logVersion)) {\n+            checksum \u003d FSEditLog.getChecksum();\n+            in \u003d new DataInputStream(new CheckedInputStream(bin, checksum));\n+          }\n+          logLoader.loadEditRecords(logVersion, in, checksum, true);\n+          getFSNamesystem().dir.updateCountForINodeWithQuota(); // inefficient!\n+          break;\n+        case INPROGRESS:\n+          break;\n+      }\n+      // write to files\n+      editLog.logEdit(length, data);\n+      editLog.logSync();\n+    } finally {\n+      backupInputStream.clear();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void journal(int length, byte[] data) throws IOException {\n    assert backupInputStream.length() \u003d\u003d 0 : \"backup input stream is not empty\";\n    try {\n      switch(jsState) {\n        case WAIT:\n        case OFF:\n          // wait until spooling is off\n          waitSpoolEnd();\n          // update NameSpace in memory\n          backupInputStream.setBytes(data);\n          FSEditLogLoader logLoader \u003d new FSEditLogLoader(namesystem);\n          int logVersion \u003d storage.getLayoutVersion();\n          BufferedInputStream bin \u003d new BufferedInputStream(backupInputStream);\n          DataInputStream in \u003d new DataInputStream(bin);\n          Checksum checksum \u003d null;\n          if (LayoutVersion.supports(Feature.EDITS_CHESKUM, logVersion)) {\n            checksum \u003d FSEditLog.getChecksum();\n            in \u003d new DataInputStream(new CheckedInputStream(bin, checksum));\n          }\n          logLoader.loadEditRecords(logVersion, in, checksum, true);\n          getFSNamesystem().dir.updateCountForINodeWithQuota(); // inefficient!\n          break;\n        case INPROGRESS:\n          break;\n      }\n      // write to files\n      editLog.logEdit(length, data);\n      editLog.logSync();\n    } finally {\n      backupInputStream.clear();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupImage.java"
    }
  }
}