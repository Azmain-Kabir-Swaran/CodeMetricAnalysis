{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowActivityEntity.java",
  "functionName": "compareTo",
  "functionId": "compareTo___entity-TimelineEntity",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/timelineservice/FlowActivityEntity.java",
  "functionStartLine": 94,
  "functionEndLine": 116,
  "numCommitsSeen": 3,
  "timeTaken": 627,
  "changeHistory": [
    "10fa6da7d8a6013698767c6136ae20f0e04415e9"
  ],
  "changeHistoryShort": {
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthor": "Vrushali",
      "diff": "@@ -0,0 +1,23 @@\n+  public int compareTo(TimelineEntity entity) {\n+    int comparison \u003d getType().compareTo(entity.getType());\n+    if (comparison \u003d\u003d 0) {\n+      // order by cluster, date (descending), user, and flow name\n+      FlowActivityEntity other \u003d (FlowActivityEntity)entity;\n+      int clusterComparison \u003d getCluster().compareTo(other.getCluster());\n+      if (clusterComparison !\u003d 0) {\n+        return clusterComparison;\n+      }\n+      int dateComparisonDescending \u003d\n+          (int)(other.getDate().getTime() - getDate().getTime()); // descending\n+      if (dateComparisonDescending !\u003d 0) {\n+        return dateComparisonDescending; // descending\n+      }\n+      int userComparison \u003d getUser().compareTo(other.getUser());\n+      if (userComparison !\u003d 0) {\n+        return userComparison;\n+      }\n+      return getFlowName().compareTo(other.getFlowName());\n+    } else {\n+      return comparison;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(TimelineEntity entity) {\n    int comparison \u003d getType().compareTo(entity.getType());\n    if (comparison \u003d\u003d 0) {\n      // order by cluster, date (descending), user, and flow name\n      FlowActivityEntity other \u003d (FlowActivityEntity)entity;\n      int clusterComparison \u003d getCluster().compareTo(other.getCluster());\n      if (clusterComparison !\u003d 0) {\n        return clusterComparison;\n      }\n      int dateComparisonDescending \u003d\n          (int)(other.getDate().getTime() - getDate().getTime()); // descending\n      if (dateComparisonDescending !\u003d 0) {\n        return dateComparisonDescending; // descending\n      }\n      int userComparison \u003d getUser().compareTo(other.getUser());\n      if (userComparison !\u003d 0) {\n        return userComparison;\n      }\n      return getFlowName().compareTo(other.getFlowName());\n    } else {\n      return comparison;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/timelineservice/FlowActivityEntity.java"
    }
  }
}