{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DominantResourceFairnessPolicy.java",
  "functionName": "calculateMinShareRatios",
  "functionId": "calculateMinShareRatios___resourceInfo-ResourceInformation[]__minShareInfo-ResourceInformation[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
  "functionStartLine": 496,
  "functionEndLine": 509,
  "numCommitsSeen": 20,
  "timeTaken": 1093,
  "changeHistory": [
    "9711b78998ca3a1f7734058a78c7baddd130ce0f"
  ],
  "changeHistoryShort": {
    "9711b78998ca3a1f7734058a78c7baddd130ce0f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9711b78998ca3a1f7734058a78c7baddd130ce0f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7374. Improve performance of DRF comparisons for resource types in fair scheduler\n",
      "commitDate": "29/10/17 6:54 PM",
      "commitName": "9711b78998ca3a1f7734058a78c7baddd130ce0f",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,14 @@\n+    double[] calculateMinShareRatios(ResourceInformation[] resourceInfo,\n+        ResourceInformation[] minShareInfo) {\n+      double[] minShares1 \u003d new double[2];\n+\n+      // both are needy below min share\n+      minShares1[Resource.MEMORY_INDEX] \u003d\n+          ((double) resourceInfo[Resource.MEMORY_INDEX].getValue()) /\n+          minShareInfo[Resource.MEMORY_INDEX].getValue();\n+      minShares1[Resource.VCORES_INDEX] \u003d\n+          ((double) resourceInfo[Resource.VCORES_INDEX].getValue()) /\n+          minShareInfo[Resource.VCORES_INDEX].getValue();\n+\n+      return minShares1;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    double[] calculateMinShareRatios(ResourceInformation[] resourceInfo,\n        ResourceInformation[] minShareInfo) {\n      double[] minShares1 \u003d new double[2];\n\n      // both are needy below min share\n      minShares1[Resource.MEMORY_INDEX] \u003d\n          ((double) resourceInfo[Resource.MEMORY_INDEX].getValue()) /\n          minShareInfo[Resource.MEMORY_INDEX].getValue();\n      minShares1[Resource.VCORES_INDEX] \u003d\n          ((double) resourceInfo[Resource.VCORES_INDEX].getValue()) /\n          minShareInfo[Resource.VCORES_INDEX].getValue();\n\n      return minShares1;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java"
    }
  }
}