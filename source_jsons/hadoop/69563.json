{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureADAuthenticator.java",
  "functionName": "getTokenSingleCall",
  "functionId": "getTokenSingleCall___authEndpoint-String__payload-String__headers-Hashtable__String,String____httpMethod-String__isMsi-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java",
  "functionStartLine": 313,
  "functionEndLine": 414,
  "numCommitsSeen": 15,
  "timeTaken": 3459,
  "changeHistory": [
    "0b931f36ec83dc72729a9e84a0d313f471061c64",
    "65f60e56b082faf92e1cd3daee2569d8fc669c67",
    "273cc2d4e972dc7cc371761a4ab2d1bc20dd5ca0",
    "9149b9703e3ab09abdc087db129e82ad3f4cefa1"
  ],
  "changeHistoryShort": {
    "0b931f36ec83dc72729a9e84a0d313f471061c64": "Ymultichange(Yparameterchange,Ybodychange)",
    "65f60e56b082faf92e1cd3daee2569d8fc669c67": "Ybodychange",
    "273cc2d4e972dc7cc371761a4ab2d1bc20dd5ca0": "Ybodychange",
    "9149b9703e3ab09abdc087db129e82ad3f4cefa1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b931f36ec83dc72729a9e84a0d313f471061c64": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Hadoop 16890. Change in expiry calculation for MSI token provider.\n\n\r\nContributed by Bilahari T H",
      "commitDate": "11/03/20 1:39 PM",
      "commitName": "0b931f36ec83dc72729a9e84a0d313f471061c64",
      "commitAuthor": "bilaharith",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Hadoop 16890. Change in expiry calculation for MSI token provider.\n\n\r\nContributed by Bilahari T H",
          "commitDate": "11/03/20 1:39 PM",
          "commitName": "0b931f36ec83dc72729a9e84a0d313f471061c64",
          "commitAuthor": "bilaharith",
          "commitDateOld": "07/10/19 5:07 AM",
          "commitNameOld": "1a77a15fe44df9ec837be5c558279d8fd4d25e97",
          "commitAuthorOld": "bilaharith",
          "daysBetweenCommits": 156.36,
          "commitsBetweenForRepo": 555,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,101 +1,102 @@\n-  private static AzureADToken getTokenSingleCall(\n-          String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n+  private static AzureADToken getTokenSingleCall(String authEndpoint,\n+      String payload, Hashtable\u003cString, String\u003e headers, String httpMethod,\n+      boolean isMsi)\n           throws IOException {\n \n     AzureADToken token \u003d null;\n     HttpURLConnection conn \u003d null;\n     String urlString \u003d authEndpoint;\n \n     httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n     if (httpMethod.equals(\"GET\")) {\n       urlString \u003d urlString + \"?\" + payload;\n     }\n \n     try {\n       LOG.debug(\"Requesting an OAuth token by {} to {}\",\n           httpMethod, authEndpoint);\n       URL url \u003d new URL(urlString);\n       conn \u003d (HttpURLConnection) url.openConnection();\n       conn.setRequestMethod(httpMethod);\n       conn.setReadTimeout(READ_TIMEOUT);\n       conn.setConnectTimeout(CONNECT_TIMEOUT);\n \n       if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n         for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n           conn.setRequestProperty(entry.getKey(), entry.getValue());\n         }\n       }\n       conn.setRequestProperty(\"Connection\", \"close\");\n       AbfsIoUtils.dumpHeadersToDebugLog(\"Request Headers\",\n           conn.getRequestProperties());\n       if (httpMethod.equals(\"POST\")) {\n         conn.setDoOutput(true);\n         conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n       }\n \n       int httpResponseCode \u003d conn.getResponseCode();\n       LOG.debug(\"Response {}\", httpResponseCode);\n       AbfsIoUtils.dumpHeadersToDebugLog(\"Response Headers\",\n           conn.getHeaderFields());\n \n       String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n       String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n       long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n \n       requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n       if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n               \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n         InputStream httpResponseStream \u003d conn.getInputStream();\n-        token \u003d parseTokenFromStream(httpResponseStream);\n+        token \u003d parseTokenFromStream(httpResponseStream, isMsi);\n       } else {\n         InputStream stream \u003d conn.getErrorStream();\n         if (stream \u003d\u003d null) {\n           // no error stream, try the original input stream\n           stream \u003d conn.getInputStream();\n         }\n         String responseBody \u003d consumeInputStream(stream, 1024);\n         String proxies \u003d \"none\";\n         String httpProxy \u003d System.getProperty(\"http.proxy\");\n         String httpsProxy \u003d System.getProperty(\"https.proxy\");\n         if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n           proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n         }\n         String operation \u003d \"AADToken: HTTP connection to \" + authEndpoint\n             + \" failed for getting token from AzureAD.\";\n         String logMessage \u003d operation\n                         + \" HTTP response: \" + httpResponseCode\n                         + \" \" + conn.getResponseMessage()\n                         + \" Proxies: \" + proxies\n                         + (responseBody.isEmpty()\n                           ? \"\"\n                           : (\"\\nFirst 1K of Body: \" + responseBody));\n         LOG.debug(logMessage);\n         if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK) {\n           // 200 is returned by some of the sign-on pages, but can also\n           // come from proxies, utterly wrong URLs, etc.\n           throw new UnexpectedResponseException(httpResponseCode,\n               requestId,\n               operation\n                   + \" Unexpected response.\"\n                   + \" Check configuration, URLs and proxy settings.\"\n                   + \" proxies\u003d\" + proxies,\n               authEndpoint,\n               responseContentType,\n               responseBody);\n         } else {\n           // general HTTP error\n           throw new HttpException(httpResponseCode,\n               requestId,\n               operation,\n               authEndpoint,\n               responseContentType,\n               responseBody);\n         }\n       }\n     } finally {\n       if (conn !\u003d null) {\n         conn.disconnect();\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static AzureADToken getTokenSingleCall(String authEndpoint,\n      String payload, Hashtable\u003cString, String\u003e headers, String httpMethod,\n      boolean isMsi)\n          throws IOException {\n\n    AzureADToken token \u003d null;\n    HttpURLConnection conn \u003d null;\n    String urlString \u003d authEndpoint;\n\n    httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n    if (httpMethod.equals(\"GET\")) {\n      urlString \u003d urlString + \"?\" + payload;\n    }\n\n    try {\n      LOG.debug(\"Requesting an OAuth token by {} to {}\",\n          httpMethod, authEndpoint);\n      URL url \u003d new URL(urlString);\n      conn \u003d (HttpURLConnection) url.openConnection();\n      conn.setRequestMethod(httpMethod);\n      conn.setReadTimeout(READ_TIMEOUT);\n      conn.setConnectTimeout(CONNECT_TIMEOUT);\n\n      if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n        for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n          conn.setRequestProperty(entry.getKey(), entry.getValue());\n        }\n      }\n      conn.setRequestProperty(\"Connection\", \"close\");\n      AbfsIoUtils.dumpHeadersToDebugLog(\"Request Headers\",\n          conn.getRequestProperties());\n      if (httpMethod.equals(\"POST\")) {\n        conn.setDoOutput(true);\n        conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n      }\n\n      int httpResponseCode \u003d conn.getResponseCode();\n      LOG.debug(\"Response {}\", httpResponseCode);\n      AbfsIoUtils.dumpHeadersToDebugLog(\"Response Headers\",\n          conn.getHeaderFields());\n\n      String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n      String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n      long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n\n      requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n      if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n              \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n        InputStream httpResponseStream \u003d conn.getInputStream();\n        token \u003d parseTokenFromStream(httpResponseStream, isMsi);\n      } else {\n        InputStream stream \u003d conn.getErrorStream();\n        if (stream \u003d\u003d null) {\n          // no error stream, try the original input stream\n          stream \u003d conn.getInputStream();\n        }\n        String responseBody \u003d consumeInputStream(stream, 1024);\n        String proxies \u003d \"none\";\n        String httpProxy \u003d System.getProperty(\"http.proxy\");\n        String httpsProxy \u003d System.getProperty(\"https.proxy\");\n        if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n          proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n        }\n        String operation \u003d \"AADToken: HTTP connection to \" + authEndpoint\n            + \" failed for getting token from AzureAD.\";\n        String logMessage \u003d operation\n                        + \" HTTP response: \" + httpResponseCode\n                        + \" \" + conn.getResponseMessage()\n                        + \" Proxies: \" + proxies\n                        + (responseBody.isEmpty()\n                          ? \"\"\n                          : (\"\\nFirst 1K of Body: \" + responseBody));\n        LOG.debug(logMessage);\n        if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK) {\n          // 200 is returned by some of the sign-on pages, but can also\n          // come from proxies, utterly wrong URLs, etc.\n          throw new UnexpectedResponseException(httpResponseCode,\n              requestId,\n              operation\n                  + \" Unexpected response.\"\n                  + \" Check configuration, URLs and proxy settings.\"\n                  + \" proxies\u003d\" + proxies,\n              authEndpoint,\n              responseContentType,\n              responseBody);\n        } else {\n          // general HTTP error\n          throw new HttpException(httpResponseCode,\n              requestId,\n              operation,\n              authEndpoint,\n              responseContentType,\n              responseBody);\n        }\n      }\n    } finally {\n      if (conn !\u003d null) {\n        conn.disconnect();\n      }\n    }\n    return token;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java",
          "extendedDetails": {
            "oldValue": "[authEndpoint-String, payload-String, headers-Hashtable\u003cString,String\u003e, httpMethod-String]",
            "newValue": "[authEndpoint-String, payload-String, headers-Hashtable\u003cString,String\u003e, httpMethod-String, isMsi-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Hadoop 16890. Change in expiry calculation for MSI token provider.\n\n\r\nContributed by Bilahari T H",
          "commitDate": "11/03/20 1:39 PM",
          "commitName": "0b931f36ec83dc72729a9e84a0d313f471061c64",
          "commitAuthor": "bilaharith",
          "commitDateOld": "07/10/19 5:07 AM",
          "commitNameOld": "1a77a15fe44df9ec837be5c558279d8fd4d25e97",
          "commitAuthorOld": "bilaharith",
          "daysBetweenCommits": 156.36,
          "commitsBetweenForRepo": 555,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,101 +1,102 @@\n-  private static AzureADToken getTokenSingleCall(\n-          String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n+  private static AzureADToken getTokenSingleCall(String authEndpoint,\n+      String payload, Hashtable\u003cString, String\u003e headers, String httpMethod,\n+      boolean isMsi)\n           throws IOException {\n \n     AzureADToken token \u003d null;\n     HttpURLConnection conn \u003d null;\n     String urlString \u003d authEndpoint;\n \n     httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n     if (httpMethod.equals(\"GET\")) {\n       urlString \u003d urlString + \"?\" + payload;\n     }\n \n     try {\n       LOG.debug(\"Requesting an OAuth token by {} to {}\",\n           httpMethod, authEndpoint);\n       URL url \u003d new URL(urlString);\n       conn \u003d (HttpURLConnection) url.openConnection();\n       conn.setRequestMethod(httpMethod);\n       conn.setReadTimeout(READ_TIMEOUT);\n       conn.setConnectTimeout(CONNECT_TIMEOUT);\n \n       if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n         for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n           conn.setRequestProperty(entry.getKey(), entry.getValue());\n         }\n       }\n       conn.setRequestProperty(\"Connection\", \"close\");\n       AbfsIoUtils.dumpHeadersToDebugLog(\"Request Headers\",\n           conn.getRequestProperties());\n       if (httpMethod.equals(\"POST\")) {\n         conn.setDoOutput(true);\n         conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n       }\n \n       int httpResponseCode \u003d conn.getResponseCode();\n       LOG.debug(\"Response {}\", httpResponseCode);\n       AbfsIoUtils.dumpHeadersToDebugLog(\"Response Headers\",\n           conn.getHeaderFields());\n \n       String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n       String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n       long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n \n       requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n       if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n               \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n         InputStream httpResponseStream \u003d conn.getInputStream();\n-        token \u003d parseTokenFromStream(httpResponseStream);\n+        token \u003d parseTokenFromStream(httpResponseStream, isMsi);\n       } else {\n         InputStream stream \u003d conn.getErrorStream();\n         if (stream \u003d\u003d null) {\n           // no error stream, try the original input stream\n           stream \u003d conn.getInputStream();\n         }\n         String responseBody \u003d consumeInputStream(stream, 1024);\n         String proxies \u003d \"none\";\n         String httpProxy \u003d System.getProperty(\"http.proxy\");\n         String httpsProxy \u003d System.getProperty(\"https.proxy\");\n         if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n           proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n         }\n         String operation \u003d \"AADToken: HTTP connection to \" + authEndpoint\n             + \" failed for getting token from AzureAD.\";\n         String logMessage \u003d operation\n                         + \" HTTP response: \" + httpResponseCode\n                         + \" \" + conn.getResponseMessage()\n                         + \" Proxies: \" + proxies\n                         + (responseBody.isEmpty()\n                           ? \"\"\n                           : (\"\\nFirst 1K of Body: \" + responseBody));\n         LOG.debug(logMessage);\n         if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK) {\n           // 200 is returned by some of the sign-on pages, but can also\n           // come from proxies, utterly wrong URLs, etc.\n           throw new UnexpectedResponseException(httpResponseCode,\n               requestId,\n               operation\n                   + \" Unexpected response.\"\n                   + \" Check configuration, URLs and proxy settings.\"\n                   + \" proxies\u003d\" + proxies,\n               authEndpoint,\n               responseContentType,\n               responseBody);\n         } else {\n           // general HTTP error\n           throw new HttpException(httpResponseCode,\n               requestId,\n               operation,\n               authEndpoint,\n               responseContentType,\n               responseBody);\n         }\n       }\n     } finally {\n       if (conn !\u003d null) {\n         conn.disconnect();\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static AzureADToken getTokenSingleCall(String authEndpoint,\n      String payload, Hashtable\u003cString, String\u003e headers, String httpMethod,\n      boolean isMsi)\n          throws IOException {\n\n    AzureADToken token \u003d null;\n    HttpURLConnection conn \u003d null;\n    String urlString \u003d authEndpoint;\n\n    httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n    if (httpMethod.equals(\"GET\")) {\n      urlString \u003d urlString + \"?\" + payload;\n    }\n\n    try {\n      LOG.debug(\"Requesting an OAuth token by {} to {}\",\n          httpMethod, authEndpoint);\n      URL url \u003d new URL(urlString);\n      conn \u003d (HttpURLConnection) url.openConnection();\n      conn.setRequestMethod(httpMethod);\n      conn.setReadTimeout(READ_TIMEOUT);\n      conn.setConnectTimeout(CONNECT_TIMEOUT);\n\n      if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n        for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n          conn.setRequestProperty(entry.getKey(), entry.getValue());\n        }\n      }\n      conn.setRequestProperty(\"Connection\", \"close\");\n      AbfsIoUtils.dumpHeadersToDebugLog(\"Request Headers\",\n          conn.getRequestProperties());\n      if (httpMethod.equals(\"POST\")) {\n        conn.setDoOutput(true);\n        conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n      }\n\n      int httpResponseCode \u003d conn.getResponseCode();\n      LOG.debug(\"Response {}\", httpResponseCode);\n      AbfsIoUtils.dumpHeadersToDebugLog(\"Response Headers\",\n          conn.getHeaderFields());\n\n      String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n      String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n      long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n\n      requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n      if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n              \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n        InputStream httpResponseStream \u003d conn.getInputStream();\n        token \u003d parseTokenFromStream(httpResponseStream, isMsi);\n      } else {\n        InputStream stream \u003d conn.getErrorStream();\n        if (stream \u003d\u003d null) {\n          // no error stream, try the original input stream\n          stream \u003d conn.getInputStream();\n        }\n        String responseBody \u003d consumeInputStream(stream, 1024);\n        String proxies \u003d \"none\";\n        String httpProxy \u003d System.getProperty(\"http.proxy\");\n        String httpsProxy \u003d System.getProperty(\"https.proxy\");\n        if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n          proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n        }\n        String operation \u003d \"AADToken: HTTP connection to \" + authEndpoint\n            + \" failed for getting token from AzureAD.\";\n        String logMessage \u003d operation\n                        + \" HTTP response: \" + httpResponseCode\n                        + \" \" + conn.getResponseMessage()\n                        + \" Proxies: \" + proxies\n                        + (responseBody.isEmpty()\n                          ? \"\"\n                          : (\"\\nFirst 1K of Body: \" + responseBody));\n        LOG.debug(logMessage);\n        if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK) {\n          // 200 is returned by some of the sign-on pages, but can also\n          // come from proxies, utterly wrong URLs, etc.\n          throw new UnexpectedResponseException(httpResponseCode,\n              requestId,\n              operation\n                  + \" Unexpected response.\"\n                  + \" Check configuration, URLs and proxy settings.\"\n                  + \" proxies\u003d\" + proxies,\n              authEndpoint,\n              responseContentType,\n              responseBody);\n        } else {\n          // general HTTP error\n          throw new HttpException(httpResponseCode,\n              requestId,\n              operation,\n              authEndpoint,\n              responseContentType,\n              responseBody);\n        }\n      }\n    } finally {\n      if (conn !\u003d null) {\n        conn.disconnect();\n      }\n    }\n    return token;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java",
          "extendedDetails": {}
        }
      ]
    },
    "65f60e56b082faf92e1cd3daee2569d8fc669c67": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16068. ABFS Authentication and Delegation Token plugins to optionally be bound to specific URI of the store.\n\nContributed by Steve Loughran.\n",
      "commitDate": "28/02/19 6:22 AM",
      "commitName": "65f60e56b082faf92e1cd3daee2569d8fc669c67",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "24/10/18 2:18 PM",
      "commitNameOld": "e374584479b687e41d5379bb6d827dcae620e123",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 126.71,
      "commitsBetweenForRepo": 889,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,68 +1,101 @@\n   private static AzureADToken getTokenSingleCall(\n           String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n           throws IOException {\n \n     AzureADToken token \u003d null;\n     HttpURLConnection conn \u003d null;\n     String urlString \u003d authEndpoint;\n \n     httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n     if (httpMethod.equals(\"GET\")) {\n       urlString \u003d urlString + \"?\" + payload;\n     }\n \n     try {\n+      LOG.debug(\"Requesting an OAuth token by {} to {}\",\n+          httpMethod, authEndpoint);\n       URL url \u003d new URL(urlString);\n       conn \u003d (HttpURLConnection) url.openConnection();\n       conn.setRequestMethod(httpMethod);\n       conn.setReadTimeout(READ_TIMEOUT);\n       conn.setConnectTimeout(CONNECT_TIMEOUT);\n \n       if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n         for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n           conn.setRequestProperty(entry.getKey(), entry.getValue());\n         }\n       }\n       conn.setRequestProperty(\"Connection\", \"close\");\n-\n+      AbfsIoUtils.dumpHeadersToDebugLog(\"Request Headers\",\n+          conn.getRequestProperties());\n       if (httpMethod.equals(\"POST\")) {\n         conn.setDoOutput(true);\n         conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n       }\n \n       int httpResponseCode \u003d conn.getResponseCode();\n+      LOG.debug(\"Response {}\", httpResponseCode);\n+      AbfsIoUtils.dumpHeadersToDebugLog(\"Response Headers\",\n+          conn.getHeaderFields());\n+\n       String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n       String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n       long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n \n       requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n       if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n               \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n         InputStream httpResponseStream \u003d conn.getInputStream();\n         token \u003d parseTokenFromStream(httpResponseStream);\n       } else {\n-        String responseBody \u003d consumeInputStream(conn.getErrorStream(), 1024);\n+        InputStream stream \u003d conn.getErrorStream();\n+        if (stream \u003d\u003d null) {\n+          // no error stream, try the original input stream\n+          stream \u003d conn.getInputStream();\n+        }\n+        String responseBody \u003d consumeInputStream(stream, 1024);\n         String proxies \u003d \"none\";\n         String httpProxy \u003d System.getProperty(\"http.proxy\");\n         String httpsProxy \u003d System.getProperty(\"https.proxy\");\n         if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n           proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n         }\n-        String logMessage \u003d\n-                \"AADToken: HTTP connection failed for getting token from AzureAD. Http response: \"\n-                        + httpResponseCode + \" \" + conn.getResponseMessage()\n-                        + \"\\nContent-Type: \" + responseContentType\n-                        + \" Content-Length: \" + responseContentLength\n-                        + \" Request ID: \" + requestId.toString()\n+        String operation \u003d \"AADToken: HTTP connection to \" + authEndpoint\n+            + \" failed for getting token from AzureAD.\";\n+        String logMessage \u003d operation\n+                        + \" HTTP response: \" + httpResponseCode\n+                        + \" \" + conn.getResponseMessage()\n                         + \" Proxies: \" + proxies\n-                        + \"\\nFirst 1K of Body: \" + responseBody;\n+                        + (responseBody.isEmpty()\n+                          ? \"\"\n+                          : (\"\\nFirst 1K of Body: \" + responseBody));\n         LOG.debug(logMessage);\n-        throw new HttpException(httpResponseCode, requestId, logMessage);\n+        if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK) {\n+          // 200 is returned by some of the sign-on pages, but can also\n+          // come from proxies, utterly wrong URLs, etc.\n+          throw new UnexpectedResponseException(httpResponseCode,\n+              requestId,\n+              operation\n+                  + \" Unexpected response.\"\n+                  + \" Check configuration, URLs and proxy settings.\"\n+                  + \" proxies\u003d\" + proxies,\n+              authEndpoint,\n+              responseContentType,\n+              responseBody);\n+        } else {\n+          // general HTTP error\n+          throw new HttpException(httpResponseCode,\n+              requestId,\n+              operation,\n+              authEndpoint,\n+              responseContentType,\n+              responseBody);\n+        }\n       }\n     } finally {\n       if (conn !\u003d null) {\n         conn.disconnect();\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static AzureADToken getTokenSingleCall(\n          String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n          throws IOException {\n\n    AzureADToken token \u003d null;\n    HttpURLConnection conn \u003d null;\n    String urlString \u003d authEndpoint;\n\n    httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n    if (httpMethod.equals(\"GET\")) {\n      urlString \u003d urlString + \"?\" + payload;\n    }\n\n    try {\n      LOG.debug(\"Requesting an OAuth token by {} to {}\",\n          httpMethod, authEndpoint);\n      URL url \u003d new URL(urlString);\n      conn \u003d (HttpURLConnection) url.openConnection();\n      conn.setRequestMethod(httpMethod);\n      conn.setReadTimeout(READ_TIMEOUT);\n      conn.setConnectTimeout(CONNECT_TIMEOUT);\n\n      if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n        for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n          conn.setRequestProperty(entry.getKey(), entry.getValue());\n        }\n      }\n      conn.setRequestProperty(\"Connection\", \"close\");\n      AbfsIoUtils.dumpHeadersToDebugLog(\"Request Headers\",\n          conn.getRequestProperties());\n      if (httpMethod.equals(\"POST\")) {\n        conn.setDoOutput(true);\n        conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n      }\n\n      int httpResponseCode \u003d conn.getResponseCode();\n      LOG.debug(\"Response {}\", httpResponseCode);\n      AbfsIoUtils.dumpHeadersToDebugLog(\"Response Headers\",\n          conn.getHeaderFields());\n\n      String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n      String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n      long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n\n      requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n      if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n              \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n        InputStream httpResponseStream \u003d conn.getInputStream();\n        token \u003d parseTokenFromStream(httpResponseStream);\n      } else {\n        InputStream stream \u003d conn.getErrorStream();\n        if (stream \u003d\u003d null) {\n          // no error stream, try the original input stream\n          stream \u003d conn.getInputStream();\n        }\n        String responseBody \u003d consumeInputStream(stream, 1024);\n        String proxies \u003d \"none\";\n        String httpProxy \u003d System.getProperty(\"http.proxy\");\n        String httpsProxy \u003d System.getProperty(\"https.proxy\");\n        if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n          proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n        }\n        String operation \u003d \"AADToken: HTTP connection to \" + authEndpoint\n            + \" failed for getting token from AzureAD.\";\n        String logMessage \u003d operation\n                        + \" HTTP response: \" + httpResponseCode\n                        + \" \" + conn.getResponseMessage()\n                        + \" Proxies: \" + proxies\n                        + (responseBody.isEmpty()\n                          ? \"\"\n                          : (\"\\nFirst 1K of Body: \" + responseBody));\n        LOG.debug(logMessage);\n        if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK) {\n          // 200 is returned by some of the sign-on pages, but can also\n          // come from proxies, utterly wrong URLs, etc.\n          throw new UnexpectedResponseException(httpResponseCode,\n              requestId,\n              operation\n                  + \" Unexpected response.\"\n                  + \" Check configuration, URLs and proxy settings.\"\n                  + \" proxies\u003d\" + proxies,\n              authEndpoint,\n              responseContentType,\n              responseBody);\n        } else {\n          // general HTTP error\n          throw new HttpException(httpResponseCode,\n              requestId,\n              operation,\n              authEndpoint,\n              responseContentType,\n              responseBody);\n        }\n      }\n    } finally {\n      if (conn !\u003d null) {\n        conn.disconnect();\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java",
      "extendedDetails": {}
    },
    "273cc2d4e972dc7cc371761a4ab2d1bc20dd5ca0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15809. ABFS: better exception handling when making getAccessToken call.\nContributed by Da Zhou\n",
      "commitDate": "05/10/18 3:29 AM",
      "commitName": "273cc2d4e972dc7cc371761a4ab2d1bc20dd5ca0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "9149b9703e3ab09abdc087db129e82ad3f4cefa1",
      "commitAuthorOld": "Thomas Marquardt",
      "daysBetweenCommits": 17.61,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,68 +1,68 @@\n   private static AzureADToken getTokenSingleCall(\n           String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n           throws IOException {\n \n     AzureADToken token \u003d null;\n     HttpURLConnection conn \u003d null;\n     String urlString \u003d authEndpoint;\n \n     httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n     if (httpMethod.equals(\"GET\")) {\n       urlString \u003d urlString + \"?\" + payload;\n     }\n \n     try {\n       URL url \u003d new URL(urlString);\n       conn \u003d (HttpURLConnection) url.openConnection();\n       conn.setRequestMethod(httpMethod);\n       conn.setReadTimeout(READ_TIMEOUT);\n       conn.setConnectTimeout(CONNECT_TIMEOUT);\n \n       if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n         for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n           conn.setRequestProperty(entry.getKey(), entry.getValue());\n         }\n       }\n       conn.setRequestProperty(\"Connection\", \"close\");\n \n       if (httpMethod.equals(\"POST\")) {\n         conn.setDoOutput(true);\n         conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n       }\n \n       int httpResponseCode \u003d conn.getResponseCode();\n       String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n       String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n       long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n \n       requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n       if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n               \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n         InputStream httpResponseStream \u003d conn.getInputStream();\n         token \u003d parseTokenFromStream(httpResponseStream);\n       } else {\n-        String responseBody \u003d consumeInputStream(conn.getInputStream(), 1024);\n+        String responseBody \u003d consumeInputStream(conn.getErrorStream(), 1024);\n         String proxies \u003d \"none\";\n         String httpProxy \u003d System.getProperty(\"http.proxy\");\n         String httpsProxy \u003d System.getProperty(\"https.proxy\");\n         if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n           proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n         }\n         String logMessage \u003d\n                 \"AADToken: HTTP connection failed for getting token from AzureAD. Http response: \"\n                         + httpResponseCode + \" \" + conn.getResponseMessage()\n-                        + \" Content-Type: \" + responseContentType\n+                        + \"\\nContent-Type: \" + responseContentType\n                         + \" Content-Length: \" + responseContentLength\n                         + \" Request ID: \" + requestId.toString()\n                         + \" Proxies: \" + proxies\n-                        + \" First 1K of Body: \" + responseBody;\n+                        + \"\\nFirst 1K of Body: \" + responseBody;\n         LOG.debug(logMessage);\n         throw new HttpException(httpResponseCode, requestId, logMessage);\n       }\n     } finally {\n       if (conn !\u003d null) {\n         conn.disconnect();\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static AzureADToken getTokenSingleCall(\n          String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n          throws IOException {\n\n    AzureADToken token \u003d null;\n    HttpURLConnection conn \u003d null;\n    String urlString \u003d authEndpoint;\n\n    httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n    if (httpMethod.equals(\"GET\")) {\n      urlString \u003d urlString + \"?\" + payload;\n    }\n\n    try {\n      URL url \u003d new URL(urlString);\n      conn \u003d (HttpURLConnection) url.openConnection();\n      conn.setRequestMethod(httpMethod);\n      conn.setReadTimeout(READ_TIMEOUT);\n      conn.setConnectTimeout(CONNECT_TIMEOUT);\n\n      if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n        for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n          conn.setRequestProperty(entry.getKey(), entry.getValue());\n        }\n      }\n      conn.setRequestProperty(\"Connection\", \"close\");\n\n      if (httpMethod.equals(\"POST\")) {\n        conn.setDoOutput(true);\n        conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n      }\n\n      int httpResponseCode \u003d conn.getResponseCode();\n      String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n      String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n      long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n\n      requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n      if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n              \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n        InputStream httpResponseStream \u003d conn.getInputStream();\n        token \u003d parseTokenFromStream(httpResponseStream);\n      } else {\n        String responseBody \u003d consumeInputStream(conn.getErrorStream(), 1024);\n        String proxies \u003d \"none\";\n        String httpProxy \u003d System.getProperty(\"http.proxy\");\n        String httpsProxy \u003d System.getProperty(\"https.proxy\");\n        if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n          proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n        }\n        String logMessage \u003d\n                \"AADToken: HTTP connection failed for getting token from AzureAD. Http response: \"\n                        + httpResponseCode + \" \" + conn.getResponseMessage()\n                        + \"\\nContent-Type: \" + responseContentType\n                        + \" Content-Length: \" + responseContentLength\n                        + \" Request ID: \" + requestId.toString()\n                        + \" Proxies: \" + proxies\n                        + \"\\nFirst 1K of Body: \" + responseBody;\n        LOG.debug(logMessage);\n        throw new HttpException(httpResponseCode, requestId, logMessage);\n      }\n    } finally {\n      if (conn !\u003d null) {\n        conn.disconnect();\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java",
      "extendedDetails": {}
    },
    "9149b9703e3ab09abdc087db129e82ad3f4cefa1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15660. ABFS: Add support for OAuth\nContributed by Da Zhou, Rajeev Bansal, and Junhua Gu.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "9149b9703e3ab09abdc087db129e82ad3f4cefa1",
      "commitAuthor": "Thomas Marquardt",
      "diff": "@@ -0,0 +1,68 @@\n+  private static AzureADToken getTokenSingleCall(\n+          String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n+          throws IOException {\n+\n+    AzureADToken token \u003d null;\n+    HttpURLConnection conn \u003d null;\n+    String urlString \u003d authEndpoint;\n+\n+    httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n+    if (httpMethod.equals(\"GET\")) {\n+      urlString \u003d urlString + \"?\" + payload;\n+    }\n+\n+    try {\n+      URL url \u003d new URL(urlString);\n+      conn \u003d (HttpURLConnection) url.openConnection();\n+      conn.setRequestMethod(httpMethod);\n+      conn.setReadTimeout(READ_TIMEOUT);\n+      conn.setConnectTimeout(CONNECT_TIMEOUT);\n+\n+      if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n+        for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n+          conn.setRequestProperty(entry.getKey(), entry.getValue());\n+        }\n+      }\n+      conn.setRequestProperty(\"Connection\", \"close\");\n+\n+      if (httpMethod.equals(\"POST\")) {\n+        conn.setDoOutput(true);\n+        conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n+      }\n+\n+      int httpResponseCode \u003d conn.getResponseCode();\n+      String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n+      String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n+      long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n+\n+      requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n+      if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n+              \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n+        InputStream httpResponseStream \u003d conn.getInputStream();\n+        token \u003d parseTokenFromStream(httpResponseStream);\n+      } else {\n+        String responseBody \u003d consumeInputStream(conn.getInputStream(), 1024);\n+        String proxies \u003d \"none\";\n+        String httpProxy \u003d System.getProperty(\"http.proxy\");\n+        String httpsProxy \u003d System.getProperty(\"https.proxy\");\n+        if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n+          proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n+        }\n+        String logMessage \u003d\n+                \"AADToken: HTTP connection failed for getting token from AzureAD. Http response: \"\n+                        + httpResponseCode + \" \" + conn.getResponseMessage()\n+                        + \" Content-Type: \" + responseContentType\n+                        + \" Content-Length: \" + responseContentLength\n+                        + \" Request ID: \" + requestId.toString()\n+                        + \" Proxies: \" + proxies\n+                        + \" First 1K of Body: \" + responseBody;\n+        LOG.debug(logMessage);\n+        throw new HttpException(httpResponseCode, requestId, logMessage);\n+      }\n+    } finally {\n+      if (conn !\u003d null) {\n+        conn.disconnect();\n+      }\n+    }\n+    return token;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static AzureADToken getTokenSingleCall(\n          String authEndpoint, String payload, Hashtable\u003cString, String\u003e headers, String httpMethod)\n          throws IOException {\n\n    AzureADToken token \u003d null;\n    HttpURLConnection conn \u003d null;\n    String urlString \u003d authEndpoint;\n\n    httpMethod \u003d (httpMethod \u003d\u003d null) ? \"POST\" : httpMethod;\n    if (httpMethod.equals(\"GET\")) {\n      urlString \u003d urlString + \"?\" + payload;\n    }\n\n    try {\n      URL url \u003d new URL(urlString);\n      conn \u003d (HttpURLConnection) url.openConnection();\n      conn.setRequestMethod(httpMethod);\n      conn.setReadTimeout(READ_TIMEOUT);\n      conn.setConnectTimeout(CONNECT_TIMEOUT);\n\n      if (headers !\u003d null \u0026\u0026 headers.size() \u003e 0) {\n        for (Map.Entry\u003cString, String\u003e entry : headers.entrySet()) {\n          conn.setRequestProperty(entry.getKey(), entry.getValue());\n        }\n      }\n      conn.setRequestProperty(\"Connection\", \"close\");\n\n      if (httpMethod.equals(\"POST\")) {\n        conn.setDoOutput(true);\n        conn.getOutputStream().write(payload.getBytes(\"UTF-8\"));\n      }\n\n      int httpResponseCode \u003d conn.getResponseCode();\n      String requestId \u003d conn.getHeaderField(\"x-ms-request-id\");\n      String responseContentType \u003d conn.getHeaderField(\"Content-Type\");\n      long responseContentLength \u003d conn.getHeaderFieldLong(\"Content-Length\", 0);\n\n      requestId \u003d requestId \u003d\u003d null ? \"\" : requestId;\n      if (httpResponseCode \u003d\u003d HttpURLConnection.HTTP_OK\n              \u0026\u0026 responseContentType.startsWith(\"application/json\") \u0026\u0026 responseContentLength \u003e 0) {\n        InputStream httpResponseStream \u003d conn.getInputStream();\n        token \u003d parseTokenFromStream(httpResponseStream);\n      } else {\n        String responseBody \u003d consumeInputStream(conn.getInputStream(), 1024);\n        String proxies \u003d \"none\";\n        String httpProxy \u003d System.getProperty(\"http.proxy\");\n        String httpsProxy \u003d System.getProperty(\"https.proxy\");\n        if (httpProxy !\u003d null || httpsProxy !\u003d null) {\n          proxies \u003d \"http:\" + httpProxy + \"; https:\" + httpsProxy;\n        }\n        String logMessage \u003d\n                \"AADToken: HTTP connection failed for getting token from AzureAD. Http response: \"\n                        + httpResponseCode + \" \" + conn.getResponseMessage()\n                        + \" Content-Type: \" + responseContentType\n                        + \" Content-Length: \" + responseContentLength\n                        + \" Request ID: \" + requestId.toString()\n                        + \" Proxies: \" + proxies\n                        + \" First 1K of Body: \" + responseBody;\n        LOG.debug(logMessage);\n        throw new HttpException(httpResponseCode, requestId, logMessage);\n      }\n    } finally {\n      if (conn !\u003d null) {\n        conn.disconnect();\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/AzureADAuthenticator.java"
    }
  }
}