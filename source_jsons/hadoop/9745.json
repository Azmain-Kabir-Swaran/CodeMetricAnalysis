{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LevelDBFileRegionAliasMap.java",
  "functionName": "createDB",
  "functionId": "createDB___levelDBPath-String__createIfMissing-boolean__blockPoolID-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/LevelDBFileRegionAliasMap.java",
  "functionStartLine": 100,
  "functionEndLine": 122,
  "numCommitsSeen": 6,
  "timeTaken": 2017,
  "changeHistory": [
    "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
    "9c35be86e17021202823bfd3c2067ff3b312ce5c",
    "b634053c4daec181511abb314aeef0a8fe851086"
  ],
  "changeHistoryShort": {
    "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7": "Ybodychange",
    "9c35be86e17021202823bfd3c2067ff3b312ce5c": "Ymultichange(Yparameterchange,Ybodychange)",
    "b634053c4daec181511abb314aeef0a8fe851086": "Yintroduced"
  },
  "changeHistoryDetails": {
    "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12912. [READ] Fix configuration and implementation of LevelDB-based alias maps\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "9c35be86e17021202823bfd3c2067ff3b312ce5c",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,23 @@\n   private static DB createDB(String levelDBPath, boolean createIfMissing,\n       String blockPoolID) throws IOException {\n     if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n       throw new IllegalArgumentException(\n           \"A valid path needs to be specified for \"\n               + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n               + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n     }\n     org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n     options.createIfMissing(createIfMissing);\n     File dbFile;\n     if (blockPoolID !\u003d null) {\n       dbFile \u003d new File(levelDBPath, blockPoolID);\n     } else {\n       dbFile \u003d new File(levelDBPath);\n     }\n+    if (createIfMissing \u0026\u0026 !dbFile.exists()) {\n+      if (!dbFile.mkdirs()) {\n+        throw new IOException(\"Unable to create \" + dbFile);\n+      }\n+    }\n     return factory.open(dbFile, options);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static DB createDB(String levelDBPath, boolean createIfMissing,\n      String blockPoolID) throws IOException {\n    if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n      throw new IllegalArgumentException(\n          \"A valid path needs to be specified for \"\n              + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n              + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n    }\n    org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n    options.createIfMissing(createIfMissing);\n    File dbFile;\n    if (blockPoolID !\u003d null) {\n      dbFile \u003d new File(levelDBPath, blockPoolID);\n    } else {\n      dbFile \u003d new File(levelDBPath);\n    }\n    if (createIfMissing \u0026\u0026 !dbFile.exists()) {\n      if (!dbFile.mkdirs()) {\n        throw new IOException(\"Unable to create \" + dbFile);\n      }\n    }\n    return factory.open(dbFile, options);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/LevelDBFileRegionAliasMap.java",
      "extendedDetails": {}
    },
    "9c35be86e17021202823bfd3c2067ff3b312ce5c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12713. [READ] Refactor FileRegion and BlockAliasMap to separate out HDFS metadata and PROVIDED storage metadata. Contributed by Ewan Higgs\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "9c35be86e17021202823bfd3c2067ff3b312ce5c",
      "commitAuthor": "Virajith Jalaparti",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12713. [READ] Refactor FileRegion and BlockAliasMap to separate out HDFS metadata and PROVIDED storage metadata. Contributed by Ewan Higgs\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "9c35be86e17021202823bfd3c2067ff3b312ce5c",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "15/12/17 5:51 PM",
          "commitNameOld": "a027055dd2bf5009fe272e9ceb08305bd0a8cc31",
          "commitAuthorOld": "Virajith Jalaparti",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-  private static DB createDB(String levelDBPath, boolean createIfMissing)\n-      throws IOException {\n+  private static DB createDB(String levelDBPath, boolean createIfMissing,\n+      String blockPoolID) throws IOException {\n     if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n       throw new IllegalArgumentException(\n           \"A valid path needs to be specified for \"\n               + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n               + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n     }\n     org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n     options.createIfMissing(createIfMissing);\n-    return factory.open(new File(levelDBPath), options);\n+    File dbFile;\n+    if (blockPoolID !\u003d null) {\n+      dbFile \u003d new File(levelDBPath, blockPoolID);\n+    } else {\n+      dbFile \u003d new File(levelDBPath);\n+    }\n+    return factory.open(dbFile, options);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DB createDB(String levelDBPath, boolean createIfMissing,\n      String blockPoolID) throws IOException {\n    if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n      throw new IllegalArgumentException(\n          \"A valid path needs to be specified for \"\n              + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n              + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n    }\n    org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n    options.createIfMissing(createIfMissing);\n    File dbFile;\n    if (blockPoolID !\u003d null) {\n      dbFile \u003d new File(levelDBPath, blockPoolID);\n    } else {\n      dbFile \u003d new File(levelDBPath);\n    }\n    return factory.open(dbFile, options);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/LevelDBFileRegionAliasMap.java",
          "extendedDetails": {
            "oldValue": "[levelDBPath-String, createIfMissing-boolean]",
            "newValue": "[levelDBPath-String, createIfMissing-boolean, blockPoolID-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12713. [READ] Refactor FileRegion and BlockAliasMap to separate out HDFS metadata and PROVIDED storage metadata. Contributed by Ewan Higgs\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "9c35be86e17021202823bfd3c2067ff3b312ce5c",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "15/12/17 5:51 PM",
          "commitNameOld": "a027055dd2bf5009fe272e9ceb08305bd0a8cc31",
          "commitAuthorOld": "Virajith Jalaparti",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-  private static DB createDB(String levelDBPath, boolean createIfMissing)\n-      throws IOException {\n+  private static DB createDB(String levelDBPath, boolean createIfMissing,\n+      String blockPoolID) throws IOException {\n     if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n       throw new IllegalArgumentException(\n           \"A valid path needs to be specified for \"\n               + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n               + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n     }\n     org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n     options.createIfMissing(createIfMissing);\n-    return factory.open(new File(levelDBPath), options);\n+    File dbFile;\n+    if (blockPoolID !\u003d null) {\n+      dbFile \u003d new File(levelDBPath, blockPoolID);\n+    } else {\n+      dbFile \u003d new File(levelDBPath);\n+    }\n+    return factory.open(dbFile, options);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static DB createDB(String levelDBPath, boolean createIfMissing,\n      String blockPoolID) throws IOException {\n    if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n      throw new IllegalArgumentException(\n          \"A valid path needs to be specified for \"\n              + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n              + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n    }\n    org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n    options.createIfMissing(createIfMissing);\n    File dbFile;\n    if (blockPoolID !\u003d null) {\n      dbFile \u003d new File(levelDBPath, blockPoolID);\n    } else {\n      dbFile \u003d new File(levelDBPath);\n    }\n    return factory.open(dbFile, options);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/LevelDBFileRegionAliasMap.java",
          "extendedDetails": {}
        }
      ]
    },
    "b634053c4daec181511abb314aeef0a8fe851086": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12591. [READ] Implement LevelDBFileRegionFormat. Contributed by Ewan Higgs.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b634053c4daec181511abb314aeef0a8fe851086",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,12 @@\n+  private static DB createDB(String levelDBPath, boolean createIfMissing)\n+      throws IOException {\n+    if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n+      throw new IllegalArgumentException(\n+          \"A valid path needs to be specified for \"\n+              + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n+              + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n+    }\n+    org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n+    options.createIfMissing(createIfMissing);\n+    return factory.open(new File(levelDBPath), options);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static DB createDB(String levelDBPath, boolean createIfMissing)\n      throws IOException {\n    if (levelDBPath \u003d\u003d null || levelDBPath.length() \u003d\u003d 0) {\n      throw new IllegalArgumentException(\n          \"A valid path needs to be specified for \"\n              + LevelDBFileRegionAliasMap.class + \" using the parameter \"\n              + DFS_PROVIDED_ALIASMAP_LEVELDB_PATH);\n    }\n    org.iq80.leveldb.Options options \u003d new org.iq80.leveldb.Options();\n    options.createIfMissing(createIfMissing);\n    return factory.open(new File(levelDBPath), options);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/blockaliasmap/impl/LevelDBFileRegionAliasMap.java"
    }
  }
}