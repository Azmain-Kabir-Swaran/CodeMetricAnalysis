{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DynamoDBMetadataStore.java",
  "functionName": "get",
  "functionId": "get___path-Path__wantEmptyDirectoryFlag-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
  "functionStartLine": 717,
  "functionEndLine": 725,
  "numCommitsSeen": 42,
  "timeTaken": 3342,
  "changeHistory": [
    "e02eb24e0a9139418120027b694492e0738df20a",
    "d7c0a08a1c077752918a8cf1b4f1900ce2721899",
    "d7232857d8d1e10cdac171acdc931187e45fd6be",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "e02eb24e0a9139418120027b694492e0738df20a": "Ybodychange",
    "d7c0a08a1c077752918a8cf1b4f1900ce2721899": "Ybodychange",
    "d7232857d8d1e10cdac171acdc931187e45fd6be": "Yreturntypechange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e02eb24e0a9139418120027b694492e0738df20a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
      "commitDate": "20/06/19 1:56 AM",
      "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "16/06/19 9:05 AM",
      "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
      "commitAuthorOld": "Gabor Bota",
      "daysBetweenCommits": 3.7,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,9 @@\n   public DDBPathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n       throws IOException {\n     checkPath(path);\n-    LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n-    return innerGet(path, wantEmptyDirectoryFlag);\n+    LOG.debug(\"Get from table {} in region {}: {}. wantEmptyDirectory\u003d{}\",\n+        tableName, region, path, wantEmptyDirectoryFlag);\n+    DDBPathMetadata result \u003d innerGet(path, wantEmptyDirectoryFlag);\n+    LOG.debug(\"result of get {} is: {}\", path, result);\n+    return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DDBPathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n      throws IOException {\n    checkPath(path);\n    LOG.debug(\"Get from table {} in region {}: {}. wantEmptyDirectory\u003d{}\",\n        tableName, region, path, wantEmptyDirectoryFlag);\n    DDBPathMetadata result \u003d innerGet(path, wantEmptyDirectoryFlag);\n    LOG.debug(\"result of get {} is: {}\", path, result);\n    return result;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "d7c0a08a1c077752918a8cf1b4f1900ce2721899": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15426 Make S3guard client resilient to DDB throttle events and network failures (Contributed by Steve Loughran)\n",
      "commitDate": "12/09/18 9:04 PM",
      "commitName": "d7c0a08a1c077752918a8cf1b4f1900ce2721899",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "12/09/18 4:36 PM",
      "commitNameOld": "d32a8d5d582725eb724b78f27310ad1efd33ed2a",
      "commitAuthorOld": "Aaron Fabbri",
      "daysBetweenCommits": 0.19,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,6 @@\n   public DDBPathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n       throws IOException {\n     checkPath(path);\n     LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n-    return Invoker.once(\"get\", path.toString(),\n-        () -\u003e innerGet(path, wantEmptyDirectoryFlag));\n+    return innerGet(path, wantEmptyDirectoryFlag);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DDBPathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n      throws IOException {\n    checkPath(path);\n    LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n    return innerGet(path, wantEmptyDirectoryFlag);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "d7232857d8d1e10cdac171acdc931187e45fd6be": {
      "type": "Yreturntypechange",
      "commitMessage": "HADOOP-14154 Persist isAuthoritative bit in DynamoDBMetaStore (Contributed by Gabor Bota)\n",
      "commitDate": "17/08/18 10:15 AM",
      "commitName": "d7232857d8d1e10cdac171acdc931187e45fd6be",
      "commitAuthor": "Aaron Fabbri",
      "commitDateOld": "08/08/18 10:57 PM",
      "commitNameOld": "da9a39eed138210de29b59b90c449b28da1c04f9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 8.47,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n-  public PathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n+  public DDBPathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n       throws IOException {\n     checkPath(path);\n     LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n     return Invoker.once(\"get\", path.toString(),\n         () -\u003e innerGet(path, wantEmptyDirectoryFlag));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DDBPathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n      throws IOException {\n    checkPath(path);\n    LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n    return Invoker.once(\"get\", path.toString(),\n        () -\u003e innerGet(path, wantEmptyDirectoryFlag));\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {
        "oldValue": "PathMetadata",
        "newValue": "DDBPathMetadata"
      }
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "25/09/17 3:59 PM",
      "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
      "commitAuthorOld": "Aaron Fabbri",
      "daysBetweenCommits": 57.69,
      "commitsBetweenForRepo": 477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,7 @@\n   public PathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n       throws IOException {\n-    path \u003d checkPath(path);\n+    checkPath(path);\n     LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n-\n-    try {\n-      final PathMetadata meta;\n-      if (path.isRoot()) {\n-        // Root does not persist in the table\n-        meta \u003d new PathMetadata(makeDirStatus(username, path));\n-      } else {\n-        final Item item \u003d getConsistentItem(pathToKey(path));\n-        meta \u003d itemToPathMetadata(item, username);\n-        LOG.debug(\"Get from table {} in region {} returning for {}: {}\",\n-            tableName, region, path, meta);\n-      }\n-\n-      if (wantEmptyDirectoryFlag \u0026\u0026 meta !\u003d null) {\n-        final FileStatus status \u003d meta.getFileStatus();\n-        // for directory, we query its direct children to determine isEmpty bit\n-        if (status.isDirectory()) {\n-          final QuerySpec spec \u003d new QuerySpec()\n-              .withHashKey(pathToParentKeyAttribute(path))\n-              .withConsistentRead(true)\n-              .withFilterExpression(IS_DELETED + \" \u003d :false\")\n-              .withValueMap(deleteTrackingValueMap);\n-          final ItemCollection\u003cQueryOutcome\u003e items \u003d table.query(spec);\n-          boolean hasChildren \u003d items.iterator().hasNext();\n-          // When this class has support for authoritative\n-          // (fully-cached) directory listings, we may also be able to answer\n-          // TRUE here.  Until then, we don\u0027t know if we have full listing or\n-          // not, thus the UNKNOWN here:\n-          meta.setIsEmptyDirectory(\n-              hasChildren ? Tristate.FALSE : Tristate.UNKNOWN);\n-        }\n-      }\n-\n-      return meta;\n-    } catch (AmazonClientException e) {\n-      throw translateException(\"get\", path, e);\n-    }\n+    return Invoker.once(\"get\", path.toString(),\n+        () -\u003e innerGet(path, wantEmptyDirectoryFlag));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public PathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n      throws IOException {\n    checkPath(path);\n    LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n    return Invoker.once(\"get\", path.toString(),\n        () -\u003e innerGet(path, wantEmptyDirectoryFlag));\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,42 @@\n+  public PathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n+      throws IOException {\n+    path \u003d checkPath(path);\n+    LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n+\n+    try {\n+      final PathMetadata meta;\n+      if (path.isRoot()) {\n+        // Root does not persist in the table\n+        meta \u003d new PathMetadata(makeDirStatus(username, path));\n+      } else {\n+        final Item item \u003d getConsistentItem(pathToKey(path));\n+        meta \u003d itemToPathMetadata(item, username);\n+        LOG.debug(\"Get from table {} in region {} returning for {}: {}\",\n+            tableName, region, path, meta);\n+      }\n+\n+      if (wantEmptyDirectoryFlag \u0026\u0026 meta !\u003d null) {\n+        final FileStatus status \u003d meta.getFileStatus();\n+        // for directory, we query its direct children to determine isEmpty bit\n+        if (status.isDirectory()) {\n+          final QuerySpec spec \u003d new QuerySpec()\n+              .withHashKey(pathToParentKeyAttribute(path))\n+              .withConsistentRead(true)\n+              .withFilterExpression(IS_DELETED + \" \u003d :false\")\n+              .withValueMap(deleteTrackingValueMap);\n+          final ItemCollection\u003cQueryOutcome\u003e items \u003d table.query(spec);\n+          boolean hasChildren \u003d items.iterator().hasNext();\n+          // When this class has support for authoritative\n+          // (fully-cached) directory listings, we may also be able to answer\n+          // TRUE here.  Until then, we don\u0027t know if we have full listing or\n+          // not, thus the UNKNOWN here:\n+          meta.setIsEmptyDirectory(\n+              hasChildren ? Tristate.FALSE : Tristate.UNKNOWN);\n+        }\n+      }\n+\n+      return meta;\n+    } catch (AmazonClientException e) {\n+      throw translateException(\"get\", path, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public PathMetadata get(Path path, boolean wantEmptyDirectoryFlag)\n      throws IOException {\n    path \u003d checkPath(path);\n    LOG.debug(\"Get from table {} in region {}: {}\", tableName, region, path);\n\n    try {\n      final PathMetadata meta;\n      if (path.isRoot()) {\n        // Root does not persist in the table\n        meta \u003d new PathMetadata(makeDirStatus(username, path));\n      } else {\n        final Item item \u003d getConsistentItem(pathToKey(path));\n        meta \u003d itemToPathMetadata(item, username);\n        LOG.debug(\"Get from table {} in region {} returning for {}: {}\",\n            tableName, region, path, meta);\n      }\n\n      if (wantEmptyDirectoryFlag \u0026\u0026 meta !\u003d null) {\n        final FileStatus status \u003d meta.getFileStatus();\n        // for directory, we query its direct children to determine isEmpty bit\n        if (status.isDirectory()) {\n          final QuerySpec spec \u003d new QuerySpec()\n              .withHashKey(pathToParentKeyAttribute(path))\n              .withConsistentRead(true)\n              .withFilterExpression(IS_DELETED + \" \u003d :false\")\n              .withValueMap(deleteTrackingValueMap);\n          final ItemCollection\u003cQueryOutcome\u003e items \u003d table.query(spec);\n          boolean hasChildren \u003d items.iterator().hasNext();\n          // When this class has support for authoritative\n          // (fully-cached) directory listings, we may also be able to answer\n          // TRUE here.  Until then, we don\u0027t know if we have full listing or\n          // not, thus the UNKNOWN here:\n          meta.setIsEmptyDirectory(\n              hasChildren ? Tristate.FALSE : Tristate.UNKNOWN);\n        }\n      }\n\n      return meta;\n    } catch (AmazonClientException e) {\n      throw translateException(\"get\", path, e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java"
    }
  }
}