{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataChecksum.java",
  "functionName": "calculateChunkedSums",
  "functionId": "calculateChunkedSums___data-ByteBuffer__checksums-ByteBuffer",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
  "functionStartLine": 493,
  "functionEndLine": 523,
  "numCommitsSeen": 28,
  "timeTaken": 1422,
  "changeHistory": [
    "e446497cd1e9b892659e9cfb79d37f33a4e39de0",
    "3cab01ba6e0349126a23063e135cd5c814a4ae18",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "22fa0e43e37478707963a86f66e95d2a6dddf812"
  ],
  "changeHistoryShort": {
    "e446497cd1e9b892659e9cfb79d37f33a4e39de0": "Ybodychange",
    "3cab01ba6e0349126a23063e135cd5c814a4ae18": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "22fa0e43e37478707963a86f66e95d2a6dddf812": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e446497cd1e9b892659e9cfb79d37f33a4e39de0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6561. org.apache.hadoop.util.DataChecksum should support native checksumming (James Thomas via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618680 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/14 11:02 AM",
      "commitName": "e446497cd1e9b892659e9cfb79d37f33a4e39de0",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "13/08/14 9:29 PM",
      "commitNameOld": "bd79a4b9263726f4642c94bff689dbc109592a70",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 4.56,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,31 @@\n   public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n     if (type.size \u003d\u003d 0) return;\n     \n     if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n       calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n           checksums.array(), checksums.arrayOffset() + checksums.position());\n       return;\n     }\n+\n+    if (NativeCrc32.isAvailable()) {\n+      NativeCrc32.calculateChunkedSums(bytesPerChecksum, type.id,\n+          checksums, data);\n+      return;\n+    }\n     \n     data.mark();\n     checksums.mark();\n     try {\n       byte[] buf \u003d new byte[bytesPerChecksum];\n       while (data.remaining() \u003e 0) {\n         int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n         data.get(buf, 0, n);\n         summer.reset();\n         summer.update(buf, 0, n);\n         checksums.putInt((int)summer.getValue());\n       }\n     } finally {\n       data.reset();\n       checksums.reset();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n    if (type.size \u003d\u003d 0) return;\n    \n    if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n          checksums.array(), checksums.arrayOffset() + checksums.position());\n      return;\n    }\n\n    if (NativeCrc32.isAvailable()) {\n      NativeCrc32.calculateChunkedSums(bytesPerChecksum, type.id,\n          checksums, data);\n      return;\n    }\n    \n    data.mark();\n    checksums.mark();\n    try {\n      byte[] buf \u003d new byte[bytesPerChecksum];\n      while (data.remaining() \u003e 0) {\n        int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n        data.get(buf, 0, n);\n        summer.reset();\n        summer.update(buf, 0, n);\n        checksums.putInt((int)summer.getValue());\n      }\n    } finally {\n      data.reset();\n      checksums.reset();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
      "extendedDetails": {}
    },
    "3cab01ba6e0349126a23063e135cd5c814a4ae18": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8700.  Use enum to define the checksum constants in DataChecksum.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1373683 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/12 6:32 PM",
      "commitName": "3cab01ba6e0349126a23063e135cd5c814a4ae18",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "31/10/11 10:25 PM",
      "commitNameOld": "a6c110ebd05155fa5bdae4e2d195493d2d04dd4f",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 288.84,
      "commitsBetweenForRepo": 1832,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n-    if (size \u003d\u003d 0) return;\n+    if (type.size \u003d\u003d 0) return;\n     \n     if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n       calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n           checksums.array(), checksums.arrayOffset() + checksums.position());\n       return;\n     }\n     \n     data.mark();\n     checksums.mark();\n     try {\n       byte[] buf \u003d new byte[bytesPerChecksum];\n       while (data.remaining() \u003e 0) {\n         int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n         data.get(buf, 0, n);\n         summer.reset();\n         summer.update(buf, 0, n);\n         checksums.putInt((int)summer.getValue());\n       }\n     } finally {\n       data.reset();\n       checksums.reset();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n    if (type.size \u003d\u003d 0) return;\n    \n    if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n          checksums.array(), checksums.arrayOffset() + checksums.position());\n      return;\n    }\n    \n    data.mark();\n    checksums.mark();\n    try {\n      byte[] buf \u003d new byte[bytesPerChecksum];\n      while (data.remaining() \u003e 0) {\n        int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n        data.get(buf, 0, n);\n        summer.reset();\n        summer.update(buf, 0, n);\n        checksums.putInt((int)summer.getValue());\n      }\n    } finally {\n      data.reset();\n      checksums.reset();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n    if (size \u003d\u003d 0) return;\n    \n    if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n          checksums.array(), checksums.arrayOffset() + checksums.position());\n      return;\n    }\n    \n    data.mark();\n    checksums.mark();\n    try {\n      byte[] buf \u003d new byte[bytesPerChecksum];\n      while (data.remaining() \u003e 0) {\n        int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n        data.get(buf, 0, n);\n        summer.reset();\n        summer.update(buf, 0, n);\n        checksums.putInt((int)summer.getValue());\n      }\n    } finally {\n      data.reset();\n      checksums.reset();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n    if (size \u003d\u003d 0) return;\n    \n    if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n          checksums.array(), checksums.arrayOffset() + checksums.position());\n      return;\n    }\n    \n    data.mark();\n    checksums.mark();\n    try {\n      byte[] buf \u003d new byte[bytesPerChecksum];\n      while (data.remaining() \u003e 0) {\n        int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n        data.get(buf, 0, n);\n        summer.reset();\n        summer.update(buf, 0, n);\n        checksums.putInt((int)summer.getValue());\n      }\n    } finally {\n      data.reset();\n      checksums.reset();\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/DataChecksum.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java"
      }
    },
    "22fa0e43e37478707963a86f66e95d2a6dddf812": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7444. Add Checksum API to verify and calculate checksums \"in bulk\". Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1146111 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/07/11 9:12 AM",
      "commitName": "22fa0e43e37478707963a86f66e95d2a6dddf812",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,25 @@\n+  public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n+    if (size \u003d\u003d 0) return;\n+    \n+    if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n+      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n+          checksums.array(), checksums.arrayOffset() + checksums.position());\n+      return;\n+    }\n+    \n+    data.mark();\n+    checksums.mark();\n+    try {\n+      byte[] buf \u003d new byte[bytesPerChecksum];\n+      while (data.remaining() \u003e 0) {\n+        int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n+        data.get(buf, 0, n);\n+        summer.reset();\n+        summer.update(buf, 0, n);\n+        checksums.putInt((int)summer.getValue());\n+      }\n+    } finally {\n+      data.reset();\n+      checksums.reset();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void calculateChunkedSums(ByteBuffer data, ByteBuffer checksums) {\n    if (size \u003d\u003d 0) return;\n    \n    if (data.hasArray() \u0026\u0026 checksums.hasArray()) {\n      calculateChunkedSums(data.array(), data.arrayOffset() + data.position(), data.remaining(),\n          checksums.array(), checksums.arrayOffset() + checksums.position());\n      return;\n    }\n    \n    data.mark();\n    checksums.mark();\n    try {\n      byte[] buf \u003d new byte[bytesPerChecksum];\n      while (data.remaining() \u003e 0) {\n        int n \u003d Math.min(data.remaining(), bytesPerChecksum);\n        data.get(buf, 0, n);\n        summer.reset();\n        summer.update(buf, 0, n);\n        checksums.putInt((int)summer.getValue());\n      }\n    } finally {\n      data.reset();\n      checksums.reset();\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/util/DataChecksum.java"
    }
  }
}