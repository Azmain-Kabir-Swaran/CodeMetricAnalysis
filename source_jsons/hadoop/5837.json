{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameNodeRpcServer.java",
  "functionName": "verifyRequest",
  "functionId": "verifyRequest___nodeReg-NodeRegistration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
  "functionStartLine": 1738,
  "functionEndLine": 1748,
  "numCommitsSeen": 324,
  "timeTaken": 10129,
  "changeHistory": [
    "8955f718f1747debf367af385f0722b4d113e599",
    "c69cc31adcd7cce3deb383d461cfc55f275f0ba3",
    "00067895a01c66d53715b50bbcb3605efd6425f2",
    "7f427646dfe80f9a4dfac0a979709f367e74a7e7",
    "b0632df93ae5d00180b21983d960d50a45f8fb7a",
    "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8955f718f1747debf367af385f0722b4d113e599": "Ybodychange",
    "c69cc31adcd7cce3deb383d461cfc55f275f0ba3": "Ymultichange(Ymodifierchange,Ybodychange)",
    "00067895a01c66d53715b50bbcb3605efd6425f2": "Ybodychange",
    "7f427646dfe80f9a4dfac0a979709f367e74a7e7": "Ybodychange",
    "b0632df93ae5d00180b21983d960d50a45f8fb7a": "Ymovefromfile",
    "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8955f718f1747debf367af385f0722b4d113e599": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6060. NameNode should not check DataNode layout version. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575021 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/14 11:29 AM",
      "commitName": "8955f718f1747debf367af385f0722b4d113e599",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "28/02/14 5:14 PM",
      "commitNameOld": "0a7db7f1791200669a4e0bce1debbf7428b30e96",
      "commitAuthorOld": "",
      "daysBetweenCommits": 5.76,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,11 @@\n   private void verifyRequest(NodeRegistration nodeReg) throws IOException {\n     // verify registration ID\n     final String id \u003d nodeReg.getRegistrationID();\n     final String expectedID \u003d namesystem.getRegistrationID();\n     if (!expectedID.equals(id)) {\n       LOG.warn(\"Registration IDs mismatched: the \"\n           + nodeReg.getClass().getSimpleName() + \" ID is \" + id\n           + \" but the expected ID is \" + expectedID);\n        throw new UnregisteredNodeException(nodeReg);\n     }\n-\n-    // verify layout version if there is no rolling upgrade.\n-    if (!namesystem.isRollingUpgrade()) {\n-      final int lv \u003d nodeReg.getVersion();\n-      final int expectedLV \u003d nodeReg instanceof NamenodeRegistration?\n-          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION\n-          : DataNodeLayoutVersion.CURRENT_LAYOUT_VERSION;\n-      if (expectedLV !\u003d nodeReg.getVersion()) {\n-        LOG.warn(\"Layout versions mismatched: the \"\n-            + nodeReg.getClass().getSimpleName() + \" LV is \" + lv\n-            + \" but the expected LV is \" + expectedLV);\n-         throw new UnregisteredNodeException(nodeReg);\n-      }\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    // verify registration ID\n    final String id \u003d nodeReg.getRegistrationID();\n    final String expectedID \u003d namesystem.getRegistrationID();\n    if (!expectedID.equals(id)) {\n      LOG.warn(\"Registration IDs mismatched: the \"\n          + nodeReg.getClass().getSimpleName() + \" ID is \" + id\n          + \" but the expected ID is \" + expectedID);\n       throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
      "extendedDetails": {}
    },
    "c69cc31adcd7cce3deb383d461cfc55f275f0ba3": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-6034. Use DataNodeLayoutVersion for DN registration check and do not verify layout version if there is a rolling upgrade in progress.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1573119 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/14 5:14 PM",
      "commitName": "c69cc31adcd7cce3deb383d461cfc55f275f0ba3",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6034. Use DataNodeLayoutVersion for DN registration check and do not verify layout version if there is a rolling upgrade in progress.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1573119 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/02/14 5:14 PM",
          "commitName": "c69cc31adcd7cce3deb383d461cfc55f275f0ba3",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/02/14 2:05 PM",
          "commitNameOld": "c066cef587bdc3c1d33cba47f4fb5ab5d11e5892",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 4.13,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,25 @@\n-  void verifyRequest(NodeRegistration nodeReg) throws IOException {\n-    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n-      LOG.warn(\"Invalid registrationID - expected: \"\n-          + namesystem.getRegistrationID() + \" received: \"\n-          + nodeReg.getRegistrationID());\n-      throw new UnregisteredNodeException(nodeReg);\n+  private void verifyRequest(NodeRegistration nodeReg) throws IOException {\n+    // verify registration ID\n+    final String id \u003d nodeReg.getRegistrationID();\n+    final String expectedID \u003d namesystem.getRegistrationID();\n+    if (!expectedID.equals(id)) {\n+      LOG.warn(\"Registration IDs mismatched: the \"\n+          + nodeReg.getClass().getSimpleName() + \" ID is \" + id\n+          + \" but the expected ID is \" + expectedID);\n+       throw new UnregisteredNodeException(nodeReg);\n+    }\n+\n+    // verify layout version if there is no rolling upgrade.\n+    if (!namesystem.isRollingUpgrade()) {\n+      final int lv \u003d nodeReg.getVersion();\n+      final int expectedLV \u003d nodeReg instanceof NamenodeRegistration?\n+          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION\n+          : DataNodeLayoutVersion.CURRENT_LAYOUT_VERSION;\n+      if (expectedLV !\u003d nodeReg.getVersion()) {\n+        LOG.warn(\"Layout versions mismatched: the \"\n+            + nodeReg.getClass().getSimpleName() + \" LV is \" + lv\n+            + \" but the expected LV is \" + expectedLV);\n+         throw new UnregisteredNodeException(nodeReg);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    // verify registration ID\n    final String id \u003d nodeReg.getRegistrationID();\n    final String expectedID \u003d namesystem.getRegistrationID();\n    if (!expectedID.equals(id)) {\n      LOG.warn(\"Registration IDs mismatched: the \"\n          + nodeReg.getClass().getSimpleName() + \" ID is \" + id\n          + \" but the expected ID is \" + expectedID);\n       throw new UnregisteredNodeException(nodeReg);\n    }\n\n    // verify layout version if there is no rolling upgrade.\n    if (!namesystem.isRollingUpgrade()) {\n      final int lv \u003d nodeReg.getVersion();\n      final int expectedLV \u003d nodeReg instanceof NamenodeRegistration?\n          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION\n          : DataNodeLayoutVersion.CURRENT_LAYOUT_VERSION;\n      if (expectedLV !\u003d nodeReg.getVersion()) {\n        LOG.warn(\"Layout versions mismatched: the \"\n            + nodeReg.getClass().getSimpleName() + \" LV is \" + lv\n            + \" but the expected LV is \" + expectedLV);\n         throw new UnregisteredNodeException(nodeReg);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6034. Use DataNodeLayoutVersion for DN registration check and do not verify layout version if there is a rolling upgrade in progress.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1573119 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/02/14 5:14 PM",
          "commitName": "c69cc31adcd7cce3deb383d461cfc55f275f0ba3",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/02/14 2:05 PM",
          "commitNameOld": "c066cef587bdc3c1d33cba47f4fb5ab5d11e5892",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 4.13,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,25 @@\n-  void verifyRequest(NodeRegistration nodeReg) throws IOException {\n-    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n-      LOG.warn(\"Invalid registrationID - expected: \"\n-          + namesystem.getRegistrationID() + \" received: \"\n-          + nodeReg.getRegistrationID());\n-      throw new UnregisteredNodeException(nodeReg);\n+  private void verifyRequest(NodeRegistration nodeReg) throws IOException {\n+    // verify registration ID\n+    final String id \u003d nodeReg.getRegistrationID();\n+    final String expectedID \u003d namesystem.getRegistrationID();\n+    if (!expectedID.equals(id)) {\n+      LOG.warn(\"Registration IDs mismatched: the \"\n+          + nodeReg.getClass().getSimpleName() + \" ID is \" + id\n+          + \" but the expected ID is \" + expectedID);\n+       throw new UnregisteredNodeException(nodeReg);\n+    }\n+\n+    // verify layout version if there is no rolling upgrade.\n+    if (!namesystem.isRollingUpgrade()) {\n+      final int lv \u003d nodeReg.getVersion();\n+      final int expectedLV \u003d nodeReg instanceof NamenodeRegistration?\n+          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION\n+          : DataNodeLayoutVersion.CURRENT_LAYOUT_VERSION;\n+      if (expectedLV !\u003d nodeReg.getVersion()) {\n+        LOG.warn(\"Layout versions mismatched: the \"\n+            + nodeReg.getClass().getSimpleName() + \" LV is \" + lv\n+            + \" but the expected LV is \" + expectedLV);\n+         throw new UnregisteredNodeException(nodeReg);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    // verify registration ID\n    final String id \u003d nodeReg.getRegistrationID();\n    final String expectedID \u003d namesystem.getRegistrationID();\n    if (!expectedID.equals(id)) {\n      LOG.warn(\"Registration IDs mismatched: the \"\n          + nodeReg.getClass().getSimpleName() + \" ID is \" + id\n          + \" but the expected ID is \" + expectedID);\n       throw new UnregisteredNodeException(nodeReg);\n    }\n\n    // verify layout version if there is no rolling upgrade.\n    if (!namesystem.isRollingUpgrade()) {\n      final int lv \u003d nodeReg.getVersion();\n      final int expectedLV \u003d nodeReg instanceof NamenodeRegistration?\n          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION\n          : DataNodeLayoutVersion.CURRENT_LAYOUT_VERSION;\n      if (expectedLV !\u003d nodeReg.getVersion()) {\n        LOG.warn(\"Layout versions mismatched: the \"\n            + nodeReg.getClass().getSimpleName() + \" LV is \" + lv\n            + \" but the expected LV is \" + expectedLV);\n         throw new UnregisteredNodeException(nodeReg);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "00067895a01c66d53715b50bbcb3605efd6425f2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5754. Split LayoutVerion into NameNodeLayoutVersion and DataNodeLayoutVersion. Contributed by Brandon Li\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1563041 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 7:21 PM",
      "commitName": "00067895a01c66d53715b50bbcb3605efd6425f2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "17/01/14 6:07 PM",
      "commitNameOld": "09b8ce5b442489739694a2ebac4e342f6d2e2ac0",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 13.05,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,8 @@\n   void verifyRequest(NodeRegistration nodeReg) throws IOException {\n-    verifyLayoutVersion(nodeReg.getVersion());\n     if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n       LOG.warn(\"Invalid registrationID - expected: \"\n           + namesystem.getRegistrationID() + \" received: \"\n           + nodeReg.getRegistrationID());\n       throw new UnregisteredNodeException(nodeReg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n      LOG.warn(\"Invalid registrationID - expected: \"\n          + namesystem.getRegistrationID() + \" received: \"\n          + nodeReg.getRegistrationID());\n      throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
      "extendedDetails": {}
    },
    "7f427646dfe80f9a4dfac0a979709f367e74a7e7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2983. Relax the build version check to permit rolling upgrades within a release. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1325110 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/12 8:36 PM",
      "commitName": "7f427646dfe80f9a4dfac0a979709f367e74a7e7",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "01/04/12 3:12 PM",
      "commitNameOld": "be7dd8333a7e56e732171db0781786987de03195",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 10.23,
      "commitsBetweenForRepo": 113,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   void verifyRequest(NodeRegistration nodeReg) throws IOException {\n-    verifyVersion(nodeReg.getVersion());\n+    verifyLayoutVersion(nodeReg.getVersion());\n     if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n       LOG.warn(\"Invalid registrationID - expected: \"\n           + namesystem.getRegistrationID() + \" received: \"\n           + nodeReg.getRegistrationID());\n       throw new UnregisteredNodeException(nodeReg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    verifyLayoutVersion(nodeReg.getVersion());\n    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n      LOG.warn(\"Invalid registrationID - expected: \"\n          + namesystem.getRegistrationID() + \" received: \"\n          + nodeReg.getRegistrationID());\n      throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
      "extendedDetails": {}
    },
    "b0632df93ae5d00180b21983d960d50a45f8fb7a": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-2197. Refactor RPC call implementations out of NameNode class. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165463 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/11 5:41 PM",
      "commitName": "b0632df93ae5d00180b21983d960d50a45f8fb7a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "05/09/11 5:34 PM",
      "commitNameOld": "d1438b501dae9efc7aa84de35a57e1b8e6f5645e",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    verifyVersion(nodeReg.getVersion());\n    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n      LOG.warn(\"Invalid registrationID - expected: \"\n          + namesystem.getRegistrationID() + \" received: \"\n          + nodeReg.getRegistrationID());\n      throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
        "oldMethodName": "verifyRequest",
        "newMethodName": "verifyRequest"
      }
    },
    "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-1217.  Change some NameNode methods from public to package private.  Constributed by Laxman\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163081 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/08/11 9:02 PM",
      "commitName": "aba0e225fc2d8a6b29dea0aa7b73eb173b02e373",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "25/08/11 9:46 PM",
      "commitNameOld": "73451ed2d9fb5eb228d80ad5f3be302a60496527",
      "commitAuthorOld": "Hairong Kuang",
      "daysBetweenCommits": 3.97,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n-  public void verifyRequest(NodeRegistration nodeReg) throws IOException {\n+  void verifyRequest(NodeRegistration nodeReg) throws IOException {\n     verifyVersion(nodeReg.getVersion());\n     if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n       LOG.warn(\"Invalid registrationID - expected: \"\n           + namesystem.getRegistrationID() + \" received: \"\n           + nodeReg.getRegistrationID());\n       throw new UnregisteredNodeException(nodeReg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    verifyVersion(nodeReg.getVersion());\n    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n      LOG.warn(\"Invalid registrationID - expected: \"\n          + namesystem.getRegistrationID() + \" received: \"\n          + nodeReg.getRegistrationID());\n      throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    verifyVersion(nodeReg.getVersion());\n    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n      LOG.warn(\"Invalid registrationID - expected: \"\n          + namesystem.getRegistrationID() + \" received: \"\n          + nodeReg.getRegistrationID());\n      throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    verifyVersion(nodeReg.getVersion());\n    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n      LOG.warn(\"Invalid registrationID - expected: \"\n          + namesystem.getRegistrationID() + \" received: \"\n          + nodeReg.getRegistrationID());\n      throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,9 @@\n+  public void verifyRequest(NodeRegistration nodeReg) throws IOException {\n+    verifyVersion(nodeReg.getVersion());\n+    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n+      LOG.warn(\"Invalid registrationID - expected: \"\n+          + namesystem.getRegistrationID() + \" received: \"\n+          + nodeReg.getRegistrationID());\n+      throw new UnregisteredNodeException(nodeReg);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void verifyRequest(NodeRegistration nodeReg) throws IOException {\n    verifyVersion(nodeReg.getVersion());\n    if (!namesystem.getRegistrationID().equals(nodeReg.getRegistrationID())) {\n      LOG.warn(\"Invalid registrationID - expected: \"\n          + namesystem.getRegistrationID() + \" received: \"\n          + nodeReg.getRegistrationID());\n      throw new UnregisteredNodeException(nodeReg);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
    }
  }
}