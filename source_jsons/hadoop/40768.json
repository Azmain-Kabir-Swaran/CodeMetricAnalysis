{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueMetrics.java",
  "functionName": "computeAllocateResources",
  "functionId": "computeAllocateResources___containers-int__res-Resource__decrPending-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
  "functionStartLine": 788,
  "functionEndLine": 803,
  "numCommitsSeen": 39,
  "timeTaken": 1945,
  "changeHistory": [
    "c30c23cb665761e997bcfc1dc00908f70b069fa2"
  ],
  "changeHistoryShort": {
    "c30c23cb665761e997bcfc1dc00908f70b069fa2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c30c23cb665761e997bcfc1dc00908f70b069fa2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6492. Generate queue metrics for each partition. Contributed by Manikandan R\n",
      "commitDate": "26/05/20 4:29 PM",
      "commitName": "c30c23cb665761e997bcfc1dc00908f70b069fa2",
      "commitAuthor": "Jonathan Hung",
      "diff": "@@ -0,0 +1,16 @@\n+  private void computeAllocateResources(int containers, Resource res,\n+      boolean decrPending) {\n+    allocatedContainers.incr(containers);\n+    aggregateContainersAllocated.incr(containers);\n+    allocatedMB.incr(res.getMemorySize() * containers);\n+    allocatedVCores.incr(res.getVirtualCores() * containers);\n+    if (queueMetricsForCustomResources !\u003d null) {\n+      queueMetricsForCustomResources.increaseAllocated(res, containers);\n+      registerCustomResources(\n+          queueMetricsForCustomResources.getAllocatedValues(),\n+          ALLOCATED_RESOURCE_METRIC_PREFIX, ALLOCATED_RESOURCE_METRIC_DESC);\n+    }\n+    if (decrPending) {\n+      decrementPendingResources(containers, res);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void computeAllocateResources(int containers, Resource res,\n      boolean decrPending) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedMB.incr(res.getMemorySize() * containers);\n    allocatedVCores.incr(res.getVirtualCores() * containers);\n    if (queueMetricsForCustomResources !\u003d null) {\n      queueMetricsForCustomResources.increaseAllocated(res, containers);\n      registerCustomResources(\n          queueMetricsForCustomResources.getAllocatedValues(),\n          ALLOCATED_RESOURCE_METRIC_PREFIX, ALLOCATED_RESOURCE_METRIC_DESC);\n    }\n    if (decrPending) {\n      decrementPendingResources(containers, res);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java"
    }
  }
}