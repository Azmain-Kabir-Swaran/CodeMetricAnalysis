{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DominantResourceCalculator.java",
  "functionName": "divideAndCeil",
  "functionId": "divideAndCeil___numerator-Resource__denominator-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
  "functionStartLine": 422,
  "functionEndLine": 431,
  "numCommitsSeen": 57,
  "timeTaken": 7102,
  "changeHistory": [
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
    "2b51b262aba0191b80dc93799574c0b959cb4f4e",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "58da54640e37571f82eb340f32641d58160e92b2",
    "32c91223f1bd06561ea4ce2d1944e8d9a847f18c",
    "819224dcf9c683aa52f58633ac8e13663f1916d8",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "37d7935a9d7b86635c9c1ffc03f88b49857f88a0"
  ],
  "changeHistoryShort": {
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": "Ybodychange",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": "Ybodychange",
    "2b51b262aba0191b80dc93799574c0b959cb4f4e": "Ybodychange",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Ybodychange",
    "58da54640e37571f82eb340f32641d58160e92b2": "Ybodychange",
    "32c91223f1bd06561ea4ce2d1944e8d9a847f18c": "Ymultichange(Yparameterchange,Ybodychange)",
    "819224dcf9c683aa52f58633ac8e13663f1916d8": "Yparameterchange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ymultichange(Yparameterchange,Ybodychange)",
    "37d7935a9d7b86635c9c1ffc03f88b49857f88a0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9037. [CSI] Ignore volume resource in resource calculators based on tags. Contributed by Sunil Govindan.\n",
      "commitDate": "07/01/19 10:30 PM",
      "commitName": "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "05/12/18 3:16 PM",
      "commitNameOld": "912b1f9d64a61ef2663d95e2b4f286e6ee8d5ff9",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 33.3,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public Resource divideAndCeil(Resource numerator, long denominator) {\n     Resource ret \u003d Resource.newInstance(numerator);\n-    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n+    int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n     for (int i \u003d 0; i \u003c maxLength; i++) {\n       ResourceInformation resourceInformation \u003d ret.getResourceInformation(i);\n       resourceInformation\n           .setValue(divideAndCeil(resourceInformation.getValue(), denominator));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    Resource ret \u003d Resource.newInstance(numerator);\n    int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      ResourceInformation resourceInformation \u003d ret.getResourceInformation(i);\n      resourceInformation\n          .setValue(divideAndCeil(resourceInformation.getValue(), denominator));\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {}
    },
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7136. Additional Performance Improvement for Resource Profile Feature\n(Contributed by Wangda Tan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "39240b61a163b127eec385decd30ffd96e694c28",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public Resource divideAndCeil(Resource numerator, long denominator) {\n     Resource ret \u003d Resource.newInstance(numerator);\n-    int maxLength \u003d ResourceUtils.getResourceTypesArray().length;\n+    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n     for (int i \u003d 0; i \u003c maxLength; i++) {\n       ResourceInformation resourceInformation \u003d ret.getResourceInformation(i);\n       resourceInformation\n           .setValue(divideAndCeil(resourceInformation.getValue(), denominator));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    Resource ret \u003d Resource.newInstance(numerator);\n    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      ResourceInformation resourceInformation \u003d ret.getResourceInformation(i);\n      resourceInformation\n          .setValue(divideAndCeil(resourceInformation.getValue(), denominator));\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {}
    },
    "2b51b262aba0191b80dc93799574c0b959cb4f4e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6892. [YARN-3926] Improve API implementation in Resources and DominantResourceCalculator class. Contributed by Sunil G.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "2b51b262aba0191b80dc93799574c0b959cb4f4e",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,10 @@\n   public Resource divideAndCeil(Resource numerator, long denominator) {\n     Resource ret \u003d Resource.newInstance(numerator);\n-    for (String resource : resourceNames) {\n-      try {\n-        ResourceInformation resourceInformation \u003d\n-            ret.getResourceInformation(resource);\n-        resourceInformation.setValue(\n-            divideAndCeil(resourceInformation.getValue(), denominator));\n-      } catch (ResourceNotFoundException ye) {\n-        throw new IllegalArgumentException(\n-            \"Error getting resource information for \" + resource, ye);\n-      }\n+    int maxLength \u003d ResourceUtils.getResourceTypesArray().length;\n+    for (int i \u003d 0; i \u003c maxLength; i++) {\n+      ResourceInformation resourceInformation \u003d ret.getResourceInformation(i);\n+      resourceInformation\n+          .setValue(divideAndCeil(resourceInformation.getValue(), denominator));\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    Resource ret \u003d Resource.newInstance(numerator);\n    int maxLength \u003d ResourceUtils.getResourceTypesArray().length;\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      ResourceInformation resourceInformation \u003d ret.getResourceInformation(i);\n      resourceInformation\n          .setValue(divideAndCeil(resourceInformation.getValue(), denominator));\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {}
    },
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ca2808d8bbe49766029e5dba88ff863f6c993287",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public Resource divideAndCeil(Resource numerator, long denominator) {\n     Resource ret \u003d Resource.newInstance(numerator);\n     for (String resource : resourceNames) {\n       try {\n         ResourceInformation resourceInformation \u003d\n             ret.getResourceInformation(resource);\n         resourceInformation.setValue(\n             divideAndCeil(resourceInformation.getValue(), denominator));\n-      } catch (YarnException ye) {\n+      } catch (ResourceNotFoundException ye) {\n         throw new IllegalArgumentException(\n             \"Error getting resource information for \" + resource, ye);\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    Resource ret \u003d Resource.newInstance(numerator);\n    for (String resource : resourceNames) {\n      try {\n        ResourceInformation resourceInformation \u003d\n            ret.getResourceInformation(resource);\n        resourceInformation.setValue(\n            divideAndCeil(resourceInformation.getValue(), denominator));\n      } catch (ResourceNotFoundException ye) {\n        throw new IllegalArgumentException(\n            \"Error getting resource information for \" + resource, ye);\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {}
    },
    "58da54640e37571f82eb340f32641d58160e92b2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6445. [YARN-3926] Performance improvements in resource profile branch with respect to SLS. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "58da54640e37571f82eb340f32641d58160e92b2",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "239c1824a07fede71dd751ed2c1f40036b22170e",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public Resource divideAndCeil(Resource numerator, long denominator) {\n-    Resource ret \u003d Resources.createResource(0, 0);\n+    Resource ret \u003d Resource.newInstance(numerator);\n     for (String resource : resourceNames) {\n       try {\n-        ResourceInformation resourceInformation \u003d ResourceInformation\n-            .newInstance(numerator.getResourceInformation(resource));\n+        ResourceInformation resourceInformation \u003d\n+            ret.getResourceInformation(resource);\n         resourceInformation.setValue(\n             divideAndCeil(resourceInformation.getValue(), denominator));\n-        ret.setResourceInformation(resource, resourceInformation);\n       } catch (YarnException ye) {\n         throw new IllegalArgumentException(\n             \"Error getting resource information for \" + resource, ye);\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    Resource ret \u003d Resource.newInstance(numerator);\n    for (String resource : resourceNames) {\n      try {\n        ResourceInformation resourceInformation \u003d\n            ret.getResourceInformation(resource);\n        resourceInformation.setValue(\n            divideAndCeil(resourceInformation.getValue(), denominator));\n      } catch (YarnException ye) {\n        throw new IllegalArgumentException(\n            \"Error getting resource information for \" + resource, ye);\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {}
    },
    "32c91223f1bd06561ea4ce2d1944e8d9a847f18c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4172. Extend DominantResourceCalculator to account for all resources. (Varun Vasudev via wangda)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "32c91223f1bd06561ea4ce2d1944e8d9a847f18c",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4172. Extend DominantResourceCalculator to account for all resources. (Varun Vasudev via wangda)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "32c91223f1bd06561ea4ce2d1944e8d9a847f18c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/07/17 4:56 AM",
          "commitNameOld": "626d730bfc4c1f6ea54e8a246a0a676cdb74937f",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 65.18,
          "commitsBetweenForRepo": 506,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,16 @@\n-  public Resource divideAndCeil(Resource numerator, int denominator) {\n-    return Resources.createResource(\n-        divideAndCeil(numerator.getMemorySize(), denominator),\n-        divideAndCeil(numerator.getVirtualCores(), denominator)\n-        );\n+  public Resource divideAndCeil(Resource numerator, long denominator) {\n+    Resource ret \u003d Resources.createResource(0, 0);\n+    for (String resource : resourceNames) {\n+      try {\n+        ResourceInformation resourceInformation \u003d ResourceInformation\n+            .newInstance(numerator.getResourceInformation(resource));\n+        resourceInformation.setValue(\n+            divideAndCeil(resourceInformation.getValue(), denominator));\n+        ret.setResourceInformation(resource, resourceInformation);\n+      } catch (YarnException ye) {\n+        throw new IllegalArgumentException(\n+            \"Error getting resource information for \" + resource, ye);\n+      }\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    Resource ret \u003d Resources.createResource(0, 0);\n    for (String resource : resourceNames) {\n      try {\n        ResourceInformation resourceInformation \u003d ResourceInformation\n            .newInstance(numerator.getResourceInformation(resource));\n        resourceInformation.setValue(\n            divideAndCeil(resourceInformation.getValue(), denominator));\n        ret.setResourceInformation(resource, resourceInformation);\n      } catch (YarnException ye) {\n        throw new IllegalArgumentException(\n            \"Error getting resource information for \" + resource, ye);\n      }\n    }\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
          "extendedDetails": {
            "oldValue": "[numerator-Resource, denominator-int]",
            "newValue": "[numerator-Resource, denominator-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4172. Extend DominantResourceCalculator to account for all resources. (Varun Vasudev via wangda)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "32c91223f1bd06561ea4ce2d1944e8d9a847f18c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/07/17 4:56 AM",
          "commitNameOld": "626d730bfc4c1f6ea54e8a246a0a676cdb74937f",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 65.18,
          "commitsBetweenForRepo": 506,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,16 @@\n-  public Resource divideAndCeil(Resource numerator, int denominator) {\n-    return Resources.createResource(\n-        divideAndCeil(numerator.getMemorySize(), denominator),\n-        divideAndCeil(numerator.getVirtualCores(), denominator)\n-        );\n+  public Resource divideAndCeil(Resource numerator, long denominator) {\n+    Resource ret \u003d Resources.createResource(0, 0);\n+    for (String resource : resourceNames) {\n+      try {\n+        ResourceInformation resourceInformation \u003d ResourceInformation\n+            .newInstance(numerator.getResourceInformation(resource));\n+        resourceInformation.setValue(\n+            divideAndCeil(resourceInformation.getValue(), denominator));\n+        ret.setResourceInformation(resource, resourceInformation);\n+      } catch (YarnException ye) {\n+        throw new IllegalArgumentException(\n+            \"Error getting resource information for \" + resource, ye);\n+      }\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    Resource ret \u003d Resources.createResource(0, 0);\n    for (String resource : resourceNames) {\n      try {\n        ResourceInformation resourceInformation \u003d ResourceInformation\n            .newInstance(numerator.getResourceInformation(resource));\n        resourceInformation.setValue(\n            divideAndCeil(resourceInformation.getValue(), denominator));\n        ret.setResourceInformation(resource, resourceInformation);\n      } catch (YarnException ye) {\n        throw new IllegalArgumentException(\n            \"Error getting resource information for \" + resource, ye);\n      }\n    }\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
          "extendedDetails": {}
        }
      ]
    },
    "819224dcf9c683aa52f58633ac8e13663f1916d8": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-5270. Solve miscellaneous issues caused by YARN-4844. Contributed by Wangda Tan\n",
      "commitDate": "11/07/16 10:36 PM",
      "commitName": "819224dcf9c683aa52f58633ac8e13663f1916d8",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 43.57,
      "commitsBetweenForRepo": 400,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-  public Resource divideAndCeil(Resource numerator, long denominator) {\n+  public Resource divideAndCeil(Resource numerator, int denominator) {\n     return Resources.createResource(\n         divideAndCeil(numerator.getMemorySize(), denominator),\n         divideAndCeil(numerator.getVirtualCores(), denominator)\n         );\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource divideAndCeil(Resource numerator, int denominator) {\n    return Resources.createResource(\n        divideAndCeil(numerator.getMemorySize(), denominator),\n        divideAndCeil(numerator.getVirtualCores(), denominator)\n        );\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {
        "oldValue": "[numerator-Resource, denominator-long]",
        "newValue": "[numerator-Resource, denominator-int]"
      }
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
          "commitDate": "29/05/16 8:54 AM",
          "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "23/09/15 1:29 PM",
          "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 248.81,
          "commitsBetweenForRepo": 1666,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public Resource divideAndCeil(Resource numerator, int denominator) {\n+  public Resource divideAndCeil(Resource numerator, long denominator) {\n     return Resources.createResource(\n-        divideAndCeil(numerator.getMemory(), denominator),\n+        divideAndCeil(numerator.getMemorySize(), denominator),\n         divideAndCeil(numerator.getVirtualCores(), denominator)\n         );\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    return Resources.createResource(\n        divideAndCeil(numerator.getMemorySize(), denominator),\n        divideAndCeil(numerator.getVirtualCores(), denominator)\n        );\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
          "extendedDetails": {
            "oldValue": "[numerator-Resource, denominator-int]",
            "newValue": "[numerator-Resource, denominator-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
          "commitDate": "29/05/16 8:54 AM",
          "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "23/09/15 1:29 PM",
          "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 248.81,
          "commitsBetweenForRepo": 1666,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public Resource divideAndCeil(Resource numerator, int denominator) {\n+  public Resource divideAndCeil(Resource numerator, long denominator) {\n     return Resources.createResource(\n-        divideAndCeil(numerator.getMemory(), denominator),\n+        divideAndCeil(numerator.getMemorySize(), denominator),\n         divideAndCeil(numerator.getVirtualCores(), denominator)\n         );\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Resource divideAndCeil(Resource numerator, long denominator) {\n    return Resources.createResource(\n        divideAndCeil(numerator.getMemorySize(), denominator),\n        divideAndCeil(numerator.getVirtualCores(), denominator)\n        );\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
          "extendedDetails": {}
        }
      ]
    },
    "37d7935a9d7b86635c9c1ffc03f88b49857f88a0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-827. Need to make Resource arithmetic methods accessible^CJian He via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1495533 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/06/13 11:28 AM",
      "commitName": "37d7935a9d7b86635c9c1ffc03f88b49857f88a0",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,6 @@\n+  public Resource divideAndCeil(Resource numerator, int denominator) {\n+    return Resources.createResource(\n+        divideAndCeil(numerator.getMemory(), denominator),\n+        divideAndCeil(numerator.getVirtualCores(), denominator)\n+        );\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource divideAndCeil(Resource numerator, int denominator) {\n    return Resources.createResource(\n        divideAndCeil(numerator.getMemory(), denominator),\n        divideAndCeil(numerator.getVirtualCores(), denominator)\n        );\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java"
    }
  }
}