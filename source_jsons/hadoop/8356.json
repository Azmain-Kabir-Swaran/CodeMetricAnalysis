{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirErasureCodingOp.java",
  "functionName": "getErasureCodingPolicyXAttrForINode",
  "functionId": "getErasureCodingPolicyXAttrForINode___fsn-FSNamesystem__inode-INode",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirErasureCodingOp.java",
  "functionStartLine": 487,
  "functionEndLine": 513,
  "numCommitsSeen": 40,
  "timeTaken": 1829,
  "changeHistory": [
    "e69231658dc4a79da936e6856017b5c4f6124ecb"
  ],
  "changeHistoryShort": {
    "e69231658dc4a79da936e6856017b5c4f6124ecb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e69231658dc4a79da936e6856017b5c4f6124ecb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11072. Add ability to unset and change directory EC policy. Contributed by Sammi Chen.\n",
      "commitDate": "10/01/17 11:32 AM",
      "commitName": "e69231658dc4a79da936e6856017b5c4f6124ecb",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,27 @@\n+  private static XAttr getErasureCodingPolicyXAttrForINode(\n+      FSNamesystem fsn, INode inode) throws IOException {\n+    // INode can be null\n+    if (inode \u003d\u003d null) {\n+      return null;\n+    }\n+    FSDirectory fsd \u003d fsn.getFSDirectory();\n+    fsd.readLock();\n+    try {\n+      // We don\u0027t allow setting EC policies on paths with a symlink. Thus\n+      // if a symlink is encountered, the dir shouldn\u0027t have EC policy.\n+      // TODO: properly support symlinks\n+      if (inode.isSymlink()) {\n+        return null;\n+      }\n+      final XAttrFeature xaf \u003d inode.getXAttrFeature();\n+      if (xaf !\u003d null) {\n+        XAttr xattr \u003d xaf.getXAttr(XATTR_ERASURECODING_POLICY);\n+        if (xattr !\u003d null) {\n+          return xattr;\n+        }\n+      }\n+    } finally {\n+      fsd.readUnlock();\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static XAttr getErasureCodingPolicyXAttrForINode(\n      FSNamesystem fsn, INode inode) throws IOException {\n    // INode can be null\n    if (inode \u003d\u003d null) {\n      return null;\n    }\n    FSDirectory fsd \u003d fsn.getFSDirectory();\n    fsd.readLock();\n    try {\n      // We don\u0027t allow setting EC policies on paths with a symlink. Thus\n      // if a symlink is encountered, the dir shouldn\u0027t have EC policy.\n      // TODO: properly support symlinks\n      if (inode.isSymlink()) {\n        return null;\n      }\n      final XAttrFeature xaf \u003d inode.getXAttrFeature();\n      if (xaf !\u003d null) {\n        XAttr xattr \u003d xaf.getXAttr(XATTR_ERASURECODING_POLICY);\n        if (xattr !\u003d null) {\n          return xattr;\n        }\n      }\n    } finally {\n      fsd.readUnlock();\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirErasureCodingOp.java"
    }
  }
}