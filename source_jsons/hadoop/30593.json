{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbTimelineStore.java",
  "functionName": "getEntities",
  "functionId": "getEntities___entityType-String__limit-Long__windowStart-Long__windowEnd-Long__fromId-String__fromTs-Long__primaryFilter-NameValuePair__secondaryFilters-Collection__NameValuePair____fields-EnumSet__Field____checkAcl-CheckAcl",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
  "functionStartLine": 578,
  "functionEndLine": 599,
  "numCommitsSeen": 40,
  "timeTaken": 3261,
  "changeHistory": [
    "8180e676abb2bb500a48b3a0c0809d2a807ab235",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
    "0f1eda6bbf895a1239b25cdf8b17fabd3759e806",
    "84425fb435cb603fd8adcc2f76631c0244175310",
    "23b2e43f5d678517e33590d15dec73225b9c5682"
  ],
  "changeHistoryShort": {
    "8180e676abb2bb500a48b3a0c0809d2a807ab235": "Ymultichange(Yparameterchange,Ybodychange)",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": "Yfilerename",
    "0f1eda6bbf895a1239b25cdf8b17fabd3759e806": "Ymultichange(Yparameterchange,Ybodychange)",
    "84425fb435cb603fd8adcc2f76631c0244175310": "Ymultichange(Yfilerename,Yreturntypechange)",
    "23b2e43f5d678517e33590d15dec73225b9c5682": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8180e676abb2bb500a48b3a0c0809d2a807ab235": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3267. Timelineserver applies the ACL rules after applying the limit on the number of records (Chang Li via jeagles)\n",
      "commitDate": "13/03/15 10:04 AM",
      "commitName": "8180e676abb2bb500a48b3a0c0809d2a807ab235",
      "commitAuthor": "Jonathan Eagles",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3267. Timelineserver applies the ACL rules after applying the limit on the number of records (Chang Li via jeagles)\n",
          "commitDate": "13/03/15 10:04 AM",
          "commitName": "8180e676abb2bb500a48b3a0c0809d2a807ab235",
          "commitAuthor": "Jonathan Eagles",
          "commitDateOld": "17/02/15 6:17 PM",
          "commitNameOld": "57db50cbe3ce42618ad6d6869ae337d15b261f4e",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 23.62,
          "commitsBetweenForRepo": 182,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public TimelineEntities getEntities(String entityType,\n       Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n-      EnumSet\u003cField\u003e fields) throws IOException {\n+      EnumSet\u003cField\u003e fields, CheckAcl checkAcl) throws IOException {\n     if (primaryFilter \u003d\u003d null) {\n       // if no primary filter is specified, prefix the lookup with\n       // ENTITY_ENTRY_PREFIX\n       return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n-          windowStart, windowEnd, fromId, fromTs, secondaryFilters, fields);\n+          windowStart, windowEnd, fromId, fromTs, secondaryFilters, \n+          fields, checkAcl);\n     } else {\n       // if a primary filter is specified, prefix the lookup with\n       // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n       // ENTITY_ENTRY_PREFIX\n       byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n           .add(primaryFilter.getName())\n           .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n           .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n       return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n-          fromId, fromTs, secondaryFilters, fields);\n+          fromId, fromTs, secondaryFilters, fields, checkAcl);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields, CheckAcl checkAcl) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, fromId, fromTs, secondaryFilters, \n          fields, checkAcl);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          fromId, fromTs, secondaryFilters, fields, checkAcl);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {
            "oldValue": "[entityType-String, limit-Long, windowStart-Long, windowEnd-Long, fromId-String, fromTs-Long, primaryFilter-NameValuePair, secondaryFilters-Collection\u003cNameValuePair\u003e, fields-EnumSet\u003cField\u003e]",
            "newValue": "[entityType-String, limit-Long, windowStart-Long, windowEnd-Long, fromId-String, fromTs-Long, primaryFilter-NameValuePair, secondaryFilters-Collection\u003cNameValuePair\u003e, fields-EnumSet\u003cField\u003e, checkAcl-CheckAcl]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3267. Timelineserver applies the ACL rules after applying the limit on the number of records (Chang Li via jeagles)\n",
          "commitDate": "13/03/15 10:04 AM",
          "commitName": "8180e676abb2bb500a48b3a0c0809d2a807ab235",
          "commitAuthor": "Jonathan Eagles",
          "commitDateOld": "17/02/15 6:17 PM",
          "commitNameOld": "57db50cbe3ce42618ad6d6869ae337d15b261f4e",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 23.62,
          "commitsBetweenForRepo": 182,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public TimelineEntities getEntities(String entityType,\n       Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n-      EnumSet\u003cField\u003e fields) throws IOException {\n+      EnumSet\u003cField\u003e fields, CheckAcl checkAcl) throws IOException {\n     if (primaryFilter \u003d\u003d null) {\n       // if no primary filter is specified, prefix the lookup with\n       // ENTITY_ENTRY_PREFIX\n       return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n-          windowStart, windowEnd, fromId, fromTs, secondaryFilters, fields);\n+          windowStart, windowEnd, fromId, fromTs, secondaryFilters, \n+          fields, checkAcl);\n     } else {\n       // if a primary filter is specified, prefix the lookup with\n       // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n       // ENTITY_ENTRY_PREFIX\n       byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n           .add(primaryFilter.getName())\n           .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n           .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n       return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n-          fromId, fromTs, secondaryFilters, fields);\n+          fromId, fromTs, secondaryFilters, fields, checkAcl);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields, CheckAcl checkAcl) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, fromId, fromTs, secondaryFilters, \n          fields, checkAcl);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          fromId, fromTs, secondaryFilters, fields, checkAcl);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2107. Refactored timeline classes into o.a.h.y.s.timeline package. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/14 11:09 AM",
      "commitName": "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "28/05/14 10:44 AM",
      "commitNameOld": "cfd8647d0f20c08761f908be1f5b718c1c372498",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public TimelineEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, fromId, fromTs, secondaryFilters, fields);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          fromId, fromTs, secondaryFilters, fields);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java"
      }
    },
    "0f1eda6bbf895a1239b25cdf8b17fabd3759e806": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1838. Enhanced timeline service getEntities API to get entities from a given entity ID or insertion timestamp. Contributed by Billie Rinaldi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580960 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 11:14 AM",
      "commitName": "0f1eda6bbf895a1239b25cdf8b17fabd3759e806",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1838. Enhanced timeline service getEntities API to get entities from a given entity ID or insertion timestamp. Contributed by Billie Rinaldi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/14 11:14 AM",
          "commitName": "0f1eda6bbf895a1239b25cdf8b17fabd3759e806",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "14/03/14 1:35 PM",
          "commitNameOld": "b3ea4aebff42131642af0393748dc751cb3fc31e",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   public TimelineEntities getEntities(String entityType,\n-      Long limit, Long windowStart, Long windowEnd,\n+      Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n       EnumSet\u003cField\u003e fields) throws IOException {\n     if (primaryFilter \u003d\u003d null) {\n       // if no primary filter is specified, prefix the lookup with\n       // ENTITY_ENTRY_PREFIX\n       return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n-          windowStart, windowEnd, secondaryFilters, fields);\n+          windowStart, windowEnd, fromId, fromTs, secondaryFilters, fields);\n     } else {\n       // if a primary filter is specified, prefix the lookup with\n       // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n       // ENTITY_ENTRY_PREFIX\n       byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n           .add(primaryFilter.getName())\n           .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n           .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n       return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n-          secondaryFilters, fields);\n+          fromId, fromTs, secondaryFilters, fields);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, fromId, fromTs, secondaryFilters, fields);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          fromId, fromTs, secondaryFilters, fields);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {
            "oldValue": "[entityType-String, limit-Long, windowStart-Long, windowEnd-Long, primaryFilter-NameValuePair, secondaryFilters-Collection\u003cNameValuePair\u003e, fields-EnumSet\u003cField\u003e]",
            "newValue": "[entityType-String, limit-Long, windowStart-Long, windowEnd-Long, fromId-String, fromTs-Long, primaryFilter-NameValuePair, secondaryFilters-Collection\u003cNameValuePair\u003e, fields-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1838. Enhanced timeline service getEntities API to get entities from a given entity ID or insertion timestamp. Contributed by Billie Rinaldi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/14 11:14 AM",
          "commitName": "0f1eda6bbf895a1239b25cdf8b17fabd3759e806",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "14/03/14 1:35 PM",
          "commitNameOld": "b3ea4aebff42131642af0393748dc751cb3fc31e",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   public TimelineEntities getEntities(String entityType,\n-      Long limit, Long windowStart, Long windowEnd,\n+      Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n       EnumSet\u003cField\u003e fields) throws IOException {\n     if (primaryFilter \u003d\u003d null) {\n       // if no primary filter is specified, prefix the lookup with\n       // ENTITY_ENTRY_PREFIX\n       return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n-          windowStart, windowEnd, secondaryFilters, fields);\n+          windowStart, windowEnd, fromId, fromTs, secondaryFilters, fields);\n     } else {\n       // if a primary filter is specified, prefix the lookup with\n       // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n       // ENTITY_ENTRY_PREFIX\n       byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n           .add(primaryFilter.getName())\n           .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n           .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n       return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n-          secondaryFilters, fields);\n+          fromId, fromTs, secondaryFilters, fields);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd, String fromId, Long fromTs,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, fromId, fromTs, secondaryFilters, fields);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          fromId, fromTs, secondaryFilters, fields);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "84425fb435cb603fd8adcc2f76631c0244175310": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange)",
      "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 12:55 PM",
      "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public ATSEntities getEntities(String entityType,\n+  public TimelineEntities getEntities(String entityType,\n       Long limit, Long windowStart, Long windowEnd,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n       EnumSet\u003cField\u003e fields) throws IOException {\n     if (primaryFilter \u003d\u003d null) {\n       // if no primary filter is specified, prefix the lookup with\n       // ENTITY_ENTRY_PREFIX\n       return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n           windowStart, windowEnd, secondaryFilters, fields);\n     } else {\n       // if a primary filter is specified, prefix the lookup with\n       // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n       // ENTITY_ENTRY_PREFIX\n       byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n           .add(primaryFilter.getName())\n           .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n           .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n       return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n           secondaryFilters, fields);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, secondaryFilters, fields);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          secondaryFilters, fields);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/apptimeline/LeveldbApplicationTimelineStore.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/02/14 12:55 PM",
          "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/02/14 12:46 PM",
          "commitNameOld": "e06226126cd89d0cf8b4ef80a88659b248579231",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public ATSEntities getEntities(String entityType,\n+  public TimelineEntities getEntities(String entityType,\n       Long limit, Long windowStart, Long windowEnd,\n       NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n       EnumSet\u003cField\u003e fields) throws IOException {\n     if (primaryFilter \u003d\u003d null) {\n       // if no primary filter is specified, prefix the lookup with\n       // ENTITY_ENTRY_PREFIX\n       return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n           windowStart, windowEnd, secondaryFilters, fields);\n     } else {\n       // if a primary filter is specified, prefix the lookup with\n       // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n       // ENTITY_ENTRY_PREFIX\n       byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n           .add(primaryFilter.getName())\n           .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n           .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n       return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n           secondaryFilters, fields);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, secondaryFilters, fields);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          secondaryFilters, fields);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/LeveldbTimelineStore.java",
          "extendedDetails": {
            "oldValue": "ATSEntities",
            "newValue": "TimelineEntities"
          }
        }
      ]
    },
    "23b2e43f5d678517e33590d15dec73225b9c5682": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1635. Implemented a Leveldb based ApplicationTimelineStore. Contributed by Billie Rinaldi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1565868 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/14 6:15 PM",
      "commitName": "23b2e43f5d678517e33590d15dec73225b9c5682",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,21 @@\n+  public ATSEntities getEntities(String entityType,\n+      Long limit, Long windowStart, Long windowEnd,\n+      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n+      EnumSet\u003cField\u003e fields) throws IOException {\n+    if (primaryFilter \u003d\u003d null) {\n+      // if no primary filter is specified, prefix the lookup with\n+      // ENTITY_ENTRY_PREFIX\n+      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n+          windowStart, windowEnd, secondaryFilters, fields);\n+    } else {\n+      // if a primary filter is specified, prefix the lookup with\n+      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n+      // ENTITY_ENTRY_PREFIX\n+      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n+          .add(primaryFilter.getName())\n+          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n+          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n+      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n+          secondaryFilters, fields);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ATSEntities getEntities(String entityType,\n      Long limit, Long windowStart, Long windowEnd,\n      NameValuePair primaryFilter, Collection\u003cNameValuePair\u003e secondaryFilters,\n      EnumSet\u003cField\u003e fields) throws IOException {\n    if (primaryFilter \u003d\u003d null) {\n      // if no primary filter is specified, prefix the lookup with\n      // ENTITY_ENTRY_PREFIX\n      return getEntityByTime(ENTITY_ENTRY_PREFIX, entityType, limit,\n          windowStart, windowEnd, secondaryFilters, fields);\n    } else {\n      // if a primary filter is specified, prefix the lookup with\n      // INDEXED_ENTRY_PREFIX + primaryFilterName + primaryFilterValue +\n      // ENTITY_ENTRY_PREFIX\n      byte[] base \u003d KeyBuilder.newInstance().add(INDEXED_ENTRY_PREFIX)\n          .add(primaryFilter.getName())\n          .add(GenericObjectMapper.write(primaryFilter.getValue()), true)\n          .add(ENTITY_ENTRY_PREFIX).getBytesForLookup();\n      return getEntityByTime(base, entityType, limit, windowStart, windowEnd,\n          secondaryFilters, fields);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/apptimeline/LeveldbApplicationTimelineStore.java"
    }
  }
}