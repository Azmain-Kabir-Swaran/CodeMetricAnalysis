{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AmIpFilter.java",
  "functionName": "getProxyAddresses",
  "functionId": "getProxyAddresses",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
  "functionStartLine": 104,
  "functionEndLine": 126,
  "numCommitsSeen": 15,
  "timeTaken": 2580,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "db1bba857a44d13db6df913b20767c2834da29aa",
    "736d33cddd88a0cec925a451940b2523999a9c51",
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c",
    "4224e613409ec97ff52ba28a7cedfe0485577257",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68",
    "c415dee2b7300cd9dc76e474110bdab41b7a076b",
    "a39992ea6345a9f29814587604ac61b21c99fc3e",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "db1bba857a44d13db6df913b20767c2834da29aa": "Ybodychange",
    "736d33cddd88a0cec925a451940b2523999a9c51": "Ybodychange",
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c": "Ybodychange",
    "4224e613409ec97ff52ba28a7cedfe0485577257": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68": "Ybodychange",
    "c415dee2b7300cd9dc76e474110bdab41b7a076b": "Ymodifierchange",
    "a39992ea6345a9f29814587604ac61b21c99fc3e": "Ybodychange",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "31/05/18 4:48 PM",
      "commitNameOld": "6b74f5d7fc509c55c331249256eec78b7e53b6ce",
      "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "daysBetweenCommits": 287.98,
      "commitsBetweenForRepo": 2247,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n     long now \u003d Time.monotonicNow();\n     synchronized(this) {\n       if (proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003c\u003d now) {\n         proxyAddresses \u003d new HashSet\u003c\u003e();\n         for (String proxyHost : proxyHosts) {\n           try {\n-              for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n-                if (LOG.isDebugEnabled()) {\n-                  LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n-                }\n-                proxyAddresses.add(add.getHostAddress());\n-              }\n-              lastUpdate \u003d now;\n-            } catch (UnknownHostException e) {\n-              LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n+            for (InetAddress add : InetAddress.getAllByName(proxyHost)) {\n+              LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n+              proxyAddresses.add(add.getHostAddress());\n             }\n+            lastUpdate \u003d now;\n+          } catch (UnknownHostException e) {\n+            LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n           }\n+        }\n         if (proxyAddresses.isEmpty()) {\n           throw new ServletException(\"Could not locate any of the proxy hosts\");\n         }\n       }\n       return proxyAddresses;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d Time.monotonicNow();\n    synchronized(this) {\n      if (proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003c\u003d now) {\n        proxyAddresses \u003d new HashSet\u003c\u003e();\n        for (String proxyHost : proxyHosts) {\n          try {\n            for (InetAddress add : InetAddress.getAllByName(proxyHost)) {\n              LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n              proxyAddresses.add(add.getHostAddress());\n            }\n            lastUpdate \u003d now;\n          } catch (UnknownHostException e) {\n            LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n          }\n        }\n        if (proxyAddresses.isEmpty()) {\n          throw new ServletException(\"Could not locate any of the proxy hosts\");\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "db1bba857a44d13db6df913b20767c2834da29aa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8096. Wrong condition in AmIpFilter#getProxyAddresses() to update the proxy IP list. Contributed by Oleksandr Shevchenko.\n",
      "commitDate": "17/04/18 1:08 PM",
      "commitName": "db1bba857a44d13db6df913b20767c2834da29aa",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/10/17 9:54 AM",
      "commitNameOld": "4111e6c7819d66e17e0932302c589777a355dbae",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 196.13,
      "commitsBetweenForRepo": 1458,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n-    long now \u003d System.currentTimeMillis();\n+    long now \u003d Time.monotonicNow();\n     synchronized(this) {\n-      if (proxyAddresses \u003d\u003d null || (lastUpdate + UPDATE_INTERVAL) \u003e\u003d now) {\n+      if (proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003c\u003d now) {\n         proxyAddresses \u003d new HashSet\u003c\u003e();\n         for (String proxyHost : proxyHosts) {\n           try {\n               for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n                 if (LOG.isDebugEnabled()) {\n                   LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n                 }\n                 proxyAddresses.add(add.getHostAddress());\n               }\n               lastUpdate \u003d now;\n             } catch (UnknownHostException e) {\n               LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n             }\n           }\n         if (proxyAddresses.isEmpty()) {\n           throw new ServletException(\"Could not locate any of the proxy hosts\");\n         }\n       }\n       return proxyAddresses;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d Time.monotonicNow();\n    synchronized(this) {\n      if (proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003c\u003d now) {\n        proxyAddresses \u003d new HashSet\u003c\u003e();\n        for (String proxyHost : proxyHosts) {\n          try {\n              for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n                }\n                proxyAddresses.add(add.getHostAddress());\n              }\n              lastUpdate \u003d now;\n            } catch (UnknownHostException e) {\n              LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n            }\n          }\n        if (proxyAddresses.isEmpty()) {\n          throw new ServletException(\"Could not locate any of the proxy hosts\");\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "736d33cddd88a0cec925a451940b2523999a9c51": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4767. Network issues can cause persistent RM UI outage. (Daniel Templeton via kasha)\n",
      "commitDate": "03/10/16 2:35 PM",
      "commitName": "736d33cddd88a0cec925a451940b2523999a9c51",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "25/03/15 4:49 AM",
      "commitNameOld": "e556198e71df6be3a83e5598265cb702fc7a668b",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 558.41,
      "commitsBetweenForRepo": 4154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n     long now \u003d System.currentTimeMillis();\n     synchronized(this) {\n-      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n+      if (proxyAddresses \u003d\u003d null || (lastUpdate + UPDATE_INTERVAL) \u003e\u003d now) {\n         proxyAddresses \u003d new HashSet\u003c\u003e();\n         for (String proxyHost : proxyHosts) {\n           try {\n               for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n                 if (LOG.isDebugEnabled()) {\n                   LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n                 }\n                 proxyAddresses.add(add.getHostAddress());\n               }\n               lastUpdate \u003d now;\n             } catch (UnknownHostException e) {\n               LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n             }\n           }\n         if (proxyAddresses.isEmpty()) {\n           throw new ServletException(\"Could not locate any of the proxy hosts\");\n         }\n       }\n       return proxyAddresses;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    synchronized(this) {\n      if (proxyAddresses \u003d\u003d null || (lastUpdate + UPDATE_INTERVAL) \u003e\u003d now) {\n        proxyAddresses \u003d new HashSet\u003c\u003e();\n        for (String proxyHost : proxyHosts) {\n          try {\n              for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n                }\n                proxyAddresses.add(add.getHostAddress());\n              }\n              lastUpdate \u003d now;\n            } catch (UnknownHostException e) {\n              LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n            }\n          }\n        if (proxyAddresses.isEmpty()) {\n          throw new ServletException(\"Could not locate any of the proxy hosts\");\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3147. Clean up RM web proxy code. Contributed by Steve Loughran\n",
      "commitDate": "12/02/15 10:57 AM",
      "commitName": "83be450acc7fc9bb9f7bbd006e7b0804bf10279c",
      "commitAuthor": "Xuan",
      "commitDateOld": "20/03/14 9:20 PM",
      "commitNameOld": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 328.61,
      "commitsBetweenForRepo": 2590,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n     long now \u003d System.currentTimeMillis();\n     synchronized(this) {\n       if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n-        proxyAddresses \u003d new HashSet\u003cString\u003e();\n+        proxyAddresses \u003d new HashSet\u003c\u003e();\n         for (String proxyHost : proxyHosts) {\n           try {\n               for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n                 if (LOG.isDebugEnabled()) {\n-                  LOG.debug(\"proxy address is: \" + add.getHostAddress());\n+                  LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n                 }\n                 proxyAddresses.add(add.getHostAddress());\n               }\n               lastUpdate \u003d now;\n             } catch (UnknownHostException e) {\n-              LOG.warn(\"Could not locate \" + proxyHost + \" - skipping\", e);\n+              LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n             }\n           }\n         if (proxyAddresses.isEmpty()) {\n           throw new ServletException(\"Could not locate any of the proxy hosts\");\n         }\n       }\n       return proxyAddresses;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    synchronized(this) {\n      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n        proxyAddresses \u003d new HashSet\u003c\u003e();\n        for (String proxyHost : proxyHosts) {\n          try {\n              for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(\"proxy address is: {}\", add.getHostAddress());\n                }\n                proxyAddresses.add(add.getHostAddress());\n              }\n              lastUpdate \u003d now;\n            } catch (UnknownHostException e) {\n              LOG.warn(\"Could not locate {} - skipping\", proxyHost, e);\n            }\n          }\n        if (proxyAddresses.isEmpty()) {\n          throw new ServletException(\"Could not locate any of the proxy hosts\");\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "4224e613409ec97ff52ba28a7cedfe0485577257": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1811. Fixed AMFilters in YARN to correctly accept requests from either web-app proxy or the RMs when HA is enabled. Contributed by Robert Kanter.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579877 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 9:20 PM",
      "commitName": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 589.96,
      "commitsBetweenForRepo": 3690,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n     long now \u003d System.currentTimeMillis();\n     synchronized(this) {\n       if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n-        try {\n-          proxyAddresses \u003d new HashSet\u003cString\u003e();\n-          for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n-            if (LOG.isDebugEnabled()) {\n-              LOG.debug(\"proxy address is: \" + add.getHostAddress());\n+        proxyAddresses \u003d new HashSet\u003cString\u003e();\n+        for (String proxyHost : proxyHosts) {\n+          try {\n+              for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n+                if (LOG.isDebugEnabled()) {\n+                  LOG.debug(\"proxy address is: \" + add.getHostAddress());\n+                }\n+                proxyAddresses.add(add.getHostAddress());\n+              }\n+              lastUpdate \u003d now;\n+            } catch (UnknownHostException e) {\n+              LOG.warn(\"Could not locate \" + proxyHost + \" - skipping\", e);\n             }\n-            proxyAddresses.add(add.getHostAddress());\n           }\n-          lastUpdate \u003d now;\n-        } catch (UnknownHostException e) {\n-          throw new ServletException(\"Could not locate \"+proxyHost, e);\n+        if (proxyAddresses.isEmpty()) {\n+          throw new ServletException(\"Could not locate any of the proxy hosts\");\n         }\n       }\n       return proxyAddresses;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    synchronized(this) {\n      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n        proxyAddresses \u003d new HashSet\u003cString\u003e();\n        for (String proxyHost : proxyHosts) {\n          try {\n              for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(\"proxy address is: \" + add.getHostAddress());\n                }\n                proxyAddresses.add(add.getHostAddress());\n              }\n              lastUpdate \u003d now;\n            } catch (UnknownHostException e) {\n              LOG.warn(\"Could not locate \" + proxyHost + \" - skipping\", e);\n            }\n          }\n        if (proxyAddresses.isEmpty()) {\n          throw new ServletException(\"Could not locate any of the proxy hosts\");\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    synchronized(this) {\n      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n        try {\n          proxyAddresses \u003d new HashSet\u003cString\u003e();\n          for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"proxy address is: \" + add.getHostAddress());\n            }\n            proxyAddresses.add(add.getHostAddress());\n          }\n          lastUpdate \u003d now;\n        } catch (UnknownHostException e) {\n          throw new ServletException(\"Could not locate \"+proxyHost, e);\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java"
      }
    },
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3960. Fix web-proxy to forward request to AM with configured hostname or IP. Contributed by Thomas Graves. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1296878 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/12 1:14 PM",
      "commitName": "d41cb76b56e19f6eb411b3dacaf28a490d079c68",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "23/01/12 1:15 PM",
      "commitNameOld": "c415dee2b7300cd9dc76e474110bdab41b7a076b",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 41.0,
      "commitsBetweenForRepo": 379,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n     long now \u003d System.currentTimeMillis();\n     synchronized(this) {\n       if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n         try {\n           proxyAddresses \u003d new HashSet\u003cString\u003e();\n           for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n+            if (LOG.isDebugEnabled()) {\n+              LOG.debug(\"proxy address is: \" + add.getHostAddress());\n+            }\n             proxyAddresses.add(add.getHostAddress());\n           }\n           lastUpdate \u003d now;\n         } catch (UnknownHostException e) {\n           throw new ServletException(\"Could not locate \"+proxyHost, e);\n         }\n       }\n       return proxyAddresses;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    synchronized(this) {\n      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n        try {\n          proxyAddresses \u003d new HashSet\u003cString\u003e();\n          for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"proxy address is: \" + add.getHostAddress());\n            }\n            proxyAddresses.add(add.getHostAddress());\n          }\n          lastUpdate \u003d now;\n        } catch (UnknownHostException e) {\n          throw new ServletException(\"Could not locate \"+proxyHost, e);\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "c415dee2b7300cd9dc76e474110bdab41b7a076b": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-3691. webservices add support to compress response. (Thomas Graves via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1234989 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/01/12 1:15 PM",
      "commitName": "c415dee2b7300cd9dc76e474110bdab41b7a076b",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "28/10/11 12:44 AM",
      "commitNameOld": "a39992ea6345a9f29814587604ac61b21c99fc3e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 87.56,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  private Set\u003cString\u003e getProxyAddresses() throws ServletException {\n+  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n     long now \u003d System.currentTimeMillis();\n     synchronized(this) {\n       if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n         try {\n           proxyAddresses \u003d new HashSet\u003cString\u003e();\n           for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n             proxyAddresses.add(add.getHostAddress());\n           }\n           lastUpdate \u003d now;\n         } catch (UnknownHostException e) {\n           throw new ServletException(\"Could not locate \"+proxyHost, e);\n         }\n       }\n       return proxyAddresses;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    synchronized(this) {\n      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n        try {\n          proxyAddresses \u003d new HashSet\u003cString\u003e();\n          for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n            proxyAddresses.add(add.getHostAddress());\n          }\n          lastUpdate \u003d now;\n        } catch (UnknownHostException e) {\n          throw new ServletException(\"Could not locate \"+proxyHost, e);\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "a39992ea6345a9f29814587604ac61b21c99fc3e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3296. Fixed the remaining nine FindBugs warnings. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/10/11 12:44 AM",
      "commitName": "a39992ea6345a9f29814587604ac61b21c99fc3e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/10/11 11:29 PM",
      "commitNameOld": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.05,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private Set\u003cString\u003e getProxyAddresses() throws ServletException {\n     long now \u003d System.currentTimeMillis();\n-    if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n-      synchronized(this) {\n+    synchronized(this) {\n+      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n         try {\n           proxyAddresses \u003d new HashSet\u003cString\u003e();\n           for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n             proxyAddresses.add(add.getHostAddress());\n           }\n           lastUpdate \u003d now;\n         } catch (UnknownHostException e) {\n           throw new ServletException(\"Could not locate \"+proxyHost, e);\n         }\n       }\n+      return proxyAddresses;\n     }\n-    return proxyAddresses;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    synchronized(this) {\n      if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n        try {\n          proxyAddresses \u003d new HashSet\u003cString\u003e();\n          for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n            proxyAddresses.add(add.getHostAddress());\n          }\n          lastUpdate \u003d now;\n        } catch (UnknownHostException e) {\n          throw new ServletException(\"Could not locate \"+proxyHost, e);\n        }\n      }\n      return proxyAddresses;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2858. Added a WebApp Proxy for applications. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 11:29 PM",
      "commitName": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,17 @@\n+  private Set\u003cString\u003e getProxyAddresses() throws ServletException {\n+    long now \u003d System.currentTimeMillis();\n+    if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n+      synchronized(this) {\n+        try {\n+          proxyAddresses \u003d new HashSet\u003cString\u003e();\n+          for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n+            proxyAddresses.add(add.getHostAddress());\n+          }\n+          lastUpdate \u003d now;\n+        } catch (UnknownHostException e) {\n+          throw new ServletException(\"Could not locate \"+proxyHost, e);\n+        }\n+      }\n+    }\n+    return proxyAddresses;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Set\u003cString\u003e getProxyAddresses() throws ServletException {\n    long now \u003d System.currentTimeMillis();\n    if(proxyAddresses \u003d\u003d null || (lastUpdate + updateInterval) \u003e\u003d now) {\n      synchronized(this) {\n        try {\n          proxyAddresses \u003d new HashSet\u003cString\u003e();\n          for(InetAddress add : InetAddress.getAllByName(proxyHost)) {\n            proxyAddresses.add(add.getHostAddress());\n          }\n          lastUpdate \u003d now;\n        } catch (UnknownHostException e) {\n          throw new ServletException(\"Could not locate \"+proxyHost, e);\n        }\n      }\n    }\n    return proxyAddresses;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java"
    }
  }
}