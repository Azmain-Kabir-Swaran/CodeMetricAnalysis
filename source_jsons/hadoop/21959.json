{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobHistoryEventUtils.java",
  "functionName": "countersToJSON",
  "functionId": "countersToJSON___counters-Counters",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/JobHistoryEventUtils.java",
  "functionStartLine": 43,
  "functionEndLine": 61,
  "numCommitsSeen": 6,
  "timeTaken": 866,
  "changeHistory": [
    "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5"
  ],
  "changeHistoryShort": {
    "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6327. Made MR AM use timeline service v2 API to write history events and counters. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,19 @@\n+  public static JsonNode countersToJSON(Counters counters) {\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    ArrayNode nodes \u003d mapper.createArrayNode();\n+    if (counters !\u003d null) {\n+      for (CounterGroup counterGroup : counters) {\n+        ObjectNode groupNode \u003d nodes.addObject();\n+        groupNode.put(\"NAME\", counterGroup.getName());\n+        groupNode.put(\"DISPLAY_NAME\", counterGroup.getDisplayName());\n+        ArrayNode countersNode \u003d groupNode.putArray(\"COUNTERS\");\n+        for (Counter counter : counterGroup) {\n+          ObjectNode counterNode \u003d countersNode.addObject();\n+          counterNode.put(\"NAME\", counter.getName());\n+          counterNode.put(\"DISPLAY_NAME\", counter.getDisplayName());\n+          counterNode.put(\"VALUE\", counter.getValue());\n+        }\n+      }\n+    }\n+    return nodes;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static JsonNode countersToJSON(Counters counters) {\n    ObjectMapper mapper \u003d new ObjectMapper();\n    ArrayNode nodes \u003d mapper.createArrayNode();\n    if (counters !\u003d null) {\n      for (CounterGroup counterGroup : counters) {\n        ObjectNode groupNode \u003d nodes.addObject();\n        groupNode.put(\"NAME\", counterGroup.getName());\n        groupNode.put(\"DISPLAY_NAME\", counterGroup.getDisplayName());\n        ArrayNode countersNode \u003d groupNode.putArray(\"COUNTERS\");\n        for (Counter counter : counterGroup) {\n          ObjectNode counterNode \u003d countersNode.addObject();\n          counterNode.put(\"NAME\", counter.getName());\n          counterNode.put(\"DISPLAY_NAME\", counter.getDisplayName());\n          counterNode.put(\"VALUE\", counter.getValue());\n        }\n      }\n    }\n    return nodes;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/JobHistoryEventUtils.java"
    }
  }
}