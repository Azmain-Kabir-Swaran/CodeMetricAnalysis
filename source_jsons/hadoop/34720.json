{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMTokenSecretManagerInNM.java",
  "functionName": "appAttemptStartContainer",
  "functionId": "appAttemptStartContainer___identifier-NMTokenIdentifier",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMTokenSecretManagerInNM.java",
  "functionStartLine": 216,
  "functionEndLine": 248,
  "numCommitsSeen": 9,
  "timeTaken": 2471,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "310aa4686eb697f0700a71d33106514c404dab1b",
    "403ec8ea80d59f209823a7370dc8185fa2c1c368",
    "243bcd367ff3130d74676280233041f88aca62a5"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "310aa4686eb697f0700a71d33106514c404dab1b": "Ybodychange",
    "403ec8ea80d59f209823a7370dc8185fa2c1c368": "Ybodychange",
    "243bcd367ff3130d74676280233041f88aca62a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "20/08/18 8:14 AM",
      "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 207.34,
      "commitsBetweenForRepo": 1662,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,33 @@\n   public synchronized void appAttemptStartContainer(\n       NMTokenIdentifier identifier)\n       throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n     ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n     if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n       // First application attempt for the given application\n       appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n         new ArrayList\u003cApplicationAttemptId\u003e());\n     }\n     MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n \n     if (oldKey \u003d\u003d null) {\n       // This is a new application attempt.\n       appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n     }\n     if (oldKey \u003d\u003d null\n         || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n       // Update key only if it is modified.\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"NMToken key updated for application attempt : \"\n-            + identifier.getApplicationAttemptId().toString());\n-      }\n+      LOG.debug(\"NMToken key updated for application attempt : {}\",\n+          identifier.getApplicationAttemptId().toString());\n       if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n         .getKeyId()) {\n         updateAppAttemptKey(appAttemptId, currentMasterKey);\n       } else if (previousMasterKey !\u003d null\n           \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n             .getKeyId()) {\n         updateAppAttemptKey(appAttemptId, previousMasterKey);\n       } else {\n         throw new InvalidToken(\n           \"Older NMToken should not be used while starting the container.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void appAttemptStartContainer(\n      NMTokenIdentifier identifier)\n      throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n    ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n    if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n      // First application attempt for the given application\n      appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n        new ArrayList\u003cApplicationAttemptId\u003e());\n    }\n    MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n\n    if (oldKey \u003d\u003d null) {\n      // This is a new application attempt.\n      appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n    }\n    if (oldKey \u003d\u003d null\n        || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n      // Update key only if it is modified.\n      LOG.debug(\"NMToken key updated for application attempt : {}\",\n          identifier.getApplicationAttemptId().toString());\n      if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n        .getKeyId()) {\n        updateAppAttemptKey(appAttemptId, currentMasterKey);\n      } else if (previousMasterKey !\u003d null\n          \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n            .getKeyId()) {\n        updateAppAttemptKey(appAttemptId, previousMasterKey);\n      } else {\n        throw new InvalidToken(\n          \"Older NMToken should not be used while starting the container.\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMTokenSecretManagerInNM.java",
      "extendedDetails": {}
    },
    "310aa4686eb697f0700a71d33106514c404dab1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5805. Add isDebugEnabled check for debug logs in nodemanager (Bibin A Chundatt via Varun Saxena)\n",
      "commitDate": "01/11/16 2:21 AM",
      "commitName": "310aa4686eb697f0700a71d33106514c404dab1b",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "24/04/16 10:38 PM",
      "commitNameOld": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 190.15,
      "commitsBetweenForRepo": 1440,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,35 @@\n   public synchronized void appAttemptStartContainer(\n       NMTokenIdentifier identifier)\n       throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n     ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n     if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n       // First application attempt for the given application\n       appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n         new ArrayList\u003cApplicationAttemptId\u003e());\n     }\n     MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n \n     if (oldKey \u003d\u003d null) {\n       // This is a new application attempt.\n       appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n     }\n     if (oldKey \u003d\u003d null\n         || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n       // Update key only if it is modified.\n-      LOG.debug(\"NMToken key updated for application attempt : \"\n-          + identifier.getApplicationAttemptId().toString());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"NMToken key updated for application attempt : \"\n+            + identifier.getApplicationAttemptId().toString());\n+      }\n       if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n         .getKeyId()) {\n         updateAppAttemptKey(appAttemptId, currentMasterKey);\n       } else if (previousMasterKey !\u003d null\n           \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n             .getKeyId()) {\n         updateAppAttemptKey(appAttemptId, previousMasterKey);\n       } else {\n         throw new InvalidToken(\n           \"Older NMToken should not be used while starting the container.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void appAttemptStartContainer(\n      NMTokenIdentifier identifier)\n      throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n    ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n    if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n      // First application attempt for the given application\n      appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n        new ArrayList\u003cApplicationAttemptId\u003e());\n    }\n    MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n\n    if (oldKey \u003d\u003d null) {\n      // This is a new application attempt.\n      appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n    }\n    if (oldKey \u003d\u003d null\n        || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n      // Update key only if it is modified.\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"NMToken key updated for application attempt : \"\n            + identifier.getApplicationAttemptId().toString());\n      }\n      if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n        .getKeyId()) {\n        updateAppAttemptKey(appAttemptId, currentMasterKey);\n      } else if (previousMasterKey !\u003d null\n          \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n            .getKeyId()) {\n        updateAppAttemptKey(appAttemptId, previousMasterKey);\n      } else {\n        throw new InvalidToken(\n          \"Older NMToken should not be used while starting the container.\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMTokenSecretManagerInNM.java",
      "extendedDetails": {}
    },
    "403ec8ea80d59f209823a7370dc8185fa2c1c368": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1341. Recover NMTokens upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611512 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 4:33 PM",
      "commitName": "403ec8ea80d59f209823a7370dc8185fa2c1c368",
      "commitAuthor": "Junping Du",
      "commitDateOld": "18/06/13 4:19 PM",
      "commitNameOld": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 394.01,
      "commitsBetweenForRepo": 2575,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public synchronized void appAttemptStartContainer(\n       NMTokenIdentifier identifier)\n       throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n     ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n     if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n       // First application attempt for the given application\n       appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n         new ArrayList\u003cApplicationAttemptId\u003e());\n     }\n     MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n \n     if (oldKey \u003d\u003d null) {\n       // This is a new application attempt.\n       appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n     }\n     if (oldKey \u003d\u003d null\n         || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n       // Update key only if it is modified.\n       LOG.debug(\"NMToken key updated for application attempt : \"\n           + identifier.getApplicationAttemptId().toString());\n       if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n         .getKeyId()) {\n-        oldMasterKeys.put(appAttemptId, currentMasterKey);\n+        updateAppAttemptKey(appAttemptId, currentMasterKey);\n       } else if (previousMasterKey !\u003d null\n           \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n             .getKeyId()) {\n-        oldMasterKeys.put(appAttemptId, previousMasterKey);\n+        updateAppAttemptKey(appAttemptId, previousMasterKey);\n       } else {\n         throw new InvalidToken(\n           \"Older NMToken should not be used while starting the container.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void appAttemptStartContainer(\n      NMTokenIdentifier identifier)\n      throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n    ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n    if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n      // First application attempt for the given application\n      appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n        new ArrayList\u003cApplicationAttemptId\u003e());\n    }\n    MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n\n    if (oldKey \u003d\u003d null) {\n      // This is a new application attempt.\n      appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n    }\n    if (oldKey \u003d\u003d null\n        || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n      // Update key only if it is modified.\n      LOG.debug(\"NMToken key updated for application attempt : \"\n          + identifier.getApplicationAttemptId().toString());\n      if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n        .getKeyId()) {\n        updateAppAttemptKey(appAttemptId, currentMasterKey);\n      } else if (previousMasterKey !\u003d null\n          \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n            .getKeyId()) {\n        updateAppAttemptKey(appAttemptId, previousMasterKey);\n      } else {\n        throw new InvalidToken(\n          \"Older NMToken should not be used while starting the container.\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMTokenSecretManagerInNM.java",
      "extendedDetails": {}
    },
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,33 @@\n+  public synchronized void appAttemptStartContainer(\n+      NMTokenIdentifier identifier)\n+      throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n+    ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n+    if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n+      // First application attempt for the given application\n+      appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n+        new ArrayList\u003cApplicationAttemptId\u003e());\n+    }\n+    MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n+\n+    if (oldKey \u003d\u003d null) {\n+      // This is a new application attempt.\n+      appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n+    }\n+    if (oldKey \u003d\u003d null\n+        || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n+      // Update key only if it is modified.\n+      LOG.debug(\"NMToken key updated for application attempt : \"\n+          + identifier.getApplicationAttemptId().toString());\n+      if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n+        .getKeyId()) {\n+        oldMasterKeys.put(appAttemptId, currentMasterKey);\n+      } else if (previousMasterKey !\u003d null\n+          \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n+            .getKeyId()) {\n+        oldMasterKeys.put(appAttemptId, previousMasterKey);\n+      } else {\n+        throw new InvalidToken(\n+          \"Older NMToken should not be used while starting the container.\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void appAttemptStartContainer(\n      NMTokenIdentifier identifier)\n      throws org.apache.hadoop.security.token.SecretManager.InvalidToken {\n    ApplicationAttemptId appAttemptId \u003d identifier.getApplicationAttemptId();\n    if (!appToAppAttemptMap.containsKey(appAttemptId.getApplicationId())) {\n      // First application attempt for the given application\n      appToAppAttemptMap.put(appAttemptId.getApplicationId(),\n        new ArrayList\u003cApplicationAttemptId\u003e());\n    }\n    MasterKeyData oldKey \u003d oldMasterKeys.get(appAttemptId);\n\n    if (oldKey \u003d\u003d null) {\n      // This is a new application attempt.\n      appToAppAttemptMap.get(appAttemptId.getApplicationId()).add(appAttemptId);\n    }\n    if (oldKey \u003d\u003d null\n        || oldKey.getMasterKey().getKeyId() !\u003d identifier.getKeyId()) {\n      // Update key only if it is modified.\n      LOG.debug(\"NMToken key updated for application attempt : \"\n          + identifier.getApplicationAttemptId().toString());\n      if (identifier.getKeyId() \u003d\u003d currentMasterKey.getMasterKey()\n        .getKeyId()) {\n        oldMasterKeys.put(appAttemptId, currentMasterKey);\n      } else if (previousMasterKey !\u003d null\n          \u0026\u0026 identifier.getKeyId() \u003d\u003d previousMasterKey.getMasterKey()\n            .getKeyId()) {\n        oldMasterKeys.put(appAttemptId, previousMasterKey);\n      } else {\n        throw new InvalidToken(\n          \"Older NMToken should not be used while starting the container.\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMTokenSecretManagerInNM.java"
    }
  }
}