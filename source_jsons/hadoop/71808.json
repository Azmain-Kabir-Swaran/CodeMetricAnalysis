{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSACLs.java",
  "functionName": "assertAccess",
  "functionId": "assertAccess___aclType-KMSACLs.Type__ugi-UserGroupInformation__operation-KMSOp__key-String",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
  "functionStartLine": 263,
  "functionEndLine": 274,
  "numCommitsSeen": 14,
  "timeTaken": 826,
  "changeHistory": [
    "d9a03e272adbf3e9fde501610400f18fb4f6b865"
  ],
  "changeHistoryShort": {
    "d9a03e272adbf3e9fde501610400f18fb4f6b865": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d9a03e272adbf3e9fde501610400f18fb4f6b865": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10863. KMS should have a blacklist for decrypting EEKs. (asuresh via tucu)\n",
      "commitDate": "03/09/14 3:08 PM",
      "commitName": "d9a03e272adbf3e9fde501610400f18fb4f6b865",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,12 @@\n+  public void assertAccess(KMSACLs.Type aclType,\n+      UserGroupInformation ugi, KMSOp operation, String key)\n+      throws AccessControlException {\n+    if (!KMSWebApp.getACLs().hasAccess(aclType, ugi)) {\n+      KMSWebApp.getUnauthorizedCallsMeter().mark();\n+      KMSWebApp.getKMSAudit().unauthorized(ugi, operation, key);\n+      throw new AuthorizationException(String.format(\n+          (key !\u003d null) ? UNAUTHORIZED_MSG_WITH_KEY\n+                        : UNAUTHORIZED_MSG_WITHOUT_KEY,\n+          ugi.getShortUserName(), operation, key));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void assertAccess(KMSACLs.Type aclType,\n      UserGroupInformation ugi, KMSOp operation, String key)\n      throws AccessControlException {\n    if (!KMSWebApp.getACLs().hasAccess(aclType, ugi)) {\n      KMSWebApp.getUnauthorizedCallsMeter().mark();\n      KMSWebApp.getKMSAudit().unauthorized(ugi, operation, key);\n      throw new AuthorizationException(String.format(\n          (key !\u003d null) ? UNAUTHORIZED_MSG_WITH_KEY\n                        : UNAUTHORIZED_MSG_WITHOUT_KEY,\n          ugi.getShortUserName(), operation, key));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java"
    }
  }
}