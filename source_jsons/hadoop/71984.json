{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuthenticationFilter.java",
  "functionName": "initializeSecretProvider",
  "functionId": "initializeSecretProvider___filterConfig-FilterConfig",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
  "functionStartLine": 201,
  "functionEndLine": 218,
  "numCommitsSeen": 33,
  "timeTaken": 1646,
  "changeHistory": [
    "5d182949badb2eb80393de7ba3838102d006488b",
    "c6b5203cfdfccfa22ad5379b7fee75fed850d95e",
    "90e07d55ace7221081a58a90e54b360ad68fa1ef",
    "8a261e68e4177b47be01ceae7310ea56aeb7ca38"
  ],
  "changeHistoryShort": {
    "5d182949badb2eb80393de7ba3838102d006488b": "Ybodychange",
    "c6b5203cfdfccfa22ad5379b7fee75fed850d95e": "Ybodychange",
    "90e07d55ace7221081a58a90e54b360ad68fa1ef": "Ybodychange",
    "8a261e68e4177b47be01ceae7310ea56aeb7ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5d182949badb2eb80393de7ba3838102d006488b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
      "commitDate": "05/01/17 5:21 PM",
      "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "18/10/16 6:32 PM",
      "commitNameOld": "4bca385241c0fc8ff168c7b0f2984a7aed2c7492",
      "commitAuthorOld": "Benoy Antony",
      "daysBetweenCommits": 78.99,
      "commitsBetweenForRepo": 536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected void initializeSecretProvider(FilterConfig filterConfig)\n       throws ServletException {\n     secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n         getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n     if (secretProvider \u003d\u003d null) {\n       // As tomcat cannot specify the provider object in the configuration.\n       // It\u0027ll go into this path\n       try {\n         secretProvider \u003d constructSecretProvider(\n             filterConfig.getServletContext(),\n             config, false);\n-        isInitializedByTomcat \u003d true;\n+        destroySecretProvider \u003d true;\n       } catch (Exception ex) {\n         throw new ServletException(ex);\n       }\n     }\n     signer \u003d new Signer(secretProvider);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeSecretProvider(FilterConfig filterConfig)\n      throws ServletException {\n    secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n        getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n    if (secretProvider \u003d\u003d null) {\n      // As tomcat cannot specify the provider object in the configuration.\n      // It\u0027ll go into this path\n      try {\n        secretProvider \u003d constructSecretProvider(\n            filterConfig.getServletContext(),\n            config, false);\n        destroySecretProvider \u003d true;\n      } catch (Exception ex) {\n        throw new ServletException(ex);\n      }\n    }\n    signer \u003d new Signer(secretProvider);\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {}
    },
    "c6b5203cfdfccfa22ad5379b7fee75fed850d95e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11837. AuthenticationFilter should destroy SignerSecretProvider in Tomcat deployments. Contributed by Bowen Zhang.\n",
      "commitDate": "17/04/15 10:59 AM",
      "commitName": "c6b5203cfdfccfa22ad5379b7fee75fed850d95e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/03/15 11:44 AM",
      "commitNameOld": "90e07d55ace7221081a58a90e54b360ad68fa1ef",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 17.97,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   protected void initializeSecretProvider(FilterConfig filterConfig)\n       throws ServletException {\n     secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n         getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n     if (secretProvider \u003d\u003d null) {\n       // As tomcat cannot specify the provider object in the configuration.\n       // It\u0027ll go into this path\n       try {\n         secretProvider \u003d constructSecretProvider(\n             filterConfig.getServletContext(),\n             config, false);\n+        isInitializedByTomcat \u003d true;\n       } catch (Exception ex) {\n         throw new ServletException(ex);\n       }\n     }\n     signer \u003d new Signer(secretProvider);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeSecretProvider(FilterConfig filterConfig)\n      throws ServletException {\n    secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n        getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n    if (secretProvider \u003d\u003d null) {\n      // As tomcat cannot specify the provider object in the configuration.\n      // It\u0027ll go into this path\n      try {\n        secretProvider \u003d constructSecretProvider(\n            filterConfig.getServletContext(),\n            config, false);\n        isInitializedByTomcat \u003d true;\n      } catch (Exception ex) {\n        throw new ServletException(ex);\n      }\n    }\n    signer \u003d new Signer(secretProvider);\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {}
    },
    "90e07d55ace7221081a58a90e54b360ad68fa1ef": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11754. RM fails to start in non-secure mode due to authentication filter failure. Contributed by Haohui Mai.\n",
      "commitDate": "30/03/15 11:44 AM",
      "commitName": "90e07d55ace7221081a58a90e54b360ad68fa1ef",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/03/15 5:35 PM",
      "commitNameOld": "47782cbf4a66d49064fd3dd6d1d1a19cc42157fc",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.76,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,17 @@\n   protected void initializeSecretProvider(FilterConfig filterConfig)\n       throws ServletException {\n     secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n         getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n     if (secretProvider \u003d\u003d null) {\n-      Class\u003c? extends SignerSecretProvider\u003e providerClass\n-              \u003d getProviderClass(config);\n+      // As tomcat cannot specify the provider object in the configuration.\n+      // It\u0027ll go into this path\n       try {\n-        secretProvider \u003d providerClass.newInstance();\n-      } catch (InstantiationException ex) {\n-        throw new ServletException(ex);\n-      } catch (IllegalAccessException ex) {\n-        throw new ServletException(ex);\n-      }\n-      try {\n-        secretProvider.init(config, filterConfig.getServletContext(), validity);\n+        secretProvider \u003d constructSecretProvider(\n+            filterConfig.getServletContext(),\n+            config, false);\n       } catch (Exception ex) {\n         throw new ServletException(ex);\n       }\n-    } else {\n-      customSecretProvider \u003d true;\n     }\n     signer \u003d new Signer(secretProvider);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeSecretProvider(FilterConfig filterConfig)\n      throws ServletException {\n    secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n        getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n    if (secretProvider \u003d\u003d null) {\n      // As tomcat cannot specify the provider object in the configuration.\n      // It\u0027ll go into this path\n      try {\n        secretProvider \u003d constructSecretProvider(\n            filterConfig.getServletContext(),\n            config, false);\n      } catch (Exception ex) {\n        throw new ServletException(ex);\n      }\n    }\n    signer \u003d new Signer(secretProvider);\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {}
    },
    "8a261e68e4177b47be01ceae7310ea56aeb7ca38": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11272. Allow ZKSignerSecretProvider and ZKDelegationTokenSecretManager to use the same curator client. Contributed by Arun Suresh.\n",
      "commitDate": "05/11/14 5:47 PM",
      "commitName": "8a261e68e4177b47be01ceae7310ea56aeb7ca38",
      "commitAuthor": "Aaron T. Myers",
      "diff": "@@ -0,0 +1,24 @@\n+  protected void initializeSecretProvider(FilterConfig filterConfig)\n+      throws ServletException {\n+    secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n+        getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n+    if (secretProvider \u003d\u003d null) {\n+      Class\u003c? extends SignerSecretProvider\u003e providerClass\n+              \u003d getProviderClass(config);\n+      try {\n+        secretProvider \u003d providerClass.newInstance();\n+      } catch (InstantiationException ex) {\n+        throw new ServletException(ex);\n+      } catch (IllegalAccessException ex) {\n+        throw new ServletException(ex);\n+      }\n+      try {\n+        secretProvider.init(config, filterConfig.getServletContext(), validity);\n+      } catch (Exception ex) {\n+        throw new ServletException(ex);\n+      }\n+    } else {\n+      customSecretProvider \u003d true;\n+    }\n+    signer \u003d new Signer(secretProvider);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeSecretProvider(FilterConfig filterConfig)\n      throws ServletException {\n    secretProvider \u003d (SignerSecretProvider) filterConfig.getServletContext().\n        getAttribute(SIGNER_SECRET_PROVIDER_ATTRIBUTE);\n    if (secretProvider \u003d\u003d null) {\n      Class\u003c? extends SignerSecretProvider\u003e providerClass\n              \u003d getProviderClass(config);\n      try {\n        secretProvider \u003d providerClass.newInstance();\n      } catch (InstantiationException ex) {\n        throw new ServletException(ex);\n      } catch (IllegalAccessException ex) {\n        throw new ServletException(ex);\n      }\n      try {\n        secretProvider.init(config, filterConfig.getServletContext(), validity);\n      } catch (Exception ex) {\n        throw new ServletException(ex);\n      }\n    } else {\n      customSecretProvider \u003d true;\n    }\n    signer \u003d new Signer(secretProvider);\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java"
    }
  }
}