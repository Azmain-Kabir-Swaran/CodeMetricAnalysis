{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationCLI.java",
  "functionName": "printApplicationAttemptReport",
  "functionId": "printApplicationAttemptReport___applicationAttemptId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
  "functionStartLine": 342,
  "functionEndLine": 390,
  "numCommitsSeen": 72,
  "timeTaken": 3719,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "b57f08c0d2dae57b545a3baa213e18464060ae3b",
    "d468c9aaf15e977f12e6214b47996412c907e069",
    "856b46cf47d3d17d3db2ca23106cb472aa8dd488",
    "ca3381de61ff53604d9389694049a1a4dedc7571",
    "fae3e8614f4f9a42904e39c51ca68b0d1e67469f",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "b57f08c0d2dae57b545a3baa213e18464060ae3b": "Ybodychange",
    "d468c9aaf15e977f12e6214b47996412c907e069": "Ybodychange",
    "856b46cf47d3d17d3db2ca23106cb472aa8dd488": "Ybodychange",
    "ca3381de61ff53604d9389694049a1a4dedc7571": "Ybodychange",
    "fae3e8614f4f9a42904e39c51ca68b0d1e67469f": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "06/06/16 2:30 PM",
      "commitNameOld": "4a1cedc010d3fa1d8ef3f2773ca12acadfee5ba5",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 8.02,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   private int printApplicationAttemptReport(String applicationAttemptId)\n       throws YarnException, IOException {\n     ApplicationAttemptReport appAttemptReport \u003d null;\n     try {\n-      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n-          .toApplicationAttemptId(applicationAttemptId));\n+      appAttemptReport \u003d client.getApplicationAttemptReport(\n+          ApplicationAttemptId.fromString(applicationAttemptId));\n     } catch (ApplicationNotFoundException e) {\n       sysout.println(\"Application for AppAttempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     } catch (ApplicationAttemptNotFoundException e) {\n       sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n           + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     }\n     // Use PrintWriter.println, which uses correct platform line ending.\n     ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n     PrintWriter appAttemptReportStr \u003d new PrintWriter(\n         new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n     if (appAttemptReport !\u003d null) {\n       appAttemptReportStr.println(\"Application Attempt Report : \");\n       appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n       appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n       appAttemptReportStr.print(\"\\tState : \");\n       appAttemptReportStr.println(appAttemptReport\n           .getYarnApplicationAttemptState());\n       appAttemptReportStr.print(\"\\tAMContainer : \");\n       appAttemptReportStr\n           .println(appAttemptReport.getAMContainerId() \u003d\u003d null ? \"N/A\"\n               : appAttemptReport.getAMContainerId().toString());\n       appAttemptReportStr.print(\"\\tTracking-URL : \");\n       appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n       appAttemptReportStr.print(\"\\tRPC Port : \");\n       appAttemptReportStr.println(appAttemptReport.getRpcPort());\n       appAttemptReportStr.print(\"\\tAM Host : \");\n       appAttemptReportStr.println(appAttemptReport.getHost());\n       appAttemptReportStr.print(\"\\tDiagnostics : \");\n       appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n     } else {\n       appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n       appAttemptReportStr.close();\n       sysout.println(baos.toString(\"UTF-8\"));\n       return -1;\n     }\n     appAttemptReportStr.close();\n     sysout.println(baos.toString(\"UTF-8\"));\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d null;\n    try {\n      appAttemptReport \u003d client.getApplicationAttemptReport(\n          ApplicationAttemptId.fromString(applicationAttemptId));\n    } catch (ApplicationNotFoundException e) {\n      sysout.println(\"Application for AppAttempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    } catch (ApplicationAttemptNotFoundException e) {\n      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    }\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(\n        new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr\n          .println(appAttemptReport.getAMContainerId() \u003d\u003d null ? \"N/A\"\n              : appAttemptReport.getAMContainerId().toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n      appAttemptReportStr.close();\n      sysout.println(baos.toString(\"UTF-8\"));\n      return -1;\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "b57f08c0d2dae57b545a3baa213e18464060ae3b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4246. NPE while listing app attempt. (Nijel S F via rohithsharmaks)\n",
      "commitDate": "25/10/15 11:26 PM",
      "commitName": "b57f08c0d2dae57b545a3baa213e18464060ae3b",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "09/10/15 7:17 AM",
      "commitNameOld": "a0bca2b5ad2344fda5411d910a3730c85f12a0df",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 16.67,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,49 @@\n   private int printApplicationAttemptReport(String applicationAttemptId)\n       throws YarnException, IOException {\n     ApplicationAttemptReport appAttemptReport \u003d null;\n     try {\n       appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n           .toApplicationAttemptId(applicationAttemptId));\n     } catch (ApplicationNotFoundException e) {\n       sysout.println(\"Application for AppAttempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     } catch (ApplicationAttemptNotFoundException e) {\n       sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n           + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     }\n     // Use PrintWriter.println, which uses correct platform line ending.\n     ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n     PrintWriter appAttemptReportStr \u003d new PrintWriter(\n         new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n     if (appAttemptReport !\u003d null) {\n       appAttemptReportStr.println(\"Application Attempt Report : \");\n       appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n       appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n       appAttemptReportStr.print(\"\\tState : \");\n       appAttemptReportStr.println(appAttemptReport\n           .getYarnApplicationAttemptState());\n       appAttemptReportStr.print(\"\\tAMContainer : \");\n-      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n-          .toString());\n+      appAttemptReportStr\n+          .println(appAttemptReport.getAMContainerId() \u003d\u003d null ? \"N/A\"\n+              : appAttemptReport.getAMContainerId().toString());\n       appAttemptReportStr.print(\"\\tTracking-URL : \");\n       appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n       appAttemptReportStr.print(\"\\tRPC Port : \");\n       appAttemptReportStr.println(appAttemptReport.getRpcPort());\n       appAttemptReportStr.print(\"\\tAM Host : \");\n       appAttemptReportStr.println(appAttemptReport.getHost());\n       appAttemptReportStr.print(\"\\tDiagnostics : \");\n       appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n     } else {\n       appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n       appAttemptReportStr.close();\n       sysout.println(baos.toString(\"UTF-8\"));\n       return -1;\n     }\n     appAttemptReportStr.close();\n     sysout.println(baos.toString(\"UTF-8\"));\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d null;\n    try {\n      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n          .toApplicationAttemptId(applicationAttemptId));\n    } catch (ApplicationNotFoundException e) {\n      sysout.println(\"Application for AppAttempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    } catch (ApplicationAttemptNotFoundException e) {\n      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    }\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(\n        new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr\n          .println(appAttemptReport.getAMContainerId() \u003d\u003d null ? \"N/A\"\n              : appAttemptReport.getAMContainerId().toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n      appAttemptReportStr.close();\n      sysout.println(baos.toString(\"UTF-8\"));\n      return -1;\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "d468c9aaf15e977f12e6214b47996412c907e069": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2940. Fix new findbugs warnings in rest of the hadoop-yarn components. (Contributed by Li Lu)\n",
      "commitDate": "23/12/14 8:04 PM",
      "commitName": "d468c9aaf15e977f12e6214b47996412c907e069",
      "commitAuthor": "Junping Du",
      "commitDateOld": "23/12/14 8:02 PM",
      "commitNameOld": "856b46cf47d3d17d3db2ca23106cb472aa8dd488",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,48 @@\n   private int printApplicationAttemptReport(String applicationAttemptId)\n       throws YarnException, IOException {\n     ApplicationAttemptReport appAttemptReport \u003d null;\n     try {\n       appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n           .toApplicationAttemptId(applicationAttemptId));\n     } catch (ApplicationNotFoundException e) {\n       sysout.println(\"Application for AppAttempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     } catch (ApplicationAttemptNotFoundException e) {\n       sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n           + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     }\n     // Use PrintWriter.println, which uses correct platform line ending.\n     ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n-    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n+    PrintWriter appAttemptReportStr \u003d new PrintWriter(\n+        new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n     if (appAttemptReport !\u003d null) {\n       appAttemptReportStr.println(\"Application Attempt Report : \");\n       appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n       appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n       appAttemptReportStr.print(\"\\tState : \");\n       appAttemptReportStr.println(appAttemptReport\n           .getYarnApplicationAttemptState());\n       appAttemptReportStr.print(\"\\tAMContainer : \");\n       appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n           .toString());\n       appAttemptReportStr.print(\"\\tTracking-URL : \");\n       appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n       appAttemptReportStr.print(\"\\tRPC Port : \");\n       appAttemptReportStr.println(appAttemptReport.getRpcPort());\n       appAttemptReportStr.print(\"\\tAM Host : \");\n       appAttemptReportStr.println(appAttemptReport.getHost());\n       appAttemptReportStr.print(\"\\tDiagnostics : \");\n       appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n     } else {\n       appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n       appAttemptReportStr.close();\n       sysout.println(baos.toString(\"UTF-8\"));\n       return -1;\n     }\n     appAttemptReportStr.close();\n     sysout.println(baos.toString(\"UTF-8\"));\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d null;\n    try {\n      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n          .toApplicationAttemptId(applicationAttemptId));\n    } catch (ApplicationNotFoundException e) {\n      sysout.println(\"Application for AppAttempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    } catch (ApplicationAttemptNotFoundException e) {\n      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    }\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(\n        new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n          .toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n      appAttemptReportStr.close();\n      sysout.println(baos.toString(\"UTF-8\"));\n      return -1;\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "856b46cf47d3d17d3db2ca23106cb472aa8dd488": {
      "type": "Ybodychange",
      "commitMessage": "Revert ca3381de61ff53604d9389694049a1a4dedc7571 and 20674255ad891bb693ecb2faa5bdb37477073dac as missing JIRA number in commit message\n",
      "commitDate": "23/12/14 8:02 PM",
      "commitName": "856b46cf47d3d17d3db2ca23106cb472aa8dd488",
      "commitAuthor": "Junping Du",
      "commitDateOld": "23/12/14 6:57 PM",
      "commitNameOld": "ca3381de61ff53604d9389694049a1a4dedc7571",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,47 @@\n   private int printApplicationAttemptReport(String applicationAttemptId)\n       throws YarnException, IOException {\n     ApplicationAttemptReport appAttemptReport \u003d null;\n     try {\n       appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n           .toApplicationAttemptId(applicationAttemptId));\n     } catch (ApplicationNotFoundException e) {\n       sysout.println(\"Application for AppAttempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     } catch (ApplicationAttemptNotFoundException e) {\n       sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n           + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     }\n     // Use PrintWriter.println, which uses correct platform line ending.\n     ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n-    PrintWriter appAttemptReportStr \u003d new PrintWriter(\n-        new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n+    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n     if (appAttemptReport !\u003d null) {\n       appAttemptReportStr.println(\"Application Attempt Report : \");\n       appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n       appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n       appAttemptReportStr.print(\"\\tState : \");\n       appAttemptReportStr.println(appAttemptReport\n           .getYarnApplicationAttemptState());\n       appAttemptReportStr.print(\"\\tAMContainer : \");\n       appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n           .toString());\n       appAttemptReportStr.print(\"\\tTracking-URL : \");\n       appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n       appAttemptReportStr.print(\"\\tRPC Port : \");\n       appAttemptReportStr.println(appAttemptReport.getRpcPort());\n       appAttemptReportStr.print(\"\\tAM Host : \");\n       appAttemptReportStr.println(appAttemptReport.getHost());\n       appAttemptReportStr.print(\"\\tDiagnostics : \");\n       appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n     } else {\n       appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n       appAttemptReportStr.close();\n       sysout.println(baos.toString(\"UTF-8\"));\n       return -1;\n     }\n     appAttemptReportStr.close();\n     sysout.println(baos.toString(\"UTF-8\"));\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d null;\n    try {\n      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n          .toApplicationAttemptId(applicationAttemptId));\n    } catch (ApplicationNotFoundException e) {\n      sysout.println(\"Application for AppAttempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    } catch (ApplicationAttemptNotFoundException e) {\n      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    }\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n          .toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n      appAttemptReportStr.close();\n      sysout.println(baos.toString(\"UTF-8\"));\n      return -1;\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "ca3381de61ff53604d9389694049a1a4dedc7571": {
      "type": "Ybodychange",
      "commitMessage": "Fix new findbugs warnings in rest of the hadoop-yarn components. (Contributed by Li Lu)\n",
      "commitDate": "23/12/14 6:57 PM",
      "commitName": "ca3381de61ff53604d9389694049a1a4dedc7571",
      "commitAuthor": "Junping Du",
      "commitDateOld": "15/12/14 1:13 AM",
      "commitNameOld": "fae3e8614f4f9a42904e39c51ca68b0d1e67469f",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 8.74,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,48 @@\n   private int printApplicationAttemptReport(String applicationAttemptId)\n       throws YarnException, IOException {\n     ApplicationAttemptReport appAttemptReport \u003d null;\n     try {\n       appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n           .toApplicationAttemptId(applicationAttemptId));\n     } catch (ApplicationNotFoundException e) {\n       sysout.println(\"Application for AppAttempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     } catch (ApplicationAttemptNotFoundException e) {\n       sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n           + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n       return -1;\n     }\n     // Use PrintWriter.println, which uses correct platform line ending.\n     ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n-    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n+    PrintWriter appAttemptReportStr \u003d new PrintWriter(\n+        new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n     if (appAttemptReport !\u003d null) {\n       appAttemptReportStr.println(\"Application Attempt Report : \");\n       appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n       appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n       appAttemptReportStr.print(\"\\tState : \");\n       appAttemptReportStr.println(appAttemptReport\n           .getYarnApplicationAttemptState());\n       appAttemptReportStr.print(\"\\tAMContainer : \");\n       appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n           .toString());\n       appAttemptReportStr.print(\"\\tTracking-URL : \");\n       appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n       appAttemptReportStr.print(\"\\tRPC Port : \");\n       appAttemptReportStr.println(appAttemptReport.getRpcPort());\n       appAttemptReportStr.print(\"\\tAM Host : \");\n       appAttemptReportStr.println(appAttemptReport.getHost());\n       appAttemptReportStr.print(\"\\tDiagnostics : \");\n       appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n     } else {\n       appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n           + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n       appAttemptReportStr.close();\n       sysout.println(baos.toString(\"UTF-8\"));\n       return -1;\n     }\n     appAttemptReportStr.close();\n     sysout.println(baos.toString(\"UTF-8\"));\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d null;\n    try {\n      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n          .toApplicationAttemptId(applicationAttemptId));\n    } catch (ApplicationNotFoundException e) {\n      sysout.println(\"Application for AppAttempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    } catch (ApplicationAttemptNotFoundException e) {\n      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    }\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(\n        new OutputStreamWriter(baos, Charset.forName(\"UTF-8\")));\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n          .toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n      appAttemptReportStr.close();\n      sysout.println(baos.toString(\"UTF-8\"));\n      return -1;\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "fae3e8614f4f9a42904e39c51ca68b0d1e67469f": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-2356. yarn status command for non-existent application/application\nattempt/container is too verbose. Contributed by Sunil G.\n",
      "commitDate": "15/12/14 1:13 AM",
      "commitName": "fae3e8614f4f9a42904e39c51ca68b0d1e67469f",
      "commitAuthor": "Devaraj K",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-2356. yarn status command for non-existent application/application\nattempt/container is too verbose. Contributed by Sunil G.\n",
          "commitDate": "15/12/14 1:13 AM",
          "commitName": "fae3e8614f4f9a42904e39c51ca68b0d1e67469f",
          "commitAuthor": "Devaraj K",
          "commitDateOld": "04/12/14 12:53 PM",
          "commitNameOld": "258623ff8bb1a1057ae3501d4f20982d5a59ea34",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 10.51,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,47 @@\n-  private void printApplicationAttemptReport(String applicationAttemptId)\n+  private int printApplicationAttemptReport(String applicationAttemptId)\n       throws YarnException, IOException {\n-    ApplicationAttemptReport appAttemptReport \u003d client\n-        .getApplicationAttemptReport(ConverterUtils\n-            .toApplicationAttemptId(applicationAttemptId));\n+    ApplicationAttemptReport appAttemptReport \u003d null;\n+    try {\n+      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n+          .toApplicationAttemptId(applicationAttemptId));\n+    } catch (ApplicationNotFoundException e) {\n+      sysout.println(\"Application for AppAttempt with id \u0027\"\n+          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n+      return -1;\n+    } catch (ApplicationAttemptNotFoundException e) {\n+      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n+          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n+      return -1;\n+    }\n     // Use PrintWriter.println, which uses correct platform line ending.\n     ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n     PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n     if (appAttemptReport !\u003d null) {\n       appAttemptReportStr.println(\"Application Attempt Report : \");\n       appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n       appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n       appAttemptReportStr.print(\"\\tState : \");\n       appAttemptReportStr.println(appAttemptReport\n           .getYarnApplicationAttemptState());\n       appAttemptReportStr.print(\"\\tAMContainer : \");\n       appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n           .toString());\n       appAttemptReportStr.print(\"\\tTracking-URL : \");\n       appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n       appAttemptReportStr.print(\"\\tRPC Port : \");\n       appAttemptReportStr.println(appAttemptReport.getRpcPort());\n       appAttemptReportStr.print(\"\\tAM Host : \");\n       appAttemptReportStr.println(appAttemptReport.getHost());\n       appAttemptReportStr.print(\"\\tDiagnostics : \");\n       appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n     } else {\n       appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n-          + applicationAttemptId + \"\u0027 doesn\u0027t exist in History Server.\");\n+          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n+      appAttemptReportStr.close();\n+      sysout.println(baos.toString(\"UTF-8\"));\n+      return -1;\n     }\n     appAttemptReportStr.close();\n     sysout.println(baos.toString(\"UTF-8\"));\n+    return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d null;\n    try {\n      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n          .toApplicationAttemptId(applicationAttemptId));\n    } catch (ApplicationNotFoundException e) {\n      sysout.println(\"Application for AppAttempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    } catch (ApplicationAttemptNotFoundException e) {\n      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    }\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n          .toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n      appAttemptReportStr.close();\n      sysout.println(baos.toString(\"UTF-8\"));\n      return -1;\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n    return 0;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "int"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2356. yarn status command for non-existent application/application\nattempt/container is too verbose. Contributed by Sunil G.\n",
          "commitDate": "15/12/14 1:13 AM",
          "commitName": "fae3e8614f4f9a42904e39c51ca68b0d1e67469f",
          "commitAuthor": "Devaraj K",
          "commitDateOld": "04/12/14 12:53 PM",
          "commitNameOld": "258623ff8bb1a1057ae3501d4f20982d5a59ea34",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 10.51,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,47 @@\n-  private void printApplicationAttemptReport(String applicationAttemptId)\n+  private int printApplicationAttemptReport(String applicationAttemptId)\n       throws YarnException, IOException {\n-    ApplicationAttemptReport appAttemptReport \u003d client\n-        .getApplicationAttemptReport(ConverterUtils\n-            .toApplicationAttemptId(applicationAttemptId));\n+    ApplicationAttemptReport appAttemptReport \u003d null;\n+    try {\n+      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n+          .toApplicationAttemptId(applicationAttemptId));\n+    } catch (ApplicationNotFoundException e) {\n+      sysout.println(\"Application for AppAttempt with id \u0027\"\n+          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n+      return -1;\n+    } catch (ApplicationAttemptNotFoundException e) {\n+      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n+          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n+      return -1;\n+    }\n     // Use PrintWriter.println, which uses correct platform line ending.\n     ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n     PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n     if (appAttemptReport !\u003d null) {\n       appAttemptReportStr.println(\"Application Attempt Report : \");\n       appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n       appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n       appAttemptReportStr.print(\"\\tState : \");\n       appAttemptReportStr.println(appAttemptReport\n           .getYarnApplicationAttemptState());\n       appAttemptReportStr.print(\"\\tAMContainer : \");\n       appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n           .toString());\n       appAttemptReportStr.print(\"\\tTracking-URL : \");\n       appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n       appAttemptReportStr.print(\"\\tRPC Port : \");\n       appAttemptReportStr.println(appAttemptReport.getRpcPort());\n       appAttemptReportStr.print(\"\\tAM Host : \");\n       appAttemptReportStr.println(appAttemptReport.getHost());\n       appAttemptReportStr.print(\"\\tDiagnostics : \");\n       appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n     } else {\n       appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n-          + applicationAttemptId + \"\u0027 doesn\u0027t exist in History Server.\");\n+          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n+      appAttemptReportStr.close();\n+      sysout.println(baos.toString(\"UTF-8\"));\n+      return -1;\n     }\n     appAttemptReportStr.close();\n     sysout.println(baos.toString(\"UTF-8\"));\n+    return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d null;\n    try {\n      appAttemptReport \u003d client.getApplicationAttemptReport(ConverterUtils\n          .toApplicationAttemptId(applicationAttemptId));\n    } catch (ApplicationNotFoundException e) {\n      sysout.println(\"Application for AppAttempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    } catch (ApplicationAttemptNotFoundException e) {\n      sysout.println(\"Application Attempt with id \u0027\" + applicationAttemptId\n          + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n      return -1;\n    }\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n          .toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in Timeline Server.\");\n      appAttemptReportStr.close();\n      sysout.println(baos.toString(\"UTF-8\"));\n      return -1;\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n    return 0;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,33 @@\n+  private void printApplicationAttemptReport(String applicationAttemptId)\n+      throws YarnException, IOException {\n+    ApplicationAttemptReport appAttemptReport \u003d client\n+        .getApplicationAttemptReport(ConverterUtils\n+            .toApplicationAttemptId(applicationAttemptId));\n+    // Use PrintWriter.println, which uses correct platform line ending.\n+    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n+    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n+    if (appAttemptReport !\u003d null) {\n+      appAttemptReportStr.println(\"Application Attempt Report : \");\n+      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n+      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n+      appAttemptReportStr.print(\"\\tState : \");\n+      appAttemptReportStr.println(appAttemptReport\n+          .getYarnApplicationAttemptState());\n+      appAttemptReportStr.print(\"\\tAMContainer : \");\n+      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n+          .toString());\n+      appAttemptReportStr.print(\"\\tTracking-URL : \");\n+      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n+      appAttemptReportStr.print(\"\\tRPC Port : \");\n+      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n+      appAttemptReportStr.print(\"\\tAM Host : \");\n+      appAttemptReportStr.println(appAttemptReport.getHost());\n+      appAttemptReportStr.print(\"\\tDiagnostics : \");\n+      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n+    } else {\n+      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n+          + applicationAttemptId + \"\u0027 doesn\u0027t exist in History Server.\");\n+    }\n+    appAttemptReportStr.close();\n+    sysout.println(baos.toString(\"UTF-8\"));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printApplicationAttemptReport(String applicationAttemptId)\n      throws YarnException, IOException {\n    ApplicationAttemptReport appAttemptReport \u003d client\n        .getApplicationAttemptReport(ConverterUtils\n            .toApplicationAttemptId(applicationAttemptId));\n    // Use PrintWriter.println, which uses correct platform line ending.\n    ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\n    PrintWriter appAttemptReportStr \u003d new PrintWriter(baos);\n    if (appAttemptReport !\u003d null) {\n      appAttemptReportStr.println(\"Application Attempt Report : \");\n      appAttemptReportStr.print(\"\\tApplicationAttempt-Id : \");\n      appAttemptReportStr.println(appAttemptReport.getApplicationAttemptId());\n      appAttemptReportStr.print(\"\\tState : \");\n      appAttemptReportStr.println(appAttemptReport\n          .getYarnApplicationAttemptState());\n      appAttemptReportStr.print(\"\\tAMContainer : \");\n      appAttemptReportStr.println(appAttemptReport.getAMContainerId()\n          .toString());\n      appAttemptReportStr.print(\"\\tTracking-URL : \");\n      appAttemptReportStr.println(appAttemptReport.getTrackingUrl());\n      appAttemptReportStr.print(\"\\tRPC Port : \");\n      appAttemptReportStr.println(appAttemptReport.getRpcPort());\n      appAttemptReportStr.print(\"\\tAM Host : \");\n      appAttemptReportStr.println(appAttemptReport.getHost());\n      appAttemptReportStr.print(\"\\tDiagnostics : \");\n      appAttemptReportStr.print(appAttemptReport.getDiagnostics());\n    } else {\n      appAttemptReportStr.print(\"Application Attempt with id \u0027\"\n          + applicationAttemptId + \"\u0027 doesn\u0027t exist in History Server.\");\n    }\n    appAttemptReportStr.close();\n    sysout.println(baos.toString(\"UTF-8\"));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java"
    }
  }
}