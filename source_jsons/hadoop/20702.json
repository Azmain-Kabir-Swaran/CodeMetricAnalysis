{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobQueueClient.java",
  "functionName": "printJobQueueInfo",
  "functionId": "printJobQueueInfo___jobQueueInfo-JobQueueInfo__writer-Writer__prefix-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobQueueClient.java",
  "functionStartLine": 124,
  "functionEndLine": 145,
  "numCommitsSeen": 13,
  "timeTaken": 4746,
  "changeHistory": [
    "9b75b051634fcb1ff85613ef6a16a36cef69e524",
    "739acd6e145aadec5ac9ab42ff182c9c013707de",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9b75b051634fcb1ff85613ef6a16a36cef69e524": "Ymultichange(Yparameterchange,Ybodychange)",
    "739acd6e145aadec5ac9ab42ff182c9c013707de": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b75b051634fcb1ff85613ef6a16a36cef69e524": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3328. mapred queue -list output inconsistent and missing child queues. (Ravi Prakash via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213504 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/11 3:56 PM",
      "commitName": "9b75b051634fcb1ff85613ef6a16a36cef69e524",
      "commitAuthor": "Mahadev Konar",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3328. mapred queue -list output inconsistent and missing child queues. (Ravi Prakash via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213504 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/12/11 3:56 PM",
          "commitName": "9b75b051634fcb1ff85613ef6a16a36cef69e524",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "05/12/11 5:34 PM",
          "commitNameOld": "a55599062c0d7f0adead4b530abf483731e9efe0",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 6.93,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,22 @@\n-  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer)\n-      throws IOException {\n+  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer,\n+    String prefix) throws IOException {\n     if (jobQueueInfo \u003d\u003d null) {\n       writer.write(\"No queue found.\\n\");\n       writer.flush();\n       return;\n     }\n-    writer.write(String.format(\"Queue Name : %s \\n\",\n+    writer.write(String.format(prefix + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n+    writer.write(String.format(prefix + \"Queue Name : %s \\n\",\n         jobQueueInfo.getQueueName()));\n-    writer.write(String.format(\"Queue State : %s \\n\",\n+    writer.write(String.format(prefix + \"Queue State : %s \\n\",\n         jobQueueInfo.getQueueState()));\n-    writer.write(String.format(\"Scheduling Info : %s \\n\",\n+    writer.write(String.format(prefix + \"Scheduling Info : %s \\n\",\n         jobQueueInfo.getSchedulingInfo()));\n     List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n     if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n-      writer.write(String.format(\"Child Queues : \"));\n       for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n-        JobQueueInfo childQueue \u003d childQueues.get(i);\n-        writer.write(String.format(\"%s\", childQueue.getQueueName()));\n-        if (i !\u003d childQueues.size() - 1) {\n-          writer.write(String.format(\", \"));\n-        }\n+\t  printJobQueueInfo(childQueues.get(i), writer, \"    \" + prefix);\n       }\n-      writer.write(\"\\n\");\n     }\n-    writer.write(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer,\n    String prefix) throws IOException {\n    if (jobQueueInfo \u003d\u003d null) {\n      writer.write(\"No queue found.\\n\");\n      writer.flush();\n      return;\n    }\n    writer.write(String.format(prefix + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n    writer.write(String.format(prefix + \"Queue Name : %s \\n\",\n        jobQueueInfo.getQueueName()));\n    writer.write(String.format(prefix + \"Queue State : %s \\n\",\n        jobQueueInfo.getQueueState()));\n    writer.write(String.format(prefix + \"Scheduling Info : %s \\n\",\n        jobQueueInfo.getSchedulingInfo()));\n    List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n    if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n      for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n\t  printJobQueueInfo(childQueues.get(i), writer, \"    \" + prefix);\n      }\n    }\n    writer.flush();\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobQueueClient.java",
          "extendedDetails": {
            "oldValue": "[jobQueueInfo-JobQueueInfo, writer-Writer]",
            "newValue": "[jobQueueInfo-JobQueueInfo, writer-Writer, prefix-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3328. mapred queue -list output inconsistent and missing child queues. (Ravi Prakash via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213504 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/12/11 3:56 PM",
          "commitName": "9b75b051634fcb1ff85613ef6a16a36cef69e524",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "05/12/11 5:34 PM",
          "commitNameOld": "a55599062c0d7f0adead4b530abf483731e9efe0",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 6.93,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,22 @@\n-  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer)\n-      throws IOException {\n+  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer,\n+    String prefix) throws IOException {\n     if (jobQueueInfo \u003d\u003d null) {\n       writer.write(\"No queue found.\\n\");\n       writer.flush();\n       return;\n     }\n-    writer.write(String.format(\"Queue Name : %s \\n\",\n+    writer.write(String.format(prefix + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n+    writer.write(String.format(prefix + \"Queue Name : %s \\n\",\n         jobQueueInfo.getQueueName()));\n-    writer.write(String.format(\"Queue State : %s \\n\",\n+    writer.write(String.format(prefix + \"Queue State : %s \\n\",\n         jobQueueInfo.getQueueState()));\n-    writer.write(String.format(\"Scheduling Info : %s \\n\",\n+    writer.write(String.format(prefix + \"Scheduling Info : %s \\n\",\n         jobQueueInfo.getSchedulingInfo()));\n     List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n     if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n-      writer.write(String.format(\"Child Queues : \"));\n       for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n-        JobQueueInfo childQueue \u003d childQueues.get(i);\n-        writer.write(String.format(\"%s\", childQueue.getQueueName()));\n-        if (i !\u003d childQueues.size() - 1) {\n-          writer.write(String.format(\", \"));\n-        }\n+\t  printJobQueueInfo(childQueues.get(i), writer, \"    \" + prefix);\n       }\n-      writer.write(\"\\n\");\n     }\n-    writer.write(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer,\n    String prefix) throws IOException {\n    if (jobQueueInfo \u003d\u003d null) {\n      writer.write(\"No queue found.\\n\");\n      writer.flush();\n      return;\n    }\n    writer.write(String.format(prefix + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n    writer.write(String.format(prefix + \"Queue Name : %s \\n\",\n        jobQueueInfo.getQueueName()));\n    writer.write(String.format(prefix + \"Queue State : %s \\n\",\n        jobQueueInfo.getQueueState()));\n    writer.write(String.format(prefix + \"Scheduling Info : %s \\n\",\n        jobQueueInfo.getSchedulingInfo()));\n    List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n    if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n      for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n\t  printJobQueueInfo(childQueues.get(i), writer, \"    \" + prefix);\n      }\n    }\n    writer.flush();\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobQueueClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "739acd6e145aadec5ac9ab42ff182c9c013707de": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3284. Moved JobQueueClient to hadoop-mapreduce-client-core.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190084 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 4:21 PM",
      "commitName": "739acd6e145aadec5ac9ab42ff182c9c013707de",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "27/10/11 4:13 PM",
      "commitNameOld": "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer)\n      throws IOException {\n    if (jobQueueInfo \u003d\u003d null) {\n      writer.write(\"No queue found.\\n\");\n      writer.flush();\n      return;\n    }\n    writer.write(String.format(\"Queue Name : %s \\n\",\n        jobQueueInfo.getQueueName()));\n    writer.write(String.format(\"Queue State : %s \\n\",\n        jobQueueInfo.getQueueState()));\n    writer.write(String.format(\"Scheduling Info : %s \\n\",\n        jobQueueInfo.getSchedulingInfo()));\n    List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n    if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n      writer.write(String.format(\"Child Queues : \"));\n      for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n        JobQueueInfo childQueue \u003d childQueues.get(i);\n        writer.write(String.format(\"%s\", childQueue.getQueueName()));\n        if (i !\u003d childQueues.size() - 1) {\n          writer.write(String.format(\", \"));\n        }\n      }\n      writer.write(\"\\n\");\n    }\n    writer.write(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n    writer.flush();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobQueueClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/JobQueueClient.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobQueueClient.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer)\n      throws IOException {\n    if (jobQueueInfo \u003d\u003d null) {\n      writer.write(\"No queue found.\\n\");\n      writer.flush();\n      return;\n    }\n    writer.write(String.format(\"Queue Name : %s \\n\",\n        jobQueueInfo.getQueueName()));\n    writer.write(String.format(\"Queue State : %s \\n\",\n        jobQueueInfo.getQueueState()));\n    writer.write(String.format(\"Scheduling Info : %s \\n\",\n        jobQueueInfo.getSchedulingInfo()));\n    List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n    if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n      writer.write(String.format(\"Child Queues : \"));\n      for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n        JobQueueInfo childQueue \u003d childQueues.get(i);\n        writer.write(String.format(\"%s\", childQueue.getQueueName()));\n        if (i !\u003d childQueues.size() - 1) {\n          writer.write(String.format(\", \"));\n        }\n      }\n      writer.write(\"\\n\");\n    }\n    writer.write(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n    writer.flush();\n  }",
      "path": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/JobQueueClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/java/org/apache/hadoop/mapred/JobQueueClient.java",
        "newPath": "hadoop-mapreduce-project/src/java/org/apache/hadoop/mapred/JobQueueClient.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer)\n      throws IOException {\n    if (jobQueueInfo \u003d\u003d null) {\n      writer.write(\"No queue found.\\n\");\n      writer.flush();\n      return;\n    }\n    writer.write(String.format(\"Queue Name : %s \\n\",\n        jobQueueInfo.getQueueName()));\n    writer.write(String.format(\"Queue State : %s \\n\",\n        jobQueueInfo.getQueueState()));\n    writer.write(String.format(\"Scheduling Info : %s \\n\",\n        jobQueueInfo.getSchedulingInfo()));\n    List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n    if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n      writer.write(String.format(\"Child Queues : \"));\n      for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n        JobQueueInfo childQueue \u003d childQueues.get(i);\n        writer.write(String.format(\"%s\", childQueue.getQueueName()));\n        if (i !\u003d childQueues.size() - 1) {\n          writer.write(String.format(\", \"));\n        }\n      }\n      writer.write(\"\\n\");\n    }\n    writer.write(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n    writer.flush();\n  }",
      "path": "hadoop-mapreduce/src/java/org/apache/hadoop/mapred/JobQueueClient.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/JobQueueClient.java",
        "newPath": "hadoop-mapreduce/src/java/org/apache/hadoop/mapred/JobQueueClient.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer)\n+      throws IOException {\n+    if (jobQueueInfo \u003d\u003d null) {\n+      writer.write(\"No queue found.\\n\");\n+      writer.flush();\n+      return;\n+    }\n+    writer.write(String.format(\"Queue Name : %s \\n\",\n+        jobQueueInfo.getQueueName()));\n+    writer.write(String.format(\"Queue State : %s \\n\",\n+        jobQueueInfo.getQueueState()));\n+    writer.write(String.format(\"Scheduling Info : %s \\n\",\n+        jobQueueInfo.getSchedulingInfo()));\n+    List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n+    if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n+      writer.write(String.format(\"Child Queues : \"));\n+      for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n+        JobQueueInfo childQueue \u003d childQueues.get(i);\n+        writer.write(String.format(\"%s\", childQueue.getQueueName()));\n+        if (i !\u003d childQueues.size() - 1) {\n+          writer.write(String.format(\", \"));\n+        }\n+      }\n+      writer.write(\"\\n\");\n+    }\n+    writer.write(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n+    writer.flush();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void printJobQueueInfo(JobQueueInfo jobQueueInfo, Writer writer)\n      throws IOException {\n    if (jobQueueInfo \u003d\u003d null) {\n      writer.write(\"No queue found.\\n\");\n      writer.flush();\n      return;\n    }\n    writer.write(String.format(\"Queue Name : %s \\n\",\n        jobQueueInfo.getQueueName()));\n    writer.write(String.format(\"Queue State : %s \\n\",\n        jobQueueInfo.getQueueState()));\n    writer.write(String.format(\"Scheduling Info : %s \\n\",\n        jobQueueInfo.getSchedulingInfo()));\n    List\u003cJobQueueInfo\u003e childQueues \u003d jobQueueInfo.getChildren();\n    if (childQueues !\u003d null \u0026\u0026 childQueues.size() \u003e 0) {\n      writer.write(String.format(\"Child Queues : \"));\n      for (int i \u003d 0; i \u003c childQueues.size(); i++) {\n        JobQueueInfo childQueue \u003d childQueues.get(i);\n        writer.write(String.format(\"%s\", childQueue.getQueueName()));\n        if (i !\u003d childQueues.size() - 1) {\n          writer.write(String.format(\", \"));\n        }\n      }\n      writer.write(\"\\n\");\n    }\n    writer.write(String.format(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"));\n    writer.flush();\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobQueueClient.java"
    }
  }
}