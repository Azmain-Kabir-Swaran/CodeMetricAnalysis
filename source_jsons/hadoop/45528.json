{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderClientImpl.java",
  "functionName": "doGetUri",
  "functionId": "doGetUri___base-URI__path-String__params-MultivaluedMap__String,String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineReaderClientImpl.java",
  "functionStartLine": 223,
  "functionEndLine": 240,
  "numCommitsSeen": 3,
  "timeTaken": 463,
  "changeHistory": [
    "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f"
  ],
  "changeHistoryShort": {
    "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8834 Provide Java client for fetching Yarn specific entities from TimelineReader. Contributed by Abhishek Modi\n",
      "commitDate": "11/10/18 8:21 PM",
      "commitName": "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,18 @@\n+  protected ClientResponse doGetUri(URI base, String path,\n+      MultivaluedMap\u003cString, String\u003e params) throws IOException {\n+    ClientResponse resp \u003d connector.getClient().resource(base).path(path)\n+        .queryParams(params).accept(MediaType.APPLICATION_JSON)\n+        .get(ClientResponse.class);\n+    if (resp \u003d\u003d null ||\n+        resp.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n+        .getStatusCode()) {\n+      String msg \u003d\n+          \"Response from the timeline reader server is \" +\n+              ((resp \u003d\u003d null) ? \"null\" : \"not successful,\" +\n+                  \" HTTP error code: \" + resp.getStatus() +\n+                  \", Server response:\\n\" + resp.getEntity(String.class));\n+      LOG.error(msg);\n+      throw new IOException(msg);\n+    }\n+    return resp;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected ClientResponse doGetUri(URI base, String path,\n      MultivaluedMap\u003cString, String\u003e params) throws IOException {\n    ClientResponse resp \u003d connector.getClient().resource(base).path(path)\n        .queryParams(params).accept(MediaType.APPLICATION_JSON)\n        .get(ClientResponse.class);\n    if (resp \u003d\u003d null ||\n        resp.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n        .getStatusCode()) {\n      String msg \u003d\n          \"Response from the timeline reader server is \" +\n              ((resp \u003d\u003d null) ? \"null\" : \"not successful,\" +\n                  \" HTTP error code: \" + resp.getStatus() +\n                  \", Server response:\\n\" + resp.getEntity(String.class));\n      LOG.error(msg);\n      throw new IOException(msg);\n    }\n    return resp;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineReaderClientImpl.java"
    }
  }
}