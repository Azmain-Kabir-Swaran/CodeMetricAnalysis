{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerAllocator.java",
  "functionName": "heartbeat",
  "functionId": "heartbeat",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
  "functionStartLine": 284,
  "functionEndLine": 316,
  "numCommitsSeen": 83,
  "timeTaken": 8520,
  "changeHistory": [
    "c9bb96fa81fc925e33ccc0b02c98cc2d929df120",
    "0f3b6900be1a3b2e4624f31f84656f4a32dadce9",
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698",
    "1a8781f1f9d4916369be8090690fd97131443159",
    "b2f7a66e50bd09d26b2ad22e66ced73a6254de77",
    "e1c5e7dd2b304651eee692442b2e82ada35b164d",
    "55e94dc5ef4171c4e7b57942f22ead9a01dd9012",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "c9bb96fa81fc925e33ccc0b02c98cc2d929df120": "Ybodychange",
    "0f3b6900be1a3b2e4624f31f84656f4a32dadce9": "Ybodychange",
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698": "Ybodychange",
    "1a8781f1f9d4916369be8090690fd97131443159": "Ybodychange",
    "b2f7a66e50bd09d26b2ad22e66ced73a6254de77": "Ybodychange",
    "e1c5e7dd2b304651eee692442b2e82ada35b164d": "Ybodychange",
    "55e94dc5ef4171c4e7b57942f22ead9a01dd9012": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c9bb96fa81fc925e33ccc0b02c98cc2d929df120": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6689. MapReduce job can infinitely increase number of reducer resource requests. Contributed by Wangda Tan\n",
      "commitDate": "06/05/16 3:25 PM",
      "commitName": "c9bb96fa81fc925e33ccc0b02c98cc2d929df120",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "05/05/16 7:03 PM",
      "commitNameOld": "8d48266720dcf0e71cfd87fef18b60a53aa1bef9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,33 @@\n   protected synchronized void heartbeat() throws Exception {\n     scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n     List\u003cContainer\u003e allocatedContainers \u003d getResources();\n     if (allocatedContainers !\u003d null \u0026\u0026 allocatedContainers.size() \u003e 0) {\n       scheduledRequests.assign(allocatedContainers);\n     }\n \n     int completedMaps \u003d getJob().getCompletedMaps();\n     int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n     if ((lastCompletedTasks !\u003d completedTasks) ||\n           (scheduledRequests.maps.size() \u003e 0)) {\n       lastCompletedTasks \u003d completedTasks;\n       recalculateReduceSchedule \u003d true;\n     }\n \n     if (recalculateReduceSchedule) {\n-      preemptReducesIfNeeded();\n-      scheduleReduces(\n-          getJob().getTotalMaps(), completedMaps,\n-          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n-          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n-          mapResourceRequest, reduceResourceRequest,\n-          pendingReduces.size(), \n-          maxReduceRampupLimit, reduceSlowStart);\n+      boolean reducerPreempted \u003d preemptReducesIfNeeded();\n+\n+      if (!reducerPreempted) {\n+        // Only schedule new reducers if no reducer preemption happens for\n+        // this heartbeat\n+        scheduleReduces(getJob().getTotalMaps(), completedMaps,\n+            scheduledRequests.maps.size(), scheduledRequests.reduces.size(),\n+            assignedRequests.maps.size(), assignedRequests.reduces.size(),\n+            mapResourceRequest, reduceResourceRequest, pendingReduces.size(),\n+            maxReduceRampupLimit, reduceSlowStart);\n+      }\n+\n       recalculateReduceSchedule \u003d false;\n     }\n \n     scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    if (allocatedContainers !\u003d null \u0026\u0026 allocatedContainers.size() \u003e 0) {\n      scheduledRequests.assign(allocatedContainers);\n    }\n\n    int completedMaps \u003d getJob().getCompletedMaps();\n    int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n    if ((lastCompletedTasks !\u003d completedTasks) ||\n          (scheduledRequests.maps.size() \u003e 0)) {\n      lastCompletedTasks \u003d completedTasks;\n      recalculateReduceSchedule \u003d true;\n    }\n\n    if (recalculateReduceSchedule) {\n      boolean reducerPreempted \u003d preemptReducesIfNeeded();\n\n      if (!reducerPreempted) {\n        // Only schedule new reducers if no reducer preemption happens for\n        // this heartbeat\n        scheduleReduces(getJob().getTotalMaps(), completedMaps,\n            scheduledRequests.maps.size(), scheduledRequests.reduces.size(),\n            assignedRequests.maps.size(), assignedRequests.reduces.size(),\n            mapResourceRequest, reduceResourceRequest, pendingReduces.size(),\n            maxReduceRampupLimit, reduceSlowStart);\n      }\n\n      recalculateReduceSchedule \u003d false;\n    }\n\n    scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "0f3b6900be1a3b2e4624f31f84656f4a32dadce9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2209. Replaced AM resync/shutdown command with corresponding exceptions and made related MR changes. Contributed by Jian He.\n",
      "commitDate": "23/10/14 9:56 PM",
      "commitName": "0f3b6900be1a3b2e4624f31f84656f4a32dadce9",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "22/09/14 9:28 AM",
      "commitNameOld": "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 31.52,
      "commitsBetweenForRepo": 299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   protected synchronized void heartbeat() throws Exception {\n     scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n     List\u003cContainer\u003e allocatedContainers \u003d getResources();\n-    if (allocatedContainers.size() \u003e 0) {\n+    if (allocatedContainers !\u003d null \u0026\u0026 allocatedContainers.size() \u003e 0) {\n       scheduledRequests.assign(allocatedContainers);\n     }\n \n     int completedMaps \u003d getJob().getCompletedMaps();\n     int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n     if ((lastCompletedTasks !\u003d completedTasks) ||\n           (scheduledRequests.maps.size() \u003e 0)) {\n       lastCompletedTasks \u003d completedTasks;\n       recalculateReduceSchedule \u003d true;\n     }\n \n     if (recalculateReduceSchedule) {\n       preemptReducesIfNeeded();\n       scheduleReduces(\n           getJob().getTotalMaps(), completedMaps,\n           scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n           assignedRequests.maps.size(), assignedRequests.reduces.size(),\n           mapResourceRequest, reduceResourceRequest,\n           pendingReduces.size(), \n           maxReduceRampupLimit, reduceSlowStart);\n       recalculateReduceSchedule \u003d false;\n     }\n \n     scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    if (allocatedContainers !\u003d null \u0026\u0026 allocatedContainers.size() \u003e 0) {\n      scheduledRequests.assign(allocatedContainers);\n    }\n\n    int completedMaps \u003d getJob().getCompletedMaps();\n    int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n    if ((lastCompletedTasks !\u003d completedTasks) ||\n          (scheduledRequests.maps.size() \u003e 0)) {\n      lastCompletedTasks \u003d completedTasks;\n      recalculateReduceSchedule \u003d true;\n    }\n\n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces(\n          getJob().getTotalMaps(), completedMaps,\n          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n          mapResourceRequest, reduceResourceRequest,\n          pendingReduces.size(), \n          maxReduceRampupLimit, reduceSlowStart);\n      recalculateReduceSchedule \u003d false;\n    }\n\n    scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5844. Add a configurable delay to reducer-preemption. (Maysam Yabandeh via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603957 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 10:22 AM",
      "commitName": "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/04/14 11:44 AM",
      "commitNameOld": "4a91b876db768e7997e740d754aeea66c3b7a36c",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 57.94,
      "commitsBetweenForRepo": 333,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   protected synchronized void heartbeat() throws Exception {\n     scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n     List\u003cContainer\u003e allocatedContainers \u003d getResources();\n     if (allocatedContainers.size() \u003e 0) {\n       scheduledRequests.assign(allocatedContainers);\n     }\n \n     int completedMaps \u003d getJob().getCompletedMaps();\n     int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n     if ((lastCompletedTasks !\u003d completedTasks) ||\n           (scheduledRequests.maps.size() \u003e 0)) {\n       lastCompletedTasks \u003d completedTasks;\n       recalculateReduceSchedule \u003d true;\n     }\n \n     if (recalculateReduceSchedule) {\n       preemptReducesIfNeeded();\n       scheduleReduces(\n           getJob().getTotalMaps(), completedMaps,\n           scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n           assignedRequests.maps.size(), assignedRequests.reduces.size(),\n-          mapResourceReqt, reduceResourceReqt,\n+          mapResourceRequest, reduceResourceRequest,\n           pendingReduces.size(), \n           maxReduceRampupLimit, reduceSlowStart);\n       recalculateReduceSchedule \u003d false;\n     }\n \n     scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    if (allocatedContainers.size() \u003e 0) {\n      scheduledRequests.assign(allocatedContainers);\n    }\n\n    int completedMaps \u003d getJob().getCompletedMaps();\n    int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n    if ((lastCompletedTasks !\u003d completedTasks) ||\n          (scheduledRequests.maps.size() \u003e 0)) {\n      lastCompletedTasks \u003d completedTasks;\n      recalculateReduceSchedule \u003d true;\n    }\n\n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces(\n          getJob().getTotalMaps(), completedMaps,\n          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n          mapResourceRequest, reduceResourceRequest,\n          pendingReduces.size(), \n          maxReduceRampupLimit, reduceSlowStart);\n      recalculateReduceSchedule \u003d false;\n    }\n\n    scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "1a8781f1f9d4916369be8090690fd97131443159": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5689. MRAppMaster does not preempt reducers when scheduled maps cannot be fulfilled. (lohit via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1555161 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/14 9:27 AM",
      "commitName": "1a8781f1f9d4916369be8090690fd97131443159",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "28/12/13 1:58 PM",
      "commitNameOld": "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 5.81,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   protected synchronized void heartbeat() throws Exception {\n     scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n     List\u003cContainer\u003e allocatedContainers \u003d getResources();\n     if (allocatedContainers.size() \u003e 0) {\n       scheduledRequests.assign(allocatedContainers);\n     }\n \n     int completedMaps \u003d getJob().getCompletedMaps();\n     int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n-    if (lastCompletedTasks !\u003d completedTasks) {\n+    if ((lastCompletedTasks !\u003d completedTasks) ||\n+          (scheduledRequests.maps.size() \u003e 0)) {\n       lastCompletedTasks \u003d completedTasks;\n       recalculateReduceSchedule \u003d true;\n     }\n \n     if (recalculateReduceSchedule) {\n       preemptReducesIfNeeded();\n       scheduleReduces(\n           getJob().getTotalMaps(), completedMaps,\n           scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n           assignedRequests.maps.size(), assignedRequests.reduces.size(),\n           mapResourceReqt, reduceResourceReqt,\n           pendingReduces.size(), \n           maxReduceRampupLimit, reduceSlowStart);\n       recalculateReduceSchedule \u003d false;\n     }\n \n     scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    if (allocatedContainers.size() \u003e 0) {\n      scheduledRequests.assign(allocatedContainers);\n    }\n\n    int completedMaps \u003d getJob().getCompletedMaps();\n    int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n    if ((lastCompletedTasks !\u003d completedTasks) ||\n          (scheduledRequests.maps.size() \u003e 0)) {\n      lastCompletedTasks \u003d completedTasks;\n      recalculateReduceSchedule \u003d true;\n    }\n\n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces(\n          getJob().getTotalMaps(), completedMaps,\n          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n          mapResourceReqt, reduceResourceReqt,\n          pendingReduces.size(), \n          maxReduceRampupLimit, reduceSlowStart);\n      recalculateReduceSchedule \u003d false;\n    }\n\n    scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "b2f7a66e50bd09d26b2ad22e66ced73a6254de77": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4517. Too many INFO messages written out during AM to RM heartbeat (Jason Lowe via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1409032 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/11/12 3:47 PM",
      "commitName": "b2f7a66e50bd09d26b2ad22e66ced73a6254de77",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "31/10/12 7:57 AM",
      "commitNameOld": "aac5c149c7ca500b8eb810b7d4b561ff1e38ea02",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 13.37,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   protected synchronized void heartbeat() throws Exception {\n-    LOG.info(\"Before Scheduling: \" + getStat());\n+    scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n     List\u003cContainer\u003e allocatedContainers \u003d getResources();\n-    LOG.info(\"After Scheduling: \" + getStat());\n     if (allocatedContainers.size() \u003e 0) {\n-      LOG.info(\"Before Assign: \" + getStat());\n       scheduledRequests.assign(allocatedContainers);\n-      LOG.info(\"After Assign: \" + getStat());\n     }\n \n     int completedMaps \u003d getJob().getCompletedMaps();\n     int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n     if (lastCompletedTasks !\u003d completedTasks) {\n       lastCompletedTasks \u003d completedTasks;\n       recalculateReduceSchedule \u003d true;\n     }\n \n     if (recalculateReduceSchedule) {\n       preemptReducesIfNeeded();\n       scheduleReduces(\n           getJob().getTotalMaps(), completedMaps,\n           scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n           assignedRequests.maps.size(), assignedRequests.reduces.size(),\n           mapResourceReqt, reduceResourceReqt,\n           pendingReduces.size(), \n           maxReduceRampupLimit, reduceSlowStart);\n       recalculateReduceSchedule \u003d false;\n     }\n+\n+    scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    scheduleStats.updateAndLogIfChanged(\"Before Scheduling: \");\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    if (allocatedContainers.size() \u003e 0) {\n      scheduledRequests.assign(allocatedContainers);\n    }\n\n    int completedMaps \u003d getJob().getCompletedMaps();\n    int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n    if (lastCompletedTasks !\u003d completedTasks) {\n      lastCompletedTasks \u003d completedTasks;\n      recalculateReduceSchedule \u003d true;\n    }\n\n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces(\n          getJob().getTotalMaps(), completedMaps,\n          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n          mapResourceReqt, reduceResourceReqt,\n          pendingReduces.size(), \n          maxReduceRampupLimit, reduceSlowStart);\n      recalculateReduceSchedule \u003d false;\n    }\n\n    scheduleStats.updateAndLogIfChanged(\"After Scheduling: \");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "e1c5e7dd2b304651eee692442b2e82ada35b164d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4437. Race in MR ApplicationMaster can cause reducers to never be scheduled (Jason Lowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 12:11 PM",
      "commitName": "e1c5e7dd2b304651eee692442b2e82ada35b164d",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "28/06/12 12:28 PM",
      "commitNameOld": "aad2a6f0fc75ee4cce338248f8e35af27dc218ae",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 17.99,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,29 @@\n   protected synchronized void heartbeat() throws Exception {\n     LOG.info(\"Before Scheduling: \" + getStat());\n     List\u003cContainer\u003e allocatedContainers \u003d getResources();\n     LOG.info(\"After Scheduling: \" + getStat());\n     if (allocatedContainers.size() \u003e 0) {\n       LOG.info(\"Before Assign: \" + getStat());\n       scheduledRequests.assign(allocatedContainers);\n       LOG.info(\"After Assign: \" + getStat());\n     }\n-    \n+\n+    int completedMaps \u003d getJob().getCompletedMaps();\n+    int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n+    if (lastCompletedTasks !\u003d completedTasks) {\n+      lastCompletedTasks \u003d completedTasks;\n+      recalculateReduceSchedule \u003d true;\n+    }\n+\n     if (recalculateReduceSchedule) {\n       preemptReducesIfNeeded();\n       scheduleReduces(\n-          getJob().getTotalMaps(), getJob().getCompletedMaps(),\n+          getJob().getTotalMaps(), completedMaps,\n           scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n           assignedRequests.maps.size(), assignedRequests.reduces.size(),\n           mapResourceReqt, reduceResourceReqt,\n           pendingReduces.size(), \n           maxReduceRampupLimit, reduceSlowStart);\n       recalculateReduceSchedule \u003d false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    LOG.info(\"Before Scheduling: \" + getStat());\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    LOG.info(\"After Scheduling: \" + getStat());\n    if (allocatedContainers.size() \u003e 0) {\n      LOG.info(\"Before Assign: \" + getStat());\n      scheduledRequests.assign(allocatedContainers);\n      LOG.info(\"After Assign: \" + getStat());\n    }\n\n    int completedMaps \u003d getJob().getCompletedMaps();\n    int completedTasks \u003d completedMaps + getJob().getCompletedReduces();\n    if (lastCompletedTasks !\u003d completedTasks) {\n      lastCompletedTasks \u003d completedTasks;\n      recalculateReduceSchedule \u003d true;\n    }\n\n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces(\n          getJob().getTotalMaps(), completedMaps,\n          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n          mapResourceReqt, reduceResourceReqt,\n          pendingReduces.size(), \n          maxReduceRampupLimit, reduceSlowStart);\n      recalculateReduceSchedule \u003d false;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "55e94dc5ef4171c4e7b57942f22ead9a01dd9012": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3490. Fixed MapReduce AM to count failed maps also towards Reduce ramp up. Contributed by Sharad Agarwal and Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227226 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/12 9:10 AM",
      "commitName": "55e94dc5ef4171c4e7b57942f22ead9a01dd9012",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "20/12/11 3:27 PM",
      "commitNameOld": "e7543b944c2b35d0a1ca0a92efeca47ad414ac7a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.74,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n   protected synchronized void heartbeat() throws Exception {\n     LOG.info(\"Before Scheduling: \" + getStat());\n     List\u003cContainer\u003e allocatedContainers \u003d getResources();\n     LOG.info(\"After Scheduling: \" + getStat());\n     if (allocatedContainers.size() \u003e 0) {\n       LOG.info(\"Before Assign: \" + getStat());\n       scheduledRequests.assign(allocatedContainers);\n       LOG.info(\"After Assign: \" + getStat());\n     }\n     \n     if (recalculateReduceSchedule) {\n       preemptReducesIfNeeded();\n-      scheduleReduces();\n+      scheduleReduces(\n+          getJob().getTotalMaps(), getJob().getCompletedMaps(),\n+          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n+          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n+          mapResourceReqt, reduceResourceReqt,\n+          pendingReduces.size(), \n+          maxReduceRampupLimit, reduceSlowStart);\n       recalculateReduceSchedule \u003d false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    LOG.info(\"Before Scheduling: \" + getStat());\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    LOG.info(\"After Scheduling: \" + getStat());\n    if (allocatedContainers.size() \u003e 0) {\n      LOG.info(\"Before Assign: \" + getStat());\n      scheduledRequests.assign(allocatedContainers);\n      LOG.info(\"After Assign: \" + getStat());\n    }\n    \n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces(\n          getJob().getTotalMaps(), getJob().getCompletedMaps(),\n          scheduledRequests.maps.size(), scheduledRequests.reduces.size(), \n          assignedRequests.maps.size(), assignedRequests.reduces.size(),\n          mapResourceReqt, reduceResourceReqt,\n          pendingReduces.size(), \n          maxReduceRampupLimit, reduceSlowStart);\n      recalculateReduceSchedule \u003d false;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    LOG.info(\"Before Scheduling: \" + getStat());\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    LOG.info(\"After Scheduling: \" + getStat());\n    if (allocatedContainers.size() \u003e 0) {\n      LOG.info(\"Before Assign: \" + getStat());\n      scheduledRequests.assign(allocatedContainers);\n      LOG.info(\"After Assign: \" + getStat());\n    }\n    \n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces();\n      recalculateReduceSchedule \u003d false;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  protected synchronized void heartbeat() throws Exception {\n+    LOG.info(\"Before Scheduling: \" + getStat());\n+    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n+    LOG.info(\"After Scheduling: \" + getStat());\n+    if (allocatedContainers.size() \u003e 0) {\n+      LOG.info(\"Before Assign: \" + getStat());\n+      scheduledRequests.assign(allocatedContainers);\n+      LOG.info(\"After Assign: \" + getStat());\n+    }\n+    \n+    if (recalculateReduceSchedule) {\n+      preemptReducesIfNeeded();\n+      scheduleReduces();\n+      recalculateReduceSchedule \u003d false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void heartbeat() throws Exception {\n    LOG.info(\"Before Scheduling: \" + getStat());\n    List\u003cContainer\u003e allocatedContainers \u003d getResources();\n    LOG.info(\"After Scheduling: \" + getStat());\n    if (allocatedContainers.size() \u003e 0) {\n      LOG.info(\"Before Assign: \" + getStat());\n      scheduledRequests.assign(allocatedContainers);\n      LOG.info(\"After Assign: \" + getStat());\n    }\n    \n    if (recalculateReduceSchedule) {\n      preemptReducesIfNeeded();\n      scheduleReduces();\n      recalculateReduceSchedule \u003d false;\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
    }
  }
}