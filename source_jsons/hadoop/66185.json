{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMSimulator.java",
  "functionName": "addNewContainer",
  "functionId": "addNewContainer___container-Container__lifeTimeMS-long",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java",
  "functionStartLine": 253,
  "functionEndLine": 270,
  "numCommitsSeen": 9,
  "timeTaken": 1263,
  "changeHistory": [
    "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312",
    "3369540653a41dd0194b65f5ef1d53225fb97ba8",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312": "Ybodychange",
    "3369540653a41dd0194b65f5ef1d53225fb97ba8": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9752. Add support for allocation id in SLS. Contributed by Abhishek Modi\n",
      "commitDate": "21/08/19 8:09 AM",
      "commitName": "3ad1fcfc8bd4a11f0b622eeaa1d9f68110310312",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "31/07/18 9:36 AM",
      "commitNameOld": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 385.94,
      "commitsBetweenForRepo": 3029,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void addNewContainer(Container container, long lifeTimeMS) {\n     LOG.debug(\"NodeManager {} launches a new container ({}).\",\n         node.getNodeID(), container.getId());\n     if (lifeTimeMS !\u003d -1) {\n       // normal container\n       ContainerSimulator cs \u003d new ContainerSimulator(container.getId(),\n               container.getResource(), lifeTimeMS + System.currentTimeMillis(),\n-              lifeTimeMS);\n+              lifeTimeMS, container.getAllocationRequestId());\n       containerQueue.add(cs);\n       runningContainers.put(cs.getId(), cs);\n     } else {\n       // AM container\n       // -1 means AMContainer\n       synchronized(amContainerList) {\n         amContainerList.add(container.getId());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addNewContainer(Container container, long lifeTimeMS) {\n    LOG.debug(\"NodeManager {} launches a new container ({}).\",\n        node.getNodeID(), container.getId());\n    if (lifeTimeMS !\u003d -1) {\n      // normal container\n      ContainerSimulator cs \u003d new ContainerSimulator(container.getId(),\n              container.getResource(), lifeTimeMS + System.currentTimeMillis(),\n              lifeTimeMS, container.getAllocationRequestId());\n      containerQueue.add(cs);\n      runningContainers.put(cs.getId(), cs);\n    } else {\n      // AM container\n      // -1 means AMContainer\n      synchronized(amContainerList) {\n        amContainerList.add(container.getId());\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java",
      "extendedDetails": {}
    },
    "3369540653a41dd0194b65f5ef1d53225fb97ba8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14296. Move logging APIs over to slf4j in hadoop-tools.\n",
      "commitDate": "19/06/17 9:18 PM",
      "commitName": "3369540653a41dd0194b65f5ef1d53225fb97ba8",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "25/07/14 6:29 PM",
      "commitNameOld": "b0c2c856192e71145c012504511fad172436131b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1060.12,
      "commitsBetweenForRepo": 7788,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void addNewContainer(Container container, long lifeTimeMS) {\n-    LOG.debug(MessageFormat.format(\"NodeManager {0} launches a new \" +\n-            \"container ({1}).\", node.getNodeID(), container.getId()));\n+    LOG.debug(\"NodeManager {} launches a new container ({}).\",\n+        node.getNodeID(), container.getId());\n     if (lifeTimeMS !\u003d -1) {\n       // normal container\n       ContainerSimulator cs \u003d new ContainerSimulator(container.getId(),\n               container.getResource(), lifeTimeMS + System.currentTimeMillis(),\n               lifeTimeMS);\n       containerQueue.add(cs);\n       runningContainers.put(cs.getId(), cs);\n     } else {\n       // AM container\n       // -1 means AMContainer\n       synchronized(amContainerList) {\n         amContainerList.add(container.getId());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addNewContainer(Container container, long lifeTimeMS) {\n    LOG.debug(\"NodeManager {} launches a new container ({}).\",\n        node.getNodeID(), container.getId());\n    if (lifeTimeMS !\u003d -1) {\n      // normal container\n      ContainerSimulator cs \u003d new ContainerSimulator(container.getId(),\n              container.getResource(), lifeTimeMS + System.currentTimeMillis(),\n              lifeTimeMS);\n      containerQueue.add(cs);\n      runningContainers.put(cs.getId(), cs);\n    } else {\n      // AM container\n      // -1 means AMContainer\n      synchronized(amContainerList) {\n        amContainerList.add(container.getId());\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,18 @@\n+  public void addNewContainer(Container container, long lifeTimeMS) {\n+    LOG.debug(MessageFormat.format(\"NodeManager {0} launches a new \" +\n+            \"container ({1}).\", node.getNodeID(), container.getId()));\n+    if (lifeTimeMS !\u003d -1) {\n+      // normal container\n+      ContainerSimulator cs \u003d new ContainerSimulator(container.getId(),\n+              container.getResource(), lifeTimeMS + System.currentTimeMillis(),\n+              lifeTimeMS);\n+      containerQueue.add(cs);\n+      runningContainers.put(cs.getId(), cs);\n+    } else {\n+      // AM container\n+      // -1 means AMContainer\n+      synchronized(amContainerList) {\n+        amContainerList.add(container.getId());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addNewContainer(Container container, long lifeTimeMS) {\n    LOG.debug(MessageFormat.format(\"NodeManager {0} launches a new \" +\n            \"container ({1}).\", node.getNodeID(), container.getId()));\n    if (lifeTimeMS !\u003d -1) {\n      // normal container\n      ContainerSimulator cs \u003d new ContainerSimulator(container.getId(),\n              container.getResource(), lifeTimeMS + System.currentTimeMillis(),\n              lifeTimeMS);\n      containerQueue.add(cs);\n      runningContainers.put(cs.getId(), cs);\n    } else {\n      // AM container\n      // -1 means AMContainer\n      synchronized(amContainerList) {\n        amContainerList.add(container.getId());\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NMSimulator.java"
    }
  }
}