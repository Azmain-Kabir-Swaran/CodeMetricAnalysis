{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReservationQueue.java",
  "functionName": "reinitialize",
  "functionId": "reinitialize___newlyParsedQueue-CSQueue__clusterResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
  "functionStartLine": 54,
  "functionEndLine": 76,
  "numCommitsSeen": 11,
  "timeTaken": 2293,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "08/12/17 3:10 PM",
      "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 453.94,
      "commitsBetweenForRepo": 3961,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       // Sanity check\n       if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n           .getQueuePath().equals(getQueuePath())) {\n         throw new IOException(\n             \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                 + newlyParsedQueue.getQueuePath());\n       }\n       super.reinitialize(newlyParsedQueue, clusterResource);\n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n           this, labelManager, null);\n \n       updateQuotas(parent.getUserLimitForReservation(),\n           parent.getUserLimitFactor(),\n           parent.getMaxApplicationsForReservations(),\n           parent.getMaxApplicationsPerUserForReservation());\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    writeLock.lock();\n    try {\n      // Sanity check\n      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n\n      updateQuotas(parent.getUserLimitForReservation(),\n          parent.getUserLimitFactor(),\n          parent.getMaxApplicationsForReservations(),\n          parent.getMaxApplicationsPerUserForReservation());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
      "extendedDetails": {}
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,23 @@\n+  public void reinitialize(CSQueue newlyParsedQueue,\n+      Resource clusterResource) throws IOException {\n+    try {\n+      writeLock.lock();\n+      // Sanity check\n+      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n+          .getQueuePath().equals(getQueuePath())) {\n+        throw new IOException(\n+            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n+                + newlyParsedQueue.getQueuePath());\n+      }\n+      super.reinitialize(newlyParsedQueue, clusterResource);\n+      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n+          this, labelManager, null);\n+\n+      updateQuotas(parent.getUserLimitForReservation(),\n+          parent.getUserLimitFactor(),\n+          parent.getMaxApplicationsForReservations(),\n+          parent.getMaxApplicationsPerUserForReservation());\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n\n      updateQuotas(parent.getUserLimitForReservation(),\n          parent.getUserLimitFactor(),\n          parent.getMaxApplicationsForReservations(),\n          parent.getMaxApplicationsPerUserForReservation());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java"
    }
  }
}