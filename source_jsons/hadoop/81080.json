{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "appendJSONProperty",
  "functionId": "appendJSONProperty___jsonGen-JsonGenerator__config-Configuration__name-String__redactor-ConfigRedactor",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 3750,
  "functionEndLine": 3770,
  "numCommitsSeen": 233,
  "timeTaken": 3762,
  "changeHistory": [
    "e163f41850bd09a17d3102a3af0af2e3cd831ab0",
    "582648befaf9908159f937d2cc8f549583a3483e",
    "00160f71b6d98244fcb1cb58b2db9fc24f1cd672"
  ],
  "changeHistoryShort": {
    "e163f41850bd09a17d3102a3af0af2e3cd831ab0": "Ybodychange",
    "582648befaf9908159f937d2cc8f549583a3483e": "Ymultichange(Yparameterchange,Ybodychange)",
    "00160f71b6d98244fcb1cb58b2db9fc24f1cd672": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e163f41850bd09a17d3102a3af0af2e3cd831ab0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14938. Configuration.updatingResource map should be initialized lazily (misha@cloudera.com via rkanter)\n",
      "commitDate": "13/10/17 1:52 PM",
      "commitName": "e163f41850bd09a17d3102a3af0af2e3cd831ab0",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "11/10/17 3:21 PM",
      "commitNameOld": "b6c2c9058e83116dcca46cd6934db3428f931347",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 1.94,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private static void appendJSONProperty(JsonGenerator jsonGen,\n       Configuration config, String name, ConfigRedactor redactor)\n       throws IOException {\n     // skip writing if given property name is empty or null\n     if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n       jsonGen.writeStartObject();\n       jsonGen.writeStringField(\"key\", name);\n       jsonGen.writeStringField(\"value\",\n           redactor.redact(name, config.get(name)));\n       jsonGen.writeBooleanField(\"isFinal\",\n           config.finalParameters.contains(name));\n-      String[] resources \u003d config.updatingResource.get(name);\n+      String[] resources \u003d config.updatingResource !\u003d null ?\n+          config.updatingResource.get(name) : null;\n       String resource \u003d UNKNOWN_RESOURCE;\n-      if(resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n+      if (resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n         resource \u003d resources[0];\n       }\n       jsonGen.writeStringField(\"resource\", resource);\n       jsonGen.writeEndObject();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void appendJSONProperty(JsonGenerator jsonGen,\n      Configuration config, String name, ConfigRedactor redactor)\n      throws IOException {\n    // skip writing if given property name is empty or null\n    if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n      jsonGen.writeStartObject();\n      jsonGen.writeStringField(\"key\", name);\n      jsonGen.writeStringField(\"value\",\n          redactor.redact(name, config.get(name)));\n      jsonGen.writeBooleanField(\"isFinal\",\n          config.finalParameters.contains(name));\n      String[] resources \u003d config.updatingResource !\u003d null ?\n          config.updatingResource.get(name) : null;\n      String resource \u003d UNKNOWN_RESOURCE;\n      if (resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n        resource \u003d resources[0];\n      }\n      jsonGen.writeStringField(\"resource\", resource);\n      jsonGen.writeEndObject();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "582648befaf9908159f937d2cc8f549583a3483e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14260. Configuration.dumpConfiguration should redact sensitive information. Contributed by John Zhuge.\n",
      "commitDate": "11/08/17 10:16 AM",
      "commitName": "582648befaf9908159f937d2cc8f549583a3483e",
      "commitAuthor": "John Zhuge",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14260. Configuration.dumpConfiguration should redact sensitive information. Contributed by John Zhuge.\n",
          "commitDate": "11/08/17 10:16 AM",
          "commitName": "582648befaf9908159f937d2cc8f549583a3483e",
          "commitAuthor": "John Zhuge",
          "commitDateOld": "07/08/17 10:25 AM",
          "commitNameOld": "a3a9c976c3cfa3ab6b0936eb8cf0889891bd0678",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 3.99,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   private static void appendJSONProperty(JsonGenerator jsonGen,\n-      Configuration config, String name) throws IOException {\n+      Configuration config, String name, ConfigRedactor redactor)\n+      throws IOException {\n     // skip writing if given property name is empty or null\n     if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n       jsonGen.writeStartObject();\n       jsonGen.writeStringField(\"key\", name);\n-      jsonGen.writeStringField(\"value\", config.get(name));\n+      jsonGen.writeStringField(\"value\",\n+          redactor.redact(name, config.get(name)));\n       jsonGen.writeBooleanField(\"isFinal\",\n           config.finalParameters.contains(name));\n       String[] resources \u003d config.updatingResource.get(name);\n       String resource \u003d UNKNOWN_RESOURCE;\n       if(resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n         resource \u003d resources[0];\n       }\n       jsonGen.writeStringField(\"resource\", resource);\n       jsonGen.writeEndObject();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void appendJSONProperty(JsonGenerator jsonGen,\n      Configuration config, String name, ConfigRedactor redactor)\n      throws IOException {\n    // skip writing if given property name is empty or null\n    if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n      jsonGen.writeStartObject();\n      jsonGen.writeStringField(\"key\", name);\n      jsonGen.writeStringField(\"value\",\n          redactor.redact(name, config.get(name)));\n      jsonGen.writeBooleanField(\"isFinal\",\n          config.finalParameters.contains(name));\n      String[] resources \u003d config.updatingResource.get(name);\n      String resource \u003d UNKNOWN_RESOURCE;\n      if(resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n        resource \u003d resources[0];\n      }\n      jsonGen.writeStringField(\"resource\", resource);\n      jsonGen.writeEndObject();\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "[jsonGen-JsonGenerator, config-Configuration, name-String]",
            "newValue": "[jsonGen-JsonGenerator, config-Configuration, name-String, redactor-ConfigRedactor]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14260. Configuration.dumpConfiguration should redact sensitive information. Contributed by John Zhuge.\n",
          "commitDate": "11/08/17 10:16 AM",
          "commitName": "582648befaf9908159f937d2cc8f549583a3483e",
          "commitAuthor": "John Zhuge",
          "commitDateOld": "07/08/17 10:25 AM",
          "commitNameOld": "a3a9c976c3cfa3ab6b0936eb8cf0889891bd0678",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 3.99,
          "commitsBetweenForRepo": 35,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   private static void appendJSONProperty(JsonGenerator jsonGen,\n-      Configuration config, String name) throws IOException {\n+      Configuration config, String name, ConfigRedactor redactor)\n+      throws IOException {\n     // skip writing if given property name is empty or null\n     if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n       jsonGen.writeStartObject();\n       jsonGen.writeStringField(\"key\", name);\n-      jsonGen.writeStringField(\"value\", config.get(name));\n+      jsonGen.writeStringField(\"value\",\n+          redactor.redact(name, config.get(name)));\n       jsonGen.writeBooleanField(\"isFinal\",\n           config.finalParameters.contains(name));\n       String[] resources \u003d config.updatingResource.get(name);\n       String resource \u003d UNKNOWN_RESOURCE;\n       if(resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n         resource \u003d resources[0];\n       }\n       jsonGen.writeStringField(\"resource\", resource);\n       jsonGen.writeEndObject();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void appendJSONProperty(JsonGenerator jsonGen,\n      Configuration config, String name, ConfigRedactor redactor)\n      throws IOException {\n    // skip writing if given property name is empty or null\n    if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n      jsonGen.writeStartObject();\n      jsonGen.writeStringField(\"key\", name);\n      jsonGen.writeStringField(\"value\",\n          redactor.redact(name, config.get(name)));\n      jsonGen.writeBooleanField(\"isFinal\",\n          config.finalParameters.contains(name));\n      String[] resources \u003d config.updatingResource.get(name);\n      String resource \u003d UNKNOWN_RESOURCE;\n      if(resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n        resource \u003d resources[0];\n      }\n      jsonGen.writeStringField(\"resource\", resource);\n      jsonGen.writeEndObject();\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {}
        }
      ]
    },
    "00160f71b6d98244fcb1cb58b2db9fc24f1cd672": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13628. Support to retrieve specific property from configuration via REST API. Contributed by Weiwei Yang\n",
      "commitDate": "05/10/16 1:50 PM",
      "commitName": "00160f71b6d98244fcb1cb58b2db9fc24f1cd672",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,18 @@\n+  private static void appendJSONProperty(JsonGenerator jsonGen,\n+      Configuration config, String name) throws IOException {\n+    // skip writing if given property name is empty or null\n+    if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n+      jsonGen.writeStartObject();\n+      jsonGen.writeStringField(\"key\", name);\n+      jsonGen.writeStringField(\"value\", config.get(name));\n+      jsonGen.writeBooleanField(\"isFinal\",\n+          config.finalParameters.contains(name));\n+      String[] resources \u003d config.updatingResource.get(name);\n+      String resource \u003d UNKNOWN_RESOURCE;\n+      if(resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n+        resource \u003d resources[0];\n+      }\n+      jsonGen.writeStringField(\"resource\", resource);\n+      jsonGen.writeEndObject();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void appendJSONProperty(JsonGenerator jsonGen,\n      Configuration config, String name) throws IOException {\n    // skip writing if given property name is empty or null\n    if(!Strings.isNullOrEmpty(name) \u0026\u0026 jsonGen !\u003d null) {\n      jsonGen.writeStartObject();\n      jsonGen.writeStringField(\"key\", name);\n      jsonGen.writeStringField(\"value\", config.get(name));\n      jsonGen.writeBooleanField(\"isFinal\",\n          config.finalParameters.contains(name));\n      String[] resources \u003d config.updatingResource.get(name);\n      String resource \u003d UNKNOWN_RESOURCE;\n      if(resources !\u003d null \u0026\u0026 resources.length \u003e 0) {\n        resource \u003d resources[0];\n      }\n      jsonGen.writeStringField(\"resource\", resource);\n      jsonGen.writeEndObject();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}