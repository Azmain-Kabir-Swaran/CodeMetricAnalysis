{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecondaryNameNode.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
  "functionStartLine": 324,
  "functionEndLine": 327,
  "numCommitsSeen": 98,
  "timeTaken": 6711,
  "changeHistory": [
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
    "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
    "8aea748ec37b8e66c222f704eacedb47d9c73cfd",
    "de8b34a70e7ed4aef4675dbbef90df9f596efa12",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f": "Ybodychange",
    "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db": "Ybodychange",
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b": "Ybodychange",
    "8aea748ec37b8e66c222f704eacedb47d9c73cfd": "Ybodychange",
    "de8b34a70e7ed4aef4675dbbef90df9f596efa12": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab3c4cff4af338caaa23be0ec383fc1fe473714f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8808. dfs.image.transfer.bandwidthPerSec should not apply to -bootstrapStandby. Contributed by Zhe Zhang.\n",
      "commitDate": "23/10/15 2:01 PM",
      "commitName": "ab3c4cff4af338caaa23be0ec383fc1fe473714f",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "20/10/15 1:44 PM",
      "commitNameOld": "6c8b6f3646b31a3e028704bc7fd78bf319f89f0a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.01,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n           public Boolean run() throws Exception {\n             dstImage.getStorage().cTime \u003d sig.cTime;\n \n             // get fsimage\n             if (sig.mostRecentCheckpointTxId \u003d\u003d\n                 dstImage.getStorage().getMostRecentCheckpointTxId()) {\n               LOG.info(\"Image has not changed. Will not download image.\");\n             } else {\n               LOG.info(\"Image has changed. Downloading updated image from NN.\");\n               MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                   nnHostPort, sig.mostRecentCheckpointTxId,\n-                  dstImage.getStorage(), true);\n+                  dstImage.getStorage(), true, false);\n               dstImage.saveDigestAndRenameCheckpointImage(NameNodeFile.IMAGE,\n                   sig.mostRecentCheckpointTxId, downloadedHash);\n             }\n         \n             // get edits file\n             for (RemoteEditLog log : manifest.getLogs()) {\n               TransferFsImage.downloadEditsToStorage(\n                   nnHostPort, log, dstImage.getStorage());\n             }\n         \n             // true if we haven\u0027t loaded all the transactions represented by the\n             // downloaded fsimage.\n             return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n           }\n\\ No newline at end of file\n",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              LOG.info(\"Image has changed. Downloading updated image from NN.\");\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, sig.mostRecentCheckpointTxId,\n                  dstImage.getStorage(), true, false);\n              dstImage.saveDigestAndRenameCheckpointImage(NameNodeFile.IMAGE,\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            // true if we haven\u0027t loaded all the transactions represented by the\n            // downloaded fsimage.\n            return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n          }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6029. Secondary NN fails to checkpoint after -rollingUpgrade prepare. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1572800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/14 5:21 PM",
      "commitName": "e9a17c8ce0656a4e5d47401ca22a575c5f5f66db",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "25/02/14 1:58 PM",
      "commitNameOld": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.14,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n           public Boolean run() throws Exception {\n             dstImage.getStorage().cTime \u003d sig.cTime;\n \n             // get fsimage\n             if (sig.mostRecentCheckpointTxId \u003d\u003d\n                 dstImage.getStorage().getMostRecentCheckpointTxId()) {\n               LOG.info(\"Image has not changed. Will not download image.\");\n             } else {\n               LOG.info(\"Image has changed. Downloading updated image from NN.\");\n               MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n-                  nnHostPort, NameNodeFile.IMAGE, sig.mostRecentCheckpointTxId,\n+                  nnHostPort, sig.mostRecentCheckpointTxId,\n                   dstImage.getStorage(), true);\n               dstImage.saveDigestAndRenameCheckpointImage(NameNodeFile.IMAGE,\n                   sig.mostRecentCheckpointTxId, downloadedHash);\n             }\n         \n             // get edits file\n             for (RemoteEditLog log : manifest.getLogs()) {\n               TransferFsImage.downloadEditsToStorage(\n                   nnHostPort, log, dstImage.getStorage());\n             }\n         \n             // true if we haven\u0027t loaded all the transactions represented by the\n             // downloaded fsimage.\n             return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n           }\n\\ No newline at end of file\n",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              LOG.info(\"Image has changed. Downloading updated image from NN.\");\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, sig.mostRecentCheckpointTxId,\n                  dstImage.getStorage(), true);\n              dstImage.saveDigestAndRenameCheckpointImage(NameNodeFile.IMAGE,\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            // true if we haven\u0027t loaded all the transactions represented by the\n            // downloaded fsimage.\n            return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n          }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "e3d2e4c156851de7dac16154521a2e06ea83ec7b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6000. Avoid saving namespace when starting rolling upgrade. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571840 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/14 1:58 PM",
      "commitName": "e3d2e4c156851de7dac16154521a2e06ea83ec7b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "30/01/14 7:24 PM",
      "commitNameOld": "f2972402b78b75874599666482332fa5f51351fa",
      "commitAuthorOld": "",
      "daysBetweenCommits": 25.77,
      "commitsBetweenForRepo": 241,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n           public Boolean run() throws Exception {\n             dstImage.getStorage().cTime \u003d sig.cTime;\n \n             // get fsimage\n             if (sig.mostRecentCheckpointTxId \u003d\u003d\n                 dstImage.getStorage().getMostRecentCheckpointTxId()) {\n               LOG.info(\"Image has not changed. Will not download image.\");\n             } else {\n               LOG.info(\"Image has changed. Downloading updated image from NN.\");\n               MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n-                  nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n-              dstImage.saveDigestAndRenameCheckpointImage(\n+                  nnHostPort, NameNodeFile.IMAGE, sig.mostRecentCheckpointTxId,\n+                  dstImage.getStorage(), true);\n+              dstImage.saveDigestAndRenameCheckpointImage(NameNodeFile.IMAGE,\n                   sig.mostRecentCheckpointTxId, downloadedHash);\n             }\n         \n             // get edits file\n             for (RemoteEditLog log : manifest.getLogs()) {\n               TransferFsImage.downloadEditsToStorage(\n                   nnHostPort, log, dstImage.getStorage());\n             }\n         \n             // true if we haven\u0027t loaded all the transactions represented by the\n             // downloaded fsimage.\n             return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n           }\n\\ No newline at end of file\n",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              LOG.info(\"Image has changed. Downloading updated image from NN.\");\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, NameNodeFile.IMAGE, sig.mostRecentCheckpointTxId,\n                  dstImage.getStorage(), true);\n              dstImage.saveDigestAndRenameCheckpointImage(NameNodeFile.IMAGE,\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            // true if we haven\u0027t loaded all the transactions represented by the\n            // downloaded fsimage.\n            return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n          }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "8aea748ec37b8e66c222f704eacedb47d9c73cfd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5159. Secondary NameNode fails to checkpoint if error occurs downloading edits on first checkpoint. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1520363 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/13 9:21 AM",
      "commitName": "8aea748ec37b8e66c222f704eacedb47d9c73cfd",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "21/08/13 3:12 AM",
      "commitNameOld": "782191f1ba27e0ff0acf3c6cf8a88df00274d308",
      "commitAuthorOld": "Luke Lu",
      "daysBetweenCommits": 15.26,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n           public Boolean run() throws Exception {\n             dstImage.getStorage().cTime \u003d sig.cTime;\n \n             // get fsimage\n-            boolean downloadImage \u003d true;\n             if (sig.mostRecentCheckpointTxId \u003d\u003d\n                 dstImage.getStorage().getMostRecentCheckpointTxId()) {\n-              downloadImage \u003d false;\n               LOG.info(\"Image has not changed. Will not download image.\");\n             } else {\n               LOG.info(\"Image has changed. Downloading updated image from NN.\");\n               MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                   nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n               dstImage.saveDigestAndRenameCheckpointImage(\n                   sig.mostRecentCheckpointTxId, downloadedHash);\n             }\n         \n             // get edits file\n             for (RemoteEditLog log : manifest.getLogs()) {\n               TransferFsImage.downloadEditsToStorage(\n                   nnHostPort, log, dstImage.getStorage());\n             }\n         \n-            return Boolean.valueOf(downloadImage);\n+            // true if we haven\u0027t loaded all the transactions represented by the\n+            // downloaded fsimage.\n+            return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n           }\n\\ No newline at end of file\n",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              LOG.info(\"Image has changed. Downloading updated image from NN.\");\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n              dstImage.saveDigestAndRenameCheckpointImage(\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            // true if we haven\u0027t loaded all the transactions represented by the\n            // downloaded fsimage.\n            return dstImage.getLastAppliedTxId() \u003c sig.mostRecentCheckpointTxId;\n          }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "de8b34a70e7ed4aef4675dbbef90df9f596efa12": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3835. Long-lived 2NN cannot perform a checkpoint if security is enabled and the NN restarts with outstanding delegation tokens. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1376188 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/08/12 11:47 AM",
      "commitName": "de8b34a70e7ed4aef4675dbbef90df9f596efa12",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "14/08/12 5:28 PM",
      "commitNameOld": "28e87740c5797e87a9038d7f151c8b21a5b04592",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 7.76,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n           public Boolean run() throws Exception {\n             dstImage.getStorage().cTime \u003d sig.cTime;\n \n             // get fsimage\n             boolean downloadImage \u003d true;\n             if (sig.mostRecentCheckpointTxId \u003d\u003d\n                 dstImage.getStorage().getMostRecentCheckpointTxId()) {\n               downloadImage \u003d false;\n               LOG.info(\"Image has not changed. Will not download image.\");\n             } else {\n+              LOG.info(\"Image has changed. Downloading updated image from NN.\");\n               MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                   nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n               dstImage.saveDigestAndRenameCheckpointImage(\n                   sig.mostRecentCheckpointTxId, downloadedHash);\n             }\n         \n             // get edits file\n             for (RemoteEditLog log : manifest.getLogs()) {\n               TransferFsImage.downloadEditsToStorage(\n                   nnHostPort, log, dstImage.getStorage());\n             }\n         \n             return Boolean.valueOf(downloadImage);\n           }\n\\ No newline at end of file\n",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            boolean downloadImage \u003d true;\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              downloadImage \u003d false;\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              LOG.info(\"Image has changed. Downloading updated image from NN.\");\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n              dstImage.saveDigestAndRenameCheckpointImage(\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            return Boolean.valueOf(downloadImage);\n          }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            boolean downloadImage \u003d true;\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              downloadImage \u003d false;\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n              dstImage.saveDigestAndRenameCheckpointImage(\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            return Boolean.valueOf(downloadImage);\n          }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            boolean downloadImage \u003d true;\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              downloadImage \u003d false;\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n              dstImage.saveDigestAndRenameCheckpointImage(\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            return Boolean.valueOf(downloadImage);\n          }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "27/07/11 8:19 PM",
      "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 1.55,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,24 @@\n           public Boolean run() throws Exception {\n-            checkpointImage.getStorage().cTime \u003d sig.cTime;\n-            checkpointImage.getStorage().setCheckpointTime(sig.checkpointTime);\n+            dstImage.getStorage().cTime \u003d sig.cTime;\n \n             // get fsimage\n-            String fileid;\n-            Collection\u003cFile\u003e list;\n-            File[] srcNames;\n             boolean downloadImage \u003d true;\n-            if (sig.imageDigest.equals(\n-                    checkpointImage.getStorage().imageDigest)) {\n+            if (sig.mostRecentCheckpointTxId \u003d\u003d\n+                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n               downloadImage \u003d false;\n               LOG.info(\"Image has not changed. Will not download image.\");\n             } else {\n-              fileid \u003d \"getimage\u003d1\";\n-              list \u003d checkpointImage.getStorage().getFiles(\n-                  NameNodeFile.IMAGE, NameNodeDirType.IMAGE);\n-              srcNames \u003d list.toArray(new File[list.size()]);\n-              assert srcNames.length \u003e 0 : \"No checkpoint targets.\";\n-              TransferFsImage.getFileClient(fsName, fileid, srcNames, false);\n-              checkpointImage.getStorage().imageDigest \u003d sig.imageDigest;\n-              LOG.info(\"Downloaded file \" + srcNames[0].getName() + \" size \" +\n-                  srcNames[0].length() + \" bytes.\");\n+              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n+                  nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n+              dstImage.saveDigestAndRenameCheckpointImage(\n+                  sig.mostRecentCheckpointTxId, downloadedHash);\n             }\n         \n             // get edits file\n-            fileid \u003d \"getedit\u003d1\";\n-            list \u003d getFSImage().getStorage().getFiles(\n-                NameNodeFile.EDITS, NameNodeDirType.EDITS);\n-            srcNames \u003d list.toArray(new File[list.size()]);;\n-            assert srcNames.length \u003e 0 : \"No checkpoint targets.\";\n-            TransferFsImage.getFileClient(fsName, fileid, srcNames, false);\n-            LOG.info(\"Downloaded file \" + srcNames[0].getName() + \" size \" +\n-                srcNames[0].length() + \" bytes.\");\n+            for (RemoteEditLog log : manifest.getLogs()) {\n+              TransferFsImage.downloadEditsToStorage(\n+                  nnHostPort, log, dstImage.getStorage());\n+            }\n         \n-            checkpointImage.checkpointUploadDone();\n             return Boolean.valueOf(downloadImage);\n           }\n\\ No newline at end of file\n",
      "actualSource": "          public Boolean run() throws Exception {\n            dstImage.getStorage().cTime \u003d sig.cTime;\n\n            // get fsimage\n            boolean downloadImage \u003d true;\n            if (sig.mostRecentCheckpointTxId \u003d\u003d\n                dstImage.getStorage().getMostRecentCheckpointTxId()) {\n              downloadImage \u003d false;\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              MD5Hash downloadedHash \u003d TransferFsImage.downloadImageToStorage(\n                  nnHostPort, sig.mostRecentCheckpointTxId, dstImage.getStorage(), true);\n              dstImage.saveDigestAndRenameCheckpointImage(\n                  sig.mostRecentCheckpointTxId, downloadedHash);\n            }\n        \n            // get edits file\n            for (RemoteEditLog log : manifest.getLogs()) {\n              TransferFsImage.downloadEditsToStorage(\n                  nnHostPort, log, dstImage.getStorage());\n            }\n        \n            return Boolean.valueOf(downloadImage);\n          }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,38 @@\n+          public Boolean run() throws Exception {\n+            checkpointImage.getStorage().cTime \u003d sig.cTime;\n+            checkpointImage.getStorage().setCheckpointTime(sig.checkpointTime);\n+\n+            // get fsimage\n+            String fileid;\n+            Collection\u003cFile\u003e list;\n+            File[] srcNames;\n+            boolean downloadImage \u003d true;\n+            if (sig.imageDigest.equals(\n+                    checkpointImage.getStorage().imageDigest)) {\n+              downloadImage \u003d false;\n+              LOG.info(\"Image has not changed. Will not download image.\");\n+            } else {\n+              fileid \u003d \"getimage\u003d1\";\n+              list \u003d checkpointImage.getStorage().getFiles(\n+                  NameNodeFile.IMAGE, NameNodeDirType.IMAGE);\n+              srcNames \u003d list.toArray(new File[list.size()]);\n+              assert srcNames.length \u003e 0 : \"No checkpoint targets.\";\n+              TransferFsImage.getFileClient(fsName, fileid, srcNames, false);\n+              checkpointImage.getStorage().imageDigest \u003d sig.imageDigest;\n+              LOG.info(\"Downloaded file \" + srcNames[0].getName() + \" size \" +\n+                  srcNames[0].length() + \" bytes.\");\n+            }\n+        \n+            // get edits file\n+            fileid \u003d \"getedit\u003d1\";\n+            list \u003d getFSImage().getStorage().getFiles(\n+                NameNodeFile.EDITS, NameNodeDirType.EDITS);\n+            srcNames \u003d list.toArray(new File[list.size()]);;\n+            assert srcNames.length \u003e 0 : \"No checkpoint targets.\";\n+            TransferFsImage.getFileClient(fsName, fileid, srcNames, false);\n+            LOG.info(\"Downloaded file \" + srcNames[0].getName() + \" size \" +\n+                srcNames[0].length() + \" bytes.\");\n+        \n+            checkpointImage.checkpointUploadDone();\n+            return Boolean.valueOf(downloadImage);\n+          }\n\\ No newline at end of file\n",
      "actualSource": "          public Boolean run() throws Exception {\n            checkpointImage.getStorage().cTime \u003d sig.cTime;\n            checkpointImage.getStorage().setCheckpointTime(sig.checkpointTime);\n\n            // get fsimage\n            String fileid;\n            Collection\u003cFile\u003e list;\n            File[] srcNames;\n            boolean downloadImage \u003d true;\n            if (sig.imageDigest.equals(\n                    checkpointImage.getStorage().imageDigest)) {\n              downloadImage \u003d false;\n              LOG.info(\"Image has not changed. Will not download image.\");\n            } else {\n              fileid \u003d \"getimage\u003d1\";\n              list \u003d checkpointImage.getStorage().getFiles(\n                  NameNodeFile.IMAGE, NameNodeDirType.IMAGE);\n              srcNames \u003d list.toArray(new File[list.size()]);\n              assert srcNames.length \u003e 0 : \"No checkpoint targets.\";\n              TransferFsImage.getFileClient(fsName, fileid, srcNames, false);\n              checkpointImage.getStorage().imageDigest \u003d sig.imageDigest;\n              LOG.info(\"Downloaded file \" + srcNames[0].getName() + \" size \" +\n                  srcNames[0].length() + \" bytes.\");\n            }\n        \n            // get edits file\n            fileid \u003d \"getedit\u003d1\";\n            list \u003d getFSImage().getStorage().getFiles(\n                NameNodeFile.EDITS, NameNodeDirType.EDITS);\n            srcNames \u003d list.toArray(new File[list.size()]);;\n            assert srcNames.length \u003e 0 : \"No checkpoint targets.\";\n            TransferFsImage.getFileClient(fsName, fileid, srcNames, false);\n            LOG.info(\"Downloaded file \" + srcNames[0].getName() + \" size \" +\n                srcNames[0].length() + \" bytes.\");\n        \n            checkpointImage.checkpointUploadDone();\n            return Boolean.valueOf(downloadImage);\n          }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java"
    }
  }
}