{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMTokenSecretManager.java",
  "functionName": "createAndGetAMRMToken",
  "functionId": "createAndGetAMRMToken___appAttemptId-ApplicationAttemptId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java",
  "functionStartLine": 191,
  "functionEndLine": 206,
  "numCommitsSeen": 9,
  "timeTaken": 1780,
  "changeHistory": [
    "f1b831ccfbec37712522bef7a44f51bff0369003"
  ],
  "changeHistoryShort": {
    "f1b831ccfbec37712522bef7a44f51bff0369003": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f1b831ccfbec37712522bef7a44f51bff0369003": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2208. AMRMTokenManager need to have a way to roll over AMRMToken. Contributed by Xuan Gong\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611820 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/14 2:46 PM",
      "commitName": "f1b831ccfbec37712522bef7a44f51bff0369003",
      "commitAuthor": "Xuan Gong",
      "diff": "@@ -0,0 +1,16 @@\n+  public Token\u003cAMRMTokenIdentifier\u003e createAndGetAMRMToken(\n+      ApplicationAttemptId appAttemptId) {\n+    this.writeLock.lock();\n+    try {\n+      LOG.info(\"Create AMRMToken for ApplicationAttempt: \" + appAttemptId);\n+      AMRMTokenIdentifier identifier \u003d\n+          new AMRMTokenIdentifier(appAttemptId, getMasterKey().getMasterKey()\n+            .getKeyId());\n+      byte[] password \u003d this.createPassword(identifier);\n+      appAttemptSet.add(appAttemptId);\n+      return new Token\u003cAMRMTokenIdentifier\u003e(identifier.getBytes(), password,\n+        identifier.getKind(), new Text());\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cAMRMTokenIdentifier\u003e createAndGetAMRMToken(\n      ApplicationAttemptId appAttemptId) {\n    this.writeLock.lock();\n    try {\n      LOG.info(\"Create AMRMToken for ApplicationAttempt: \" + appAttemptId);\n      AMRMTokenIdentifier identifier \u003d\n          new AMRMTokenIdentifier(appAttemptId, getMasterKey().getMasterKey()\n            .getKeyId());\n      byte[] password \u003d this.createPassword(identifier);\n      appAttemptSet.add(appAttemptId);\n      return new Token\u003cAMRMTokenIdentifier\u003e(identifier.getBytes(), password,\n        identifier.getKind(), new Text());\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java"
    }
  }
}