{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Component.java",
  "functionName": "assignContainerToCompInstance",
  "functionId": "assignContainerToCompInstance___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
  "functionStartLine": 683,
  "functionEndLine": 717,
  "numCommitsSeen": 36,
  "timeTaken": 3747,
  "changeHistory": [
    "a33ef4fd311784dc15401eb54c82e78528c4f961",
    "913f87dada27776c539dfb352400ecf8d40e7943",
    "4a7369b09547a78f532af66c763c6994a38b5d68",
    "b8a7ef1b64392094562e7782e0fd092934724ad2",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "a33ef4fd311784dc15401eb54c82e78528c4f961": "Ybodychange",
    "913f87dada27776c539dfb352400ecf8d40e7943": "Ybodychange",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Ybodychange",
    "b8a7ef1b64392094562e7782e0fd092934724ad2": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a33ef4fd311784dc15401eb54c82e78528c4f961": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8867. Added resource localization status to YARN service status call.\n           Contributed by Chandni Singh\n",
      "commitDate": "24/01/19 3:43 PM",
      "commitName": "a33ef4fd311784dc15401eb54c82e78528c4f961",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/01/19 10:40 PM",
      "commitNameOld": "f4906ac01960c78ff0c91797eaa4b36d80f6826d",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 20.71,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n   private void assignContainerToCompInstance(Container container) {\n     if (pendingInstances.size() \u003d\u003d 0) {\n       LOG.info(\n           \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n           getName(), container.getId());\n       releaseContainer(container);\n       return;\n     }\n     ComponentInstance instance \u003d pendingInstances.remove(0);\n     LOG.info(\n         \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n         getName(), container.getId(), pendingInstances.size());\n     instance.setContainer(container);\n     scheduler.addLiveCompInstance(container.getId(), instance);\n     LOG.info(\n         \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n         getName(), container.getId(), instance.getCompInstanceName(),\n         container.getNodeId());\n+    Future\u003cProviderService.ResolvedLaunchParams\u003e resolvedParamFuture;\n     if (!(upgradeStatus.isCompleted() \u0026\u0026 cancelUpgradeStatus.isCompleted())) {\n       UpgradeStatus status \u003d !cancelUpgradeStatus.isCompleted() ?\n           cancelUpgradeStatus : upgradeStatus;\n \n-      scheduler.getContainerLaunchService()\n+      resolvedParamFuture \u003d scheduler.getContainerLaunchService()\n           .launchCompInstance(scheduler.getApp(), instance, container,\n               createLaunchContext(status.getTargetSpec(),\n                   status.getTargetVersion()));\n     } else {\n-      scheduler.getContainerLaunchService().launchCompInstance(\n+      resolvedParamFuture \u003d scheduler.getContainerLaunchService()\n+          .launchCompInstance(\n           scheduler.getApp(), instance, container,\n           createLaunchContext(componentSpec, scheduler.getApp().getVersion()));\n     }\n+    instance.updateResolvedLaunchParams(resolvedParamFuture);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void assignContainerToCompInstance(Container container) {\n    if (pendingInstances.size() \u003d\u003d 0) {\n      LOG.info(\n          \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n          getName(), container.getId());\n      releaseContainer(container);\n      return;\n    }\n    ComponentInstance instance \u003d pendingInstances.remove(0);\n    LOG.info(\n        \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n        getName(), container.getId(), pendingInstances.size());\n    instance.setContainer(container);\n    scheduler.addLiveCompInstance(container.getId(), instance);\n    LOG.info(\n        \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n        getName(), container.getId(), instance.getCompInstanceName(),\n        container.getNodeId());\n    Future\u003cProviderService.ResolvedLaunchParams\u003e resolvedParamFuture;\n    if (!(upgradeStatus.isCompleted() \u0026\u0026 cancelUpgradeStatus.isCompleted())) {\n      UpgradeStatus status \u003d !cancelUpgradeStatus.isCompleted() ?\n          cancelUpgradeStatus : upgradeStatus;\n\n      resolvedParamFuture \u003d scheduler.getContainerLaunchService()\n          .launchCompInstance(scheduler.getApp(), instance, container,\n              createLaunchContext(status.getTargetSpec(),\n                  status.getTargetVersion()));\n    } else {\n      resolvedParamFuture \u003d scheduler.getContainerLaunchService()\n          .launchCompInstance(\n          scheduler.getApp(), instance, container,\n          createLaunchContext(componentSpec, scheduler.getApp().getVersion()));\n    }\n    instance.updateResolvedLaunchParams(resolvedParamFuture);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "913f87dada27776c539dfb352400ecf8d40e7943": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/09/18 11:51 AM",
      "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "21/08/18 4:49 PM",
      "commitNameOld": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 35.79,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   private void assignContainerToCompInstance(Container container) {\n     if (pendingInstances.size() \u003d\u003d 0) {\n       LOG.info(\n           \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n           getName(), container.getId());\n       releaseContainer(container);\n       return;\n     }\n     ComponentInstance instance \u003d pendingInstances.remove(0);\n     LOG.info(\n         \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n         getName(), container.getId(), pendingInstances.size());\n     instance.setContainer(container);\n     scheduler.addLiveCompInstance(container.getId(), instance);\n     LOG.info(\n         \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n         getName(), container.getId(), instance.getCompInstanceName(),\n         container.getNodeId());\n-    if (upgradeInProgress.get()) {\n+    if (!(upgradeStatus.isCompleted() \u0026\u0026 cancelUpgradeStatus.isCompleted())) {\n+      UpgradeStatus status \u003d !cancelUpgradeStatus.isCompleted() ?\n+          cancelUpgradeStatus : upgradeStatus;\n+\n       scheduler.getContainerLaunchService()\n           .launchCompInstance(scheduler.getApp(), instance, container,\n-              createLaunchContext(upgradeEvent.getTargetSpec(),\n-                  upgradeEvent.getUpgradeVersion()));\n+              createLaunchContext(status.getTargetSpec(),\n+                  status.getTargetVersion()));\n     } else {\n       scheduler.getContainerLaunchService().launchCompInstance(\n           scheduler.getApp(), instance, container,\n           createLaunchContext(componentSpec, scheduler.getApp().getVersion()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void assignContainerToCompInstance(Container container) {\n    if (pendingInstances.size() \u003d\u003d 0) {\n      LOG.info(\n          \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n          getName(), container.getId());\n      releaseContainer(container);\n      return;\n    }\n    ComponentInstance instance \u003d pendingInstances.remove(0);\n    LOG.info(\n        \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n        getName(), container.getId(), pendingInstances.size());\n    instance.setContainer(container);\n    scheduler.addLiveCompInstance(container.getId(), instance);\n    LOG.info(\n        \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n        getName(), container.getId(), instance.getCompInstanceName(),\n        container.getNodeId());\n    if (!(upgradeStatus.isCompleted() \u0026\u0026 cancelUpgradeStatus.isCompleted())) {\n      UpgradeStatus status \u003d !cancelUpgradeStatus.isCompleted() ?\n          cancelUpgradeStatus : upgradeStatus;\n\n      scheduler.getContainerLaunchService()\n          .launchCompInstance(scheduler.getApp(), instance, container,\n              createLaunchContext(status.getTargetSpec(),\n                  status.getTargetVersion()));\n    } else {\n      scheduler.getContainerLaunchService().launchCompInstance(\n          scheduler.getApp(), instance, container,\n          createLaunchContext(componentSpec, scheduler.getApp().getVersion()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "20/04/18 12:24 PM",
      "commitNameOld": "28e2244390c990877dc2ee2733cf9b8d2c75128e",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 6.06,
      "commitsBetweenForRepo": 538,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,29 @@\n   private void assignContainerToCompInstance(Container container) {\n     if (pendingInstances.size() \u003d\u003d 0) {\n       LOG.info(\n           \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n           getName(), container.getId());\n       releaseContainer(container);\n       return;\n     }\n     ComponentInstance instance \u003d pendingInstances.remove(0);\n     LOG.info(\n         \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n         getName(), container.getId(), pendingInstances.size());\n     instance.setContainer(container);\n     scheduler.addLiveCompInstance(container.getId(), instance);\n     LOG.info(\n         \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n         getName(), container.getId(), instance.getCompInstanceName(),\n         container.getNodeId());\n-    scheduler.getContainerLaunchService()\n-        .launchCompInstance(scheduler.getApp(), instance, container);\n+    if (upgradeInProgress.get()) {\n+      scheduler.getContainerLaunchService()\n+          .launchCompInstance(scheduler.getApp(), instance, container,\n+              createLaunchContext(upgradeEvent.getTargetSpec(),\n+                  upgradeEvent.getUpgradeVersion()));\n+    } else {\n+      scheduler.getContainerLaunchService().launchCompInstance(\n+          scheduler.getApp(), instance, container,\n+          createLaunchContext(componentSpec, scheduler.getApp().getVersion()));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void assignContainerToCompInstance(Container container) {\n    if (pendingInstances.size() \u003d\u003d 0) {\n      LOG.info(\n          \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n          getName(), container.getId());\n      releaseContainer(container);\n      return;\n    }\n    ComponentInstance instance \u003d pendingInstances.remove(0);\n    LOG.info(\n        \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n        getName(), container.getId(), pendingInstances.size());\n    instance.setContainer(container);\n    scheduler.addLiveCompInstance(container.getId(), instance);\n    LOG.info(\n        \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n        getName(), container.getId(), instance.getCompInstanceName(),\n        container.getNodeId());\n    if (upgradeInProgress.get()) {\n      scheduler.getContainerLaunchService()\n          .launchCompInstance(scheduler.getApp(), instance, container,\n              createLaunchContext(upgradeEvent.getTargetSpec(),\n                  upgradeEvent.getUpgradeVersion()));\n    } else {\n      scheduler.getContainerLaunchService().launchCompInstance(\n          scheduler.getApp(), instance, container,\n          createLaunchContext(componentSpec, scheduler.getApp().getVersion()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "b8a7ef1b64392094562e7782e0fd092934724ad2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6744. Recover component information on YARN native services AM restart. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "b8a7ef1b64392094562e7782e0fd092934724ad2",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "c70e5df100ba800f7170f44f63d388ae056cb74d",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   private void assignContainerToCompInstance(Container container) {\n     if (pendingInstances.size() \u003d\u003d 0) {\n       LOG.info(\n           \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n           getName(), container.getId());\n-      scheduler.getAmRMClient().releaseAssignedContainer(container.getId());\n-      componentMetrics.surplusContainers.incr();\n-      scheduler.getServiceMetrics().surplusContainers.incr();\n+      releaseContainer(container);\n       return;\n     }\n     ComponentInstance instance \u003d pendingInstances.remove(0);\n     LOG.info(\n         \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n         getName(), container.getId(), pendingInstances.size());\n     instance.setContainer(container);\n     scheduler.addLiveCompInstance(container.getId(), instance);\n     LOG.info(\n         \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n         getName(), container.getId(), instance.getCompInstanceName(),\n         container.getNodeId());\n     scheduler.getContainerLaunchService()\n         .launchCompInstance(scheduler.getApp(), instance, container);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void assignContainerToCompInstance(Container container) {\n    if (pendingInstances.size() \u003d\u003d 0) {\n      LOG.info(\n          \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n          getName(), container.getId());\n      releaseContainer(container);\n      return;\n    }\n    ComponentInstance instance \u003d pendingInstances.remove(0);\n    LOG.info(\n        \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n        getName(), container.getId(), pendingInstances.size());\n    instance.setContainer(container);\n    scheduler.addLiveCompInstance(container.getId(), instance);\n    LOG.info(\n        \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n        getName(), container.getId(), instance.getCompInstanceName(),\n        container.getNodeId());\n    scheduler.getContainerLaunchService()\n        .launchCompInstance(scheduler.getApp(), instance, container);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void assignContainerToCompInstance(Container container) {\n    if (pendingInstances.size() \u003d\u003d 0) {\n      LOG.info(\n          \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n          getName(), container.getId());\n      scheduler.getAmRMClient().releaseAssignedContainer(container.getId());\n      componentMetrics.surplusContainers.incr();\n      scheduler.getServiceMetrics().surplusContainers.incr();\n      return;\n    }\n    ComponentInstance instance \u003d pendingInstances.remove(0);\n    LOG.info(\n        \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n        getName(), container.getId(), pendingInstances.size());\n    instance.setContainer(container);\n    scheduler.addLiveCompInstance(container.getId(), instance);\n    LOG.info(\n        \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n        getName(), container.getId(), instance.getCompInstanceName(),\n        container.getNodeId());\n    scheduler.getContainerLaunchService()\n        .launchCompInstance(scheduler.getApp(), instance, container);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,23 @@\n+  private void assignContainerToCompInstance(Container container) {\n+    if (pendingInstances.size() \u003d\u003d 0) {\n+      LOG.info(\n+          \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n+          getName(), container.getId());\n+      scheduler.getAmRMClient().releaseAssignedContainer(container.getId());\n+      componentMetrics.surplusContainers.incr();\n+      scheduler.getServiceMetrics().surplusContainers.incr();\n+      return;\n+    }\n+    ComponentInstance instance \u003d pendingInstances.remove(0);\n+    LOG.info(\n+        \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n+        getName(), container.getId(), pendingInstances.size());\n+    instance.setContainer(container);\n+    scheduler.addLiveCompInstance(container.getId(), instance);\n+    LOG.info(\n+        \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n+        getName(), container.getId(), instance.getCompInstanceName(),\n+        container.getNodeId());\n+    scheduler.getContainerLaunchService()\n+        .launchCompInstance(scheduler.getApp(), instance, container);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void assignContainerToCompInstance(Container container) {\n    if (pendingInstances.size() \u003d\u003d 0) {\n      LOG.info(\n          \"[COMPONENT {}]: No pending component instance left, release surplus container {}\",\n          getName(), container.getId());\n      scheduler.getAmRMClient().releaseAssignedContainer(container.getId());\n      componentMetrics.surplusContainers.incr();\n      scheduler.getServiceMetrics().surplusContainers.incr();\n      return;\n    }\n    ComponentInstance instance \u003d pendingInstances.remove(0);\n    LOG.info(\n        \"[COMPONENT {}]: {} allocated, num pending component instances reduced to {}\",\n        getName(), container.getId(), pendingInstances.size());\n    instance.setContainer(container);\n    scheduler.addLiveCompInstance(container.getId(), instance);\n    LOG.info(\n        \"[COMPONENT {}]: Assigned {} to component instance {} and launch on host {} \",\n        getName(), container.getId(), instance.getCompInstanceName(),\n        container.getNodeId());\n    scheduler.getContainerLaunchService()\n        .launchCompInstance(scheduler.getApp(), instance, container);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java"
    }
  }
}