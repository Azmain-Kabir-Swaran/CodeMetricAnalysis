{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMNodeImpl.java",
  "functionName": "handle",
  "functionId": "handle___event-RMNodeEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
  "functionStartLine": 685,
  "functionEndLine": 706,
  "numCommitsSeen": 107,
  "timeTaken": 9750,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421",
    "19295b36d90e26616accee73b1f7743aab5df692",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "407cfa3b56a0645d64d2d9af305f6ef24307e775",
    "68615600985dfadf067a4967a5e08c1421e7a1c8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": "Ybodychange",
    "19295b36d90e26616accee73b1f7743aab5df692": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "407cfa3b56a0645d64d2d9af305f6ef24307e775": "Ybodychange",
    "68615600985dfadf067a4967a5e08c1421e7a1c8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void handle(RMNodeEvent event) {\n-    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n+    LOG.debug(\"Processing {} of type {}\", event.getNodeId(), event.getType());\n     writeLock.lock();\n     try {\n       NodeState oldState \u003d getState();\n       try {\n          stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         LOG.error(\"Invalid event \" + event.getType() + \n             \" on Node  \" + this.nodeId + \" oldState \" + oldState);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                  + getState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.debug(\"Processing {} of type {}\", event.getNodeId(), event.getType());\n    writeLock.lock();\n    try {\n      NodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId + \" oldState \" + oldState);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void handle(RMNodeEvent event) {\n     LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       NodeState oldState \u003d getState();\n       try {\n          stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         LOG.error(\"Invalid event \" + event.getType() + \n             \" on Node  \" + this.nodeId + \" oldState \" + oldState);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                  + getState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    writeLock.lock();\n    try {\n      NodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId + \" oldState \" + oldState);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
      "commitDate": "18/08/16 7:27 AM",
      "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/06/16 9:52 PM",
      "commitNameOld": "e0f4620cc7db3db4b781e6042ab7dd754af28f18",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 68.4,
      "commitsBetweenForRepo": 586,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void handle(RMNodeEvent event) {\n     LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n     try {\n       writeLock.lock();\n       NodeState oldState \u003d getState();\n       try {\n          stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         LOG.error(\"Invalid event \" + event.getType() + \n-            \" on Node  \" + this.nodeId);\n+            \" on Node  \" + this.nodeId + \" oldState \" + oldState);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                  + getState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      NodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId + \" oldState \" + oldState);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "19295b36d90e26616accee73b1f7743aab5df692": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/07/15 1:52 AM",
      "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/07/15 8:30 AM",
      "commitNameOld": "08244264c0583472b9c4e16591cfde72c6db62a2",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 2.72,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void handle(RMNodeEvent event) {\n     LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n     try {\n       writeLock.lock();\n       NodeState oldState \u003d getState();\n       try {\n          stateMachine.doTransition(event.getType(), event);\n-      } catch (InvalidStateTransitonException e) {\n+      } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         LOG.error(\"Invalid event \" + event.getType() + \n             \" on Node  \" + this.nodeId);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                  + getState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      NodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      NodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java"
      }
    },
    "407cfa3b56a0645d64d2d9af305f6ef24307e775": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3958. RM: Remove RMNodeState and replace it with NodeState (Bikas Saha via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1334043 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/12 8:47 AM",
      "commitName": "407cfa3b56a0645d64d2d9af305f6ef24307e775",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "25/03/12 10:45 PM",
      "commitNameOld": "606114d6029758f2be130960b8fc3102457406ba",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 39.42,
      "commitsBetweenForRepo": 315,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void handle(RMNodeEvent event) {\n     LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n     try {\n       writeLock.lock();\n-      RMNodeState oldState \u003d getState();\n+      NodeState oldState \u003d getState();\n       try {\n          stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         LOG.error(\"Invalid event \" + event.getType() + \n             \" on Node  \" + this.nodeId);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                  + getState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      NodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "68615600985dfadf067a4967a5e08c1421e7a1c8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3692. yarn-resourcemanager out and log files can get big. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233605 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 2:23 PM",
      "commitName": "68615600985dfadf067a4967a5e08c1421e7a1c8",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "13/01/12 1:15 PM",
      "commitNameOld": "78ff0b720e0418785d53802a1b4e72085c1a3556",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 6.05,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void handle(RMNodeEvent event) {\n-    LOG.info(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n+    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n     try {\n       writeLock.lock();\n       RMNodeState oldState \u003d getState();\n       try {\n          stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         LOG.error(\"Invalid event \" + event.getType() + \n             \" on Node  \" + this.nodeId);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                  + getState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.debug(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      RMNodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.info(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      RMNodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  public void handle(RMNodeEvent event) {\n+    LOG.info(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n+    try {\n+      writeLock.lock();\n+      RMNodeState oldState \u003d getState();\n+      try {\n+         stateMachine.doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitonException e) {\n+        LOG.error(\"Can\u0027t handle this event at current state\", e);\n+        LOG.error(\"Invalid event \" + event.getType() + \n+            \" on Node  \" + this.nodeId);\n+      }\n+      if (oldState !\u003d getState()) {\n+        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n+                 + getState());\n+      }\n+    }\n+    \n+    finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMNodeEvent event) {\n    LOG.info(\"Processing \" + event.getNodeId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      RMNodeState oldState \u003d getState();\n      try {\n         stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        LOG.error(\"Invalid event \" + event.getType() + \n            \" on Node  \" + this.nodeId);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(nodeId + \" Node Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java"
    }
  }
}