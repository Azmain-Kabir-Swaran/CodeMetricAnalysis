{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TeraInputFormat.java",
  "functionName": "getSplits",
  "functionId": "getSplits___job-JobContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
  "functionStartLine": 288,
  "functionEndLine": 307,
  "numCommitsSeen": 9,
  "timeTaken": 5085,
  "changeHistory": [
    "9d72f939759f407796ecb4715c2dc2f0d36d5578",
    "9ee38f3a841aa8c0ed68b54d8c0306c25e9c21bb",
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9d72f939759f407796ecb4715c2dc2f0d36d5578": "Ybodychange",
    "9ee38f3a841aa8c0ed68b54d8c0306c25e9c21bb": "Ybodychange",
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d72f939759f407796ecb4715c2dc2f0d36d5578": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5807. Print usage for TeraSort job. Contributed by Rohith.\n",
      "commitDate": "18/03/15 3:06 AM",
      "commitName": "9d72f939759f407796ecb4715c2dc2f0d36d5578",
      "commitAuthor": "Harsh J",
      "commitDateOld": "23/08/13 2:23 PM",
      "commitNameOld": "9ee38f3a841aa8c0ed68b54d8c0306c25e9c21bb",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 571.53,
      "commitsBetweenForRepo": 4329,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n     if (job \u003d\u003d lastContext) {\n       return lastResult;\n     }\n     long t1, t2, t3;\n     t1 \u003d System.currentTimeMillis();\n     lastContext \u003d job;\n     lastResult \u003d super.getSplits(job);\n     t2 \u003d System.currentTimeMillis();\n     System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n-    if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n+    if (job.getConfiguration().getBoolean(TeraSortConfigKeys.USE_TERA_SCHEDULER.key(),\n+                                          TeraSortConfigKeys.DEFAULT_USE_TERA_SCHEDULER)) {\n       TeraScheduler scheduler \u003d new TeraScheduler(\n         lastResult.toArray(new FileSplit[0]), job.getConfiguration());\n       lastResult \u003d scheduler.getNewFileSplits();\n       t3 \u003d System.currentTimeMillis(); \n       System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n     }\n     return lastResult;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n    if (job \u003d\u003d lastContext) {\n      return lastResult;\n    }\n    long t1, t2, t3;\n    t1 \u003d System.currentTimeMillis();\n    lastContext \u003d job;\n    lastResult \u003d super.getSplits(job);\n    t2 \u003d System.currentTimeMillis();\n    System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n    if (job.getConfiguration().getBoolean(TeraSortConfigKeys.USE_TERA_SCHEDULER.key(),\n                                          TeraSortConfigKeys.DEFAULT_USE_TERA_SCHEDULER)) {\n      TeraScheduler scheduler \u003d new TeraScheduler(\n        lastResult.toArray(new FileSplit[0]), job.getConfiguration());\n      lastResult \u003d scheduler.getNewFileSplits();\n      t3 \u003d System.currentTimeMillis(); \n      System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n    }\n    return lastResult;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
      "extendedDetails": {}
    },
    "9ee38f3a841aa8c0ed68b54d8c0306c25e9c21bb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5478. TeraInputFormat unnecessarily defines its own FileSplit subclass (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517046 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/13 2:23 PM",
      "commitName": "9ee38f3a841aa8c0ed68b54d8c0306c25e9c21bb",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "02/06/12 11:47 AM",
      "commitNameOld": "18ba71692288b585475595d21ed91d08d245009a",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 447.11,
      "commitsBetweenForRepo": 2570,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n     if (job \u003d\u003d lastContext) {\n       return lastResult;\n     }\n     long t1, t2, t3;\n     t1 \u003d System.currentTimeMillis();\n     lastContext \u003d job;\n     lastResult \u003d super.getSplits(job);\n     t2 \u003d System.currentTimeMillis();\n     System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n     if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n       TeraScheduler scheduler \u003d new TeraScheduler(\n-        lastResult.toArray(new TeraFileSplit[0]), job.getConfiguration());\n+        lastResult.toArray(new FileSplit[0]), job.getConfiguration());\n       lastResult \u003d scheduler.getNewFileSplits();\n       t3 \u003d System.currentTimeMillis(); \n       System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n     }\n     return lastResult;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n    if (job \u003d\u003d lastContext) {\n      return lastResult;\n    }\n    long t1, t2, t3;\n    t1 \u003d System.currentTimeMillis();\n    lastContext \u003d job;\n    lastResult \u003d super.getSplits(job);\n    t2 \u003d System.currentTimeMillis();\n    System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n    if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n      TeraScheduler scheduler \u003d new TeraScheduler(\n        lastResult.toArray(new FileSplit[0]), job.getConfiguration());\n      lastResult \u003d scheduler.getNewFileSplits();\n      t3 \u003d System.currentTimeMillis(); \n      System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n    }\n    return lastResult;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
      "extendedDetails": {}
    },
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n    if (job \u003d\u003d lastContext) {\n      return lastResult;\n    }\n    long t1, t2, t3;\n    t1 \u003d System.currentTimeMillis();\n    lastContext \u003d job;\n    lastResult \u003d super.getSplits(job);\n    t2 \u003d System.currentTimeMillis();\n    System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n    if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n      TeraScheduler scheduler \u003d new TeraScheduler(\n        lastResult.toArray(new TeraFileSplit[0]), job.getConfiguration());\n      lastResult \u003d scheduler.getNewFileSplits();\n      t3 \u003d System.currentTimeMillis(); \n      System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n    }\n    return lastResult;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/terasort/TeraInputFormat.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n    if (job \u003d\u003d lastContext) {\n      return lastResult;\n    }\n    long t1, t2, t3;\n    t1 \u003d System.currentTimeMillis();\n    lastContext \u003d job;\n    lastResult \u003d super.getSplits(job);\n    t2 \u003d System.currentTimeMillis();\n    System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n    if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n      TeraScheduler scheduler \u003d new TeraScheduler(\n        lastResult.toArray(new TeraFileSplit[0]), job.getConfiguration());\n      lastResult \u003d scheduler.getNewFileSplits();\n      t3 \u003d System.currentTimeMillis(); \n      System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n    }\n    return lastResult;\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n    if (job \u003d\u003d lastContext) {\n      return lastResult;\n    }\n    long t1, t2, t3;\n    t1 \u003d System.currentTimeMillis();\n    lastContext \u003d job;\n    lastResult \u003d super.getSplits(job);\n    t2 \u003d System.currentTimeMillis();\n    System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n    if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n      TeraScheduler scheduler \u003d new TeraScheduler(\n        lastResult.toArray(new TeraFileSplit[0]), job.getConfiguration());\n      lastResult \u003d scheduler.getNewFileSplits();\n      t3 \u003d System.currentTimeMillis(); \n      System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n    }\n    return lastResult;\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n+    if (job \u003d\u003d lastContext) {\n+      return lastResult;\n+    }\n+    long t1, t2, t3;\n+    t1 \u003d System.currentTimeMillis();\n+    lastContext \u003d job;\n+    lastResult \u003d super.getSplits(job);\n+    t2 \u003d System.currentTimeMillis();\n+    System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n+    if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n+      TeraScheduler scheduler \u003d new TeraScheduler(\n+        lastResult.toArray(new TeraFileSplit[0]), job.getConfiguration());\n+      lastResult \u003d scheduler.getNewFileSplits();\n+      t3 \u003d System.currentTimeMillis(); \n+      System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n+    }\n+    return lastResult;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cInputSplit\u003e getSplits(JobContext job) throws IOException {\n    if (job \u003d\u003d lastContext) {\n      return lastResult;\n    }\n    long t1, t2, t3;\n    t1 \u003d System.currentTimeMillis();\n    lastContext \u003d job;\n    lastResult \u003d super.getSplits(job);\n    t2 \u003d System.currentTimeMillis();\n    System.out.println(\"Spent \" + (t2 - t1) + \"ms computing base-splits.\");\n    if (job.getConfiguration().getBoolean(TeraScheduler.USE, true)) {\n      TeraScheduler scheduler \u003d new TeraScheduler(\n        lastResult.toArray(new TeraFileSplit[0]), job.getConfiguration());\n      lastResult \u003d scheduler.getNewFileSplits();\n      t3 \u003d System.currentTimeMillis(); \n      System.out.println(\"Spent \" + (t3 - t2) + \"ms computing TeraScheduler splits.\");\n    }\n    return lastResult;\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/terasort/TeraInputFormat.java"
    }
  }
}