{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegularContainerAllocator.java",
  "functionName": "assignRackLocalContainers",
  "functionId": "assignRackLocalContainers___clusterResource-Resource__rackLocalAsk-PendingAsk__node-FiCaSchedulerNode__schedulerKey-SchedulerRequestKey__reservedContainer-RMContainer__schedulingMode-SchedulingMode__currentResoureLimits-ResourceLimits",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
  "functionStartLine": 385,
  "functionEndLine": 398,
  "numCommitsSeen": 584,
  "timeTaken": 19257,
  "changeHistory": [
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "ba2313d6145a1234777938a747187373f4cd58d9",
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
    "189a63a719c63b67a1783a280bfc2f72dcb55277",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
    "487374b7fe0c92fc7eb1406c568952722b5d5b15",
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
    "9c22065109a77681bc2534063eabe8692fbcb3cd",
    "4a14264ddb28d4cfd06ec4f70b42e3174a1d888c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": "Ybodychange",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ybodychange",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": "Ymultichange(Yparameterchange,Ybodychange)",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": "Ybodychange",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ymultichange(Yparameterchange,Ybodychange)",
    "ba2313d6145a1234777938a747187373f4cd58d9": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "189a63a719c63b67a1783a280bfc2f72dcb55277": "Ymultichange(Yparameterchange,Ybodychange)",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": "Ymultichange(Yparameterchange,Ybodychange)",
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": "Ymultichange(Yreturntypechange,Ybodychange)",
    "487374b7fe0c92fc7eb1406c568952722b5d5b15": "Ymultichange(Yparameterchange,Ybodychange)",
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284": "Ymultichange(Yparameterchange,Ybodychange)",
    "9c22065109a77681bc2534063eabe8692fbcb3cd": "Ymultichange(Yparameterchange,Ybodychange)",
    "4a14264ddb28d4cfd06ec4f70b42e3174a1d888c": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yparameterchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
      "commitDate": "29/08/19 3:14 AM",
      "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "06/06/19 6:59 AM",
      "commitNameOld": "09763925025a3709e6098186348e1afd80cb9f71",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 83.84,
      "commitsBetweenForRepo": 744,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n   private ContainerAllocation assignRackLocalContainers(\n       Resource clusterResource, PendingAsk rackLocalAsk,\n       FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n       RMContainer reservedContainer, SchedulingMode schedulingMode,\n       ResourceLimits currentResoureLimits) {\n     if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, schedulerKey,\n           rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n           schedulingMode, currentResoureLimits);\n     }\n \n     // Skip rack-local request, go to off-switch request\n-    ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n-        activitiesManager, node, application, schedulerKey,\n-        ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n     return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, PendingAsk rackLocalAsk,\n      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n      RMContainer reservedContainer, SchedulingMode schedulingMode,\n      ResourceLimits currentResoureLimits) {\n    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, schedulerKey,\n          rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
      "extendedDetails": {}
    },
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 51.53,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private ContainerAllocation assignRackLocalContainers(\n       Resource clusterResource, PendingAsk rackLocalAsk,\n       FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n       RMContainer reservedContainer, SchedulingMode schedulingMode,\n       ResourceLimits currentResoureLimits) {\n     if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, schedulerKey,\n           rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n           schedulingMode, currentResoureLimits);\n     }\n \n     // Skip rack-local request, go to off-switch request\n     ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n-        activitiesManager, node, application, schedulerKey.getPriority(),\n+        activitiesManager, node, application, schedulerKey,\n         ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n     return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, PendingAsk rackLocalAsk,\n      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n      RMContainer reservedContainer, SchedulingMode schedulingMode,\n      ResourceLimits currentResoureLimits) {\n    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, schedulerKey,\n          rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n        activitiesManager, node, application, schedulerKey,\n        ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
      "extendedDetails": {}
    },
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
      "commitDate": "06/01/17 9:59 AM",
      "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
          "commitDate": "06/01/17 9:59 AM",
          "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/01/17 10:31 AM",
          "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.98,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   private ContainerAllocation assignRackLocalContainers(\n-      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n+      Resource clusterResource, PendingAsk rackLocalAsk,\n       FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n       RMContainer reservedContainer, SchedulingMode schedulingMode,\n       ResourceLimits currentResoureLimits) {\n     if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, schedulerKey,\n-          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n+          rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n           schedulingMode, currentResoureLimits);\n     }\n \n     // Skip rack-local request, go to off-switch request\n     ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n         activitiesManager, node, application, schedulerKey.getPriority(),\n         ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n     return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, PendingAsk rackLocalAsk,\n      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n      RMContainer reservedContainer, SchedulingMode schedulingMode,\n      ResourceLimits currentResoureLimits) {\n    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, schedulerKey,\n          rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n        activitiesManager, node, application, schedulerKey.getPriority(),\n        ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, schedulerKey-SchedulerRequestKey, reservedContainer-RMContainer, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]",
            "newValue": "[clusterResource-Resource, rackLocalAsk-PendingAsk, node-FiCaSchedulerNode, schedulerKey-SchedulerRequestKey, reservedContainer-RMContainer, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
          "commitDate": "06/01/17 9:59 AM",
          "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/01/17 10:31 AM",
          "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.98,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   private ContainerAllocation assignRackLocalContainers(\n-      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n+      Resource clusterResource, PendingAsk rackLocalAsk,\n       FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n       RMContainer reservedContainer, SchedulingMode schedulingMode,\n       ResourceLimits currentResoureLimits) {\n     if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, schedulerKey,\n-          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n+          rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n           schedulingMode, currentResoureLimits);\n     }\n \n     // Skip rack-local request, go to off-switch request\n     ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n         activitiesManager, node, application, schedulerKey.getPriority(),\n         ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n     return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, PendingAsk rackLocalAsk,\n      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n      RMContainer reservedContainer, SchedulingMode schedulingMode,\n      ResourceLimits currentResoureLimits) {\n    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, schedulerKey,\n          rackLocalAsk, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n        activitiesManager, node, application, schedulerKey.getPriority(),\n        ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4091. Add REST API to retrieve scheduler activity. (Chen Ge and Sunil G via wangda)\n",
      "commitDate": "05/08/16 10:27 AM",
      "commitName": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/07/16 6:14 PM",
      "commitNameOld": "49969b16cdba0f251b9f8bf3d8df9906e38b5c61",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 9.68,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,17 @@\n   private ContainerAllocation assignRackLocalContainers(\n       Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n       FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n       RMContainer reservedContainer, SchedulingMode schedulingMode,\n       ResourceLimits currentResoureLimits) {\n     if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, schedulerKey,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           schedulingMode, currentResoureLimits);\n     }\n \n     // Skip rack-local request, go to off-switch request\n+    ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n+        activitiesManager, node, application, schedulerKey.getPriority(),\n+        ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n     return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n      RMContainer reservedContainer, SchedulingMode schedulingMode,\n      ResourceLimits currentResoureLimits) {\n    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, schedulerKey,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    ActivitiesLogger.APP.recordSkippedAppActivityWithoutAllocation(\n        activitiesManager, node, application, schedulerKey.getPriority(),\n        ActivityDiagnosticConstant.SKIP_RACK_LOCAL_REQUEST);\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
      "extendedDetails": {}
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "07/06/16 3:06 PM",
          "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 48.99,
          "commitsBetweenForRepo": 441,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   private ContainerAllocation assignRackLocalContainers(\n       Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n-      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n-      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n-      return assignContainer(clusterResource, node, priority,\n+      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n+      RMContainer reservedContainer, SchedulingMode schedulingMode,\n+      ResourceLimits currentResoureLimits) {\n+    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n+      return assignContainer(clusterResource, node, schedulerKey,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           schedulingMode, currentResoureLimits);\n     }\n \n     // Skip rack-local request, go to off-switch request\n     return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n      RMContainer reservedContainer, SchedulingMode schedulingMode,\n      ResourceLimits currentResoureLimits) {\n    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, schedulerKey,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, priority-Priority, reservedContainer-RMContainer, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, schedulerKey-SchedulerRequestKey, reservedContainer-RMContainer, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "07/06/16 3:06 PM",
          "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 48.99,
          "commitsBetweenForRepo": 441,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   private ContainerAllocation assignRackLocalContainers(\n       Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n-      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n-      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n-      return assignContainer(clusterResource, node, priority,\n+      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n+      RMContainer reservedContainer, SchedulingMode schedulingMode,\n+      ResourceLimits currentResoureLimits) {\n+    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n+      return assignContainer(clusterResource, node, schedulerKey,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           schedulingMode, currentResoureLimits);\n     }\n \n     // Skip rack-local request, go to off-switch request\n     return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n      FiCaSchedulerNode node, SchedulerRequestKey schedulerKey,\n      RMContainer reservedContainer, SchedulingMode schedulingMode,\n      ResourceLimits currentResoureLimits) {\n    if (canAssign(schedulerKey, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, schedulerKey,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "ba2313d6145a1234777938a747187373f4cd58d9": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3983. Refactored CapacityScheduleri#FiCaSchedulerApp to easier extend container allocation logic. Contributed by Wangda Tan\n",
      "commitDate": "05/08/15 1:47 PM",
      "commitName": "ba2313d6145a1234777938a747187373f4cd58d9",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3983. Refactored CapacityScheduleri#FiCaSchedulerApp to easier extend container allocation logic. Contributed by Wangda Tan\n",
          "commitDate": "05/08/15 1:47 PM",
          "commitName": "ba2313d6145a1234777938a747187373f4cd58d9",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/15 12:57 PM",
          "commitNameOld": "f271d377357ad680924d19f07e6c8315e7c89bae",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n-      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      Priority priority,\n-      RMContainer reservedContainer, MutableObject allocatedContainer,\n+  private ContainerAllocation assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n+      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n       SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n-        reservedContainer)) {\n+    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer, schedulingMode, currentResoureLimits);\n+          schedulingMode, currentResoureLimits);\n     }\n \n-    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n+    // Skip rack-local request, go to off-switch request\n+    return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
            "oldMethodName": "assignRackLocalContainers",
            "newMethodName": "assignRackLocalContainers"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-3983. Refactored CapacityScheduleri#FiCaSchedulerApp to easier extend container allocation logic. Contributed by Wangda Tan\n",
          "commitDate": "05/08/15 1:47 PM",
          "commitName": "ba2313d6145a1234777938a747187373f4cd58d9",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/15 12:57 PM",
          "commitNameOld": "f271d377357ad680924d19f07e6c8315e7c89bae",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n-      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      Priority priority,\n-      RMContainer reservedContainer, MutableObject allocatedContainer,\n+  private ContainerAllocation assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n+      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n       SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n-        reservedContainer)) {\n+    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer, schedulingMode, currentResoureLimits);\n+          schedulingMode, currentResoureLimits);\n     }\n \n-    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n+    // Skip rack-local request, go to off-switch request\n+    return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "CSAssignment",
            "newValue": "ContainerAllocation"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3983. Refactored CapacityScheduleri#FiCaSchedulerApp to easier extend container allocation logic. Contributed by Wangda Tan\n",
          "commitDate": "05/08/15 1:47 PM",
          "commitName": "ba2313d6145a1234777938a747187373f4cd58d9",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/15 12:57 PM",
          "commitNameOld": "f271d377357ad680924d19f07e6c8315e7c89bae",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n-      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      Priority priority,\n-      RMContainer reservedContainer, MutableObject allocatedContainer,\n+  private ContainerAllocation assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n+      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n       SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n-        reservedContainer)) {\n+    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer, schedulingMode, currentResoureLimits);\n+          schedulingMode, currentResoureLimits);\n     }\n \n-    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n+    // Skip rack-local request, go to off-switch request\n+    return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3983. Refactored CapacityScheduleri#FiCaSchedulerApp to easier extend container allocation logic. Contributed by Wangda Tan\n",
          "commitDate": "05/08/15 1:47 PM",
          "commitName": "ba2313d6145a1234777938a747187373f4cd58d9",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/15 12:57 PM",
          "commitNameOld": "f271d377357ad680924d19f07e6c8315e7c89bae",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n-      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      Priority priority,\n-      RMContainer reservedContainer, MutableObject allocatedContainer,\n+  private ContainerAllocation assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n+      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n       SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n-        reservedContainer)) {\n+    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n       return assignContainer(clusterResource, node, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer, schedulingMode, currentResoureLimits);\n+          schedulingMode, currentResoureLimits);\n     }\n \n-    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n+    // Skip rack-local request, go to off-switch request\n+    return ContainerAllocation.LOCALITY_SKIPPED;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerAllocation assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,\n      FiCaSchedulerNode node, Priority priority, RMContainer reservedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(priority, node, NodeType.RACK_LOCAL, reservedContainer)) {\n      return assignContainer(clusterResource, node, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          schedulingMode, currentResoureLimits);\n    }\n\n    // Skip rack-local request, go to off-switch request\n    return ContainerAllocation.LOCALITY_SKIPPED;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/RegularContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, priority-Priority, reservedContainer-RMContainer, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]"
          }
        }
      ]
    },
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "24/07/15 2:00 PM",
      "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      FiCaSchedulerApp application, Priority priority,\n+      Priority priority,\n       RMContainer reservedContainer, MutableObject allocatedContainer,\n       SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n+    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n-      return assignContainer(clusterResource, node, application, priority,\n+      return assignContainer(clusterResource, node, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           allocatedContainer, schedulingMode, currentResoureLimits);\n     }\n \n     return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer, schedulingMode, currentResoureLimits);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
            "oldMethodName": "assignRackLocalContainers",
            "newMethodName": "assignRackLocalContainers"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      FiCaSchedulerApp application, Priority priority,\n+      Priority priority,\n       RMContainer reservedContainer, MutableObject allocatedContainer,\n       SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n+    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n-      return assignContainer(clusterResource, node, application, priority,\n+      return assignContainer(clusterResource, node, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           allocatedContainer, schedulingMode, currentResoureLimits);\n     }\n \n     return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer, schedulingMode, currentResoureLimits);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      FiCaSchedulerApp application, Priority priority,\n+      Priority priority,\n       RMContainer reservedContainer, MutableObject allocatedContainer,\n       SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n-    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n+    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n-      return assignContainer(clusterResource, node, application, priority,\n+      return assignContainer(clusterResource, node, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           allocatedContainer, schedulingMode, currentResoureLimits);\n     }\n \n     return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer, schedulingMode, currentResoureLimits);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]"
          }
        }
      ]
    },
    "189a63a719c63b67a1783a280bfc2f72dcb55277": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3434. Interaction between reservations and userlimit can result in significant ULF violation\n",
      "commitDate": "23/04/15 7:39 AM",
      "commitName": "189a63a719c63b67a1783a280bfc2f72dcb55277",
      "commitAuthor": "tgraves",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3434. Interaction between reservations and userlimit can result in significant ULF violation\n",
          "commitDate": "23/04/15 7:39 AM",
          "commitName": "189a63a719c63b67a1783a280bfc2f72dcb55277",
          "commitAuthor": "tgraves",
          "commitDateOld": "21/04/15 8:06 PM",
          "commitNameOld": "bdd90110e6904b59746812d9a093924a65e72280",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 1.48,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n       FiCaSchedulerApp application, Priority priority,\n       RMContainer reservedContainer, MutableObject allocatedContainer,\n-      SchedulingMode schedulingMode) {\n+      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer, schedulingMode);\n+          allocatedContainer, schedulingMode, currentResoureLimits);\n     }\n \n     return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer, schedulingMode, currentResoureLimits);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject, schedulingMode-SchedulingMode]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject, schedulingMode-SchedulingMode, currentResoureLimits-ResourceLimits]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3434. Interaction between reservations and userlimit can result in significant ULF violation\n",
          "commitDate": "23/04/15 7:39 AM",
          "commitName": "189a63a719c63b67a1783a280bfc2f72dcb55277",
          "commitAuthor": "tgraves",
          "commitDateOld": "21/04/15 8:06 PM",
          "commitNameOld": "bdd90110e6904b59746812d9a093924a65e72280",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 1.48,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n       FiCaSchedulerApp application, Priority priority,\n       RMContainer reservedContainer, MutableObject allocatedContainer,\n-      SchedulingMode schedulingMode) {\n+      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer, schedulingMode);\n+          allocatedContainer, schedulingMode, currentResoureLimits);\n     }\n \n     return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      SchedulingMode schedulingMode, ResourceLimits currentResoureLimits) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer, schedulingMode, currentResoureLimits);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3361. CapacityScheduler side changes to support non-exclusive node labels. Contributed by Wangda Tan\n",
      "commitDate": "14/04/15 11:45 AM",
      "commitName": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3361. CapacityScheduler side changes to support non-exclusive node labels. Contributed by Wangda Tan\n",
          "commitDate": "14/04/15 11:45 AM",
          "commitName": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
          "commitAuthor": "Jian He",
          "commitDateOld": "09/04/15 11:38 PM",
          "commitNameOld": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 4.51,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n       FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer, MutableObject allocatedContainer) {\n+      RMContainer reservedContainer, MutableObject allocatedContainer,\n+      SchedulingMode schedulingMode) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer);\n+          allocatedContainer, schedulingMode);\n     }\n \n     return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      SchedulingMode schedulingMode) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer, schedulingMode);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject, schedulingMode-SchedulingMode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3361. CapacityScheduler side changes to support non-exclusive node labels. Contributed by Wangda Tan\n",
          "commitDate": "14/04/15 11:45 AM",
          "commitName": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
          "commitAuthor": "Jian He",
          "commitDateOld": "09/04/15 11:38 PM",
          "commitNameOld": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 4.51,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n       FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer, MutableObject allocatedContainer) {\n+      RMContainer reservedContainer, MutableObject allocatedContainer,\n+      SchedulingMode schedulingMode) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          allocatedContainer);\n+          allocatedContainer, schedulingMode);\n     }\n \n     return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer,\n      SchedulingMode schedulingMode) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer, schedulingMode);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-3293. Track and display capacity scheduler health metrics in web\nUI. Contributed by Varun Vasudev\n",
      "commitDate": "09/04/15 11:38 PM",
      "commitName": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-3293. Track and display capacity scheduler health metrics in web\nUI. Contributed by Varun Vasudev\n",
          "commitDate": "09/04/15 11:38 PM",
          "commitName": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
          "commitAuthor": "Xuan",
          "commitDateOld": "20/03/15 1:54 PM",
          "commitNameOld": "586348e4cbf197188057d6b843a6701cfffdaff3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 20.41,
          "commitsBetweenForRepo": 184,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private Resource assignRackLocalContainers(Resource clusterResource,\n+  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n       FiCaSchedulerApp application, Priority priority,\n       RMContainer reservedContainer, MutableObject allocatedContainer) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           allocatedContainer);\n     }\n-    \n-    return Resources.none();\n+\n+    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "Resource",
            "newValue": "CSAssignment"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3293. Track and display capacity scheduler health metrics in web\nUI. Contributed by Varun Vasudev\n",
          "commitDate": "09/04/15 11:38 PM",
          "commitName": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
          "commitAuthor": "Xuan",
          "commitDateOld": "20/03/15 1:54 PM",
          "commitNameOld": "586348e4cbf197188057d6b843a6701cfffdaff3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 20.41,
          "commitsBetweenForRepo": 184,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private Resource assignRackLocalContainers(Resource clusterResource,\n+  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n       ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n       FiCaSchedulerApp application, Priority priority,\n       RMContainer reservedContainer, MutableObject allocatedContainer) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n           allocatedContainer);\n     }\n-    \n-    return Resources.none();\n+\n+    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private CSAssignment assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer);\n    }\n\n    return new CSAssignment(Resources.none(), NodeType.RACK_LOCAL);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "487374b7fe0c92fc7eb1406c568952722b5d5b15": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3243. CapacityScheduler should pass headroom from parent to children to make sure ParentQueue obey its capacity limits. Contributed by Wangda Tan.\n",
      "commitDate": "17/03/15 10:24 AM",
      "commitName": "487374b7fe0c92fc7eb1406c568952722b5d5b15",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3243. CapacityScheduler should pass headroom from parent to children to make sure ParentQueue obey its capacity limits. Contributed by Wangda Tan.\n",
          "commitDate": "17/03/15 10:24 AM",
          "commitName": "487374b7fe0c92fc7eb1406c568952722b5d5b15",
          "commitAuthor": "Jian He",
          "commitDateOld": "03/03/15 11:49 AM",
          "commitNameOld": "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 13.9,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private Resource assignRackLocalContainers(\n-      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n-      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer, boolean needToUnreserve,\n-      MutableObject allocatedContainer) {\n+  private Resource assignRackLocalContainers(Resource clusterResource,\n+      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n+      FiCaSchedulerApp application, Priority priority,\n+      RMContainer reservedContainer, MutableObject allocatedContainer) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          needToUnreserve, allocatedContainer);\n+          allocatedContainer);\n     }\n     \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, needToUnreserve-boolean, allocatedContainer-MutableObject]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, allocatedContainer-MutableObject]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3243. CapacityScheduler should pass headroom from parent to children to make sure ParentQueue obey its capacity limits. Contributed by Wangda Tan.\n",
          "commitDate": "17/03/15 10:24 AM",
          "commitName": "487374b7fe0c92fc7eb1406c568952722b5d5b15",
          "commitAuthor": "Jian He",
          "commitDateOld": "03/03/15 11:49 AM",
          "commitNameOld": "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 13.9,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private Resource assignRackLocalContainers(\n-      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n-      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer, boolean needToUnreserve,\n-      MutableObject allocatedContainer) {\n+  private Resource assignRackLocalContainers(Resource clusterResource,\n+      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n+      FiCaSchedulerApp application, Priority priority,\n+      RMContainer reservedContainer, MutableObject allocatedContainer) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          needToUnreserve, allocatedContainer);\n+          allocatedContainer);\n     }\n     \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(Resource clusterResource,\n      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n      FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, MutableObject allocatedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          allocatedContainer);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3272. Surface container locality info in RM web UI (Jian He via wangda)\n",
      "commitDate": "03/03/15 11:49 AM",
      "commitName": "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3272. Surface container locality info in RM web UI (Jian He via wangda)\n",
          "commitDate": "03/03/15 11:49 AM",
          "commitName": "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "02/03/15 5:52 PM",
          "commitNameOld": "14dd647c556016d351f425ee956ccf800ccb9ce2",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.75,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private Resource assignRackLocalContainers(Resource clusterResource,\n-      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer, boolean needToUnreserve) {\n-    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n+  private Resource assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n+      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n+      RMContainer reservedContainer, boolean needToUnreserve,\n+      MutableObject allocatedContainer) {\n+    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          needToUnreserve);\n+          needToUnreserve, allocatedContainer);\n     }\n     \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, boolean needToUnreserve,\n      MutableObject allocatedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          needToUnreserve, allocatedContainer);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, needToUnreserve-boolean]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, needToUnreserve-boolean, allocatedContainer-MutableObject]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3272. Surface container locality info in RM web UI (Jian He via wangda)\n",
          "commitDate": "03/03/15 11:49 AM",
          "commitName": "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "02/03/15 5:52 PM",
          "commitNameOld": "14dd647c556016d351f425ee956ccf800ccb9ce2",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.75,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private Resource assignRackLocalContainers(Resource clusterResource,\n-      ResourceRequest rackLocalResourceRequest, FiCaSchedulerNode node,\n-      FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer, boolean needToUnreserve) {\n-    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n+  private Resource assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n+      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n+      RMContainer reservedContainer, boolean needToUnreserve,\n+      MutableObject allocatedContainer) {\n+    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n         reservedContainer)) {\n       return assignContainer(clusterResource, node, application, priority,\n           rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n-          needToUnreserve);\n+          needToUnreserve, allocatedContainer);\n     }\n     \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, boolean needToUnreserve,\n      MutableObject allocatedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL,\n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          needToUnreserve, allocatedContainer);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "9c22065109a77681bc2534063eabe8692fbcb3cd": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1769. CapacityScheduler: Improve reservations. Contributed by Thomas Graves\n",
      "commitDate": "29/09/14 7:12 AM",
      "commitName": "9c22065109a77681bc2534063eabe8692fbcb3cd",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1769. CapacityScheduler: Improve reservations. Contributed by Thomas Graves\n",
          "commitDate": "29/09/14 7:12 AM",
          "commitName": "9c22065109a77681bc2534063eabe8692fbcb3cd",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "14/08/14 11:00 PM",
          "commitNameOld": "7360cec692be5dcc3377ae5082fe22870caac96b",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 45.34,
          "commitsBetweenForRepo": 409,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   private Resource assignRackLocalContainers(\n       Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n       FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer) {\n+      RMContainer reservedContainer, boolean needToUnreserve) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n         reservedContainer)) {\n-      return assignContainer(clusterResource, node, application, priority, \n-          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer);\n+      return assignContainer(clusterResource, node, application, priority,\n+          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n+          needToUnreserve);\n     }\n     \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, boolean needToUnreserve) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          needToUnreserve);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer, needToUnreserve-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1769. CapacityScheduler: Improve reservations. Contributed by Thomas Graves\n",
          "commitDate": "29/09/14 7:12 AM",
          "commitName": "9c22065109a77681bc2534063eabe8692fbcb3cd",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "14/08/14 11:00 PM",
          "commitNameOld": "7360cec692be5dcc3377ae5082fe22870caac96b",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 45.34,
          "commitsBetweenForRepo": 409,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   private Resource assignRackLocalContainers(\n       Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n       FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n-      RMContainer reservedContainer) {\n+      RMContainer reservedContainer, boolean needToUnreserve) {\n     if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n         reservedContainer)) {\n-      return assignContainer(clusterResource, node, application, priority, \n-          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer);\n+      return assignContainer(clusterResource, node, application, priority,\n+          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n+          needToUnreserve);\n     }\n     \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer, boolean needToUnreserve) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority,\n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer,\n          needToUnreserve);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "4a14264ddb28d4cfd06ec4f70b42e3174a1d888c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-398. Make it possible to specify hard locality constraints in resource requests for CapacityScheduler. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 11:13 AM",
      "commitName": "4a14264ddb28d4cfd06ec4f70b42e3174a1d888c",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-398. Make it possible to specify hard locality constraints in resource requests for CapacityScheduler. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489087 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/06/13 11:13 AM",
          "commitName": "4a14264ddb28d4cfd06ec4f70b42e3174a1d888c",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "01/06/13 2:43 PM",
          "commitNameOld": "a2c42330047bf955a6a585dcddf798920d4c8640",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.85,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  private Resource assignRackLocalContainers(Resource clusterResource,  \n+  private Resource assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n       FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n       RMContainer reservedContainer) {\n-    ResourceRequest request \u003d \n-      application.getResourceRequest(priority, node.getRackName());\n-    if (request !\u003d null) {\n-      if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n-          reservedContainer)) {\n-        return assignContainer(clusterResource, node, application, priority, request, \n-            NodeType.RACK_LOCAL, reservedContainer);\n-      } \n+    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n+        reservedContainer)) {\n+      return assignContainer(clusterResource, node, application, priority, \n+          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer);\n     }\n+    \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority, \n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer]",
            "newValue": "[clusterResource-Resource, rackLocalResourceRequest-ResourceRequest, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-398. Make it possible to specify hard locality constraints in resource requests for CapacityScheduler. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489087 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/06/13 11:13 AM",
          "commitName": "4a14264ddb28d4cfd06ec4f70b42e3174a1d888c",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "01/06/13 2:43 PM",
          "commitNameOld": "a2c42330047bf955a6a585dcddf798920d4c8640",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.85,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  private Resource assignRackLocalContainers(Resource clusterResource,  \n+  private Resource assignRackLocalContainers(\n+      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n       FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n       RMContainer reservedContainer) {\n-    ResourceRequest request \u003d \n-      application.getResourceRequest(priority, node.getRackName());\n-    if (request !\u003d null) {\n-      if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n-          reservedContainer)) {\n-        return assignContainer(clusterResource, node, application, priority, request, \n-            NodeType.RACK_LOCAL, reservedContainer);\n-      } \n+    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n+        reservedContainer)) {\n+      return assignContainer(clusterResource, node, application, priority, \n+          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer);\n     }\n+    \n     return Resources.none();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource assignRackLocalContainers(\n      Resource clusterResource, ResourceRequest rackLocalResourceRequest,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer) {\n    if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n        reservedContainer)) {\n      return assignContainer(clusterResource, node, application, priority, \n          rackLocalResourceRequest, NodeType.RACK_LOCAL, reservedContainer);\n    }\n    \n    return Resources.none();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Resource assignRackLocalContainers(Resource clusterResource,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer) {\n    ResourceRequest request \u003d \n      application.getResourceRequest(priority, node.getRackName());\n    if (request !\u003d null) {\n      if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n          reservedContainer)) {\n        return assignContainer(clusterResource, node, application, priority, request, \n            NodeType.RACK_LOCAL, reservedContainer);\n      }\n    }\n    return Resources.none();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/07/12 2:26 PM",
      "commitNameOld": "3bfb26ad3b5ac46f992a632541c97ca2bc897638",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private Resource assignRackLocalContainers(Resource clusterResource,  \n-      SchedulerNode node, SchedulerApp application, Priority priority,\n+      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n       RMContainer reservedContainer) {\n     ResourceRequest request \u003d \n       application.getResourceRequest(priority, node.getRackName());\n     if (request !\u003d null) {\n       if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n           reservedContainer)) {\n         return assignContainer(clusterResource, node, application, priority, request, \n             NodeType.RACK_LOCAL, reservedContainer);\n       }\n     }\n     return Resources.none();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource assignRackLocalContainers(Resource clusterResource,  \n      FiCaSchedulerNode node, FiCaSchedulerApp application, Priority priority,\n      RMContainer reservedContainer) {\n    ResourceRequest request \u003d \n      application.getResourceRequest(priority, node.getRackName());\n    if (request !\u003d null) {\n      if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n          reservedContainer)) {\n        return assignContainer(clusterResource, node, application, priority, request, \n            NodeType.RACK_LOCAL, reservedContainer);\n      }\n    }\n    return Resources.none();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldValue": "[clusterResource-Resource, node-SchedulerNode, application-SchedulerApp, priority-Priority, reservedContainer-RMContainer]",
        "newValue": "[clusterResource-Resource, node-FiCaSchedulerNode, application-FiCaSchedulerApp, priority-Priority, reservedContainer-RMContainer]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Resource assignRackLocalContainers(Resource clusterResource,  \n      SchedulerNode node, SchedulerApp application, Priority priority,\n      RMContainer reservedContainer) {\n    ResourceRequest request \u003d \n      application.getResourceRequest(priority, node.getRackName());\n    if (request !\u003d null) {\n      if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n          reservedContainer)) {\n        return assignContainer(clusterResource, node, application, priority, request, \n            NodeType.RACK_LOCAL, reservedContainer);\n      }\n    }\n    return Resources.none();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+  private Resource assignRackLocalContainers(Resource clusterResource,  \n+      SchedulerNode node, SchedulerApp application, Priority priority,\n+      RMContainer reservedContainer) {\n+    ResourceRequest request \u003d \n+      application.getResourceRequest(priority, node.getRackName());\n+    if (request !\u003d null) {\n+      if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n+          reservedContainer)) {\n+        return assignContainer(clusterResource, node, application, priority, request, \n+            NodeType.RACK_LOCAL, reservedContainer);\n+      }\n+    }\n+    return Resources.none();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource assignRackLocalContainers(Resource clusterResource,  \n      SchedulerNode node, SchedulerApp application, Priority priority,\n      RMContainer reservedContainer) {\n    ResourceRequest request \u003d \n      application.getResourceRequest(priority, node.getRackName());\n    if (request !\u003d null) {\n      if (canAssign(application, priority, node, NodeType.RACK_LOCAL, \n          reservedContainer)) {\n        return assignContainer(clusterResource, node, application, priority, request, \n            NodeType.RACK_LOCAL, reservedContainer);\n      }\n    }\n    return Resources.none();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}