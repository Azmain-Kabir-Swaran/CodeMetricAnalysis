{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MountTableResolver.java",
  "functionName": "getMountPoints",
  "functionId": "getMountPoints___str-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
  "functionStartLine": 451,
  "functionEndLine": 498,
  "numCommitsSeen": 29,
  "timeTaken": 2661,
  "changeHistory": [
    "0f9b8d7a753ad41b7ee7dfe3afaf34bddcbd94a8",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "6f0de2731806628b5b01bd1350225692147590da"
  ],
  "changeHistoryShort": {
    "0f9b8d7a753ad41b7ee7dfe3afaf34bddcbd94a8": "Ymultichange(Yparameterchange,Ybodychange)",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "6f0de2731806628b5b01bd1350225692147590da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0f9b8d7a753ad41b7ee7dfe3afaf34bddcbd94a8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-14369. RBF: Fix trailing / for webhdfs. Contributed by Akira Ajisaka.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "0f9b8d7a753ad41b7ee7dfe3afaf34bddcbd94a8",
      "commitAuthor": "Ayush Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14369. RBF: Fix trailing / for webhdfs. Contributed by Akira Ajisaka.\n",
          "commitDate": "24/06/19 9:33 AM",
          "commitName": "0f9b8d7a753ad41b7ee7dfe3afaf34bddcbd94a8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "24/06/19 9:33 AM",
          "commitNameOld": "c012b09fb678db11a10d0a8e1f64ee1a7229a417",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,47 +1,48 @@\n-  public List\u003cString\u003e getMountPoints(final String path) throws IOException {\n+  public List\u003cString\u003e getMountPoints(final String str) throws IOException {\n     verifyMountTable();\n+    final String path \u003d RouterAdmin.normalizeFileSystemPath(str);\n \n     Set\u003cString\u003e children \u003d new TreeSet\u003c\u003e();\n     readLock.lock();\n     try {\n       String from \u003d path;\n       String to \u003d path + Character.MAX_VALUE;\n       SortedMap\u003cString, MountTable\u003e subMap \u003d this.tree.subMap(from, to);\n \n       boolean exists \u003d false;\n       for (String subPath : subMap.keySet()) {\n         String child \u003d subPath;\n \n         // Special case for /\n         if (!path.equals(Path.SEPARATOR)) {\n           // Get the children\n           int ini \u003d path.length();\n           child \u003d subPath.substring(ini);\n         }\n \n         if (child.isEmpty()) {\n           // This is a mount point but without children\n           exists \u003d true;\n         } else if (child.startsWith(Path.SEPARATOR)) {\n           // This is a mount point with children\n           exists \u003d true;\n           child \u003d child.substring(1);\n \n           // We only return immediate children\n           int fin \u003d child.indexOf(Path.SEPARATOR);\n           if (fin \u003e -1) {\n             child \u003d child.substring(0, fin);\n           }\n           if (!child.isEmpty()) {\n             children.add(child);\n           }\n         }\n       }\n       if (!exists) {\n         return null;\n       }\n       return new LinkedList\u003c\u003e(children);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cString\u003e getMountPoints(final String str) throws IOException {\n    verifyMountTable();\n    final String path \u003d RouterAdmin.normalizeFileSystemPath(str);\n\n    Set\u003cString\u003e children \u003d new TreeSet\u003c\u003e();\n    readLock.lock();\n    try {\n      String from \u003d path;\n      String to \u003d path + Character.MAX_VALUE;\n      SortedMap\u003cString, MountTable\u003e subMap \u003d this.tree.subMap(from, to);\n\n      boolean exists \u003d false;\n      for (String subPath : subMap.keySet()) {\n        String child \u003d subPath;\n\n        // Special case for /\n        if (!path.equals(Path.SEPARATOR)) {\n          // Get the children\n          int ini \u003d path.length();\n          child \u003d subPath.substring(ini);\n        }\n\n        if (child.isEmpty()) {\n          // This is a mount point but without children\n          exists \u003d true;\n        } else if (child.startsWith(Path.SEPARATOR)) {\n          // This is a mount point with children\n          exists \u003d true;\n          child \u003d child.substring(1);\n\n          // We only return immediate children\n          int fin \u003d child.indexOf(Path.SEPARATOR);\n          if (fin \u003e -1) {\n            child \u003d child.substring(0, fin);\n          }\n          if (!child.isEmpty()) {\n            children.add(child);\n          }\n        }\n      }\n      if (!exists) {\n        return null;\n      }\n      return new LinkedList\u003c\u003e(children);\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
          "extendedDetails": {
            "oldValue": "[path-String(modifiers-final)]",
            "newValue": "[str-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14369. RBF: Fix trailing / for webhdfs. Contributed by Akira Ajisaka.\n",
          "commitDate": "24/06/19 9:33 AM",
          "commitName": "0f9b8d7a753ad41b7ee7dfe3afaf34bddcbd94a8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "24/06/19 9:33 AM",
          "commitNameOld": "c012b09fb678db11a10d0a8e1f64ee1a7229a417",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,47 +1,48 @@\n-  public List\u003cString\u003e getMountPoints(final String path) throws IOException {\n+  public List\u003cString\u003e getMountPoints(final String str) throws IOException {\n     verifyMountTable();\n+    final String path \u003d RouterAdmin.normalizeFileSystemPath(str);\n \n     Set\u003cString\u003e children \u003d new TreeSet\u003c\u003e();\n     readLock.lock();\n     try {\n       String from \u003d path;\n       String to \u003d path + Character.MAX_VALUE;\n       SortedMap\u003cString, MountTable\u003e subMap \u003d this.tree.subMap(from, to);\n \n       boolean exists \u003d false;\n       for (String subPath : subMap.keySet()) {\n         String child \u003d subPath;\n \n         // Special case for /\n         if (!path.equals(Path.SEPARATOR)) {\n           // Get the children\n           int ini \u003d path.length();\n           child \u003d subPath.substring(ini);\n         }\n \n         if (child.isEmpty()) {\n           // This is a mount point but without children\n           exists \u003d true;\n         } else if (child.startsWith(Path.SEPARATOR)) {\n           // This is a mount point with children\n           exists \u003d true;\n           child \u003d child.substring(1);\n \n           // We only return immediate children\n           int fin \u003d child.indexOf(Path.SEPARATOR);\n           if (fin \u003e -1) {\n             child \u003d child.substring(0, fin);\n           }\n           if (!child.isEmpty()) {\n             children.add(child);\n           }\n         }\n       }\n       if (!exists) {\n         return null;\n       }\n       return new LinkedList\u003c\u003e(children);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cString\u003e getMountPoints(final String str) throws IOException {\n    verifyMountTable();\n    final String path \u003d RouterAdmin.normalizeFileSystemPath(str);\n\n    Set\u003cString\u003e children \u003d new TreeSet\u003c\u003e();\n    readLock.lock();\n    try {\n      String from \u003d path;\n      String to \u003d path + Character.MAX_VALUE;\n      SortedMap\u003cString, MountTable\u003e subMap \u003d this.tree.subMap(from, to);\n\n      boolean exists \u003d false;\n      for (String subPath : subMap.keySet()) {\n        String child \u003d subPath;\n\n        // Special case for /\n        if (!path.equals(Path.SEPARATOR)) {\n          // Get the children\n          int ini \u003d path.length();\n          child \u003d subPath.substring(ini);\n        }\n\n        if (child.isEmpty()) {\n          // This is a mount point but without children\n          exists \u003d true;\n        } else if (child.startsWith(Path.SEPARATOR)) {\n          // This is a mount point with children\n          exists \u003d true;\n          child \u003d child.substring(1);\n\n          // We only return immediate children\n          int fin \u003d child.indexOf(Path.SEPARATOR);\n          if (fin \u003e -1) {\n            child \u003d child.substring(0, fin);\n          }\n          if (!child.isEmpty()) {\n            children.add(child);\n          }\n        }\n      }\n      if (!exists) {\n        return null;\n      }\n      return new LinkedList\u003c\u003e(children);\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
          "extendedDetails": {}
        }
      ]
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cString\u003e getMountPoints(final String path) throws IOException {\n    verifyMountTable();\n\n    Set\u003cString\u003e children \u003d new TreeSet\u003c\u003e();\n    readLock.lock();\n    try {\n      String from \u003d path;\n      String to \u003d path + Character.MAX_VALUE;\n      SortedMap\u003cString, MountTable\u003e subMap \u003d this.tree.subMap(from, to);\n\n      boolean exists \u003d false;\n      for (String subPath : subMap.keySet()) {\n        String child \u003d subPath;\n\n        // Special case for /\n        if (!path.equals(Path.SEPARATOR)) {\n          // Get the children\n          int ini \u003d path.length();\n          child \u003d subPath.substring(ini);\n        }\n\n        if (child.isEmpty()) {\n          // This is a mount point but without children\n          exists \u003d true;\n        } else if (child.startsWith(Path.SEPARATOR)) {\n          // This is a mount point with children\n          exists \u003d true;\n          child \u003d child.substring(1);\n\n          // We only return immediate children\n          int fin \u003d child.indexOf(Path.SEPARATOR);\n          if (fin \u003e -1) {\n            child \u003d child.substring(0, fin);\n          }\n          if (!child.isEmpty()) {\n            children.add(child);\n          }\n        }\n      }\n      if (!exists) {\n        return null;\n      }\n      return new LinkedList\u003c\u003e(children);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java"
      }
    },
    "6f0de2731806628b5b01bd1350225692147590da": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10880. Federation Mount Table State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 58b97df661441150d35abd44b3a8606206b46441)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "6f0de2731806628b5b01bd1350225692147590da",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,47 @@\n+  public List\u003cString\u003e getMountPoints(final String path) throws IOException {\n+    verifyMountTable();\n+\n+    Set\u003cString\u003e children \u003d new TreeSet\u003c\u003e();\n+    readLock.lock();\n+    try {\n+      String from \u003d path;\n+      String to \u003d path + Character.MAX_VALUE;\n+      SortedMap\u003cString, MountTable\u003e subMap \u003d this.tree.subMap(from, to);\n+\n+      boolean exists \u003d false;\n+      for (String subPath : subMap.keySet()) {\n+        String child \u003d subPath;\n+\n+        // Special case for /\n+        if (!path.equals(Path.SEPARATOR)) {\n+          // Get the children\n+          int ini \u003d path.length();\n+          child \u003d subPath.substring(ini);\n+        }\n+\n+        if (child.isEmpty()) {\n+          // This is a mount point but without children\n+          exists \u003d true;\n+        } else if (child.startsWith(Path.SEPARATOR)) {\n+          // This is a mount point with children\n+          exists \u003d true;\n+          child \u003d child.substring(1);\n+\n+          // We only return immediate children\n+          int fin \u003d child.indexOf(Path.SEPARATOR);\n+          if (fin \u003e -1) {\n+            child \u003d child.substring(0, fin);\n+          }\n+          if (!child.isEmpty()) {\n+            children.add(child);\n+          }\n+        }\n+      }\n+      if (!exists) {\n+        return null;\n+      }\n+      return new LinkedList\u003c\u003e(children);\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cString\u003e getMountPoints(final String path) throws IOException {\n    verifyMountTable();\n\n    Set\u003cString\u003e children \u003d new TreeSet\u003c\u003e();\n    readLock.lock();\n    try {\n      String from \u003d path;\n      String to \u003d path + Character.MAX_VALUE;\n      SortedMap\u003cString, MountTable\u003e subMap \u003d this.tree.subMap(from, to);\n\n      boolean exists \u003d false;\n      for (String subPath : subMap.keySet()) {\n        String child \u003d subPath;\n\n        // Special case for /\n        if (!path.equals(Path.SEPARATOR)) {\n          // Get the children\n          int ini \u003d path.length();\n          child \u003d subPath.substring(ini);\n        }\n\n        if (child.isEmpty()) {\n          // This is a mount point but without children\n          exists \u003d true;\n        } else if (child.startsWith(Path.SEPARATOR)) {\n          // This is a mount point with children\n          exists \u003d true;\n          child \u003d child.substring(1);\n\n          // We only return immediate children\n          int fin \u003d child.indexOf(Path.SEPARATOR);\n          if (fin \u003e -1) {\n            child \u003d child.substring(0, fin);\n          }\n          if (!child.isEmpty()) {\n            children.add(child);\n          }\n        }\n      }\n      if (!exists) {\n        return null;\n      }\n      return new LinkedList\u003c\u003e(children);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/MountTableResolver.java"
    }
  }
}