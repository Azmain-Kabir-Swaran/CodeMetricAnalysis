{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "setupAsyncLazyPersistThread",
  "functionId": "setupAsyncLazyPersistThread___v-FsVolumeImpl(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 3144,
  "functionEndLine": 3163,
  "numCommitsSeen": 197,
  "timeTaken": 5575,
  "changeHistory": [
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "e453989a5722e653bd97e3e54f9bbdffc9454fba",
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671"
  ],
  "changeHistoryShort": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ybodychange",
    "e453989a5722e653bd97e3e54f9bbdffc9454fba": "Ybodychange",
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "30/09/16 11:11 PM",
      "commitNameOld": "fe9ebe20ab113567f0777c11cb48ce0d3ce587a8",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 9.68,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void setupAsyncLazyPersistThread(final FsVolumeImpl v) {\n     // Skip transient volumes\n     if (v.isTransientStorage()) {\n       return;\n     }\n     boolean ramDiskConfigured \u003d ramDiskConfigured();\n     // Add thread for DISK volume if RamDisk is configured\n     if (ramDiskConfigured \u0026\u0026\n         asyncLazyPersistService !\u003d null \u0026\u0026\n-        !asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n-      asyncLazyPersistService.addVolume(v.getCurrentDir());\n+        !asyncLazyPersistService.queryVolume(v)) {\n+      asyncLazyPersistService.addVolume(v);\n     }\n \n     // Remove thread for DISK volume if RamDisk is not configured\n     if (!ramDiskConfigured \u0026\u0026\n         asyncLazyPersistService !\u003d null \u0026\u0026\n-        asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n-      asyncLazyPersistService.removeVolume(v.getCurrentDir());\n+        asyncLazyPersistService.queryVolume(v)) {\n+      asyncLazyPersistService.removeVolume(v);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupAsyncLazyPersistThread(final FsVolumeImpl v) {\n    // Skip transient volumes\n    if (v.isTransientStorage()) {\n      return;\n    }\n    boolean ramDiskConfigured \u003d ramDiskConfigured();\n    // Add thread for DISK volume if RamDisk is configured\n    if (ramDiskConfigured \u0026\u0026\n        asyncLazyPersistService !\u003d null \u0026\u0026\n        !asyncLazyPersistService.queryVolume(v)) {\n      asyncLazyPersistService.addVolume(v);\n    }\n\n    // Remove thread for DISK volume if RamDisk is not configured\n    if (!ramDiskConfigured \u0026\u0026\n        asyncLazyPersistService !\u003d null \u0026\u0026\n        asyncLazyPersistService.queryVolume(v)) {\n      asyncLazyPersistService.removeVolume(v);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "e453989a5722e653bd97e3e54f9bbdffc9454fba": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8157. Writes to RAM DISK reserve locked memory for block files. (Arpit Agarwal)\n",
      "commitDate": "16/05/15 9:05 AM",
      "commitName": "e453989a5722e653bd97e3e54f9bbdffc9454fba",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/05/15 9:11 PM",
      "commitNameOld": "6633a8474d7e92fa028ede8fd6c6e41b6c5887f5",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 9.5,
      "commitsBetweenForRepo": 157,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   private void setupAsyncLazyPersistThread(final FsVolumeImpl v) {\n     // Skip transient volumes\n     if (v.isTransientStorage()) {\n       return;\n     }\n     boolean ramDiskConfigured \u003d ramDiskConfigured();\n     // Add thread for DISK volume if RamDisk is configured\n     if (ramDiskConfigured \u0026\u0026\n+        asyncLazyPersistService !\u003d null \u0026\u0026\n         !asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n       asyncLazyPersistService.addVolume(v.getCurrentDir());\n     }\n \n     // Remove thread for DISK volume if RamDisk is not configured\n     if (!ramDiskConfigured \u0026\u0026\n+        asyncLazyPersistService !\u003d null \u0026\u0026\n         asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n       asyncLazyPersistService.removeVolume(v.getCurrentDir());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupAsyncLazyPersistThread(final FsVolumeImpl v) {\n    // Skip transient volumes\n    if (v.isTransientStorage()) {\n      return;\n    }\n    boolean ramDiskConfigured \u003d ramDiskConfigured();\n    // Add thread for DISK volume if RamDisk is configured\n    if (ramDiskConfigured \u0026\u0026\n        asyncLazyPersistService !\u003d null \u0026\u0026\n        !asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n      asyncLazyPersistService.addVolume(v.getCurrentDir());\n    }\n\n    // Remove thread for DISK volume if RamDisk is not configured\n    if (!ramDiskConfigured \u0026\u0026\n        asyncLazyPersistService !\u003d null \u0026\u0026\n        asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n      asyncLazyPersistService.removeVolume(v.getCurrentDir());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7035. Make adding a new data directory to the DataNode an atomic operation and improve error handling (Lei Xu via Colin P. McCabe)\n",
      "commitDate": "30/10/14 5:31 PM",
      "commitName": "a9331fe9b071fdcdae0c6c747d7b6b306142e671",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,18 @@\n+  private void setupAsyncLazyPersistThread(final FsVolumeImpl v) {\n+    // Skip transient volumes\n+    if (v.isTransientStorage()) {\n+      return;\n+    }\n+    boolean ramDiskConfigured \u003d ramDiskConfigured();\n+    // Add thread for DISK volume if RamDisk is configured\n+    if (ramDiskConfigured \u0026\u0026\n+        !asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n+      asyncLazyPersistService.addVolume(v.getCurrentDir());\n+    }\n+\n+    // Remove thread for DISK volume if RamDisk is not configured\n+    if (!ramDiskConfigured \u0026\u0026\n+        asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n+      asyncLazyPersistService.removeVolume(v.getCurrentDir());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupAsyncLazyPersistThread(final FsVolumeImpl v) {\n    // Skip transient volumes\n    if (v.isTransientStorage()) {\n      return;\n    }\n    boolean ramDiskConfigured \u003d ramDiskConfigured();\n    // Add thread for DISK volume if RamDisk is configured\n    if (ramDiskConfigured \u0026\u0026\n        !asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n      asyncLazyPersistService.addVolume(v.getCurrentDir());\n    }\n\n    // Remove thread for DISK volume if RamDisk is not configured\n    if (!ramDiskConfigured \u0026\u0026\n        asyncLazyPersistService.queryVolume(v.getCurrentDir())) {\n      asyncLazyPersistService.removeVolume(v.getCurrentDir());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java"
    }
  }
}