{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientRMService.java",
  "functionName": "refreshScheduler",
  "functionId": "refreshScheduler___planName-String__contract-ReservationDefinition__reservationId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
  "functionStartLine": 1528,
  "functionEndLine": 1538,
  "numCommitsSeen": 128,
  "timeTaken": 3691,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "2798723a5443d04455b9d79c48d61f435ab52267",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "2798723a5443d04455b9d79c48d61f435ab52267": "Ybodychange",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n   private void refreshScheduler(String planName,\n       ReservationDefinition contract, String reservationId) {\n     if ((contract.getArrival() - clock.getTime()) \u003c reservationSystem\n         .getPlanFollowerTimeStep()) {\n-      LOG.debug(MessageFormat\n-          .format(\n-              \"Reservation {0} is within threshold so attempting to create synchronously.\",\n-              reservationId));\n+      LOG.debug(\"Reservation {} is within threshold so attempting to\"\n+          + \" create synchronously.\", reservationId);\n       reservationSystem.synchronizePlan(planName, true);\n       LOG.info(MessageFormat.format(\"Created reservation {0} synchronously.\",\n           reservationId));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshScheduler(String planName,\n      ReservationDefinition contract, String reservationId) {\n    if ((contract.getArrival() - clock.getTime()) \u003c reservationSystem\n        .getPlanFollowerTimeStep()) {\n      LOG.debug(\"Reservation {} is within threshold so attempting to\"\n          + \" create synchronously.\", reservationId);\n      reservationSystem.synchronizePlan(planName, true);\n      LOG.info(MessageFormat.format(\"Created reservation {0} synchronously.\",\n          reservationId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "2798723a5443d04455b9d79c48d61f435ab52267": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3739. Add reservation system recovery to RM recovery process. Contributed by  Subru Krishnan.\n",
      "commitDate": "22/10/15 6:51 AM",
      "commitName": "2798723a5443d04455b9d79c48d61f435ab52267",
      "commitAuthor": "Anubhav Dhoot",
      "commitDateOld": "15/10/15 5:12 PM",
      "commitNameOld": "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void refreshScheduler(String planName,\n       ReservationDefinition contract, String reservationId) {\n     if ((contract.getArrival() - clock.getTime()) \u003c reservationSystem\n         .getPlanFollowerTimeStep()) {\n       LOG.debug(MessageFormat\n           .format(\n               \"Reservation {0} is within threshold so attempting to create synchronously.\",\n               reservationId));\n-      reservationSystem.synchronizePlan(planName);\n+      reservationSystem.synchronizePlan(planName, true);\n       LOG.info(MessageFormat.format(\"Created reservation {0} synchronously.\",\n           reservationId));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshScheduler(String planName,\n      ReservationDefinition contract, String reservationId) {\n    if ((contract.getArrival() - clock.getTime()) \u003c reservationSystem\n        .getPlanFollowerTimeStep()) {\n      LOG.debug(MessageFormat\n          .format(\n              \"Reservation {0} is within threshold so attempting to create synchronously.\",\n              reservationId));\n      reservationSystem.synchronizePlan(planName, true);\n      LOG.info(MessageFormat.format(\"Created reservation {0} synchronously.\",\n          reservationId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
      "extendedDetails": {}
    },
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,13 @@\n+  private void refreshScheduler(String planName,\n+      ReservationDefinition contract, String reservationId) {\n+    if ((contract.getArrival() - clock.getTime()) \u003c reservationSystem\n+        .getPlanFollowerTimeStep()) {\n+      LOG.debug(MessageFormat\n+          .format(\n+              \"Reservation {0} is within threshold so attempting to create synchronously.\",\n+              reservationId));\n+      reservationSystem.synchronizePlan(planName);\n+      LOG.info(MessageFormat.format(\"Created reservation {0} synchronously.\",\n+          reservationId));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshScheduler(String planName,\n      ReservationDefinition contract, String reservationId) {\n    if ((contract.getArrival() - clock.getTime()) \u003c reservationSystem\n        .getPlanFollowerTimeStep()) {\n      LOG.debug(MessageFormat\n          .format(\n              \"Reservation {0} is within threshold so attempting to create synchronously.\",\n              reservationId));\n      reservationSystem.synchronizePlan(planName);\n      LOG.info(MessageFormat.format(\"Created reservation {0} synchronously.\",\n          reservationId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java"
    }
  }
}