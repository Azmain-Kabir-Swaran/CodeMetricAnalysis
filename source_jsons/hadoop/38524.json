{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FifoScheduler.java",
  "functionName": "initScheduler",
  "functionId": "initScheduler___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
  "functionStartLine": 241,
  "functionEndLine": 254,
  "numCommitsSeen": 103,
  "timeTaken": 3286,
  "changeHistory": [
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb",
    "a4ba451802c6c61a0c804809740d46dd76059f25"
  ],
  "changeHistoryShort": {
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ybodychange",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": "Ybodychange",
    "a4ba451802c6c61a0c804809740d46dd76059f25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "23/08/17 9:56 AM",
      "commitNameOld": "f49843a9888ad8fe5c1bb4c16bfb5217d693009d",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 19.97,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,14 @@\n   private synchronized void initScheduler(Configuration conf) {\n     validateConf(conf);\n     //Use ConcurrentSkipListMap because applications need to be ordered\n     this.applications \u003d\n         new ConcurrentSkipListMap\u003c\u003e();\n-    this.minimumAllocation \u003d\n-        Resources.createResource(conf.getInt(\n-            YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n-            YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\n-    initMaximumResourceCapability(\n-        Resources.createResource(conf.getInt(\n-            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n-            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB),\n-          conf.getInt(\n-            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n-            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES)));\n+    this.minimumAllocation \u003d super.getMinimumAllocation();\n+    initMaximumResourceCapability(super.getMaximumAllocation());\n     this.usePortForNodeName \u003d conf.getBoolean(\n         YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n     this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n         conf);\n     this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void initScheduler(Configuration conf) {\n    validateConf(conf);\n    //Use ConcurrentSkipListMap because applications need to be ordered\n    this.applications \u003d\n        new ConcurrentSkipListMap\u003c\u003e();\n    this.minimumAllocation \u003d super.getMinimumAllocation();\n    initMaximumResourceCapability(super.getMaximumAllocation());\n    this.usePortForNodeName \u003d conf.getBoolean(\n        YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n    this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n        conf);\n    this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "commitDateOld": "20/10/16 9:17 PM",
      "commitNameOld": "754cb4e30fac1c5fe8d44626968c0ddbfe459335",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 17.58,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private synchronized void initScheduler(Configuration conf) {\n     validateConf(conf);\n     //Use ConcurrentSkipListMap because applications need to be ordered\n     this.applications \u003d\n-        new ConcurrentSkipListMap\u003cApplicationId, SchedulerApplication\u003cFiCaSchedulerApp\u003e\u003e();\n+        new ConcurrentSkipListMap\u003c\u003e();\n     this.minimumAllocation \u003d\n         Resources.createResource(conf.getInt(\n             YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n             YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\n     initMaximumResourceCapability(\n         Resources.createResource(conf.getInt(\n             YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n             YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB),\n           conf.getInt(\n             YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n             YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES)));\n     this.usePortForNodeName \u003d conf.getBoolean(\n         YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n     this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n         conf);\n     this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void initScheduler(Configuration conf) {\n    validateConf(conf);\n    //Use ConcurrentSkipListMap because applications need to be ordered\n    this.applications \u003d\n        new ConcurrentSkipListMap\u003c\u003e();\n    this.minimumAllocation \u003d\n        Resources.createResource(conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\n    initMaximumResourceCapability(\n        Resources.createResource(conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB),\n          conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES)));\n    this.usePortForNodeName \u003d conf.getBoolean(\n        YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n    this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n        conf);\n    this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2604. Scheduler should consider max-allocation-* in conjunction with the largest node. (Robert Kanter via kasha)\n",
      "commitDate": "21/11/14 10:32 AM",
      "commitName": "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "15/10/14 6:33 PM",
      "commitNameOld": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 36.71,
      "commitsBetweenForRepo": 344,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   private synchronized void initScheduler(Configuration conf) {\n     validateConf(conf);\n     //Use ConcurrentSkipListMap because applications need to be ordered\n     this.applications \u003d\n         new ConcurrentSkipListMap\u003cApplicationId, SchedulerApplication\u003cFiCaSchedulerApp\u003e\u003e();\n     this.minimumAllocation \u003d\n         Resources.createResource(conf.getInt(\n             YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n             YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\n-    this.maximumAllocation \u003d\n+    initMaximumResourceCapability(\n         Resources.createResource(conf.getInt(\n             YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n-            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB));\n+            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB),\n+          conf.getInt(\n+            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n+            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES)));\n     this.usePortForNodeName \u003d conf.getBoolean(\n         YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n         YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n     this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n         conf);\n     this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void initScheduler(Configuration conf) {\n    validateConf(conf);\n    //Use ConcurrentSkipListMap because applications need to be ordered\n    this.applications \u003d\n        new ConcurrentSkipListMap\u003cApplicationId, SchedulerApplication\u003cFiCaSchedulerApp\u003e\u003e();\n    this.minimumAllocation \u003d\n        Resources.createResource(conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\n    initMaximumResourceCapability(\n        Resources.createResource(conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB),\n          conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES)));\n    this.usePortForNodeName \u003d conf.getBoolean(\n        YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n    this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n        conf);\n    this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "a4ba451802c6c61a0c804809740d46dd76059f25": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1474. Make schedulers services. (Tsuyoshi Ozawa via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598908 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/05/14 12:33 PM",
      "commitName": "a4ba451802c6c61a0c804809740d46dd76059f25",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,20 @@\n+  private synchronized void initScheduler(Configuration conf) {\n+    validateConf(conf);\n+    //Use ConcurrentSkipListMap because applications need to be ordered\n+    this.applications \u003d\n+        new ConcurrentSkipListMap\u003cApplicationId, SchedulerApplication\u003cFiCaSchedulerApp\u003e\u003e();\n+    this.minimumAllocation \u003d\n+        Resources.createResource(conf.getInt(\n+            YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n+            YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\n+    this.maximumAllocation \u003d\n+        Resources.createResource(conf.getInt(\n+            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n+            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB));\n+    this.usePortForNodeName \u003d conf.getBoolean(\n+        YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n+        YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n+    this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n+        conf);\n+    this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void initScheduler(Configuration conf) {\n    validateConf(conf);\n    //Use ConcurrentSkipListMap because applications need to be ordered\n    this.applications \u003d\n        new ConcurrentSkipListMap\u003cApplicationId, SchedulerApplication\u003cFiCaSchedulerApp\u003e\u003e();\n    this.minimumAllocation \u003d\n        Resources.createResource(conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB));\n    this.maximumAllocation \u003d\n        Resources.createResource(conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB));\n    this.usePortForNodeName \u003d conf.getBoolean(\n        YarnConfiguration.RM_SCHEDULER_INCLUDE_PORT_IN_NODE_NAME,\n        YarnConfiguration.DEFAULT_RM_SCHEDULER_USE_PORT_FOR_NODE_NAME);\n    this.metrics \u003d QueueMetrics.forQueue(DEFAULT_QUEUE_NAME, null, false,\n        conf);\n    this.activeUsersManager \u003d new ActiveUsersManager(metrics);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
    }
  }
}