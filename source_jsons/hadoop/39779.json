{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UsersManager.java",
  "functionName": "updateNonActiveUsersResourceUsage",
  "functionId": "updateNonActiveUsersResourceUsage___userName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
  "functionStartLine": 975,
  "functionEndLine": 1014,
  "numCommitsSeen": 13,
  "timeTaken": 3127,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
    "c1386a90d7ff65b57be00a7245de82c31abb4665",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": "Ybodychange",
    "c1386a90d7ff65b57be00a7245de82c31abb4665": "Ybodychange",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   private void updateNonActiveUsersResourceUsage(String userName) {\n+    this.writeLock.lock();\n     try {\n-      this.writeLock.lock();\n \n       // For UT case: We might need to add the user to users list.\n       User user \u003d getUser(userName);\n       if (user \u003d\u003d null) return;\n \n       ResourceUsage resourceUsage \u003d user.getResourceUsage();\n       // If User is moved to non-active list, moved resource usage from\n       // non-active to active list.\n       if (activeUsersSet.contains(userName)) {\n         activeUsersSet.remove(userName);\n         nonActiveUsersSet.add(userName);\n         activeUsersTimesWeights \u003d sumActiveUsersTimesWeights();\n \n         // Update total resource usage of active and non-active after user is\n         // moved from active to non-active.\n         for (String partition : resourceUsage.getNodePartitionsSet()) {\n           totalResUsageForActiveUsers.decUsed(partition,\n               resourceUsage.getUsed(partition));\n           totalResUsageForNonActiveUsers.incUsed(partition,\n               resourceUsage.getUsed(partition));\n \n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"User \u0027\" + userName\n                 + \"\u0027 has become non-active.Hence move user to non-active list.\"\n                 + \"Active users size \u003d \" + activeUsersSet.size()\n                 + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n                 + \"Total Resource usage for active users\u003d\"\n                 + totalResUsageForActiveUsers.getAllUsed() + \".\"\n                 + \"Total Resource usage for non-active users\u003d\"\n                 + totalResUsageForNonActiveUsers.getAllUsed());\n           }\n         }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNonActiveUsersResourceUsage(String userName) {\n    this.writeLock.lock();\n    try {\n\n      // For UT case: We might need to add the user to users list.\n      User user \u003d getUser(userName);\n      if (user \u003d\u003d null) return;\n\n      ResourceUsage resourceUsage \u003d user.getResourceUsage();\n      // If User is moved to non-active list, moved resource usage from\n      // non-active to active list.\n      if (activeUsersSet.contains(userName)) {\n        activeUsersSet.remove(userName);\n        nonActiveUsersSet.add(userName);\n        activeUsersTimesWeights \u003d sumActiveUsersTimesWeights();\n\n        // Update total resource usage of active and non-active after user is\n        // moved from active to non-active.\n        for (String partition : resourceUsage.getNodePartitionsSet()) {\n          totalResUsageForActiveUsers.decUsed(partition,\n              resourceUsage.getUsed(partition));\n          totalResUsageForNonActiveUsers.incUsed(partition,\n              resourceUsage.getUsed(partition));\n\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"User \u0027\" + userName\n                + \"\u0027 has become non-active.Hence move user to non-active list.\"\n                + \"Active users size \u003d \" + activeUsersSet.size()\n                + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n                + \"Total Resource usage for active users\u003d\"\n                + totalResUsageForActiveUsers.getAllUsed() + \".\"\n                + \"Total Resource usage for non-active users\u003d\"\n                + totalResUsageForNonActiveUsers.getAllUsed());\n          }\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5892. Support user-specific minimum user limit percentage in Capacity Scheduler. Contributed by Eric Payne.\n",
      "commitDate": "22/06/17 11:50 PM",
      "commitName": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthor": "Sunil G",
      "commitDateOld": "22/05/17 2:26 PM",
      "commitNameOld": "c583ab02c730be0a63d974039a78f2dc67dc2db6",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 31.39,
      "commitsBetweenForRepo": 156,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,40 @@\n   private void updateNonActiveUsersResourceUsage(String userName) {\n     try {\n       this.writeLock.lock();\n \n       // For UT case: We might need to add the user to users list.\n       User user \u003d getUser(userName);\n       if (user \u003d\u003d null) return;\n \n       ResourceUsage resourceUsage \u003d user.getResourceUsage();\n       // If User is moved to non-active list, moved resource usage from\n       // non-active to active list.\n       if (activeUsersSet.contains(userName)) {\n         activeUsersSet.remove(userName);\n         nonActiveUsersSet.add(userName);\n+        activeUsersTimesWeights \u003d sumActiveUsersTimesWeights();\n \n         // Update total resource usage of active and non-active after user is\n         // moved from active to non-active.\n         for (String partition : resourceUsage.getNodePartitionsSet()) {\n           totalResUsageForActiveUsers.decUsed(partition,\n               resourceUsage.getUsed(partition));\n           totalResUsageForNonActiveUsers.incUsed(partition,\n               resourceUsage.getUsed(partition));\n \n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"User \u0027\" + userName\n                 + \"\u0027 has become non-active.Hence move user to non-active list.\"\n                 + \"Active users size \u003d \" + activeUsersSet.size()\n                 + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n                 + \"Total Resource usage for active users\u003d\"\n                 + totalResUsageForActiveUsers.getAllUsed() + \".\"\n                 + \"Total Resource usage for non-active users\u003d\"\n                 + totalResUsageForNonActiveUsers.getAllUsed());\n           }\n         }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNonActiveUsersResourceUsage(String userName) {\n    try {\n      this.writeLock.lock();\n\n      // For UT case: We might need to add the user to users list.\n      User user \u003d getUser(userName);\n      if (user \u003d\u003d null) return;\n\n      ResourceUsage resourceUsage \u003d user.getResourceUsage();\n      // If User is moved to non-active list, moved resource usage from\n      // non-active to active list.\n      if (activeUsersSet.contains(userName)) {\n        activeUsersSet.remove(userName);\n        nonActiveUsersSet.add(userName);\n        activeUsersTimesWeights \u003d sumActiveUsersTimesWeights();\n\n        // Update total resource usage of active and non-active after user is\n        // moved from active to non-active.\n        for (String partition : resourceUsage.getNodePartitionsSet()) {\n          totalResUsageForActiveUsers.decUsed(partition,\n              resourceUsage.getUsed(partition));\n          totalResUsageForNonActiveUsers.incUsed(partition,\n              resourceUsage.getUsed(partition));\n\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"User \u0027\" + userName\n                + \"\u0027 has become non-active.Hence move user to non-active list.\"\n                + \"Active users size \u003d \" + activeUsersSet.size()\n                + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n                + \"Total Resource usage for active users\u003d\"\n                + totalResUsageForActiveUsers.getAllUsed() + \".\"\n                + \"Total Resource usage for non-active users\u003d\"\n                + totalResUsageForNonActiveUsers.getAllUsed());\n          }\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "c1386a90d7ff65b57be00a7245de82c31abb4665": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6248. user is not removed from UsersManager’s when app is killed with pending container requests. Contributed by Eric Payne.\n",
      "commitDate": "04/03/17 12:16 AM",
      "commitName": "c1386a90d7ff65b57be00a7245de82c31abb4665",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/02/17 10:23 AM",
      "commitNameOld": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 22.58,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,39 @@\n   private void updateNonActiveUsersResourceUsage(String userName) {\n     try {\n       this.writeLock.lock();\n \n       // For UT case: We might need to add the user to users list.\n-      User user \u003d getUserAndAddIfAbsent(userName);\n+      User user \u003d getUser(userName);\n+      if (user \u003d\u003d null) return;\n+\n       ResourceUsage resourceUsage \u003d user.getResourceUsage();\n       // If User is moved to non-active list, moved resource usage from\n       // non-active to active list.\n       if (activeUsersSet.contains(userName)) {\n         activeUsersSet.remove(userName);\n         nonActiveUsersSet.add(userName);\n \n         // Update total resource usage of active and non-active after user is\n         // moved from active to non-active.\n         for (String partition : resourceUsage.getNodePartitionsSet()) {\n           totalResUsageForActiveUsers.decUsed(partition,\n               resourceUsage.getUsed(partition));\n           totalResUsageForNonActiveUsers.incUsed(partition,\n               resourceUsage.getUsed(partition));\n \n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"User \u0027\" + userName\n                 + \"\u0027 has become non-active.Hence move user to non-active list.\"\n                 + \"Active users size \u003d \" + activeUsersSet.size()\n                 + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n                 + \"Total Resource usage for active users\u003d\"\n                 + totalResUsageForActiveUsers.getAllUsed() + \".\"\n                 + \"Total Resource usage for non-active users\u003d\"\n                 + totalResUsageForNonActiveUsers.getAllUsed());\n           }\n         }\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNonActiveUsersResourceUsage(String userName) {\n    try {\n      this.writeLock.lock();\n\n      // For UT case: We might need to add the user to users list.\n      User user \u003d getUser(userName);\n      if (user \u003d\u003d null) return;\n\n      ResourceUsage resourceUsage \u003d user.getResourceUsage();\n      // If User is moved to non-active list, moved resource usage from\n      // non-active to active list.\n      if (activeUsersSet.contains(userName)) {\n        activeUsersSet.remove(userName);\n        nonActiveUsersSet.add(userName);\n\n        // Update total resource usage of active and non-active after user is\n        // moved from active to non-active.\n        for (String partition : resourceUsage.getNodePartitionsSet()) {\n          totalResUsageForActiveUsers.decUsed(partition,\n              resourceUsage.getUsed(partition));\n          totalResUsageForNonActiveUsers.incUsed(partition,\n              resourceUsage.getUsed(partition));\n\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"User \u0027\" + userName\n                + \"\u0027 has become non-active.Hence move user to non-active list.\"\n                + \"Active users size \u003d \" + activeUsersSet.size()\n                + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n                + \"Total Resource usage for active users\u003d\"\n                + totalResUsageForActiveUsers.getAllUsed() + \".\"\n                + \"Total Resource usage for non-active users\u003d\"\n                + totalResUsageForNonActiveUsers.getAllUsed());\n          }\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "09/02/17 10:23 AM",
      "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,37 @@\n+  private void updateNonActiveUsersResourceUsage(String userName) {\n+    try {\n+      this.writeLock.lock();\n+\n+      // For UT case: We might need to add the user to users list.\n+      User user \u003d getUserAndAddIfAbsent(userName);\n+      ResourceUsage resourceUsage \u003d user.getResourceUsage();\n+      // If User is moved to non-active list, moved resource usage from\n+      // non-active to active list.\n+      if (activeUsersSet.contains(userName)) {\n+        activeUsersSet.remove(userName);\n+        nonActiveUsersSet.add(userName);\n+\n+        // Update total resource usage of active and non-active after user is\n+        // moved from active to non-active.\n+        for (String partition : resourceUsage.getNodePartitionsSet()) {\n+          totalResUsageForActiveUsers.decUsed(partition,\n+              resourceUsage.getUsed(partition));\n+          totalResUsageForNonActiveUsers.incUsed(partition,\n+              resourceUsage.getUsed(partition));\n+\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"User \u0027\" + userName\n+                + \"\u0027 has become non-active.Hence move user to non-active list.\"\n+                + \"Active users size \u003d \" + activeUsersSet.size()\n+                + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n+                + \"Total Resource usage for active users\u003d\"\n+                + totalResUsageForActiveUsers.getAllUsed() + \".\"\n+                + \"Total Resource usage for non-active users\u003d\"\n+                + totalResUsageForNonActiveUsers.getAllUsed());\n+          }\n+        }\n+      }\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNonActiveUsersResourceUsage(String userName) {\n    try {\n      this.writeLock.lock();\n\n      // For UT case: We might need to add the user to users list.\n      User user \u003d getUserAndAddIfAbsent(userName);\n      ResourceUsage resourceUsage \u003d user.getResourceUsage();\n      // If User is moved to non-active list, moved resource usage from\n      // non-active to active list.\n      if (activeUsersSet.contains(userName)) {\n        activeUsersSet.remove(userName);\n        nonActiveUsersSet.add(userName);\n\n        // Update total resource usage of active and non-active after user is\n        // moved from active to non-active.\n        for (String partition : resourceUsage.getNodePartitionsSet()) {\n          totalResUsageForActiveUsers.decUsed(partition,\n              resourceUsage.getUsed(partition));\n          totalResUsageForNonActiveUsers.incUsed(partition,\n              resourceUsage.getUsed(partition));\n\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"User \u0027\" + userName\n                + \"\u0027 has become non-active.Hence move user to non-active list.\"\n                + \"Active users size \u003d \" + activeUsersSet.size()\n                + \"Non-active users size \u003d \" + nonActiveUsersSet.size()\n                + \"Total Resource usage for active users\u003d\"\n                + totalResUsageForActiveUsers.getAllUsed() + \".\"\n                + \"Total Resource usage for non-active users\u003d\"\n                + totalResUsageForNonActiveUsers.getAllUsed());\n          }\n        }\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java"
    }
  }
}