{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceTimelinePublisher.java",
  "functionName": "serviceAttemptUnregistered",
  "functionId": "serviceAttemptUnregistered___context-ServiceContext__status-FinalApplicationStatus__diagnostics-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
  "functionStartLine": 133,
  "functionEndLine": 150,
  "numCommitsSeen": 20,
  "timeTaken": 4624,
  "changeHistory": [
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2"
  ],
  "changeHistoryShort": {
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c": "Ymultichange(Yparameterchange,Ybodychange)",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymultichange(Yparameterchange,Ybodychange)",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8488.  Added SUCCEEDED/FAILED states to YARN service.\n            Contributed by Suma Shivaprasad\n",
      "commitDate": "28/08/18 10:55 AM",
      "commitName": "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8488.  Added SUCCEEDED/FAILED states to YARN service.\n            Contributed by Suma Shivaprasad\n",
          "commitDate": "28/08/18 10:55 AM",
          "commitName": "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "02/04/18 7:26 AM",
          "commitNameOld": "a0bde7d525911680f9e5fb0a939604865eb8e164",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 148.15,
          "commitsBetweenForRepo": 1585,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   public void serviceAttemptUnregistered(ServiceContext context,\n-      String diagnostics) {\n+      FinalApplicationStatus status, String diagnostics) {\n     TimelineEntity entity \u003d createServiceAttemptEntity(\n         context.attemptId.getApplicationId().toString());\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n-        FinalApplicationStatus.ENDED);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, status);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent finishEvent \u003d new TimelineEvent();\n     finishEvent\n         .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n     finishEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(finishEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context,\n      FinalApplicationStatus status, String diagnostics) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, status);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[context-ServiceContext, diagnostics-String]",
            "newValue": "[context-ServiceContext, status-FinalApplicationStatus, diagnostics-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8488.  Added SUCCEEDED/FAILED states to YARN service.\n            Contributed by Suma Shivaprasad\n",
          "commitDate": "28/08/18 10:55 AM",
          "commitName": "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "02/04/18 7:26 AM",
          "commitNameOld": "a0bde7d525911680f9e5fb0a939604865eb8e164",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 148.15,
          "commitsBetweenForRepo": 1585,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   public void serviceAttemptUnregistered(ServiceContext context,\n-      String diagnostics) {\n+      FinalApplicationStatus status, String diagnostics) {\n     TimelineEntity entity \u003d createServiceAttemptEntity(\n         context.attemptId.getApplicationId().toString());\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n-        FinalApplicationStatus.ENDED);\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE, status);\n     entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent finishEvent \u003d new TimelineEvent();\n     finishEvent\n         .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n     finishEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(finishEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context,\n      FinalApplicationStatus status, String diagnostics) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE, status);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context,\n      String diagnostics) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        FinalApplicationStatus.ENDED);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n-  public void serviceAttemptUnregistered(ServiceContext context) {\n+  public void serviceAttemptUnregistered(ServiceContext context,\n+      String diagnostics) {\n     TimelineEntity entity \u003d createServiceAttemptEntity(\n         context.attemptId.getApplicationId().toString());\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n-        FinalApplicationStatus.FAILED);\n+        FinalApplicationStatus.ENDED);\n+    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent finishEvent \u003d new TimelineEvent();\n     finishEvent\n         .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n     finishEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(finishEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context,\n      String diagnostics) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        FinalApplicationStatus.ENDED);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[context-ServiceContext]",
            "newValue": "[context-ServiceContext, diagnostics-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n-  public void serviceAttemptUnregistered(ServiceContext context) {\n+  public void serviceAttemptUnregistered(ServiceContext context,\n+      String diagnostics) {\n     TimelineEntity entity \u003d createServiceAttemptEntity(\n         context.attemptId.getApplicationId().toString());\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n     entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n-        FinalApplicationStatus.FAILED);\n+        FinalApplicationStatus.ENDED);\n+    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n     entity.addInfo(entityInfos);\n \n     // add an event\n     TimelineEvent finishEvent \u003d new TimelineEvent();\n     finishEvent\n         .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n     finishEvent.setTimestamp(System.currentTimeMillis());\n     entity.addEvent(finishEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context,\n      String diagnostics) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        FinalApplicationStatus.ENDED);\n    entityInfos.put(DIAGNOSTICS_INFO, diagnostics);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,17 @@\n-  public void serviceAttemptUnregistered(AppState appState,\n-      ActionStopSlider stopAction) {\n-    long currentTimeMillis \u003d System.currentTimeMillis();\n-\n-    TimelineEntity entity \u003d\n-        createServiceAttemptEntity(appState.getClusterStatus().getId());\n-\n-    // add info\n+  public void serviceAttemptUnregistered(ServiceContext context) {\n+    TimelineEntity entity \u003d createServiceAttemptEntity(\n+        context.attemptId.getApplicationId().toString());\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n-        stopAction.getExitCode());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n-        stopAction.getFinalApplicationStatus().toString());\n-    if (stopAction.getMessage() !\u003d null) {\n-      entityInfos.put(SliderTimelineMetricsConstants.EXIT_REASON,\n-          stopAction.getMessage());\n-    }\n-    if (stopAction.getEx() !\u003d null) {\n-      entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n-          stopAction.getEx().toString());\n-    }\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n+        FinalApplicationStatus.FAILED);\n     entity.addInfo(entityInfos);\n \n     // add an event\n-    TimelineEvent startEvent \u003d new TimelineEvent();\n-    startEvent\n-        .setId(SliderTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n-    startEvent.setTimestamp(currentTimeMillis);\n-    entity.addEvent(startEvent);\n+    TimelineEvent finishEvent \u003d new TimelineEvent();\n+    finishEvent\n+        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n+    finishEvent.setTimestamp(System.currentTimeMillis());\n+    entity.addEvent(finishEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        FinalApplicationStatus.FAILED);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,17 @@\n-  public void serviceAttemptUnregistered(AppState appState,\n-      ActionStopSlider stopAction) {\n-    long currentTimeMillis \u003d System.currentTimeMillis();\n-\n-    TimelineEntity entity \u003d\n-        createServiceAttemptEntity(appState.getClusterStatus().getId());\n-\n-    // add info\n+  public void serviceAttemptUnregistered(ServiceContext context) {\n+    TimelineEntity entity \u003d createServiceAttemptEntity(\n+        context.attemptId.getApplicationId().toString());\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n-        stopAction.getExitCode());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n-        stopAction.getFinalApplicationStatus().toString());\n-    if (stopAction.getMessage() !\u003d null) {\n-      entityInfos.put(SliderTimelineMetricsConstants.EXIT_REASON,\n-          stopAction.getMessage());\n-    }\n-    if (stopAction.getEx() !\u003d null) {\n-      entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n-          stopAction.getEx().toString());\n-    }\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n+        FinalApplicationStatus.FAILED);\n     entity.addInfo(entityInfos);\n \n     // add an event\n-    TimelineEvent startEvent \u003d new TimelineEvent();\n-    startEvent\n-        .setId(SliderTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n-    startEvent.setTimestamp(currentTimeMillis);\n-    entity.addEvent(startEvent);\n+    TimelineEvent finishEvent \u003d new TimelineEvent();\n+    finishEvent\n+        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n+    finishEvent.setTimestamp(System.currentTimeMillis());\n+    entity.addEvent(finishEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        FinalApplicationStatus.FAILED);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,17 @@\n-  public void serviceAttemptUnregistered(AppState appState,\n-      ActionStopSlider stopAction) {\n-    long currentTimeMillis \u003d System.currentTimeMillis();\n-\n-    TimelineEntity entity \u003d\n-        createServiceAttemptEntity(appState.getClusterStatus().getId());\n-\n-    // add info\n+  public void serviceAttemptUnregistered(ServiceContext context) {\n+    TimelineEntity entity \u003d createServiceAttemptEntity(\n+        context.attemptId.getApplicationId().toString());\n     Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n-        stopAction.getExitCode());\n-    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n-        stopAction.getFinalApplicationStatus().toString());\n-    if (stopAction.getMessage() !\u003d null) {\n-      entityInfos.put(SliderTimelineMetricsConstants.EXIT_REASON,\n-          stopAction.getMessage());\n-    }\n-    if (stopAction.getEx() !\u003d null) {\n-      entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n-          stopAction.getEx().toString());\n-    }\n+    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n+        FinalApplicationStatus.FAILED);\n     entity.addInfo(entityInfos);\n \n     // add an event\n-    TimelineEvent startEvent \u003d new TimelineEvent();\n-    startEvent\n-        .setId(SliderTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n-    startEvent.setTimestamp(currentTimeMillis);\n-    entity.addEvent(startEvent);\n+    TimelineEvent finishEvent \u003d new TimelineEvent();\n+    finishEvent\n+        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n+    finishEvent.setTimestamp(System.currentTimeMillis());\n+    entity.addEvent(finishEvent);\n \n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceAttemptUnregistered(ServiceContext context) {\n    TimelineEntity entity \u003d createServiceAttemptEntity(\n        context.attemptId.getApplicationId().toString());\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(ServiceTimelineMetricsConstants.STATE,\n        FinalApplicationStatus.FAILED);\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent finishEvent \u003d new TimelineEvent();\n    finishEvent\n        .setId(ServiceTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    finishEvent.setTimestamp(System.currentTimeMillis());\n    entity.addEvent(finishEvent);\n\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[appState-AppState, stopAction-ActionStopSlider]",
            "newValue": "[context-ServiceContext]"
          }
        }
      ]
    },
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6395. Integrate service app master to write data into ATSv2. Contributed by Rohith Sharma K S\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f4216b7bba511cc79439e7dab9f0282d831a16b2",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,32 @@\n+  public void serviceAttemptUnregistered(AppState appState,\n+      ActionStopSlider stopAction) {\n+    long currentTimeMillis \u003d System.currentTimeMillis();\n+\n+    TimelineEntity entity \u003d\n+        createServiceAttemptEntity(appState.getClusterStatus().getId());\n+\n+    // add info\n+    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n+        stopAction.getExitCode());\n+    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n+        stopAction.getFinalApplicationStatus().toString());\n+    if (stopAction.getMessage() !\u003d null) {\n+      entityInfos.put(SliderTimelineMetricsConstants.EXIT_REASON,\n+          stopAction.getMessage());\n+    }\n+    if (stopAction.getEx() !\u003d null) {\n+      entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n+          stopAction.getEx().toString());\n+    }\n+    entity.addInfo(entityInfos);\n+\n+    // add an event\n+    TimelineEvent startEvent \u003d new TimelineEvent();\n+    startEvent\n+        .setId(SliderTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n+    startEvent.setTimestamp(currentTimeMillis);\n+    entity.addEvent(startEvent);\n+\n+    putEntity(entity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceAttemptUnregistered(AppState appState,\n      ActionStopSlider stopAction) {\n    long currentTimeMillis \u003d System.currentTimeMillis();\n\n    TimelineEntity entity \u003d\n        createServiceAttemptEntity(appState.getClusterStatus().getId());\n\n    // add info\n    Map\u003cString, Object\u003e entityInfos \u003d new HashMap\u003cString, Object\u003e();\n    entityInfos.put(SliderTimelineMetricsConstants.EXIT_STATUS_CODE,\n        stopAction.getExitCode());\n    entityInfos.put(SliderTimelineMetricsConstants.STATE,\n        stopAction.getFinalApplicationStatus().toString());\n    if (stopAction.getMessage() !\u003d null) {\n      entityInfos.put(SliderTimelineMetricsConstants.EXIT_REASON,\n          stopAction.getMessage());\n    }\n    if (stopAction.getEx() !\u003d null) {\n      entityInfos.put(SliderTimelineMetricsConstants.DIAGNOSTICS_INFO,\n          stopAction.getEx().toString());\n    }\n    entity.addInfo(entityInfos);\n\n    // add an event\n    TimelineEvent startEvent \u003d new TimelineEvent();\n    startEvent\n        .setId(SliderTimelineEvent.SERVICE_ATTEMPT_UNREGISTERED.toString());\n    startEvent.setTimestamp(currentTimeMillis);\n    entity.addEvent(startEvent);\n\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/ServiceTimelinePublisher.java"
    }
  }
}