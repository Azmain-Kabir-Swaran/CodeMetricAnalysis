{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureBlobFileSystem.java",
  "functionName": "mkdirs",
  "functionId": "mkdirs___f-Path(modifiers-final)__permission-FsPermission(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
  "functionStartLine": 394,
  "functionEndLine": 416,
  "numCommitsSeen": 34,
  "timeTaken": 3109,
  "changeHistory": [
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc",
    "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d",
    "d5da9928c99073abdd27b66f794fe4312434ff96",
    "9c1e4e81399913f180131f4faa95604087c6d962",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc": "Ybodychange",
    "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d": "Ybodychange",
    "d5da9928c99073abdd27b66f794fe4312434ff96": "Ybodychange",
    "9c1e4e81399913f180131f4faa95604087c6d962": "Ybodychange",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": "Ybodychange",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": "Ybodychange",
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16730: ABFS: Support for Shared Access Signatures (SAS). Contributed by Sneha Vijayarajan.\n",
      "commitDate": "27/02/20 10:27 AM",
      "commitName": "791270a2e5e31546ff5c1ef4fa8bad6852b906dc",
      "commitAuthor": "Sneha Vijayarajan",
      "commitDateOld": "14/01/20 5:28 PM",
      "commitNameOld": "c36f09deb91454c086926c01f872d8ca4419aee0",
      "commitAuthorOld": "Clemens Wolff",
      "daysBetweenCommits": 43.71,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n \n     trailingPeriodCheck(f);\n \n     final Path parentFolder \u003d f.getParent();\n     if (parentFolder \u003d\u003d null) {\n       // Cannot create root\n       return true;\n     }\n \n     Path qualifiedPath \u003d makeQualified(f);\n-    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n \n     try {\n       abfsStore.createDirectory(qualifiedPath, permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n           FsPermission.getUMask(getConf()));\n       return true;\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n\n    trailingPeriodCheck(f);\n\n    final Path parentFolder \u003d f.getParent();\n    if (parentFolder \u003d\u003d null) {\n      // Cannot create root\n      return true;\n    }\n\n    Path qualifiedPath \u003d makeQualified(f);\n\n    try {\n      abfsStore.createDirectory(qualifiedPath, permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n          FsPermission.getUMask(getConf()));\n      return true;\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n      return true;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15860. ABFS: Throw exception when directory / file name ends with a period (.). Contributed by Shweta Yakkali.\n",
      "commitDate": "02/01/19 8:33 AM",
      "commitName": "13f0ee21f2c17ebacaa35e14ee01f39624f38a8d",
      "commitAuthor": "Sean Mackrory",
      "commitDateOld": "04/12/18 5:39 AM",
      "commitNameOld": "a8bbd818d5bc4762324bcdb7cf1fdd5c2f93891b",
      "commitAuthorOld": "Da Zhou",
      "daysBetweenCommits": 29.12,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n \n+    trailingPeriodCheck(f);\n+\n     final Path parentFolder \u003d f.getParent();\n     if (parentFolder \u003d\u003d null) {\n       // Cannot create root\n       return true;\n     }\n \n     Path qualifiedPath \u003d makeQualified(f);\n     performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n \n     try {\n       abfsStore.createDirectory(qualifiedPath, permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n           FsPermission.getUMask(getConf()));\n       return true;\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n\n    trailingPeriodCheck(f);\n\n    final Path parentFolder \u003d f.getParent();\n    if (parentFolder \u003d\u003d null) {\n      // Cannot create root\n      return true;\n    }\n\n    Path qualifiedPath \u003d makeQualified(f);\n    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n\n    try {\n      abfsStore.createDirectory(qualifiedPath, permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n          FsPermission.getUMask(getConf()));\n      return true;\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n      return true;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "d5da9928c99073abdd27b66f794fe4312434ff96": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15723. ABFS: Ranger Support.\nContributed by Yuan Gao.\n",
      "commitDate": "25/09/18 11:13 AM",
      "commitName": "d5da9928c99073abdd27b66f794fe4312434ff96",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/09/18 3:56 PM",
      "commitNameOld": "8e831ba458ab5ebe9c919c76d66615bbef63f82e",
      "commitAuthorOld": "Sean Mackrory",
      "daysBetweenCommits": 5.8,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n \n     final Path parentFolder \u003d f.getParent();\n     if (parentFolder \u003d\u003d null) {\n       // Cannot create root\n       return true;\n     }\n \n+    Path qualifiedPath \u003d makeQualified(f);\n+    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n+\n     try {\n-      abfsStore.createDirectory(makeQualified(f), permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n+      abfsStore.createDirectory(qualifiedPath, permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n           FsPermission.getUMask(getConf()));\n       return true;\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n\n    final Path parentFolder \u003d f.getParent();\n    if (parentFolder \u003d\u003d null) {\n      // Cannot create root\n      return true;\n    }\n\n    Path qualifiedPath \u003d makeQualified(f);\n    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n\n    try {\n      abfsStore.createDirectory(qualifiedPath, permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n          FsPermission.getUMask(getConf()));\n      return true;\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n      return true;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "9c1e4e81399913f180131f4faa95604087c6d962": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15661. ABFS: Add support for ACL.\nContributed by Junhua Gu and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "9c1e4e81399913f180131f4faa95604087c6d962",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "cc5cc60c4162a2d788c80ebbbe69ca49f3eb90e6",
      "commitAuthorOld": "Thomas Marquardt",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n     LOG.debug(\n         \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n \n     final Path parentFolder \u003d f.getParent();\n     if (parentFolder \u003d\u003d null) {\n       // Cannot create root\n       return true;\n     }\n \n     try {\n-      abfsStore.createDirectory(makeQualified(f));\n+      abfsStore.createDirectory(makeQualified(f), permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n+          FsPermission.getUMask(getConf()));\n       return true;\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n\n    final Path parentFolder \u003d f.getParent();\n    if (parentFolder \u003d\u003d null) {\n      // Cannot create root\n      return true;\n    }\n\n    try {\n      abfsStore.createDirectory(makeQualified(f), permission \u003d\u003d null ? FsPermission.getDirDefault() : permission,\n          FsPermission.getUMask(getConf()));\n      return true;\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n      return true;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15446. ABFS: tune imports \u0026 javadocs; stabilise tests.\nContributed by Steve Loughran and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n-    this.LOG.debug(\n-        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f.toString(), permission);\n+    LOG.debug(\n+        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n \n     final Path parentFolder \u003d f.getParent();\n     if (parentFolder \u003d\u003d null) {\n       // Cannot create root\n       return true;\n     }\n \n     try {\n       abfsStore.createDirectory(makeQualified(f));\n       return true;\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n    LOG.debug(\n        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f, permission);\n\n    final Path parentFolder \u003d f.getParent();\n    if (parentFolder \u003d\u003d null) {\n      // Cannot create root\n      return true;\n    }\n\n    try {\n      abfsStore.createDirectory(makeQualified(f));\n      return true;\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n      return true;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n     this.LOG.debug(\n         \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f.toString(), permission);\n \n     final Path parentFolder \u003d f.getParent();\n     if (parentFolder \u003d\u003d null) {\n       // Cannot create root\n       return true;\n     }\n \n     try {\n-      abfsHttpService.createDirectory(this, makeQualified(f));\n+      abfsStore.createDirectory(makeQualified(f));\n       return true;\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n    this.LOG.debug(\n        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f.toString(), permission);\n\n    final Path parentFolder \u003d f.getParent();\n    if (parentFolder \u003d\u003d null) {\n      // Cannot create root\n      return true;\n    }\n\n    try {\n      abfsStore.createDirectory(makeQualified(f));\n      return true;\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n      return true;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,18 @@\n+  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n+    this.LOG.debug(\n+        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f.toString(), permission);\n+\n+    final Path parentFolder \u003d f.getParent();\n+    if (parentFolder \u003d\u003d null) {\n+      // Cannot create root\n+      return true;\n+    }\n+\n+    try {\n+      abfsHttpService.createDirectory(this, makeQualified(f));\n+      return true;\n+    } catch (AzureBlobFileSystemException ex) {\n+      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n+      return true;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean mkdirs(final Path f, final FsPermission permission) throws IOException {\n    this.LOG.debug(\n        \"AzureBlobFileSystem.mkdirs path: {} permissions: {}\", f.toString(), permission);\n\n    final Path parentFolder \u003d f.getParent();\n    if (parentFolder \u003d\u003d null) {\n      // Cannot create root\n      return true;\n    }\n\n    try {\n      abfsHttpService.createDirectory(this, makeQualified(f));\n      return true;\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(f, ex, AzureServiceErrorCode.PATH_ALREADY_EXISTS);\n      return true;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java"
    }
  }
}