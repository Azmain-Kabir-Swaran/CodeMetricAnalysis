{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityAppPlacementAllocator.java",
  "functionName": "getPreferredNodeIterator",
  "functionId": "getPreferredNodeIterator___candidateNodeSet-CandidateNodeSet__N__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
  "functionStartLine": 97,
  "functionEndLine": 114,
  "numCommitsSeen": 16,
  "timeTaken": 2950,
  "changeHistory": [
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "9ca54f4810de182195263bd594afb56dab564105"
  ],
  "changeHistoryShort": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Ybodychange",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "9ca54f4810de182195263bd594afb56dab564105": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "21/08/18 4:00 AM",
      "commitNameOld": "54d0bf8935e35aad0f4d67df358ceb970cfcd713",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,18 @@\n   public Iterator\u003cN\u003e getPreferredNodeIterator(\n       CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n     // Now only handle the case that single node in the candidateNodeSet\n     // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n     // in.\n \n     N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n-    if (null !\u003d singleNode) {\n+    if (singleNode !\u003d null) {\n       return IteratorUtils.singletonIterator(singleNode);\n     }\n \n-    return IteratorUtils.emptyIterator();\n+    // singleNode will be null if Multi-node placement lookup is enabled, and\n+    // hence could consider sorting policies.\n+    return multiNodeSortingManager.getMultiNodeSortIterator(\n+        candidateNodeSet.getAllNodes().values(),\n+        candidateNodeSet.getPartition(),\n+        multiNodeSortPolicyName);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Iterator\u003cN\u003e getPreferredNodeIterator(\n      CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n    // Now only handle the case that single node in the candidateNodeSet\n    // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n    // in.\n\n    N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n    if (singleNode !\u003d null) {\n      return IteratorUtils.singletonIterator(singleNode);\n    }\n\n    // singleNode will be null if Multi-node placement lookup is enabled, and\n    // hence could consider sorting policies.\n    return multiNodeSortingManager.getMultiNodeSortIterator(\n        candidateNodeSet.getAllNodes().values(),\n        candidateNodeSet.getPartition(),\n        multiNodeSortPolicyName);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
      "extendedDetails": {}
    },
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
          "commitDate": "09/11/17 1:01 PM",
          "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
          "commitAuthor": "Konstantinos Karanasos",
          "commitDateOld": "09/11/17 12:12 PM",
          "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   public Iterator\u003cN\u003e getPreferredNodeIterator(\n-      PlacementSet\u003cN\u003e clusterPlacementSet) {\n-    // Now only handle the case that single node in placementSet\n-    // TODO, Add support to multi-hosts inside placement-set which is passed in.\n+      CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n+    // Now only handle the case that single node in the candidateNodeSet\n+    // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n+    // in.\n \n-    N singleNode \u003d PlacementSetUtils.getSingleNode(clusterPlacementSet);\n+    N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n     if (null !\u003d singleNode) {\n       return IteratorUtils.singletonIterator(singleNode);\n     }\n \n     return IteratorUtils.emptyIterator();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Iterator\u003cN\u003e getPreferredNodeIterator(\n      CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n    // Now only handle the case that single node in the candidateNodeSet\n    // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n    // in.\n\n    N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n    if (null !\u003d singleNode) {\n      return IteratorUtils.singletonIterator(singleNode);\n    }\n\n    return IteratorUtils.emptyIterator();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
          "commitDate": "09/11/17 1:01 PM",
          "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
          "commitAuthor": "Konstantinos Karanasos",
          "commitDateOld": "09/11/17 12:12 PM",
          "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   public Iterator\u003cN\u003e getPreferredNodeIterator(\n-      PlacementSet\u003cN\u003e clusterPlacementSet) {\n-    // Now only handle the case that single node in placementSet\n-    // TODO, Add support to multi-hosts inside placement-set which is passed in.\n+      CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n+    // Now only handle the case that single node in the candidateNodeSet\n+    // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n+    // in.\n \n-    N singleNode \u003d PlacementSetUtils.getSingleNode(clusterPlacementSet);\n+    N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n     if (null !\u003d singleNode) {\n       return IteratorUtils.singletonIterator(singleNode);\n     }\n \n     return IteratorUtils.emptyIterator();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Iterator\u003cN\u003e getPreferredNodeIterator(\n      CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n    // Now only handle the case that single node in the candidateNodeSet\n    // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n    // in.\n\n    N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n    if (null !\u003d singleNode) {\n      return IteratorUtils.singletonIterator(singleNode);\n    }\n\n    return IteratorUtils.emptyIterator();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
          "commitDate": "09/11/17 1:01 PM",
          "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
          "commitAuthor": "Konstantinos Karanasos",
          "commitDateOld": "09/11/17 12:12 PM",
          "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   public Iterator\u003cN\u003e getPreferredNodeIterator(\n-      PlacementSet\u003cN\u003e clusterPlacementSet) {\n-    // Now only handle the case that single node in placementSet\n-    // TODO, Add support to multi-hosts inside placement-set which is passed in.\n+      CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n+    // Now only handle the case that single node in the candidateNodeSet\n+    // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n+    // in.\n \n-    N singleNode \u003d PlacementSetUtils.getSingleNode(clusterPlacementSet);\n+    N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n     if (null !\u003d singleNode) {\n       return IteratorUtils.singletonIterator(singleNode);\n     }\n \n     return IteratorUtils.emptyIterator();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Iterator\u003cN\u003e getPreferredNodeIterator(\n      CandidateNodeSet\u003cN\u003e candidateNodeSet) {\n    // Now only handle the case that single node in the candidateNodeSet\n    // TODO, Add support to multi-hosts inside candidateNodeSet which is passed\n    // in.\n\n    N singleNode \u003d CandidateNodeSetUtils.getSingleNode(candidateNodeSet);\n    if (null !\u003d singleNode) {\n      return IteratorUtils.singletonIterator(singleNode);\n    }\n\n    return IteratorUtils.emptyIterator();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {
            "oldValue": "[clusterPlacementSet-PlacementSet\u003cN\u003e]",
            "newValue": "[candidateNodeSet-CandidateNodeSet\u003cN\u003e]"
          }
        }
      ]
    },
    "9ca54f4810de182195263bd594afb56dab564105": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
      "commitDate": "28/12/16 9:18 AM",
      "commitName": "9ca54f4810de182195263bd594afb56dab564105",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,12 @@\n+  public Iterator\u003cN\u003e getPreferredNodeIterator(\n+      PlacementSet\u003cN\u003e clusterPlacementSet) {\n+    // Now only handle the case that single node in placementSet\n+    // TODO, Add support to multi-hosts inside placement-set which is passed in.\n+\n+    N singleNode \u003d PlacementSetUtils.getSingleNode(clusterPlacementSet);\n+    if (null !\u003d singleNode) {\n+      return IteratorUtils.singletonIterator(singleNode);\n+    }\n+\n+    return IteratorUtils.emptyIterator();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Iterator\u003cN\u003e getPreferredNodeIterator(\n      PlacementSet\u003cN\u003e clusterPlacementSet) {\n    // Now only handle the case that single node in placementSet\n    // TODO, Add support to multi-hosts inside placement-set which is passed in.\n\n    N singleNode \u003d PlacementSetUtils.getSingleNode(clusterPlacementSet);\n    if (null !\u003d singleNode) {\n      return IteratorUtils.singletonIterator(singleNode);\n    }\n\n    return IteratorUtils.emptyIterator();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java"
    }
  }
}