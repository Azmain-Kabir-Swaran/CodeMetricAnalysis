{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameNodeRpcServer.java",
  "functionName": "setErasureCodingPolicy",
  "functionId": "setErasureCodingPolicy___src-String__ecPolicyName-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
  "functionStartLine": 2251,
  "functionEndLine": 2271,
  "numCommitsSeen": 520,
  "timeTaken": 5388,
  "changeHistory": [
    "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f",
    "82ef9accafe7318278efb169678e17065e082c8e"
  ],
  "changeHistoryShort": {
    "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f": "Ybodychange",
    "82ef9accafe7318278efb169678e17065e082c8e": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11975. Provide a system-default EC policy. Contributed by Huichun Lu\n",
      "commitDate": "08/08/17 7:12 PM",
      "commitName": "a53b8b6fdce111b1e35ad0dc563eb53d1c58462f",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "07/08/17 4:30 AM",
      "commitNameOld": "0b67436068899497e99c86f37fd4887ca188fae2",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 1.61,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,21 @@\n   public void setErasureCodingPolicy(String src, String ecPolicyName)\n       throws IOException {\n     checkNNStartup();\n     final CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n     if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n       return;\n     }\n     boolean success \u003d false;\n     try {\n+      if (ecPolicyName \u003d\u003d null) {\n+        ecPolicyName \u003d defaultECPolicyName;\n+        LOG.trace(\"No policy name is specified, \" +\n+            \"set the default policy name instead\");\n+      }\n+      LOG.trace(\"Set erasure coding policy \" + ecPolicyName + \" on \" + src);\n       namesystem.setErasureCodingPolicy(src, ecPolicyName, cacheEntry !\u003d null);\n       success \u003d true;\n     } finally {\n       RetryCache.setState(cacheEntry, success);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setErasureCodingPolicy(String src, String ecPolicyName)\n      throws IOException {\n    checkNNStartup();\n    final CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return;\n    }\n    boolean success \u003d false;\n    try {\n      if (ecPolicyName \u003d\u003d null) {\n        ecPolicyName \u003d defaultECPolicyName;\n        LOG.trace(\"No policy name is specified, \" +\n            \"set the default policy name instead\");\n      }\n      LOG.trace(\"Set erasure coding policy \" + ecPolicyName + \" on \" + src);\n      namesystem.setErasureCodingPolicy(src, ecPolicyName, cacheEntry !\u003d null);\n      success \u003d true;\n    } finally {\n      RetryCache.setState(cacheEntry, success);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
      "extendedDetails": {}
    },
    "82ef9accafe7318278efb169678e17065e082c8e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11428. Change setErasureCodingPolicy to take a required string EC policy name. Contributed by Andrew Wang.\n",
      "commitDate": "01/03/17 2:36 AM",
      "commitName": "82ef9accafe7318278efb169678e17065e082c8e",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11428. Change setErasureCodingPolicy to take a required string EC policy name. Contributed by Andrew Wang.\n",
          "commitDate": "01/03/17 2:36 AM",
          "commitName": "82ef9accafe7318278efb169678e17065e082c8e",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "24/01/17 4:58 PM",
          "commitNameOld": "b57368b6f893cb27d77fc9425e116f1312f4790f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 35.4,
          "commitsBetweenForRepo": 178,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void setErasureCodingPolicy(String src, ErasureCodingPolicy ecPolicy)\n+  public void setErasureCodingPolicy(String src, String ecPolicyName)\n       throws IOException {\n     checkNNStartup();\n     final CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n     if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n       return;\n     }\n     boolean success \u003d false;\n     try {\n-      namesystem.setErasureCodingPolicy(src, ecPolicy, cacheEntry !\u003d null);\n+      namesystem.setErasureCodingPolicy(src, ecPolicyName, cacheEntry !\u003d null);\n       success \u003d true;\n     } finally {\n       RetryCache.setState(cacheEntry, success);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setErasureCodingPolicy(String src, String ecPolicyName)\n      throws IOException {\n    checkNNStartup();\n    final CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return;\n    }\n    boolean success \u003d false;\n    try {\n      namesystem.setErasureCodingPolicy(src, ecPolicyName, cacheEntry !\u003d null);\n      success \u003d true;\n    } finally {\n      RetryCache.setState(cacheEntry, success);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
          "extendedDetails": {
            "oldValue": "[src-String, ecPolicy-ErasureCodingPolicy]",
            "newValue": "[src-String, ecPolicyName-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11428. Change setErasureCodingPolicy to take a required string EC policy name. Contributed by Andrew Wang.\n",
          "commitDate": "01/03/17 2:36 AM",
          "commitName": "82ef9accafe7318278efb169678e17065e082c8e",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "24/01/17 4:58 PM",
          "commitNameOld": "b57368b6f893cb27d77fc9425e116f1312f4790f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 35.4,
          "commitsBetweenForRepo": 178,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void setErasureCodingPolicy(String src, ErasureCodingPolicy ecPolicy)\n+  public void setErasureCodingPolicy(String src, String ecPolicyName)\n       throws IOException {\n     checkNNStartup();\n     final CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n     if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n       return;\n     }\n     boolean success \u003d false;\n     try {\n-      namesystem.setErasureCodingPolicy(src, ecPolicy, cacheEntry !\u003d null);\n+      namesystem.setErasureCodingPolicy(src, ecPolicyName, cacheEntry !\u003d null);\n       success \u003d true;\n     } finally {\n       RetryCache.setState(cacheEntry, success);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setErasureCodingPolicy(String src, String ecPolicyName)\n      throws IOException {\n    checkNNStartup();\n    final CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return;\n    }\n    boolean success \u003d false;\n    try {\n      namesystem.setErasureCodingPolicy(src, ecPolicyName, cacheEntry !\u003d null);\n      success \u003d true;\n    } finally {\n      RetryCache.setState(cacheEntry, success);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}