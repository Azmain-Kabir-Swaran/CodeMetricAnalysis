{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityAppPlacementAllocator.java",
  "functionName": "initialize",
  "functionId": "initialize___appSchedulingInfo-AppSchedulingInfo__schedulerRequestKey-SchedulerRequestKey__rmContext-RMContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
  "functionStartLine": 77,
  "functionEndLine": 93,
  "numCommitsSeen": 12,
  "timeTaken": 1553,
  "changeHistory": [
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181"
  ],
  "changeHistoryShort": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,17 @@\n+  public void initialize(AppSchedulingInfo appSchedulingInfo,\n+      SchedulerRequestKey schedulerRequestKey, RMContext rmContext) {\n+    super.initialize(appSchedulingInfo, schedulerRequestKey, rmContext);\n+    multiNodeSortPolicyName \u003d appSchedulingInfo\n+        .getApplicationSchedulingEnvs().get(\n+            ApplicationSchedulingConfig.ENV_MULTI_NODE_SORTING_POLICY_CLASS);\n+    multiNodeSortingManager \u003d (MultiNodeSortingManager\u003cN\u003e) rmContext\n+        .getMultiNodeSortingManager();\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\n+          \"nodeLookupPolicy used for \" + appSchedulingInfo\n+              .getApplicationId()\n+              + \" is \" + ((multiNodeSortPolicyName !\u003d null) ?\n+              multiNodeSortPolicyName :\n+              \"\"));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(AppSchedulingInfo appSchedulingInfo,\n      SchedulerRequestKey schedulerRequestKey, RMContext rmContext) {\n    super.initialize(appSchedulingInfo, schedulerRequestKey, rmContext);\n    multiNodeSortPolicyName \u003d appSchedulingInfo\n        .getApplicationSchedulingEnvs().get(\n            ApplicationSchedulingConfig.ENV_MULTI_NODE_SORTING_POLICY_CLASS);\n    multiNodeSortingManager \u003d (MultiNodeSortingManager\u003cN\u003e) rmContext\n        .getMultiNodeSortingManager();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\n          \"nodeLookupPolicy used for \" + appSchedulingInfo\n              .getApplicationId()\n              + \" is \" + ((multiNodeSortPolicyName !\u003d null) ?\n              multiNodeSortPolicyName :\n              \"\"));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java"
    }
  }
}