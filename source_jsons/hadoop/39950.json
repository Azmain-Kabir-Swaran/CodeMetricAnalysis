{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractManagedParentQueue.java",
  "functionName": "removeChildQueue",
  "functionId": "removeChildQueue___childQueue-CSQueue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
  "functionStartLine": 96,
  "functionEndLine": 115,
  "numCommitsSeen": 15,
  "timeTaken": 5395,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "eb3e40b833b9d82c1556843f960194dc42e482f3"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "eb3e40b833b9d82c1556843f960194dc42e482f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "10/06/19 2:33 PM",
      "commitNameOld": "9191e08f0ad4ebc2a3b776c4cc71d0fc5c053beb",
      "commitAuthorOld": "Suma Shivaprasad",
      "daysBetweenCommits": 288.57,
      "commitsBetweenForRepo": 1653,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public void removeChildQueue(CSQueue childQueue)\n       throws SchedulerDynamicEditException {\n     writeLock.lock();\n     try {\n       if (childQueue.getCapacity() \u003e 0) {\n         throw new SchedulerDynamicEditException(\n             \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n       }\n       Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n       while (qiter.hasNext()) {\n         CSQueue cs \u003d qiter.next();\n         if (cs.equals(childQueue)) {\n           qiter.remove();\n-          LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+          LOG.debug(\"Removed child queue: {}\", cs.getQueuePath());\n         }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeChildQueue(CSQueue childQueue)\n      throws SchedulerDynamicEditException {\n    writeLock.lock();\n    try {\n      if (childQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(childQueue)) {\n          qiter.remove();\n          LOG.debug(\"Removed child queue: {}\", cs.getQueuePath());\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n   public void removeChildQueue(CSQueue childQueue)\n       throws SchedulerDynamicEditException {\n     writeLock.lock();\n     try {\n       if (childQueue.getCapacity() \u003e 0) {\n         throw new SchedulerDynamicEditException(\n             \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n       }\n       Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n       while (qiter.hasNext()) {\n         CSQueue cs \u003d qiter.next();\n         if (cs.equals(childQueue)) {\n           qiter.remove();\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n-          }\n+          LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n         }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeChildQueue(CSQueue childQueue)\n      throws SchedulerDynamicEditException {\n    writeLock.lock();\n    try {\n      if (childQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(childQueue)) {\n          qiter.remove();\n          LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "08/12/17 3:10 PM",
      "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 453.94,
      "commitsBetweenForRepo": 3961,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void removeChildQueue(CSQueue childQueue)\n       throws SchedulerDynamicEditException {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       if (childQueue.getCapacity() \u003e 0) {\n         throw new SchedulerDynamicEditException(\n             \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n       }\n       Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n       while (qiter.hasNext()) {\n         CSQueue cs \u003d qiter.next();\n         if (cs.equals(childQueue)) {\n           qiter.remove();\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n           }\n         }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeChildQueue(CSQueue childQueue)\n      throws SchedulerDynamicEditException {\n    writeLock.lock();\n    try {\n      if (childQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(childQueue)) {\n          qiter.remove();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n          }\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
      "extendedDetails": {}
    },
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
      "commitDate": "06/11/17 9:38 PM",
      "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
          "commitDate": "06/11/17 9:38 PM",
          "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 3:45 PM",
          "commitNameOld": "8f214dc4f8423250947a3f0027f70b9ab402ab62",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  void removeChildQueue(CSQueue remQueue)\n+  public void removeChildQueue(CSQueue childQueue)\n       throws SchedulerDynamicEditException {\n     try {\n       writeLock.lock();\n-      if (remQueue.getCapacity() \u003e 0) {\n+      if (childQueue.getCapacity() \u003e 0) {\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n+            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n       }\n       Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n       while (qiter.hasNext()) {\n         CSQueue cs \u003d qiter.next();\n-        if (cs.equals(remQueue)) {\n+        if (cs.equals(childQueue)) {\n           qiter.remove();\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n           }\n         }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeChildQueue(CSQueue childQueue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (childQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(childQueue)) {\n          qiter.remove();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n          }\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/PlanQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
            "oldMethodName": "removeChildQueue",
            "newMethodName": "removeChildQueue"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
          "commitDate": "06/11/17 9:38 PM",
          "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 3:45 PM",
          "commitNameOld": "8f214dc4f8423250947a3f0027f70b9ab402ab62",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  void removeChildQueue(CSQueue remQueue)\n+  public void removeChildQueue(CSQueue childQueue)\n       throws SchedulerDynamicEditException {\n     try {\n       writeLock.lock();\n-      if (remQueue.getCapacity() \u003e 0) {\n+      if (childQueue.getCapacity() \u003e 0) {\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n+            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n       }\n       Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n       while (qiter.hasNext()) {\n         CSQueue cs \u003d qiter.next();\n-        if (cs.equals(remQueue)) {\n+        if (cs.equals(childQueue)) {\n           qiter.remove();\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n           }\n         }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeChildQueue(CSQueue childQueue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (childQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(childQueue)) {\n          qiter.remove();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n          }\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
          "commitDate": "06/11/17 9:38 PM",
          "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 3:45 PM",
          "commitNameOld": "8f214dc4f8423250947a3f0027f70b9ab402ab62",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  void removeChildQueue(CSQueue remQueue)\n+  public void removeChildQueue(CSQueue childQueue)\n       throws SchedulerDynamicEditException {\n     try {\n       writeLock.lock();\n-      if (remQueue.getCapacity() \u003e 0) {\n+      if (childQueue.getCapacity() \u003e 0) {\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n+            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n       }\n       Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n       while (qiter.hasNext()) {\n         CSQueue cs \u003d qiter.next();\n-        if (cs.equals(remQueue)) {\n+        if (cs.equals(childQueue)) {\n           qiter.remove();\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n           }\n         }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeChildQueue(CSQueue childQueue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (childQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(childQueue)) {\n          qiter.remove();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n          }\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
          "commitDate": "06/11/17 9:38 PM",
          "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 3:45 PM",
          "commitNameOld": "8f214dc4f8423250947a3f0027f70b9ab402ab62",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  void removeChildQueue(CSQueue remQueue)\n+  public void removeChildQueue(CSQueue childQueue)\n       throws SchedulerDynamicEditException {\n     try {\n       writeLock.lock();\n-      if (remQueue.getCapacity() \u003e 0) {\n+      if (childQueue.getCapacity() \u003e 0) {\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n+            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n       }\n       Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n       while (qiter.hasNext()) {\n         CSQueue cs \u003d qiter.next();\n-        if (cs.equals(remQueue)) {\n+        if (cs.equals(childQueue)) {\n           qiter.remove();\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n           }\n         }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void removeChildQueue(CSQueue childQueue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (childQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + childQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(childQueue)) {\n          qiter.remove();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removed child queue: {}\" + cs.getQueueName());\n          }\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "[remQueue-CSQueue]",
            "newValue": "[childQueue-CSQueue]"
          }
        }
      ]
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "12/02/15 2:58 PM",
          "commitNameOld": "18a594257e052e8f10a03e5594e6cc6901dc56be",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 585.34,
          "commitsBetweenForRepo": 4428,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  synchronized void removeChildQueue(CSQueue remQueue)\n+  void removeChildQueue(CSQueue remQueue)\n       throws SchedulerDynamicEditException {\n-    if (remQueue.getCapacity() \u003e 0) {\n-      throw new SchedulerDynamicEditException(\"Queue \" + remQueue\n-          + \" being removed has non zero capacity.\");\n-    }\n-    Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n-    while (qiter.hasNext()) {\n-      CSQueue cs \u003d qiter.next();\n-      if (cs.equals(remQueue)) {\n-        qiter.remove();\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+    try {\n+      writeLock.lock();\n+      if (remQueue.getCapacity() \u003e 0) {\n+        throw new SchedulerDynamicEditException(\n+            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n+      }\n+      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n+      while (qiter.hasNext()) {\n+        CSQueue cs \u003d qiter.next();\n+        if (cs.equals(remQueue)) {\n+          qiter.remove();\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+          }\n         }\n       }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeChildQueue(CSQueue remQueue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (remQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(remQueue)) {\n          qiter.remove();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n          }\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/PlanQueue.java",
          "extendedDetails": {
            "oldValue": "[synchronized]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "12/02/15 2:58 PM",
          "commitNameOld": "18a594257e052e8f10a03e5594e6cc6901dc56be",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 585.34,
          "commitsBetweenForRepo": 4428,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  synchronized void removeChildQueue(CSQueue remQueue)\n+  void removeChildQueue(CSQueue remQueue)\n       throws SchedulerDynamicEditException {\n-    if (remQueue.getCapacity() \u003e 0) {\n-      throw new SchedulerDynamicEditException(\"Queue \" + remQueue\n-          + \" being removed has non zero capacity.\");\n-    }\n-    Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n-    while (qiter.hasNext()) {\n-      CSQueue cs \u003d qiter.next();\n-      if (cs.equals(remQueue)) {\n-        qiter.remove();\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+    try {\n+      writeLock.lock();\n+      if (remQueue.getCapacity() \u003e 0) {\n+        throw new SchedulerDynamicEditException(\n+            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n+      }\n+      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n+      while (qiter.hasNext()) {\n+        CSQueue cs \u003d qiter.next();\n+        if (cs.equals(remQueue)) {\n+          qiter.remove();\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+          }\n         }\n       }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeChildQueue(CSQueue remQueue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (remQueue.getCapacity() \u003e 0) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + remQueue + \" being removed has non zero capacity.\");\n      }\n      Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n      while (qiter.hasNext()) {\n        CSQueue cs \u003d qiter.next();\n        if (cs.equals(remQueue)) {\n          qiter.remove();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n          }\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/PlanQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "eb3e40b833b9d82c1556843f960194dc42e482f3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1707. Introduce APIs to add/remove/resize queues in the CapacityScheduler. Contributed by Carlo Curino and Subru Krishnan\n(cherry picked from commit aac47fda7fecda9fc18ade34d633eca895865a70)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java\n",
      "commitDate": "03/10/14 3:41 PM",
      "commitName": "eb3e40b833b9d82c1556843f960194dc42e482f3",
      "commitAuthor": "carlo curino",
      "diff": "@@ -0,0 +1,17 @@\n+  synchronized void removeChildQueue(CSQueue remQueue)\n+      throws SchedulerDynamicEditException {\n+    if (remQueue.getCapacity() \u003e 0) {\n+      throw new SchedulerDynamicEditException(\"Queue \" + remQueue\n+          + \" being removed has non zero capacity.\");\n+    }\n+    Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n+    while (qiter.hasNext()) {\n+      CSQueue cs \u003d qiter.next();\n+      if (cs.equals(remQueue)) {\n+        qiter.remove();\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void removeChildQueue(CSQueue remQueue)\n      throws SchedulerDynamicEditException {\n    if (remQueue.getCapacity() \u003e 0) {\n      throw new SchedulerDynamicEditException(\"Queue \" + remQueue\n          + \" being removed has non zero capacity.\");\n    }\n    Iterator\u003cCSQueue\u003e qiter \u003d childQueues.iterator();\n    while (qiter.hasNext()) {\n      CSQueue cs \u003d qiter.next();\n      if (cs.equals(remQueue)) {\n        qiter.remove();\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Removed child queue: {}\", cs.getQueueName());\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/PlanQueue.java"
    }
  }
}