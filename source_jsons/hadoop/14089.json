{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AsyncLoggerSet.java",
  "functionName": "getEditLogManifest",
  "functionId": "getEditLogManifest___fromTxnId-long__inProgressOk-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
  "functionStartLine": 278,
  "functionEndLine": 289,
  "numCommitsSeen": 62,
  "timeTaken": 3294,
  "changeHistory": [
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087",
    "8c62c46046656c01b327c378e89d57b4bf37e16e",
    "939f4a9f92ab260aee697d3715946218a7ff769a",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": "Ymultichange(Yparameterchange,Ybodychange)",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": "Ymultichange(Yparameterchange,Ybodychange)",
    "8c62c46046656c01b327c378e89d57b4bf37e16e": "Ymultichange(Yparameterchange,Ybodychange)",
    "939f4a9f92ab260aee697d3715946218a7ff769a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/13 5:32 PM",
      "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "26/11/13 11:28 AM",
          "commitNameOld": "740cf232bd6206a5d31c0afa7b3e7a1e7bc333a1",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.25,
          "commitsBetweenForRepo": 70,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n   public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n-      long fromTxnId, boolean forReading, boolean inProgressOk) {\n+      long fromTxnId, boolean inProgressOk) {\n     Map\u003cAsyncLogger,\n         ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n       ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n-          logger.getEditLogManifest(fromTxnId, forReading, inProgressOk);\n+          logger.getEditLogManifest(fromTxnId, inProgressOk);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n      long fromTxnId, boolean inProgressOk) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId, inProgressOk);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {
            "oldValue": "[fromTxnId-long, forReading-boolean, inProgressOk-boolean]",
            "newValue": "[fromTxnId-long, inProgressOk-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "26/11/13 11:28 AM",
          "commitNameOld": "740cf232bd6206a5d31c0afa7b3e7a1e7bc333a1",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.25,
          "commitsBetweenForRepo": 70,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n   public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n-      long fromTxnId, boolean forReading, boolean inProgressOk) {\n+      long fromTxnId, boolean inProgressOk) {\n     Map\u003cAsyncLogger,\n         ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n       ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n-          logger.getEditLogManifest(fromTxnId, forReading, inProgressOk);\n+          logger.getEditLogManifest(fromTxnId, inProgressOk);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n      long fromTxnId, boolean inProgressOk) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId, inProgressOk);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {}
        }
      ]
    },
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/13 10:19 AM",
      "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "22/05/13 12:37 PM",
          "commitNameOld": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 84.9,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-      getEditLogManifest(long fromTxnId, boolean forReading) {\n+  public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n+      long fromTxnId, boolean forReading, boolean inProgressOk) {\n     Map\u003cAsyncLogger,\n         ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n       ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n-          logger.getEditLogManifest(fromTxnId, forReading);\n+          logger.getEditLogManifest(fromTxnId, forReading, inProgressOk);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n      long fromTxnId, boolean forReading, boolean inProgressOk) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId, forReading, inProgressOk);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {
            "oldValue": "[fromTxnId-long, forReading-boolean]",
            "newValue": "[fromTxnId-long, forReading-boolean, inProgressOk-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "22/05/13 12:37 PM",
          "commitNameOld": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 84.9,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-      getEditLogManifest(long fromTxnId, boolean forReading) {\n+  public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n+      long fromTxnId, boolean forReading, boolean inProgressOk) {\n     Map\u003cAsyncLogger,\n         ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n       ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n-          logger.getEditLogManifest(fromTxnId, forReading);\n+          logger.getEditLogManifest(fromTxnId, forReading, inProgressOk);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuorumCall\u003cAsyncLogger, RemoteEditLogManifest\u003e getEditLogManifest(\n      long fromTxnId, boolean forReading, boolean inProgressOk) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId, forReading, inProgressOk);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c62c46046656c01b327c378e89d57b4bf37e16e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/13 12:37 PM",
      "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "19/09/12 11:52 AM",
          "commitNameOld": "663e7484c04c197eed53f10a7808140f1c955277",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 245.03,
          "commitsBetweenForRepo": 1359,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-      getEditLogManifest(long fromTxnId) {\n+      getEditLogManifest(long fromTxnId, boolean forReading) {\n     Map\u003cAsyncLogger,\n         ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n       ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n-          logger.getEditLogManifest(fromTxnId);\n+          logger.getEditLogManifest(fromTxnId, forReading);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "      getEditLogManifest(long fromTxnId, boolean forReading) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId, forReading);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {
            "oldValue": "[fromTxnId-long]",
            "newValue": "[fromTxnId-long, forReading-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "19/09/12 11:52 AM",
          "commitNameOld": "663e7484c04c197eed53f10a7808140f1c955277",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 245.03,
          "commitsBetweenForRepo": 1359,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-      getEditLogManifest(long fromTxnId) {\n+      getEditLogManifest(long fromTxnId, boolean forReading) {\n     Map\u003cAsyncLogger,\n         ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n       ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n-          logger.getEditLogManifest(fromTxnId);\n+          logger.getEditLogManifest(fromTxnId, forReading);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "      getEditLogManifest(long fromTxnId, boolean forReading) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId, forReading);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {}
        }
      ]
    },
    "939f4a9f92ab260aee697d3715946218a7ff769a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365788 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/12 2:40 PM",
      "commitName": "939f4a9f92ab260aee697d3715946218a7ff769a",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365788 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/12 2:40 PM",
          "commitName": "939f4a9f92ab260aee697d3715946218a7ff769a",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "19/07/12 5:25 PM",
          "commitNameOld": "74d4573a23db5586c6e47ff2277aa7c35237da34",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 5.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n       getEditLogManifest(long fromTxnId) {\n     Map\u003cAsyncLogger,\n-        ListenableFuture\u003cGetEditLogManifestResponseProto\u003e\u003e calls\n+        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n-      ListenableFuture\u003cGetEditLogManifestResponseProto\u003e future \u003d\n+      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n           logger.getEditLogManifest(fromTxnId);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "      getEditLogManifest(long fromTxnId) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {
            "oldValue": "QuorumCall\u003cAsyncLogger,GetEditLogManifestResponseProto\u003e",
            "newValue": "QuorumCall\u003cAsyncLogger,RemoteEditLogManifest\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365788 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/12 2:40 PM",
          "commitName": "939f4a9f92ab260aee697d3715946218a7ff769a",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "19/07/12 5:25 PM",
          "commitNameOld": "74d4573a23db5586c6e47ff2277aa7c35237da34",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 5.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n       getEditLogManifest(long fromTxnId) {\n     Map\u003cAsyncLogger,\n-        ListenableFuture\u003cGetEditLogManifestResponseProto\u003e\u003e calls\n+        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n         \u003d Maps.newHashMap();\n     for (AsyncLogger logger : loggers) {\n-      ListenableFuture\u003cGetEditLogManifestResponseProto\u003e future \u003d\n+      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n           logger.getEditLogManifest(fromTxnId);\n       calls.put(logger, future);\n     }\n     return QuorumCall.create(calls);\n   }\n\\ No newline at end of file\n",
          "actualSource": "      getEditLogManifest(long fromTxnId) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cRemoteEditLogManifest\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cRemoteEditLogManifest\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java",
          "extendedDetails": {}
        }
      ]
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,11 @@\n+      getEditLogManifest(long fromTxnId) {\n+    Map\u003cAsyncLogger,\n+        ListenableFuture\u003cGetEditLogManifestResponseProto\u003e\u003e calls\n+        \u003d Maps.newHashMap();\n+    for (AsyncLogger logger : loggers) {\n+      ListenableFuture\u003cGetEditLogManifestResponseProto\u003e future \u003d\n+          logger.getEditLogManifest(fromTxnId);\n+      calls.put(logger, future);\n+    }\n+    return QuorumCall.create(calls);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      getEditLogManifest(long fromTxnId) {\n    Map\u003cAsyncLogger,\n        ListenableFuture\u003cGetEditLogManifestResponseProto\u003e\u003e calls\n        \u003d Maps.newHashMap();\n    for (AsyncLogger logger : loggers) {\n      ListenableFuture\u003cGetEditLogManifestResponseProto\u003e future \u003d\n          logger.getEditLogManifest(fromTxnId);\n      calls.put(logger, future);\n    }\n    return QuorumCall.create(calls);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/AsyncLoggerSet.java"
    }
  }
}