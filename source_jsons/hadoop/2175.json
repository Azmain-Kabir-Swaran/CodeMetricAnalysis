{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "create",
  "functionId": "create___src-String__permission-FsPermission__flag-EnumSet__CreateFlag____createParent-boolean__replication-short__blockSize-long__progress-Progressable__buffersize-int__checksumOpt-ChecksumOpt__favoredNodes-InetSocketAddress[]__ecPolicyName-String__storagePolicy-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 1254,
  "functionEndLine": 1269,
  "numCommitsSeen": 97,
  "timeTaken": 2287,
  "changeHistory": [
    "0d7a5ac5f526801367a9ec963e6d72783b637d55"
  ],
  "changeHistoryShort": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13209. DistributedFileSystem.create should allow an option to provide StoragePolicy. Contributed by Ayush Saxena.\n",
      "commitDate": "14/02/19 8:43 AM",
      "commitName": "0d7a5ac5f526801367a9ec963e6d72783b637d55",
      "commitAuthor": "Surendra Singh Lilhore",
      "diff": "@@ -0,0 +1,16 @@\n+  public DFSOutputStream create(String src, FsPermission permission,\n+      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n+      long blockSize, Progressable progress, int buffersize,\n+      ChecksumOpt checksumOpt, InetSocketAddress[] favoredNodes,\n+      String ecPolicyName, String storagePolicy)\n+      throws IOException {\n+    checkOpen();\n+    final FsPermission masked \u003d applyUMask(permission);\n+    LOG.debug(\"{}: masked\u003d{}\", src, masked);\n+    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n+        src, masked, flag, createParent, replication, blockSize, progress,\n+        dfsClientConf.createChecksum(checksumOpt),\n+        getFavoredNodesStr(favoredNodes), ecPolicyName, storagePolicy);\n+    beginFileLease(result.getFileId(), result);\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, FsPermission permission,\n      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n      long blockSize, Progressable progress, int buffersize,\n      ChecksumOpt checksumOpt, InetSocketAddress[] favoredNodes,\n      String ecPolicyName, String storagePolicy)\n      throws IOException {\n    checkOpen();\n    final FsPermission masked \u003d applyUMask(permission);\n    LOG.debug(\"{}: masked\u003d{}\", src, masked);\n    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n        src, masked, flag, createParent, replication, blockSize, progress,\n        dfsClientConf.createChecksum(checksumOpt),\n        getFavoredNodesStr(favoredNodes), ecPolicyName, storagePolicy);\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}