{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterAdminServer.java",
  "functionName": "enableNameservice",
  "functionId": "enableNameservice___request-EnableNameserviceRequest",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterAdminServer.java",
  "functionStartLine": 622,
  "functionEndLine": 641,
  "numCommitsSeen": 24,
  "timeTaken": 2258,
  "changeHistory": [
    "72aee114f8b1feae4a187cce0aa5a8d2ff55f416",
    "8944407d938bb8e38c7182a68b4b64d1a7c778ca",
    "48269c370c8981244b9d3d5cf1c82a2897ca502e",
    "b6dae26f4490bbd03360b8df19ef00cf843430f3"
  ],
  "changeHistoryShort": {
    "72aee114f8b1feae4a187cce0aa5a8d2ff55f416": "Ybodychange",
    "8944407d938bb8e38c7182a68b4b64d1a7c778ca": "Ybodychange",
    "48269c370c8981244b9d3d5cf1c82a2897ca502e": "Ybodychange",
    "b6dae26f4490bbd03360b8df19ef00cf843430f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "72aee114f8b1feae4a187cce0aa5a8d2ff55f416": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15053. RBF: Add permission check for safemode operation. Contributed by Xiaoqiao He.\n",
      "commitDate": "14/12/19 4:27 AM",
      "commitName": "72aee114f8b1feae4a187cce0aa5a8d2ff55f416",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "11/12/19 5:56 PM",
      "commitNameOld": "93bb368094e48e752c0732d979fbcd24e432bfc1",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 2.44,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,20 @@\n   public EnableNameserviceResponse enableNameservice(\n       EnableNameserviceRequest request) throws IOException {\n-    RouterPermissionChecker pc \u003d getPermissionChecker();\n-    if (pc !\u003d null) {\n-      pc.checkSuperuserPrivilege();\n-    }\n+    checkSuperuserPrivilege();\n \n     String nsId \u003d request.getNameServiceId();\n     DisabledNameserviceStore store \u003d getDisabledNameserviceStore();\n     Set\u003cString\u003e disabled \u003d store.getDisabledNameservices();\n     boolean success \u003d false;\n     if (disabled.contains(nsId)) {\n       success \u003d store.enableNameservice(nsId);\n       if (success) {\n         LOG.info(\"Nameservice {} enabled successfully.\", nsId);\n       } else {\n         LOG.error(\"Unable to enable Nameservice {}\", nsId);\n       }\n     } else {\n       LOG.error(\"Cannot enable {}, it was not disabled\", nsId);\n     }\n     return EnableNameserviceResponse.newInstance(success);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EnableNameserviceResponse enableNameservice(\n      EnableNameserviceRequest request) throws IOException {\n    checkSuperuserPrivilege();\n\n    String nsId \u003d request.getNameServiceId();\n    DisabledNameserviceStore store \u003d getDisabledNameserviceStore();\n    Set\u003cString\u003e disabled \u003d store.getDisabledNameservices();\n    boolean success \u003d false;\n    if (disabled.contains(nsId)) {\n      success \u003d store.enableNameservice(nsId);\n      if (success) {\n        LOG.info(\"Nameservice {} enabled successfully.\", nsId);\n      } else {\n        LOG.error(\"Unable to enable Nameservice {}\", nsId);\n      }\n    } else {\n      LOG.error(\"Cannot enable {}, it was not disabled\", nsId);\n    }\n    return EnableNameserviceResponse.newInstance(success);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterAdminServer.java",
      "extendedDetails": {}
    },
    "8944407d938bb8e38c7182a68b4b64d1a7c778ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13862. RBF: Router logs are not capturing few of the dfsrouteradmin commands. Contributed by Ayush Saxena\n",
      "commitDate": "09/09/18 10:50 AM",
      "commitName": "8944407d938bb8e38c7182a68b4b64d1a7c778ca",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "23/07/18 8:15 PM",
      "commitNameOld": "17a87977f29ced49724f561a68565217c8cb4e94",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 47.61,
      "commitsBetweenForRepo": 370,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,23 @@\n   public EnableNameserviceResponse enableNameservice(\n       EnableNameserviceRequest request) throws IOException {\n     RouterPermissionChecker pc \u003d getPermissionChecker();\n     if (pc !\u003d null) {\n       pc.checkSuperuserPrivilege();\n     }\n \n     String nsId \u003d request.getNameServiceId();\n     DisabledNameserviceStore store \u003d getDisabledNameserviceStore();\n     Set\u003cString\u003e disabled \u003d store.getDisabledNameservices();\n     boolean success \u003d false;\n     if (disabled.contains(nsId)) {\n       success \u003d store.enableNameservice(nsId);\n+      if (success) {\n+        LOG.info(\"Nameservice {} enabled successfully.\", nsId);\n+      } else {\n+        LOG.error(\"Unable to enable Nameservice {}\", nsId);\n+      }\n     } else {\n       LOG.error(\"Cannot enable {}, it was not disabled\", nsId);\n     }\n     return EnableNameserviceResponse.newInstance(success);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EnableNameserviceResponse enableNameservice(\n      EnableNameserviceRequest request) throws IOException {\n    RouterPermissionChecker pc \u003d getPermissionChecker();\n    if (pc !\u003d null) {\n      pc.checkSuperuserPrivilege();\n    }\n\n    String nsId \u003d request.getNameServiceId();\n    DisabledNameserviceStore store \u003d getDisabledNameserviceStore();\n    Set\u003cString\u003e disabled \u003d store.getDisabledNameservices();\n    boolean success \u003d false;\n    if (disabled.contains(nsId)) {\n      success \u003d store.enableNameservice(nsId);\n      if (success) {\n        LOG.info(\"Nameservice {} enabled successfully.\", nsId);\n      } else {\n        LOG.error(\"Unable to enable Nameservice {}\", nsId);\n      }\n    } else {\n      LOG.error(\"Cannot enable {}, it was not disabled\", nsId);\n    }\n    return EnableNameserviceResponse.newInstance(success);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterAdminServer.java",
      "extendedDetails": {}
    },
    "48269c370c8981244b9d3d5cf1c82a2897ca502e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13484. RBF: Disable Nameservices from the federation. Contributed by Inigo Goiri.\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "48269c370c8981244b9d3d5cf1c82a2897ca502e",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "20/04/18 10:19 PM",
      "commitNameOld": "b6dae26f4490bbd03360b8df19ef00cf843430f3",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 5.65,
      "commitsBetweenForRepo": 528,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,18 @@\n   public EnableNameserviceResponse enableNameservice(\n       EnableNameserviceRequest request) throws IOException {\n-    // TODO check permissions\n+    RouterPermissionChecker pc \u003d getPermissionChecker();\n+    if (pc !\u003d null) {\n+      pc.checkSuperuserPrivilege();\n+    }\n+\n     String nsId \u003d request.getNameServiceId();\n-    // TODO check that the name service exists\n-    boolean success \u003d getDisabledNameserviceStore().enableNameservice(nsId);\n+    DisabledNameserviceStore store \u003d getDisabledNameserviceStore();\n+    Set\u003cString\u003e disabled \u003d store.getDisabledNameservices();\n+    boolean success \u003d false;\n+    if (disabled.contains(nsId)) {\n+      success \u003d store.enableNameservice(nsId);\n+    } else {\n+      LOG.error(\"Cannot enable {}, it was not disabled\", nsId);\n+    }\n     return EnableNameserviceResponse.newInstance(success);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EnableNameserviceResponse enableNameservice(\n      EnableNameserviceRequest request) throws IOException {\n    RouterPermissionChecker pc \u003d getPermissionChecker();\n    if (pc !\u003d null) {\n      pc.checkSuperuserPrivilege();\n    }\n\n    String nsId \u003d request.getNameServiceId();\n    DisabledNameserviceStore store \u003d getDisabledNameserviceStore();\n    Set\u003cString\u003e disabled \u003d store.getDisabledNameservices();\n    boolean success \u003d false;\n    if (disabled.contains(nsId)) {\n      success \u003d store.enableNameservice(nsId);\n    } else {\n      LOG.error(\"Cannot enable {}, it was not disabled\", nsId);\n    }\n    return EnableNameserviceResponse.newInstance(success);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterAdminServer.java",
      "extendedDetails": {}
    },
    "b6dae26f4490bbd03360b8df19ef00cf843430f3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13478. RBF: Disabled Nameservice store API. Contributed by Inigo Goiri.\n",
      "commitDate": "20/04/18 10:19 PM",
      "commitName": "b6dae26f4490bbd03360b8df19ef00cf843430f3",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,8 @@\n+  public EnableNameserviceResponse enableNameservice(\n+      EnableNameserviceRequest request) throws IOException {\n+    // TODO check permissions\n+    String nsId \u003d request.getNameServiceId();\n+    // TODO check that the name service exists\n+    boolean success \u003d getDisabledNameserviceStore().enableNameservice(nsId);\n+    return EnableNameserviceResponse.newInstance(success);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public EnableNameserviceResponse enableNameservice(\n      EnableNameserviceRequest request) throws IOException {\n    // TODO check permissions\n    String nsId \u003d request.getNameServiceId();\n    // TODO check that the name service exists\n    boolean success \u003d getDisabledNameserviceStore().enableNameservice(nsId);\n    return EnableNameserviceResponse.newInstance(success);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterAdminServer.java"
    }
  }
}