{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Receiver.java",
  "functionName": "opReadBlock",
  "functionId": "opReadBlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
  "functionStartLine": 147,
  "functionEndLine": 164,
  "numCommitsSeen": 34,
  "timeTaken": 5654,
  "changeHistory": [
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "e2c9b288b223b9fd82dc12018936e13128413492",
    "56119fec96abbcc44c5dd82fdb694d2c3b53feb3",
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
    "3052ad1f0069af5caee621374b29d17d7f12ab51",
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "e2c9b288b223b9fd82dc12018936e13128413492": "Ybodychange",
    "56119fec96abbcc44c5dd82fdb694d2c3b53feb3": "Ybodychange",
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24": "Ybodychange",
    "3052ad1f0069af5caee621374b29d17d7f12ab51": "Ybodychange",
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "2f48fae72aa52e6ec42264cad24fab36b6a426c2": "Ymultichange(Yparameterchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/08/15 2:38 PM",
      "commitNameOld": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 24.18,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n     TraceScope traceScope \u003d continueTraceSpan(proto.getHeader(),\n         proto.getClass().getSimpleName());\n     try {\n       readBlock(PBHelperClient.convert(proto.getHeader().getBaseHeader().getBlock()),\n-        PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n+        PBHelperClient.convert(proto.getHeader().getBaseHeader().getToken()),\n         proto.getHeader().getClientName(),\n         proto.getOffset(),\n         proto.getLen(),\n         proto.getSendChecksums(),\n         (proto.hasCachingStrategy() ?\n             getCachingStrategy(proto.getCachingStrategy()) :\n           CachingStrategy.newDefaultStrategy()));\n     } finally {\n       if (traceScope !\u003d null) traceScope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    TraceScope traceScope \u003d continueTraceSpan(proto.getHeader(),\n        proto.getClass().getSimpleName());\n    try {\n      readBlock(PBHelperClient.convert(proto.getHeader().getBaseHeader().getBlock()),\n        PBHelperClient.convert(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen(),\n        proto.getSendChecksums(),\n        (proto.hasCachingStrategy() ?\n            getCachingStrategy(proto.getCachingStrategy()) :\n          CachingStrategy.newDefaultStrategy()));\n    } finally {\n      if (traceScope !\u003d null) traceScope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {}
    },
    "e2c9b288b223b9fd82dc12018936e13128413492": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "28/08/15 2:38 PM",
      "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/08/15 1:31 PM",
      "commitNameOld": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 6.05,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n     TraceScope traceScope \u003d continueTraceSpan(proto.getHeader(),\n         proto.getClass().getSimpleName());\n     try {\n-      readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n+      readBlock(PBHelperClient.convert(proto.getHeader().getBaseHeader().getBlock()),\n         PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n         proto.getHeader().getClientName(),\n         proto.getOffset(),\n         proto.getLen(),\n         proto.getSendChecksums(),\n         (proto.hasCachingStrategy() ?\n             getCachingStrategy(proto.getCachingStrategy()) :\n           CachingStrategy.newDefaultStrategy()));\n     } finally {\n       if (traceScope !\u003d null) traceScope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    TraceScope traceScope \u003d continueTraceSpan(proto.getHeader(),\n        proto.getClass().getSimpleName());\n    try {\n      readBlock(PBHelperClient.convert(proto.getHeader().getBaseHeader().getBlock()),\n        PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen(),\n        proto.getSendChecksums(),\n        (proto.hasCachingStrategy() ?\n            getCachingStrategy(proto.getCachingStrategy()) :\n          CachingStrategy.newDefaultStrategy()));\n    } finally {\n      if (traceScope !\u003d null) traceScope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {}
    },
    "56119fec96abbcc44c5dd82fdb694d2c3b53feb3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6880. Adding tracing to DataNode data transfer protocol (iwasakims via cmccabe)\n",
      "commitDate": "16/09/14 1:59 PM",
      "commitName": "56119fec96abbcc44c5dd82fdb694d2c3b53feb3",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "22/07/14 12:41 AM",
      "commitNameOld": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 56.55,
      "commitsBetweenForRepo": 480,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,18 @@\n   private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n-    readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n+    TraceScope traceScope \u003d continueTraceSpan(proto.getHeader(),\n+        proto.getClass().getSimpleName());\n+    try {\n+      readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n         PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n         proto.getHeader().getClientName(),\n         proto.getOffset(),\n         proto.getLen(),\n         proto.getSendChecksums(),\n         (proto.hasCachingStrategy() ?\n             getCachingStrategy(proto.getCachingStrategy()) :\n           CachingStrategy.newDefaultStrategy()));\n+    } finally {\n+      if (traceScope !\u003d null) traceScope.close();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    TraceScope traceScope \u003d continueTraceSpan(proto.getHeader(),\n        proto.getClass().getSimpleName());\n    try {\n      readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n        PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen(),\n        proto.getSendChecksums(),\n        (proto.hasCachingStrategy() ?\n            getCachingStrategy(proto.getCachingStrategy()) :\n          CachingStrategy.newDefaultStrategy()));\n    } finally {\n      if (traceScope !\u003d null) traceScope.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {}
    },
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4817.  Make HDFS advisory caching configurable on a per-file basis.  (Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1505753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/13 11:15 AM",
      "commitName": "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "14/01/13 1:12 PM",
      "commitNameOld": "12bf674e8eeae15ff9ad86dccd91ef644ab52775",
      "commitAuthorOld": "",
      "daysBetweenCommits": 188.88,
      "commitsBetweenForRepo": 1117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,12 @@\n   private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n     readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n         PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n         proto.getHeader().getClientName(),\n         proto.getOffset(),\n         proto.getLen(),\n-        proto.getSendChecksums());\n+        proto.getSendChecksums(),\n+        (proto.hasCachingStrategy() ?\n+            getCachingStrategy(proto.getCachingStrategy()) :\n+          CachingStrategy.newDefaultStrategy()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n        PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen(),\n        proto.getSendChecksums(),\n        (proto.hasCachingStrategy() ?\n            getCachingStrategy(proto.getCachingStrategy()) :\n          CachingStrategy.newDefaultStrategy()));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {}
    },
    "3052ad1f0069af5caee621374b29d17d7f12ab51": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3429. DataNode reads checksums even if client does not need them. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1433117 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/01/13 12:47 PM",
      "commitName": "3052ad1f0069af5caee621374b29d17d7f12ab51",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "09/01/13 1:20 PM",
      "commitNameOld": "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 4.98,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n     readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n         PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n         proto.getHeader().getClientName(),\n         proto.getOffset(),\n-        proto.getLen());\n+        proto.getLen(),\n+        proto.getSendChecksums());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n        PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen(),\n        proto.getSendChecksums());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {}
    },
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4363. Combine PBHelper and HdfsProtoUtil and remove redundant methods. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431088 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 1:20 PM",
      "commitName": "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/08/12 9:40 AM",
      "commitNameOld": "9b4a7900c7dfc0590316eedaa97144f938885651",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 155.19,
      "commitsBetweenForRepo": 827,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n-    readBlock(fromProto(proto.getHeader().getBaseHeader().getBlock()),\n-        fromProto(proto.getHeader().getBaseHeader().getToken()),\n+    readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n+        PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n         proto.getHeader().getClientName(),\n         proto.getOffset(),\n         proto.getLen());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    readBlock(PBHelper.convert(proto.getHeader().getBaseHeader().getBlock()),\n        PBHelper.convert(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    readBlock(fromProto(proto.getHeader().getBaseHeader().getBlock()),\n        fromProto(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    readBlock(fromProto(proto.getHeader().getBaseHeader().getBlock()),\n        fromProto(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen());\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java"
      }
    },
    "2f48fae72aa52e6ec42264cad24fab36b6a426c2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/06/11 4:57 PM",
      "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/06/11 4:57 PM",
          "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,8 @@\n-  private void opReadBlock(DataInputStream in) throws IOException {\n+  private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n-    \n-    ExtendedBlock b \u003d fromProto(\n-        proto.getHeader().getBaseHeader().getBlock());\n-    Token\u003cBlockTokenIdentifier\u003e token \u003d fromProto(\n-        proto.getHeader().getBaseHeader().getToken());\n-\n-    opReadBlock(in, b, proto.getOffset(), proto.getLen(),\n-        proto.getHeader().getClientName(), token);\n+    readBlock(fromProto(proto.getHeader().getBaseHeader().getBlock()),\n+        fromProto(proto.getHeader().getBaseHeader().getToken()),\n+        proto.getHeader().getClientName(),\n+        proto.getOffset(),\n+        proto.getLen());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    readBlock(fromProto(proto.getHeader().getBaseHeader().getBlock()),\n        fromProto(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen());\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
          "extendedDetails": {
            "oldValue": "[in-DataInputStream]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2087. Declare methods in DataTransferProtocol interface, and change Sender and Receiver to implement the interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139124 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/06/11 4:57 PM",
          "commitName": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,8 @@\n-  private void opReadBlock(DataInputStream in) throws IOException {\n+  private void opReadBlock() throws IOException {\n     OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n-    \n-    ExtendedBlock b \u003d fromProto(\n-        proto.getHeader().getBaseHeader().getBlock());\n-    Token\u003cBlockTokenIdentifier\u003e token \u003d fromProto(\n-        proto.getHeader().getBaseHeader().getToken());\n-\n-    opReadBlock(in, b, proto.getOffset(), proto.getLen(),\n-        proto.getHeader().getClientName(), token);\n+    readBlock(fromProto(proto.getHeader().getBaseHeader().getBlock()),\n+        fromProto(proto.getHeader().getBaseHeader().getToken()),\n+        proto.getHeader().getClientName(),\n+        proto.getOffset(),\n+        proto.getLen());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void opReadBlock() throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    readBlock(fromProto(proto.getHeader().getBaseHeader().getBlock()),\n        fromProto(proto.getHeader().getBaseHeader().getToken()),\n        proto.getHeader().getClientName(),\n        proto.getOffset(),\n        proto.getLen());\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,11 @@\n+  private void opReadBlock(DataInputStream in) throws IOException {\n+    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n+    \n+    ExtendedBlock b \u003d fromProto(\n+        proto.getHeader().getBaseHeader().getBlock());\n+    Token\u003cBlockTokenIdentifier\u003e token \u003d fromProto(\n+        proto.getHeader().getBaseHeader().getToken());\n+\n+    opReadBlock(in, b, proto.getOffset(), proto.getLen(),\n+        proto.getHeader().getClientName(), token);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void opReadBlock(DataInputStream in) throws IOException {\n    OpReadBlockProto proto \u003d OpReadBlockProto.parseFrom(vintPrefixed(in));\n    \n    ExtendedBlock b \u003d fromProto(\n        proto.getHeader().getBaseHeader().getBlock());\n    Token\u003cBlockTokenIdentifier\u003e token \u003d fromProto(\n        proto.getHeader().getBaseHeader().getToken());\n\n    opReadBlock(in, b, proto.getOffset(), proto.getLen(),\n        proto.getHeader().getClientName(), token);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/datatransfer/Receiver.java"
    }
  }
}