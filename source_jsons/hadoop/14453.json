{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JNStorage.java",
  "functionName": "purgeMatching",
  "functionId": "purgeMatching___dir-File__patterns-List__Pattern____minTxIdToKeep-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JNStorage.java",
  "functionStartLine": 192,
  "functionEndLine": 214,
  "numCommitsSeen": 21,
  "timeTaken": 1452,
  "changeHistory": [
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
    "14556cc5d8fee8f8a846e4f65572828553be386c",
    "8a3e64c77f73998326e9d72df75597bb0ad7b857"
  ],
  "changeHistoryShort": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": "Ybodychange",
    "14556cc5d8fee8f8a846e4f65572828553be386c": "Ybodychange",
    "8a3e64c77f73998326e9d72df75597bb0ad7b857": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12997. Move logging to slf4j in BlockPoolSliceStorage and Storage. Contributed by Ajay Kumar.\n",
      "commitDate": "01/02/18 10:45 AM",
      "commitName": "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "04/05/17 3:57 PM",
      "commitNameOld": "07761af357ef4da791df2972d7d3f049d6011c8d",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 272.82,
      "commitsBetweenForRepo": 1871,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   private static void purgeMatching(File dir, List\u003cPattern\u003e patterns,\n       long minTxIdToKeep) throws IOException {\n \n     for (File f : FileUtil.listFiles(dir)) {\n       if (!f.isFile()) continue;\n       \n       for (Pattern p : patterns) {\n         Matcher matcher \u003d p.matcher(f.getName());\n         if (matcher.matches()) {\n           // This parsing will always succeed since the group(1) is\n           // /\\d+/ in the regex itself.\n           long txid \u003d Long.parseLong(matcher.group(1));\n           if (txid \u003c minTxIdToKeep) {\n-            LOG.info(\"Purging no-longer needed file \" + txid);\n+            LOG.info(\"Purging no-longer needed file {}\", txid);\n             if (!f.delete()) {\n-              LOG.warn(\"Unable to delete no-longer-needed data \" +\n-                  f);\n+              LOG.warn(\"Unable to delete no-longer-needed data {}\", f);\n             }\n             break;\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void purgeMatching(File dir, List\u003cPattern\u003e patterns,\n      long minTxIdToKeep) throws IOException {\n\n    for (File f : FileUtil.listFiles(dir)) {\n      if (!f.isFile()) continue;\n      \n      for (Pattern p : patterns) {\n        Matcher matcher \u003d p.matcher(f.getName());\n        if (matcher.matches()) {\n          // This parsing will always succeed since the group(1) is\n          // /\\d+/ in the regex itself.\n          long txid \u003d Long.parseLong(matcher.group(1));\n          if (txid \u003c minTxIdToKeep) {\n            LOG.info(\"Purging no-longer needed file {}\", txid);\n            if (!f.delete()) {\n              LOG.warn(\"Unable to delete no-longer-needed data {}\", f);\n            }\n            break;\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JNStorage.java",
      "extendedDetails": {}
    },
    "14556cc5d8fee8f8a846e4f65572828553be386c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6155. Fix Boxing/unboxing to parse a primitive findbugs warnings. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582068 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/14 2:27 PM",
      "commitName": "14556cc5d8fee8f8a846e4f65572828553be386c",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/03/14 11:48 PM",
      "commitNameOld": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.61,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private static void purgeMatching(File dir, List\u003cPattern\u003e patterns,\n       long minTxIdToKeep) throws IOException {\n \n     for (File f : FileUtil.listFiles(dir)) {\n       if (!f.isFile()) continue;\n       \n       for (Pattern p : patterns) {\n         Matcher matcher \u003d p.matcher(f.getName());\n         if (matcher.matches()) {\n           // This parsing will always succeed since the group(1) is\n           // /\\d+/ in the regex itself.\n-          long txid \u003d Long.valueOf(matcher.group(1));\n+          long txid \u003d Long.parseLong(matcher.group(1));\n           if (txid \u003c minTxIdToKeep) {\n             LOG.info(\"Purging no-longer needed file \" + txid);\n             if (!f.delete()) {\n               LOG.warn(\"Unable to delete no-longer-needed data \" +\n                   f);\n             }\n             break;\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void purgeMatching(File dir, List\u003cPattern\u003e patterns,\n      long minTxIdToKeep) throws IOException {\n\n    for (File f : FileUtil.listFiles(dir)) {\n      if (!f.isFile()) continue;\n      \n      for (Pattern p : patterns) {\n        Matcher matcher \u003d p.matcher(f.getName());\n        if (matcher.matches()) {\n          // This parsing will always succeed since the group(1) is\n          // /\\d+/ in the regex itself.\n          long txid \u003d Long.parseLong(matcher.group(1));\n          if (txid \u003c minTxIdToKeep) {\n            LOG.info(\"Purging no-longer needed file \" + txid);\n            if (!f.delete()) {\n              LOG.warn(\"Unable to delete no-longer-needed data \" +\n                  f);\n            }\n            break;\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JNStorage.java",
      "extendedDetails": {}
    },
    "8a3e64c77f73998326e9d72df75597bb0ad7b857": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3956. QJM: purge temporary files when no longer within retention period. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1387817 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/12 4:40 PM",
      "commitName": "8a3e64c77f73998326e9d72df75597bb0ad7b857",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,24 @@\n+  private static void purgeMatching(File dir, List\u003cPattern\u003e patterns,\n+      long minTxIdToKeep) throws IOException {\n+\n+    for (File f : FileUtil.listFiles(dir)) {\n+      if (!f.isFile()) continue;\n+      \n+      for (Pattern p : patterns) {\n+        Matcher matcher \u003d p.matcher(f.getName());\n+        if (matcher.matches()) {\n+          // This parsing will always succeed since the group(1) is\n+          // /\\d+/ in the regex itself.\n+          long txid \u003d Long.valueOf(matcher.group(1));\n+          if (txid \u003c minTxIdToKeep) {\n+            LOG.info(\"Purging no-longer needed file \" + txid);\n+            if (!f.delete()) {\n+              LOG.warn(\"Unable to delete no-longer-needed data \" +\n+                  f);\n+            }\n+            break;\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void purgeMatching(File dir, List\u003cPattern\u003e patterns,\n      long minTxIdToKeep) throws IOException {\n\n    for (File f : FileUtil.listFiles(dir)) {\n      if (!f.isFile()) continue;\n      \n      for (Pattern p : patterns) {\n        Matcher matcher \u003d p.matcher(f.getName());\n        if (matcher.matches()) {\n          // This parsing will always succeed since the group(1) is\n          // /\\d+/ in the regex itself.\n          long txid \u003d Long.valueOf(matcher.group(1));\n          if (txid \u003c minTxIdToKeep) {\n            LOG.info(\"Purging no-longer needed file \" + txid);\n            if (!f.delete()) {\n              LOG.warn(\"Unable to delete no-longer-needed data \" +\n                  f);\n            }\n            break;\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JNStorage.java"
    }
  }
}