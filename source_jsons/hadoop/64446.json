{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AInputStream.java",
  "functionName": "available",
  "functionId": "available",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
  "functionStartLine": 624,
  "functionEndLine": 632,
  "numCommitsSeen": 28,
  "timeTaken": 2236,
  "changeHistory": [
    "dee9e97075e67f53d033df522372064ca19d6b51",
    "7a4b3d42c4e36e468c2a46fd48036a6fed547853",
    "4ee3543625c77c06d566fe81644d21c607d6d74d",
    "27c4e90efce04e1b1302f668b5eb22412e00d033",
    "6ba52d88ec11444cbac946ffadbc645acd0657de",
    "24d920b80eb3626073925a1d0b6dcf148add8cc0"
  ],
  "changeHistoryShort": {
    "dee9e97075e67f53d033df522372064ca19d6b51": "Ybodychange",
    "7a4b3d42c4e36e468c2a46fd48036a6fed547853": "Ybodychange",
    "4ee3543625c77c06d566fe81644d21c607d6d74d": "Ybodychange",
    "27c4e90efce04e1b1302f668b5eb22412e00d033": "Ybodychange",
    "6ba52d88ec11444cbac946ffadbc645acd0657de": "Ybodychange",
    "24d920b80eb3626073925a1d0b6dcf148add8cc0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dee9e97075e67f53d033df522372064ca19d6b51": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-15870. S3AInputStream.remainingInFile should use nextReadPos.\"\n\nThis reverts commit 7a4b3d42c4e36e468c2a46fd48036a6fed547853.\n\nThe patch broke TestRouterWebHDFSContractSeek as it turns out that\nWebHDFSInputStream.available() is always 0.\n",
      "commitDate": "14/10/19 8:56 AM",
      "commitName": "dee9e97075e67f53d033df522372064ca19d6b51",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "10/10/19 1:58 PM",
      "commitNameOld": "7a4b3d42c4e36e468c2a46fd48036a6fed547853",
      "commitAuthorOld": "lqjacklee",
      "daysBetweenCommits": 3.79,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n   public synchronized int available() throws IOException {\n     checkNotClosed();\n-    if (contentLength \u003d\u003d 0 || (nextReadPos \u003e\u003d contentLength)) {\n-      return 0;\n-    }\n \n-    return wrappedStream \u003d\u003d null\n-        ? 1\n-        : wrappedStream.available();\n+    long remaining \u003d remainingInFile();\n+    if (remaining \u003e Integer.MAX_VALUE) {\n+      return Integer.MAX_VALUE;\n+    }\n+    return (int)remaining;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int available() throws IOException {\n    checkNotClosed();\n\n    long remaining \u003d remainingInFile();\n    if (remaining \u003e Integer.MAX_VALUE) {\n      return Integer.MAX_VALUE;\n    }\n    return (int)remaining;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "7a4b3d42c4e36e468c2a46fd48036a6fed547853": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15870. S3AInputStream.remainingInFile should use nextReadPos.\n\nContributed by lqjacklee.\n\nChange-Id: I32bb00a683102e7ff8ff8ce0b8d9c3195ca7381c\n",
      "commitDate": "10/10/19 1:58 PM",
      "commitName": "7a4b3d42c4e36e468c2a46fd48036a6fed547853",
      "commitAuthor": "lqjacklee",
      "commitDateOld": "20/06/19 1:56 AM",
      "commitNameOld": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 112.5,
      "commitsBetweenForRepo": 994,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   public synchronized int available() throws IOException {\n     checkNotClosed();\n-\n-    long remaining \u003d remainingInFile();\n-    if (remaining \u003e Integer.MAX_VALUE) {\n-      return Integer.MAX_VALUE;\n+    if (contentLength \u003d\u003d 0 || (nextReadPos \u003e\u003d contentLength)) {\n+      return 0;\n     }\n-    return (int)remaining;\n+\n+    return wrappedStream \u003d\u003d null\n+        ? 1\n+        : wrappedStream.available();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int available() throws IOException {\n    checkNotClosed();\n    if (contentLength \u003d\u003d 0 || (nextReadPos \u003e\u003d contentLength)) {\n      return 0;\n    }\n\n    return wrappedStream \u003d\u003d null\n        ? 1\n        : wrappedStream.available();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "4ee3543625c77c06d566fe81644d21c607d6d74d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13203 S3A: Support fadvise \"random\" mode for high performance readPositioned() reads. Contributed by Rajesh Balamohan and stevel.\n",
      "commitDate": "22/06/16 7:45 AM",
      "commitName": "4ee3543625c77c06d566fe81644d21c607d6d74d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "21/05/16 8:39 AM",
      "commitNameOld": "39ec1515a205952eda7e171408a8b83eceb4abde",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 31.96,
      "commitsBetweenForRepo": 198,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public synchronized int available() throws IOException {\n     checkNotClosed();\n \n-    long remaining \u003d remaining();\n+    long remaining \u003d remainingInFile();\n     if (remaining \u003e Integer.MAX_VALUE) {\n       return Integer.MAX_VALUE;\n     }\n     return (int)remaining;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int available() throws IOException {\n    checkNotClosed();\n\n    long remaining \u003d remainingInFile();\n    if (remaining \u003e Integer.MAX_VALUE) {\n      return Integer.MAX_VALUE;\n    }\n    return (int)remaining;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "27c4e90efce04e1b1302f668b5eb22412e00d033": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13028 add low level counter metrics for S3A; use in read performance tests. contributed by: stevel\npatch includes\nHADOOP-12844 Recover when S3A fails on IOException in read()\nHADOOP-13058 S3A FS fails during init against a read-only FS if multipart purge\nHADOOP-13047 S3a Forward seek in stream length to be configurable\n",
      "commitDate": "12/05/16 11:24 AM",
      "commitName": "27c4e90efce04e1b1302f668b5eb22412e00d033",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "09/04/16 3:25 AM",
      "commitNameOld": "b9e3eff62a7415d8666656a75db69ff3e43f8e7e",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 33.33,
      "commitsBetweenForRepo": 203,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public synchronized int available() throws IOException {\n     checkNotClosed();\n \n-    long remaining \u003d this.contentLength - this.pos;\n+    long remaining \u003d remaining();\n     if (remaining \u003e Integer.MAX_VALUE) {\n       return Integer.MAX_VALUE;\n     }\n     return (int)remaining;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int available() throws IOException {\n    checkNotClosed();\n\n    long remaining \u003d remaining();\n    if (remaining \u003e Integer.MAX_VALUE) {\n      return Integer.MAX_VALUE;\n    }\n    return (int)remaining;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "6ba52d88ec11444cbac946ffadbc645acd0657de": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10714. AmazonS3Client.deleteObjects() need to be limited to 1000 entries per call. Contributed by Juan Yu.\n",
      "commitDate": "05/11/14 5:17 PM",
      "commitName": "6ba52d88ec11444cbac946ffadbc645acd0657de",
      "commitAuthor": "Aaron T. Myers",
      "commitDateOld": "15/09/14 8:27 AM",
      "commitNameOld": "24d920b80eb3626073925a1d0b6dcf148add8cc0",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 51.41,
      "commitsBetweenForRepo": 545,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n   public synchronized int available() throws IOException {\n-    if (closed) {\n-      throw new IOException(\"Stream closed\");\n-    }\n+    checkNotClosed();\n+\n     long remaining \u003d this.contentLength - this.pos;\n     if (remaining \u003e Integer.MAX_VALUE) {\n       return Integer.MAX_VALUE;\n     }\n     return (int)remaining;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int available() throws IOException {\n    checkNotClosed();\n\n    long remaining \u003d this.contentLength - this.pos;\n    if (remaining \u003e Integer.MAX_VALUE) {\n      return Integer.MAX_VALUE;\n    }\n    return (int)remaining;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "24d920b80eb3626073925a1d0b6dcf148add8cc0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10400. Incorporate new S3A FileSystem implementation. Contributed by Jordan Mendelson and Dave Wang.\n",
      "commitDate": "15/09/14 8:27 AM",
      "commitName": "24d920b80eb3626073925a1d0b6dcf148add8cc0",
      "commitAuthor": "Aaron T. Myers",
      "diff": "@@ -0,0 +1,10 @@\n+  public synchronized int available() throws IOException {\n+    if (closed) {\n+      throw new IOException(\"Stream closed\");\n+    }\n+    long remaining \u003d this.contentLength - this.pos;\n+    if (remaining \u003e Integer.MAX_VALUE) {\n+      return Integer.MAX_VALUE;\n+    }\n+    return (int)remaining;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int available() throws IOException {\n    if (closed) {\n      throw new IOException(\"Stream closed\");\n    }\n    long remaining \u003d this.contentLength - this.pos;\n    if (remaining \u003e Integer.MAX_VALUE) {\n      return Integer.MAX_VALUE;\n    }\n    return (int)remaining;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java"
    }
  }
}