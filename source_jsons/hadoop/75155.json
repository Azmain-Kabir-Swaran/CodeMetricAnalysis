{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupInformation.java",
  "functionName": "unprotectedRelogin",
  "functionId": "unprotectedRelogin___login-HadoopLoginContext",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
  "functionStartLine": 1279,
  "functionEndLine": 1308,
  "numCommitsSeen": 104,
  "timeTaken": 1750,
  "changeHistory": [
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
    "59cf7588779145ad5850ad63426743dfe03d8347"
  ],
  "changeHistoryShort": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": "Ybodychange",
    "59cf7588779145ad5850ad63426743dfe03d8347": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16691. Unify Logging in UserGroupInformation.\n\nUnify Logging in UserGroupInformation.",
      "commitDate": "14/11/19 10:28 AM",
      "commitName": "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
      "commitAuthor": "belugabehr",
      "commitDateOld": "28/02/19 10:34 AM",
      "commitNameOld": "0d61facd3777c26178a9974e646b6ff351fedcb5",
      "commitAuthorOld": "Ajay Kumar",
      "daysBetweenCommits": 259.0,
      "commitsBetweenForRepo": 1874,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,30 @@\n   private void unprotectedRelogin(HadoopLoginContext login) throws IOException {\n     assert Thread.holdsLock(login.getSubjectLock());\n     long now \u003d Time.now();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Initiating logout for \" + getUserName());\n-      }\n+      LOG.debug(\"Initiating logout for {}\", getUserName());\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d newLoginContext(\n         login.getAppName(), login.getSubject(), login.getConfiguration());\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Initiating re-login for \" + getUserName());\n-      }\n+      LOG.debug(\"Initiating re-login for {}\", getUserName());\n       login.login();\n       // this should be unnecessary.  originally added due to improper locking\n       // of the subject during relogin.\n       fixKerberosTicketOrder();\n       setLogin(login);\n     } catch (LoginException le) {\n       KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n       kae.setUser(getUserName());\n       throw kae;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void unprotectedRelogin(HadoopLoginContext login) throws IOException {\n    assert Thread.holdsLock(login.getSubjectLock());\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.debug(\"Initiating logout for {}\", getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d newLoginContext(\n        login.getAppName(), login.getSubject(), login.getConfiguration());\n      LOG.debug(\"Initiating re-login for {}\", getUserName());\n      login.login();\n      // this should be unnecessary.  originally added due to improper locking\n      // of the subject during relogin.\n      fixKerberosTicketOrder();\n      setLogin(login);\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n      kae.setUser(getUserName());\n      throw kae;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "59cf7588779145ad5850ad63426743dfe03d8347": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
      "commitDate": "23/02/18 11:10 AM",
      "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,34 @@\n+  private void unprotectedRelogin(HadoopLoginContext login) throws IOException {\n+    assert Thread.holdsLock(login.getSubjectLock());\n+    long now \u003d Time.now();\n+    if (!hasSufficientTimeElapsed(now)) {\n+      return;\n+    }\n+    // register most recent relogin attempt\n+    user.setLastLogin(now);\n+    try {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Initiating logout for \" + getUserName());\n+      }\n+      //clear up the kerberos state. But the tokens are not cleared! As per \n+      //the Java kerberos login module code, only the kerberos credentials\n+      //are cleared\n+      login.logout();\n+      //login and also update the subject field of this instance to \n+      //have the new credentials (pass it to the LoginContext constructor)\n+      login \u003d newLoginContext(\n+        login.getAppName(), login.getSubject(), login.getConfiguration());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Initiating re-login for \" + getUserName());\n+      }\n+      login.login();\n+      // this should be unnecessary.  originally added due to improper locking\n+      // of the subject during relogin.\n+      fixKerberosTicketOrder();\n+      setLogin(login);\n+    } catch (LoginException le) {\n+      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n+      kae.setUser(getUserName());\n+      throw kae;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void unprotectedRelogin(HadoopLoginContext login) throws IOException {\n    assert Thread.holdsLock(login.getSubjectLock());\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d newLoginContext(\n        login.getAppName(), login.getSubject(), login.getConfiguration());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating re-login for \" + getUserName());\n      }\n      login.login();\n      // this should be unnecessary.  originally added due to improper locking\n      // of the subject during relogin.\n      fixKerberosTicketOrder();\n      setLogin(login);\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n      kae.setUser(getUserName());\n      throw kae;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
    }
  }
}