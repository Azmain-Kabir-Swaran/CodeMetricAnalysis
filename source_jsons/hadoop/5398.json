{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystemLock.java",
  "functionName": "readUnlock",
  "functionId": "readUnlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java",
  "functionStartLine": 162,
  "functionEndLine": 164,
  "numCommitsSeen": 19,
  "timeTaken": 2731,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "434c5ea75dc3d87513e49290ac9999148ff5163c"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "434c5ea75dc3d87513e49290ac9999148ff5163c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "24/03/20 2:50 PM",
      "commitNameOld": "d353b30baf6da5b70685cf837cf7095636f345e1",
      "commitAuthorOld": "Toshihiro Suzuki",
      "daysBetweenCommits": 24.96,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public void readUnlock() {\n-    readUnlock(OP_NAME_OTHER);\n+    readUnlock(OP_NAME_OTHER, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void readUnlock() {\n    readUnlock(OP_NAME_OTHER, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java",
      "extendedDetails": {}
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "30/09/16 1:16 PM",
      "commitNameOld": "434c5ea75dc3d87513e49290ac9999148ff5163c",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 44.95,
      "commitsBetweenForRepo": 391,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,3 @@\n   public void readUnlock() {\n-    final boolean needReport \u003d coarseLock.getReadHoldCount() \u003d\u003d 1;\n-    final long readLockInterval \u003d\n-        timer.monotonicNow() - readLockHeldTimeStamp.get();\n-    coarseLock.readLock().unlock();\n-\n-    if (needReport) {\n-      readLockHeldTimeStamp.remove();\n-    }\n-    if (needReport \u0026\u0026 readLockInterval \u003e\u003d this.readLockReportingThreshold) {\n-      long localLongestReadLock;\n-      do {\n-        localLongestReadLock \u003d longestReadLockHeldInterval.get();\n-      } while (localLongestReadLock - readLockInterval \u003c 0 \u0026\u0026\n-          !longestReadLockHeldInterval.compareAndSet(localLongestReadLock,\n-              readLockInterval));\n-\n-      long localTimeStampOfLastReadLockReport;\n-      long now;\n-      do {\n-        now \u003d timer.monotonicNow();\n-        localTimeStampOfLastReadLockReport \u003d\n-            timeStampOfLastReadLockReport.get();\n-        if (now - localTimeStampOfLastReadLockReport \u003c\n-            lockSuppressWarningInterval) {\n-          numReadLockWarningsSuppressed.incrementAndGet();\n-          return;\n-        }\n-      } while (!timeStampOfLastReadLockReport.compareAndSet(\n-          localTimeStampOfLastReadLockReport, now));\n-      int numSuppressedWarnings \u003d numReadLockWarningsSuppressed.getAndSet(0);\n-      long longestLockHeldInterval \u003d longestReadLockHeldInterval.getAndSet(0);\n-      FSNamesystem.LOG.info(\"FSNamesystem read lock held for \" +\n-          readLockInterval + \" ms via\\n\" +\n-          StringUtils.getStackTrace(Thread.currentThread()) +\n-          \"\\tNumber of suppressed read-lock reports: \" + numSuppressedWarnings +\n-          \"\\n\\tLongest read-lock held interval: \" + longestLockHeldInterval);\n-    }\n+    readUnlock(OP_NAME_OTHER);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void readUnlock() {\n    readUnlock(OP_NAME_OTHER);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java",
      "extendedDetails": {}
    },
    "434c5ea75dc3d87513e49290ac9999148ff5163c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10896. Move lock logging logic from FSNamesystem into FSNamesystemLock. Contributed by Erik Krogen.\n",
      "commitDate": "30/09/16 1:16 PM",
      "commitName": "434c5ea75dc3d87513e49290ac9999148ff5163c",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,39 @@\n+  public void readUnlock() {\n+    final boolean needReport \u003d coarseLock.getReadHoldCount() \u003d\u003d 1;\n+    final long readLockInterval \u003d\n+        timer.monotonicNow() - readLockHeldTimeStamp.get();\n+    coarseLock.readLock().unlock();\n+\n+    if (needReport) {\n+      readLockHeldTimeStamp.remove();\n+    }\n+    if (needReport \u0026\u0026 readLockInterval \u003e\u003d this.readLockReportingThreshold) {\n+      long localLongestReadLock;\n+      do {\n+        localLongestReadLock \u003d longestReadLockHeldInterval.get();\n+      } while (localLongestReadLock - readLockInterval \u003c 0 \u0026\u0026\n+          !longestReadLockHeldInterval.compareAndSet(localLongestReadLock,\n+              readLockInterval));\n+\n+      long localTimeStampOfLastReadLockReport;\n+      long now;\n+      do {\n+        now \u003d timer.monotonicNow();\n+        localTimeStampOfLastReadLockReport \u003d\n+            timeStampOfLastReadLockReport.get();\n+        if (now - localTimeStampOfLastReadLockReport \u003c\n+            lockSuppressWarningInterval) {\n+          numReadLockWarningsSuppressed.incrementAndGet();\n+          return;\n+        }\n+      } while (!timeStampOfLastReadLockReport.compareAndSet(\n+          localTimeStampOfLastReadLockReport, now));\n+      int numSuppressedWarnings \u003d numReadLockWarningsSuppressed.getAndSet(0);\n+      long longestLockHeldInterval \u003d longestReadLockHeldInterval.getAndSet(0);\n+      FSNamesystem.LOG.info(\"FSNamesystem read lock held for \" +\n+          readLockInterval + \" ms via\\n\" +\n+          StringUtils.getStackTrace(Thread.currentThread()) +\n+          \"\\tNumber of suppressed read-lock reports: \" + numSuppressedWarnings +\n+          \"\\n\\tLongest read-lock held interval: \" + longestLockHeldInterval);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void readUnlock() {\n    final boolean needReport \u003d coarseLock.getReadHoldCount() \u003d\u003d 1;\n    final long readLockInterval \u003d\n        timer.monotonicNow() - readLockHeldTimeStamp.get();\n    coarseLock.readLock().unlock();\n\n    if (needReport) {\n      readLockHeldTimeStamp.remove();\n    }\n    if (needReport \u0026\u0026 readLockInterval \u003e\u003d this.readLockReportingThreshold) {\n      long localLongestReadLock;\n      do {\n        localLongestReadLock \u003d longestReadLockHeldInterval.get();\n      } while (localLongestReadLock - readLockInterval \u003c 0 \u0026\u0026\n          !longestReadLockHeldInterval.compareAndSet(localLongestReadLock,\n              readLockInterval));\n\n      long localTimeStampOfLastReadLockReport;\n      long now;\n      do {\n        now \u003d timer.monotonicNow();\n        localTimeStampOfLastReadLockReport \u003d\n            timeStampOfLastReadLockReport.get();\n        if (now - localTimeStampOfLastReadLockReport \u003c\n            lockSuppressWarningInterval) {\n          numReadLockWarningsSuppressed.incrementAndGet();\n          return;\n        }\n      } while (!timeStampOfLastReadLockReport.compareAndSet(\n          localTimeStampOfLastReadLockReport, now));\n      int numSuppressedWarnings \u003d numReadLockWarningsSuppressed.getAndSet(0);\n      long longestLockHeldInterval \u003d longestReadLockHeldInterval.getAndSet(0);\n      FSNamesystem.LOG.info(\"FSNamesystem read lock held for \" +\n          readLockInterval + \" ms via\\n\" +\n          StringUtils.getStackTrace(Thread.currentThread()) +\n          \"\\tNumber of suppressed read-lock reports: \" + numSuppressedWarnings +\n          \"\\n\\tLongest read-lock held interval: \" + longestLockHeldInterval);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystemLock.java"
    }
  }
}