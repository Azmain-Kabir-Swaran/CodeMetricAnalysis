{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RestClientBindings.java",
  "functionName": "bind",
  "functionId": "bind___fsURI-URI__conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/RestClientBindings.java",
  "functionStartLine": 128,
  "functionEndLine": 164,
  "numCommitsSeen": 3,
  "timeTaken": 644,
  "changeHistory": [
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874"
  ],
  "changeHistoryShort": {
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8545. Filesystem Implementation for OpenStack Swift\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 4:32 AM",
      "commitName": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,37 @@\n+  public static Properties bind(URI fsURI, Configuration conf) throws\n+          SwiftConfigurationException {\n+    String host \u003d fsURI.getHost();\n+    if (host \u003d\u003d null || host.isEmpty()) {\n+      //expect shortnames -\u003e conf names\n+      throw invalidName(host);\n+    }\n+\n+    String container \u003d extractContainerName(host);\n+    String service \u003d extractServiceName(host);\n+\n+    //build filename schema\n+    String prefix \u003d buildSwiftInstancePrefix(service);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Filesystem \" + fsURI\n+              + \" is using configuration keys \" + prefix);\n+    }\n+    Properties props \u003d new Properties();\n+    props.setProperty(SWIFT_SERVICE_PROPERTY, service);\n+    props.setProperty(SWIFT_CONTAINER_PROPERTY, container);\n+    copy(conf, prefix + DOT_AUTH_URL, props, SWIFT_AUTH_PROPERTY, true);\n+    copy(conf, prefix + DOT_USERNAME, props, SWIFT_USERNAME_PROPERTY, true);\n+    copy(conf, prefix + DOT_APIKEY, props, SWIFT_APIKEY_PROPERTY, false);\n+    copy(conf, prefix + DOT_PASSWORD, props, SWIFT_PASSWORD_PROPERTY,\n+            props.contains(SWIFT_APIKEY_PROPERTY) ? true : false);\n+    copy(conf, prefix + DOT_TENANT, props, SWIFT_TENANT_PROPERTY, false);\n+    copy(conf, prefix + DOT_REGION, props, SWIFT_REGION_PROPERTY, false);\n+    copy(conf, prefix + DOT_HTTP_PORT, props, SWIFT_HTTP_PORT_PROPERTY, false);\n+    copy(conf, prefix +\n+            DOT_HTTPS_PORT, props, SWIFT_HTTPS_PORT_PROPERTY, false);\n+\n+    copyBool(conf, prefix + DOT_PUBLIC, props, SWIFT_PUBLIC_PROPERTY, false);\n+    copyBool(conf, prefix + DOT_LOCATION_AWARE, props,\n+             SWIFT_LOCATION_AWARE_PROPERTY, false);\n+\n+    return props;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Properties bind(URI fsURI, Configuration conf) throws\n          SwiftConfigurationException {\n    String host \u003d fsURI.getHost();\n    if (host \u003d\u003d null || host.isEmpty()) {\n      //expect shortnames -\u003e conf names\n      throw invalidName(host);\n    }\n\n    String container \u003d extractContainerName(host);\n    String service \u003d extractServiceName(host);\n\n    //build filename schema\n    String prefix \u003d buildSwiftInstancePrefix(service);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Filesystem \" + fsURI\n              + \" is using configuration keys \" + prefix);\n    }\n    Properties props \u003d new Properties();\n    props.setProperty(SWIFT_SERVICE_PROPERTY, service);\n    props.setProperty(SWIFT_CONTAINER_PROPERTY, container);\n    copy(conf, prefix + DOT_AUTH_URL, props, SWIFT_AUTH_PROPERTY, true);\n    copy(conf, prefix + DOT_USERNAME, props, SWIFT_USERNAME_PROPERTY, true);\n    copy(conf, prefix + DOT_APIKEY, props, SWIFT_APIKEY_PROPERTY, false);\n    copy(conf, prefix + DOT_PASSWORD, props, SWIFT_PASSWORD_PROPERTY,\n            props.contains(SWIFT_APIKEY_PROPERTY) ? true : false);\n    copy(conf, prefix + DOT_TENANT, props, SWIFT_TENANT_PROPERTY, false);\n    copy(conf, prefix + DOT_REGION, props, SWIFT_REGION_PROPERTY, false);\n    copy(conf, prefix + DOT_HTTP_PORT, props, SWIFT_HTTP_PORT_PROPERTY, false);\n    copy(conf, prefix +\n            DOT_HTTPS_PORT, props, SWIFT_HTTPS_PORT_PROPERTY, false);\n\n    copyBool(conf, prefix + DOT_PUBLIC, props, SWIFT_PUBLIC_PROPERTY, false);\n    copyBool(conf, prefix + DOT_LOCATION_AWARE, props,\n             SWIFT_LOCATION_AWARE_PROPERTY, false);\n\n    return props;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/RestClientBindings.java"
    }
  }
}