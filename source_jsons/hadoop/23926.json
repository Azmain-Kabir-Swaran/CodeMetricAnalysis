{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CompletedTaskAttempt.java",
  "functionName": "constructTaskAttemptReport",
  "functionId": "constructTaskAttemptReport",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTaskAttempt.java",
  "functionStartLine": 155,
  "functionEndLine": 182,
  "numCommitsSeen": 14,
  "timeTaken": 1066,
  "changeHistory": [
    "d0e0ba8010b72f58ddede5303f2b88404263d4bf",
    "7475e836dc2bdd29142eaf210262fba354b745ed"
  ],
  "changeHistoryShort": {
    "d0e0ba8010b72f58ddede5303f2b88404263d4bf": "Ybodychange",
    "7475e836dc2bdd29142eaf210262fba354b745ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0e0ba8010b72f58ddede5303f2b88404263d4bf": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6394. Speed up Task processing loop in HsTasksBlock#render(). Contributed by Ray Chiang\n",
      "commitDate": "31/07/15 11:17 AM",
      "commitName": "d0e0ba8010b72f58ddede5303f2b88404263d4bf",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "04/03/13 8:32 AM",
      "commitNameOld": "ec13f1eb3afce78f1e86b039936f0c38535d05b3",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 879.07,
      "commitsBetweenForRepo": 6540,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private void constructTaskAttemptReport() {\n     report \u003d Records.newRecord(TaskAttemptReport.class);\n \n     report.setTaskAttemptId(attemptId);\n     report.setTaskAttemptState(state);\n     report.setProgress(getProgress());\n     report.setStartTime(attemptInfo.getStartTime());\n     report.setFinishTime(attemptInfo.getFinishTime());\n     report.setShuffleFinishTime(attemptInfo.getShuffleFinishTime());\n     report.setSortFinishTime(attemptInfo.getSortFinishTime());\n     if (localDiagMessage !\u003d null) {\n       report\n           .setDiagnosticInfo(attemptInfo.getError() + \", \" + localDiagMessage);\n     } else {\n       report.setDiagnosticInfo(attemptInfo.getError());\n     }\n     // report.setPhase(attemptInfo.get); //TODO\n     report.setStateString(attemptInfo.getState());\n-    report.setCounters(TypeConverter.toYarn(getCounters()));\n+    report.setRawCounters(getCounters());\n     report.setContainerId(attemptInfo.getContainerId());\n     if (attemptInfo.getHostname() \u003d\u003d null) {\n       report.setNodeManagerHost(\"UNKNOWN\");\n     } else {\n       report.setNodeManagerHost(attemptInfo.getHostname());\n       report.setNodeManagerPort(attemptInfo.getPort());\n     }\n     report.setNodeManagerHttpPort(attemptInfo.getHttpPort());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructTaskAttemptReport() {\n    report \u003d Records.newRecord(TaskAttemptReport.class);\n\n    report.setTaskAttemptId(attemptId);\n    report.setTaskAttemptState(state);\n    report.setProgress(getProgress());\n    report.setStartTime(attemptInfo.getStartTime());\n    report.setFinishTime(attemptInfo.getFinishTime());\n    report.setShuffleFinishTime(attemptInfo.getShuffleFinishTime());\n    report.setSortFinishTime(attemptInfo.getSortFinishTime());\n    if (localDiagMessage !\u003d null) {\n      report\n          .setDiagnosticInfo(attemptInfo.getError() + \", \" + localDiagMessage);\n    } else {\n      report.setDiagnosticInfo(attemptInfo.getError());\n    }\n    // report.setPhase(attemptInfo.get); //TODO\n    report.setStateString(attemptInfo.getState());\n    report.setRawCounters(getCounters());\n    report.setContainerId(attemptInfo.getContainerId());\n    if (attemptInfo.getHostname() \u003d\u003d null) {\n      report.setNodeManagerHost(\"UNKNOWN\");\n    } else {\n      report.setNodeManagerHost(attemptInfo.getHostname());\n      report.setNodeManagerPort(attemptInfo.getPort());\n    }\n    report.setNodeManagerHttpPort(attemptInfo.getHttpPort());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTaskAttempt.java",
      "extendedDetails": {}
    },
    "7475e836dc2bdd29142eaf210262fba354b745ed": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3901. Modified JobHistory records in YARN to lazily load job and task reports so as to improve UI response times. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1294417 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/12 4:32 PM",
      "commitName": "7475e836dc2bdd29142eaf210262fba354b745ed",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  private void constructTaskAttemptReport() {\n+    report \u003d Records.newRecord(TaskAttemptReport.class);\n+\n+    report.setTaskAttemptId(attemptId);\n+    report.setTaskAttemptState(state);\n+    report.setProgress(getProgress());\n+    report.setStartTime(attemptInfo.getStartTime());\n+    report.setFinishTime(attemptInfo.getFinishTime());\n+    report.setShuffleFinishTime(attemptInfo.getShuffleFinishTime());\n+    report.setSortFinishTime(attemptInfo.getSortFinishTime());\n+    if (localDiagMessage !\u003d null) {\n+      report\n+          .setDiagnosticInfo(attemptInfo.getError() + \", \" + localDiagMessage);\n+    } else {\n+      report.setDiagnosticInfo(attemptInfo.getError());\n+    }\n+    // report.setPhase(attemptInfo.get); //TODO\n+    report.setStateString(attemptInfo.getState());\n+    report.setCounters(TypeConverter.toYarn(getCounters()));\n+    report.setContainerId(attemptInfo.getContainerId());\n+    if (attemptInfo.getHostname() \u003d\u003d null) {\n+      report.setNodeManagerHost(\"UNKNOWN\");\n+    } else {\n+      report.setNodeManagerHost(attemptInfo.getHostname());\n+      report.setNodeManagerPort(attemptInfo.getPort());\n+    }\n+    report.setNodeManagerHttpPort(attemptInfo.getHttpPort());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void constructTaskAttemptReport() {\n    report \u003d Records.newRecord(TaskAttemptReport.class);\n\n    report.setTaskAttemptId(attemptId);\n    report.setTaskAttemptState(state);\n    report.setProgress(getProgress());\n    report.setStartTime(attemptInfo.getStartTime());\n    report.setFinishTime(attemptInfo.getFinishTime());\n    report.setShuffleFinishTime(attemptInfo.getShuffleFinishTime());\n    report.setSortFinishTime(attemptInfo.getSortFinishTime());\n    if (localDiagMessage !\u003d null) {\n      report\n          .setDiagnosticInfo(attemptInfo.getError() + \", \" + localDiagMessage);\n    } else {\n      report.setDiagnosticInfo(attemptInfo.getError());\n    }\n    // report.setPhase(attemptInfo.get); //TODO\n    report.setStateString(attemptInfo.getState());\n    report.setCounters(TypeConverter.toYarn(getCounters()));\n    report.setContainerId(attemptInfo.getContainerId());\n    if (attemptInfo.getHostname() \u003d\u003d null) {\n      report.setNodeManagerHost(\"UNKNOWN\");\n    } else {\n      report.setNodeManagerHost(attemptInfo.getHostname());\n      report.setNodeManagerPort(attemptInfo.getPort());\n    }\n    report.setNodeManagerHttpPort(attemptInfo.getHttpPort());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTaskAttempt.java"
    }
  }
}