{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CallQueueManager.java",
  "functionName": "parseNumLevels",
  "functionId": "parseNumLevels___ns-String__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
  "functionStartLine": 329,
  "functionEndLine": 348,
  "numCommitsSeen": 17,
  "timeTaken": 1151,
  "changeHistory": [
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc"
  ],
  "changeHistoryShort": {
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
      "commitDate": "31/03/16 8:42 AM",
      "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,20 @@\n+  private static int parseNumLevels(String ns, Configuration conf) {\n+    // Fair call queue levels (IPC_CALLQUEUE_PRIORITY_LEVELS_KEY)\n+    // takes priority over the scheduler level key\n+    // (IPC_SCHEDULER_PRIORITY_LEVELS_KEY)\n+    int retval \u003d conf.getInt(ns + \".\" +\n+        FairCallQueue.IPC_CALLQUEUE_PRIORITY_LEVELS_KEY, 0);\n+    if (retval \u003d\u003d 0) { // No FCQ priority level configured\n+      retval \u003d conf.getInt(ns + \".\" +\n+          CommonConfigurationKeys.IPC_SCHEDULER_PRIORITY_LEVELS_KEY,\n+          CommonConfigurationKeys.IPC_SCHEDULER_PRIORITY_LEVELS_DEFAULT_KEY);\n+    } else {\n+      LOG.warn(ns + \".\" + FairCallQueue.IPC_CALLQUEUE_PRIORITY_LEVELS_KEY +\n+          \" is deprecated. Please use \" + ns + \".\" +\n+          CommonConfigurationKeys.IPC_SCHEDULER_PRIORITY_LEVELS_KEY + \".\");\n+    }\n+    if(retval \u003c 1) {\n+      throw new IllegalArgumentException(\"numLevels must be at least 1\");\n+    }\n+    return retval;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static int parseNumLevels(String ns, Configuration conf) {\n    // Fair call queue levels (IPC_CALLQUEUE_PRIORITY_LEVELS_KEY)\n    // takes priority over the scheduler level key\n    // (IPC_SCHEDULER_PRIORITY_LEVELS_KEY)\n    int retval \u003d conf.getInt(ns + \".\" +\n        FairCallQueue.IPC_CALLQUEUE_PRIORITY_LEVELS_KEY, 0);\n    if (retval \u003d\u003d 0) { // No FCQ priority level configured\n      retval \u003d conf.getInt(ns + \".\" +\n          CommonConfigurationKeys.IPC_SCHEDULER_PRIORITY_LEVELS_KEY,\n          CommonConfigurationKeys.IPC_SCHEDULER_PRIORITY_LEVELS_DEFAULT_KEY);\n    } else {\n      LOG.warn(ns + \".\" + FairCallQueue.IPC_CALLQUEUE_PRIORITY_LEVELS_KEY +\n          \" is deprecated. Please use \" + ns + \".\" +\n          CommonConfigurationKeys.IPC_SCHEDULER_PRIORITY_LEVELS_KEY + \".\");\n    }\n    if(retval \u003c 1) {\n      throw new IllegalArgumentException(\"numLevels must be at least 1\");\n    }\n    return retval;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java"
    }
  }
}