{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GraphiteSink.java",
  "functionName": "connect",
  "functionId": "connect",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java",
  "functionStartLine": 143,
  "functionEndLine": 165,
  "numCommitsSeen": 10,
  "timeTaken": 894,
  "changeHistory": [
    "770b5eb2db686275df445be9280e76cc3710ffdc",
    "4d2914210053f28c95094aa59e48f8e84c55a2c7"
  ],
  "changeHistoryShort": {
    "770b5eb2db686275df445be9280e76cc3710ffdc": "Ybodychange",
    "4d2914210053f28c95094aa59e48f8e84c55a2c7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "770b5eb2db686275df445be9280e76cc3710ffdc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13444. Replace org.apache.commons.io.Charsets with java.nio.charset.StandardCharsets. Contributed by Vincent Poon.\n",
      "commitDate": "01/08/16 1:35 AM",
      "commitName": "770b5eb2db686275df445be9280e76cc3710ffdc",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/01/15 8:35 AM",
      "commitNameOld": "4d2914210053f28c95094aa59e48f8e84c55a2c7",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 568.67,
      "commitsBetweenForRepo": 4418,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n       public void connect() {\n         if (isConnected()) {\n           throw new MetricsException(\"Already connected to Graphite\");\n         }\n         if (tooManyConnectionFailures()) {\n           // return silently (there was ERROR in logs when we reached limit for the first time)\n           return;\n         }\n         try {\n           // Open a connection to Graphite server.\n           socket \u003d new Socket(serverHost, serverPort);\n-          writer \u003d new OutputStreamWriter(socket.getOutputStream(), Charsets.UTF_8);\n+        writer \u003d new OutputStreamWriter(socket.getOutputStream(),\n+                StandardCharsets.UTF_8);\n         } catch (Exception e) {\n           connectionFailures++;\n           if (tooManyConnectionFailures()) {\n             // first time when connection limit reached, report to logs\n             LOG.error(\"Too many connection failures, would not try to connect again.\");\n           }\n           throw new MetricsException(\"Error creating connection, \"\n               + serverHost + \":\" + serverPort, e);\n         }\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void connect() {\n        if (isConnected()) {\n          throw new MetricsException(\"Already connected to Graphite\");\n        }\n        if (tooManyConnectionFailures()) {\n          // return silently (there was ERROR in logs when we reached limit for the first time)\n          return;\n        }\n        try {\n          // Open a connection to Graphite server.\n          socket \u003d new Socket(serverHost, serverPort);\n        writer \u003d new OutputStreamWriter(socket.getOutputStream(),\n                StandardCharsets.UTF_8);\n        } catch (Exception e) {\n          connectionFailures++;\n          if (tooManyConnectionFailures()) {\n            // first time when connection limit reached, report to logs\n            LOG.error(\"Too many connection failures, would not try to connect again.\");\n          }\n          throw new MetricsException(\"Error creating connection, \"\n              + serverHost + \":\" + serverPort, e);\n        }\n      }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java",
      "extendedDetails": {}
    },
    "4d2914210053f28c95094aa59e48f8e84c55a2c7": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11400. GraphiteSink does not reconnect to Graphite after \u0027broken pipe\u0027\n(Kamil Gorlo via raviprak)\n",
      "commitDate": "10/01/15 8:35 AM",
      "commitName": "4d2914210053f28c95094aa59e48f8e84c55a2c7",
      "commitAuthor": "Ravi Prakash",
      "diff": "@@ -0,0 +1,22 @@\n+      public void connect() {\n+        if (isConnected()) {\n+          throw new MetricsException(\"Already connected to Graphite\");\n+        }\n+        if (tooManyConnectionFailures()) {\n+          // return silently (there was ERROR in logs when we reached limit for the first time)\n+          return;\n+        }\n+        try {\n+          // Open a connection to Graphite server.\n+          socket \u003d new Socket(serverHost, serverPort);\n+          writer \u003d new OutputStreamWriter(socket.getOutputStream(), Charsets.UTF_8);\n+        } catch (Exception e) {\n+          connectionFailures++;\n+          if (tooManyConnectionFailures()) {\n+            // first time when connection limit reached, report to logs\n+            LOG.error(\"Too many connection failures, would not try to connect again.\");\n+          }\n+          throw new MetricsException(\"Error creating connection, \"\n+              + serverHost + \":\" + serverPort, e);\n+        }\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public void connect() {\n        if (isConnected()) {\n          throw new MetricsException(\"Already connected to Graphite\");\n        }\n        if (tooManyConnectionFailures()) {\n          // return silently (there was ERROR in logs when we reached limit for the first time)\n          return;\n        }\n        try {\n          // Open a connection to Graphite server.\n          socket \u003d new Socket(serverHost, serverPort);\n          writer \u003d new OutputStreamWriter(socket.getOutputStream(), Charsets.UTF_8);\n        } catch (Exception e) {\n          connectionFailures++;\n          if (tooManyConnectionFailures()) {\n            // first time when connection limit reached, report to logs\n            LOG.error(\"Too many connection failures, would not try to connect again.\");\n          }\n          throw new MetricsException(\"Error creating connection, \"\n              + serverHost + \":\" + serverPort, e);\n        }\n      }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java"
    }
  }
}