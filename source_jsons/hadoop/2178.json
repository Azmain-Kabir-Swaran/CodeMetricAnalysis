{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "primitiveCreate",
  "functionId": "primitiveCreate___src-String__absPermission-FsPermission__flag-EnumSet__CreateFlag____createParent-boolean__replication-short__blockSize-long__progress-Progressable__buffersize-int__checksumOpt-ChecksumOpt",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 1309,
  "functionEndLine": 1324,
  "numCommitsSeen": 388,
  "timeTaken": 12410,
  "changeHistory": [
    "0d7a5ac5f526801367a9ec963e6d72783b637d55",
    "a7312715a66dec5173c3a0a78dff4e0333e7f0b1",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "e96ce6f3e3e549202ce3c48d4733ba34098870ad",
    "51b97a1396a4cb32aaa08b451985a6af236c0c4b",
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
    "0a6806ce8c946b26eceac7d16b467c54c453df84",
    "3b773da0361bdec594acd6814c49b81f867bd673",
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": "Ybodychange",
    "a7312715a66dec5173c3a0a78dff4e0333e7f0b1": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ymultichange(Yexceptionschange,Ybodychange)",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "e96ce6f3e3e549202ce3c48d4733ba34098870ad": "Ybodychange",
    "51b97a1396a4cb32aaa08b451985a6af236c0c4b": "Ybodychange",
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc": "Ybodychange",
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7": "Ymultichange(Yparameterchange,Ybodychange)",
    "0a6806ce8c946b26eceac7d16b467c54c453df84": "Ybodychange",
    "3b773da0361bdec594acd6814c49b81f867bd673": "Ybodychange",
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8": "Yreturntypechange",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13209. DistributedFileSystem.create should allow an option to provide StoragePolicy. Contributed by Ayush Saxena.\n",
      "commitDate": "14/02/19 8:43 AM",
      "commitName": "0d7a5ac5f526801367a9ec963e6d72783b637d55",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "24/12/18 9:34 AM",
      "commitNameOld": "652b257478f723a9e119e5e9181f3c7450ac92b5",
      "commitAuthorOld": "Chen Liang",
      "daysBetweenCommits": 51.96,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n       EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n       long blockSize, Progressable progress, int buffersize,\n       ChecksumOpt checksumOpt) throws IOException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, checksum,\n-          null, null);\n+          null, null, null);\n     }\n     beginFileLease(result.getFileId(), result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n      long blockSize, Progressable progress, int buffersize,\n      ChecksumOpt checksumOpt) throws IOException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, checksum,\n          null, null, null);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "a7312715a66dec5173c3a0a78dff4e0333e7f0b1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10996. Ability to specify per-file EC policy at create time. Contributed by SammiChen.\n",
      "commitDate": "12/04/17 12:27 PM",
      "commitName": "a7312715a66dec5173c3a0a78dff4e0333e7f0b1",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "04/04/17 1:38 PM",
      "commitNameOld": "18432130a7f580f206adf023507678c534487f2e",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 7.95,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n       EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n       long blockSize, Progressable progress, int buffersize,\n       ChecksumOpt checksumOpt) throws IOException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n-          flag, createParent, replication, blockSize, progress, checksum, null);\n+          flag, createParent, replication, blockSize, progress, checksum,\n+          null, null);\n     }\n     beginFileLease(result.getFileId(), result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n      long blockSize, Progressable progress, int buffersize,\n      ChecksumOpt checksumOpt) throws IOException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, checksum,\n          null, null);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
          "commitDate": "03/10/15 11:38 AM",
          "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "30/09/15 8:39 AM",
          "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
          "commitAuthorOld": "",
          "daysBetweenCommits": 3.12,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,15 @@\n-  public DFSOutputStream primitiveCreate(String src, \n-                             FsPermission absPermission,\n-                             EnumSet\u003cCreateFlag\u003e flag,\n-                             boolean createParent,\n-                             short replication,\n-                             long blockSize,\n-                             Progressable progress,\n-                             int buffersize,\n-                             ChecksumOpt checksumOpt)\n-      throws IOException, UnresolvedLinkException {\n+  public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n+      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n+      long blockSize, Progressable progress, int buffersize,\n+      ChecksumOpt checksumOpt) throws IOException {\n     checkOpen();\n     CreateFlag.validate(flag);\n-    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n+    DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n-          flag, createParent, replication, blockSize, progress, buffersize,\n-          checksum, null);\n+          flag, createParent, replication, blockSize, progress, checksum, null);\n     }\n     beginFileLease(result.getFileId(), result);\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n      long blockSize, Progressable progress, int buffersize,\n      ChecksumOpt checksumOpt) throws IOException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, checksum, null);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {
            "oldValue": "[IOException, UnresolvedLinkException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
          "commitDate": "03/10/15 11:38 AM",
          "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "30/09/15 8:39 AM",
          "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
          "commitAuthorOld": "",
          "daysBetweenCommits": 3.12,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,15 @@\n-  public DFSOutputStream primitiveCreate(String src, \n-                             FsPermission absPermission,\n-                             EnumSet\u003cCreateFlag\u003e flag,\n-                             boolean createParent,\n-                             short replication,\n-                             long blockSize,\n-                             Progressable progress,\n-                             int buffersize,\n-                             ChecksumOpt checksumOpt)\n-      throws IOException, UnresolvedLinkException {\n+  public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n+      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n+      long blockSize, Progressable progress, int buffersize,\n+      ChecksumOpt checksumOpt) throws IOException {\n     checkOpen();\n     CreateFlag.validate(flag);\n-    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n+    DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n-          flag, createParent, replication, blockSize, progress, buffersize,\n-          checksum, null);\n+          flag, createParent, replication, blockSize, progress, checksum, null);\n     }\n     beginFileLease(result.getFileId(), result);\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DFSOutputStream primitiveCreate(String src, FsPermission absPermission,\n      EnumSet\u003cCreateFlag\u003e flag, boolean createParent, short replication,\n      long blockSize, Progressable progress, int buffersize,\n      ChecksumOpt checksumOpt) throws IOException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, checksum, null);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum, null);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "e96ce6f3e3e549202ce3c48d4733ba34098870ad": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7077. Separate CipherSuite from crypto protocol version. (wang)\n",
      "commitDate": "25/09/14 6:40 PM",
      "commitName": "e96ce6f3e3e549202ce3c48d4733ba34098870ad",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/09/14 7:11 PM",
      "commitNameOld": "428a76663a0de5d0d74cc9525273ddc470760e44",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              ChecksumOpt checksumOpt)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n-          checksum, null, cipherSuites);\n+          checksum, null);\n     }\n     beginFileLease(result.getFileId(), result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum, null);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "51b97a1396a4cb32aaa08b451985a6af236c0c4b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6605.Client server negotiation of cipher suite. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607499 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/14 4:08 PM",
      "commitName": "51b97a1396a4cb32aaa08b451985a6af236c0c4b",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "27/06/14 1:43 PM",
      "commitNameOld": "2efea952139b30dd1c881eed0b443ffa72be6dce",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 5.1,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              ChecksumOpt checksumOpt)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n-          checksum);\n+          checksum, null, cipherSuites);\n     }\n     beginFileLease(result.getFileId(), result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum, null, cipherSuites);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6294. Use INode IDs to avoid conflicts when a file open for write is renamed (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593634 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/05/14 3:36 PM",
      "commitName": "f131dba8a3d603a5d15c4f035ed3da75b4daf0dc",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "23/04/14 1:13 PM",
      "commitNameOld": "876fd8ab7913a259ff9f69c16cc2d9af46ad3f9b",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 16.1,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              ChecksumOpt checksumOpt)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n           checksum);\n     }\n-    beginFileLease(src, result);\n+    beginFileLease(result.getFileId(), result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum);\n    }\n    beginFileLease(result.getFileId(), result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8240. Add a new API to allow users to specify a checksum type on FileSystem.create(..).  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374696 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/12 10:46 PM",
      "commitName": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8240. Add a new API to allow users to specify a checksum type on FileSystem.create(..).  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374696 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/12 10:46 PM",
          "commitName": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "17/08/12 9:52 AM",
          "commitNameOld": "fccace6116713c85cd59a808c565ea39fb5d6944",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 1.54,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,22 @@\n   public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n-                             int bytesPerChecksum)\n+                             ChecksumOpt checksumOpt)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n-      DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n-          dfsClientConf.checksumType,\n-          bytesPerChecksum);\n+      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n           checksum);\n     }\n     beginFileLease(src, result);\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum);\n    }\n    beginFileLease(src, result);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {
            "oldValue": "[src-String, absPermission-FsPermission, flag-EnumSet\u003cCreateFlag\u003e, createParent-boolean, replication-short, blockSize-long, progress-Progressable, buffersize-int, bytesPerChecksum-int]",
            "newValue": "[src-String, absPermission-FsPermission, flag-EnumSet\u003cCreateFlag\u003e, createParent-boolean, replication-short, blockSize-long, progress-Progressable, buffersize-int, checksumOpt-ChecksumOpt]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8240. Add a new API to allow users to specify a checksum type on FileSystem.create(..).  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374696 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/12 10:46 PM",
          "commitName": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "17/08/12 9:52 AM",
          "commitNameOld": "fccace6116713c85cd59a808c565ea39fb5d6944",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 1.54,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,22 @@\n   public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n-                             int bytesPerChecksum)\n+                             ChecksumOpt checksumOpt)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n-      DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n-          dfsClientConf.checksumType,\n-          bytesPerChecksum);\n+      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n           checksum);\n     }\n     beginFileLease(src, result);\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d dfsClientConf.createChecksum(checksumOpt);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum);\n    }\n    beginFileLease(src, result);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "0a6806ce8c946b26eceac7d16b467c54c453df84": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3646. LeaseRenewer can hold reference to inactive DFSClient instances forever (Kihwal Lee via daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1363170 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/12 4:21 PM",
      "commitName": "0a6806ce8c946b26eceac7d16b467c54c453df84",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "15/07/12 7:58 PM",
      "commitNameOld": "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 2.85,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              int bytesPerChecksum)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n           dfsClientConf.checksumType,\n           bytesPerChecksum);\n       result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n           checksum);\n     }\n-    leaserenewer.put(src, result, this);\n+    beginFileLease(src, result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n          dfsClientConf.checksumType,\n          bytesPerChecksum);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum);\n    }\n    beginFileLease(src, result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "3b773da0361bdec594acd6814c49b81f867bd673": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3319. Change DFSOutputStream to not to start a thread in constructors.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/12 1:17 PM",
      "commitName": "3b773da0361bdec594acd6814c49b81f867bd673",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/04/12 4:39 PM",
      "commitNameOld": "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              int bytesPerChecksum)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n           dfsClientConf.checksumType,\n           bytesPerChecksum);\n-      result \u003d new DFSOutputStream(this, src, absPermission,\n+      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n           checksum);\n     }\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n          dfsClientConf.checksumType,\n          bytesPerChecksum);\n      result \u003d DFSOutputStream.newStreamForCreate(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum);\n    }\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8": {
      "type": "Yreturntypechange",
      "commitMessage": "HDFS-3298. Add HdfsDataOutputStream as a public API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330064 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/12 4:39 PM",
      "commitName": "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "18/04/12 7:34 PM",
      "commitNameOld": "c6d3537d337d71a3e566bcae824cc2377e9a9ed2",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 5.88,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-  public OutputStream primitiveCreate(String src, \n+  public DFSOutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              int bytesPerChecksum)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n       DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n           dfsClientConf.checksumType,\n           bytesPerChecksum);\n       result \u003d new DFSOutputStream(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n           checksum);\n     }\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n          dfsClientConf.checksumType,\n          bytesPerChecksum);\n      result \u003d new DFSOutputStream(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum);\n    }\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldValue": "OutputStream",
        "newValue": "DFSOutputStream"
      }
    },
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2130. Switch default checksum to CRC32C. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/11/11 5:35 PM",
      "commitName": "f84552ac35bb5221290be68fece9c779ebeaf4bc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "31/10/11 5:38 PM",
      "commitNameOld": "8d1a09b7418d5cb512affaede0bb1ae494502967",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public OutputStream primitiveCreate(String src, \n                              FsPermission absPermission,\n                              EnumSet\u003cCreateFlag\u003e flag,\n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              int bytesPerChecksum)\n       throws IOException, UnresolvedLinkException {\n     checkOpen();\n     CreateFlag.validate(flag);\n     DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n     if (result \u003d\u003d null) {\n+      DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n+          dfsClientConf.checksumType,\n+          bytesPerChecksum);\n       result \u003d new DFSOutputStream(this, src, absPermission,\n           flag, createParent, replication, blockSize, progress, buffersize,\n-          bytesPerChecksum);\n+          checksum);\n     }\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public OutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      DataChecksum checksum \u003d DataChecksum.newDataChecksum(\n          dfsClientConf.checksumType,\n          bytesPerChecksum);\n      result \u003d new DFSOutputStream(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          checksum);\n    }\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public OutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      result \u003d new DFSOutputStream(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          bytesPerChecksum);\n    }\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public OutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      result \u003d new DFSOutputStream(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          bytesPerChecksum);\n    }\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+  public OutputStream primitiveCreate(String src, \n+                             FsPermission absPermission,\n+                             EnumSet\u003cCreateFlag\u003e flag,\n+                             boolean createParent,\n+                             short replication,\n+                             long blockSize,\n+                             Progressable progress,\n+                             int buffersize,\n+                             int bytesPerChecksum)\n+      throws IOException, UnresolvedLinkException {\n+    checkOpen();\n+    CreateFlag.validate(flag);\n+    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n+    if (result \u003d\u003d null) {\n+      result \u003d new DFSOutputStream(this, src, absPermission,\n+          flag, createParent, replication, blockSize, progress, buffersize,\n+          bytesPerChecksum);\n+    }\n+    leaserenewer.put(src, result, this);\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public OutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet\u003cCreateFlag\u003e flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n      throws IOException, UnresolvedLinkException {\n    checkOpen();\n    CreateFlag.validate(flag);\n    DFSOutputStream result \u003d primitiveAppend(src, flag, buffersize, progress);\n    if (result \u003d\u003d null) {\n      result \u003d new DFSOutputStream(this, src, absPermission,\n          flag, createParent, replication, blockSize, progress, buffersize,\n          bytesPerChecksum);\n    }\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}