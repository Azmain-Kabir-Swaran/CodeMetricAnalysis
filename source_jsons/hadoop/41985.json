{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMasterService.java",
  "functionName": "hasApplicationMasterRegistered",
  "functionId": "hasApplicationMasterRegistered___appAttemptId-ApplicationAttemptId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
  "functionStartLine": 369,
  "functionEndLine": 382,
  "numCommitsSeen": 100,
  "timeTaken": 1825,
  "changeHistory": [
    "8caae1d5a65bf082eef9bd03a50fd5025c290406",
    "15ce82b9c5087ac5e51f7a43eb57873c3c374ced"
  ],
  "changeHistoryShort": {
    "8caae1d5a65bf082eef9bd03a50fd5025c290406": "Ybodychange",
    "15ce82b9c5087ac5e51f7a43eb57873c3c374ced": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8caae1d5a65bf082eef9bd03a50fd5025c290406": {
      "type": "Ybodychange",
      "commitMessage": "YARN-744. Race condition in ApplicationMasterService.allocate .. It might process same allocate request twice resulting in additional containers getting allocated. (Omkar Vinit Joshi via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543707 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/13 9:06 PM",
      "commitName": "8caae1d5a65bf082eef9bd03a50fd5025c290406",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "14/09/13 6:01 PM",
      "commitNameOld": "ec010a29362c6c5572f8681f4e7d0469176345e1",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 66.17,
      "commitsBetweenForRepo": 434,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public boolean hasApplicationMasterRegistered(\n       ApplicationAttemptId appAttemptId) {\n     boolean hasApplicationMasterRegistered \u003d false;\n-    AllocateResponse lastResponse \u003d responseMap.get(appAttemptId);\n+    AllocateResponseLock lastResponse \u003d responseMap.get(appAttemptId);\n     if (lastResponse !\u003d null) {\n       synchronized (lastResponse) {\n-        if (lastResponse.getResponseId() \u003e\u003d 0) {\n+        if (lastResponse.getAllocateResponse() !\u003d null\n+            \u0026\u0026 lastResponse.getAllocateResponse().getResponseId() \u003e\u003d 0) {\n           hasApplicationMasterRegistered \u003d true;\n         }\n       }\n     }\n     return hasApplicationMasterRegistered;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasApplicationMasterRegistered(\n      ApplicationAttemptId appAttemptId) {\n    boolean hasApplicationMasterRegistered \u003d false;\n    AllocateResponseLock lastResponse \u003d responseMap.get(appAttemptId);\n    if (lastResponse !\u003d null) {\n      synchronized (lastResponse) {\n        if (lastResponse.getAllocateResponse() !\u003d null\n            \u0026\u0026 lastResponse.getAllocateResponse().getResponseId() \u003e\u003d 0) {\n          hasApplicationMasterRegistered \u003d true;\n        }\n      }\n    }\n    return hasApplicationMasterRegistered;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "15ce82b9c5087ac5e51f7a43eb57873c3c374ced": {
      "type": "Yintroduced",
      "commitMessage": "YARN-369. Handle ( or throw a proper error when receiving) status updates from application masters that have not registered (Mayank Bansal \u0026 Abhishek Kapoor via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501605 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/13 4:14 PM",
      "commitName": "15ce82b9c5087ac5e51f7a43eb57873c3c374ced",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,13 @@\n+  public boolean hasApplicationMasterRegistered(\n+      ApplicationAttemptId appAttemptId) {\n+    boolean hasApplicationMasterRegistered \u003d false;\n+    AllocateResponse lastResponse \u003d responseMap.get(appAttemptId);\n+    if (lastResponse !\u003d null) {\n+      synchronized (lastResponse) {\n+        if (lastResponse.getResponseId() \u003e\u003d 0) {\n+          hasApplicationMasterRegistered \u003d true;\n+        }\n+      }\n+    }\n+    return hasApplicationMasterRegistered;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasApplicationMasterRegistered(\n      ApplicationAttemptId appAttemptId) {\n    boolean hasApplicationMasterRegistered \u003d false;\n    AllocateResponse lastResponse \u003d responseMap.get(appAttemptId);\n    if (lastResponse !\u003d null) {\n      synchronized (lastResponse) {\n        if (lastResponse.getResponseId() \u003e\u003d 0) {\n          hasApplicationMasterRegistered \u003d true;\n        }\n      }\n    }\n    return hasApplicationMasterRegistered;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java"
    }
  }
}