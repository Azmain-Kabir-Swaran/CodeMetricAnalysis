{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerConfiguration.java",
  "functionName": "normalizePolicyName",
  "functionId": "normalizePolicyName___policyName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
  "functionStartLine": 2311,
  "functionEndLine": 2328,
  "numCommitsSeen": 90,
  "timeTaken": 2262,
  "changeHistory": [
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181"
  ],
  "changeHistoryShort": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,18 @@\n+  private String normalizePolicyName(String policyName) {\n+\n+    // Ensure that custom node sorting algorithm class is valid.\n+    try {\n+      Class\u003c?\u003e nodeSortingPolicyClazz \u003d getClassByName(policyName);\n+      if (MultiNodeLookupPolicy.class\n+          .isAssignableFrom(nodeSortingPolicyClazz)) {\n+        return policyName;\n+      } else {\n+        throw new YarnRuntimeException(\n+            \"Class: \" + policyName + \" not instance of \"\n+                + MultiNodeLookupPolicy.class.getCanonicalName());\n+      }\n+    } catch (ClassNotFoundException e) {\n+      throw new YarnRuntimeException(\n+          \"Could not instantiate \" + \"NodesSortingPolicy: \" + policyName, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String normalizePolicyName(String policyName) {\n\n    // Ensure that custom node sorting algorithm class is valid.\n    try {\n      Class\u003c?\u003e nodeSortingPolicyClazz \u003d getClassByName(policyName);\n      if (MultiNodeLookupPolicy.class\n          .isAssignableFrom(nodeSortingPolicyClazz)) {\n        return policyName;\n      } else {\n        throw new YarnRuntimeException(\n            \"Class: \" + policyName + \" not instance of \"\n                + MultiNodeLookupPolicy.class.getCanonicalName());\n      }\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(\n          \"Could not instantiate \" + \"NodesSortingPolicy: \" + policyName, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java"
    }
  }
}