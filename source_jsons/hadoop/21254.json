{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HumanReadableHistoryViewerPrinter.java",
  "functionName": "printAllTaskAttempts",
  "functionId": "printAllTaskAttempts___ps-PrintStream__taskType-TaskType",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
  "functionStartLine": 180,
  "functionEndLine": 221,
  "numCommitsSeen": 12,
  "timeTaken": 10249,
  "changeHistory": [
    "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
      "commitDate": "18/02/16 5:58 PM",
      "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
          "commitDate": "18/02/16 5:58 PM",
          "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "18/02/16 2:06 PM",
          "commitNameOld": "8ab7658025616d154decd97578de3327ec6f9109",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,43 +1,42 @@\n-  private void printAllTaskAttempts(TaskType taskType) {\n-    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n-    StringBuffer taskList \u003d new StringBuffer();\n+  private void printAllTaskAttempts(PrintStream ps, TaskType taskType) {\n+    Map\u003cTaskID, JobHistoryParser.TaskInfo\u003e tasks \u003d job.getAllTasks();\n+    StringBuilder taskList \u003d new StringBuilder();\n     taskList.append(\"\\n\").append(taskType);\n     taskList.append(\" task list for \").append(job.getJobId());\n     taskList.append(\"\\nTaskId\\t\\tStartTime\");\n     if (TaskType.REDUCE.equals(taskType)) {\n       taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n     }\n     taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n     taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    System.out.println(taskList.toString());\n+    ps.println(taskList.toString());\n     for (JobHistoryParser.TaskInfo task : tasks.values()) {\n-      for (JobHistoryParser.TaskAttemptInfo attempt : \n-        task.getAllTaskAttempts().values()) {\n+      for (JobHistoryParser.TaskAttemptInfo attempt :\n+          task.getAllTaskAttempts().values()) {\n         if (taskType.equals(task.getTaskType())){\n-          taskList.setLength(0); \n+          taskList.setLength(0);\n           taskList.append(attempt.getAttemptId()).append(\"\\t\");\n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                          attempt.getStartTime(), 0)).append(\"\\t\");\n+              attempt.getStartTime(), 0)).append(\"\\t\");\n           if (TaskType.REDUCE.equals(taskType)) {\n             taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                            attempt.getShuffleFinishTime(),\n-                            attempt.getStartTime()));\n-            taskList.append(\"\\t\"); \n-            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n-                            attempt.getSortFinishTime(),\n-                            attempt.getShuffleFinishTime())); \n-          } \n+                attempt.getShuffleFinishTime(),\n+                attempt.getStartTime()));\n+            taskList.append(\"\\t\");\n+            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n+                attempt.getSortFinishTime(),\n+                attempt.getShuffleFinishTime()));\n+          }\n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                          attempt.getFinishTime(),\n-                          attempt.getStartTime())); \n-          taskList.append(\"\\t\"); \n+              attempt.getFinishTime(),\n+              attempt.getStartTime()));\n+          taskList.append(\"\\t\");\n           taskList.append(attempt.getHostname()).append(\"\\t\");\n           taskList.append(attempt.getError());\n-          String taskLogsUrl \u003d getTaskLogsUrl(\n-              WebAppUtils.getHttpSchemePrefix(fs.getConf()), attempt);\n+          String taskLogsUrl \u003d HistoryViewer.getTaskLogsUrl(scheme, attempt);\n           taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n-          System.out.println(taskList.toString());\n+          ps.println(taskList);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printAllTaskAttempts(PrintStream ps, TaskType taskType) {\n    Map\u003cTaskID, JobHistoryParser.TaskInfo\u003e tasks \u003d job.getAllTasks();\n    StringBuilder taskList \u003d new StringBuilder();\n    taskList.append(\"\\n\").append(taskType);\n    taskList.append(\" task list for \").append(job.getJobId());\n    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n    if (TaskType.REDUCE.equals(taskType)) {\n      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n    }\n    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    ps.println(taskList.toString());\n    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n      for (JobHistoryParser.TaskAttemptInfo attempt :\n          task.getAllTaskAttempts().values()) {\n        if (taskType.equals(task.getTaskType())){\n          taskList.setLength(0);\n          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n              attempt.getStartTime(), 0)).append(\"\\t\");\n          if (TaskType.REDUCE.equals(taskType)) {\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                attempt.getShuffleFinishTime(),\n                attempt.getStartTime()));\n            taskList.append(\"\\t\");\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                attempt.getSortFinishTime(),\n                attempt.getShuffleFinishTime()));\n          }\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n              attempt.getFinishTime(),\n              attempt.getStartTime()));\n          taskList.append(\"\\t\");\n          taskList.append(attempt.getHostname()).append(\"\\t\");\n          taskList.append(attempt.getError());\n          String taskLogsUrl \u003d HistoryViewer.getTaskLogsUrl(scheme, attempt);\n          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n          ps.println(taskList);\n        }\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
            "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
            "oldMethodName": "printAllTaskAttempts",
            "newMethodName": "printAllTaskAttempts"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
          "commitDate": "18/02/16 5:58 PM",
          "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "18/02/16 2:06 PM",
          "commitNameOld": "8ab7658025616d154decd97578de3327ec6f9109",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,43 +1,42 @@\n-  private void printAllTaskAttempts(TaskType taskType) {\n-    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n-    StringBuffer taskList \u003d new StringBuffer();\n+  private void printAllTaskAttempts(PrintStream ps, TaskType taskType) {\n+    Map\u003cTaskID, JobHistoryParser.TaskInfo\u003e tasks \u003d job.getAllTasks();\n+    StringBuilder taskList \u003d new StringBuilder();\n     taskList.append(\"\\n\").append(taskType);\n     taskList.append(\" task list for \").append(job.getJobId());\n     taskList.append(\"\\nTaskId\\t\\tStartTime\");\n     if (TaskType.REDUCE.equals(taskType)) {\n       taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n     }\n     taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n     taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    System.out.println(taskList.toString());\n+    ps.println(taskList.toString());\n     for (JobHistoryParser.TaskInfo task : tasks.values()) {\n-      for (JobHistoryParser.TaskAttemptInfo attempt : \n-        task.getAllTaskAttempts().values()) {\n+      for (JobHistoryParser.TaskAttemptInfo attempt :\n+          task.getAllTaskAttempts().values()) {\n         if (taskType.equals(task.getTaskType())){\n-          taskList.setLength(0); \n+          taskList.setLength(0);\n           taskList.append(attempt.getAttemptId()).append(\"\\t\");\n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                          attempt.getStartTime(), 0)).append(\"\\t\");\n+              attempt.getStartTime(), 0)).append(\"\\t\");\n           if (TaskType.REDUCE.equals(taskType)) {\n             taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                            attempt.getShuffleFinishTime(),\n-                            attempt.getStartTime()));\n-            taskList.append(\"\\t\"); \n-            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n-                            attempt.getSortFinishTime(),\n-                            attempt.getShuffleFinishTime())); \n-          } \n+                attempt.getShuffleFinishTime(),\n+                attempt.getStartTime()));\n+            taskList.append(\"\\t\");\n+            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n+                attempt.getSortFinishTime(),\n+                attempt.getShuffleFinishTime()));\n+          }\n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                          attempt.getFinishTime(),\n-                          attempt.getStartTime())); \n-          taskList.append(\"\\t\"); \n+              attempt.getFinishTime(),\n+              attempt.getStartTime()));\n+          taskList.append(\"\\t\");\n           taskList.append(attempt.getHostname()).append(\"\\t\");\n           taskList.append(attempt.getError());\n-          String taskLogsUrl \u003d getTaskLogsUrl(\n-              WebAppUtils.getHttpSchemePrefix(fs.getConf()), attempt);\n+          String taskLogsUrl \u003d HistoryViewer.getTaskLogsUrl(scheme, attempt);\n           taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n-          System.out.println(taskList.toString());\n+          ps.println(taskList);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printAllTaskAttempts(PrintStream ps, TaskType taskType) {\n    Map\u003cTaskID, JobHistoryParser.TaskInfo\u003e tasks \u003d job.getAllTasks();\n    StringBuilder taskList \u003d new StringBuilder();\n    taskList.append(\"\\n\").append(taskType);\n    taskList.append(\" task list for \").append(job.getJobId());\n    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n    if (TaskType.REDUCE.equals(taskType)) {\n      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n    }\n    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    ps.println(taskList.toString());\n    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n      for (JobHistoryParser.TaskAttemptInfo attempt :\n          task.getAllTaskAttempts().values()) {\n        if (taskType.equals(task.getTaskType())){\n          taskList.setLength(0);\n          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n              attempt.getStartTime(), 0)).append(\"\\t\");\n          if (TaskType.REDUCE.equals(taskType)) {\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                attempt.getShuffleFinishTime(),\n                attempt.getStartTime()));\n            taskList.append(\"\\t\");\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                attempt.getSortFinishTime(),\n                attempt.getShuffleFinishTime()));\n          }\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n              attempt.getFinishTime(),\n              attempt.getStartTime()));\n          taskList.append(\"\\t\");\n          taskList.append(attempt.getHostname()).append(\"\\t\");\n          taskList.append(attempt.getError());\n          String taskLogsUrl \u003d HistoryViewer.getTaskLogsUrl(scheme, attempt);\n          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n          ps.println(taskList);\n        }\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
          "commitDate": "18/02/16 5:58 PM",
          "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "18/02/16 2:06 PM",
          "commitNameOld": "8ab7658025616d154decd97578de3327ec6f9109",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,43 +1,42 @@\n-  private void printAllTaskAttempts(TaskType taskType) {\n-    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n-    StringBuffer taskList \u003d new StringBuffer();\n+  private void printAllTaskAttempts(PrintStream ps, TaskType taskType) {\n+    Map\u003cTaskID, JobHistoryParser.TaskInfo\u003e tasks \u003d job.getAllTasks();\n+    StringBuilder taskList \u003d new StringBuilder();\n     taskList.append(\"\\n\").append(taskType);\n     taskList.append(\" task list for \").append(job.getJobId());\n     taskList.append(\"\\nTaskId\\t\\tStartTime\");\n     if (TaskType.REDUCE.equals(taskType)) {\n       taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n     }\n     taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n     taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    System.out.println(taskList.toString());\n+    ps.println(taskList.toString());\n     for (JobHistoryParser.TaskInfo task : tasks.values()) {\n-      for (JobHistoryParser.TaskAttemptInfo attempt : \n-        task.getAllTaskAttempts().values()) {\n+      for (JobHistoryParser.TaskAttemptInfo attempt :\n+          task.getAllTaskAttempts().values()) {\n         if (taskType.equals(task.getTaskType())){\n-          taskList.setLength(0); \n+          taskList.setLength(0);\n           taskList.append(attempt.getAttemptId()).append(\"\\t\");\n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                          attempt.getStartTime(), 0)).append(\"\\t\");\n+              attempt.getStartTime(), 0)).append(\"\\t\");\n           if (TaskType.REDUCE.equals(taskType)) {\n             taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                            attempt.getShuffleFinishTime(),\n-                            attempt.getStartTime()));\n-            taskList.append(\"\\t\"); \n-            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n-                            attempt.getSortFinishTime(),\n-                            attempt.getShuffleFinishTime())); \n-          } \n+                attempt.getShuffleFinishTime(),\n+                attempt.getStartTime()));\n+            taskList.append(\"\\t\");\n+            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n+                attempt.getSortFinishTime(),\n+                attempt.getShuffleFinishTime()));\n+          }\n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n-                          attempt.getFinishTime(),\n-                          attempt.getStartTime())); \n-          taskList.append(\"\\t\"); \n+              attempt.getFinishTime(),\n+              attempt.getStartTime()));\n+          taskList.append(\"\\t\");\n           taskList.append(attempt.getHostname()).append(\"\\t\");\n           taskList.append(attempt.getError());\n-          String taskLogsUrl \u003d getTaskLogsUrl(\n-              WebAppUtils.getHttpSchemePrefix(fs.getConf()), attempt);\n+          String taskLogsUrl \u003d HistoryViewer.getTaskLogsUrl(scheme, attempt);\n           taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n-          System.out.println(taskList.toString());\n+          ps.println(taskList);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printAllTaskAttempts(PrintStream ps, TaskType taskType) {\n    Map\u003cTaskID, JobHistoryParser.TaskInfo\u003e tasks \u003d job.getAllTasks();\n    StringBuilder taskList \u003d new StringBuilder();\n    taskList.append(\"\\n\").append(taskType);\n    taskList.append(\" task list for \").append(job.getJobId());\n    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n    if (TaskType.REDUCE.equals(taskType)) {\n      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n    }\n    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    ps.println(taskList.toString());\n    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n      for (JobHistoryParser.TaskAttemptInfo attempt :\n          task.getAllTaskAttempts().values()) {\n        if (taskType.equals(task.getTaskType())){\n          taskList.setLength(0);\n          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n              attempt.getStartTime(), 0)).append(\"\\t\");\n          if (TaskType.REDUCE.equals(taskType)) {\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                attempt.getShuffleFinishTime(),\n                attempt.getStartTime()));\n            taskList.append(\"\\t\");\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                attempt.getSortFinishTime(),\n                attempt.getShuffleFinishTime()));\n          }\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n              attempt.getFinishTime(),\n              attempt.getStartTime()));\n          taskList.append(\"\\t\");\n          taskList.append(attempt.getHostname()).append(\"\\t\");\n          taskList.append(attempt.getError());\n          String taskLogsUrl \u003d HistoryViewer.getTaskLogsUrl(scheme, attempt);\n          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n          ps.println(taskList);\n        }\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
          "extendedDetails": {
            "oldValue": "[taskType-TaskType]",
            "newValue": "[ps-PrintStream, taskType-TaskType]"
          }
        }
      ]
    },
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "14/11/12 4:16 PM",
      "commitNameOld": "905b17876c44634545a68300ff2f2d73fb86d3b7",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 456.82,
      "commitsBetweenForRepo": 2678,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,43 @@\n   private void printAllTaskAttempts(TaskType taskType) {\n     Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n     StringBuffer taskList \u003d new StringBuffer();\n     taskList.append(\"\\n\").append(taskType);\n     taskList.append(\" task list for \").append(job.getJobId());\n     taskList.append(\"\\nTaskId\\t\\tStartTime\");\n     if (TaskType.REDUCE.equals(taskType)) {\n       taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n     }\n     taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n     taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n     System.out.println(taskList.toString());\n     for (JobHistoryParser.TaskInfo task : tasks.values()) {\n       for (JobHistoryParser.TaskAttemptInfo attempt : \n         task.getAllTaskAttempts().values()) {\n         if (taskType.equals(task.getTaskType())){\n           taskList.setLength(0); \n           taskList.append(attempt.getAttemptId()).append(\"\\t\");\n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                           attempt.getStartTime(), 0)).append(\"\\t\");\n           if (TaskType.REDUCE.equals(taskType)) {\n             taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                             attempt.getShuffleFinishTime(),\n                             attempt.getStartTime()));\n             taskList.append(\"\\t\"); \n             taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n                             attempt.getSortFinishTime(),\n                             attempt.getShuffleFinishTime())); \n           } \n           taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                           attempt.getFinishTime(),\n                           attempt.getStartTime())); \n           taskList.append(\"\\t\"); \n           taskList.append(attempt.getHostname()).append(\"\\t\");\n           taskList.append(attempt.getError());\n-          String taskLogsUrl \u003d getTaskLogsUrl(attempt);\n+          String taskLogsUrl \u003d getTaskLogsUrl(\n+              WebAppUtils.getHttpSchemePrefix(fs.getConf()), attempt);\n           taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n           System.out.println(taskList.toString());\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printAllTaskAttempts(TaskType taskType) {\n    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n    StringBuffer taskList \u003d new StringBuffer();\n    taskList.append(\"\\n\").append(taskType);\n    taskList.append(\" task list for \").append(job.getJobId());\n    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n    if (TaskType.REDUCE.equals(taskType)) {\n      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n    }\n    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    System.out.println(taskList.toString());\n    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n      for (JobHistoryParser.TaskAttemptInfo attempt : \n        task.getAllTaskAttempts().values()) {\n        if (taskType.equals(task.getTaskType())){\n          taskList.setLength(0); \n          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getStartTime(), 0)).append(\"\\t\");\n          if (TaskType.REDUCE.equals(taskType)) {\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                            attempt.getShuffleFinishTime(),\n                            attempt.getStartTime()));\n            taskList.append(\"\\t\"); \n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n                            attempt.getSortFinishTime(),\n                            attempt.getShuffleFinishTime())); \n          } \n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getFinishTime(),\n                          attempt.getStartTime())); \n          taskList.append(\"\\t\"); \n          taskList.append(attempt.getHostname()).append(\"\\t\");\n          taskList.append(attempt.getError());\n          String taskLogsUrl \u003d getTaskLogsUrl(\n              WebAppUtils.getHttpSchemePrefix(fs.getConf()), attempt);\n          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n          System.out.println(taskList.toString());\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printAllTaskAttempts(TaskType taskType) {\n    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n    StringBuffer taskList \u003d new StringBuffer();\n    taskList.append(\"\\n\").append(taskType);\n    taskList.append(\" task list for \").append(job.getJobId());\n    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n    if (TaskType.REDUCE.equals(taskType)) {\n      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n    }\n    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    System.out.println(taskList.toString());\n    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n      for (JobHistoryParser.TaskAttemptInfo attempt : \n        task.getAllTaskAttempts().values()) {\n        if (taskType.equals(task.getTaskType())){\n          taskList.setLength(0); \n          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getStartTime(), 0)).append(\"\\t\");\n          if (TaskType.REDUCE.equals(taskType)) {\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                            attempt.getShuffleFinishTime(),\n                            attempt.getStartTime()));\n            taskList.append(\"\\t\"); \n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n                            attempt.getSortFinishTime(),\n                            attempt.getShuffleFinishTime())); \n          } \n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getFinishTime(),\n                          attempt.getStartTime())); \n          taskList.append(\"\\t\"); \n          taskList.append(attempt.getHostname()).append(\"\\t\");\n          taskList.append(attempt.getError());\n          String taskLogsUrl \u003d getTaskLogsUrl(attempt);\n          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n          System.out.println(taskList.toString());\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printAllTaskAttempts(TaskType taskType) {\n    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n    StringBuffer taskList \u003d new StringBuffer();\n    taskList.append(\"\\n\").append(taskType);\n    taskList.append(\" task list for \").append(job.getJobId());\n    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n    if (TaskType.REDUCE.equals(taskType)) {\n      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n    }\n    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    System.out.println(taskList.toString());\n    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n      for (JobHistoryParser.TaskAttemptInfo attempt : \n        task.getAllTaskAttempts().values()) {\n        if (taskType.equals(task.getTaskType())){\n          taskList.setLength(0); \n          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getStartTime(), 0)).append(\"\\t\");\n          if (TaskType.REDUCE.equals(taskType)) {\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                            attempt.getShuffleFinishTime(),\n                            attempt.getStartTime()));\n            taskList.append(\"\\t\"); \n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n                            attempt.getSortFinishTime(),\n                            attempt.getShuffleFinishTime())); \n          } \n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getFinishTime(),\n                          attempt.getStartTime())); \n          taskList.append(\"\\t\"); \n          taskList.append(attempt.getHostname()).append(\"\\t\");\n          taskList.append(attempt.getError());\n          String taskLogsUrl \u003d getTaskLogsUrl(attempt);\n          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n          System.out.println(taskList.toString());\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
        "oldMethodName": "printAllTaskAttempts",
        "newMethodName": "printAllTaskAttempts"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,42 @@\n+  private void printAllTaskAttempts(TaskType taskType) {\n+    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n+    StringBuffer taskList \u003d new StringBuffer();\n+    taskList.append(\"\\n\").append(taskType);\n+    taskList.append(\" task list for \").append(job.getJobId());\n+    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n+    if (TaskType.REDUCE.equals(taskType)) {\n+      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n+    }\n+    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n+    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n+    System.out.println(taskList.toString());\n+    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n+      for (JobHistoryParser.TaskAttemptInfo attempt : \n+        task.getAllTaskAttempts().values()) {\n+        if (taskType.equals(task.getTaskType())){\n+          taskList.setLength(0); \n+          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n+          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n+                          attempt.getStartTime(), 0)).append(\"\\t\");\n+          if (TaskType.REDUCE.equals(taskType)) {\n+            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n+                            attempt.getShuffleFinishTime(),\n+                            attempt.getStartTime()));\n+            taskList.append(\"\\t\"); \n+            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n+                            attempt.getSortFinishTime(),\n+                            attempt.getShuffleFinishTime())); \n+          } \n+          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n+                          attempt.getFinishTime(),\n+                          attempt.getStartTime())); \n+          taskList.append(\"\\t\"); \n+          taskList.append(attempt.getHostname()).append(\"\\t\");\n+          taskList.append(attempt.getError());\n+          String taskLogsUrl \u003d getTaskLogsUrl(attempt);\n+          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n+          System.out.println(taskList.toString());\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printAllTaskAttempts(TaskType taskType) {\n    Map\u003cTaskID, TaskInfo\u003e tasks \u003d job.getAllTasks();\n    StringBuffer taskList \u003d new StringBuffer();\n    taskList.append(\"\\n\").append(taskType);\n    taskList.append(\" task list for \").append(job.getJobId());\n    taskList.append(\"\\nTaskId\\t\\tStartTime\");\n    if (TaskType.REDUCE.equals(taskType)) {\n      taskList.append(\"\\tShuffleFinished\\tSortFinished\");\n    }\n    taskList.append(\"\\tFinishTime\\tHostName\\tError\\tTaskLogs\");\n    taskList.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    System.out.println(taskList.toString());\n    for (JobHistoryParser.TaskInfo task : tasks.values()) {\n      for (JobHistoryParser.TaskAttemptInfo attempt : \n        task.getAllTaskAttempts().values()) {\n        if (taskType.equals(task.getTaskType())){\n          taskList.setLength(0); \n          taskList.append(attempt.getAttemptId()).append(\"\\t\");\n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getStartTime(), 0)).append(\"\\t\");\n          if (TaskType.REDUCE.equals(taskType)) {\n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                            attempt.getShuffleFinishTime(),\n                            attempt.getStartTime()));\n            taskList.append(\"\\t\"); \n            taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, \n                            attempt.getSortFinishTime(),\n                            attempt.getShuffleFinishTime())); \n          } \n          taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat,\n                          attempt.getFinishTime(),\n                          attempt.getStartTime())); \n          taskList.append(\"\\t\"); \n          taskList.append(attempt.getHostname()).append(\"\\t\");\n          taskList.append(attempt.getError());\n          String taskLogsUrl \u003d getTaskLogsUrl(attempt);\n          taskList.append(taskLogsUrl !\u003d null ? taskLogsUrl : \"n/a\");\n          System.out.println(taskList.toString());\n        }\n      }\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java"
    }
  }
}