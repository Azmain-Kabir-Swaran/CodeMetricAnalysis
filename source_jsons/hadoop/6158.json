{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormat.java",
  "functionName": "loadINodeFileAttributes",
  "functionId": "loadINodeFileAttributes___in-DataInput",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
  "functionStartLine": 882,
  "functionEndLine": 903,
  "numCommitsSeen": 127,
  "timeTaken": 4985,
  "changeHistory": [
    "55c07bbed2f475f7b584a86112ee1b6fe0221e98",
    "a2a5d7b5bca715835d92816e7b267b59f7270708",
    "7e091de1366f4b57b5433bc19d738199dc05313d",
    "bb84f1fccb18c6c7373851e05d2451d55e908242",
    "042b33f20b01aadb5cd03da731ae7a3d94026aac",
    "6f41baa6233dad92865af23ec6b7a89733c11ddd",
    "ac23a55547716df29b3e25c98a113399e184d9d1",
    "d03acc756094a332f98167426a39db8faf38f450",
    "14f1f76bf609704d36a1699c05fa85750cefe917",
    "00067895a01c66d53715b50bbcb3605efd6425f2",
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380"
  ],
  "changeHistoryShort": {
    "55c07bbed2f475f7b584a86112ee1b6fe0221e98": "Ybodychange",
    "a2a5d7b5bca715835d92816e7b267b59f7270708": "Ybodychange",
    "7e091de1366f4b57b5433bc19d738199dc05313d": "Ybodychange",
    "bb84f1fccb18c6c7373851e05d2451d55e908242": "Ybodychange",
    "042b33f20b01aadb5cd03da731ae7a3d94026aac": "Ybodychange",
    "6f41baa6233dad92865af23ec6b7a89733c11ddd": "Ybodychange",
    "ac23a55547716df29b3e25c98a113399e184d9d1": "Ybodychange",
    "d03acc756094a332f98167426a39db8faf38f450": "Ybodychange",
    "14f1f76bf609704d36a1699c05fa85750cefe917": "Ybodychange",
    "00067895a01c66d53715b50bbcb3605efd6425f2": "Ybodychange",
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380": "Yintroduced"
  },
  "changeHistoryDetails": {
    "55c07bbed2f475f7b584a86112ee1b6fe0221e98": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11382. Persist Erasure Coding Policy ID in a new optional field in INodeFile in FSImage. Contributed by Manoj Govindassamy.\n",
      "commitDate": "27/02/17 5:07 PM",
      "commitName": "55c07bbed2f475f7b584a86112ee1b6fe0221e98",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "18/01/17 1:31 PM",
      "commitNameOld": "a2a5d7b5bca715835d92816e7b267b59f7270708",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 40.15,
      "commitsBetweenForRepo": 201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n \n-      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n-          accessTime, replication, preferredBlockSize, (byte) 0, null,\n-          BlockType.CONTIGUOUS);\n+      return new INodeFileAttributes.SnapshotCopy(name, permissions, null,\n+          modificationTime, accessTime, replication, null, preferredBlockSize,\n+          (byte) 0, null, BlockType.CONTIGUOUS);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null,\n          modificationTime, accessTime, replication, null, preferredBlockSize,\n          (byte) 0, null, BlockType.CONTIGUOUS);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "a2a5d7b5bca715835d92816e7b267b59f7270708": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10759. Change fsimage bool isStriped from boolean to an enum. Contributed by Ewan Higgs.\n",
      "commitDate": "18/01/17 1:31 PM",
      "commitName": "a2a5d7b5bca715835d92816e7b267b59f7270708",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/10/16 3:14 PM",
      "commitNameOld": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 85.97,
      "commitsBetweenForRepo": 568,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n \n       return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n-          accessTime, replication, preferredBlockSize, (byte) 0, null, false);\n+          accessTime, replication, preferredBlockSize, (byte) 0, null,\n+          BlockType.CONTIGUOUS);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n          accessTime, replication, preferredBlockSize, (byte) 0, null,\n          BlockType.CONTIGUOUS);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "7e091de1366f4b57b5433bc19d738199dc05313d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8058. Erasure coding: use BlockInfo[] for both striped and contiguous blocks in INodeFile. Contributed by Zhe Zhang and Yi Liu.\n",
      "commitDate": "15/07/15 9:49 AM",
      "commitName": "7e091de1366f4b57b5433bc19d738199dc05313d",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "14/06/15 12:39 AM",
      "commitNameOld": "49d5cff49011cc0878665204e22b5c832bc914ce",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 31.38,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n \n       return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n-          accessTime, replication, preferredBlockSize, (byte) 0, null);\n+          accessTime, replication, preferredBlockSize, (byte) 0, null, false);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n          accessTime, replication, preferredBlockSize, (byte) 0, null, false);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "bb84f1fccb18c6c7373851e05d2451d55e908242": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7159. Use block storage policy to set lazy persist preference. (Arpit Agarwal)\n",
      "commitDate": "29/09/14 10:27 PM",
      "commitName": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthor": "arp",
      "commitDateOld": "18/09/14 10:26 PM",
      "commitNameOld": "f8bbf80067ac03400acae4655615c9808c538ca8",
      "commitAuthorOld": "",
      "daysBetweenCommits": 11.0,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n \n-      // LazyPersist flag will not be present in old image formats and hence\n-      // can be safely set to false always.\n       return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n-          accessTime, replication, preferredBlockSize, false, (byte) 0, null);\n+          accessTime, replication, preferredBlockSize, (byte) 0, null);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n          accessTime, replication, preferredBlockSize, (byte) 0, null);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "042b33f20b01aadb5cd03da731ae7a3d94026aac": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6922. Add LazyPersist flag to INodeFile, save it in FsImage and edit logs. (Arpit Agarwal)\n",
      "commitDate": "27/08/14 9:47 PM",
      "commitName": "042b33f20b01aadb5cd03da731ae7a3d94026aac",
      "commitAuthor": "arp",
      "commitDateOld": "24/07/14 4:42 PM",
      "commitNameOld": "e171254d56bfff467a67a6cf9160595c941f50c0",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 34.21,
      "commitsBetweenForRepo": 268,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n \n+      // LazyPersist flag will not be present in old image formats and hence\n+      // can be safely set to false always.\n       return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n-          accessTime, replication, preferredBlockSize, null);\n+          accessTime, replication, preferredBlockSize, false, null);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      // LazyPersist flag will not be present in old image formats and hence\n      // can be safely set to false always.\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n          accessTime, replication, preferredBlockSize, false, null);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "6f41baa6233dad92865af23ec6b7a89733c11ddd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6677. Change INodeFile and FSImage to support storage policy ID.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1610525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/07/14 1:57 PM",
      "commitName": "6f41baa6233dad92865af23ec6b7a89733c11ddd",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "07/07/14 5:08 PM",
      "commitNameOld": "76a621ffd2d66bf012a554f4400091a92a5b473e",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 6.87,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n \n       return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n-          accessTime, replication, preferredBlockSize, null);\n+          accessTime, replication, preferredBlockSize, (byte)0, null);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n          accessTime, replication, preferredBlockSize, (byte)0, null);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "ac23a55547716df29b3e25c98a113399e184d9d1": {
      "type": "Ybodychange",
      "commitMessage": "Merge HDFS-2006 HDFS XAttrs branch to Trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 6:57 AM",
      "commitName": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "13/05/14 6:15 PM",
      "commitNameOld": "97f58955a6045b373ab73653bf26ab5922b00cf3",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 7.53,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n \n       return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n-          accessTime, replication, preferredBlockSize);\n+          accessTime, replication, preferredBlockSize, null);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n          accessTime, replication, preferredBlockSize, null);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "d03acc756094a332f98167426a39db8faf38f450": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5914. Incorporate ACLs with the changes from HDFS-5698. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1566991 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 10:25 PM",
      "commitName": "d03acc756094a332f98167426a39db8faf38f450",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "09/02/14 11:45 AM",
      "commitNameOld": "2ed075e1bb085a2897fbefda53b1c1db54c81d92",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.44,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n-      AclFeature aclFeature \u003d permissions.getPermission().getAclBit() ?\n-          loadAclFeature(in, layoutVersion) : null;\n-      return new INodeFileAttributes.SnapshotCopy(name, permissions, aclFeature,\n-          modificationTime, accessTime, replication, preferredBlockSize);\n+\n+      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n+          accessTime, replication, preferredBlockSize);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, null, modificationTime,\n          accessTime, replication, preferredBlockSize);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "14f1f76bf609704d36a1699c05fa85750cefe917": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5614. NameNode: implement handling of ACLs in combination with snapshots. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1563304 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/14 2:21 PM",
      "commitName": "14f1f76bf609704d36a1699c05fa85750cefe917",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "17/01/14 10:50 PM",
      "commitNameOld": "8a9a6dbd7e8da2fff7e769b8f6a0aa220faad28f",
      "commitAuthorOld": "",
      "daysBetweenCommits": 13.65,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n-      \n-      return new INodeFileAttributes.SnapshotCopy(name, permissions, modificationTime,\n-          accessTime, replication, preferredBlockSize);\n+      AclFeature aclFeature \u003d permissions.getPermission().getAclBit() ?\n+          loadAclFeature(in, layoutVersion) : null;\n+      return new INodeFileAttributes.SnapshotCopy(name, permissions, aclFeature,\n+          modificationTime, accessTime, replication, preferredBlockSize);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n      AclFeature aclFeature \u003d permissions.getPermission().getAclBit() ?\n          loadAclFeature(in, layoutVersion) : null;\n      return new INodeFileAttributes.SnapshotCopy(name, permissions, aclFeature,\n          modificationTime, accessTime, replication, preferredBlockSize);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "00067895a01c66d53715b50bbcb3605efd6425f2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5754. Split LayoutVerion into NameNodeLayoutVersion and DataNodeLayoutVersion. Contributed by Brandon Li\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1563041 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 7:21 PM",
      "commitName": "00067895a01c66d53715b50bbcb3605efd6425f2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/01/14 5:32 PM",
      "commitNameOld": "a7ec44d41b0ad1fa133408a10caaae32a27ea569",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 14.08,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n-      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n+      if (!NameNodeLayoutVersion.supports(\n+          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asFile();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       final long accessTime \u003d in.readLong();\n   \n       final short replication \u003d namesystem.getBlockManager().adjustReplication(\n           in.readShort());\n       final long preferredBlockSize \u003d in.readLong();\n       \n       return new INodeFileAttributes.SnapshotCopy(name, permissions, modificationTime,\n           accessTime, replication, preferredBlockSize);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n      \n      return new INodeFileAttributes.SnapshotCopy(name, permissions, modificationTime,\n          accessTime, replication, preferredBlockSize);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4908. Reduce snapshot inode memory usage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/13 10:10 PM",
      "commitName": "c02953dbc344b39e0eb0d13fe2d899cdcdc46380",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,20 @@\n+    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n+        throws IOException {\n+      final int layoutVersion \u003d getLayoutVersion();\n+      \n+      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n+        return loadINodeWithLocalName(true, in, false).asFile();\n+      }\n+  \n+      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n+      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n+      final long modificationTime \u003d in.readLong();\n+      final long accessTime \u003d in.readLong();\n+  \n+      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n+          in.readShort());\n+      final long preferredBlockSize \u003d in.readLong();\n+      \n+      return new INodeFileAttributes.SnapshotCopy(name, permissions, modificationTime,\n+          accessTime, replication, preferredBlockSize);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeFileAttributes loadINodeFileAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asFile();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      final long accessTime \u003d in.readLong();\n  \n      final short replication \u003d namesystem.getBlockManager().adjustReplication(\n          in.readShort());\n      final long preferredBlockSize \u003d in.readLong();\n      \n      return new INodeFileAttributes.SnapshotCopy(name, permissions, modificationTime,\n          accessTime, replication, preferredBlockSize);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java"
    }
  }
}