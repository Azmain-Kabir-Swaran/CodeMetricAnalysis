{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupMappingPlacementRule.java",
  "functionName": "getSecondaryGroup",
  "functionId": "getSecondaryGroup___user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
  "functionStartLine": 80,
  "functionEndLine": 98,
  "numCommitsSeen": 24,
  "timeTaken": 1714,
  "changeHistory": [
    "621c5eac38697755cf29aa8618869c09092b6a80",
    "30b93f914b7015d4567e199c51a2ebe727fee320"
  ],
  "changeHistoryShort": {
    "621c5eac38697755cf29aa8618869c09092b6a80": "Ybodychange",
    "30b93f914b7015d4567e199c51a2ebe727fee320": "Yintroduced"
  },
  "changeHistoryDetails": {
    "621c5eac38697755cf29aa8618869c09092b6a80": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9912. Capacity scheduler: support u:user2:%secondary_group queue mapping. Contributed by Manikandan R\n",
      "commitDate": "13/01/20 8:23 AM",
      "commitName": "621c5eac38697755cf29aa8618869c09092b6a80",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "13/01/20 8:15 AM",
      "commitNameOld": "b7ef8a333f6717735caeee09ae4ce67bff7285e3",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   private String getSecondaryGroup(String user) throws IOException {\n     List\u003cString\u003e groupsList \u003d groups.getGroups(user);\n     String secondaryGroup \u003d null;\n     // Traverse all secondary groups (as there could be more than one\n     // and position is not guaranteed) and ensure there is queue with\n     // the same name\n     for (int i \u003d 1; i \u003c groupsList.size(); i++) {\n       if (this.queueManager.getQueue(groupsList.get(i)) !\u003d null) {\n         secondaryGroup \u003d groupsList.get(i);\n         break;\n       }\n     }\n+\n+    if (secondaryGroup \u003d\u003d null \u0026\u0026 LOG.isDebugEnabled()) {\n+      LOG.debug(\"User {} is not associated with any Secondary \"\n+          + \"Group. Hence it may use the \u0027default\u0027 queue\", user);\n+    }\n     return secondaryGroup;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getSecondaryGroup(String user) throws IOException {\n    List\u003cString\u003e groupsList \u003d groups.getGroups(user);\n    String secondaryGroup \u003d null;\n    // Traverse all secondary groups (as there could be more than one\n    // and position is not guaranteed) and ensure there is queue with\n    // the same name\n    for (int i \u003d 1; i \u003c groupsList.size(); i++) {\n      if (this.queueManager.getQueue(groupsList.get(i)) !\u003d null) {\n        secondaryGroup \u003d groupsList.get(i);\n        break;\n      }\n    }\n\n    if (secondaryGroup \u003d\u003d null \u0026\u0026 LOG.isDebugEnabled()) {\n      LOG.debug(\"User {} is not associated with any Secondary \"\n          + \"Group. Hence it may use the \u0027default\u0027 queue\", user);\n    }\n    return secondaryGroup;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "30b93f914b7015d4567e199c51a2ebe727fee320": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9865. Capacity scheduler: add support for combined %user + %secondary_group mapping. Contributed by Manikandan R\n",
      "commitDate": "11/11/19 4:28 AM",
      "commitName": "30b93f914b7015d4567e199c51a2ebe727fee320",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,14 @@\n+  private String getSecondaryGroup(String user) throws IOException {\n+    List\u003cString\u003e groupsList \u003d groups.getGroups(user);\n+    String secondaryGroup \u003d null;\n+    // Traverse all secondary groups (as there could be more than one\n+    // and position is not guaranteed) and ensure there is queue with\n+    // the same name\n+    for (int i \u003d 1; i \u003c groupsList.size(); i++) {\n+      if (this.queueManager.getQueue(groupsList.get(i)) !\u003d null) {\n+        secondaryGroup \u003d groupsList.get(i);\n+        break;\n+      }\n+    }\n+    return secondaryGroup;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getSecondaryGroup(String user) throws IOException {\n    List\u003cString\u003e groupsList \u003d groups.getGroups(user);\n    String secondaryGroup \u003d null;\n    // Traverse all secondary groups (as there could be more than one\n    // and position is not guaranteed) and ensure there is queue with\n    // the same name\n    for (int i \u003d 1; i \u003c groupsList.size(); i++) {\n      if (this.queueManager.getQueue(groupsList.get(i)) !\u003d null) {\n        secondaryGroup \u003d groupsList.get(i);\n        break;\n      }\n    }\n    return secondaryGroup;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java"
    }
  }
}