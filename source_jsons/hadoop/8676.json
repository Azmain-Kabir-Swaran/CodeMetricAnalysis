{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirTruncateOp.java",
  "functionName": "verifyQuotaForTruncate",
  "functionId": "verifyQuotaForTruncate___fsn-FSNamesystem__iip-INodesInPath__file-INodeFile__newLength-long__delta-QuotaCounts",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirTruncateOp.java",
  "functionStartLine": 313,
  "functionEndLine": 330,
  "numCommitsSeen": 264,
  "timeTaken": 3700,
  "changeHistory": [
    "d3797f9f3cf502b7bfee3b64c641807b276c6faf",
    "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f",
    "d368d3647a858644b9fcd3be33d9fea2a6962f69"
  ],
  "changeHistoryShort": {
    "d3797f9f3cf502b7bfee3b64c641807b276c6faf": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f": "Ybodychange",
    "d368d3647a858644b9fcd3be33d9fea2a6962f69": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d3797f9f3cf502b7bfee3b64c641807b276c6faf": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-8493. Consolidate truncate() related implementation in a single class. Contributed by Rakesh R.\n",
      "commitDate": "29/06/15 4:45 PM",
      "commitName": "d3797f9f3cf502b7bfee3b64c641807b276c6faf",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8493. Consolidate truncate() related implementation in a single class. Contributed by Rakesh R.\n",
          "commitDate": "29/06/15 4:45 PM",
          "commitName": "d3797f9f3cf502b7bfee3b64c641807b276c6faf",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/06/15 2:56 PM",
          "commitNameOld": "8e333720e13428a4d0d0f65692102f8f2e5da98d",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n-      long newLength, QuotaCounts delta) throws QuotaExceededException {\n-    if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n+  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n+      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n+      throws QuotaExceededException {\n+    FSDirectory fsd \u003d fsn.getFSDirectory();\n+    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edit log is still being processed\n       return;\n     }\n-    final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n+    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n         .getPolicy(file.getStoragePolicyID());\n     file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n-    readLock();\n+    fsd.readLock();\n     try {\n-      verifyQuota(iip, iip.length() - 1, delta, null);\n+      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n     } finally {\n-      readUnlock();\n+      fsd.readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n      throws QuotaExceededException {\n    FSDirectory fsd \u003d fsn.getFSDirectory();\n    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edit log is still being processed\n      return;\n    }\n    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n        .getPolicy(file.getStoragePolicyID());\n    file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n    fsd.readLock();\n    try {\n      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n    } finally {\n      fsd.readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirTruncateOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirTruncateOp.java",
            "oldMethodName": "verifyQuotaForTruncate",
            "newMethodName": "verifyQuotaForTruncate"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8493. Consolidate truncate() related implementation in a single class. Contributed by Rakesh R.\n",
          "commitDate": "29/06/15 4:45 PM",
          "commitName": "d3797f9f3cf502b7bfee3b64c641807b276c6faf",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/06/15 2:56 PM",
          "commitNameOld": "8e333720e13428a4d0d0f65692102f8f2e5da98d",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n-      long newLength, QuotaCounts delta) throws QuotaExceededException {\n-    if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n+  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n+      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n+      throws QuotaExceededException {\n+    FSDirectory fsd \u003d fsn.getFSDirectory();\n+    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edit log is still being processed\n       return;\n     }\n-    final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n+    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n         .getPolicy(file.getStoragePolicyID());\n     file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n-    readLock();\n+    fsd.readLock();\n     try {\n-      verifyQuota(iip, iip.length() - 1, delta, null);\n+      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n     } finally {\n-      readUnlock();\n+      fsd.readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n      throws QuotaExceededException {\n    FSDirectory fsd \u003d fsn.getFSDirectory();\n    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edit log is still being processed\n      return;\n    }\n    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n        .getPolicy(file.getStoragePolicyID());\n    file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n    fsd.readLock();\n    try {\n      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n    } finally {\n      fsd.readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirTruncateOp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8493. Consolidate truncate() related implementation in a single class. Contributed by Rakesh R.\n",
          "commitDate": "29/06/15 4:45 PM",
          "commitName": "d3797f9f3cf502b7bfee3b64c641807b276c6faf",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/06/15 2:56 PM",
          "commitNameOld": "8e333720e13428a4d0d0f65692102f8f2e5da98d",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n-      long newLength, QuotaCounts delta) throws QuotaExceededException {\n-    if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n+  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n+      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n+      throws QuotaExceededException {\n+    FSDirectory fsd \u003d fsn.getFSDirectory();\n+    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edit log is still being processed\n       return;\n     }\n-    final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n+    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n         .getPolicy(file.getStoragePolicyID());\n     file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n-    readLock();\n+    fsd.readLock();\n     try {\n-      verifyQuota(iip, iip.length() - 1, delta, null);\n+      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n     } finally {\n-      readUnlock();\n+      fsd.readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n      throws QuotaExceededException {\n    FSDirectory fsd \u003d fsn.getFSDirectory();\n    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edit log is still being processed\n      return;\n    }\n    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n        .getPolicy(file.getStoragePolicyID());\n    file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n    fsd.readLock();\n    try {\n      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n    } finally {\n      fsd.readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirTruncateOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8493. Consolidate truncate() related implementation in a single class. Contributed by Rakesh R.\n",
          "commitDate": "29/06/15 4:45 PM",
          "commitName": "d3797f9f3cf502b7bfee3b64c641807b276c6faf",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/06/15 2:56 PM",
          "commitNameOld": "8e333720e13428a4d0d0f65692102f8f2e5da98d",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n-      long newLength, QuotaCounts delta) throws QuotaExceededException {\n-    if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n+  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n+      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n+      throws QuotaExceededException {\n+    FSDirectory fsd \u003d fsn.getFSDirectory();\n+    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n       // Do not check quota if edit log is still being processed\n       return;\n     }\n-    final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n+    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n         .getPolicy(file.getStoragePolicyID());\n     file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n-    readLock();\n+    fsd.readLock();\n     try {\n-      verifyQuota(iip, iip.length() - 1, delta, null);\n+      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n     } finally {\n-      readUnlock();\n+      fsd.readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void verifyQuotaForTruncate(FSNamesystem fsn,\n      INodesInPath iip, INodeFile file, long newLength, QuotaCounts delta)\n      throws QuotaExceededException {\n    FSDirectory fsd \u003d fsn.getFSDirectory();\n    if (!fsn.isImageLoaded() || fsd.shouldSkipQuotaChecks()) {\n      // Do not check quota if edit log is still being processed\n      return;\n    }\n    final BlockStoragePolicy policy \u003d fsd.getBlockStoragePolicySuite()\n        .getPolicy(file.getStoragePolicyID());\n    file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n    fsd.readLock();\n    try {\n      FSDirectory.verifyQuota(iip, iip.length() - 1, delta, null);\n    } finally {\n      fsd.readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirTruncateOp.java",
          "extendedDetails": {
            "oldValue": "[iip-INodesInPath, file-INodeFile, newLength-long, delta-QuotaCounts]",
            "newValue": "[fsn-FSNamesystem, iip-INodesInPath, file-INodeFile, newLength-long, delta-QuotaCounts]"
          }
        }
      ]
    },
    "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8327. Compute storage type quotas in INodeFile.computeQuotaDeltaForTruncate(). Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:09 PM",
      "commitName": "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 6.55,
      "commitsBetweenForRepo": 131,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,16 @@\n   private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n       long newLength, QuotaCounts delta) throws QuotaExceededException {\n     if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n       // Do not check quota if edit log is still being processed\n       return;\n     }\n-    final long diff \u003d file.computeQuotaDeltaForTruncate(newLength);\n-    final short repl \u003d file.getBlockReplication();\n-    delta.addStorageSpace(diff * repl);\n     final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n         .getPolicy(file.getStoragePolicyID());\n-    List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n-    for (StorageType t : types) {\n-      if (t.supportTypeQuota()) {\n-        delta.addTypeSpace(t, diff);\n-      }\n-    }\n-    if (diff \u003e 0) {\n-      readLock();\n-      try {\n-        verifyQuota(iip, iip.length() - 1, delta, null);\n-      } finally {\n-        readUnlock();\n-      }\n+    file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n+    readLock();\n+    try {\n+      verifyQuota(iip, iip.length() - 1, delta, null);\n+    } finally {\n+      readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n      long newLength, QuotaCounts delta) throws QuotaExceededException {\n    if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n      // Do not check quota if edit log is still being processed\n      return;\n    }\n    final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n        .getPolicy(file.getStoragePolicyID());\n    file.computeQuotaDeltaForTruncate(newLength, policy, delta);\n    readLock();\n    try {\n      verifyQuota(iip, iip.length() - 1, delta, null);\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "d368d3647a858644b9fcd3be33d9fea2a6962f69": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7957. Truncate should verify quota before making changes. Contributed by Jing Zhao.\n",
      "commitDate": "20/03/15 11:50 AM",
      "commitName": "d368d3647a858644b9fcd3be33d9fea2a6962f69",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,26 @@\n+  private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n+      long newLength, QuotaCounts delta) throws QuotaExceededException {\n+    if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n+      // Do not check quota if edit log is still being processed\n+      return;\n+    }\n+    final long diff \u003d file.computeQuotaDeltaForTruncate(newLength);\n+    final short repl \u003d file.getBlockReplication();\n+    delta.addStorageSpace(diff * repl);\n+    final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n+        .getPolicy(file.getStoragePolicyID());\n+    List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n+    for (StorageType t : types) {\n+      if (t.supportTypeQuota()) {\n+        delta.addTypeSpace(t, diff);\n+      }\n+    }\n+    if (diff \u003e 0) {\n+      readLock();\n+      try {\n+        verifyQuota(iip, iip.length() - 1, delta, null);\n+      } finally {\n+        readUnlock();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyQuotaForTruncate(INodesInPath iip, INodeFile file,\n      long newLength, QuotaCounts delta) throws QuotaExceededException {\n    if (!getFSNamesystem().isImageLoaded() || shouldSkipQuotaChecks()) {\n      // Do not check quota if edit log is still being processed\n      return;\n    }\n    final long diff \u003d file.computeQuotaDeltaForTruncate(newLength);\n    final short repl \u003d file.getBlockReplication();\n    delta.addStorageSpace(diff * repl);\n    final BlockStoragePolicy policy \u003d getBlockStoragePolicySuite()\n        .getPolicy(file.getStoragePolicyID());\n    List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n    for (StorageType t : types) {\n      if (t.supportTypeQuota()) {\n        delta.addTypeSpace(t, diff);\n      }\n    }\n    if (diff \u003e 0) {\n      readLock();\n      try {\n        verifyQuota(iip, iip.length() - 1, delta, null);\n      } finally {\n        readUnlock();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
    }
  }
}