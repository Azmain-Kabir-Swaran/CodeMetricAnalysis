{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceManager.java",
  "functionName": "createSystemMetricsPublisher",
  "functionId": "createSystemMetricsPublisher",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
  "functionStartLine": 581,
  "functionEndLine": 611,
  "numCommitsSeen": 192,
  "timeTaken": 5664,
  "changeHistory": [
    "a79564fed0b641f7207f5066500128326a3ac296",
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
    "f3c661e8dddc80726f1084ff27815d179540889c",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "a79564fed0b641f7207f5066500128326a3ac296": "Ybodychange",
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90": "Ybodychange",
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": "Ybodychange",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": "Ybodychange",
    "f3c661e8dddc80726f1084ff27815d179540889c": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a79564fed0b641f7207f5066500128326a3ac296": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9732. yarn.system-metrics-publisher.enabled\u003dfalse is not honored by RM. Contributed by KWON BYUNGCHANG.\n",
      "commitDate": "09/08/19 9:55 AM",
      "commitName": "a79564fed0b641f7207f5066500128326a3ac296",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "11/07/19 1:57 PM",
      "commitNameOld": "9b54dd71863af58c2ef5f2194f5097626b8ef18a",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 28.83,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   protected SystemMetricsPublisher createSystemMetricsPublisher() {\n     List\u003cSystemMetricsPublisher\u003e publishers \u003d\n         new ArrayList\u003cSystemMetricsPublisher\u003e();\n-    if (YarnConfiguration.timelineServiceV1Enabled(conf)) {\n+    if (YarnConfiguration.timelineServiceV1Enabled(conf) \u0026\u0026\n+        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n       SystemMetricsPublisher publisherV1 \u003d new TimelineServiceV1Publisher();\n       publishers.add(publisherV1);\n     }\n-    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n+    if (YarnConfiguration.timelineServiceV2Enabled(conf) \u0026\u0026\n+        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n       // we\u0027re dealing with the v.2.x publisher\n       LOG.info(\"system metrics publisher with the timeline service V2 is \"\n           + \"configured\");\n       SystemMetricsPublisher publisherV2 \u003d new TimelineServiceV2Publisher(\n           rmContext.getRMTimelineCollectorManager());\n       publishers.add(publisherV2);\n     }\n     if (publishers.isEmpty()) {\n       LOG.info(\"TimelineServicePublisher is not configured\");\n       SystemMetricsPublisher noopPublisher \u003d new NoOpSystemMetricPublisher();\n       publishers.add(noopPublisher);\n     }\n \n     for (SystemMetricsPublisher publisher : publishers) {\n       addIfService(publisher);\n     }\n \n     SystemMetricsPublisher combinedPublisher \u003d\n         new CombinedSystemMetricsPublisher(publishers);\n     return combinedPublisher;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n    List\u003cSystemMetricsPublisher\u003e publishers \u003d\n        new ArrayList\u003cSystemMetricsPublisher\u003e();\n    if (YarnConfiguration.timelineServiceV1Enabled(conf) \u0026\u0026\n        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n      SystemMetricsPublisher publisherV1 \u003d new TimelineServiceV1Publisher();\n      publishers.add(publisherV1);\n    }\n    if (YarnConfiguration.timelineServiceV2Enabled(conf) \u0026\u0026\n        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n      // we\u0027re dealing with the v.2.x publisher\n      LOG.info(\"system metrics publisher with the timeline service V2 is \"\n          + \"configured\");\n      SystemMetricsPublisher publisherV2 \u003d new TimelineServiceV2Publisher(\n          rmContext.getRMTimelineCollectorManager());\n      publishers.add(publisherV2);\n    }\n    if (publishers.isEmpty()) {\n      LOG.info(\"TimelineServicePublisher is not configured\");\n      SystemMetricsPublisher noopPublisher \u003d new NoOpSystemMetricPublisher();\n      publishers.add(noopPublisher);\n    }\n\n    for (SystemMetricsPublisher publisher : publishers) {\n      addIfService(publisher);\n    }\n\n    SystemMetricsPublisher combinedPublisher \u003d\n        new CombinedSystemMetricsPublisher(publishers);\n    return combinedPublisher;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6736. Consider writing to both ats v1 \u0026 v2 from RM for smoother upgrades. Contributed by Aaron Gresch.\n",
      "commitDate": "15/01/18 6:28 PM",
      "commitName": "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "30/11/17 3:57 PM",
      "commitNameOld": "a63d19d36520fa55bf523483f14329756f6eadd3",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 46.1,
      "commitsBetweenForRepo": 254,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,29 @@\n   protected SystemMetricsPublisher createSystemMetricsPublisher() {\n-    SystemMetricsPublisher publisher;\n-    if (YarnConfiguration.timelineServiceEnabled(conf) \u0026\u0026\n-        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n-      if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n-        // we\u0027re dealing with the v.2.x publisher\n-        LOG.info(\"system metrics publisher with the timeline service V2 is \" +\n-            \"configured\");\n-        publisher \u003d new TimelineServiceV2Publisher(\n-            rmContext.getRMTimelineCollectorManager());\n-      } else {\n-        // we\u0027re dealing with the v.1.x publisher\n-        LOG.info(\"system metrics publisher with the timeline service V1 is \" +\n-            \"configured\");\n-        publisher \u003d new TimelineServiceV1Publisher();\n-      }\n-    } else {\n-      LOG.info(\"TimelineServicePublisher is not configured\");\n-      publisher \u003d new NoOpSystemMetricPublisher();\n+    List\u003cSystemMetricsPublisher\u003e publishers \u003d\n+        new ArrayList\u003cSystemMetricsPublisher\u003e();\n+    if (YarnConfiguration.timelineServiceV1Enabled(conf)) {\n+      SystemMetricsPublisher publisherV1 \u003d new TimelineServiceV1Publisher();\n+      publishers.add(publisherV1);\n     }\n-    return publisher;\n+    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n+      // we\u0027re dealing with the v.2.x publisher\n+      LOG.info(\"system metrics publisher with the timeline service V2 is \"\n+          + \"configured\");\n+      SystemMetricsPublisher publisherV2 \u003d new TimelineServiceV2Publisher(\n+          rmContext.getRMTimelineCollectorManager());\n+      publishers.add(publisherV2);\n+    }\n+    if (publishers.isEmpty()) {\n+      LOG.info(\"TimelineServicePublisher is not configured\");\n+      SystemMetricsPublisher noopPublisher \u003d new NoOpSystemMetricPublisher();\n+      publishers.add(noopPublisher);\n+    }\n+\n+    for (SystemMetricsPublisher publisher : publishers) {\n+      addIfService(publisher);\n+    }\n+\n+    SystemMetricsPublisher combinedPublisher \u003d\n+        new CombinedSystemMetricsPublisher(publishers);\n+    return combinedPublisher;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n    List\u003cSystemMetricsPublisher\u003e publishers \u003d\n        new ArrayList\u003cSystemMetricsPublisher\u003e();\n    if (YarnConfiguration.timelineServiceV1Enabled(conf)) {\n      SystemMetricsPublisher publisherV1 \u003d new TimelineServiceV1Publisher();\n      publishers.add(publisherV1);\n    }\n    if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n      // we\u0027re dealing with the v.2.x publisher\n      LOG.info(\"system metrics publisher with the timeline service V2 is \"\n          + \"configured\");\n      SystemMetricsPublisher publisherV2 \u003d new TimelineServiceV2Publisher(\n          rmContext.getRMTimelineCollectorManager());\n      publishers.add(publisherV2);\n    }\n    if (publishers.isEmpty()) {\n      LOG.info(\"TimelineServicePublisher is not configured\");\n      SystemMetricsPublisher noopPublisher \u003d new NoOpSystemMetricPublisher();\n      publishers.add(noopPublisher);\n    }\n\n    for (SystemMetricsPublisher publisher : publishers) {\n      addIfService(publisher);\n    }\n\n    SystemMetricsPublisher combinedPublisher \u003d\n        new CombinedSystemMetricsPublisher(publishers);\n    return combinedPublisher;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "31/05/17 8:18 AM",
      "commitNameOld": "cbfed0e82f57e96b8d5309e0613057963840554f",
      "commitAuthorOld": "Jonathan Eagles",
      "daysBetweenCommits": 53.62,
      "commitsBetweenForRepo": 247,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   protected SystemMetricsPublisher createSystemMetricsPublisher() {\n     SystemMetricsPublisher publisher;\n     if (YarnConfiguration.timelineServiceEnabled(conf) \u0026\u0026\n         YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n       if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n         // we\u0027re dealing with the v.2.x publisher\n         LOG.info(\"system metrics publisher with the timeline service V2 is \" +\n             \"configured\");\n-        publisher \u003d new TimelineServiceV2Publisher(rmContext);\n+        publisher \u003d new TimelineServiceV2Publisher(\n+            rmContext.getRMTimelineCollectorManager());\n       } else {\n         // we\u0027re dealing with the v.1.x publisher\n         LOG.info(\"system metrics publisher with the timeline service V1 is \" +\n             \"configured\");\n         publisher \u003d new TimelineServiceV1Publisher();\n       }\n     } else {\n       LOG.info(\"TimelineServicePublisher is not configured\");\n       publisher \u003d new NoOpSystemMetricPublisher();\n     }\n     return publisher;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n    SystemMetricsPublisher publisher;\n    if (YarnConfiguration.timelineServiceEnabled(conf) \u0026\u0026\n        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n      if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n        // we\u0027re dealing with the v.2.x publisher\n        LOG.info(\"system metrics publisher with the timeline service V2 is \" +\n            \"configured\");\n        publisher \u003d new TimelineServiceV2Publisher(\n            rmContext.getRMTimelineCollectorManager());\n      } else {\n        // we\u0027re dealing with the v.1.x publisher\n        LOG.info(\"system metrics publisher with the timeline service V1 is \" +\n            \"configured\");\n        publisher \u003d new TimelineServiceV1Publisher();\n      }\n    } else {\n      LOG.info(\"TimelineServicePublisher is not configured\");\n      publisher \u003d new NoOpSystemMetricPublisher();\n    }\n    return publisher;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   protected SystemMetricsPublisher createSystemMetricsPublisher() {\n-    boolean timelineServiceEnabled \u003d\n-        conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,\n-            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ENABLED);\n-    SystemMetricsPublisher publisher \u003d null;\n-    if (timelineServiceEnabled) {\n-      if (conf.getBoolean(YarnConfiguration.RM_SYSTEM_METRICS_PUBLISHER_ENABLED,\n-          YarnConfiguration.DEFAULT_RM_SYSTEM_METRICS_PUBLISHER_ENABLED)) {\n-        LOG.info(\"TimelineService V1 is configured\");\n-        publisher \u003d new TimelineServiceV1Publisher();\n-      } else {\n-        LOG.info(\"TimelineService V2 is configured\");\n+    SystemMetricsPublisher publisher;\n+    if (YarnConfiguration.timelineServiceEnabled(conf) \u0026\u0026\n+        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n+      if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n+        // we\u0027re dealing with the v.2.x publisher\n+        LOG.info(\"system metrics publisher with the timeline service V2 is \" +\n+            \"configured\");\n         publisher \u003d new TimelineServiceV2Publisher(rmContext);\n+      } else {\n+        // we\u0027re dealing with the v.1.x publisher\n+        LOG.info(\"system metrics publisher with the timeline service V1 is \" +\n+            \"configured\");\n+        publisher \u003d new TimelineServiceV1Publisher();\n       }\n     } else {\n       LOG.info(\"TimelineServicePublisher is not configured\");\n       publisher \u003d new NoOpSystemMetricPublisher();\n     }\n     return publisher;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n    SystemMetricsPublisher publisher;\n    if (YarnConfiguration.timelineServiceEnabled(conf) \u0026\u0026\n        YarnConfiguration.systemMetricsPublisherEnabled(conf)) {\n      if (YarnConfiguration.timelineServiceV2Enabled(conf)) {\n        // we\u0027re dealing with the v.2.x publisher\n        LOG.info(\"system metrics publisher with the timeline service V2 is \" +\n            \"configured\");\n        publisher \u003d new TimelineServiceV2Publisher(rmContext);\n      } else {\n        // we\u0027re dealing with the v.1.x publisher\n        LOG.info(\"system metrics publisher with the timeline service V1 is \" +\n            \"configured\");\n        publisher \u003d new TimelineServiceV1Publisher();\n      }\n    } else {\n      LOG.info(\"TimelineServicePublisher is not configured\");\n      publisher \u003d new NoOpSystemMetricPublisher();\n    }\n    return publisher;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,20 @@\n   protected SystemMetricsPublisher createSystemMetricsPublisher() {\n-    return new SystemMetricsPublisher(rmContext);\n+    boolean timelineServiceEnabled \u003d\n+        conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,\n+            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ENABLED);\n+    SystemMetricsPublisher publisher \u003d null;\n+    if (timelineServiceEnabled) {\n+      if (conf.getBoolean(YarnConfiguration.RM_SYSTEM_METRICS_PUBLISHER_ENABLED,\n+          YarnConfiguration.DEFAULT_RM_SYSTEM_METRICS_PUBLISHER_ENABLED)) {\n+        LOG.info(\"TimelineService V1 is configured\");\n+        publisher \u003d new TimelineServiceV1Publisher();\n+      } else {\n+        LOG.info(\"TimelineService V2 is configured\");\n+        publisher \u003d new TimelineServiceV2Publisher(rmContext);\n+      }\n+    } else {\n+      LOG.info(\"TimelineServicePublisher is not configured\");\n+      publisher \u003d new NoOpSystemMetricPublisher();\n+    }\n+    return publisher;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n    boolean timelineServiceEnabled \u003d\n        conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,\n            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ENABLED);\n    SystemMetricsPublisher publisher \u003d null;\n    if (timelineServiceEnabled) {\n      if (conf.getBoolean(YarnConfiguration.RM_SYSTEM_METRICS_PUBLISHER_ENABLED,\n          YarnConfiguration.DEFAULT_RM_SYSTEM_METRICS_PUBLISHER_ENABLED)) {\n        LOG.info(\"TimelineService V1 is configured\");\n        publisher \u003d new TimelineServiceV1Publisher();\n      } else {\n        LOG.info(\"TimelineService V2 is configured\");\n        publisher \u003d new TimelineServiceV2Publisher(rmContext);\n      }\n    } else {\n      LOG.info(\"TimelineServicePublisher is not configured\");\n      publisher \u003d new NoOpSystemMetricPublisher();\n    }\n    return publisher;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "f3c661e8dddc80726f1084ff27815d179540889c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   protected SystemMetricsPublisher createSystemMetricsPublisher() {\n-    return new SystemMetricsPublisher(); \n+    return new SystemMetricsPublisher(rmContext);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n    return new SystemMetricsPublisher(rmContext);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,3 @@\n+  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n+    return new SystemMetricsPublisher(); \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected SystemMetricsPublisher createSystemMetricsPublisher() {\n    return new SystemMetricsPublisher(); \n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
    }
  }
}