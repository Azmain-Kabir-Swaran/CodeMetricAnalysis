{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptor.java",
  "functionName": "mergeRegisterResponse",
  "functionId": "mergeRegisterResponse___homeResponse-RegisterApplicationMasterResponse__otherResponse-RegisterApplicationMasterResponse",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
  "functionStartLine": 931,
  "functionEndLine": 954,
  "numCommitsSeen": 21,
  "timeTaken": 1646,
  "changeHistory": [
    "d5f66888b8d767ee6706fab9950c194a1bf26d32"
  ],
  "changeHistoryShort": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
      "commitDate": "17/11/17 5:39 PM",
      "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,24 @@\n+  private void mergeRegisterResponse(\n+      RegisterApplicationMasterResponse homeResponse,\n+      RegisterApplicationMasterResponse otherResponse) {\n+\n+    if (!isNullOrEmpty(otherResponse.getContainersFromPreviousAttempts())) {\n+      if (!isNullOrEmpty(homeResponse.getContainersFromPreviousAttempts())) {\n+        homeResponse.getContainersFromPreviousAttempts()\n+            .addAll(otherResponse.getContainersFromPreviousAttempts());\n+      } else {\n+        homeResponse.setContainersFromPreviousAttempts(\n+            otherResponse.getContainersFromPreviousAttempts());\n+      }\n+    }\n+\n+    if (!isNullOrEmpty(otherResponse.getNMTokensFromPreviousAttempts())) {\n+      if (!isNullOrEmpty(homeResponse.getNMTokensFromPreviousAttempts())) {\n+        homeResponse.getNMTokensFromPreviousAttempts()\n+            .addAll(otherResponse.getNMTokensFromPreviousAttempts());\n+      } else {\n+        homeResponse.setNMTokensFromPreviousAttempts(\n+            otherResponse.getNMTokensFromPreviousAttempts());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeRegisterResponse(\n      RegisterApplicationMasterResponse homeResponse,\n      RegisterApplicationMasterResponse otherResponse) {\n\n    if (!isNullOrEmpty(otherResponse.getContainersFromPreviousAttempts())) {\n      if (!isNullOrEmpty(homeResponse.getContainersFromPreviousAttempts())) {\n        homeResponse.getContainersFromPreviousAttempts()\n            .addAll(otherResponse.getContainersFromPreviousAttempts());\n      } else {\n        homeResponse.setContainersFromPreviousAttempts(\n            otherResponse.getContainersFromPreviousAttempts());\n      }\n    }\n\n    if (!isNullOrEmpty(otherResponse.getNMTokensFromPreviousAttempts())) {\n      if (!isNullOrEmpty(homeResponse.getNMTokensFromPreviousAttempts())) {\n        homeResponse.getNMTokensFromPreviousAttempts()\n            .addAll(otherResponse.getNMTokensFromPreviousAttempts());\n      } else {\n        homeResponse.setNMTokensFromPreviousAttempts(\n            otherResponse.getNMTokensFromPreviousAttempts());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java"
    }
  }
}