{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocatedBlocks.java",
  "functionName": "insertRange",
  "functionId": "insertRange___blockIdx-int__newBlocks-List__LocatedBlock__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java",
  "functionStartLine": 157,
  "functionEndLine": 183,
  "numCommitsSeen": 19,
  "timeTaken": 4789,
  "changeHistory": [
    "5c97db07fb306842f49d73a67a90cecec19a7833",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "5c97db07fb306842f49d73a67a90cecec19a7833": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5c97db07fb306842f49d73a67a90cecec19a7833": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8169. Move LocatedBlocks and related classes to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "20/04/15 12:36 AM",
      "commitName": "5c97db07fb306842f49d73a67a90cecec19a7833",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/04/15 4:09 PM",
      "commitNameOld": "8511d80804de052618168a456a475ee0f7aa6d8c",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void insertRange(int blockIdx, List\u003cLocatedBlock\u003e newBlocks) {\n     int oldIdx \u003d blockIdx;\n     int insStart \u003d 0, insEnd \u003d 0;\n-    for(int newIdx \u003d 0; newIdx \u003c newBlocks.size() \u0026\u0026 oldIdx \u003c blocks.size(); \n+    for(int newIdx \u003d 0; newIdx \u003c newBlocks.size() \u0026\u0026 oldIdx \u003c blocks.size();\n                                                         newIdx++) {\n       long newOff \u003d newBlocks.get(newIdx).getStartOffset();\n       long oldOff \u003d blocks.get(oldIdx).getStartOffset();\n       if(newOff \u003c oldOff) {\n         insEnd++;\n       } else if(newOff \u003d\u003d oldOff) {\n         // replace old cached block by the new one\n         blocks.set(oldIdx, newBlocks.get(newIdx));\n         if(insStart \u003c insEnd) { // insert new blocks\n           blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n           oldIdx +\u003d insEnd - insStart;\n         }\n         insStart \u003d insEnd \u003d newIdx+1;\n         oldIdx++;\n       } else {  // newOff \u003e oldOff\n         assert false : \"List of LocatedBlock must be sorted by startOffset\";\n       }\n     }\n     insEnd \u003d newBlocks.size();\n     if(insStart \u003c insEnd) { // insert new blocks\n       blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void insertRange(int blockIdx, List\u003cLocatedBlock\u003e newBlocks) {\n    int oldIdx \u003d blockIdx;\n    int insStart \u003d 0, insEnd \u003d 0;\n    for(int newIdx \u003d 0; newIdx \u003c newBlocks.size() \u0026\u0026 oldIdx \u003c blocks.size();\n                                                        newIdx++) {\n      long newOff \u003d newBlocks.get(newIdx).getStartOffset();\n      long oldOff \u003d blocks.get(oldIdx).getStartOffset();\n      if(newOff \u003c oldOff) {\n        insEnd++;\n      } else if(newOff \u003d\u003d oldOff) {\n        // replace old cached block by the new one\n        blocks.set(oldIdx, newBlocks.get(newIdx));\n        if(insStart \u003c insEnd) { // insert new blocks\n          blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n          oldIdx +\u003d insEnd - insStart;\n        }\n        insStart \u003d insEnd \u003d newIdx+1;\n        oldIdx++;\n      } else {  // newOff \u003e oldOff\n        assert false : \"List of LocatedBlock must be sorted by startOffset\";\n      }\n    }\n    insEnd \u003d newBlocks.size();\n    if(insStart \u003c insEnd) { // insert new blocks\n      blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void insertRange(int blockIdx, List\u003cLocatedBlock\u003e newBlocks) {\n    int oldIdx \u003d blockIdx;\n    int insStart \u003d 0, insEnd \u003d 0;\n    for(int newIdx \u003d 0; newIdx \u003c newBlocks.size() \u0026\u0026 oldIdx \u003c blocks.size(); \n                                                        newIdx++) {\n      long newOff \u003d newBlocks.get(newIdx).getStartOffset();\n      long oldOff \u003d blocks.get(oldIdx).getStartOffset();\n      if(newOff \u003c oldOff) {\n        insEnd++;\n      } else if(newOff \u003d\u003d oldOff) {\n        // replace old cached block by the new one\n        blocks.set(oldIdx, newBlocks.get(newIdx));\n        if(insStart \u003c insEnd) { // insert new blocks\n          blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n          oldIdx +\u003d insEnd - insStart;\n        }\n        insStart \u003d insEnd \u003d newIdx+1;\n        oldIdx++;\n      } else {  // newOff \u003e oldOff\n        assert false : \"List of LocatedBlock must be sorted by startOffset\";\n      }\n    }\n    insEnd \u003d newBlocks.size();\n    if(insStart \u003c insEnd) { // insert new blocks\n      blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void insertRange(int blockIdx, List\u003cLocatedBlock\u003e newBlocks) {\n    int oldIdx \u003d blockIdx;\n    int insStart \u003d 0, insEnd \u003d 0;\n    for(int newIdx \u003d 0; newIdx \u003c newBlocks.size() \u0026\u0026 oldIdx \u003c blocks.size(); \n                                                        newIdx++) {\n      long newOff \u003d newBlocks.get(newIdx).getStartOffset();\n      long oldOff \u003d blocks.get(oldIdx).getStartOffset();\n      if(newOff \u003c oldOff) {\n        insEnd++;\n      } else if(newOff \u003d\u003d oldOff) {\n        // replace old cached block by the new one\n        blocks.set(oldIdx, newBlocks.get(newIdx));\n        if(insStart \u003c insEnd) { // insert new blocks\n          blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n          oldIdx +\u003d insEnd - insStart;\n        }\n        insStart \u003d insEnd \u003d newIdx+1;\n        oldIdx++;\n      } else {  // newOff \u003e oldOff\n        assert false : \"List of LocatedBlock must be sorted by startOffset\";\n      }\n    }\n    insEnd \u003d newBlocks.size();\n    if(insStart \u003c insEnd) { // insert new blocks\n      blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,27 @@\n+  public void insertRange(int blockIdx, List\u003cLocatedBlock\u003e newBlocks) {\n+    int oldIdx \u003d blockIdx;\n+    int insStart \u003d 0, insEnd \u003d 0;\n+    for(int newIdx \u003d 0; newIdx \u003c newBlocks.size() \u0026\u0026 oldIdx \u003c blocks.size(); \n+                                                        newIdx++) {\n+      long newOff \u003d newBlocks.get(newIdx).getStartOffset();\n+      long oldOff \u003d blocks.get(oldIdx).getStartOffset();\n+      if(newOff \u003c oldOff) {\n+        insEnd++;\n+      } else if(newOff \u003d\u003d oldOff) {\n+        // replace old cached block by the new one\n+        blocks.set(oldIdx, newBlocks.get(newIdx));\n+        if(insStart \u003c insEnd) { // insert new blocks\n+          blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n+          oldIdx +\u003d insEnd - insStart;\n+        }\n+        insStart \u003d insEnd \u003d newIdx+1;\n+        oldIdx++;\n+      } else {  // newOff \u003e oldOff\n+        assert false : \"List of LocatedBlock must be sorted by startOffset\";\n+      }\n+    }\n+    insEnd \u003d newBlocks.size();\n+    if(insStart \u003c insEnd) { // insert new blocks\n+      blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void insertRange(int blockIdx, List\u003cLocatedBlock\u003e newBlocks) {\n    int oldIdx \u003d blockIdx;\n    int insStart \u003d 0, insEnd \u003d 0;\n    for(int newIdx \u003d 0; newIdx \u003c newBlocks.size() \u0026\u0026 oldIdx \u003c blocks.size(); \n                                                        newIdx++) {\n      long newOff \u003d newBlocks.get(newIdx).getStartOffset();\n      long oldOff \u003d blocks.get(oldIdx).getStartOffset();\n      if(newOff \u003c oldOff) {\n        insEnd++;\n      } else if(newOff \u003d\u003d oldOff) {\n        // replace old cached block by the new one\n        blocks.set(oldIdx, newBlocks.get(newIdx));\n        if(insStart \u003c insEnd) { // insert new blocks\n          blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n          oldIdx +\u003d insEnd - insStart;\n        }\n        insStart \u003d insEnd \u003d newIdx+1;\n        oldIdx++;\n      } else {  // newOff \u003e oldOff\n        assert false : \"List of LocatedBlock must be sorted by startOffset\";\n      }\n    }\n    insEnd \u003d newBlocks.size();\n    if(insStart \u003c insEnd) { // insert new blocks\n      blocks.addAll(oldIdx, newBlocks.subList(insStart, insEnd));\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/LocatedBlocks.java"
    }
  }
}