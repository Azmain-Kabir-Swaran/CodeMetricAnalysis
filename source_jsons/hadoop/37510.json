{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceManager.java",
  "functionName": "handle",
  "functionId": "handle___event-RMFatalEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
  "functionStartLine": 966,
  "functionEndLine": 1004,
  "numCommitsSeen": 236,
  "timeTaken": 5429,
  "changeHistory": [
    "e40e2d6ad5cbe782c3a067229270738b501ed27e",
    "166be0ee95d5ef976f074342656b289b41a11ccd",
    "395275af8622c780b9071c243422b0780e096202",
    "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4",
    "e0ce554b86fd1ecb9bfd184d15c8e1decea02d5e",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc"
  ],
  "changeHistoryShort": {
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": "Ybodychange",
    "166be0ee95d5ef976f074342656b289b41a11ccd": "Ybodychange",
    "395275af8622c780b9071c243422b0780e096202": "Ybodychange",
    "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4": "Ybodychange",
    "e0ce554b86fd1ecb9bfd184d15c8e1decea02d5e": "Ybodychange",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": "Ymultichange(Yparameterchange,Ybodychange)",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": "Ybodychange",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ybodychange",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7243. Moving logging APIs over to slf4j in hadoop-yarn-server-resourcemanager.\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "04/03/19 9:10 PM",
      "commitName": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "11/11/18 10:27 PM",
      "commitNameOld": "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 112.95,
      "commitsBetweenForRepo": 806,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,39 @@\n     public void handle(RMFatalEvent event) {\n       LOG.error(\"Received \" + event);\n \n       if (HAUtil.isHAEnabled(getConfig())) {\n         // If we\u0027re in an HA config, the right answer is always to go into\n         // standby.\n         LOG.warn(\"Transitioning the resource manager to standby.\");\n         handleTransitionToStandByInNewThread();\n       } else {\n         // If we\u0027re stand-alone, we probably want to shut down, but the if and\n         // how depends on the event.\n         switch(event.getType()) {\n         case STATE_STORE_FENCED:\n-          LOG.fatal(\"State store fenced even though the resource manager \" +\n-              \"is not configured for high availability. Shutting down this \" +\n-              \"resource manager to protect the integrity of the state store.\");\n+          LOG.error(FATAL, \"State store fenced even though the resource \" +\n+              \"manager is not configured for high availability. Shutting \" +\n+              \"down this resource manager to protect the integrity of the \" +\n+              \"state store.\");\n           ExitUtil.terminate(1, event.getExplanation());\n           break;\n         case STATE_STORE_OP_FAILED:\n           if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n-            LOG.fatal(\"Shutting down the resource manager because a state \" +\n-                \"store operation failed, and the resource manager is \" +\n+            LOG.error(FATAL, \"Shutting down the resource manager because a \" +\n+                \"state store operation failed, and the resource manager is \" +\n                 \"configured to fail fast. See the yarn.fail-fast and \" +\n                 \"yarn.resourcemanager.fail-fast properties.\");\n             ExitUtil.terminate(1, event.getExplanation());\n           } else {\n             LOG.warn(\"Ignoring state store operation failure because the \" +\n                 \"resource manager is not configured to fail fast. See the \" +\n                 \"yarn.fail-fast and yarn.resourcemanager.fail-fast \" +\n                 \"properties.\");\n           }\n           break;\n         default:\n-          LOG.fatal(\"Shutting down the resource manager.\");\n+          LOG.error(FATAL, \"Shutting down the resource manager.\");\n           ExitUtil.terminate(1, event.getExplanation());\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMFatalEvent event) {\n      LOG.error(\"Received \" + event);\n\n      if (HAUtil.isHAEnabled(getConfig())) {\n        // If we\u0027re in an HA config, the right answer is always to go into\n        // standby.\n        LOG.warn(\"Transitioning the resource manager to standby.\");\n        handleTransitionToStandByInNewThread();\n      } else {\n        // If we\u0027re stand-alone, we probably want to shut down, but the if and\n        // how depends on the event.\n        switch(event.getType()) {\n        case STATE_STORE_FENCED:\n          LOG.error(FATAL, \"State store fenced even though the resource \" +\n              \"manager is not configured for high availability. Shutting \" +\n              \"down this resource manager to protect the integrity of the \" +\n              \"state store.\");\n          ExitUtil.terminate(1, event.getExplanation());\n          break;\n        case STATE_STORE_OP_FAILED:\n          if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n            LOG.error(FATAL, \"Shutting down the resource manager because a \" +\n                \"state store operation failed, and the resource manager is \" +\n                \"configured to fail fast. See the yarn.fail-fast and \" +\n                \"yarn.resourcemanager.fail-fast properties.\");\n            ExitUtil.terminate(1, event.getExplanation());\n          } else {\n            LOG.warn(\"Ignoring state store operation failure because the \" +\n                \"resource manager is not configured to fail fast. See the \" +\n                \"yarn.fail-fast and yarn.resourcemanager.fail-fast \" +\n                \"properties.\");\n          }\n          break;\n        default:\n          LOG.error(FATAL, \"Shutting down the resource manager.\");\n          ExitUtil.terminate(1, event.getExplanation());\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "166be0ee95d5ef976f074342656b289b41a11ccd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3742. YARN RM will shut down if ZKClient creation times out. (Daniel Templeton via kasha)\n",
      "commitDate": "09/05/17 2:44 PM",
      "commitName": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "19/04/17 11:44 AM",
      "commitNameOld": "dd43b895c2e50fa97cb7327be77509b87dad1823",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 20.12,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,38 @@\n     public void handle(RMFatalEvent event) {\n-      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n-          event.getType().name() + \". Cause:\\n\" + event.getCause());\n+      LOG.error(\"Received \" + event);\n \n-      ExitUtil.terminate(1, event.getCause());\n+      if (HAUtil.isHAEnabled(getConfig())) {\n+        // If we\u0027re in an HA config, the right answer is always to go into\n+        // standby.\n+        LOG.warn(\"Transitioning the resource manager to standby.\");\n+        handleTransitionToStandByInNewThread();\n+      } else {\n+        // If we\u0027re stand-alone, we probably want to shut down, but the if and\n+        // how depends on the event.\n+        switch(event.getType()) {\n+        case STATE_STORE_FENCED:\n+          LOG.fatal(\"State store fenced even though the resource manager \" +\n+              \"is not configured for high availability. Shutting down this \" +\n+              \"resource manager to protect the integrity of the state store.\");\n+          ExitUtil.terminate(1, event.getExplanation());\n+          break;\n+        case STATE_STORE_OP_FAILED:\n+          if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n+            LOG.fatal(\"Shutting down the resource manager because a state \" +\n+                \"store operation failed, and the resource manager is \" +\n+                \"configured to fail fast. See the yarn.fail-fast and \" +\n+                \"yarn.resourcemanager.fail-fast properties.\");\n+            ExitUtil.terminate(1, event.getExplanation());\n+          } else {\n+            LOG.warn(\"Ignoring state store operation failure because the \" +\n+                \"resource manager is not configured to fail fast. See the \" +\n+                \"yarn.fail-fast and yarn.resourcemanager.fail-fast \" +\n+                \"properties.\");\n+          }\n+          break;\n+        default:\n+          LOG.fatal(\"Shutting down the resource manager.\");\n+          ExitUtil.terminate(1, event.getExplanation());\n+        }\n+      }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMFatalEvent event) {\n      LOG.error(\"Received \" + event);\n\n      if (HAUtil.isHAEnabled(getConfig())) {\n        // If we\u0027re in an HA config, the right answer is always to go into\n        // standby.\n        LOG.warn(\"Transitioning the resource manager to standby.\");\n        handleTransitionToStandByInNewThread();\n      } else {\n        // If we\u0027re stand-alone, we probably want to shut down, but the if and\n        // how depends on the event.\n        switch(event.getType()) {\n        case STATE_STORE_FENCED:\n          LOG.fatal(\"State store fenced even though the resource manager \" +\n              \"is not configured for high availability. Shutting down this \" +\n              \"resource manager to protect the integrity of the state store.\");\n          ExitUtil.terminate(1, event.getExplanation());\n          break;\n        case STATE_STORE_OP_FAILED:\n          if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n            LOG.fatal(\"Shutting down the resource manager because a state \" +\n                \"store operation failed, and the resource manager is \" +\n                \"configured to fail fast. See the yarn.fail-fast and \" +\n                \"yarn.resourcemanager.fail-fast properties.\");\n            ExitUtil.terminate(1, event.getExplanation());\n          } else {\n            LOG.warn(\"Ignoring state store operation failure because the \" +\n                \"resource manager is not configured to fail fast. See the \" +\n                \"yarn.fail-fast and yarn.resourcemanager.fail-fast \" +\n                \"properties.\");\n          }\n          break;\n        default:\n          LOG.fatal(\"Shutting down the resource manager.\");\n          ExitUtil.terminate(1, event.getExplanation());\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "395275af8622c780b9071c243422b0780e096202": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2579. Fixed a deadlock issue when EmbeddedElectorService and FatalEventDispatcher try to transition RM to StandBy at the same time. Contributed by Rohith Sharmaks\n",
      "commitDate": "05/11/14 4:59 PM",
      "commitName": "395275af8622c780b9071c243422b0780e096202",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/11/14 3:30 PM",
      "commitNameOld": "834e931d8efe4d806347b266e7e62929ce05389b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,6 @@\n     public void handle(RMFatalEvent event) {\n       LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n           event.getType().name() + \". Cause:\\n\" + event.getCause());\n \n-      if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n-        LOG.info(\"RMStateStore has been fenced\");\n-        if (rmContext.isHAEnabled()) {\n-          try {\n-            // Transition to standby and reinit active services\n-            LOG.info(\"Transitioning RM to Standby mode\");\n-            rm.transitionToStandby(true);\n-            rm.adminService.resetLeaderElection();\n-            return;\n-          } catch (Exception e) {\n-            LOG.fatal(\"Failed to transition RM to Standby mode.\");\n-          }\n-        }\n-      }\n-\n       ExitUtil.terminate(1, event.getCause());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMFatalEvent event) {\n      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n          event.getType().name() + \". Cause:\\n\" + event.getCause());\n\n      ExitUtil.terminate(1, event.getCause());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1861. Fixed a bug in RM to reset leader-election on fencing that was causing both RMs to be stuck in standby mode when automatic failover is enabled. Contributed by Karthik Kambatla and Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594356 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 1:00 PM",
      "commitName": "2f87e77cb7f6cd7155b8b95922f5e1aaf88335b4",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/03/14 8:03 PM",
      "commitNameOld": "8a9ae9e3ecb6946838e54bb0c3b8282c3215d8ab",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 48.71,
      "commitsBetweenForRepo": 287,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     public void handle(RMFatalEvent event) {\n       LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n           event.getType().name() + \". Cause:\\n\" + event.getCause());\n \n       if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n         LOG.info(\"RMStateStore has been fenced\");\n         if (rmContext.isHAEnabled()) {\n           try {\n             // Transition to standby and reinit active services\n             LOG.info(\"Transitioning RM to Standby mode\");\n             rm.transitionToStandby(true);\n+            rm.adminService.resetLeaderElection();\n             return;\n           } catch (Exception e) {\n             LOG.fatal(\"Failed to transition RM to Standby mode.\");\n           }\n         }\n       }\n \n       ExitUtil.terminate(1, event.getCause());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMFatalEvent event) {\n      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n          event.getType().name() + \". Cause:\\n\" + event.getCause());\n\n      if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n        LOG.info(\"RMStateStore has been fenced\");\n        if (rmContext.isHAEnabled()) {\n          try {\n            // Transition to standby and reinit active services\n            LOG.info(\"Transitioning RM to Standby mode\");\n            rm.transitionToStandby(true);\n            rm.adminService.resetLeaderElection();\n            return;\n          } catch (Exception e) {\n            LOG.fatal(\"Failed to transition RM to Standby mode.\");\n          }\n        }\n      }\n\n      ExitUtil.terminate(1, event.getCause());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "e0ce554b86fd1ecb9bfd184d15c8e1decea02d5e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1616. RMFatalEventDispatcher should log the cause of the event (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1559902 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/01/14 6:01 PM",
      "commitName": "e0ce554b86fd1ecb9bfd184d15c8e1decea02d5e",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "10/01/14 12:15 PM",
      "commitNameOld": "6608b75829992e84d265dec84b6cb52f041b454a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 10.24,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void handle(RMFatalEvent event) {\n       LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n-          event.getType().name());\n+          event.getType().name() + \". Cause:\\n\" + event.getCause());\n \n       if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n         LOG.info(\"RMStateStore has been fenced\");\n         if (rmContext.isHAEnabled()) {\n           try {\n             // Transition to standby and reinit active services\n             LOG.info(\"Transitioning RM to Standby mode\");\n             rm.transitionToStandby(true);\n             return;\n           } catch (Exception e) {\n             LOG.fatal(\"Failed to transition RM to Standby mode.\");\n           }\n         }\n       }\n \n       ExitUtil.terminate(1, event.getCause());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMFatalEvent event) {\n      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n          event.getType().name() + \". Cause:\\n\" + event.getCause());\n\n      if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n        LOG.info(\"RMStateStore has been fenced\");\n        if (rmContext.isHAEnabled()) {\n          try {\n            // Transition to standby and reinit active services\n            LOG.info(\"Transitioning RM to Standby mode\");\n            rm.transitionToStandby(true);\n            return;\n          } catch (Exception e) {\n            LOG.fatal(\"Failed to transition RM to Standby mode.\");\n          }\n        }\n      }\n\n      ExitUtil.terminate(1, event.getCause());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 5:56 PM",
      "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/01/14 5:56 PM",
          "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "25/12/13 4:21 PM",
          "commitNameOld": "d841a0f47461af485d6c8320b54e761006c619a7",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 12.07,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,20 @@\n-    public void handle(RMStateStoreOperationFailedEvent event) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Received a \" +\n-            RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n-            event.getType().name());\n-      }\n-      if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n+    public void handle(RMFatalEvent event) {\n+      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n+          event.getType().name());\n+\n+      if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n         LOG.info(\"RMStateStore has been fenced\");\n         if (rmContext.isHAEnabled()) {\n           try {\n             // Transition to standby and reinit active services\n             LOG.info(\"Transitioning RM to Standby mode\");\n             rm.transitionToStandby(true);\n             return;\n           } catch (Exception e) {\n-            LOG.error(\"Failed to transition RM to Standby mode.\");\n+            LOG.fatal(\"Failed to transition RM to Standby mode.\");\n           }\n         }\n       }\n \n-      LOG.error(\"Shutting down RM on receiving a \" +\n-          RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n-          event.getType().name());\n       ExitUtil.terminate(1, event.getCause());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(RMFatalEvent event) {\n      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n          event.getType().name());\n\n      if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n        LOG.info(\"RMStateStore has been fenced\");\n        if (rmContext.isHAEnabled()) {\n          try {\n            // Transition to standby and reinit active services\n            LOG.info(\"Transitioning RM to Standby mode\");\n            rm.transitionToStandby(true);\n            return;\n          } catch (Exception e) {\n            LOG.fatal(\"Failed to transition RM to Standby mode.\");\n          }\n        }\n      }\n\n      ExitUtil.terminate(1, event.getCause());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
          "extendedDetails": {
            "oldValue": "[event-RMStateStoreOperationFailedEvent]",
            "newValue": "[event-RMFatalEvent]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/01/14 5:56 PM",
          "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "25/12/13 4:21 PM",
          "commitNameOld": "d841a0f47461af485d6c8320b54e761006c619a7",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 12.07,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,20 @@\n-    public void handle(RMStateStoreOperationFailedEvent event) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Received a \" +\n-            RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n-            event.getType().name());\n-      }\n-      if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n+    public void handle(RMFatalEvent event) {\n+      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n+          event.getType().name());\n+\n+      if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n         LOG.info(\"RMStateStore has been fenced\");\n         if (rmContext.isHAEnabled()) {\n           try {\n             // Transition to standby and reinit active services\n             LOG.info(\"Transitioning RM to Standby mode\");\n             rm.transitionToStandby(true);\n             return;\n           } catch (Exception e) {\n-            LOG.error(\"Failed to transition RM to Standby mode.\");\n+            LOG.fatal(\"Failed to transition RM to Standby mode.\");\n           }\n         }\n       }\n \n-      LOG.error(\"Shutting down RM on receiving a \" +\n-          RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n-          event.getType().name());\n       ExitUtil.terminate(1, event.getCause());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(RMFatalEvent event) {\n      LOG.fatal(\"Received a \" + RMFatalEvent.class.getName() + \" of type \" +\n          event.getType().name());\n\n      if (event.getType() \u003d\u003d RMFatalEventType.STATE_STORE_FENCED) {\n        LOG.info(\"RMStateStore has been fenced\");\n        if (rmContext.isHAEnabled()) {\n          try {\n            // Transition to standby and reinit active services\n            LOG.info(\"Transitioning RM to Standby mode\");\n            rm.transitionToStandby(true);\n            return;\n          } catch (Exception e) {\n            LOG.fatal(\"Failed to transition RM to Standby mode.\");\n          }\n        }\n      }\n\n      ExitUtil.terminate(1, event.getCause());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 7:13 AM",
      "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "07/12/13 8:30 PM",
      "commitNameOld": "48fb53bc4966acf42851a54df80f54ab27f8ac70",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.45,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,25 @@\n     public void handle(RMStateStoreOperationFailedEvent event) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Received a \" +\n             RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n             event.getType().name());\n       }\n       if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n         LOG.info(\"RMStateStore has been fenced\");\n-        synchronized(adminService) {\n-          if (adminService.haEnabled) {\n-            try {\n-              // Transition to standby and reinit active services\n-              LOG.info(\"Transitioning RM to Standby mode\");\n-              adminService.transitionToStandby(true);\n-              return;\n-            } catch (Exception e) {\n-              LOG.error(\"Failed to transition RM to Standby mode.\");\n-            }\n+        if (rmContext.isHAEnabled()) {\n+          try {\n+            // Transition to standby and reinit active services\n+            LOG.info(\"Transitioning RM to Standby mode\");\n+            rm.transitionToStandby(true);\n+            return;\n+          } catch (Exception e) {\n+            LOG.error(\"Failed to transition RM to Standby mode.\");\n           }\n         }\n       }\n \n       LOG.error(\"Shutting down RM on receiving a \" +\n           RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n           event.getType().name());\n       ExitUtil.terminate(1, event.getCause());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMStateStoreOperationFailedEvent event) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Received a \" +\n            RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n            event.getType().name());\n      }\n      if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n        LOG.info(\"RMStateStore has been fenced\");\n        if (rmContext.isHAEnabled()) {\n          try {\n            // Transition to standby and reinit active services\n            LOG.info(\"Transitioning RM to Standby mode\");\n            rm.transitionToStandby(true);\n            return;\n          } catch (Exception e) {\n            LOG.error(\"Failed to transition RM to Standby mode.\");\n          }\n        }\n      }\n\n      LOG.error(\"Shutting down RM on receiving a \" +\n          RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n          event.getType().name());\n      ExitUtil.terminate(1, event.getCause());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/11/13 3:22 PM",
      "commitNameOld": "6369c8d81972a9a0b6ef41f4508fcb60d34e3d78",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.96,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public void handle(RMStateStoreOperationFailedEvent event) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Received a \" +\n             RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n             event.getType().name());\n       }\n       if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n         LOG.info(\"RMStateStore has been fenced\");\n-        synchronized(haService) {\n-          if (haService.haEnabled) {\n+        synchronized(adminService) {\n+          if (adminService.haEnabled) {\n             try {\n               // Transition to standby and reinit active services\n               LOG.info(\"Transitioning RM to Standby mode\");\n-              haService.transitionToStandby(true);\n+              adminService.transitionToStandby(true);\n               return;\n             } catch (Exception e) {\n               LOG.error(\"Failed to transition RM to Standby mode.\");\n             }\n           }\n         }\n       }\n \n       LOG.error(\"Shutting down RM on receiving a \" +\n           RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n           event.getType().name());\n       ExitUtil.terminate(1, event.getCause());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMStateStoreOperationFailedEvent event) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Received a \" +\n            RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n            event.getType().name());\n      }\n      if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n        LOG.info(\"RMStateStore has been fenced\");\n        synchronized(adminService) {\n          if (adminService.haEnabled) {\n            try {\n              // Transition to standby and reinit active services\n              LOG.info(\"Transitioning RM to Standby mode\");\n              adminService.transitionToStandby(true);\n              return;\n            } catch (Exception e) {\n              LOG.error(\"Failed to transition RM to Standby mode.\");\n            }\n          }\n        }\n      }\n\n      LOG.error(\"Shutting down RM on receiving a \" +\n          RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n          event.getType().name());\n      ExitUtil.terminate(1, event.getCause());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 9:53 AM",
      "commitName": "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,27 @@\n+    public void handle(RMStateStoreOperationFailedEvent event) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Received a \" +\n+            RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n+            event.getType().name());\n+      }\n+      if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n+        LOG.info(\"RMStateStore has been fenced\");\n+        synchronized(haService) {\n+          if (haService.haEnabled) {\n+            try {\n+              // Transition to standby and reinit active services\n+              LOG.info(\"Transitioning RM to Standby mode\");\n+              haService.transitionToStandby(true);\n+              return;\n+            } catch (Exception e) {\n+              LOG.error(\"Failed to transition RM to Standby mode.\");\n+            }\n+          }\n+        }\n+      }\n+\n+      LOG.error(\"Shutting down RM on receiving a \" +\n+          RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n+          event.getType().name());\n+      ExitUtil.terminate(1, event.getCause());\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(RMStateStoreOperationFailedEvent event) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Received a \" +\n            RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n            event.getType().name());\n      }\n      if (event.getType() \u003d\u003d RMStateStoreOperationFailedEventType.FENCED) {\n        LOG.info(\"RMStateStore has been fenced\");\n        synchronized(haService) {\n          if (haService.haEnabled) {\n            try {\n              // Transition to standby and reinit active services\n              LOG.info(\"Transitioning RM to Standby mode\");\n              haService.transitionToStandby(true);\n              return;\n            } catch (Exception e) {\n              LOG.error(\"Failed to transition RM to Standby mode.\");\n            }\n          }\n        }\n      }\n\n      LOG.error(\"Shutting down RM on receiving a \" +\n          RMStateStoreOperationFailedEvent.class.getName() + \" of type \" +\n          event.getType().name());\n      ExitUtil.terminate(1, event.getCause());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
    }
  }
}