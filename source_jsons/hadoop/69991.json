{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IntegerConfigurationBasicValidator.java",
  "functionName": "validate",
  "functionId": "validate___configValue-String(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/diagnostics/IntegerConfigurationBasicValidator.java",
  "functionStartLine": 41,
  "functionEndLine": 67,
  "numCommitsSeen": 2,
  "timeTaken": 426,
  "changeHistory": [
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,27 @@\n+  public Integer validate(final String configValue) throws InvalidConfigurationValueException {\n+    Integer result \u003d super.validate(configValue);\n+    if (result !\u003d null) {\n+      return result;\n+    }\n+\n+    try {\n+      result \u003d Integer.parseInt(configValue);\n+      // throw an exception if a \u0027within bounds\u0027 value is missing\n+      if (getThrowIfInvalid() \u0026\u0026 (result \u003c this.min || result \u003e this.max)) {\n+        throw new InvalidConfigurationValueException(getConfigKey());\n+      }\n+\n+      // set the value to the nearest bound if it\u0027s out of bounds\n+      if (result \u003c this.min) {\n+        return this.min;\n+      }\n+\n+      if (result \u003e this.max) {\n+        return this.max;\n+      }\n+    } catch (NumberFormatException ex) {\n+      throw new InvalidConfigurationValueException(getConfigKey(), ex);\n+    }\n+\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Integer validate(final String configValue) throws InvalidConfigurationValueException {\n    Integer result \u003d super.validate(configValue);\n    if (result !\u003d null) {\n      return result;\n    }\n\n    try {\n      result \u003d Integer.parseInt(configValue);\n      // throw an exception if a \u0027within bounds\u0027 value is missing\n      if (getThrowIfInvalid() \u0026\u0026 (result \u003c this.min || result \u003e this.max)) {\n        throw new InvalidConfigurationValueException(getConfigKey());\n      }\n\n      // set the value to the nearest bound if it\u0027s out of bounds\n      if (result \u003c this.min) {\n        return this.min;\n      }\n\n      if (result \u003e this.max) {\n        return this.max;\n      }\n    } catch (NumberFormatException ex) {\n      throw new InvalidConfigurationValueException(getConfigKey(), ex);\n    }\n\n    return result;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/diagnostics/IntegerConfigurationBasicValidator.java"
    }
  }
}