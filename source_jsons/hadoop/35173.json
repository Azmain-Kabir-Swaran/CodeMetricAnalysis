{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "storeContainerUpdateToken",
  "functionId": "storeContainerUpdateToken___containerId-ContainerId__containerTokenIdentifier-ContainerTokenIdentifier",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 578,
  "functionEndLine": 603,
  "numCommitsSeen": 94,
  "timeTaken": 6262,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea",
    "c57eac5dfe277845ab4522a1188023a73ee41539"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": "Ybodychange",
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ymultichange(Yparameterchange,Ybodychange)",
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea": "Ybodychange",
    "c57eac5dfe277845ab4522a1188023a73ee41539": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "13/09/18 11:28 AM",
      "commitNameOld": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 183.2,
      "commitsBetweenForRepo": 1474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,26 @@\n   public void storeContainerUpdateToken(ContainerId containerId,\n       ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n-    }\n+    LOG.debug(\"storeContainerUpdateToken: containerId\u003d{}\", containerId);\n \n     String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_UPDATE_TOKEN_SUFFIX;\n     String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_VERSION_KEY_SUFFIX;\n \n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         // New value will overwrite old values for the same key\n         batch.put(bytes(keyUpdateToken),\n             containerTokenIdentifier.getProto().toByteArray());\n         batch.put(bytes(keyVersion),\n             bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainerUpdateToken(ContainerId containerId,\n      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n    LOG.debug(\"storeContainerUpdateToken: containerId\u003d{}\", containerId);\n\n    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyUpdateToken),\n            containerTokenIdentifier.getProto().toByteArray());\n        batch.put(bytes(keyVersion),\n            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7585. NodeManager should go unhealthy when state store throws DBException. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/18 6:03 PM",
      "commitName": "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
      "commitAuthor": "Miklos Szegedi",
      "commitDateOld": "28/10/17 10:38 PM",
      "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 65.85,
      "commitsBetweenForRepo": 464,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public void storeContainerUpdateToken(ContainerId containerId,\n       ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n     }\n \n     String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_UPDATE_TOKEN_SUFFIX;\n     String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_VERSION_KEY_SUFFIX;\n \n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         // New value will overwrite old values for the same key\n         batch.put(bytes(keyUpdateToken),\n             containerTokenIdentifier.getProto().toByteArray());\n         batch.put(bytes(keyVersion),\n             bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n+      markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainerUpdateToken(ContainerId containerId,\n      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n    }\n\n    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyUpdateToken),\n            containerTokenIdentifier.getProto().toByteArray());\n        batch.put(bytes(keyVersion),\n            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "16/10/17 1:12 PM",
      "commitName": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)\n",
          "commitDate": "16/10/17 1:12 PM",
          "commitName": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "14/09/17 8:51 AM",
          "commitNameOld": "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 32.18,
          "commitsBetweenForRepo": 252,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public void storeContainerResourceChanged(ContainerId containerId,\n-      int containerVersion, Resource capability) throws IOException {\n+  public void storeContainerUpdateToken(ContainerId containerId,\n+      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n-          + \", capability\u003d\" + capability);\n+      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n     }\n \n-    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n-        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n+    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n     String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_VERSION_KEY_SUFFIX;\n+\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         // New value will overwrite old values for the same key\n-        batch.put(bytes(keyResChng),\n-            ProtoUtils.convertToProtoFormat(capability).toByteArray());\n-        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        batch.put(bytes(keyUpdateToken),\n+            containerTokenIdentifier.getProto().toByteArray());\n+        batch.put(bytes(keyVersion),\n+            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainerUpdateToken(ContainerId containerId,\n      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n    }\n\n    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyUpdateToken),\n            containerTokenIdentifier.getProto().toByteArray());\n        batch.put(bytes(keyVersion),\n            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "storeContainerResourceChanged",
            "newValue": "storeContainerUpdateToken"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)\n",
          "commitDate": "16/10/17 1:12 PM",
          "commitName": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "14/09/17 8:51 AM",
          "commitNameOld": "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 32.18,
          "commitsBetweenForRepo": 252,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public void storeContainerResourceChanged(ContainerId containerId,\n-      int containerVersion, Resource capability) throws IOException {\n+  public void storeContainerUpdateToken(ContainerId containerId,\n+      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n-          + \", capability\u003d\" + capability);\n+      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n     }\n \n-    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n-        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n+    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n     String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_VERSION_KEY_SUFFIX;\n+\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         // New value will overwrite old values for the same key\n-        batch.put(bytes(keyResChng),\n-            ProtoUtils.convertToProtoFormat(capability).toByteArray());\n-        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        batch.put(bytes(keyUpdateToken),\n+            containerTokenIdentifier.getProto().toByteArray());\n+        batch.put(bytes(keyVersion),\n+            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainerUpdateToken(ContainerId containerId,\n      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n    }\n\n    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyUpdateToken),\n            containerTokenIdentifier.getProto().toByteArray());\n        batch.put(bytes(keyVersion),\n            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, containerVersion-int, capability-Resource]",
            "newValue": "[containerId-ContainerId, containerTokenIdentifier-ContainerTokenIdentifier]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)\n",
          "commitDate": "16/10/17 1:12 PM",
          "commitName": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "14/09/17 8:51 AM",
          "commitNameOld": "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 32.18,
          "commitsBetweenForRepo": 252,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public void storeContainerResourceChanged(ContainerId containerId,\n-      int containerVersion, Resource capability) throws IOException {\n+  public void storeContainerUpdateToken(ContainerId containerId,\n+      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n-          + \", capability\u003d\" + capability);\n+      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n     }\n \n-    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n-        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n+    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n     String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_VERSION_KEY_SUFFIX;\n+\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         // New value will overwrite old values for the same key\n-        batch.put(bytes(keyResChng),\n-            ProtoUtils.convertToProtoFormat(capability).toByteArray());\n-        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        batch.put(bytes(keyUpdateToken),\n+            containerTokenIdentifier.getProto().toByteArray());\n+        batch.put(bytes(keyVersion),\n+            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainerUpdateToken(ContainerId containerId,\n      ContainerTokenIdentifier containerTokenIdentifier) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerUpdateToken: containerId\u003d\" + containerId);\n    }\n\n    String keyUpdateToken \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_UPDATE_TOKEN_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyUpdateToken),\n            containerTokenIdentifier.getProto().toByteArray());\n        batch.put(bytes(keyVersion),\n            bytes(Integer.toString(containerTokenIdentifier.getVersion())));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {}
        }
      ]
    },
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6679. Reduce Resource instance overhead via non-PBImpl\n(Contributed by Daryn Sharp via Daniel Templeton)\n",
      "commitDate": "08/06/17 10:08 AM",
      "commitName": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "24/01/17 8:17 AM",
      "commitNameOld": "a33ce45e35ce77dbf297df618aec3106eafda68c",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 135.04,
      "commitsBetweenForRepo": 738,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void storeContainerResourceChanged(ContainerId containerId,\n       int containerVersion, Resource capability) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n           + \", capability\u003d\" + capability);\n     }\n \n     String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n     String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_VERSION_KEY_SUFFIX;\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         // New value will overwrite old values for the same key\n         batch.put(bytes(keyResChng),\n-            ((ResourcePBImpl) capability).getProto().toByteArray());\n+            ProtoUtils.convertToProtoFormat(capability).toByteArray());\n         batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainerResourceChanged(ContainerId containerId,\n      int containerVersion, Resource capability) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n          + \", capability\u003d\" + capability);\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng),\n            ProtoUtils.convertToProtoFormat(capability).toByteArray());\n        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "14/06/16 3:06 PM",
          "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 77.03,
          "commitsBetweenForRepo": 656,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n   public void storeContainerResourceChanged(ContainerId containerId,\n-      Resource capability) throws IOException {\n+      int containerVersion, Resource capability) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n           + \", capability\u003d\" + capability);\n     }\n \n-    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n+    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_VERSION_KEY_SUFFIX;\n     try {\n-      // New value will overwrite old values for the same key\n-      db.put(bytes(key),\n-          ((ResourcePBImpl) capability).getProto().toByteArray());\n+      WriteBatch batch \u003d db.createWriteBatch();\n+      try {\n+        // New value will overwrite old values for the same key\n+        batch.put(bytes(keyResChng),\n+            ((ResourcePBImpl) capability).getProto().toByteArray());\n+        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        db.write(batch);\n+      } finally {\n+        batch.close();\n+      }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainerResourceChanged(ContainerId containerId,\n      int containerVersion, Resource capability) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n          + \", capability\u003d\" + capability);\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng),\n            ((ResourcePBImpl) capability).getProto().toByteArray());\n        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, capability-Resource]",
            "newValue": "[containerId-ContainerId, containerVersion-int, capability-Resource]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "14/06/16 3:06 PM",
          "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 77.03,
          "commitsBetweenForRepo": 656,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n   public void storeContainerResourceChanged(ContainerId containerId,\n-      Resource capability) throws IOException {\n+      int containerVersion, Resource capability) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n           + \", capability\u003d\" + capability);\n     }\n \n-    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n+    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_VERSION_KEY_SUFFIX;\n     try {\n-      // New value will overwrite old values for the same key\n-      db.put(bytes(key),\n-          ((ResourcePBImpl) capability).getProto().toByteArray());\n+      WriteBatch batch \u003d db.createWriteBatch();\n+      try {\n+        // New value will overwrite old values for the same key\n+        batch.put(bytes(keyResChng),\n+            ((ResourcePBImpl) capability).getProto().toByteArray());\n+        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        db.write(batch);\n+      } finally {\n+        batch.close();\n+      }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainerResourceChanged(ContainerId containerId,\n      int containerVersion, Resource capability) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n          + \", capability\u003d\" + capability);\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng),\n            ((ResourcePBImpl) capability).getProto().toByteArray());\n        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {}
        }
      ]
    },
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4649. Add additional logging to some NM state store operations. Contributed by Sidharta Seethana\n",
      "commitDate": "01/02/16 7:55 PM",
      "commitName": "1cd55e0c171f7c4dec6f843931285557d59cd5ea",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "c57eac5dfe277845ab4522a1188023a73ee41539",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 131.31,
      "commitsBetweenForRepo": 904,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,17 @@\n   public void storeContainerResourceChanged(ContainerId containerId,\n       Resource capability) throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n+          + \", capability\u003d\" + capability);\n+    }\n+\n     String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n     try {\n       // New value will overwrite old values for the same key\n       db.put(bytes(key),\n           ((ResourcePBImpl) capability).getProto().toByteArray());\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainerResourceChanged(ContainerId containerId,\n      Resource capability) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainerResourceChanged: containerId\u003d\" + containerId\n          + \", capability\u003d\" + capability);\n    }\n\n    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n    try {\n      // New value will overwrite old values for the same key\n      db.put(bytes(key),\n          ((ResourcePBImpl) capability).getProto().toByteArray());\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "c57eac5dfe277845ab4522a1188023a73ee41539": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3868. Recovery support for container resizing. Contributed by Meng Ding\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "c57eac5dfe277845ab4522a1188023a73ee41539",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,12 @@\n+  public void storeContainerResourceChanged(ContainerId containerId,\n+      Resource capability) throws IOException {\n+    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n+    try {\n+      // New value will overwrite old values for the same key\n+      db.put(bytes(key),\n+          ((ResourcePBImpl) capability).getProto().toByteArray());\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainerResourceChanged(ContainerId containerId,\n      Resource capability) throws IOException {\n    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_RESOURCE_CHANGED_KEY_SUFFIX;\n    try {\n      // New value will overwrite old values for the same key\n      db.put(bytes(key),\n          ((ResourcePBImpl) capability).getProto().toByteArray());\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}