{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupMappingPlacementRule.java",
  "functionName": "validateAndGetQueueMapping",
  "functionId": "validateAndGetQueueMapping___queueManager-CapacitySchedulerQueueManager__queue-CSQueue__mapping-QueueMapping__queuePath-QueuePath",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
  "functionStartLine": 371,
  "functionEndLine": 393,
  "numCommitsSeen": 24,
  "timeTaken": 3630,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "23/03/20 5:31 AM",
      "commitNameOld": "d312991ead37a5f840577a39420a18f0621b09dc",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   private static QueueMapping validateAndGetQueueMapping(\n       CapacitySchedulerQueueManager queueManager, CSQueue queue,\n       QueueMapping mapping, QueuePath queuePath) throws IOException {\n     if (!(queue instanceof LeafQueue)) {\n       throw new IOException(\n-          \"mapping contains invalid or non-leaf queue : \" + mapping.getQueue());\n+          \"mapping contains invalid or non-leaf queue : \" +\n+          mapping.getFullPath());\n     }\n \n     if (queue instanceof AutoCreatedLeafQueue \u0026\u0026 queue\n         .getParent() instanceof ManagedParentQueue) {\n \n       QueueMapping newMapping \u003d validateAndGetAutoCreatedQueueMapping(\n           queueManager, mapping, queuePath);\n       if (newMapping \u003d\u003d null) {\n         throw new IOException(\n-            \"mapping contains invalid or non-leaf queue \" + mapping.getQueue());\n+            \"mapping contains invalid or non-leaf queue \"\n+            + mapping.getFullPath());\n       }\n       return newMapping;\n     }\n     return mapping;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QueueMapping validateAndGetQueueMapping(\n      CapacitySchedulerQueueManager queueManager, CSQueue queue,\n      QueueMapping mapping, QueuePath queuePath) throws IOException {\n    if (!(queue instanceof LeafQueue)) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue : \" +\n          mapping.getFullPath());\n    }\n\n    if (queue instanceof AutoCreatedLeafQueue \u0026\u0026 queue\n        .getParent() instanceof ManagedParentQueue) {\n\n      QueueMapping newMapping \u003d validateAndGetAutoCreatedQueueMapping(\n          queueManager, mapping, queuePath);\n      if (newMapping \u003d\u003d null) {\n        throw new IOException(\n            \"mapping contains invalid or non-leaf queue \"\n            + mapping.getFullPath());\n      }\n      return newMapping;\n    }\n    return mapping;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,21 @@\n+  private static QueueMapping validateAndGetQueueMapping(\n+      CapacitySchedulerQueueManager queueManager, CSQueue queue,\n+      QueueMapping mapping, QueuePath queuePath) throws IOException {\n+    if (!(queue instanceof LeafQueue)) {\n+      throw new IOException(\n+          \"mapping contains invalid or non-leaf queue : \" + mapping.getQueue());\n+    }\n+\n+    if (queue instanceof AutoCreatedLeafQueue \u0026\u0026 queue\n+        .getParent() instanceof ManagedParentQueue) {\n+\n+      QueueMapping newMapping \u003d validateAndGetAutoCreatedQueueMapping(\n+          queueManager, mapping, queuePath);\n+      if (newMapping \u003d\u003d null) {\n+        throw new IOException(\n+            \"mapping contains invalid or non-leaf queue \" + mapping.getQueue());\n+      }\n+      return newMapping;\n+    }\n+    return mapping;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static QueueMapping validateAndGetQueueMapping(\n      CapacitySchedulerQueueManager queueManager, CSQueue queue,\n      QueueMapping mapping, QueuePath queuePath) throws IOException {\n    if (!(queue instanceof LeafQueue)) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue : \" + mapping.getQueue());\n    }\n\n    if (queue instanceof AutoCreatedLeafQueue \u0026\u0026 queue\n        .getParent() instanceof ManagedParentQueue) {\n\n      QueueMapping newMapping \u003d validateAndGetAutoCreatedQueueMapping(\n          queueManager, mapping, queuePath);\n      if (newMapping \u003d\u003d null) {\n        throw new IOException(\n            \"mapping contains invalid or non-leaf queue \" + mapping.getQueue());\n      }\n      return newMapping;\n    }\n    return mapping;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java"
    }
  }
}