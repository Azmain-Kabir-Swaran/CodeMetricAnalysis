{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActiveStandbyElectorBasedElectorService.java",
  "functionName": "isParentZnodeSafe",
  "functionId": "isParentZnodeSafe___clusterId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ActiveStandbyElectorBasedElectorService.java",
  "functionStartLine": 230,
  "functionEndLine": 257,
  "numCommitsSeen": 18,
  "timeTaken": 1818,
  "changeHistory": [
    "a6410a542e59acd9827457df4a257a843f785c29",
    "7a241aee90f042672fc30ba402ed9dff912bc535",
    "49ec397340aacbbf594ee80cb3a8979ea6d80aa3",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e"
  ],
  "changeHistoryShort": {
    "a6410a542e59acd9827457df4a257a843f785c29": "Yfilerename",
    "7a241aee90f042672fc30ba402ed9dff912bc535": "Ymodifierchange",
    "49ec397340aacbbf594ee80cb3a8979ea6d80aa3": "Ybodychange",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a6410a542e59acd9827457df4a257a843f785c29": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5709. Cleanup leader election configs and pluggability. Contribtued by Karthik Kambatla\n",
      "commitDate": "09/12/16 5:00 PM",
      "commitName": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/12/16 4:41 PM",
      "commitNameOld": "b0aace21b1ef3436ba9d516186208fee9a9ceef2",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean isParentZnodeSafe(String clusterId)\n      throws InterruptedException, IOException, KeeperException {\n    byte[] data;\n    try {\n      data \u003d elector.getActiveData();\n    } catch (ActiveStandbyElector.ActiveNotFoundException e) {\n      // no active found, parent znode is safe\n      return true;\n    }\n\n    YarnServerResourceManagerServiceProtos.ActiveRMInfoProto proto;\n    try {\n      proto \u003d YarnServerResourceManagerServiceProtos.ActiveRMInfoProto\n          .parseFrom(data);\n    } catch (InvalidProtocolBufferException e) {\n      LOG.error(\"Invalid data in ZK: \" + StringUtils.byteToHexString(data));\n      return false;\n    }\n\n    // Check if the passed proto corresponds to an RM in the same cluster\n    if (!proto.getClusterId().equals(clusterId)) {\n      LOG.error(\"Mismatched cluster! The other RM seems \" +\n          \"to be from a different cluster. Current cluster \u003d \" + clusterId +\n          \"Other RM\u0027s cluster \u003d \" + proto.getClusterId());\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ActiveStandbyElectorBasedElectorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/EmbeddedElectorService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ActiveStandbyElectorBasedElectorService.java"
      }
    },
    "7a241aee90f042672fc30ba402ed9dff912bc535": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1929. Fixed a deadlock in ResourceManager that occurs when failover happens right at the time of shutdown. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1591071 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/04/14 12:49 PM",
      "commitName": "7a241aee90f042672fc30ba402ed9dff912bc535",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/04/14 4:03 PM",
      "commitNameOld": "6d4c7df43401b87781e81c57405434ba9b9efd6f",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n-  private synchronized boolean isParentZnodeSafe(String clusterId)\n+  private boolean isParentZnodeSafe(String clusterId)\n       throws InterruptedException, IOException, KeeperException {\n     byte[] data;\n     try {\n       data \u003d elector.getActiveData();\n     } catch (ActiveStandbyElector.ActiveNotFoundException e) {\n       // no active found, parent znode is safe\n       return true;\n     }\n \n     YarnServerResourceManagerServiceProtos.ActiveRMInfoProto proto;\n     try {\n       proto \u003d YarnServerResourceManagerServiceProtos.ActiveRMInfoProto\n           .parseFrom(data);\n     } catch (InvalidProtocolBufferException e) {\n       LOG.error(\"Invalid data in ZK: \" + StringUtils.byteToHexString(data));\n       return false;\n     }\n \n     // Check if the passed proto corresponds to an RM in the same cluster\n     if (!proto.getClusterId().equals(clusterId)) {\n       LOG.error(\"Mismatched cluster! The other RM seems \" +\n           \"to be from a different cluster. Current cluster \u003d \" + clusterId +\n           \"Other RM\u0027s cluster \u003d \" + proto.getClusterId());\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isParentZnodeSafe(String clusterId)\n      throws InterruptedException, IOException, KeeperException {\n    byte[] data;\n    try {\n      data \u003d elector.getActiveData();\n    } catch (ActiveStandbyElector.ActiveNotFoundException e) {\n      // no active found, parent znode is safe\n      return true;\n    }\n\n    YarnServerResourceManagerServiceProtos.ActiveRMInfoProto proto;\n    try {\n      proto \u003d YarnServerResourceManagerServiceProtos.ActiveRMInfoProto\n          .parseFrom(data);\n    } catch (InvalidProtocolBufferException e) {\n      LOG.error(\"Invalid data in ZK: \" + StringUtils.byteToHexString(data));\n      return false;\n    }\n\n    // Check if the passed proto corresponds to an RM in the same cluster\n    if (!proto.getClusterId().equals(clusterId)) {\n      LOG.error(\"Mismatched cluster! The other RM seems \" +\n          \"to be from a different cluster. Current cluster \u003d \" + clusterId +\n          \"Other RM\u0027s cluster \u003d \" + proto.getClusterId());\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/EmbeddedElectorService.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[private]"
      }
    },
    "49ec397340aacbbf594ee80cb3a8979ea6d80aa3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1568. Rename clusterid to clusterId in ActiveRMInfoProto (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556435 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 7:30 PM",
      "commitName": "49ec397340aacbbf594ee80cb3a8979ea6d80aa3",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/01/14 5:56 PM",
      "commitNameOld": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private synchronized boolean isParentZnodeSafe(String clusterId)\n       throws InterruptedException, IOException, KeeperException {\n     byte[] data;\n     try {\n       data \u003d elector.getActiveData();\n     } catch (ActiveStandbyElector.ActiveNotFoundException e) {\n       // no active found, parent znode is safe\n       return true;\n     }\n \n     YarnServerResourceManagerServiceProtos.ActiveRMInfoProto proto;\n     try {\n       proto \u003d YarnServerResourceManagerServiceProtos.ActiveRMInfoProto\n           .parseFrom(data);\n     } catch (InvalidProtocolBufferException e) {\n       LOG.error(\"Invalid data in ZK: \" + StringUtils.byteToHexString(data));\n       return false;\n     }\n \n     // Check if the passed proto corresponds to an RM in the same cluster\n-    if (!proto.getClusterid().equals(clusterId)) {\n+    if (!proto.getClusterId().equals(clusterId)) {\n       LOG.error(\"Mismatched cluster! The other RM seems \" +\n           \"to be from a different cluster. Current cluster \u003d \" + clusterId +\n-          \"Other RM\u0027s cluster \u003d \" + proto.getClusterid());\n+          \"Other RM\u0027s cluster \u003d \" + proto.getClusterId());\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized boolean isParentZnodeSafe(String clusterId)\n      throws InterruptedException, IOException, KeeperException {\n    byte[] data;\n    try {\n      data \u003d elector.getActiveData();\n    } catch (ActiveStandbyElector.ActiveNotFoundException e) {\n      // no active found, parent znode is safe\n      return true;\n    }\n\n    YarnServerResourceManagerServiceProtos.ActiveRMInfoProto proto;\n    try {\n      proto \u003d YarnServerResourceManagerServiceProtos.ActiveRMInfoProto\n          .parseFrom(data);\n    } catch (InvalidProtocolBufferException e) {\n      LOG.error(\"Invalid data in ZK: \" + StringUtils.byteToHexString(data));\n      return false;\n    }\n\n    // Check if the passed proto corresponds to an RM in the same cluster\n    if (!proto.getClusterId().equals(clusterId)) {\n      LOG.error(\"Mismatched cluster! The other RM seems \" +\n          \"to be from a different cluster. Current cluster \u003d \" + clusterId +\n          \"Other RM\u0027s cluster \u003d \" + proto.getClusterId());\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/EmbeddedElectorService.java",
      "extendedDetails": {}
    },
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 5:56 PM",
      "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  private synchronized boolean isParentZnodeSafe(String clusterId)\n+      throws InterruptedException, IOException, KeeperException {\n+    byte[] data;\n+    try {\n+      data \u003d elector.getActiveData();\n+    } catch (ActiveStandbyElector.ActiveNotFoundException e) {\n+      // no active found, parent znode is safe\n+      return true;\n+    }\n+\n+    YarnServerResourceManagerServiceProtos.ActiveRMInfoProto proto;\n+    try {\n+      proto \u003d YarnServerResourceManagerServiceProtos.ActiveRMInfoProto\n+          .parseFrom(data);\n+    } catch (InvalidProtocolBufferException e) {\n+      LOG.error(\"Invalid data in ZK: \" + StringUtils.byteToHexString(data));\n+      return false;\n+    }\n+\n+    // Check if the passed proto corresponds to an RM in the same cluster\n+    if (!proto.getClusterid().equals(clusterId)) {\n+      LOG.error(\"Mismatched cluster! The other RM seems \" +\n+          \"to be from a different cluster. Current cluster \u003d \" + clusterId +\n+          \"Other RM\u0027s cluster \u003d \" + proto.getClusterid());\n+      return false;\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized boolean isParentZnodeSafe(String clusterId)\n      throws InterruptedException, IOException, KeeperException {\n    byte[] data;\n    try {\n      data \u003d elector.getActiveData();\n    } catch (ActiveStandbyElector.ActiveNotFoundException e) {\n      // no active found, parent znode is safe\n      return true;\n    }\n\n    YarnServerResourceManagerServiceProtos.ActiveRMInfoProto proto;\n    try {\n      proto \u003d YarnServerResourceManagerServiceProtos.ActiveRMInfoProto\n          .parseFrom(data);\n    } catch (InvalidProtocolBufferException e) {\n      LOG.error(\"Invalid data in ZK: \" + StringUtils.byteToHexString(data));\n      return false;\n    }\n\n    // Check if the passed proto corresponds to an RM in the same cluster\n    if (!proto.getClusterid().equals(clusterId)) {\n      LOG.error(\"Mismatched cluster! The other RM seems \" +\n          \"to be from a different cluster. Current cluster \u003d \" + clusterId +\n          \"Other RM\u0027s cluster \u003d \" + proto.getClusterid());\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/EmbeddedElectorService.java"
    }
  }
}