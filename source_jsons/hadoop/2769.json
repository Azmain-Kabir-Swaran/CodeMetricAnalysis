{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RequestHedgingProxyProvider.java",
  "functionName": "getProxy",
  "functionId": "getProxy",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java",
  "functionStartLine": 205,
  "functionEndLine": 225,
  "numCommitsSeen": 14,
  "timeTaken": 2274,
  "changeHistory": [
    "f858f1855455348f5ac517ebd96c2bbc3bc97489",
    "659e85e304d070f9908a96cf6a0e1cbafde6a434",
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
    "c6a2430b47692a72c500373d6fc1bce78652675b",
    "030fcfa99c345ad57625486eeabedebf2fd4411f"
  ],
  "changeHistoryShort": {
    "f858f1855455348f5ac517ebd96c2bbc3bc97489": "Ybodychange",
    "659e85e304d070f9908a96cf6a0e1cbafde6a434": "Ybodychange",
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6": "Yfilerename",
    "c6a2430b47692a72c500373d6fc1bce78652675b": "Ybodychange",
    "030fcfa99c345ad57625486eeabedebf2fd4411f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f858f1855455348f5ac517ebd96c2bbc3bc97489": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14088. RequestHedgingProxyProvider can throw NullPointerException when failover due to no lock on currentUsedProxy. Contributed by Yuxuan Wang.\n",
      "commitDate": "14/12/18 11:04 AM",
      "commitName": "f858f1855455348f5ac517ebd96c2bbc3bc97489",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "22/04/18 7:49 PM",
      "commitNameOld": "63803e7051dcfcd8e3d28a8b3217b7735a00b7d8",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 235.68,
      "commitsBetweenForRepo": 2374,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n-    if (currentUsedProxy !\u003d null) {\n-      return currentUsedProxy;\n+    if (currentUsedHandler !\u003d null) {\n+      return currentUsedHandler;\n     }\n     Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n     StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n     for (int i \u003d 0; i \u003c proxies.size(); i++) {\n       ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n       incrementProxyIndex();\n       targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n       combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n     }\n     combinedInfo.append(\u0027]\u0027);\n     T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n             RequestHedgingInvocationHandler.class.getClassLoader(),\n             new Class\u003c?\u003e[]{xface},\n             new RequestHedgingInvocationHandler(targetProxyInfos));\n-    return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n+    currentUsedHandler \u003d\n+        new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n+    return currentUsedHandler;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    if (currentUsedHandler !\u003d null) {\n      return currentUsedHandler;\n    }\n    Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n    for (int i \u003d 0; i \u003c proxies.size(); i++) {\n      ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n      incrementProxyIndex();\n      targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n      combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n    }\n    combinedInfo.append(\u0027]\u0027);\n    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n            RequestHedgingInvocationHandler.class.getClassLoader(),\n            new Class\u003c?\u003e[]{xface},\n            new RequestHedgingInvocationHandler(targetProxyInfos));\n    currentUsedHandler \u003d\n        new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n    return currentUsedHandler;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java",
      "extendedDetails": {}
    },
    "659e85e304d070f9908a96cf6a0e1cbafde6a434": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12813.  RequestHedgingProxyProvider can hide Exception thrown from the Namenode for proxy size of 1.  Contributed by Mukul Kumar Singh\n",
      "commitDate": "20/11/17 5:09 PM",
      "commitName": "659e85e304d070f9908a96cf6a0e1cbafde6a434",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "04/04/17 11:05 PM",
      "commitNameOld": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 229.79,
      "commitsBetweenForRepo": 1620,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n-    if (successfulProxy !\u003d null) {\n-      return successfulProxy;\n+    if (currentUsedProxy !\u003d null) {\n+      return currentUsedProxy;\n     }\n     Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n     StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n     for (int i \u003d 0; i \u003c proxies.size(); i++) {\n       ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n       incrementProxyIndex();\n       targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n       combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n     }\n     combinedInfo.append(\u0027]\u0027);\n     T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n             RequestHedgingInvocationHandler.class.getClassLoader(),\n             new Class\u003c?\u003e[]{xface},\n             new RequestHedgingInvocationHandler(targetProxyInfos));\n     return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    if (currentUsedProxy !\u003d null) {\n      return currentUsedProxy;\n    }\n    Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n    for (int i \u003d 0; i \u003c proxies.size(); i++) {\n      ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n      incrementProxyIndex();\n      targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n      combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n    }\n    combinedInfo.append(\u0027]\u0027);\n    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n            RequestHedgingInvocationHandler.class.getClassLoader(),\n            new Class\u003c?\u003e[]{xface},\n            new RequestHedgingInvocationHandler(targetProxyInfos));\n    return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java",
      "extendedDetails": {}
    },
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-11538. Move ClientProtocol HA proxies into hadoop-hdfs-client. Contributed by Huafeng Wang.\n",
      "commitDate": "04/04/17 11:05 PM",
      "commitName": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "04/04/17 9:08 PM",
      "commitNameOld": "19b89c4c7be0236aafded560b7bcad7e39d1c4ed",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    if (successfulProxy !\u003d null) {\n      return successfulProxy;\n    }\n    Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n    for (int i \u003d 0; i \u003c proxies.size(); i++) {\n      ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n      incrementProxyIndex();\n      targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n      combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n    }\n    combinedInfo.append(\u0027]\u0027);\n    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n            RequestHedgingInvocationHandler.class.getClassLoader(),\n            new Class\u003c?\u003e[]{xface},\n            new RequestHedgingInvocationHandler(targetProxyInfos));\n    return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java"
      }
    },
    "c6a2430b47692a72c500373d6fc1bce78652675b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10329. Bad initialisation of StringBuffer in RequestHedgingProxyProvider. Contributed by Lin Yiqun.\n",
      "commitDate": "26/04/16 9:45 AM",
      "commitName": "c6a2430b47692a72c500373d6fc1bce78652675b",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "12/02/16 11:18 AM",
      "commitNameOld": "9fdfb546fb67526ba261da5cbd005f33e0f1d9e1",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 73.89,
      "commitsBetweenForRepo": 443,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     if (successfulProxy !\u003d null) {\n       return successfulProxy;\n     }\n     Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n-    StringBuilder combinedInfo \u003d new StringBuilder(\u0027[\u0027);\n+    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n     for (int i \u003d 0; i \u003c proxies.size(); i++) {\n       ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n       incrementProxyIndex();\n       targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n       combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n     }\n     combinedInfo.append(\u0027]\u0027);\n     T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n             RequestHedgingInvocationHandler.class.getClassLoader(),\n             new Class\u003c?\u003e[]{xface},\n             new RequestHedgingInvocationHandler(targetProxyInfos));\n     return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    if (successfulProxy !\u003d null) {\n      return successfulProxy;\n    }\n    Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n    StringBuilder combinedInfo \u003d new StringBuilder(\"[\");\n    for (int i \u003d 0; i \u003c proxies.size(); i++) {\n      ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n      incrementProxyIndex();\n      targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n      combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n    }\n    combinedInfo.append(\u0027]\u0027);\n    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n            RequestHedgingInvocationHandler.class.getClassLoader(),\n            new Class\u003c?\u003e[]{xface},\n            new RequestHedgingInvocationHandler(targetProxyInfos));\n    return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java",
      "extendedDetails": {}
    },
    "030fcfa99c345ad57625486eeabedebf2fd4411f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7858. Improve HA Namenode Failover detection on the client. (asuresh)\n",
      "commitDate": "27/07/15 11:02 PM",
      "commitName": "030fcfa99c345ad57625486eeabedebf2fd4411f",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,19 @@\n+  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n+    if (successfulProxy !\u003d null) {\n+      return successfulProxy;\n+    }\n+    Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n+    StringBuilder combinedInfo \u003d new StringBuilder(\u0027[\u0027);\n+    for (int i \u003d 0; i \u003c proxies.size(); i++) {\n+      ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n+      incrementProxyIndex();\n+      targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n+      combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n+    }\n+    combinedInfo.append(\u0027]\u0027);\n+    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n+            RequestHedgingInvocationHandler.class.getClassLoader(),\n+            new Class\u003c?\u003e[]{xface},\n+            new RequestHedgingInvocationHandler(targetProxyInfos));\n+    return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    if (successfulProxy !\u003d null) {\n      return successfulProxy;\n    }\n    Map\u003cString, ProxyInfo\u003cT\u003e\u003e targetProxyInfos \u003d new HashMap\u003c\u003e();\n    StringBuilder combinedInfo \u003d new StringBuilder(\u0027[\u0027);\n    for (int i \u003d 0; i \u003c proxies.size(); i++) {\n      ProxyInfo\u003cT\u003e pInfo \u003d super.getProxy();\n      incrementProxyIndex();\n      targetProxyInfos.put(pInfo.proxyInfo, pInfo);\n      combinedInfo.append(pInfo.proxyInfo).append(\u0027,\u0027);\n    }\n    combinedInfo.append(\u0027]\u0027);\n    T wrappedProxy \u003d (T) Proxy.newProxyInstance(\n            RequestHedgingInvocationHandler.class.getClassLoader(),\n            new Class\u003c?\u003e[]{xface},\n            new RequestHedgingInvocationHandler(targetProxyInfos));\n    return new ProxyInfo\u003cT\u003e(wrappedProxy, combinedInfo.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/RequestHedgingProxyProvider.java"
    }
  }
}