{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionName": "listCachePools",
  "functionId": "listCachePools___controller-RpcController__request-ListCachePoolsRequestProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionStartLine": 1496,
  "functionEndLine": 1511,
  "numCommitsSeen": 141,
  "timeTaken": 2909,
  "changeHistory": [
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "f791e291ca39eac6aa0650319e8dd606d15d5804",
    "13edb391d06c479720202eb5ac81f1c71fe64748",
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92"
  ],
  "changeHistoryShort": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "f791e291ca39eac6aa0650319e8dd606d15d5804": "Ybodychange",
    "13edb391d06c479720202eb5ac81f1c71fe64748": "Ybodychange",
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92": "Ybodychange"
  },
  "changeHistoryDetails": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/08/15 2:38 PM",
      "commitNameOld": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 24.18,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public ListCachePoolsResponseProto listCachePools(RpcController controller,\n       ListCachePoolsRequestProto request) throws ServiceException {\n     try {\n       BatchedEntries\u003cCachePoolEntry\u003e entries \u003d\n         server.listCachePools(request.getPrevPoolName());\n       ListCachePoolsResponseProto.Builder responseBuilder \u003d\n         ListCachePoolsResponseProto.newBuilder();\n       responseBuilder.setHasMore(entries.hasMore());\n       for (int i\u003d0, n\u003dentries.size(); i\u003cn; i++) {\n-        responseBuilder.addEntries(PBHelper.convert(entries.get(i)));\n+        responseBuilder.addEntries(PBHelperClient.convert(entries.get(i)));\n       }\n       return responseBuilder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListCachePoolsResponseProto listCachePools(RpcController controller,\n      ListCachePoolsRequestProto request) throws ServiceException {\n    try {\n      BatchedEntries\u003cCachePoolEntry\u003e entries \u003d\n        server.listCachePools(request.getPrevPoolName());\n      ListCachePoolsResponseProto.Builder responseBuilder \u003d\n        ListCachePoolsResponseProto.newBuilder();\n      responseBuilder.setHasMore(entries.hasMore());\n      for (int i\u003d0, n\u003dentries.size(); i\u003cn; i++) {\n        responseBuilder.addEntries(PBHelperClient.convert(entries.get(i)));\n      }\n      return responseBuilder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "f791e291ca39eac6aa0650319e8dd606d15d5804": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5555. CacheAdmin commands fail when first listed NameNode is in Standby (jxiang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547895 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 12:06 PM",
      "commitName": "f791e291ca39eac6aa0650319e8dd606d15d5804",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "27/11/13 9:55 AM",
      "commitNameOld": "13edb391d06c479720202eb5ac81f1c71fe64748",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 7.09,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,16 @@\n   public ListCachePoolsResponseProto listCachePools(RpcController controller,\n       ListCachePoolsRequestProto request) throws ServiceException {\n     try {\n-      RemoteIterator\u003cCachePoolEntry\u003e iter \u003d\n+      BatchedEntries\u003cCachePoolEntry\u003e entries \u003d\n         server.listCachePools(request.getPrevPoolName());\n       ListCachePoolsResponseProto.Builder responseBuilder \u003d\n         ListCachePoolsResponseProto.newBuilder();\n-      String prevPoolName \u003d null;\n-      while (iter.hasNext()) {\n-        CachePoolEntry entry \u003d iter.next();\n-        responseBuilder.addEntries(PBHelper.convert(entry));\n-        prevPoolName \u003d entry.getInfo().getPoolName();\n-      }\n-      // fill in hasNext\n-      if (prevPoolName \u003d\u003d null) {\n-        responseBuilder.setHasMore(false);\n-      } else {\n-        iter \u003d server.listCachePools(prevPoolName);\n-        responseBuilder.setHasMore(iter.hasNext());\n+      responseBuilder.setHasMore(entries.hasMore());\n+      for (int i\u003d0, n\u003dentries.size(); i\u003cn; i++) {\n+        responseBuilder.addEntries(PBHelper.convert(entries.get(i)));\n       }\n       return responseBuilder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListCachePoolsResponseProto listCachePools(RpcController controller,\n      ListCachePoolsRequestProto request) throws ServiceException {\n    try {\n      BatchedEntries\u003cCachePoolEntry\u003e entries \u003d\n        server.listCachePools(request.getPrevPoolName());\n      ListCachePoolsResponseProto.Builder responseBuilder \u003d\n        ListCachePoolsResponseProto.newBuilder();\n      responseBuilder.setHasMore(entries.hasMore());\n      for (int i\u003d0, n\u003dentries.size(); i\u003cn; i++) {\n        responseBuilder.addEntries(PBHelper.convert(entries.get(i)));\n      }\n      return responseBuilder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "13edb391d06c479720202eb5ac81f1c71fe64748": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5556. Add some more NameNode cache statistics, cache pool stats (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/13 9:55 AM",
      "commitName": "13edb391d06c479720202eb5ac81f1c71fe64748",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "21/11/13 9:12 AM",
      "commitNameOld": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 6.03,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,25 @@\n   public ListCachePoolsResponseProto listCachePools(RpcController controller,\n       ListCachePoolsRequestProto request) throws ServiceException {\n     try {\n-      RemoteIterator\u003cCachePoolInfo\u003e iter \u003d\n+      RemoteIterator\u003cCachePoolEntry\u003e iter \u003d\n         server.listCachePools(request.getPrevPoolName());\n       ListCachePoolsResponseProto.Builder responseBuilder \u003d\n         ListCachePoolsResponseProto.newBuilder();\n       String prevPoolName \u003d null;\n       while (iter.hasNext()) {\n-        CachePoolInfo pool \u003d iter.next();\n-        ListCachePoolsResponseElementProto.Builder elemBuilder \u003d \n-            ListCachePoolsResponseElementProto.newBuilder();\n-        elemBuilder.setInfo(PBHelper.convert(pool));\n-        responseBuilder.addElements(elemBuilder.build());\n-        prevPoolName \u003d pool.getPoolName();\n+        CachePoolEntry entry \u003d iter.next();\n+        responseBuilder.addEntries(PBHelper.convert(entry));\n+        prevPoolName \u003d entry.getInfo().getPoolName();\n       }\n       // fill in hasNext\n       if (prevPoolName \u003d\u003d null) {\n         responseBuilder.setHasMore(false);\n       } else {\n         iter \u003d server.listCachePools(prevPoolName);\n         responseBuilder.setHasMore(iter.hasNext());\n       }\n       return responseBuilder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListCachePoolsResponseProto listCachePools(RpcController controller,\n      ListCachePoolsRequestProto request) throws ServiceException {\n    try {\n      RemoteIterator\u003cCachePoolEntry\u003e iter \u003d\n        server.listCachePools(request.getPrevPoolName());\n      ListCachePoolsResponseProto.Builder responseBuilder \u003d\n        ListCachePoolsResponseProto.newBuilder();\n      String prevPoolName \u003d null;\n      while (iter.hasNext()) {\n        CachePoolEntry entry \u003d iter.next();\n        responseBuilder.addEntries(PBHelper.convert(entry));\n        prevPoolName \u003d entry.getInfo().getPoolName();\n      }\n      // fill in hasNext\n      if (prevPoolName \u003d\u003d null) {\n        responseBuilder.setHasMore(false);\n      } else {\n        iter \u003d server.listCachePools(prevPoolName);\n        responseBuilder.setHasMore(iter.hasNext());\n      }\n      return responseBuilder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5471. CacheAdmin -listPools fails when user lacks permissions to view all pools (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541323 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/13 3:52 PM",
      "commitName": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "07/11/13 2:07 PM",
      "commitNameOld": "f79b3e6b17450e9d34c483046b7437b09dd72016",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 5.07,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,28 @@\n   public ListCachePoolsResponseProto listCachePools(RpcController controller,\n       ListCachePoolsRequestProto request) throws ServiceException {\n     try {\n       RemoteIterator\u003cCachePoolInfo\u003e iter \u003d\n         server.listCachePools(request.getPrevPoolName());\n       ListCachePoolsResponseProto.Builder responseBuilder \u003d\n         ListCachePoolsResponseProto.newBuilder();\n       String prevPoolName \u003d null;\n       while (iter.hasNext()) {\n         CachePoolInfo pool \u003d iter.next();\n         ListCachePoolsResponseElementProto.Builder elemBuilder \u003d \n             ListCachePoolsResponseElementProto.newBuilder();\n-        elemBuilder.setPoolName(pool.getPoolName());\n-        if (pool.getOwnerName() !\u003d null) {\n-          elemBuilder.setOwnerName(pool.getOwnerName());\n-        }\n-        if (pool.getGroupName() !\u003d null) {\n-          elemBuilder.setGroupName(pool.getGroupName());\n-        }\n-        if (pool.getMode() !\u003d null) {\n-          elemBuilder.setMode(pool.getMode().toShort());\n-        }\n-        if (pool.getWeight() !\u003d null) {\n-          elemBuilder.setWeight(pool.getWeight());\n-        }\n+        elemBuilder.setInfo(PBHelper.convert(pool));\n         responseBuilder.addElements(elemBuilder.build());\n         prevPoolName \u003d pool.getPoolName();\n       }\n       // fill in hasNext\n       if (prevPoolName \u003d\u003d null) {\n         responseBuilder.setHasMore(false);\n       } else {\n         iter \u003d server.listCachePools(prevPoolName);\n         responseBuilder.setHasMore(iter.hasNext());\n       }\n       return responseBuilder.build();\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListCachePoolsResponseProto listCachePools(RpcController controller,\n      ListCachePoolsRequestProto request) throws ServiceException {\n    try {\n      RemoteIterator\u003cCachePoolInfo\u003e iter \u003d\n        server.listCachePools(request.getPrevPoolName());\n      ListCachePoolsResponseProto.Builder responseBuilder \u003d\n        ListCachePoolsResponseProto.newBuilder();\n      String prevPoolName \u003d null;\n      while (iter.hasNext()) {\n        CachePoolInfo pool \u003d iter.next();\n        ListCachePoolsResponseElementProto.Builder elemBuilder \u003d \n            ListCachePoolsResponseElementProto.newBuilder();\n        elemBuilder.setInfo(PBHelper.convert(pool));\n        responseBuilder.addElements(elemBuilder.build());\n        prevPoolName \u003d pool.getPoolName();\n      }\n      // fill in hasNext\n      if (prevPoolName \u003d\u003d null) {\n        responseBuilder.setHasMore(false);\n      } else {\n        iter \u003d server.listCachePools(prevPoolName);\n        responseBuilder.setHasMore(iter.hasNext());\n      }\n      return responseBuilder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    }
  }
}