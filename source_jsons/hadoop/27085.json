{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProxyCA.java",
  "functionName": "createHostnameVerifier",
  "functionId": "createHostnameVerifier",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/ProxyCA.java",
  "functionStartLine": 379,
  "functionEndLine": 408,
  "numCommitsSeen": 3,
  "timeTaken": 1361,
  "changeHistory": [
    "c2288ac45b748b4119442c46147ccc324926c340"
  ],
  "changeHistoryShort": {
    "c2288ac45b748b4119442c46147ccc324926c340": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2288ac45b748b4119442c46147ccc324926c340": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8448. AM HTTPS Support for AM communication with RMWeb proxy. (Contributed by Robert Kanter)\n",
      "commitDate": "16/10/18 1:36 PM",
      "commitName": "c2288ac45b748b4119442c46147ccc324926c340",
      "commitAuthor": "Haibo Chen",
      "diff": "@@ -0,0 +1,30 @@\n+  private HostnameVerifier createHostnameVerifier() {\n+    HostnameVerifier defaultHostnameVerifier \u003d\n+        new DefaultHostnameVerifier(PublicSuffixMatcherLoader.getDefault());\n+    return new HostnameVerifier() {\n+      @Override\n+      public boolean verify(String host, SSLSession sslSession) {\n+        try {\n+          Certificate[] certs \u003d sslSession.getPeerCertificates();\n+          if (certs.length \u003d\u003d 2) {\n+            // Make sure this is one of our certs.  More thorough checking would\n+            // have already been done by the SSLContext\n+            certs[0].verify(caKeyPair.getPublic());\n+            LOG.debug(\"Verified certificate signed by RM CA, \" +\n+                \"skipping hostname verification\");\n+            return true;\n+          }\n+        } catch (SSLPeerUnverifiedException e) {\n+          // No certificate\n+          return false;\n+        } catch (CertificateException | NoSuchAlgorithmException\n+            | InvalidKeyException | SignatureException\n+            | NoSuchProviderException e) {\n+          // fall back to normal verifier below\n+          LOG.debug(\"Could not verify certificate with RM CA, \" +\n+              \"falling back to default hostname verification\", e);\n+        }\n+        return defaultHostnameVerifier.verify(host, sslSession);\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private HostnameVerifier createHostnameVerifier() {\n    HostnameVerifier defaultHostnameVerifier \u003d\n        new DefaultHostnameVerifier(PublicSuffixMatcherLoader.getDefault());\n    return new HostnameVerifier() {\n      @Override\n      public boolean verify(String host, SSLSession sslSession) {\n        try {\n          Certificate[] certs \u003d sslSession.getPeerCertificates();\n          if (certs.length \u003d\u003d 2) {\n            // Make sure this is one of our certs.  More thorough checking would\n            // have already been done by the SSLContext\n            certs[0].verify(caKeyPair.getPublic());\n            LOG.debug(\"Verified certificate signed by RM CA, \" +\n                \"skipping hostname verification\");\n            return true;\n          }\n        } catch (SSLPeerUnverifiedException e) {\n          // No certificate\n          return false;\n        } catch (CertificateException | NoSuchAlgorithmException\n            | InvalidKeyException | SignatureException\n            | NoSuchProviderException e) {\n          // fall back to normal verifier below\n          LOG.debug(\"Could not verify certificate with RM CA, \" +\n              \"falling back to default hostname verification\", e);\n        }\n        return defaultHostnameVerifier.verify(host, sslSession);\n      }\n    };\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/ProxyCA.java"
    }
  }
}