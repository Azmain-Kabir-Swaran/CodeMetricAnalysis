{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "getLocalInterfaceAddrs",
  "functionId": "getLocalInterfaceAddrs___interfaceNames-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 436,
  "functionEndLine": 453,
  "numCommitsSeen": 330,
  "timeTaken": 7650,
  "changeHistory": [
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "4f15b9dfed02845b07539f074ccee3074647dffd"
  ],
  "changeHistoryShort": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "4f15b9dfed02845b07539f074ccee3074647dffd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/09/15 8:39 AM",
      "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.12,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private static SocketAddress[] getLocalInterfaceAddrs(\n       String interfaceNames[]) throws UnknownHostException {\n-    List\u003cSocketAddress\u003e localAddrs \u003d new ArrayList\u003cSocketAddress\u003e();\n+    List\u003cSocketAddress\u003e localAddrs \u003d new ArrayList\u003c\u003e();\n     for (String interfaceName : interfaceNames) {\n       if (InetAddresses.isInetAddress(interfaceName)) {\n         localAddrs.add(new InetSocketAddress(interfaceName, 0));\n       } else if (NetUtils.isValidSubnet(interfaceName)) {\n         for (InetAddress addr : NetUtils.getIPs(interfaceName, false)) {\n           localAddrs.add(new InetSocketAddress(addr, 0));\n         }\n       } else {\n         for (String ip : DNS.getIPs(interfaceName, false)) {\n           localAddrs.add(new InetSocketAddress(ip, 0));\n         }\n       }\n     }\n     return localAddrs.toArray(new SocketAddress[localAddrs.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static SocketAddress[] getLocalInterfaceAddrs(\n      String interfaceNames[]) throws UnknownHostException {\n    List\u003cSocketAddress\u003e localAddrs \u003d new ArrayList\u003c\u003e();\n    for (String interfaceName : interfaceNames) {\n      if (InetAddresses.isInetAddress(interfaceName)) {\n        localAddrs.add(new InetSocketAddress(interfaceName, 0));\n      } else if (NetUtils.isValidSubnet(interfaceName)) {\n        for (InetAddress addr : NetUtils.getIPs(interfaceName, false)) {\n          localAddrs.add(new InetSocketAddress(addr, 0));\n        }\n      } else {\n        for (String ip : DNS.getIPs(interfaceName, false)) {\n          localAddrs.add(new InetSocketAddress(ip, 0));\n        }\n      }\n    }\n    return localAddrs.toArray(new SocketAddress[localAddrs.size()]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static SocketAddress[] getLocalInterfaceAddrs(\n      String interfaceNames[]) throws UnknownHostException {\n    List\u003cSocketAddress\u003e localAddrs \u003d new ArrayList\u003cSocketAddress\u003e();\n    for (String interfaceName : interfaceNames) {\n      if (InetAddresses.isInetAddress(interfaceName)) {\n        localAddrs.add(new InetSocketAddress(interfaceName, 0));\n      } else if (NetUtils.isValidSubnet(interfaceName)) {\n        for (InetAddress addr : NetUtils.getIPs(interfaceName, false)) {\n          localAddrs.add(new InetSocketAddress(addr, 0));\n        }\n      } else {\n        for (String ip : DNS.getIPs(interfaceName, false)) {\n          localAddrs.add(new InetSocketAddress(ip, 0));\n        }\n      }\n    }\n    return localAddrs.toArray(new SocketAddress[localAddrs.size()]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "4f15b9dfed02845b07539f074ccee3074647dffd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3148. The client should be able to use multiple local interfaces for data transfer. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308617 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 4:20 PM",
      "commitName": "4f15b9dfed02845b07539f074ccee3074647dffd",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,18 @@\n+  private static SocketAddress[] getLocalInterfaceAddrs(\n+      String interfaceNames[]) throws UnknownHostException {\n+    List\u003cSocketAddress\u003e localAddrs \u003d new ArrayList\u003cSocketAddress\u003e();\n+    for (String interfaceName : interfaceNames) {\n+      if (InetAddresses.isInetAddress(interfaceName)) {\n+        localAddrs.add(new InetSocketAddress(interfaceName, 0));\n+      } else if (NetUtils.isValidSubnet(interfaceName)) {\n+        for (InetAddress addr : NetUtils.getIPs(interfaceName, false)) {\n+          localAddrs.add(new InetSocketAddress(addr, 0));\n+        }\n+      } else {\n+        for (String ip : DNS.getIPs(interfaceName, false)) {\n+          localAddrs.add(new InetSocketAddress(ip, 0));\n+        }\n+      }\n+    }\n+    return localAddrs.toArray(new SocketAddress[localAddrs.size()]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static SocketAddress[] getLocalInterfaceAddrs(\n      String interfaceNames[]) throws UnknownHostException {\n    List\u003cSocketAddress\u003e localAddrs \u003d new ArrayList\u003cSocketAddress\u003e();\n    for (String interfaceName : interfaceNames) {\n      if (InetAddresses.isInetAddress(interfaceName)) {\n        localAddrs.add(new InetSocketAddress(interfaceName, 0));\n      } else if (NetUtils.isValidSubnet(interfaceName)) {\n        for (InetAddress addr : NetUtils.getIPs(interfaceName, false)) {\n          localAddrs.add(new InetSocketAddress(addr, 0));\n        }\n      } else {\n        for (String ip : DNS.getIPs(interfaceName, false)) {\n          localAddrs.add(new InetSocketAddress(ip, 0));\n        }\n      }\n    }\n    return localAddrs.toArray(new SocketAddress[localAddrs.size()]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}