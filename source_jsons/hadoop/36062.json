{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppManager.java",
  "functionName": "updateAppDataToStateStore",
  "functionId": "updateAppDataToStateStore___queue-String__app-RMApp__toSuppressException-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
  "functionStartLine": 819,
  "functionEndLine": 846,
  "numCommitsSeen": 106,
  "timeTaken": 3190,
  "changeHistory": [
    "8ef46595da6aefe4458aa7181670c3d9b13e7ec6",
    "543aac9f281871a40473e83061f6deadc0bbdab7",
    "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a",
    "563480dccd0136d82730f4228f1df44449ed5822"
  ],
  "changeHistoryShort": {
    "8ef46595da6aefe4458aa7181670c3d9b13e7ec6": "Ybodychange",
    "543aac9f281871a40473e83061f6deadc0bbdab7": "Ybodychange",
    "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a": "Ybodychange",
    "563480dccd0136d82730f4228f1df44449ed5822": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8ef46595da6aefe4458aa7181670c3d9b13e7ec6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9438. launchTime not written to state store for running applications\n",
      "commitDate": "27/08/19 3:53 PM",
      "commitName": "8ef46595da6aefe4458aa7181670c3d9b13e7ec6",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "12/08/19 6:15 AM",
      "commitNameOld": "e4b538bbda6dc25d7f45bffd6a4ce49f3f84acdc",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 15.4,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   private void updateAppDataToStateStore(String queue, RMApp app,\n       boolean toSuppressException) throws YarnException {\n     // Create a future object to capture exceptions from StateStore.\n     SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n \n     // Update new queue in Submission Context to update to StateStore.\n     app.getApplicationSubmissionContext().setQueue(queue);\n \n     ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n         app.getSubmitTime(), app.getStartTime(),\n         app.getApplicationSubmissionContext(), app.getUser(),\n         app.getCallerContext());\n     appState.setApplicationTimeouts(app.getApplicationTimeouts());\n+    appState.setLaunchTime(app.getLaunchTime());\n     rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n         false, future);\n \n     try {\n       getChecked(future);\n     } catch (YarnException ex) {\n       if (!toSuppressException) {\n         throw ex;\n       }\n       LOG.error(\"Statestore update failed for move application \u0027\"\n           + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n           + \"\u0027 with below exception:\" + ex.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAppDataToStateStore(String queue, RMApp app,\n      boolean toSuppressException) throws YarnException {\n    // Create a future object to capture exceptions from StateStore.\n    SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n\n    // Update new queue in Submission Context to update to StateStore.\n    app.getApplicationSubmissionContext().setQueue(queue);\n\n    ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n        app.getSubmitTime(), app.getStartTime(),\n        app.getApplicationSubmissionContext(), app.getUser(),\n        app.getCallerContext());\n    appState.setApplicationTimeouts(app.getApplicationTimeouts());\n    appState.setLaunchTime(app.getLaunchTime());\n    rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n        false, future);\n\n    try {\n      getChecked(future);\n    } catch (YarnException ex) {\n      if (!toSuppressException) {\n        throw ex;\n      }\n      LOG.error(\"Statestore update failed for move application \u0027\"\n          + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n          + \"\u0027 with below exception:\" + ex.getMessage());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "543aac9f281871a40473e83061f6deadc0bbdab7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14386. Rewind trunk from Guava 21.0 back to Guava 11.0.2.\n",
      "commitDate": "09/05/17 9:22 AM",
      "commitName": "543aac9f281871a40473e83061f6deadc0bbdab7",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/04/17 1:17 PM",
      "commitNameOld": "2ba21d63767e11535d3210dc58a03b41e83df949",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 14.84,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void updateAppDataToStateStore(String queue, RMApp app,\n       boolean toSuppressException) throws YarnException {\n     // Create a future object to capture exceptions from StateStore.\n     SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n \n     // Update new queue in Submission Context to update to StateStore.\n     app.getApplicationSubmissionContext().setQueue(queue);\n \n     ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n         app.getSubmitTime(), app.getStartTime(),\n         app.getApplicationSubmissionContext(), app.getUser(),\n         app.getCallerContext());\n     appState.setApplicationTimeouts(app.getApplicationTimeouts());\n     rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n         false, future);\n \n     try {\n-      Futures.getChecked(future, YarnException.class);\n+      getChecked(future);\n     } catch (YarnException ex) {\n       if (!toSuppressException) {\n         throw ex;\n       }\n       LOG.error(\"Statestore update failed for move application \u0027\"\n           + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n           + \"\u0027 with below exception:\" + ex.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAppDataToStateStore(String queue, RMApp app,\n      boolean toSuppressException) throws YarnException {\n    // Create a future object to capture exceptions from StateStore.\n    SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n\n    // Update new queue in Submission Context to update to StateStore.\n    app.getApplicationSubmissionContext().setQueue(queue);\n\n    ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n        app.getSubmitTime(), app.getStartTime(),\n        app.getApplicationSubmissionContext(), app.getUser(),\n        app.getCallerContext());\n    appState.setApplicationTimeouts(app.getApplicationTimeouts());\n    rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n        false, future);\n\n    try {\n      getChecked(future);\n    } catch (YarnException ex) {\n      if (!toSuppressException) {\n        throw ex;\n      }\n      LOG.error(\"Statestore update failed for move application \u0027\"\n          + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n          + \"\u0027 with below exception:\" + ex.getMessage());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10101. Update guava dependency to the latest version. (ozawa)\n",
      "commitDate": "24/03/17 6:06 PM",
      "commitName": "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "23/02/17 12:49 AM",
      "commitNameOld": "a207aa9930e7ee4f10228e2db4b4e733794eb8ea",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 29.68,
      "commitsBetweenForRepo": 183,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void updateAppDataToStateStore(String queue, RMApp app,\n       boolean toSuppressException) throws YarnException {\n     // Create a future object to capture exceptions from StateStore.\n     SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n \n     // Update new queue in Submission Context to update to StateStore.\n     app.getApplicationSubmissionContext().setQueue(queue);\n \n     ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n         app.getSubmitTime(), app.getStartTime(),\n         app.getApplicationSubmissionContext(), app.getUser(),\n         app.getCallerContext());\n     appState.setApplicationTimeouts(app.getApplicationTimeouts());\n     rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n         false, future);\n \n     try {\n-      Futures.get(future, YarnException.class);\n+      Futures.getChecked(future, YarnException.class);\n     } catch (YarnException ex) {\n       if (!toSuppressException) {\n         throw ex;\n       }\n       LOG.error(\"Statestore update failed for move application \u0027\"\n           + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n           + \"\u0027 with below exception:\" + ex.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAppDataToStateStore(String queue, RMApp app,\n      boolean toSuppressException) throws YarnException {\n    // Create a future object to capture exceptions from StateStore.\n    SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n\n    // Update new queue in Submission Context to update to StateStore.\n    app.getApplicationSubmissionContext().setQueue(queue);\n\n    ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n        app.getSubmitTime(), app.getStartTime(),\n        app.getApplicationSubmissionContext(), app.getUser(),\n        app.getCallerContext());\n    appState.setApplicationTimeouts(app.getApplicationTimeouts());\n    rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n        false, future);\n\n    try {\n      Futures.getChecked(future, YarnException.class);\n    } catch (YarnException ex) {\n      if (!toSuppressException) {\n        throw ex;\n      }\n      LOG.error(\"Statestore update failed for move application \u0027\"\n          + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n          + \"\u0027 with below exception:\" + ex.getMessage());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "563480dccd0136d82730f4228f1df44449ed5822": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5932. Retrospect moveApplicationToQueue in align with YARN-5611. Contributed by Sunil G.\n",
      "commitDate": "06/12/16 9:09 PM",
      "commitName": "563480dccd0136d82730f4228f1df44449ed5822",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,27 @@\n+  private void updateAppDataToStateStore(String queue, RMApp app,\n+      boolean toSuppressException) throws YarnException {\n+    // Create a future object to capture exceptions from StateStore.\n+    SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n+\n+    // Update new queue in Submission Context to update to StateStore.\n+    app.getApplicationSubmissionContext().setQueue(queue);\n+\n+    ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n+        app.getSubmitTime(), app.getStartTime(),\n+        app.getApplicationSubmissionContext(), app.getUser(),\n+        app.getCallerContext());\n+    appState.setApplicationTimeouts(app.getApplicationTimeouts());\n+    rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n+        false, future);\n+\n+    try {\n+      Futures.get(future, YarnException.class);\n+    } catch (YarnException ex) {\n+      if (!toSuppressException) {\n+        throw ex;\n+      }\n+      LOG.error(\"Statestore update failed for move application \u0027\"\n+          + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n+          + \"\u0027 with below exception:\" + ex.getMessage());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAppDataToStateStore(String queue, RMApp app,\n      boolean toSuppressException) throws YarnException {\n    // Create a future object to capture exceptions from StateStore.\n    SettableFuture\u003cObject\u003e future \u003d SettableFuture.create();\n\n    // Update new queue in Submission Context to update to StateStore.\n    app.getApplicationSubmissionContext().setQueue(queue);\n\n    ApplicationStateData appState \u003d ApplicationStateData.newInstance(\n        app.getSubmitTime(), app.getStartTime(),\n        app.getApplicationSubmissionContext(), app.getUser(),\n        app.getCallerContext());\n    appState.setApplicationTimeouts(app.getApplicationTimeouts());\n    rmContext.getStateStore().updateApplicationStateSynchronously(appState,\n        false, future);\n\n    try {\n      Futures.get(future, YarnException.class);\n    } catch (YarnException ex) {\n      if (!toSuppressException) {\n        throw ex;\n      }\n      LOG.error(\"Statestore update failed for move application \u0027\"\n          + app.getApplicationId() + \"\u0027 to queue \u0027\" + queue\n          + \"\u0027 with below exception:\" + ex.getMessage());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java"
    }
  }
}