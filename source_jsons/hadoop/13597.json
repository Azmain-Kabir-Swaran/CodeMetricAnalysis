{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LowRedundancyBlocks.java",
  "functionName": "remove",
  "functionId": "remove___block-BlockInfo__priLevel-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java",
  "functionStartLine": 369,
  "functionEndLine": 371,
  "numCommitsSeen": 48,
  "timeTaken": 8566,
  "changeHistory": [
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e",
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
    "5411dc559d5f73e4153e76fdff94a26869c17a37",
    "2a1d656196cf9750fa482cb10893684e8a2ce7c3",
    "02c01815eca656814febcdaca6115e5f53b9c746",
    "6e3fcffe291faec40fa9214f4880a35a952836c4",
    "a38a37c63417a3b19dcdf98251af196c9d7b8c31",
    "3ae38ec7dfa1aaf451cf889cec6cf862379af32a",
    "db71de2e11cfa56a254ef4c92fea5ef4f8c19100",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e": "Ybodychange",
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5": "Ymultichange(Yfilerename,Ybodychange)",
    "5411dc559d5f73e4153e76fdff94a26869c17a37": "Ybodychange",
    "2a1d656196cf9750fa482cb10893684e8a2ce7c3": "Ybodychange",
    "02c01815eca656814febcdaca6115e5f53b9c746": "Ybodychange",
    "6e3fcffe291faec40fa9214f4880a35a952836c4": "Yparameterchange",
    "a38a37c63417a3b19dcdf98251af196c9d7b8c31": "Yparameterchange",
    "3ae38ec7dfa1aaf451cf889cec6cf862379af32a": "Ybodychange",
    "db71de2e11cfa56a254ef4c92fea5ef4f8c19100": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Yfilerename",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Yfilerename",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10999. Introduce separate stats for Replicated and Erasure Coded Blocks apart from the current Aggregated stats. (Manoj Govindassamy via lei)\n",
      "commitDate": "14/06/17 10:44 AM",
      "commitName": "999c8fcbefc876d9c26c23c5b87a64a81e4f113e",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "01/05/17 12:19 PM",
      "commitNameOld": "07b98e7830c2214340cb7f434df674057e89df94",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 43.93,
      "commitsBetweenForRepo": 223,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,3 @@\n   boolean remove(BlockInfo block, int priLevel) {\n-    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n-        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n-      NameNode.blockStateChangeLog.debug(\n-          \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block {}\"\n-              + \" from priority queue {}\",\n-          block, priLevel);\n-      return true;\n-    } else {\n-      // Try to remove the block from all queues if the block was\n-      // not found in the queue for the given priority level.\n-      for (int i \u003d 0; i \u003c LEVEL; i++) {\n-        if (i !\u003d priLevel \u0026\u0026 priorityQueues.get(i).remove(block)) {\n-          NameNode.blockStateChangeLog.debug(\n-              \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block\" +\n-                  \" {} from priority queue {}\", block, i);\n-          return true;\n-        }\n-      }\n-    }\n-    return false;\n+    return remove(block, priLevel, block.getReplication());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    return remove(block, priLevel, block.getReplication());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java",
      "extendedDetails": {}
    },
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-9857. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-1]. Contributed by Rakesh R.\n",
      "commitDate": "16/03/16 4:53 PM",
      "commitName": "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-9857. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-1]. Contributed by Rakesh R.\n",
          "commitDate": "16/03/16 4:53 PM",
          "commitName": "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "16/03/16 7:35 AM",
          "commitNameOld": "605fdcbb81687c73ba91a3bd0d607cabd3dc5a67",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   boolean remove(BlockInfo block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n       NameNode.blockStateChangeLog.debug(\n-        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n-            \" from priority queue {}\", block, priLevel);\n+          \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block {}\"\n+              + \" from priority queue {}\",\n+          block, priLevel);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (i !\u003d priLevel \u0026\u0026 priorityQueues.get(i).remove(block)) {\n           NameNode.blockStateChangeLog.debug(\n-              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n+              \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block\" +\n                   \" {} from priority queue {}\", block, i);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n          \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block {}\"\n              + \" from priority queue {}\",\n          block, priLevel);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (i !\u003d priLevel \u0026\u0026 priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, i);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9857. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-1]. Contributed by Rakesh R.\n",
          "commitDate": "16/03/16 4:53 PM",
          "commitName": "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "16/03/16 7:35 AM",
          "commitNameOld": "605fdcbb81687c73ba91a3bd0d607cabd3dc5a67",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   boolean remove(BlockInfo block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n       NameNode.blockStateChangeLog.debug(\n-        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n-            \" from priority queue {}\", block, priLevel);\n+          \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block {}\"\n+              + \" from priority queue {}\",\n+          block, priLevel);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (i !\u003d priLevel \u0026\u0026 priorityQueues.get(i).remove(block)) {\n           NameNode.blockStateChangeLog.debug(\n-              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n+              \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block\" +\n                   \" {} from priority queue {}\", block, i);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n          \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block {}\"\n              + \" from priority queue {}\",\n          block, priLevel);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (i !\u003d priLevel \u0026\u0026 priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.LowRedundancyBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, i);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java",
          "extendedDetails": {}
        }
      ]
    },
    "5411dc559d5f73e4153e76fdff94a26869c17a37": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9205. Do not schedule corrupt blocks for replication.  (szetszwo)\n",
      "commitDate": "15/10/15 3:07 AM",
      "commitName": "5411dc559d5f73e4153e76fdff94a26869c17a37",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "24/08/15 12:59 PM",
      "commitNameOld": "6b6a63bbbda920315d3d24b61ed3344a78a981b6",
      "commitAuthorOld": "",
      "daysBetweenCommits": 51.59,
      "commitsBetweenForRepo": 371,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   boolean remove(BlockInfo block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n       NameNode.blockStateChangeLog.debug(\n         \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n             \" from priority queue {}\", block, priLevel);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n-        if (priorityQueues.get(i).remove(block)) {\n+        if (i !\u003d priLevel \u0026\u0026 priorityQueues.get(i).remove(block)) {\n           NameNode.blockStateChangeLog.debug(\n               \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n-                  \" {} from priority queue {}\", block, priLevel);\n+                  \" {} from priority queue {}\", block, i);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n            \" from priority queue {}\", block, priLevel);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (i !\u003d priLevel \u0026\u0026 priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, i);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {}
    },
    "2a1d656196cf9750fa482cb10893684e8a2ce7c3": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-6682. Add a metric to expose the timestamp of the oldest under-replicated block. (aajisaka)\"\n\nThis reverts commit 02c01815eca656814febcdaca6115e5f53b9c746.\n",
      "commitDate": "29/07/15 12:48 AM",
      "commitName": "2a1d656196cf9750fa482cb10893684e8a2ce7c3",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "24/07/15 2:28 AM",
      "commitNameOld": "206d4933a567147b62f463c2daa3d063ad40822b",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 4.93,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   boolean remove(BlockInfo block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n       NameNode.blockStateChangeLog.debug(\n-          \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n-              \" from priority queue {}\", block, priLevel);\n-      timestampsMap.remove(block);\n+        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n+            \" from priority queue {}\", block, priLevel);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (priorityQueues.get(i).remove(block)) {\n           NameNode.blockStateChangeLog.debug(\n               \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                   \" {} from priority queue {}\", block, priLevel);\n-          timestampsMap.remove(block);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n            \" from priority queue {}\", block, priLevel);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, priLevel);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {}
    },
    "02c01815eca656814febcdaca6115e5f53b9c746": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6682. Add a metric to expose the timestamp of the oldest under-replicated block. (aajisaka)\n",
      "commitDate": "23/07/15 7:37 PM",
      "commitName": "02c01815eca656814febcdaca6115e5f53b9c746",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "17/06/15 8:05 AM",
      "commitNameOld": "6e3fcffe291faec40fa9214f4880a35a952836c4",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 36.48,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   boolean remove(BlockInfo block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n       NameNode.blockStateChangeLog.debug(\n-        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n-            \" from priority queue {}\", block, priLevel);\n+          \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n+              \" from priority queue {}\", block, priLevel);\n+      timestampsMap.remove(block);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (priorityQueues.get(i).remove(block)) {\n           NameNode.blockStateChangeLog.debug(\n               \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                   \" {} from priority queue {}\", block, priLevel);\n+          timestampsMap.remove(block);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n              \" from priority queue {}\", block, priLevel);\n      timestampsMap.remove(block);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, priLevel);\n          timestampsMap.remove(block);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {}
    },
    "6e3fcffe291faec40fa9214f4880a35a952836c4": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-8608. Merge HDFS-7912 to trunk and branch-2 (track BlockInfo instead of Block in UnderReplicatedBlocks and PendingReplicationBlocks). Contributed by Zhe Zhang.\n",
      "commitDate": "17/06/15 8:05 AM",
      "commitName": "6e3fcffe291faec40fa9214f4880a35a952836c4",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "03/02/15 3:01 PM",
      "commitNameOld": "3ae38ec7dfa1aaf451cf889cec6cf862379af32a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 133.67,
      "commitsBetweenForRepo": 1249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  boolean remove(Block block, int priLevel) {\n-    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n+  boolean remove(BlockInfo block, int priLevel) {\n+    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n       NameNode.blockStateChangeLog.debug(\n         \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n             \" from priority queue {}\", block, priLevel);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (priorityQueues.get(i).remove(block)) {\n           NameNode.blockStateChangeLog.debug(\n               \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                   \" {} from priority queue {}\", block, priLevel);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL\n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n            \" from priority queue {}\", block, priLevel);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, priLevel);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {
        "oldValue": "[block-Block, priLevel-int]",
        "newValue": "[block-BlockInfo, priLevel-int]"
      }
    },
    "a38a37c63417a3b19dcdf98251af196c9d7b8c31": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-7912. Erasure Coding: track BlockInfo instead of Block in UnderReplicatedBlocks and PendingReplicationBlocks. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:41 AM",
      "commitName": "a38a37c63417a3b19dcdf98251af196c9d7b8c31",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "03/02/15 3:01 PM",
      "commitNameOld": "3ae38ec7dfa1aaf451cf889cec6cf862379af32a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 111.82,
      "commitsBetweenForRepo": 1107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  boolean remove(Block block, int priLevel) {\n+  boolean remove(BlockInfo block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n       NameNode.blockStateChangeLog.debug(\n         \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n             \" from priority queue {}\", block, priLevel);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (priorityQueues.get(i).remove(block)) {\n           NameNode.blockStateChangeLog.debug(\n               \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                   \" {} from priority queue {}\", block, priLevel);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(BlockInfo block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n            \" from priority queue {}\", block, priLevel);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, priLevel);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {
        "oldValue": "[block-Block, priLevel-int]",
        "newValue": "[block-BlockInfo, priLevel-int]"
      }
    },
    "3ae38ec7dfa1aaf451cf889cec6cf862379af32a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7712. Switch blockStateChangeLog to use slf4j.\n",
      "commitDate": "03/02/15 3:01 PM",
      "commitName": "3ae38ec7dfa1aaf451cf889cec6cf862379af32a",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "23/10/14 12:28 PM",
      "commitNameOld": "8c5b23b5473e447384f818d69d907d5c35ed6d6a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 103.15,
      "commitsBetweenForRepo": 743,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,21 @@\n   boolean remove(Block block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n-      if(NameNode.blockStateChangeLog.isDebugEnabled()) {\n-        NameNode.blockStateChangeLog.debug(\n-          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n-          + \"Removing block \" + block\n-          + \" from priority queue \"+ priLevel);\n-      }\n+      NameNode.blockStateChangeLog.debug(\n+        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n+            \" from priority queue {}\", block, priLevel);\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (priorityQueues.get(i).remove(block)) {\n-          if(NameNode.blockStateChangeLog.isDebugEnabled()) {\n-            NameNode.blockStateChangeLog.debug(\n-              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n-              + \"Removing block \" + block\n-              + \" from priority queue \"+ i);\n-          }\n+          NameNode.blockStateChangeLog.debug(\n+              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n+                  \" {} from priority queue {}\", block, priLevel);\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      NameNode.blockStateChangeLog.debug(\n        \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {}\" +\n            \" from priority queue {}\", block, priLevel);\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (priorityQueues.get(i).remove(block)) {\n          NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block\" +\n                  \" {} from priority queue {}\", block, priLevel);\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {}
    },
    "db71de2e11cfa56a254ef4c92fea5ef4f8c19100": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4080. Add a separate logger for block state change logs to enable turning off those logs. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1407566 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/11/12 10:07 AM",
      "commitName": "db71de2e11cfa56a254ef4c92fea5ef4f8c19100",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "09/02/12 6:05 PM",
      "commitNameOld": "dc847b39fdee85b45ef26e8e7380d722ffb89e4e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 273.67,
      "commitsBetweenForRepo": 1694,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   boolean remove(Block block, int priLevel) {\n     if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n         \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n-      if(NameNode.stateChangeLog.isDebugEnabled()) {\n-        NameNode.stateChangeLog.debug(\n+      if(NameNode.blockStateChangeLog.isDebugEnabled()) {\n+        NameNode.blockStateChangeLog.debug(\n           \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n           + \"Removing block \" + block\n           + \" from priority queue \"+ priLevel);\n       }\n       return true;\n     } else {\n       // Try to remove the block from all queues if the block was\n       // not found in the queue for the given priority level.\n       for (int i \u003d 0; i \u003c LEVEL; i++) {\n         if (priorityQueues.get(i).remove(block)) {\n-          if(NameNode.stateChangeLog.isDebugEnabled()) {\n-            NameNode.stateChangeLog.debug(\n+          if(NameNode.blockStateChangeLog.isDebugEnabled()) {\n+            NameNode.blockStateChangeLog.debug(\n               \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n               + \"Removing block \" + block\n               + \" from priority queue \"+ i);\n           }\n           return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      if(NameNode.blockStateChangeLog.isDebugEnabled()) {\n        NameNode.blockStateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n          + \"Removing block \" + block\n          + \" from priority queue \"+ priLevel);\n      }\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for (int i \u003d 0; i \u003c LEVEL; i++) {\n        if (priorityQueues.get(i).remove(block)) {\n          if(NameNode.blockStateChangeLog.isDebugEnabled()) {\n            NameNode.blockStateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n              + \"Removing block \" + block\n              + \" from priority queue \"+ i);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      if(NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n          + \"Removing block \" + block\n          + \" from priority queue \"+ priLevel);\n      }\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for(int i\u003d0; i\u003cLEVEL; i++) {\n        if(priorityQueues.get(i).remove(block)) {\n          if(NameNode.stateChangeLog.isDebugEnabled()) {\n            NameNode.stateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n              + \"Removing block \" + block\n              + \" from priority queue \"+ i);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      if(NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n          + \"Removing block \" + block\n          + \" from priority queue \"+ priLevel);\n      }\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for(int i\u003d0; i\u003cLEVEL; i++) {\n        if(priorityQueues.get(i).remove(block)) {\n          if(NameNode.stateChangeLog.isDebugEnabled()) {\n            NameNode.stateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n              + \"Removing block \" + block\n              + \" from priority queue \"+ i);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 5:26 PM",
      "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      if(NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n          + \"Removing block \" + block\n          + \" from priority queue \"+ priLevel);\n      }\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for(int i\u003d0; i\u003cLEVEL; i++) {\n        if(priorityQueues.get(i).remove(block)) {\n          if(NameNode.stateChangeLog.isDebugEnabled()) {\n            NameNode.stateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n              + \"Removing block \" + block\n              + \" from priority queue \"+ i);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/UnderReplicatedBlocks.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java"
      }
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Yfilerename",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 4:57 PM",
      "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      if(NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n          + \"Removing block \" + block\n          + \" from priority queue \"+ priLevel);\n      }\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for(int i\u003d0; i\u003cLEVEL; i++) {\n        if(priorityQueues.get(i).remove(block)) {\n          if(NameNode.stateChangeLog.isDebugEnabled()) {\n            NameNode.stateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n              + \"Removing block \" + block\n              + \" from priority queue \"+ i);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/UnderReplicatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/UnderReplicatedBlocks.java"
      }
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 9:21 AM",
      "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.31,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      if(NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n          + \"Removing block \" + block\n          + \" from priority queue \"+ priLevel);\n      }\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for(int i\u003d0; i\u003cLEVEL; i++) {\n        if(priorityQueues.get(i).remove(block)) {\n          if(NameNode.stateChangeLog.isDebugEnabled()) {\n            NameNode.stateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n              + \"Removing block \" + block\n              + \" from priority queue \"+ i);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/UnderReplicatedBlocks.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/UnderReplicatedBlocks.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,27 @@\n+  boolean remove(Block block, int priLevel) {\n+    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n+        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n+      if(NameNode.stateChangeLog.isDebugEnabled()) {\n+        NameNode.stateChangeLog.debug(\n+          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n+          + \"Removing block \" + block\n+          + \" from priority queue \"+ priLevel);\n+      }\n+      return true;\n+    } else {\n+      // Try to remove the block from all queues if the block was\n+      // not found in the queue for the given priority level.\n+      for(int i\u003d0; i\u003cLEVEL; i++) {\n+        if(priorityQueues.get(i).remove(block)) {\n+          if(NameNode.stateChangeLog.isDebugEnabled()) {\n+            NameNode.stateChangeLog.debug(\n+              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n+              + \"Removing block \" + block\n+              + \" from priority queue \"+ i);\n+          }\n+          return true;\n+        }\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean remove(Block block, int priLevel) {\n    if(priLevel \u003e\u003d 0 \u0026\u0026 priLevel \u003c LEVEL \n        \u0026\u0026 priorityQueues.get(priLevel).remove(block)) {\n      if(NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n          \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n          + \"Removing block \" + block\n          + \" from priority queue \"+ priLevel);\n      }\n      return true;\n    } else {\n      // Try to remove the block from all queues if the block was\n      // not found in the queue for the given priority level.\n      for(int i\u003d0; i\u003cLEVEL; i++) {\n        if(priorityQueues.get(i).remove(block)) {\n          if(NameNode.stateChangeLog.isDebugEnabled()) {\n            NameNode.stateChangeLog.debug(\n              \"BLOCK* NameSystem.UnderReplicationBlock.remove: \"\n              + \"Removing block \" + block\n              + \" from priority queue \"+ i);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/UnderReplicatedBlocks.java"
    }
  }
}