{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractFileSystem.java",
  "functionName": "isValidName",
  "functionId": "isValidName___src-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java",
  "functionStartLine": 112,
  "functionEndLine": 124,
  "numCommitsSeen": 53,
  "timeTaken": 1726,
  "changeHistory": [
    "cd80628ec49d4d30a30c6041da7ec50e290a5087",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5"
  ],
  "changeHistoryShort": {
    "cd80628ec49d4d30a30c6041da7ec50e290a5087": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Ymultichange(Yfilerename,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd80628ec49d4d30a30c6041da7ec50e290a5087": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-8957 AbstractFileSystem#IsValidName should be overridden for embedded file systems like ViewFs (Chris Nauroth via Sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1420965 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/12 12:54 PM",
      "commitName": "cd80628ec49d4d30a30c6041da7ec50e290a5087",
      "commitAuthor": "Sanjay Radia",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-8957 AbstractFileSystem#IsValidName should be overridden for embedded file systems like ViewFs (Chris Nauroth via Sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1420965 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/12/12 12:54 PM",
          "commitName": "cd80628ec49d4d30a30c6041da7ec50e290a5087",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "24/08/12 6:03 PM",
          "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 109.83,
          "commitsBetweenForRepo": 592,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private static boolean isValidName(String src) {\n-    // Check for \"..\" \".\" \":\" \"/\"\n+  public boolean isValidName(String src) {\n+    // Prohibit \"..\" \".\" and anything containing \":\"\n     StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n     while(tokens.hasMoreTokens()) {\n       String element \u003d tokens.nextToken();\n-      if (element.equals(\"target/generated-sources\") ||\n+      if (element.equals(\"..\") ||\n           element.equals(\".\")  ||\n           (element.indexOf(\":\") \u003e\u003d 0)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isValidName(String src) {\n    // Prohibit \"..\" \".\" and anything containing \":\"\n    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n    while(tokens.hasMoreTokens()) {\n      String element \u003d tokens.nextToken();\n      if (element.equals(\"..\") ||\n          element.equals(\".\")  ||\n          (element.indexOf(\":\") \u003e\u003d 0)) {\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8957 AbstractFileSystem#IsValidName should be overridden for embedded file systems like ViewFs (Chris Nauroth via Sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1420965 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/12/12 12:54 PM",
          "commitName": "cd80628ec49d4d30a30c6041da7ec50e290a5087",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "24/08/12 6:03 PM",
          "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 109.83,
          "commitsBetweenForRepo": 592,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private static boolean isValidName(String src) {\n-    // Check for \"..\" \".\" \":\" \"/\"\n+  public boolean isValidName(String src) {\n+    // Prohibit \"..\" \".\" and anything containing \":\"\n     StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n     while(tokens.hasMoreTokens()) {\n       String element \u003d tokens.nextToken();\n-      if (element.equals(\"target/generated-sources\") ||\n+      if (element.equals(\"..\") ||\n           element.equals(\".\")  ||\n           (element.indexOf(\":\") \u003e\u003d 0)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isValidName(String src) {\n    // Prohibit \"..\" \".\" and anything containing \":\"\n    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n    while(tokens.hasMoreTokens()) {\n      String element \u003d tokens.nextToken();\n      if (element.equals(\"..\") ||\n          element.equals(\".\")  ||\n          (element.indexOf(\":\") \u003e\u003d 0)) {\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static boolean isValidName(String src) {\n    // Check for \"..\" \".\" \":\" \"/\"\n    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n    while(tokens.hasMoreTokens()) {\n      String element \u003d tokens.nextToken();\n      if (element.equals(\"target/generated-sources\") ||\n          element.equals(\".\")  ||\n          (element.indexOf(\":\") \u003e\u003d 0)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/08/11 9:37 AM",
          "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
          "commitAuthor": "Thomas White",
          "commitDateOld": "01/08/11 3:53 PM",
          "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.74,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   private static boolean isValidName(String src) {\n     // Check for \"..\" \".\" \":\" \"/\"\n     StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n     while(tokens.hasMoreTokens()) {\n       String element \u003d tokens.nextToken();\n-      if (element.equals(\"..\") || \n+      if (element.equals(\"target/generated-sources\") ||\n           element.equals(\".\")  ||\n           (element.indexOf(\":\") \u003e\u003d 0)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean isValidName(String src) {\n    // Check for \"..\" \".\" \":\" \"/\"\n    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n    while(tokens.hasMoreTokens()) {\n      String element \u003d tokens.nextToken();\n      if (element.equals(\"target/generated-sources\") ||\n          element.equals(\".\")  ||\n          (element.indexOf(\":\") \u003e\u003d 0)) {\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java",
          "extendedDetails": {
            "oldPath": "common/src/java/org/apache/hadoop/fs/AbstractFileSystem.java",
            "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/08/11 9:37 AM",
          "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
          "commitAuthor": "Thomas White",
          "commitDateOld": "01/08/11 3:53 PM",
          "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.74,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   private static boolean isValidName(String src) {\n     // Check for \"..\" \".\" \":\" \"/\"\n     StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n     while(tokens.hasMoreTokens()) {\n       String element \u003d tokens.nextToken();\n-      if (element.equals(\"..\") || \n+      if (element.equals(\"target/generated-sources\") ||\n           element.equals(\".\")  ||\n           (element.indexOf(\":\") \u003e\u003d 0)) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean isValidName(String src) {\n    // Check for \"..\" \".\" \":\" \"/\"\n    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n    while(tokens.hasMoreTokens()) {\n      String element \u003d tokens.nextToken();\n      if (element.equals(\"target/generated-sources\") ||\n          element.equals(\".\")  ||\n          (element.indexOf(\":\") \u003e\u003d 0)) {\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static boolean isValidName(String src) {\n    // Check for \"..\" \".\" \":\" \"/\"\n    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n    while(tokens.hasMoreTokens()) {\n      String element \u003d tokens.nextToken();\n      if (element.equals(\"..\") || \n          element.equals(\".\")  ||\n          (element.indexOf(\":\") \u003e\u003d 0)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/AbstractFileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/AbstractFileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/AbstractFileSystem.java"
      }
    },
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": {
      "type": "Yintroduced",
      "commitMessage": "Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/09 3:24 PM",
      "commitName": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,13 @@\n+  private static boolean isValidName(String src) {\n+    // Check for \"..\" \".\" \":\" \"/\"\n+    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n+    while(tokens.hasMoreTokens()) {\n+      String element \u003d tokens.nextToken();\n+      if (element.equals(\"..\") || \n+          element.equals(\".\")  ||\n+          (element.indexOf(\":\") \u003e\u003d 0)) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean isValidName(String src) {\n    // Check for \"..\" \".\" \":\" \"/\"\n    StringTokenizer tokens \u003d new StringTokenizer(src, Path.SEPARATOR);\n    while(tokens.hasMoreTokens()) {\n      String element \u003d tokens.nextToken();\n      if (element.equals(\"..\") || \n          element.equals(\".\")  ||\n          (element.indexOf(\":\") \u003e\u003d 0)) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "src/java/org/apache/hadoop/fs/AbstractFileSystem.java"
    }
  }
}