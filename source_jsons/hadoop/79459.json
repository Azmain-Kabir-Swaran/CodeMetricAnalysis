{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenRenewer.java",
  "functionName": "renew",
  "functionId": "renew",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegationTokenRenewer.java",
  "functionStartLine": 122,
  "functionEndLine": 147,
  "numCommitsSeen": 23,
  "timeTaken": 5119,
  "changeHistory": [
    "d027b947d62b0193a1c579d8f92047b669f6192b",
    "a96780013e5e745285b7753322b3b47cbd4a0caa",
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
    "4d4661802e8109c264a5fce27cbad091fb91697a",
    "32cad9affe159ff7c6e4c7e31f57174967ef210a",
    "002dd6968b89ded6a77858ccb50c9b2df074c226",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d027b947d62b0193a1c579d8f92047b669f6192b": "Ybodychange",
    "a96780013e5e745285b7753322b3b47cbd4a0caa": "Ybodychange",
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941": "Ybodychange",
    "4d4661802e8109c264a5fce27cbad091fb91697a": "Yfilerename",
    "32cad9affe159ff7c6e4c7e31f57174967ef210a": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "002dd6968b89ded6a77858ccb50c9b2df074c226": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d027b947d62b0193a1c579d8f92047b669f6192b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4805. Webhdfs client is fragile to token renewal errors. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1482121 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/13 3:03 PM",
      "commitName": "d027b947d62b0193a1c579d8f92047b669f6192b",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "10/05/13 9:22 AM",
      "commitNameOld": "a96780013e5e745285b7753322b3b47cbd4a0caa",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 3.24,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n     private boolean renew() throws IOException, InterruptedException {\n       final T fs \u003d weakFs.get();\n       final boolean b \u003d fs !\u003d null;\n       if (b) {\n         synchronized(fs) {\n           try {\n             long expires \u003d token.renew(fs.getConf());\n             updateRenewalTime(expires - Time.now());\n           } catch (IOException ie) {\n             try {\n               Token\u003c?\u003e[] tokens \u003d fs.addDelegationTokens(null, null);\n               if (tokens.length \u003d\u003d 0) {\n                 throw new IOException(\"addDelegationTokens returned no tokens\");\n               }\n               token \u003d tokens[0];\n               updateRenewalTime(renewCycle);\n               fs.setDelegationToken(token);\n             } catch (IOException ie2) {\n+              isValid \u003d false;\n               throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n             }\n           }\n         }\n       }\n       return b;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean renew() throws IOException, InterruptedException {\n      final T fs \u003d weakFs.get();\n      final boolean b \u003d fs !\u003d null;\n      if (b) {\n        synchronized(fs) {\n          try {\n            long expires \u003d token.renew(fs.getConf());\n            updateRenewalTime(expires - Time.now());\n          } catch (IOException ie) {\n            try {\n              Token\u003c?\u003e[] tokens \u003d fs.addDelegationTokens(null, null);\n              if (tokens.length \u003d\u003d 0) {\n                throw new IOException(\"addDelegationTokens returned no tokens\");\n              }\n              token \u003d tokens[0];\n              updateRenewalTime(renewCycle);\n              fs.setDelegationToken(token);\n            } catch (IOException ie2) {\n              isValid \u003d false;\n              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n            }\n          }\n        }\n      }\n      return b;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "a96780013e5e745285b7753322b3b47cbd4a0caa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9549. WebHdfsFileSystem hangs on close(). Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481075 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/05/13 9:22 AM",
      "commitName": "a96780013e5e745285b7753322b3b47cbd4a0caa",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "11/12/12 4:10 PM",
      "commitNameOld": "8c2846510ebd4be5e437e2b20e9ee8caf9375206",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 149.68,
      "commitsBetweenForRepo": 840,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n     private boolean renew() throws IOException, InterruptedException {\n       final T fs \u003d weakFs.get();\n       final boolean b \u003d fs !\u003d null;\n       if (b) {\n         synchronized(fs) {\n           try {\n-            fs.getRenewToken().renew(fs.getConf());\n+            long expires \u003d token.renew(fs.getConf());\n+            updateRenewalTime(expires - Time.now());\n           } catch (IOException ie) {\n             try {\n               Token\u003c?\u003e[] tokens \u003d fs.addDelegationTokens(null, null);\n               if (tokens.length \u003d\u003d 0) {\n                 throw new IOException(\"addDelegationTokens returned no tokens\");\n               }\n-              fs.setDelegationToken(tokens[0]);\n+              token \u003d tokens[0];\n+              updateRenewalTime(renewCycle);\n+              fs.setDelegationToken(token);\n             } catch (IOException ie2) {\n               throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n             }\n           }\n         }\n       }\n       return b;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean renew() throws IOException, InterruptedException {\n      final T fs \u003d weakFs.get();\n      final boolean b \u003d fs !\u003d null;\n      if (b) {\n        synchronized(fs) {\n          try {\n            long expires \u003d token.renew(fs.getConf());\n            updateRenewalTime(expires - Time.now());\n          } catch (IOException ie) {\n            try {\n              Token\u003c?\u003e[] tokens \u003d fs.addDelegationTokens(null, null);\n              if (tokens.length \u003d\u003d 0) {\n                throw new IOException(\"addDelegationTokens returned no tokens\");\n              }\n              token \u003d tokens[0];\n              updateRenewalTime(renewCycle);\n              fs.setDelegationToken(token);\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n            }\n          }\n        }\n      }\n      return b;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7967. Need generalized multi-token filesystem support (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/12 7:05 AM",
      "commitName": "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "12/07/12 12:01 PM",
      "commitNameOld": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 35.79,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n     private boolean renew() throws IOException, InterruptedException {\n       final T fs \u003d weakFs.get();\n       final boolean b \u003d fs !\u003d null;\n       if (b) {\n         synchronized(fs) {\n           try {\n             fs.getRenewToken().renew(fs.getConf());\n           } catch (IOException ie) {\n             try {\n-              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n+              Token\u003c?\u003e[] tokens \u003d fs.addDelegationTokens(null, null);\n+              if (tokens.length \u003d\u003d 0) {\n+                throw new IOException(\"addDelegationTokens returned no tokens\");\n+              }\n+              fs.setDelegationToken(tokens[0]);\n             } catch (IOException ie2) {\n               throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n             }\n           }\n         }\n       }\n       return b;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean renew() throws IOException, InterruptedException {\n      final T fs \u003d weakFs.get();\n      final boolean b \u003d fs !\u003d null;\n      if (b) {\n        synchronized(fs) {\n          try {\n            fs.getRenewToken().renew(fs.getConf());\n          } catch (IOException ie) {\n            try {\n              Token\u003c?\u003e[] tokens \u003d fs.addDelegationTokens(null, null);\n              if (tokens.length \u003d\u003d 0) {\n                throw new IOException(\"addDelegationTokens returned no tokens\");\n              }\n              fs.setDelegationToken(tokens[0]);\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n            }\n          }\n        }\n      }\n      return b;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "4d4661802e8109c264a5fce27cbad091fb91697a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-3228. Move DelegationTokenRenewer to common (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349555 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/12 2:52 PM",
      "commitName": "4d4661802e8109c264a5fce27cbad091fb91697a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "12/06/12 1:45 PM",
      "commitNameOld": "22c65886237ed7c4e8cfa0aff95d751b6d70f7cc",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean renew() throws IOException, InterruptedException {\n      final T fs \u003d weakFs.get();\n      final boolean b \u003d fs !\u003d null;\n      if (b) {\n        synchronized(fs) {\n          try {\n            fs.getRenewToken().renew(fs.getConf());\n          } catch (IOException ie) {\n            try {\n              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n            }\n          }\n        }\n      }\n      return b;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegationTokenRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenRenewer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegationTokenRenewer.java"
      }
    },
    "32cad9affe159ff7c6e4c7e31f57174967ef210a": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 1:37 PM",
      "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 1:37 PM",
          "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "31/10/11 12:03 PM",
          "commitNameOld": "7cb77a3b1bf9e41384a1f74a60d34214199755d8",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    public boolean renew() throws IOException, InterruptedException {\n-      final HftpFileSystem fs \u003d weakFs.get();\n-      if (fs !\u003d null) {\n-        synchronized (fs) {\n+    private boolean renew() throws IOException, InterruptedException {\n+      final T fs \u003d weakFs.get();\n+      final boolean b \u003d fs !\u003d null;\n+      if (b) {\n+        synchronized(fs) {\n           try {\n-            fs.renewToken.renew(fs.getConf());\n+            fs.getRenewToken().renew(fs.getConf());\n           } catch (IOException ie) {\n             try {\n-              fs.setDelegationToken(fs.getDelegationToken(null));\n+              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n             } catch (IOException ie2) {\n-              throw new IOException(\"Can\u0027t renew or get new delegation \"\n-                  + \"token \", ie);\n+              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n             }\n           }\n         }\n       }\n-      return fs !\u003d null;\n+      return b;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean renew() throws IOException, InterruptedException {\n      final T fs \u003d weakFs.get();\n      final boolean b \u003d fs !\u003d null;\n      if (b) {\n        synchronized(fs) {\n          try {\n            fs.getRenewToken().renew(fs.getConf());\n          } catch (IOException ie) {\n            try {\n              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n            }\n          }\n        }\n      }\n      return b;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenRenewer.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenRenewer.java",
            "oldMethodName": "renew",
            "newMethodName": "renew"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 1:37 PM",
          "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "31/10/11 12:03 PM",
          "commitNameOld": "7cb77a3b1bf9e41384a1f74a60d34214199755d8",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    public boolean renew() throws IOException, InterruptedException {\n-      final HftpFileSystem fs \u003d weakFs.get();\n-      if (fs !\u003d null) {\n-        synchronized (fs) {\n+    private boolean renew() throws IOException, InterruptedException {\n+      final T fs \u003d weakFs.get();\n+      final boolean b \u003d fs !\u003d null;\n+      if (b) {\n+        synchronized(fs) {\n           try {\n-            fs.renewToken.renew(fs.getConf());\n+            fs.getRenewToken().renew(fs.getConf());\n           } catch (IOException ie) {\n             try {\n-              fs.setDelegationToken(fs.getDelegationToken(null));\n+              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n             } catch (IOException ie2) {\n-              throw new IOException(\"Can\u0027t renew or get new delegation \"\n-                  + \"token \", ie);\n+              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n             }\n           }\n         }\n       }\n-      return fs !\u003d null;\n+      return b;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean renew() throws IOException, InterruptedException {\n      final T fs \u003d weakFs.get();\n      final boolean b \u003d fs !\u003d null;\n      if (b) {\n        synchronized(fs) {\n          try {\n            fs.getRenewToken().renew(fs.getConf());\n          } catch (IOException ie) {\n            try {\n              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n            }\n          }\n        }\n      }\n      return b;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenRenewer.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 1:37 PM",
          "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "31/10/11 12:03 PM",
          "commitNameOld": "7cb77a3b1bf9e41384a1f74a60d34214199755d8",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    public boolean renew() throws IOException, InterruptedException {\n-      final HftpFileSystem fs \u003d weakFs.get();\n-      if (fs !\u003d null) {\n-        synchronized (fs) {\n+    private boolean renew() throws IOException, InterruptedException {\n+      final T fs \u003d weakFs.get();\n+      final boolean b \u003d fs !\u003d null;\n+      if (b) {\n+        synchronized(fs) {\n           try {\n-            fs.renewToken.renew(fs.getConf());\n+            fs.getRenewToken().renew(fs.getConf());\n           } catch (IOException ie) {\n             try {\n-              fs.setDelegationToken(fs.getDelegationToken(null));\n+              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n             } catch (IOException ie2) {\n-              throw new IOException(\"Can\u0027t renew or get new delegation \"\n-                  + \"token \", ie);\n+              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n             }\n           }\n         }\n       }\n-      return fs !\u003d null;\n+      return b;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean renew() throws IOException, InterruptedException {\n      final T fs \u003d weakFs.get();\n      final boolean b \u003d fs !\u003d null;\n      if (b) {\n        synchronized(fs) {\n          try {\n            fs.getRenewToken().renew(fs.getConf());\n          } catch (IOException ie) {\n            try {\n              fs.setDelegationToken(fs.getDelegationTokens(null).get(0));\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation token \", ie);\n            }\n          }\n        }\n      }\n      return b;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenRenewer.java",
          "extendedDetails": {}
        }
      ]
    },
    "002dd6968b89ded6a77858ccb50c9b2df074c226": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2764. Fix renewal of dfs delegation tokens. Contributed by Owen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/10/11 6:24 PM",
      "commitName": "002dd6968b89ded6a77858ccb50c9b2df074c226",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "10/09/11 6:41 PM",
      "commitNameOld": "61d0b7530c8978c095ab6f62d9d38e168bd829c6",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 32.99,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,18 @@\n     public boolean renew() throws IOException, InterruptedException {\n       final HftpFileSystem fs \u003d weakFs.get();\n       if (fs !\u003d null) {\n         synchronized (fs) {\n-          fs.ugi.reloginFromKeytab();\n-          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n-\n-            @Override\n-            public Void run() throws Exception {\n-              try {\n-                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n-                    fs.delegationToken);\n-              } catch (IOException ie) {\n-                try {\n-                  fs.delegationToken \u003d \n-                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n-                } catch (IOException ie2) {\n-                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n-                      ie);\n-                }\n-              }\n-              return null;\n-            } \n-          });\n+          try {\n+            fs.renewToken.renew(fs.getConf());\n+          } catch (IOException ie) {\n+            try {\n+              fs.setDelegationToken(fs.getDelegationToken(null));\n+            } catch (IOException ie2) {\n+              throw new IOException(\"Can\u0027t renew or get new delegation \"\n+                  + \"token \", ie);\n+            }\n+          }\n         }\n       }\n       return fs !\u003d null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          try {\n            fs.renewToken.renew(fs.getConf());\n          } catch (IOException ie) {\n            try {\n              fs.setDelegationToken(fs.getDelegationToken(null));\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation \"\n                  + \"token \", ie);\n            }\n          }\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          fs.ugi.reloginFromKeytab();\n          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n\n            @Override\n            public Void run() throws Exception {\n              try {\n                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n                    fs.delegationToken);\n              } catch (IOException ie) {\n                try {\n                  fs.delegationToken \u003d \n                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n                } catch (IOException ie2) {\n                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n                      ie);\n                }\n              }\n              return null;\n            } \n          });\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          fs.ugi.reloginFromKeytab();\n          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n\n            @Override\n            public Void run() throws Exception {\n              try {\n                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n                    fs.delegationToken);\n              } catch (IOException ie) {\n                try {\n                  fs.delegationToken \u003d \n                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n                } catch (IOException ie2) {\n                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n                      ie);\n                }\n              }\n              return null;\n            } \n          });\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+    public boolean renew() throws IOException, InterruptedException {\n+      final HftpFileSystem fs \u003d weakFs.get();\n+      if (fs !\u003d null) {\n+        synchronized (fs) {\n+          fs.ugi.reloginFromKeytab();\n+          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n+\n+            @Override\n+            public Void run() throws Exception {\n+              try {\n+                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n+                    fs.delegationToken);\n+              } catch (IOException ie) {\n+                try {\n+                  fs.delegationToken \u003d \n+                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n+                } catch (IOException ie2) {\n+                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n+                      ie);\n+                }\n+              }\n+              return null;\n+            } \n+          });\n+        }\n+      }\n+      return fs !\u003d null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          fs.ugi.reloginFromKeytab();\n          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n\n            @Override\n            public Void run() throws Exception {\n              try {\n                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n                    fs.delegationToken);\n              } catch (IOException ie) {\n                try {\n                  fs.delegationToken \u003d \n                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n                } catch (IOException ie2) {\n                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n                      ie);\n                }\n              }\n              return null;\n            } \n          });\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/HftpFileSystem.java"
    }
  }
}