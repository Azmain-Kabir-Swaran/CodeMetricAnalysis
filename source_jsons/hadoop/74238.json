{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LdapGroupsMapping.java",
  "functionName": "getDefault",
  "functionId": "getDefault",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
  "functionStartLine": 978,
  "functionEndLine": 993,
  "numCommitsSeen": 29,
  "timeTaken": 655,
  "changeHistory": [
    "62efb6300619670d3e0554c3ba14c264fa0c705b"
  ],
  "changeHistoryShort": {
    "62efb6300619670d3e0554c3ba14c264fa0c705b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "62efb6300619670d3e0554c3ba14c264fa0c705b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16245. Restrict the effect of LdapGroupsMapping SSL configurations to avoid interfering with other SSL connections. Contributed by Erik Krogen.\n",
      "commitDate": "26/07/19 11:16 AM",
      "commitName": "62efb6300619670d3e0554c3ba14c264fa0c705b",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,16 @@\n+    public static synchronized SocketFactory getDefault() {\n+      if (defaultSslFactory \u003d\u003d null) {\n+        try {\n+          SSLContext context \u003d SSLContext.getInstance(\"TLS\");\n+          context.init(createKeyManagers(), createTrustManagers(), null);\n+          defaultSslFactory \u003d\n+              new LdapSslSocketFactory(context.getSocketFactory());\n+          LOG.info(\"Successfully instantiated LdapSslSocketFactory with \"\n+                  + \"keyStoreLocation \u003d {} and trustStoreLocation \u003d {}\",\n+              keyStoreLocation, trustStoreLocation);\n+        } catch (IOException | GeneralSecurityException e) {\n+          throw new RuntimeException(\"Unable to create SSLSocketFactory\", e);\n+        }\n+      }\n+      return defaultSslFactory;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static synchronized SocketFactory getDefault() {\n      if (defaultSslFactory \u003d\u003d null) {\n        try {\n          SSLContext context \u003d SSLContext.getInstance(\"TLS\");\n          context.init(createKeyManagers(), createTrustManagers(), null);\n          defaultSslFactory \u003d\n              new LdapSslSocketFactory(context.getSocketFactory());\n          LOG.info(\"Successfully instantiated LdapSslSocketFactory with \"\n                  + \"keyStoreLocation \u003d {} and trustStoreLocation \u003d {}\",\n              keyStoreLocation, trustStoreLocation);\n        } catch (IOException | GeneralSecurityException e) {\n          throw new RuntimeException(\"Unable to create SSLSocketFactory\", e);\n        }\n      }\n      return defaultSslFactory;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java"
    }
  }
}