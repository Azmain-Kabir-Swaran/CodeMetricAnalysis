{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobHistoryServer.java",
  "functionName": "launchJobHistoryServer",
  "functionId": "launchJobHistoryServer___args-String[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
  "functionStartLine": 211,
  "functionEndLine": 230,
  "numCommitsSeen": 33,
  "timeTaken": 1342,
  "changeHistory": [
    "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
    "8ca0d957c4b1076e801e1cdce5b44aa805de889c",
    "c5c90ff8f58805880f27be66d28a811fe22a6152"
  ],
  "changeHistoryShort": {
    "ffee10b68ef1f2d75c9d0df9140c2a605f826724": "Ybodychange",
    "8ca0d957c4b1076e801e1cdce5b44aa805de889c": "Ybodychange",
    "c5c90ff8f58805880f27be66d28a811fe22a6152": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ffee10b68ef1f2d75c9d0df9140c2a605f826724": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6997. Moving logging APIs over to slf4j in hadoop-mapreduce-client-hs. Contributed by Gergely Nov√°k.\n",
      "commitDate": "08/11/17 2:21 AM",
      "commitName": "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "19/04/17 11:44 AM",
      "commitNameOld": "dd43b895c2e50fa97cb7327be77509b87dad1823",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 202.65,
      "commitsBetweenForRepo": 1467,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   static JobHistoryServer launchJobHistoryServer(String[] args) {\n     Thread.\n         setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(JobHistoryServer.class, args, LOG);\n     JobHistoryServer jobHistoryServer \u003d null;\n     try {\n       jobHistoryServer \u003d new JobHistoryServer();\n       ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(jobHistoryServer),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration(new JobConf());\n       new GenericOptionsParser(conf, args);\n       jobHistoryServer.init(conf);\n       jobHistoryServer.start();\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting JobHistoryServer\", t);\n+      LOG.error(\"Error starting JobHistoryServer\", t);\n       ExitUtil.terminate(-1, \"Error starting JobHistoryServer\");\n     }\n     return jobHistoryServer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static JobHistoryServer launchJobHistoryServer(String[] args) {\n    Thread.\n        setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(JobHistoryServer.class, args, LOG);\n    JobHistoryServer jobHistoryServer \u003d null;\n    try {\n      jobHistoryServer \u003d new JobHistoryServer();\n      ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(jobHistoryServer),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration(new JobConf());\n      new GenericOptionsParser(conf, args);\n      jobHistoryServer.init(conf);\n      jobHistoryServer.start();\n    } catch (Throwable t) {\n      LOG.error(\"Error starting JobHistoryServer\", t);\n      ExitUtil.terminate(-1, \"Error starting JobHistoryServer\");\n    }\n    return jobHistoryServer;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "8ca0d957c4b1076e801e1cdce5b44aa805de889c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3255. RM, NM, JobHistoryServer, and WebAppProxyServer\u0027s main() should support generic options. Contributed by Konstantin Shvachko.",
      "commitDate": "26/02/15 5:12 PM",
      "commitName": "8ca0d957c4b1076e801e1cdce5b44aa805de889c",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "18/02/14 1:50 PM",
      "commitNameOld": "6b03174aaeea205daccc47e66128b87794988962",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 373.14,
      "commitsBetweenForRepo": 3013,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   static JobHistoryServer launchJobHistoryServer(String[] args) {\n     Thread.\n         setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(JobHistoryServer.class, args, LOG);\n     JobHistoryServer jobHistoryServer \u003d null;\n     try {\n       jobHistoryServer \u003d new JobHistoryServer();\n       ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(jobHistoryServer),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration(new JobConf());\n+      new GenericOptionsParser(conf, args);\n       jobHistoryServer.init(conf);\n       jobHistoryServer.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting JobHistoryServer\", t);\n       ExitUtil.terminate(-1, \"Error starting JobHistoryServer\");\n     }\n     return jobHistoryServer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static JobHistoryServer launchJobHistoryServer(String[] args) {\n    Thread.\n        setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(JobHistoryServer.class, args, LOG);\n    JobHistoryServer jobHistoryServer \u003d null;\n    try {\n      jobHistoryServer \u003d new JobHistoryServer();\n      ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(jobHistoryServer),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration(new JobConf());\n      new GenericOptionsParser(conf, args);\n      jobHistoryServer.init(conf);\n      jobHistoryServer.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting JobHistoryServer\", t);\n      ExitUtil.terminate(-1, \"Error starting JobHistoryServer\");\n    }\n    return jobHistoryServer;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "c5c90ff8f58805880f27be66d28a811fe22a6152": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5425. Junit in TestJobHistoryServer failing in jdk 7. Contributed by Robert Parker\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1511464 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/13 1:02 PM",
      "commitName": "c5c90ff8f58805880f27be66d28a811fe22a6152",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,19 @@\n+  static JobHistoryServer launchJobHistoryServer(String[] args) {\n+    Thread.\n+        setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n+    StringUtils.startupShutdownMessage(JobHistoryServer.class, args, LOG);\n+    JobHistoryServer jobHistoryServer \u003d null;\n+    try {\n+      jobHistoryServer \u003d new JobHistoryServer();\n+      ShutdownHookManager.get().addShutdownHook(\n+          new CompositeServiceShutdownHook(jobHistoryServer),\n+          SHUTDOWN_HOOK_PRIORITY);\n+      YarnConfiguration conf \u003d new YarnConfiguration(new JobConf());\n+      jobHistoryServer.init(conf);\n+      jobHistoryServer.start();\n+    } catch (Throwable t) {\n+      LOG.fatal(\"Error starting JobHistoryServer\", t);\n+      ExitUtil.terminate(-1, \"Error starting JobHistoryServer\");\n+    }\n+    return jobHistoryServer;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static JobHistoryServer launchJobHistoryServer(String[] args) {\n    Thread.\n        setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(JobHistoryServer.class, args, LOG);\n    JobHistoryServer jobHistoryServer \u003d null;\n    try {\n      jobHistoryServer \u003d new JobHistoryServer();\n      ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(jobHistoryServer),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration(new JobConf());\n      jobHistoryServer.init(conf);\n      jobHistoryServer.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting JobHistoryServer\", t);\n      ExitUtil.terminate(-1, \"Error starting JobHistoryServer\");\n    }\n    return jobHistoryServer;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java"
    }
  }
}