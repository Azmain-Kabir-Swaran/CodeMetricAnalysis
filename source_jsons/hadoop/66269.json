{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RumenToSLSConverter.java",
  "functionName": "generateSLSLoadFile",
  "functionId": "generateSLSLoadFile___inputFile-String__outputFile-String",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java",
  "functionStartLine": 121,
  "functionEndLine": 137,
  "numCommitsSeen": 6,
  "timeTaken": 1112,
  "changeHistory": [
    "2cc841f16ec9aa5336495fc20ee781a1276fddc5",
    "f384a063a653b33d69f7d2c7d4fd45c24b5aa46a",
    "b8f250a99dd746599c5d9830fa1d52149ca418b0",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "2cc841f16ec9aa5336495fc20ee781a1276fddc5": "Ybodychange",
    "f384a063a653b33d69f7d2c7d4fd45c24b5aa46a": "Ybodychange",
    "b8f250a99dd746599c5d9830fa1d52149ca418b0": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2cc841f16ec9aa5336495fc20ee781a1276fddc5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13678 Update jackson from 1.9.13 to 2.x in hadoop-tools. Contributed by Akira Ajisaka.\n",
      "commitDate": "06/10/16 8:31 AM",
      "commitName": "2cc841f16ec9aa5336495fc20ee781a1276fddc5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "03/09/15 6:48 AM",
      "commitNameOld": "355eaaa33d01f06e9efe960b8888fb925e03ffb9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 399.07,
      "commitsBetweenForRepo": 2769,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private static void generateSLSLoadFile(String inputFile, String outputFile)\n           throws IOException {\n     try (Reader input \u003d\n         new InputStreamReader(new FileInputStream(inputFile), \"UTF-8\")) {\n       try (Writer output \u003d\n           new OutputStreamWriter(new FileOutputStream(outputFile), \"UTF-8\")) {\n         ObjectMapper mapper \u003d new ObjectMapper();\n         ObjectWriter writer \u003d mapper.writerWithDefaultPrettyPrinter();\n         Iterator\u003cMap\u003e i \u003d mapper.readValues(\n-                new JsonFactory().createJsonParser(input), Map.class);\n+            new JsonFactory().createParser(input), Map.class);\n         while (i.hasNext()) {\n           Map m \u003d i.next();\n           output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void generateSLSLoadFile(String inputFile, String outputFile)\n          throws IOException {\n    try (Reader input \u003d\n        new InputStreamReader(new FileInputStream(inputFile), \"UTF-8\")) {\n      try (Writer output \u003d\n          new OutputStreamWriter(new FileOutputStream(outputFile), \"UTF-8\")) {\n        ObjectMapper mapper \u003d new ObjectMapper();\n        ObjectWriter writer \u003d mapper.writerWithDefaultPrettyPrinter();\n        Iterator\u003cMap\u003e i \u003d mapper.readValues(\n            new JsonFactory().createParser(input), Map.class);\n        while (i.hasNext()) {\n          Map m \u003d i.next();\n          output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n        }\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java",
      "extendedDetails": {}
    },
    "f384a063a653b33d69f7d2c7d4fd45c24b5aa46a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11821. Fix findbugs warnings in hadoop-sls. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "30/04/15 3:34 AM",
      "commitName": "f384a063a653b33d69f7d2c7d4fd45c24b5aa46a",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "25/07/14 10:12 AM",
      "commitNameOld": "77363b9d839e47bef2325b8682eabe00d4c83354",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 278.72,
      "commitsBetweenForRepo": 2401,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,17 @@\n   private static void generateSLSLoadFile(String inputFile, String outputFile)\n           throws IOException {\n-    Reader input \u003d new FileReader(inputFile);\n-    try {\n-      Writer output \u003d new FileWriter(outputFile);\n-      try {\n+    try (Reader input \u003d\n+        new InputStreamReader(new FileInputStream(inputFile), \"UTF-8\")) {\n+      try (Writer output \u003d\n+          new OutputStreamWriter(new FileOutputStream(outputFile), \"UTF-8\")) {\n         ObjectMapper mapper \u003d new ObjectMapper();\n         ObjectWriter writer \u003d mapper.writerWithDefaultPrettyPrinter();\n         Iterator\u003cMap\u003e i \u003d mapper.readValues(\n                 new JsonFactory().createJsonParser(input), Map.class);\n         while (i.hasNext()) {\n           Map m \u003d i.next();\n           output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n         }\n-      } finally {\n-        output.close();\n       }\n-    } finally {\n-      input.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void generateSLSLoadFile(String inputFile, String outputFile)\n          throws IOException {\n    try (Reader input \u003d\n        new InputStreamReader(new FileInputStream(inputFile), \"UTF-8\")) {\n      try (Writer output \u003d\n          new OutputStreamWriter(new FileOutputStream(outputFile), \"UTF-8\")) {\n        ObjectMapper mapper \u003d new ObjectMapper();\n        ObjectWriter writer \u003d mapper.writerWithDefaultPrettyPrinter();\n        Iterator\u003cMap\u003e i \u003d mapper.readValues(\n                new JsonFactory().createJsonParser(input), Map.class);\n        while (i.hasNext()) {\n          Map m \u003d i.next();\n          output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n        }\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java",
      "extendedDetails": {}
    },
    "b8f250a99dd746599c5d9830fa1d52149ca418b0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10104. Update jackson to 1.9.13 (Akira Ajisaka via stevel)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1585932 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/14 4:11 AM",
      "commitName": "b8f250a99dd746599c5d9830fa1d52149ca418b0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/09/13 1:23 PM",
      "commitNameOld": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 193.62,
      "commitsBetweenForRepo": 1355,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private static void generateSLSLoadFile(String inputFile, String outputFile)\n           throws IOException {\n     Reader input \u003d new FileReader(inputFile);\n     try {\n       Writer output \u003d new FileWriter(outputFile);\n       try {\n         ObjectMapper mapper \u003d new ObjectMapper();\n-        ObjectWriter writer \u003d mapper.defaultPrettyPrintingWriter();\n+        ObjectWriter writer \u003d mapper.writerWithDefaultPrettyPrinter();\n         Iterator\u003cMap\u003e i \u003d mapper.readValues(\n                 new JsonFactory().createJsonParser(input), Map.class);\n         while (i.hasNext()) {\n           Map m \u003d i.next();\n           output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n         }\n       } finally {\n         output.close();\n       }\n     } finally {\n       input.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void generateSLSLoadFile(String inputFile, String outputFile)\n          throws IOException {\n    Reader input \u003d new FileReader(inputFile);\n    try {\n      Writer output \u003d new FileWriter(outputFile);\n      try {\n        ObjectMapper mapper \u003d new ObjectMapper();\n        ObjectWriter writer \u003d mapper.writerWithDefaultPrettyPrinter();\n        Iterator\u003cMap\u003e i \u003d mapper.readValues(\n                new JsonFactory().createJsonParser(input), Map.class);\n        while (i.hasNext()) {\n          Map m \u003d i.next();\n          output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n        }\n      } finally {\n        output.close();\n      }\n    } finally {\n      input.close();\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,21 @@\n+  private static void generateSLSLoadFile(String inputFile, String outputFile)\n+          throws IOException {\n+    Reader input \u003d new FileReader(inputFile);\n+    try {\n+      Writer output \u003d new FileWriter(outputFile);\n+      try {\n+        ObjectMapper mapper \u003d new ObjectMapper();\n+        ObjectWriter writer \u003d mapper.defaultPrettyPrintingWriter();\n+        Iterator\u003cMap\u003e i \u003d mapper.readValues(\n+                new JsonFactory().createJsonParser(input), Map.class);\n+        while (i.hasNext()) {\n+          Map m \u003d i.next();\n+          output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n+        }\n+      } finally {\n+        output.close();\n+      }\n+    } finally {\n+      input.close();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void generateSLSLoadFile(String inputFile, String outputFile)\n          throws IOException {\n    Reader input \u003d new FileReader(inputFile);\n    try {\n      Writer output \u003d new FileWriter(outputFile);\n      try {\n        ObjectMapper mapper \u003d new ObjectMapper();\n        ObjectWriter writer \u003d mapper.defaultPrettyPrintingWriter();\n        Iterator\u003cMap\u003e i \u003d mapper.readValues(\n                new JsonFactory().createJsonParser(input), Map.class);\n        while (i.hasNext()) {\n          Map m \u003d i.next();\n          output.write(writer.writeValueAsString(createSLSJob(m)) + EOL);\n        }\n      } finally {\n        output.close();\n      }\n    } finally {\n      input.close();\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java"
    }
  }
}