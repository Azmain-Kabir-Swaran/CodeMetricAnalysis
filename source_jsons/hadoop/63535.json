{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Resource.java",
  "functionName": "newInstance",
  "functionId": "newInstance___memory-long__vCores-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
  "functionStartLine": 83,
  "functionEndLine": 85,
  "numCommitsSeen": 50,
  "timeTaken": 5435,
  "changeHistory": [
    "dd07038ffae33a5e73eb331477d43eaf3f4c2aaa",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
    "a6989af1d91d8b6795862c39d154823f8488c8de",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "ca2808d8bbe49766029e5dba88ff863f6c993287",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
    "819224dcf9c683aa52f58633ac8e13663f1916d8",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "61885df2fa76c589df9751653f94d9b26948dc3e"
  ],
  "changeHistoryShort": {
    "dd07038ffae33a5e73eb331477d43eaf3f4c2aaa": "Ybodychange",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": "Ybodychange",
    "a6989af1d91d8b6795862c39d154823f8488c8de": "Ybodychange",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Ybodychange",
    "ca2808d8bbe49766029e5dba88ff863f6c993287": "Ybodychange",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": "Ybodychange",
    "819224dcf9c683aa52f58633ac8e13663f1916d8": "Ymultichange(Yparameterchange,Ybodychange)",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Yparameterchange",
    "61885df2fa76c589df9751653f94d9b26948dc3e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd07038ffae33a5e73eb331477d43eaf3f4c2aaa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6909. Use LightWeightedResource when number of resource types more than two. (Sunil G via wangda)\n\nChange-Id: I90e021c5dea7abd9ec6bd73b2287c8adebe14595\n",
      "commitDate": "09/11/17 2:51 PM",
      "commitName": "dd07038ffae33a5e73eb331477d43eaf3f4c2aaa",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "02/11/17 6:55 PM",
      "commitNameOld": "1700adc6f7e0ec9f855f554cd0d470a8f04e9c51",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 6.87,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,3 @@\n   public static Resource newInstance(long memory, int vCores) {\n-    if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n-      Resource ret \u003d Records.newRecord(Resource.class);\n-      ret.setMemorySize(memory);\n-      ret.setVirtualCores(vCores);\n-      return ret;\n-    }\n     return new LightWeightResource(memory, vCores);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    return new LightWeightResource(memory, vCores);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7136. Additional Performance Improvement for Resource Profile Feature\n(Contributed by Wangda Tan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "a6989af1d91d8b6795862c39d154823f8488c8de",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static Resource newInstance(long memory, int vCores) {\n     if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n       Resource ret \u003d Records.newRecord(Resource.class);\n       ret.setMemorySize(memory);\n       ret.setVirtualCores(vCores);\n       return ret;\n     }\n-    return new BaseResource(memory, vCores);\n+    return new LightWeightResource(memory, vCores);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n      Resource ret \u003d Records.newRecord(Resource.class);\n      ret.setMemorySize(memory);\n      ret.setVirtualCores(vCores);\n      return ret;\n    }\n    return new LightWeightResource(memory, vCores);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "a6989af1d91d8b6795862c39d154823f8488c8de": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7030. [YARN-3926] Performance optimizations in Resource and ResourceUtils class. Contributed by Wangda Tan.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "a6989af1d91d8b6795862c39d154823f8488c8de",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "2b51b262aba0191b80dc93799574c0b959cb4f4e",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static Resource newInstance(long memory, int vCores) {\n-    if (ResourceUtils.getResourceTypesArray().length \u003e 2) {\n+    if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n       Resource ret \u003d Records.newRecord(Resource.class);\n       ret.setMemorySize(memory);\n       ret.setVirtualCores(vCores);\n       return ret;\n     }\n     return new BaseResource(memory, vCores);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n      Resource ret \u003d Records.newRecord(Resource.class);\n      ret.setMemorySize(memory);\n      ret.setVirtualCores(vCores);\n      return ret;\n    }\n    return new BaseResource(memory, vCores);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ca2808d8bbe49766029e5dba88ff863f6c993287",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static Resource newInstance(long memory, int vCores) {\n-    if (tmpResource.getResources().size() \u003e 2) {\n+    if (ResourceUtils.getResourceTypesArray().length \u003e 2) {\n       Resource ret \u003d Records.newRecord(Resource.class);\n       ret.setMemorySize(memory);\n       ret.setVirtualCores(vCores);\n       return ret;\n     }\n-    return new SimpleResource(memory, vCores);\n+    return new BaseResource(memory, vCores);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    if (ResourceUtils.getResourceTypesArray().length \u003e 2) {\n      Resource ret \u003d Records.newRecord(Resource.class);\n      ret.setMemorySize(memory);\n      ret.setVirtualCores(vCores);\n      return ret;\n    }\n    return new BaseResource(memory, vCores);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "ca2808d8bbe49766029e5dba88ff863f6c993287": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6761. Fix build for YARN-3926 branch. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "ca2808d8bbe49766029e5dba88ff863f6c993287",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "58da54640e37571f82eb340f32641d58160e92b2",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,9 @@\n   public static Resource newInstance(long memory, int vCores) {\n+    if (tmpResource.getResources().size() \u003e 2) {\n+      Resource ret \u003d Records.newRecord(Resource.class);\n+      ret.setMemorySize(memory);\n+      ret.setVirtualCores(vCores);\n+      return ret;\n+    }\n     return new SimpleResource(memory, vCores);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    if (tmpResource.getResources().size() \u003e 2) {\n      Resource ret \u003d Records.newRecord(Resource.class);\n      ret.setMemorySize(memory);\n      ret.setVirtualCores(vCores);\n      return ret;\n    }\n    return new SimpleResource(memory, vCores);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6679. Reduce Resource instance overhead via non-PBImpl\n(Contributed by Daryn Sharp via Daniel Templeton)\n",
      "commitDate": "08/06/17 10:08 AM",
      "commitName": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "11/07/16 10:36 PM",
      "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 331.48,
      "commitsBetweenForRepo": 2039,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,3 @@\n   public static Resource newInstance(long memory, int vCores) {\n-    Resource resource \u003d Records.newRecord(Resource.class);\n-    resource.setMemorySize(memory);\n-    resource.setVirtualCores(vCores);\n-    return resource;\n+    return new SimpleResource(memory, vCores);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    return new SimpleResource(memory, vCores);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {}
    },
    "819224dcf9c683aa52f58633ac8e13663f1916d8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5270. Solve miscellaneous issues caused by YARN-4844. Contributed by Wangda Tan\n",
      "commitDate": "11/07/16 10:36 PM",
      "commitName": "819224dcf9c683aa52f58633ac8e13663f1916d8",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5270. Solve miscellaneous issues caused by YARN-4844. Contributed by Wangda Tan\n",
          "commitDate": "11/07/16 10:36 PM",
          "commitName": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/05/16 8:54 AM",
          "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 43.57,
          "commitsBetweenForRepo": 400,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public static Resource newInstance(long memory, long vCores) {\n+  public static Resource newInstance(long memory, int vCores) {\n     Resource resource \u003d Records.newRecord(Resource.class);\n-    resource.setMemory(memory);\n+    resource.setMemorySize(memory);\n     resource.setVirtualCores(vCores);\n     return resource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    Resource resource \u003d Records.newRecord(Resource.class);\n    resource.setMemorySize(memory);\n    resource.setVirtualCores(vCores);\n    return resource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
          "extendedDetails": {
            "oldValue": "[memory-long, vCores-long]",
            "newValue": "[memory-long, vCores-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5270. Solve miscellaneous issues caused by YARN-4844. Contributed by Wangda Tan\n",
          "commitDate": "11/07/16 10:36 PM",
          "commitName": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/05/16 8:54 AM",
          "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 43.57,
          "commitsBetweenForRepo": 400,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public static Resource newInstance(long memory, long vCores) {\n+  public static Resource newInstance(long memory, int vCores) {\n     Resource resource \u003d Records.newRecord(Resource.class);\n-    resource.setMemory(memory);\n+    resource.setMemorySize(memory);\n     resource.setVirtualCores(vCores);\n     return resource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Resource newInstance(long memory, int vCores) {\n    Resource resource \u003d Records.newRecord(Resource.class);\n    resource.setMemorySize(memory);\n    resource.setVirtualCores(vCores);\n    return resource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
          "extendedDetails": {}
        }
      ]
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "08/10/13 10:56 PM",
      "commitNameOld": "00388655e569b785985024ccfbcad162a6b3ab5a",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 963.42,
      "commitsBetweenForRepo": 7314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-  public static Resource newInstance(int memory, int vCores) {\n+  public static Resource newInstance(long memory, long vCores) {\n     Resource resource \u003d Records.newRecord(Resource.class);\n     resource.setMemory(memory);\n     resource.setVirtualCores(vCores);\n     return resource;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(long memory, long vCores) {\n    Resource resource \u003d Records.newRecord(Resource.class);\n    resource.setMemory(memory);\n    resource.setVirtualCores(vCores);\n    return resource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java",
      "extendedDetails": {
        "oldValue": "[memory-int, vCores-int]",
        "newValue": "[memory-long, vCores-long]"
      }
    },
    "61885df2fa76c589df9751653f94d9b26948dc3e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-711. Copied BuilderUtil methods in individual API records as BuilderUtils is going to be dismantled. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 3:47 PM",
      "commitName": "61885df2fa76c589df9751653f94d9b26948dc3e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,6 @@\n+  public static Resource newInstance(int memory, int vCores) {\n+    Resource resource \u003d Records.newRecord(Resource.class);\n+    resource.setMemory(memory);\n+    resource.setVirtualCores(vCores);\n+    return resource;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource newInstance(int memory, int vCores) {\n    Resource resource \u003d Records.newRecord(Resource.class);\n    resource.setMemory(memory);\n    resource.setVirtualCores(vCores);\n    return resource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/Resource.java"
    }
  }
}