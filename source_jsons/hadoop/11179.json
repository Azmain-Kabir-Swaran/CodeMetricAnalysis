{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebHdfsHandler.java",
  "functionName": "handle",
  "functionId": "handle___ctx-ChannelHandlerContext__req-HttpRequest",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
  "functionStartLine": 160,
  "functionEndLine": 182,
  "numCommitsSeen": 19,
  "timeTaken": 2150,
  "changeHistory": [
    "88da9f6b6782423acd8ab7eb7d938720de7f3c0f",
    "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6",
    "ada233b7cd7db39e609bb57e487fee8cec59cd48",
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4"
  ],
  "changeHistoryShort": {
    "88da9f6b6782423acd8ab7eb7d938720de7f3c0f": "Ybodychange",
    "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6": "Ybodychange",
    "ada233b7cd7db39e609bb57e487fee8cec59cd48": "Ybodychange",
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "88da9f6b6782423acd8ab7eb7d938720de7f3c0f": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-8377. Support HTTP/2 in datanode. Contributed by Duo Zhang.\"\n\nThis reverts commit ada233b7cd7db39e609bb57e487fee8cec59cd48.\n",
      "commitDate": "26/01/17 1:42 PM",
      "commitName": "88da9f6b6782423acd8ab7eb7d938720de7f3c0f",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "06/09/16 11:02 AM",
      "commitNameOld": "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 142.15,
      "commitsBetweenForRepo": 942,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void handle(ChannelHandlerContext ctx, HttpRequest req)\n     throws IOException, URISyntaxException {\n     String op \u003d params.op();\n-    HttpMethod method \u003d req.method();\n+    HttpMethod method \u003d req.getMethod();\n     if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d PUT) {\n       onCreate(ctx);\n     } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d POST) {\n       onAppend(ctx);\n     } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d GET) {\n       onOpen(ctx);\n     } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d GET) {\n       onGetFileChecksum(ctx);\n     } else if(PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n         \u0026\u0026 method \u003d\u003d OPTIONS) {\n       allowCORSOnCreate(ctx);\n     } else {\n       throw new IllegalArgumentException(\"Invalid operation \" + op);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ChannelHandlerContext ctx, HttpRequest req)\n    throws IOException, URISyntaxException {\n    String op \u003d params.op();\n    HttpMethod method \u003d req.getMethod();\n    if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d PUT) {\n      onCreate(ctx);\n    } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d POST) {\n      onAppend(ctx);\n    } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onOpen(ctx);\n    } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onGetFileChecksum(ctx);\n    } else if(PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n        \u0026\u0026 method \u003d\u003d OPTIONS) {\n      allowCORSOnCreate(ctx);\n    } else {\n      throw new IllegalArgumentException(\"Invalid operation \" + op);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
      "extendedDetails": {}
    },
    "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7766. Add a flag to WebHDFS op\u003dCREATE to not respond with a 307 redirect (Ravi Prakash via aw)\n",
      "commitDate": "23/05/16 3:52 PM",
      "commitName": "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "04/11/15 10:21 AM",
      "commitNameOld": "88beb46cf6e6fd3e51f73a411a2750de7595e326",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 201.19,
      "commitsBetweenForRepo": 1265,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   public void handle(ChannelHandlerContext ctx, HttpRequest req)\n     throws IOException, URISyntaxException {\n     String op \u003d params.op();\n     HttpMethod method \u003d req.method();\n     if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d PUT) {\n       onCreate(ctx);\n     } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d POST) {\n       onAppend(ctx);\n     } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d GET) {\n       onOpen(ctx);\n     } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d GET) {\n       onGetFileChecksum(ctx);\n+    } else if(PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n+        \u0026\u0026 method \u003d\u003d OPTIONS) {\n+      allowCORSOnCreate(ctx);\n     } else {\n       throw new IllegalArgumentException(\"Invalid operation \" + op);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ChannelHandlerContext ctx, HttpRequest req)\n    throws IOException, URISyntaxException {\n    String op \u003d params.op();\n    HttpMethod method \u003d req.method();\n    if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d PUT) {\n      onCreate(ctx);\n    } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d POST) {\n      onAppend(ctx);\n    } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onOpen(ctx);\n    } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onGetFileChecksum(ctx);\n    } else if(PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n        \u0026\u0026 method \u003d\u003d OPTIONS) {\n      allowCORSOnCreate(ctx);\n    } else {\n      throw new IllegalArgumentException(\"Invalid operation \" + op);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
      "extendedDetails": {}
    },
    "ada233b7cd7db39e609bb57e487fee8cec59cd48": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8377. Support HTTP/2 in datanode. Contributed by Duo Zhang.\n",
      "commitDate": "24/05/15 10:30 PM",
      "commitName": "ada233b7cd7db39e609bb57e487fee8cec59cd48",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "18/03/15 4:19 PM",
      "commitNameOld": "8c40e88d5de51a273f6ae5cd11c40f44248bbfcd",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 67.26,
      "commitsBetweenForRepo": 659,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public void handle(ChannelHandlerContext ctx, HttpRequest req)\n     throws IOException, URISyntaxException {\n     String op \u003d params.op();\n-    HttpMethod method \u003d req.getMethod();\n+    HttpMethod method \u003d req.method();\n     if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d PUT) {\n       onCreate(ctx);\n     } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d POST) {\n       onAppend(ctx);\n     } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d GET) {\n       onOpen(ctx);\n     } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n       \u0026\u0026 method \u003d\u003d GET) {\n       onGetFileChecksum(ctx);\n     } else {\n       throw new IllegalArgumentException(\"Invalid operation \" + op);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ChannelHandlerContext ctx, HttpRequest req)\n    throws IOException, URISyntaxException {\n    String op \u003d params.op();\n    HttpMethod method \u003d req.method();\n    if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d PUT) {\n      onCreate(ctx);\n    } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d POST) {\n      onAppend(ctx);\n    } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onOpen(ctx);\n    } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onGetFileChecksum(ctx);\n    } else {\n      throw new IllegalArgumentException(\"Invalid operation \" + op);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
      "extendedDetails": {}
    },
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7279. Use netty to implement DatanodeWebHdfsMethods. Contributed by Haohui Mai.\n",
      "commitDate": "17/11/14 11:42 AM",
      "commitName": "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,20 @@\n+  public void handle(ChannelHandlerContext ctx, HttpRequest req)\n+    throws IOException, URISyntaxException {\n+    String op \u003d params.op();\n+    HttpMethod method \u003d req.getMethod();\n+    if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n+      \u0026\u0026 method \u003d\u003d PUT) {\n+      onCreate(ctx);\n+    } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n+      \u0026\u0026 method \u003d\u003d POST) {\n+      onAppend(ctx);\n+    } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n+      \u0026\u0026 method \u003d\u003d GET) {\n+      onOpen(ctx);\n+    } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n+      \u0026\u0026 method \u003d\u003d GET) {\n+      onGetFileChecksum(ctx);\n+    } else {\n+      throw new IllegalArgumentException(\"Invalid operation \" + op);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ChannelHandlerContext ctx, HttpRequest req)\n    throws IOException, URISyntaxException {\n    String op \u003d params.op();\n    HttpMethod method \u003d req.getMethod();\n    if (PutOpParam.Op.CREATE.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d PUT) {\n      onCreate(ctx);\n    } else if (PostOpParam.Op.APPEND.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d POST) {\n      onAppend(ctx);\n    } else if (GetOpParam.Op.OPEN.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onOpen(ctx);\n    } else if(GetOpParam.Op.GETFILECHECKSUM.name().equalsIgnoreCase(op)\n      \u0026\u0026 method \u003d\u003d GET) {\n      onGetFileChecksum(ctx);\n    } else {\n      throw new IllegalArgumentException(\"Invalid operation \" + op);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java"
    }
  }
}