{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "rename",
  "functionId": "rename___src-Path__dst-Path",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 896,
  "functionEndLine": 923,
  "numCommitsSeen": 214,
  "timeTaken": 8486,
  "changeHistory": [
    "687233f20d24c29041929dd0a99d963cec54b6df",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "1c030c6e58dc83152f933323bb7743ad47f5af27",
    "f216f22915f9620c086e361e6eb759a75bed199a",
    "8767e4cde172b6e6070e3fd45325ede617b99343",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "687233f20d24c29041929dd0a99d963cec54b6df": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "1c030c6e58dc83152f933323bb7743ad47f5af27": "Yfilerename",
    "f216f22915f9620c086e361e6eb759a75bed199a": "Ybodychange",
    "8767e4cde172b6e6070e3fd45325ede617b99343": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "687233f20d24c29041929dd0a99d963cec54b6df": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13065. Add a new interface for retrieving FS and FC Statistics (Mingliang Liu via cmccabe)\n",
      "commitDate": "11/05/16 1:45 PM",
      "commitName": "687233f20d24c29041929dd0a99d963cec54b6df",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/05/16 7:30 PM",
      "commitNameOld": "45a753ccf79d334513c7bc8f2b81c89a4697075d",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.76,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public boolean rename(Path src, Path dst) throws IOException {\n     statistics.incrementWriteOps(1);\n+    storageStatistics.incrementOpCounter(OpType.RENAME);\n \n     final Path absSrc \u003d fixRelativePart(src);\n     final Path absDst \u003d fixRelativePart(dst);\n \n     // Try the rename without resolving first\n     try {\n       return dfs.rename(getPathName(absSrc), getPathName(absDst));\n     } catch (UnresolvedLinkException e) {\n       // Fully resolve the source\n       final Path source \u003d getFileLinkStatus(absSrc).getPath();\n       // Keep trying to resolve the destination\n       return new FileSystemLinkResolver\u003cBoolean\u003e() {\n         @Override\n         public Boolean doCall(final Path p) throws IOException {\n           return dfs.rename(getPathName(source), getPathName(p));\n         }\n         @Override\n         public Boolean next(final FileSystem fs, final Path p)\n             throws IOException {\n           // Should just throw an error in FileSystem#checkPath\n           return doCall(p);\n         }\n       }.resolve(this, absDst);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.RENAME);\n\n    final Path absSrc \u003d fixRelativePart(src);\n    final Path absDst \u003d fixRelativePart(dst);\n\n    // Try the rename without resolving first\n    try {\n      return dfs.rename(getPathName(absSrc), getPathName(absDst));\n    } catch (UnresolvedLinkException e) {\n      // Fully resolve the source\n      final Path source \u003d getFileLinkStatus(absSrc).getPath();\n      // Keep trying to resolve the destination\n      return new FileSystemLinkResolver\u003cBoolean\u003e() {\n        @Override\n        public Boolean doCall(final Path p) throws IOException {\n          return dfs.rename(getPathName(source), getPathName(p));\n        }\n        @Override\n        public Boolean next(final FileSystem fs, final Path p)\n            throws IOException {\n          // Should just throw an error in FileSystem#checkPath\n          return doCall(p);\n        }\n      }.resolve(this, absDst);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n   public boolean rename(Path src, Path dst) throws IOException {\n     statistics.incrementWriteOps(1);\n \n     final Path absSrc \u003d fixRelativePart(src);\n     final Path absDst \u003d fixRelativePart(dst);\n \n     // Try the rename without resolving first\n     try {\n       return dfs.rename(getPathName(absSrc), getPathName(absDst));\n     } catch (UnresolvedLinkException e) {\n       // Fully resolve the source\n       final Path source \u003d getFileLinkStatus(absSrc).getPath();\n       // Keep trying to resolve the destination\n       return new FileSystemLinkResolver\u003cBoolean\u003e() {\n         @Override\n-        public Boolean doCall(final Path p)\n-            throws IOException, UnresolvedLinkException {\n+        public Boolean doCall(final Path p) throws IOException {\n           return dfs.rename(getPathName(source), getPathName(p));\n         }\n         @Override\n         public Boolean next(final FileSystem fs, final Path p)\n             throws IOException {\n           // Should just throw an error in FileSystem#checkPath\n           return doCall(p);\n         }\n       }.resolve(this, absDst);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final Path absSrc \u003d fixRelativePart(src);\n    final Path absDst \u003d fixRelativePart(dst);\n\n    // Try the rename without resolving first\n    try {\n      return dfs.rename(getPathName(absSrc), getPathName(absDst));\n    } catch (UnresolvedLinkException e) {\n      // Fully resolve the source\n      final Path source \u003d getFileLinkStatus(absSrc).getPath();\n      // Keep trying to resolve the destination\n      return new FileSystemLinkResolver\u003cBoolean\u003e() {\n        @Override\n        public Boolean doCall(final Path p) throws IOException {\n          return dfs.rename(getPathName(source), getPathName(p));\n        }\n        @Override\n        public Boolean next(final FileSystem fs, final Path p)\n            throws IOException {\n          // Should just throw an error in FileSystem#checkPath\n          return doCall(p);\n        }\n      }.resolve(this, absDst);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "1c030c6e58dc83152f933323bb7743ad47f5af27": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8740. Move DistributedFileSystem to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "27/09/15 10:54 AM",
      "commitName": "1c030c6e58dc83152f933323bb7743ad47f5af27",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/09/15 1:42 AM",
      "commitNameOld": "f0f984e4e63d0dbafe93062a122ee051330db301",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final Path absSrc \u003d fixRelativePart(src);\n    final Path absDst \u003d fixRelativePart(dst);\n\n    // Try the rename without resolving first\n    try {\n      return dfs.rename(getPathName(absSrc), getPathName(absDst));\n    } catch (UnresolvedLinkException e) {\n      // Fully resolve the source\n      final Path source \u003d getFileLinkStatus(absSrc).getPath();\n      // Keep trying to resolve the destination\n      return new FileSystemLinkResolver\u003cBoolean\u003e() {\n        @Override\n        public Boolean doCall(final Path p)\n            throws IOException, UnresolvedLinkException {\n          return dfs.rename(getPathName(source), getPathName(p));\n        }\n        @Override\n        public Boolean next(final FileSystem fs, final Path p)\n            throws IOException {\n          // Should just throw an error in FileSystem#checkPath\n          return doCall(p);\n        }\n      }.resolve(this, absDst);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "f216f22915f9620c086e361e6eb759a75bed199a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9761.  ViewFileSystem#rename fails when using DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1509874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/13 2:42 PM",
      "commitName": "f216f22915f9620c086e361e6eb759a75bed199a",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "11/07/13 2:31 PM",
      "commitNameOld": "8767e4cde172b6e6070e3fd45325ede617b99343",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 22.01,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,28 @@\n   public boolean rename(Path src, Path dst) throws IOException {\n     statistics.incrementWriteOps(1);\n-    // Both Paths have to belong to this DFS\n+\n     final Path absSrc \u003d fixRelativePart(src);\n     final Path absDst \u003d fixRelativePart(dst);\n-    FileSystem srcFS \u003d getFSofPath(absSrc, getConf());\n-    FileSystem dstFS \u003d getFSofPath(absDst, getConf());\n-    if (!srcFS.getUri().equals(getUri()) ||\n-        !dstFS.getUri().equals(getUri())) {\n-      throw new IOException(\"Renames across FileSystems not supported\");\n-    }\n+\n     // Try the rename without resolving first\n     try {\n       return dfs.rename(getPathName(absSrc), getPathName(absDst));\n     } catch (UnresolvedLinkException e) {\n       // Fully resolve the source\n       final Path source \u003d getFileLinkStatus(absSrc).getPath();\n       // Keep trying to resolve the destination\n       return new FileSystemLinkResolver\u003cBoolean\u003e() {\n         @Override\n         public Boolean doCall(final Path p)\n             throws IOException, UnresolvedLinkException {\n           return dfs.rename(getPathName(source), getPathName(p));\n         }\n         @Override\n         public Boolean next(final FileSystem fs, final Path p)\n             throws IOException {\n-          return fs.rename(source, p);\n+          // Should just throw an error in FileSystem#checkPath\n+          return doCall(p);\n         }\n       }.resolve(this, absDst);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final Path absSrc \u003d fixRelativePart(src);\n    final Path absDst \u003d fixRelativePart(dst);\n\n    // Try the rename without resolving first\n    try {\n      return dfs.rename(getPathName(absSrc), getPathName(absDst));\n    } catch (UnresolvedLinkException e) {\n      // Fully resolve the source\n      final Path source \u003d getFileLinkStatus(absSrc).getPath();\n      // Keep trying to resolve the destination\n      return new FileSystemLinkResolver\u003cBoolean\u003e() {\n        @Override\n        public Boolean doCall(final Path p)\n            throws IOException, UnresolvedLinkException {\n          return dfs.rename(getPathName(source), getPathName(p));\n        }\n        @Override\n        public Boolean next(final FileSystem fs, final Path p)\n            throws IOException {\n          // Should just throw an error in FileSystem#checkPath\n          return doCall(p);\n        }\n      }.resolve(this, absDst);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "8767e4cde172b6e6070e3fd45325ede617b99343": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/13 2:31 PM",
      "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "13/06/13 11:11 AM",
      "commitNameOld": "7e1744ccf9a9b5b035afbb182aad123a1d1d357f",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 28.14,
      "commitsBetweenForRepo": 172,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,32 @@\n   public boolean rename(Path src, Path dst) throws IOException {\n     statistics.incrementWriteOps(1);\n-    return dfs.rename(getPathName(src), getPathName(dst));\n+    // Both Paths have to belong to this DFS\n+    final Path absSrc \u003d fixRelativePart(src);\n+    final Path absDst \u003d fixRelativePart(dst);\n+    FileSystem srcFS \u003d getFSofPath(absSrc, getConf());\n+    FileSystem dstFS \u003d getFSofPath(absDst, getConf());\n+    if (!srcFS.getUri().equals(getUri()) ||\n+        !dstFS.getUri().equals(getUri())) {\n+      throw new IOException(\"Renames across FileSystems not supported\");\n+    }\n+    // Try the rename without resolving first\n+    try {\n+      return dfs.rename(getPathName(absSrc), getPathName(absDst));\n+    } catch (UnresolvedLinkException e) {\n+      // Fully resolve the source\n+      final Path source \u003d getFileLinkStatus(absSrc).getPath();\n+      // Keep trying to resolve the destination\n+      return new FileSystemLinkResolver\u003cBoolean\u003e() {\n+        @Override\n+        public Boolean doCall(final Path p)\n+            throws IOException, UnresolvedLinkException {\n+          return dfs.rename(getPathName(source), getPathName(p));\n+        }\n+        @Override\n+        public Boolean next(final FileSystem fs, final Path p)\n+            throws IOException {\n+          return fs.rename(source, p);\n+        }\n+      }.resolve(this, absDst);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n    // Both Paths have to belong to this DFS\n    final Path absSrc \u003d fixRelativePart(src);\n    final Path absDst \u003d fixRelativePart(dst);\n    FileSystem srcFS \u003d getFSofPath(absSrc, getConf());\n    FileSystem dstFS \u003d getFSofPath(absDst, getConf());\n    if (!srcFS.getUri().equals(getUri()) ||\n        !dstFS.getUri().equals(getUri())) {\n      throw new IOException(\"Renames across FileSystems not supported\");\n    }\n    // Try the rename without resolving first\n    try {\n      return dfs.rename(getPathName(absSrc), getPathName(absDst));\n    } catch (UnresolvedLinkException e) {\n      // Fully resolve the source\n      final Path source \u003d getFileLinkStatus(absSrc).getPath();\n      // Keep trying to resolve the destination\n      return new FileSystemLinkResolver\u003cBoolean\u003e() {\n        @Override\n        public Boolean doCall(final Path p)\n            throws IOException, UnresolvedLinkException {\n          return dfs.rename(getPathName(source), getPathName(p));\n        }\n        @Override\n        public Boolean next(final FileSystem fs, final Path p)\n            throws IOException {\n          return fs.rename(source, p);\n        }\n      }.resolve(this, absDst);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n    return dfs.rename(getPathName(src), getPathName(dst));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n    return dfs.rename(getPathName(src), getPathName(dst));\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,4 @@\n+  public boolean rename(Path src, Path dst) throws IOException {\n+    statistics.incrementWriteOps(1);\n+    return dfs.rename(getPathName(src), getPathName(dst));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    statistics.incrementWriteOps(1);\n    return dfs.rename(getPathName(src), getPathName(dst));\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}