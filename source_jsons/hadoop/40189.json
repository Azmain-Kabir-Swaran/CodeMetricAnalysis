{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerConfigValidator.java",
  "functionName": "validateVCores",
  "functionId": "validateVCores___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfigValidator.java",
  "functionStartLine": 90,
  "functionEndLine": 107,
  "numCommitsSeen": 5,
  "timeTaken": 1038,
  "changeHistory": [
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960"
  ],
  "changeHistoryShort": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": {
      "type": "Yintroduced",
      "commitMessage": "YARN-10022. RM Rest API to validate the CapacityScheduler Configuration change\n\nContributed by Kinga Marton.\n",
      "commitDate": "28/01/20 9:46 AM",
      "commitName": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
      "commitAuthor": "Prabhu Joseph",
      "diff": "@@ -0,0 +1,18 @@\n+  public static void validateVCores(Configuration conf) {\n+    int minVcores \u003d conf.getInt(\n+            YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,\n+            YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES);\n+    int maxVcores \u003d conf.getInt(\n+            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n+            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES);\n+\n+    if (minVcores \u003c\u003d 0 || minVcores \u003e maxVcores) {\n+      throw new YarnRuntimeException(\"Invalid resource scheduler vcores\"\n+              + \" allocation configuration\"\n+              + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES\n+              + \"\u003d\" + minVcores\n+              + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES\n+              + \"\u003d\" + maxVcores + \", min and max should be greater than 0\"\n+              + \", max should be no smaller than min.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validateVCores(Configuration conf) {\n    int minVcores \u003d conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES);\n    int maxVcores \u003d conf.getInt(\n            YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n            YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES);\n\n    if (minVcores \u003c\u003d 0 || minVcores \u003e maxVcores) {\n      throw new YarnRuntimeException(\"Invalid resource scheduler vcores\"\n              + \" allocation configuration\"\n              + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES\n              + \"\u003d\" + minVcores\n              + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES\n              + \"\u003d\" + maxVcores + \", min and max should be greater than 0\"\n              + \", max should be no smaller than min.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfigValidator.java"
    }
  }
}