{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ByteArrayManager.java",
  "functionName": "leastPowerOfTwo",
  "functionId": "leastPowerOfTwo___n-int(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
  "functionStartLine": 62,
  "functionEndLine": 80,
  "numCommitsSeen": 8,
  "timeTaken": 1256,
  "changeHistory": [
    "3aac4758b007a56e3d66998d457b2156effca528",
    "36ccf097a95eae0761de7b657752e4808a86c094"
  ],
  "changeHistoryShort": {
    "3aac4758b007a56e3d66998d457b2156effca528": "Yfilerename",
    "36ccf097a95eae0761de7b657752e4808a86c094": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3aac4758b007a56e3d66998d457b2156effca528": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "19/08/15 11:28 AM",
      "commitName": "3aac4758b007a56e3d66998d457b2156effca528",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/08/15 10:36 AM",
      "commitNameOld": "f61120d964a609ae5eabeb5c4d6c9afe0a15cad8",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static int leastPowerOfTwo(final int n) {\n    if (n \u003c\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"n \u003d \" + n + \" \u003c\u003d 0\");\n    }\n\n    final int highestOne \u003d Integer.highestOneBit(n);\n    if (highestOne \u003d\u003d n) {\n      return n; // n is a power of two.\n    }\n    final int roundUp \u003d highestOne \u003c\u003c 1;\n    if (roundUp \u003c 0) {\n      final long overflow \u003d ((long) highestOne) \u003c\u003c 1;\n      throw new ArithmeticException(\n          \"Overflow: for n \u003d \" + n + \", the least power of two (the least\"\n          + \" integer x with x \u003e\u003d n and x a power of two) \u003d \"\n          + overflow + \" \u003e Integer.MAX_VALUE \u003d \" + Integer.MAX_VALUE);\n    }\n    return roundUp;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java"
      }
    },
    "36ccf097a95eae0761de7b657752e4808a86c094": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7276. Limit the number of byte arrays used by DFSOutputStream and provide a mechanism for recycling arrays.\n",
      "commitDate": "01/11/14 11:22 AM",
      "commitName": "36ccf097a95eae0761de7b657752e4808a86c094",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,19 @@\n+  public static int leastPowerOfTwo(final int n) {\n+    if (n \u003c\u003d 0) {\n+      throw new HadoopIllegalArgumentException(\"n \u003d \" + n + \" \u003c\u003d 0\");\n+    }\n+\n+    final int highestOne \u003d Integer.highestOneBit(n);\n+    if (highestOne \u003d\u003d n) {\n+      return n; // n is a power of two.\n+    }\n+    final int roundUp \u003d highestOne \u003c\u003c 1;\n+    if (roundUp \u003c 0) {\n+      final long overflow \u003d ((long) highestOne) \u003c\u003c 1;\n+      throw new ArithmeticException(\n+          \"Overflow: for n \u003d \" + n + \", the least power of two (the least\"\n+          + \" integer x with x \u003e\u003d n and x a power of two) \u003d \"\n+          + overflow + \" \u003e Integer.MAX_VALUE \u003d \" + Integer.MAX_VALUE);\n+    }\n+    return roundUp;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int leastPowerOfTwo(final int n) {\n    if (n \u003c\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"n \u003d \" + n + \" \u003c\u003d 0\");\n    }\n\n    final int highestOne \u003d Integer.highestOneBit(n);\n    if (highestOne \u003d\u003d n) {\n      return n; // n is a power of two.\n    }\n    final int roundUp \u003d highestOne \u003c\u003c 1;\n    if (roundUp \u003c 0) {\n      final long overflow \u003d ((long) highestOne) \u003c\u003c 1;\n      throw new ArithmeticException(\n          \"Overflow: for n \u003d \" + n + \", the least power of two (the least\"\n          + \" integer x with x \u003e\u003d n and x a power of two) \u003d \"\n          + overflow + \" \u003e Integer.MAX_VALUE \u003d \" + Integer.MAX_VALUE);\n    }\n    return roundUp;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java"
    }
  }
}