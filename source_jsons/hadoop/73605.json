{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CallQueueManager.java",
  "functionName": "parseCapacityWeights",
  "functionId": "parseCapacityWeights___priorityLevels-int__ns-String__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
  "functionStartLine": 354,
  "functionEndLine": 377,
  "numCommitsSeen": 17,
  "timeTaken": 790,
  "changeHistory": [
    "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a"
  ],
  "changeHistoryShort": {
    "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-17010. Add queue capacity support for FairCallQueue (#1977)\n\n",
      "commitDate": "28/04/20 4:14 PM",
      "commitName": "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a",
      "commitAuthor": "lfengnan",
      "diff": "@@ -0,0 +1,24 @@\n+  private static int[] parseCapacityWeights(\n+      int priorityLevels, String ns, Configuration conf) {\n+    int[] weights \u003d conf.getInts(ns + \".\" +\n+      CommonConfigurationKeys.IPC_CALLQUEUE_CAPACITY_WEIGHTS_KEY);\n+    if (weights.length \u003d\u003d 0) {\n+      weights \u003d getDefaultQueueCapacityWeights(priorityLevels);\n+    } else if (weights.length !\u003d priorityLevels) {\n+      throw new IllegalArgumentException(\n+          CommonConfigurationKeys.IPC_CALLQUEUE_CAPACITY_WEIGHTS_KEY + \" must \"\n+              + \"specify \" + priorityLevels + \" capacity weights: one for each \"\n+              + \"priority level\");\n+    } else {\n+      // only allow positive numbers\n+      for (int w : weights) {\n+        if (w \u003c\u003d 0) {\n+          throw new IllegalArgumentException(\n+              CommonConfigurationKeys.IPC_CALLQUEUE_CAPACITY_WEIGHTS_KEY +\n+                  \" only takes positive weights. \" + w + \" capacity weight \" +\n+                  \"found\");\n+        }\n+      }\n+    }\n+    return weights;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static int[] parseCapacityWeights(\n      int priorityLevels, String ns, Configuration conf) {\n    int[] weights \u003d conf.getInts(ns + \".\" +\n      CommonConfigurationKeys.IPC_CALLQUEUE_CAPACITY_WEIGHTS_KEY);\n    if (weights.length \u003d\u003d 0) {\n      weights \u003d getDefaultQueueCapacityWeights(priorityLevels);\n    } else if (weights.length !\u003d priorityLevels) {\n      throw new IllegalArgumentException(\n          CommonConfigurationKeys.IPC_CALLQUEUE_CAPACITY_WEIGHTS_KEY + \" must \"\n              + \"specify \" + priorityLevels + \" capacity weights: one for each \"\n              + \"priority level\");\n    } else {\n      // only allow positive numbers\n      for (int w : weights) {\n        if (w \u003c\u003d 0) {\n          throw new IllegalArgumentException(\n              CommonConfigurationKeys.IPC_CALLQUEUE_CAPACITY_WEIGHTS_KEY +\n                  \" only takes positive weights. \" + w + \" capacity weight \" +\n                  \"found\");\n        }\n      }\n    }\n    return weights;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java"
    }
  }
}