{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "stop",
  "functionId": "stop",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 1381,
  "functionEndLine": 1418,
  "numCommitsSeen": 116,
  "timeTaken": 3793,
  "changeHistory": [
    "5d182949badb2eb80393de7ba3838102d006488b",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17",
    "63c659ddd0641227501851dbcd1352064fa9348a",
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "2214871d916fdcae62aa51afbb5fd571f2808745",
    "4bca22005f48f426b9bc7cf36d435ead470a2590",
    "c90d7d649bfc337682946651033ad8a1e6b0e1e6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "5d182949badb2eb80393de7ba3838102d006488b": "Ybodychange",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Ybodychange",
    "63c659ddd0641227501851dbcd1352064fa9348a": "Ybodychange",
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Yfilerename",
    "2214871d916fdcae62aa51afbb5fd571f2808745": "Ybodychange",
    "4bca22005f48f426b9bc7cf36d435ead470a2590": "Ybodychange",
    "c90d7d649bfc337682946651033ad8a1e6b0e1e6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5d182949badb2eb80393de7ba3838102d006488b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
      "commitDate": "05/01/17 5:21 PM",
      "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "08/11/16 7:25 AM",
      "commitNameOld": "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 58.41,
      "commitsBetweenForRepo": 318,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   public void stop() throws Exception {\n     MultiException exception \u003d null;\n     for (ServerConnector c : listeners) {\n       try {\n         c.close();\n       } catch (Exception e) {\n         LOG.error(\n             \"Error while stopping listener for webapp\"\n                 + webAppContext.getDisplayName(), e);\n         exception \u003d addMultiException(exception, e);\n       }\n     }\n \n     try {\n-      // explicitly destroy the secrete provider\n+      // explicitly destroy the secret provider\n       secretProvider.destroy();\n       // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n       webAppContext.clearAttributes();\n       webAppContext.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web app context for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     try {\n       webServer.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web server for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     if (exception !\u003d null) {\n       exception.ifExceptionThrow();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    for (ServerConnector c : listeners) {\n      try {\n        c.close();\n      } catch (Exception e) {\n        LOG.error(\n            \"Error while stopping listener for webapp\"\n                + webAppContext.getDisplayName(), e);\n        exception \u003d addMultiException(exception, e);\n      }\n    }\n\n    try {\n      // explicitly destroy the secret provider\n      secretProvider.destroy();\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "19/08/16 9:22 AM",
      "commitNameOld": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 69.28,
      "commitsBetweenForRepo": 490,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   public void stop() throws Exception {\n     MultiException exception \u003d null;\n-    for (Connector c : listeners) {\n+    for (ServerConnector c : listeners) {\n       try {\n         c.close();\n       } catch (Exception e) {\n         LOG.error(\n             \"Error while stopping listener for webapp\"\n                 + webAppContext.getDisplayName(), e);\n         exception \u003d addMultiException(exception, e);\n       }\n     }\n \n     try {\n       // explicitly destroy the secrete provider\n       secretProvider.destroy();\n       // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n       webAppContext.clearAttributes();\n       webAppContext.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web app context for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     try {\n       webServer.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web server for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     if (exception !\u003d null) {\n       exception.ifExceptionThrow();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    for (ServerConnector c : listeners) {\n      try {\n        c.close();\n      } catch (Exception e) {\n        LOG.error(\n            \"Error while stopping listener for webapp\"\n                + webAppContext.getDisplayName(), e);\n        exception \u003d addMultiException(exception, e);\n      }\n    }\n\n    try {\n      // explicitly destroy the secrete provider\n      secretProvider.destroy();\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "63c659ddd0641227501851dbcd1352064fa9348a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11815. HttpServer2 should destroy SignerSecretProvider when it stops. Contributed by Rohith.\n",
      "commitDate": "09/04/15 10:58 AM",
      "commitName": "63c659ddd0641227501851dbcd1352064fa9348a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/03/15 11:44 AM",
      "commitNameOld": "90e07d55ace7221081a58a90e54b360ad68fa1ef",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 9.97,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n   public void stop() throws Exception {\n     MultiException exception \u003d null;\n     for (Connector c : listeners) {\n       try {\n         c.close();\n       } catch (Exception e) {\n         LOG.error(\n             \"Error while stopping listener for webapp\"\n                 + webAppContext.getDisplayName(), e);\n         exception \u003d addMultiException(exception, e);\n       }\n     }\n \n     try {\n+      // explicitly destroy the secrete provider\n+      secretProvider.destroy();\n       // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n       webAppContext.clearAttributes();\n       webAppContext.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web app context for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     try {\n       webServer.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web server for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     if (exception !\u003d null) {\n       exception.ifExceptionThrow();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    for (Connector c : listeners) {\n      try {\n        c.close();\n      } catch (Exception e) {\n        LOG.error(\n            \"Error while stopping listener for webapp\"\n                + webAppContext.getDisplayName(), e);\n        exception \u003d addMultiException(exception, e);\n      }\n    }\n\n    try {\n      // explicitly destroy the secrete provider\n      secretProvider.destroy();\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7555. Remove the support of unmanaged connectors in HttpServer2. Contributed by Haohui Mai.\n",
      "commitDate": "21/12/14 2:45 PM",
      "commitName": "2860eeb14a958a8861b9ad3d6bd685df48da8cd3",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "11/12/14 4:42 PM",
      "commitNameOld": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 9.92,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,36 @@\n   public void stop() throws Exception {\n     MultiException exception \u003d null;\n-    for (ListenerInfo li : listeners) {\n-      if (!li.isManaged) {\n-        continue;\n-      }\n-\n+    for (Connector c : listeners) {\n       try {\n-        li.listener.close();\n+        c.close();\n       } catch (Exception e) {\n         LOG.error(\n             \"Error while stopping listener for webapp\"\n                 + webAppContext.getDisplayName(), e);\n         exception \u003d addMultiException(exception, e);\n       }\n     }\n \n     try {\n       // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n       webAppContext.clearAttributes();\n       webAppContext.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web app context for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     try {\n       webServer.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web server for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     if (exception !\u003d null) {\n       exception.ifExceptionThrow();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    for (Connector c : listeners) {\n      try {\n        c.close();\n      } catch (Exception e) {\n        LOG.error(\n            \"Error while stopping listener for webapp\"\n                + webAppContext.getDisplayName(), e);\n        exception \u003d addMultiException(exception, e);\n      }\n    }\n\n    try {\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "27/01/14 10:41 PM",
      "commitNameOld": "87166f1ee81dbad579508c2bdbc7dda96b1ef809",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    for (ListenerInfo li : listeners) {\n      if (!li.isManaged) {\n        continue;\n      }\n\n      try {\n        li.listener.close();\n      } catch (Exception e) {\n        LOG.error(\n            \"Error while stopping listener for webapp\"\n                + webAppContext.getDisplayName(), e);\n        exception \u003d addMultiException(exception, e);\n      }\n    }\n\n    try {\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
      }
    },
    "2214871d916fdcae62aa51afbb5fd571f2808745": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/13 10:20 AM",
      "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "20/11/13 1:51 PM",
      "commitNameOld": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 6.85,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,40 @@\n   public void stop() throws Exception {\n     MultiException exception \u003d null;\n-    try {\n-      listener.close();\n-    } catch (Exception e) {\n-      LOG.error(\"Error while stopping listener for webapp\"\n-          + webAppContext.getDisplayName(), e);\n-      exception \u003d addMultiException(exception, e);\n-    }\n-\n-    try {\n-      if (sslFactory !\u003d null) {\n-          sslFactory.destroy();\n+    for (ListenerInfo li : listeners) {\n+      if (!li.isManaged) {\n+        continue;\n       }\n-    } catch (Exception e) {\n-      LOG.error(\"Error while destroying the SSLFactory\"\n-          + webAppContext.getDisplayName(), e);\n-      exception \u003d addMultiException(exception, e);\n+\n+      try {\n+        li.listener.close();\n+      } catch (Exception e) {\n+        LOG.error(\n+            \"Error while stopping listener for webapp\"\n+                + webAppContext.getDisplayName(), e);\n+        exception \u003d addMultiException(exception, e);\n+      }\n     }\n \n     try {\n       // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n       webAppContext.clearAttributes();\n       webAppContext.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web app context for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n+\n     try {\n       webServer.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web server for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     if (exception !\u003d null) {\n       exception.ifExceptionThrow();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    for (ListenerInfo li : listeners) {\n      if (!li.isManaged) {\n        continue;\n      }\n\n      try {\n        li.listener.close();\n      } catch (Exception e) {\n        LOG.error(\n            \"Error while stopping listener for webapp\"\n                + webAppContext.getDisplayName(), e);\n        exception \u003d addMultiException(exception, e);\n      }\n    }\n\n    try {\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "4bca22005f48f426b9bc7cf36d435ead470a2590": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8681. add support for HTTPS to the web UIs. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1371525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/08/12 3:52 PM",
      "commitName": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "27/06/12 3:41 PM",
      "commitNameOld": "5770a453f304d83463879db6101da1f1e81e5563",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 43.01,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,42 @@\n   public void stop() throws Exception {\n     MultiException exception \u003d null;\n     try {\n       listener.close();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping listener for webapp\"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     try {\n+      if (sslFactory !\u003d null) {\n+          sslFactory.destroy();\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Error while destroying the SSLFactory\"\n+          + webAppContext.getDisplayName(), e);\n+      exception \u003d addMultiException(exception, e);\n+    }\n+\n+    try {\n       // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n       webAppContext.clearAttributes();\n       webAppContext.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web app context for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n     try {\n       webServer.stop();\n     } catch (Exception e) {\n       LOG.error(\"Error while stopping web server for webapp \"\n           + webAppContext.getDisplayName(), e);\n       exception \u003d addMultiException(exception, e);\n     }\n \n     if (exception !\u003d null) {\n       exception.ifExceptionThrow();\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    try {\n      listener.close();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping listener for webapp\"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      if (sslFactory !\u003d null) {\n          sslFactory.destroy();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error while destroying the SSLFactory\"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "c90d7d649bfc337682946651033ad8a1e6b0e1e6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7703. Improved excpetion handling of shutting down web server.\n(Devaraj K via Eric Yang)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179286 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 9:06 AM",
      "commitName": "c90d7d649bfc337682946651033ad8a1e6b0e1e6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "28/09/11 1:37 PM",
      "commitNameOld": "c5179b16ecc2c26f693eed692a6c556b6ac2e845",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 6.81,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,32 @@\n   public void stop() throws Exception {\n-    listener.close();\n-    webServer.stop();\n+    MultiException exception \u003d null;\n+    try {\n+      listener.close();\n+    } catch (Exception e) {\n+      LOG.error(\"Error while stopping listener for webapp\"\n+          + webAppContext.getDisplayName(), e);\n+      exception \u003d addMultiException(exception, e);\n+    }\n+\n+    try {\n+      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n+      webAppContext.clearAttributes();\n+      webAppContext.stop();\n+    } catch (Exception e) {\n+      LOG.error(\"Error while stopping web app context for webapp \"\n+          + webAppContext.getDisplayName(), e);\n+      exception \u003d addMultiException(exception, e);\n+    }\n+    try {\n+      webServer.stop();\n+    } catch (Exception e) {\n+      LOG.error(\"Error while stopping web server for webapp \"\n+          + webAppContext.getDisplayName(), e);\n+      exception \u003d addMultiException(exception, e);\n+    }\n+\n+    if (exception !\u003d null) {\n+      exception.ifExceptionThrow();\n+    }\n+\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    MultiException exception \u003d null;\n    try {\n      listener.close();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping listener for webapp\"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    try {\n      // clear \u0026 stop webAppContext attributes to avoid memory leaks.\n      webAppContext.clearAttributes();\n      webAppContext.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web app context for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n    try {\n      webServer.stop();\n    } catch (Exception e) {\n      LOG.error(\"Error while stopping web server for webapp \"\n          + webAppContext.getDisplayName(), e);\n      exception \u003d addMultiException(exception, e);\n    }\n\n    if (exception !\u003d null) {\n      exception.ifExceptionThrow();\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() throws Exception {\n    listener.close();\n    webServer.stop();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() throws Exception {\n    listener.close();\n    webServer.stop();\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() throws Exception {\n    listener.close();\n    webServer.stop();\n  }",
      "path": "common/src/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "common/src/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,4 @@\n+  public void stop() throws Exception {\n+    listener.close();\n+    webServer.stop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() throws Exception {\n    listener.close();\n    webServer.stop();\n  }",
      "path": "src/java/org/apache/hadoop/http/HttpServer.java"
    }
  }
}