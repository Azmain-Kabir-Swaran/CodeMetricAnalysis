{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedSchedulingAllocateRequestPBImpl.java",
  "functionName": "getContainerProtoIterable",
  "functionId": "getContainerProtoIterable___newContainersList-List__Container__(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateRequestPBImpl.java",
  "functionStartLine": 151,
  "functionEndLine": 178,
  "numCommitsSeen": 2,
  "timeTaken": 1317,
  "changeHistory": [
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "99e5dd68d0f44109c169d74824fa45a7396a5990"
  ],
  "changeHistoryShort": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Yfilerename",
    "99e5dd68d0f44109c169d74824fa45a7396a5990": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "30/07/16 7:29 PM",
      "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Iterable\u003cContainerProto\u003e getContainerProtoIterable(\n      final List\u003cContainer\u003e newContainersList) {\n    maybeInitBuilder();\n    return new Iterable\u003cContainerProto\u003e() {\n      @Override\n      public synchronized Iterator\u003cContainerProto\u003e iterator() {\n        return new Iterator\u003cContainerProto\u003e() {\n          Iterator\u003cContainer\u003e iter \u003d newContainersList.iterator();\n\n          @Override\n          public synchronized boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public synchronized ContainerProto next() {\n            return ProtoUtils.convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public synchronized void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n      }\n    };\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateRequestPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistSchedAllocateRequestPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistributedSchedulingAllocateRequestPBImpl.java"
      }
    },
    "99e5dd68d0f44109c169d74824fa45a7396a5990": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5171. Extend DistributedSchedulerProtocol to notify RM of containers allocated by the Node. (Inigo Goiri via asuresh)\n",
      "commitDate": "22/06/16 7:04 PM",
      "commitName": "99e5dd68d0f44109c169d74824fa45a7396a5990",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,28 @@\n+  private Iterable\u003cContainerProto\u003e getContainerProtoIterable(\n+      final List\u003cContainer\u003e newContainersList) {\n+    maybeInitBuilder();\n+    return new Iterable\u003cContainerProto\u003e() {\n+      @Override\n+      public synchronized Iterator\u003cContainerProto\u003e iterator() {\n+        return new Iterator\u003cContainerProto\u003e() {\n+          Iterator\u003cContainer\u003e iter \u003d newContainersList.iterator();\n+\n+          @Override\n+          public synchronized boolean hasNext() {\n+            return iter.hasNext();\n+          }\n+\n+          @Override\n+          public synchronized ContainerProto next() {\n+            return ProtoUtils.convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public synchronized void remove() {\n+            throw new UnsupportedOperationException();\n+\n+          }\n+        };\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Iterable\u003cContainerProto\u003e getContainerProtoIterable(\n      final List\u003cContainer\u003e newContainersList) {\n    maybeInitBuilder();\n    return new Iterable\u003cContainerProto\u003e() {\n      @Override\n      public synchronized Iterator\u003cContainerProto\u003e iterator() {\n        return new Iterator\u003cContainerProto\u003e() {\n          Iterator\u003cContainer\u003e iter \u003d newContainersList.iterator();\n\n          @Override\n          public synchronized boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public synchronized ContainerProto next() {\n            return ProtoUtils.convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public synchronized void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n      }\n    };\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/DistSchedAllocateRequestPBImpl.java"
    }
  }
}