{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "storeAssignedResources",
  "functionId": "storeAssignedResources___container-Container__resourceType-String__assignedResources-List__Serializable__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 1414,
  "functionEndLine": 1443,
  "numCommitsSeen": 75,
  "timeTaken": 3600,
  "changeHistory": [
    "8b3c6791b13fc57891cf81e83d4b626b4f2932e6",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
    "f155ab7cfa64e822171708040cb49889338961ce"
  ],
  "changeHistoryShort": {
    "8b3c6791b13fc57891cf81e83d4b626b4f2932e6": "Ybodychange",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": "Ybodychange",
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": "Ymultichange(Yparameterchange,Ybodychange)",
    "f155ab7cfa64e822171708040cb49889338961ce": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8b3c6791b13fc57891cf81e83d4b626b4f2932e6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9135. NM State store ResourceMappings serialization are tested with Strings instead of real Device objects. Contributed by Peter Bacsko\n",
      "commitDate": "12/07/19 8:20 AM",
      "commitName": "8b3c6791b13fc57891cf81e83d4b626b4f2932e6",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 118.67,
      "commitsBetweenForRepo": 818,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,30 @@\n   public void storeAssignedResources(Container container,\n       String resourceType, List\u003cSerializable\u003e assignedResources)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\n           \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n               + \", assignedResources\u003d\" + StringUtils\n               .join(\",\", assignedResources));\n     }\n \n     String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n         + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n     try {\n-      WriteBatch batch \u003d db.createWriteBatch();\n-      try {\n+      try (WriteBatch batch \u003d db.createWriteBatch()) {\n         ResourceMappings.AssignedResources res \u003d\n             new ResourceMappings.AssignedResources();\n         res.updateAssignedResources(assignedResources);\n \n         // New value will overwrite old values for the same key\n         batch.put(bytes(keyResChng), res.toBytes());\n         db.write(batch);\n-      } finally {\n-        batch.close();\n       }\n     } catch (DBException e) {\n       markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n \n     // update container resource mapping.\n     updateContainerResourceMapping(container, resourceType, assignedResources);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeAssignedResources(Container container,\n      String resourceType, List\u003cSerializable\u003e assignedResources)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\n          \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n              + \", assignedResources\u003d\" + StringUtils\n              .join(\",\", assignedResources));\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n        + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n    try {\n      try (WriteBatch batch \u003d db.createWriteBatch()) {\n        ResourceMappings.AssignedResources res \u003d\n            new ResourceMappings.AssignedResources();\n        res.updateAssignedResources(assignedResources);\n\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng), res.toBytes());\n        db.write(batch);\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n\n    // update container resource mapping.\n    updateContainerResourceMapping(container, resourceType, assignedResources);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7585. NodeManager should go unhealthy when state store throws DBException. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/18 6:03 PM",
      "commitName": "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
      "commitAuthor": "Miklos Szegedi",
      "commitDateOld": "28/10/17 10:38 PM",
      "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 65.85,
      "commitsBetweenForRepo": 464,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   public void storeAssignedResources(Container container,\n       String resourceType, List\u003cSerializable\u003e assignedResources)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\n           \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n               + \", assignedResources\u003d\" + StringUtils\n               .join(\",\", assignedResources));\n     }\n \n     String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n         + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         ResourceMappings.AssignedResources res \u003d\n             new ResourceMappings.AssignedResources();\n         res.updateAssignedResources(assignedResources);\n \n         // New value will overwrite old values for the same key\n         batch.put(bytes(keyResChng), res.toBytes());\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n+      markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n \n     // update container resource mapping.\n     updateContainerResourceMapping(container, resourceType, assignedResources);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeAssignedResources(Container container,\n      String resourceType, List\u003cSerializable\u003e assignedResources)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\n          \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n              + \", assignedResources\u003d\" + StringUtils\n              .join(\",\", assignedResources));\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n        + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        ResourceMappings.AssignedResources res \u003d\n            new ResourceMappings.AssignedResources();\n        res.updateAssignedResources(assignedResources);\n\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng), res.toBytes());\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n\n    // update container resource mapping.\n    updateContainerResourceMapping(container, resourceType, assignedResources);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
      "commitDate": "28/10/17 10:38 PM",
      "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
          "commitDate": "28/10/17 10:38 PM",
          "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
          "commitAuthor": "Sunil G",
          "commitDateOld": "16/10/17 1:12 PM",
          "commitNameOld": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 12.39,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,32 @@\n-  public void storeAssignedResources(ContainerId containerId,\n+  public void storeAssignedResources(Container container,\n       String resourceType, List\u003cSerializable\u003e assignedResources)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeAssignedResources: containerId\u003d\" + containerId\n-          + \", assignedResources\u003d\" + StringUtils.join(\",\", assignedResources));\n+      LOG.debug(\n+          \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n+              + \", assignedResources\u003d\" + StringUtils\n+              .join(\",\", assignedResources));\n     }\n \n-    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+    String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n         + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         ResourceMappings.AssignedResources res \u003d\n             new ResourceMappings.AssignedResources();\n         res.updateAssignedResources(assignedResources);\n \n         // New value will overwrite old values for the same key\n         batch.put(bytes(keyResChng), res.toBytes());\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n+\n+    // update container resource mapping.\n+    updateContainerResourceMapping(container, resourceType, assignedResources);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeAssignedResources(Container container,\n      String resourceType, List\u003cSerializable\u003e assignedResources)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\n          \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n              + \", assignedResources\u003d\" + StringUtils\n              .join(\",\", assignedResources));\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n        + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        ResourceMappings.AssignedResources res \u003d\n            new ResourceMappings.AssignedResources();\n        res.updateAssignedResources(assignedResources);\n\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng), res.toBytes());\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n\n    // update container resource mapping.\n    updateContainerResourceMapping(container, resourceType, assignedResources);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, resourceType-String, assignedResources-List\u003cSerializable\u003e]",
            "newValue": "[container-Container, resourceType-String, assignedResources-List\u003cSerializable\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7224. Support GPU isolation for docker container. Contributed by Wangda Tan.\n",
          "commitDate": "28/10/17 10:38 PM",
          "commitName": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
          "commitAuthor": "Sunil G",
          "commitDateOld": "16/10/17 1:12 PM",
          "commitNameOld": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 12.39,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,32 @@\n-  public void storeAssignedResources(ContainerId containerId,\n+  public void storeAssignedResources(Container container,\n       String resourceType, List\u003cSerializable\u003e assignedResources)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeAssignedResources: containerId\u003d\" + containerId\n-          + \", assignedResources\u003d\" + StringUtils.join(\",\", assignedResources));\n+      LOG.debug(\n+          \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n+              + \", assignedResources\u003d\" + StringUtils\n+              .join(\",\", assignedResources));\n     }\n \n-    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+    String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n         + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         ResourceMappings.AssignedResources res \u003d\n             new ResourceMappings.AssignedResources();\n         res.updateAssignedResources(assignedResources);\n \n         // New value will overwrite old values for the same key\n         batch.put(bytes(keyResChng), res.toBytes());\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n+\n+    // update container resource mapping.\n+    updateContainerResourceMapping(container, resourceType, assignedResources);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeAssignedResources(Container container,\n      String resourceType, List\u003cSerializable\u003e assignedResources)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\n          \"storeAssignedResources: containerId\u003d\" + container.getContainerId()\n              + \", assignedResources\u003d\" + StringUtils\n              .join(\",\", assignedResources));\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + container.getContainerId().toString()\n        + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        ResourceMappings.AssignedResources res \u003d\n            new ResourceMappings.AssignedResources();\n        res.updateAssignedResources(assignedResources);\n\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng), res.toBytes());\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n\n    // update container resource mapping.\n    updateContainerResourceMapping(container, resourceType, assignedResources);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {}
        }
      ]
    },
    "f155ab7cfa64e822171708040cb49889338961ce": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7033. Add support for NM Recovery of assigned resources (e.g. GPU\u0027s, NUMA, FPGA\u0027s) to container. (Devaraj K and Wangda Tan)\n\nChange-Id: Iffd18bb95debe1c8cc55e30abc1d8f663e9d0e30\n",
      "commitDate": "07/09/17 2:13 PM",
      "commitName": "f155ab7cfa64e822171708040cb49889338961ce",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,27 @@\n+  public void storeAssignedResources(ContainerId containerId,\n+      String resourceType, List\u003cSerializable\u003e assignedResources)\n+      throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"storeAssignedResources: containerId\u003d\" + containerId\n+          + \", assignedResources\u003d\" + StringUtils.join(\",\", assignedResources));\n+    }\n+\n+    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n+    try {\n+      WriteBatch batch \u003d db.createWriteBatch();\n+      try {\n+        ResourceMappings.AssignedResources res \u003d\n+            new ResourceMappings.AssignedResources();\n+        res.updateAssignedResources(assignedResources);\n+\n+        // New value will overwrite old values for the same key\n+        batch.put(bytes(keyResChng), res.toBytes());\n+        db.write(batch);\n+      } finally {\n+        batch.close();\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeAssignedResources(ContainerId containerId,\n      String resourceType, List\u003cSerializable\u003e assignedResources)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeAssignedResources: containerId\u003d\" + containerId\n          + \", assignedResources\u003d\" + StringUtils.join(\",\", assignedResources));\n    }\n\n    String keyResChng \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_ASSIGNED_RESOURCES_KEY_SUFFIX + resourceType;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        ResourceMappings.AssignedResources res \u003d\n            new ResourceMappings.AssignedResources();\n        res.updateAssignedResources(assignedResources);\n\n        // New value will overwrite old values for the same key\n        batch.put(bytes(keyResChng), res.toBytes());\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}