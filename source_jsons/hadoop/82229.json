{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PureJavaCrc32.java",
  "functionName": "update",
  "functionId": "update___b-byte[](modifiers-final)__offset-int(modifiers-final)__len-int(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
  "functionStartLine": 60,
  "functionEndLine": 91,
  "numCommitsSeen": 14,
  "timeTaken": 1774,
  "changeHistory": [
    "988bc17bc3552a3faad25e8a9e7fa1de7624c892",
    "224de4f92c222a7b915e9c5d6bdd1a4a3fcbcf31",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "6891b254f46a0163cfa1453e01fa5b81c776b39c",
    "8621b830f825451bd223c76d8336065127d8e94f",
    "8bd2486b519ed6dcdc638843514d9034b7f3c49f"
  ],
  "changeHistoryShort": {
    "988bc17bc3552a3faad25e8a9e7fa1de7624c892": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
    "224de4f92c222a7b915e9c5d6bdd1a4a3fcbcf31": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "6891b254f46a0163cfa1453e01fa5b81c776b39c": "Ybodychange",
    "8621b830f825451bd223c76d8336065127d8e94f": "Ybodychange",
    "8bd2486b519ed6dcdc638843514d9034b7f3c49f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "988bc17bc3552a3faad25e8a9e7fa1de7624c892": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-10674. Improve PureJavaCrc32 performance and use java.util.zip.CRC32 for Java 7 and above.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605239 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 7:22 PM",
      "commitName": "988bc17bc3552a3faad25e8a9e7fa1de7624c892",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10674. Improve PureJavaCrc32 performance and use java.util.zip.CRC32 for Java 7 and above.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605239 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 7:22 PM",
          "commitName": "988bc17bc3552a3faad25e8a9e7fa1de7624c892",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/10/12 2:52 PM",
          "commitNameOld": "224de4f92c222a7b915e9c5d6bdd1a4a3fcbcf31",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 616.19,
          "commitsBetweenForRepo": 3846,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,32 @@\n-  public void update(byte[] b, int off, int len) {\n+  public void update(final byte[] b, final int offset, final int len) {\n     int localCrc \u003d crc;\n \n-    while(len \u003e 7) {\n-      final int c0 \u003d(b[off+0] ^ localCrc) \u0026 0xff;\n-      final int c1 \u003d(b[off+1] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      final int c2 \u003d(b[off+2] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      final int c3 \u003d(b[off+3] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      localCrc \u003d (T[T8_7_start + c0] ^ T[T8_6_start + c1])\n-          ^ (T[T8_5_start + c2] ^ T[T8_4_start + c3]);\n+    final int remainder \u003d len \u0026 0x7;\n+    int i \u003d offset;\n+    for(final int end \u003d offset + len - remainder; i \u003c end; i +\u003d 8) {\n+      final int x \u003d localCrc\n+          ^ ((((b[i  ] \u003c\u003c 24) \u003e\u003e\u003e 24) + ((b[i+1] \u003c\u003c 24) \u003e\u003e\u003e 16))\n+           + (((b[i+2] \u003c\u003c 24) \u003e\u003e\u003e 8 ) +  (b[i+3] \u003c\u003c 24)));\n \n-      final int c4 \u003d b[off+4] \u0026 0xff;\n-      final int c5 \u003d b[off+5] \u0026 0xff;\n-      final int c6 \u003d b[off+6] \u0026 0xff;\n-      final int c7 \u003d b[off+7] \u0026 0xff;\n-\n-      localCrc ^\u003d (T[T8_3_start + c4] ^ T[T8_2_start + c5])\n-           ^ (T[T8_1_start + c6] ^ T[T8_0_start + c7]);\n-\n-      off +\u003d 8;\n-      len -\u003d 8;\n+      localCrc \u003d ((T[((x \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x700] ^ T[((x \u003c\u003c 16) \u003e\u003e\u003e 24) + 0x600])\n+                ^ (T[((x \u003c\u003c  8) \u003e\u003e\u003e 24) + 0x500] ^ T[ (x        \u003e\u003e\u003e 24) + 0x400]))\n+               ^ ((T[((b[i+4] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x300] ^ T[((b[i+5] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x200])\n+                ^ (T[((b[i+6] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x100] ^ T[((b[i+7] \u003c\u003c 24) \u003e\u003e\u003e 24)]));\n     }\n \n     /* loop unroll - duff\u0027s device style */\n-    switch(len) {\n-      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+    switch(remainder) {\n+      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n       default:\n         /* nothing */\n     }\n     \n     // Publish crc out to object\n     crc \u003d localCrc;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void update(final byte[] b, final int offset, final int len) {\n    int localCrc \u003d crc;\n\n    final int remainder \u003d len \u0026 0x7;\n    int i \u003d offset;\n    for(final int end \u003d offset + len - remainder; i \u003c end; i +\u003d 8) {\n      final int x \u003d localCrc\n          ^ ((((b[i  ] \u003c\u003c 24) \u003e\u003e\u003e 24) + ((b[i+1] \u003c\u003c 24) \u003e\u003e\u003e 16))\n           + (((b[i+2] \u003c\u003c 24) \u003e\u003e\u003e 8 ) +  (b[i+3] \u003c\u003c 24)));\n\n      localCrc \u003d ((T[((x \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x700] ^ T[((x \u003c\u003c 16) \u003e\u003e\u003e 24) + 0x600])\n                ^ (T[((x \u003c\u003c  8) \u003e\u003e\u003e 24) + 0x500] ^ T[ (x        \u003e\u003e\u003e 24) + 0x400]))\n               ^ ((T[((b[i+4] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x300] ^ T[((b[i+5] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x200])\n                ^ (T[((b[i+6] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x100] ^ T[((b[i+7] \u003c\u003c 24) \u003e\u003e\u003e 24)]));\n    }\n\n    /* loop unroll - duff\u0027s device style */\n    switch(remainder) {\n      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      default:\n        /* nothing */\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
          "extendedDetails": {
            "oldValue": "[b-byte[], off-int, len-int]",
            "newValue": "[b-byte[](modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10674. Improve PureJavaCrc32 performance and use java.util.zip.CRC32 for Java 7 and above.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605239 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 7:22 PM",
          "commitName": "988bc17bc3552a3faad25e8a9e7fa1de7624c892",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/10/12 2:52 PM",
          "commitNameOld": "224de4f92c222a7b915e9c5d6bdd1a4a3fcbcf31",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 616.19,
          "commitsBetweenForRepo": 3846,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,32 @@\n-  public void update(byte[] b, int off, int len) {\n+  public void update(final byte[] b, final int offset, final int len) {\n     int localCrc \u003d crc;\n \n-    while(len \u003e 7) {\n-      final int c0 \u003d(b[off+0] ^ localCrc) \u0026 0xff;\n-      final int c1 \u003d(b[off+1] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      final int c2 \u003d(b[off+2] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      final int c3 \u003d(b[off+3] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      localCrc \u003d (T[T8_7_start + c0] ^ T[T8_6_start + c1])\n-          ^ (T[T8_5_start + c2] ^ T[T8_4_start + c3]);\n+    final int remainder \u003d len \u0026 0x7;\n+    int i \u003d offset;\n+    for(final int end \u003d offset + len - remainder; i \u003c end; i +\u003d 8) {\n+      final int x \u003d localCrc\n+          ^ ((((b[i  ] \u003c\u003c 24) \u003e\u003e\u003e 24) + ((b[i+1] \u003c\u003c 24) \u003e\u003e\u003e 16))\n+           + (((b[i+2] \u003c\u003c 24) \u003e\u003e\u003e 8 ) +  (b[i+3] \u003c\u003c 24)));\n \n-      final int c4 \u003d b[off+4] \u0026 0xff;\n-      final int c5 \u003d b[off+5] \u0026 0xff;\n-      final int c6 \u003d b[off+6] \u0026 0xff;\n-      final int c7 \u003d b[off+7] \u0026 0xff;\n-\n-      localCrc ^\u003d (T[T8_3_start + c4] ^ T[T8_2_start + c5])\n-           ^ (T[T8_1_start + c6] ^ T[T8_0_start + c7]);\n-\n-      off +\u003d 8;\n-      len -\u003d 8;\n+      localCrc \u003d ((T[((x \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x700] ^ T[((x \u003c\u003c 16) \u003e\u003e\u003e 24) + 0x600])\n+                ^ (T[((x \u003c\u003c  8) \u003e\u003e\u003e 24) + 0x500] ^ T[ (x        \u003e\u003e\u003e 24) + 0x400]))\n+               ^ ((T[((b[i+4] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x300] ^ T[((b[i+5] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x200])\n+                ^ (T[((b[i+6] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x100] ^ T[((b[i+7] \u003c\u003c 24) \u003e\u003e\u003e 24)]));\n     }\n \n     /* loop unroll - duff\u0027s device style */\n-    switch(len) {\n-      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+    switch(remainder) {\n+      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n       default:\n         /* nothing */\n     }\n     \n     // Publish crc out to object\n     crc \u003d localCrc;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void update(final byte[] b, final int offset, final int len) {\n    int localCrc \u003d crc;\n\n    final int remainder \u003d len \u0026 0x7;\n    int i \u003d offset;\n    for(final int end \u003d offset + len - remainder; i \u003c end; i +\u003d 8) {\n      final int x \u003d localCrc\n          ^ ((((b[i  ] \u003c\u003c 24) \u003e\u003e\u003e 24) + ((b[i+1] \u003c\u003c 24) \u003e\u003e\u003e 16))\n           + (((b[i+2] \u003c\u003c 24) \u003e\u003e\u003e 8 ) +  (b[i+3] \u003c\u003c 24)));\n\n      localCrc \u003d ((T[((x \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x700] ^ T[((x \u003c\u003c 16) \u003e\u003e\u003e 24) + 0x600])\n                ^ (T[((x \u003c\u003c  8) \u003e\u003e\u003e 24) + 0x500] ^ T[ (x        \u003e\u003e\u003e 24) + 0x400]))\n               ^ ((T[((b[i+4] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x300] ^ T[((b[i+5] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x200])\n                ^ (T[((b[i+6] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x100] ^ T[((b[i+7] \u003c\u003c 24) \u003e\u003e\u003e 24)]));\n    }\n\n    /* loop unroll - duff\u0027s device style */\n    switch(remainder) {\n      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      default:\n        /* nothing */\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-10674. Improve PureJavaCrc32 performance and use java.util.zip.CRC32 for Java 7 and above.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605239 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 7:22 PM",
          "commitName": "988bc17bc3552a3faad25e8a9e7fa1de7624c892",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/10/12 2:52 PM",
          "commitNameOld": "224de4f92c222a7b915e9c5d6bdd1a4a3fcbcf31",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 616.19,
          "commitsBetweenForRepo": 3846,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,32 @@\n-  public void update(byte[] b, int off, int len) {\n+  public void update(final byte[] b, final int offset, final int len) {\n     int localCrc \u003d crc;\n \n-    while(len \u003e 7) {\n-      final int c0 \u003d(b[off+0] ^ localCrc) \u0026 0xff;\n-      final int c1 \u003d(b[off+1] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      final int c2 \u003d(b[off+2] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      final int c3 \u003d(b[off+3] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n-      localCrc \u003d (T[T8_7_start + c0] ^ T[T8_6_start + c1])\n-          ^ (T[T8_5_start + c2] ^ T[T8_4_start + c3]);\n+    final int remainder \u003d len \u0026 0x7;\n+    int i \u003d offset;\n+    for(final int end \u003d offset + len - remainder; i \u003c end; i +\u003d 8) {\n+      final int x \u003d localCrc\n+          ^ ((((b[i  ] \u003c\u003c 24) \u003e\u003e\u003e 24) + ((b[i+1] \u003c\u003c 24) \u003e\u003e\u003e 16))\n+           + (((b[i+2] \u003c\u003c 24) \u003e\u003e\u003e 8 ) +  (b[i+3] \u003c\u003c 24)));\n \n-      final int c4 \u003d b[off+4] \u0026 0xff;\n-      final int c5 \u003d b[off+5] \u0026 0xff;\n-      final int c6 \u003d b[off+6] \u0026 0xff;\n-      final int c7 \u003d b[off+7] \u0026 0xff;\n-\n-      localCrc ^\u003d (T[T8_3_start + c4] ^ T[T8_2_start + c5])\n-           ^ (T[T8_1_start + c6] ^ T[T8_0_start + c7]);\n-\n-      off +\u003d 8;\n-      len -\u003d 8;\n+      localCrc \u003d ((T[((x \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x700] ^ T[((x \u003c\u003c 16) \u003e\u003e\u003e 24) + 0x600])\n+                ^ (T[((x \u003c\u003c  8) \u003e\u003e\u003e 24) + 0x500] ^ T[ (x        \u003e\u003e\u003e 24) + 0x400]))\n+               ^ ((T[((b[i+4] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x300] ^ T[((b[i+5] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x200])\n+                ^ (T[((b[i+6] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x100] ^ T[((b[i+7] \u003c\u003c 24) \u003e\u003e\u003e 24)]));\n     }\n \n     /* loop unroll - duff\u0027s device style */\n-    switch(len) {\n-      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n-      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+    switch(remainder) {\n+      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n+      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n       default:\n         /* nothing */\n     }\n     \n     // Publish crc out to object\n     crc \u003d localCrc;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void update(final byte[] b, final int offset, final int len) {\n    int localCrc \u003d crc;\n\n    final int remainder \u003d len \u0026 0x7;\n    int i \u003d offset;\n    for(final int end \u003d offset + len - remainder; i \u003c end; i +\u003d 8) {\n      final int x \u003d localCrc\n          ^ ((((b[i  ] \u003c\u003c 24) \u003e\u003e\u003e 24) + ((b[i+1] \u003c\u003c 24) \u003e\u003e\u003e 16))\n           + (((b[i+2] \u003c\u003c 24) \u003e\u003e\u003e 8 ) +  (b[i+3] \u003c\u003c 24)));\n\n      localCrc \u003d ((T[((x \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x700] ^ T[((x \u003c\u003c 16) \u003e\u003e\u003e 24) + 0x600])\n                ^ (T[((x \u003c\u003c  8) \u003e\u003e\u003e 24) + 0x500] ^ T[ (x        \u003e\u003e\u003e 24) + 0x400]))\n               ^ ((T[((b[i+4] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x300] ^ T[((b[i+5] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x200])\n                ^ (T[((b[i+6] \u003c\u003c 24) \u003e\u003e\u003e 24) + 0x100] ^ T[((b[i+7] \u003c\u003c 24) \u003e\u003e\u003e 24)]));\n    }\n\n    /* loop unroll - duff\u0027s device style */\n    switch(remainder) {\n      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[((localCrc ^ b[i++]) \u003c\u003c 24) \u003e\u003e\u003e 24];\n      default:\n        /* nothing */\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
          "extendedDetails": {
            "oldValue": "[b-byte[], off-int, len-int]",
            "newValue": "[b-byte[](modifiers-final), offset-int(modifiers-final), len-int(modifiers-final)]"
          }
        }
      ]
    },
    "224de4f92c222a7b915e9c5d6bdd1a4a3fcbcf31": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8926. hadoop.util.PureJavaCrc32 cache hit-ratio is low for static data (Gopal V via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1399005 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/12 2:52 PM",
      "commitName": "224de4f92c222a7b915e9c5d6bdd1a4a3fcbcf31",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 52.87,
      "commitsBetweenForRepo": 312,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,39 @@\n   public void update(byte[] b, int off, int len) {\n     int localCrc \u003d crc;\n+\n     while(len \u003e 7) {\n-      int c0 \u003d b[off++] ^ localCrc;\n-      int c1 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n-      int c2 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n-      int c3 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n-      localCrc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n-          ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n+      final int c0 \u003d(b[off+0] ^ localCrc) \u0026 0xff;\n+      final int c1 \u003d(b[off+1] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n+      final int c2 \u003d(b[off+2] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n+      final int c3 \u003d(b[off+3] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n+      localCrc \u003d (T[T8_7_start + c0] ^ T[T8_6_start + c1])\n+          ^ (T[T8_5_start + c2] ^ T[T8_4_start + c3]);\n \n-      localCrc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n-           ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n+      final int c4 \u003d b[off+4] \u0026 0xff;\n+      final int c5 \u003d b[off+5] \u0026 0xff;\n+      final int c6 \u003d b[off+6] \u0026 0xff;\n+      final int c7 \u003d b[off+7] \u0026 0xff;\n \n+      localCrc ^\u003d (T[T8_3_start + c4] ^ T[T8_2_start + c5])\n+           ^ (T[T8_1_start + c6] ^ T[T8_0_start + c7]);\n+\n+      off +\u003d 8;\n       len -\u003d 8;\n     }\n-    while(len \u003e 0) {\n-      localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T8_0[(localCrc ^ b[off++]) \u0026 0xff];\n-      len--;\n+\n+    /* loop unroll - duff\u0027s device style */\n+    switch(len) {\n+      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n+      default:\n+        /* nothing */\n     }\n     \n     // Publish crc out to object\n     crc \u003d localCrc;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void update(byte[] b, int off, int len) {\n    int localCrc \u003d crc;\n\n    while(len \u003e 7) {\n      final int c0 \u003d(b[off+0] ^ localCrc) \u0026 0xff;\n      final int c1 \u003d(b[off+1] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n      final int c2 \u003d(b[off+2] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n      final int c3 \u003d(b[off+3] ^ (localCrc \u003e\u003e\u003e\u003d 8)) \u0026 0xff;\n      localCrc \u003d (T[T8_7_start + c0] ^ T[T8_6_start + c1])\n          ^ (T[T8_5_start + c2] ^ T[T8_4_start + c3]);\n\n      final int c4 \u003d b[off+4] \u0026 0xff;\n      final int c5 \u003d b[off+5] \u0026 0xff;\n      final int c6 \u003d b[off+6] \u0026 0xff;\n      final int c7 \u003d b[off+7] \u0026 0xff;\n\n      localCrc ^\u003d (T[T8_3_start + c4] ^ T[T8_2_start + c5])\n           ^ (T[T8_1_start + c6] ^ T[T8_0_start + c7]);\n\n      off +\u003d 8;\n      len -\u003d 8;\n    }\n\n    /* loop unroll - duff\u0027s device style */\n    switch(len) {\n      case 7: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n      case 6: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n      case 5: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n      case 4: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n      case 3: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n      case 2: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n      case 1: localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T[T8_0_start + ((localCrc ^ b[off++]) \u0026 0xff)];\n      default:\n        /* nothing */\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void update(byte[] b, int off, int len) {\n    int localCrc \u003d crc;\n    while(len \u003e 7) {\n      int c0 \u003d b[off++] ^ localCrc;\n      int c1 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c2 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c3 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      localCrc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n          ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n\n      localCrc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n           ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n\n      len -\u003d 8;\n    }\n    while(len \u003e 0) {\n      localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T8_0[(localCrc ^ b[off++]) \u0026 0xff];\n      len--;\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void update(byte[] b, int off, int len) {\n    int localCrc \u003d crc;\n    while(len \u003e 7) {\n      int c0 \u003d b[off++] ^ localCrc;\n      int c1 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c2 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c3 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      localCrc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n          ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n\n      localCrc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n           ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n\n      len -\u003d 8;\n    }\n    while(len \u003e 0) {\n      localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T8_0[(localCrc ^ b[off++]) \u0026 0xff];\n      len--;\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/PureJavaCrc32.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/PureJavaCrc32.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void update(byte[] b, int off, int len) {\n    int localCrc \u003d crc;\n    while(len \u003e 7) {\n      int c0 \u003d b[off++] ^ localCrc;\n      int c1 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c2 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c3 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      localCrc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n          ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n\n      localCrc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n           ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n\n      len -\u003d 8;\n    }\n    while(len \u003e 0) {\n      localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T8_0[(localCrc ^ b[off++]) \u0026 0xff];\n      len--;\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
      "path": "common/src/java/org/apache/hadoop/util/PureJavaCrc32.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/PureJavaCrc32.java",
        "newPath": "common/src/java/org/apache/hadoop/util/PureJavaCrc32.java"
      }
    },
    "6891b254f46a0163cfa1453e01fa5b81c776b39c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7333. Performance improvement in PureJavaCrc32. Contributed by Eric Caspole.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1128425 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/05/11 11:58 AM",
      "commitName": "6891b254f46a0163cfa1453e01fa5b81c776b39c",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/10 2:34 PM",
      "commitNameOld": "6378822a67c0baa502d22201f5c2b478cbe1261c",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 349.89,
      "commitsBetweenForRepo": 318,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   public void update(byte[] b, int off, int len) {\n+    int localCrc \u003d crc;\n     while(len \u003e 7) {\n-      int c0 \u003d b[off++] ^ crc;\n-      int c1 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n-      int c2 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n-      int c3 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n-      crc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n+      int c0 \u003d b[off++] ^ localCrc;\n+      int c1 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n+      int c2 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n+      int c3 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n+      localCrc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n           ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n \n-      crc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n+      localCrc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n            ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n \n       len -\u003d 8;\n     }\n     while(len \u003e 0) {\n-      crc \u003d (crc \u003e\u003e\u003e 8) ^ T8_0[(crc ^ b[off++]) \u0026 0xff];\n+      localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T8_0[(localCrc ^ b[off++]) \u0026 0xff];\n       len--;\n     }\n+    \n+    // Publish crc out to object\n+    crc \u003d localCrc;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void update(byte[] b, int off, int len) {\n    int localCrc \u003d crc;\n    while(len \u003e 7) {\n      int c0 \u003d b[off++] ^ localCrc;\n      int c1 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c2 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      int c3 \u003d b[off++] ^ (localCrc \u003e\u003e\u003e\u003d 8);\n      localCrc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n          ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n\n      localCrc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n           ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n\n      len -\u003d 8;\n    }\n    while(len \u003e 0) {\n      localCrc \u003d (localCrc \u003e\u003e\u003e 8) ^ T8_0[(localCrc ^ b[off++]) \u0026 0xff];\n      len--;\n    }\n    \n    // Publish crc out to object\n    crc \u003d localCrc;\n  }",
      "path": "src/java/org/apache/hadoop/util/PureJavaCrc32.java",
      "extendedDetails": {}
    },
    "8621b830f825451bd223c76d8336065127d8e94f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6166. Further improve the performance of the pure-Java CRC32\nimplementation. Contributed by Tsz Wo (Nicholas), SZE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@807753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/08/09 11:34 AM",
      "commitName": "8621b830f825451bd223c76d8336065127d8e94f",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "16/07/09 7:18 PM",
      "commitNameOld": "8bd2486b519ed6dcdc638843514d9034b7f3c49f",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 39.68,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   public void update(byte[] b, int off, int len) {\n-    while(len \u003e 3) {\n-      int c0 \u003d crc ^ b[off++];\n-      int c1 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n-      int c2 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n-      int c3 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n-      crc \u003d T4[c0 \u0026 0xff] ^ T3[c1 \u0026 0xff] ^ T2[c2 \u0026 0xff] ^ T1[c3 \u0026 0xff];\n-      len -\u003d 4;\n+    while(len \u003e 7) {\n+      int c0 \u003d b[off++] ^ crc;\n+      int c1 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n+      int c2 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n+      int c3 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n+      crc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n+          ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n+\n+      crc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n+           ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n+\n+      len -\u003d 8;\n     }\n     while(len \u003e 0) {\n-      crc \u003d (crc \u003e\u003e\u003e 8) ^ T1[(crc ^ b[off++]) \u0026 0xff];\n+      crc \u003d (crc \u003e\u003e\u003e 8) ^ T8_0[(crc ^ b[off++]) \u0026 0xff];\n       len--;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void update(byte[] b, int off, int len) {\n    while(len \u003e 7) {\n      int c0 \u003d b[off++] ^ crc;\n      int c1 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n      int c2 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n      int c3 \u003d b[off++] ^ (crc \u003e\u003e\u003e\u003d 8);\n      crc \u003d (T8_7[c0 \u0026 0xff] ^ T8_6[c1 \u0026 0xff])\n          ^ (T8_5[c2 \u0026 0xff] ^ T8_4[c3 \u0026 0xff]);\n\n      crc ^\u003d (T8_3[b[off++] \u0026 0xff] ^ T8_2[b[off++] \u0026 0xff])\n           ^ (T8_1[b[off++] \u0026 0xff] ^ T8_0[b[off++] \u0026 0xff]);\n\n      len -\u003d 8;\n    }\n    while(len \u003e 0) {\n      crc \u003d (crc \u003e\u003e\u003e 8) ^ T8_0[(crc ^ b[off++]) \u0026 0xff];\n      len--;\n    }\n  }",
      "path": "src/java/org/apache/hadoop/util/PureJavaCrc32.java",
      "extendedDetails": {}
    },
    "8bd2486b519ed6dcdc638843514d9034b7f3c49f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6148. Implement a fast, pure Java CRC32 calculator which outperforms java.util.zip.CRC32.  Contributed by Todd Lipcon and Scott Carey\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@794944 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/09 7:18 PM",
      "commitName": "8bd2486b519ed6dcdc638843514d9034b7f3c49f",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,14 @@\n+  public void update(byte[] b, int off, int len) {\n+    while(len \u003e 3) {\n+      int c0 \u003d crc ^ b[off++];\n+      int c1 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n+      int c2 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n+      int c3 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n+      crc \u003d T4[c0 \u0026 0xff] ^ T3[c1 \u0026 0xff] ^ T2[c2 \u0026 0xff] ^ T1[c3 \u0026 0xff];\n+      len -\u003d 4;\n+    }\n+    while(len \u003e 0) {\n+      crc \u003d (crc \u003e\u003e\u003e 8) ^ T1[(crc ^ b[off++]) \u0026 0xff];\n+      len--;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void update(byte[] b, int off, int len) {\n    while(len \u003e 3) {\n      int c0 \u003d crc ^ b[off++];\n      int c1 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n      int c2 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n      int c3 \u003d (crc \u003e\u003e\u003e\u003d 8) ^ b[off++];\n      crc \u003d T4[c0 \u0026 0xff] ^ T3[c1 \u0026 0xff] ^ T2[c2 \u0026 0xff] ^ T1[c3 \u0026 0xff];\n      len -\u003d 4;\n    }\n    while(len \u003e 0) {\n      crc \u003d (crc \u003e\u003e\u003e 8) ^ T1[(crc ^ b[off++]) \u0026 0xff];\n      len--;\n    }\n  }",
      "path": "src/java/org/apache/hadoop/util/PureJavaCrc32.java"
    }
  }
}