{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PlacementConstraintTransformations.java",
  "functionName": "visit",
  "functionId": "visit___constraint-SingleConstraint",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/resource/PlacementConstraintTransformations.java",
  "functionStartLine": 76,
  "functionEndLine": 79,
  "numCommitsSeen": 3,
  "timeTaken": 912,
  "changeHistory": [
    "8779a35742085fadddccc21342b55d4f17fae5c2",
    "33a796d9b778bf7350e87a4e36ca30c925cf7036"
  ],
  "changeHistoryShort": {
    "8779a35742085fadddccc21342b55d4f17fae5c2": "Ybodychange",
    "33a796d9b778bf7350e87a4e36ca30c925cf7036": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8779a35742085fadddccc21342b55d4f17fae5c2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7709. Remove SELF from TargetExpression type. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "8779a35742085fadddccc21342b55d4f17fae5c2",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "33a796d9b778bf7350e87a4e36ca30c925cf7036",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,15 @@\n     public AbstractConstraint visit(SingleConstraint constraint) {\n       AbstractConstraint transformedConstraint \u003d constraint;\n-      // Check if it is a cardinality constraint.\n-      if (constraint.getTargetExpressions().size() \u003d\u003d 1) {\n-        TargetExpression targetExpr \u003d\n-            constraint.getTargetExpressions().iterator().next();\n-        if (targetExpr.getTargetType() \u003d\u003d TargetExpression.TargetType.SELF) {\n-          transformedConstraint \u003d new CardinalityConstraint(\n-              constraint.getScope(), constraint.getMinCardinality(),\n-              constraint.getMaxCardinality());\n-        }\n-      }\n       // Check if it is a target constraint.\n       if (constraint.getMinCardinality() \u003d\u003d 1\n           \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d Integer.MAX_VALUE) {\n         transformedConstraint \u003d new TargetConstraint(TargetOperator.IN,\n             constraint.getScope(), constraint.getTargetExpressions());\n       } else if (constraint.getMinCardinality() \u003d\u003d 0\n           \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d 0) {\n         transformedConstraint \u003d new TargetConstraint(TargetOperator.NOT_IN,\n             constraint.getScope(), constraint.getTargetExpressions());\n       }\n \n       return transformedConstraint;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public AbstractConstraint visit(SingleConstraint constraint) {\n      AbstractConstraint transformedConstraint \u003d constraint;\n      // Check if it is a target constraint.\n      if (constraint.getMinCardinality() \u003d\u003d 1\n          \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d Integer.MAX_VALUE) {\n        transformedConstraint \u003d new TargetConstraint(TargetOperator.IN,\n            constraint.getScope(), constraint.getTargetExpressions());\n      } else if (constraint.getMinCardinality() \u003d\u003d 0\n          \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d 0) {\n        transformedConstraint \u003d new TargetConstraint(TargetOperator.NOT_IN,\n            constraint.getScope(), constraint.getTargetExpressions());\n      }\n\n      return transformedConstraint;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/resource/PlacementConstraintTransformations.java",
      "extendedDetails": {}
    },
    "33a796d9b778bf7350e87a4e36ca30c925cf7036": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6593. [API] Introduce Placement Constraint object. (Konstantinos Karanasos via wangda)\n\nChange-Id: Id00edb7185fdf01cce6e40f920cac3585f8cbe9c\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "33a796d9b778bf7350e87a4e36ca30c925cf7036",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,25 @@\n+    public AbstractConstraint visit(SingleConstraint constraint) {\n+      AbstractConstraint transformedConstraint \u003d constraint;\n+      // Check if it is a cardinality constraint.\n+      if (constraint.getTargetExpressions().size() \u003d\u003d 1) {\n+        TargetExpression targetExpr \u003d\n+            constraint.getTargetExpressions().iterator().next();\n+        if (targetExpr.getTargetType() \u003d\u003d TargetExpression.TargetType.SELF) {\n+          transformedConstraint \u003d new CardinalityConstraint(\n+              constraint.getScope(), constraint.getMinCardinality(),\n+              constraint.getMaxCardinality());\n+        }\n+      }\n+      // Check if it is a target constraint.\n+      if (constraint.getMinCardinality() \u003d\u003d 1\n+          \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d Integer.MAX_VALUE) {\n+        transformedConstraint \u003d new TargetConstraint(TargetOperator.IN,\n+            constraint.getScope(), constraint.getTargetExpressions());\n+      } else if (constraint.getMinCardinality() \u003d\u003d 0\n+          \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d 0) {\n+        transformedConstraint \u003d new TargetConstraint(TargetOperator.NOT_IN,\n+            constraint.getScope(), constraint.getTargetExpressions());\n+      }\n+\n+      return transformedConstraint;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public AbstractConstraint visit(SingleConstraint constraint) {\n      AbstractConstraint transformedConstraint \u003d constraint;\n      // Check if it is a cardinality constraint.\n      if (constraint.getTargetExpressions().size() \u003d\u003d 1) {\n        TargetExpression targetExpr \u003d\n            constraint.getTargetExpressions().iterator().next();\n        if (targetExpr.getTargetType() \u003d\u003d TargetExpression.TargetType.SELF) {\n          transformedConstraint \u003d new CardinalityConstraint(\n              constraint.getScope(), constraint.getMinCardinality(),\n              constraint.getMaxCardinality());\n        }\n      }\n      // Check if it is a target constraint.\n      if (constraint.getMinCardinality() \u003d\u003d 1\n          \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d Integer.MAX_VALUE) {\n        transformedConstraint \u003d new TargetConstraint(TargetOperator.IN,\n            constraint.getScope(), constraint.getTargetExpressions());\n      } else if (constraint.getMinCardinality() \u003d\u003d 0\n          \u0026\u0026 constraint.getMaxCardinality() \u003d\u003d 0) {\n        transformedConstraint \u003d new TargetConstraint(TargetOperator.NOT_IN,\n            constraint.getScope(), constraint.getTargetExpressions());\n      }\n\n      return transformedConstraint;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/resource/PlacementConstraintTransformations.java"
    }
  }
}