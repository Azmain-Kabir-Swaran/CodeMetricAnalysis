{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppCatalogSolrClient.java",
  "functionName": "register",
  "functionId": "register___app-AppStoreEntry",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java",
  "functionStartLine": 359,
  "functionEndLine": 390,
  "numCommitsSeen": 7,
  "timeTaken": 1028,
  "changeHistory": [
    "b2cdf809bce10f680048cacf45806f0abb4f4804",
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06"
  ],
  "changeHistoryShort": {
    "b2cdf809bce10f680048cacf45806f0abb4f4804": "Ybodychange",
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2cdf809bce10f680048cacf45806f0abb4f4804": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9281. Add express upgrade button to Appcatalog UI. Contributed by Eric Yang\n",
      "commitDate": "13/04/19 8:55 AM",
      "commitName": "b2cdf809bce10f680048cacf45806f0abb4f4804",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "01/04/19 9:21 AM",
      "commitNameOld": "35b0a381e7bc8bbf74adfa51feee1d54d8675c06",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 11.98,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,32 @@\n   protected void register(AppStoreEntry app) throws IOException {\n     Collection\u003cSolrInputDocument\u003e docs \u003d new HashSet\u003cSolrInputDocument\u003e();\n     SolrClient solr \u003d getSolrClient();\n     ObjectMapper mapper \u003d new ObjectMapper();\n     mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n     try {\n       SolrInputDocument buffer \u003d new SolrInputDocument();\n       buffer.setField(\"id\", java.util.UUID.randomUUID().toString()\n           .substring(0, 11));\n       buffer.setField(\"org_s\", app.getOrg());\n       buffer.setField(\"name_s\", app.getName());\n       buffer.setField(\"desc_s\", app.getDesc());\n       if (app.getIcon() !\u003d null) {\n         buffer.setField(\"icon_s\", app.getIcon());\n       }\n       buffer.setField(\"type_s\", \"AppStoreEntry\");\n       buffer.setField(\"like_i\", app.getLike());\n       buffer.setField(\"download_i\", app.getDownload());\n \n       // Keep only YARN data model for yarnfile field\n       String yarnFile \u003d mapper.writeValueAsString(app);\n       LOG.info(\"app:\"+yarnFile);\n       Service yarnApp \u003d mapper.readValue(yarnFile, Service.class);\n       buffer.setField(\"yarnfile_s\", mapper.writeValueAsString(yarnApp));\n \n       docs.add(buffer);\n-      // Commit Solr changes.\n-      UpdateResponse detailsResponse \u003d solr.add(docs);\n-      if (detailsResponse.getStatus() !\u003d 0) {\n-        throw new IOException(\"Unable to register application \" +\n-            \"in Application Store.\");\n-      }\n-      solr.commit();\n+      commitSolrChanges(solr, docs);\n     } catch (SolrServerException | IOException e) {\n       throw new IOException(\"Unable to register application \" +\n-          \"in Application Store. \"+ e.getMessage());\n+          \"in Application Store. \", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void register(AppStoreEntry app) throws IOException {\n    Collection\u003cSolrInputDocument\u003e docs \u003d new HashSet\u003cSolrInputDocument\u003e();\n    SolrClient solr \u003d getSolrClient();\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    try {\n      SolrInputDocument buffer \u003d new SolrInputDocument();\n      buffer.setField(\"id\", java.util.UUID.randomUUID().toString()\n          .substring(0, 11));\n      buffer.setField(\"org_s\", app.getOrg());\n      buffer.setField(\"name_s\", app.getName());\n      buffer.setField(\"desc_s\", app.getDesc());\n      if (app.getIcon() !\u003d null) {\n        buffer.setField(\"icon_s\", app.getIcon());\n      }\n      buffer.setField(\"type_s\", \"AppStoreEntry\");\n      buffer.setField(\"like_i\", app.getLike());\n      buffer.setField(\"download_i\", app.getDownload());\n\n      // Keep only YARN data model for yarnfile field\n      String yarnFile \u003d mapper.writeValueAsString(app);\n      LOG.info(\"app:\"+yarnFile);\n      Service yarnApp \u003d mapper.readValue(yarnFile, Service.class);\n      buffer.setField(\"yarnfile_s\", mapper.writeValueAsString(yarnApp));\n\n      docs.add(buffer);\n      commitSolrChanges(solr, docs);\n    } catch (SolrServerException | IOException e) {\n      throw new IOException(\"Unable to register application \" +\n          \"in Application Store. \", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java",
      "extendedDetails": {}
    },
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9255. Improve recommend applications order and fix findbugs warnings. Contributed by Eric Yang\n",
      "commitDate": "01/04/19 9:21 AM",
      "commitName": "35b0a381e7bc8bbf74adfa51feee1d54d8675c06",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,38 @@\n+  protected void register(AppStoreEntry app) throws IOException {\n+    Collection\u003cSolrInputDocument\u003e docs \u003d new HashSet\u003cSolrInputDocument\u003e();\n+    SolrClient solr \u003d getSolrClient();\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n+    try {\n+      SolrInputDocument buffer \u003d new SolrInputDocument();\n+      buffer.setField(\"id\", java.util.UUID.randomUUID().toString()\n+          .substring(0, 11));\n+      buffer.setField(\"org_s\", app.getOrg());\n+      buffer.setField(\"name_s\", app.getName());\n+      buffer.setField(\"desc_s\", app.getDesc());\n+      if (app.getIcon() !\u003d null) {\n+        buffer.setField(\"icon_s\", app.getIcon());\n+      }\n+      buffer.setField(\"type_s\", \"AppStoreEntry\");\n+      buffer.setField(\"like_i\", app.getLike());\n+      buffer.setField(\"download_i\", app.getDownload());\n+\n+      // Keep only YARN data model for yarnfile field\n+      String yarnFile \u003d mapper.writeValueAsString(app);\n+      LOG.info(\"app:\"+yarnFile);\n+      Service yarnApp \u003d mapper.readValue(yarnFile, Service.class);\n+      buffer.setField(\"yarnfile_s\", mapper.writeValueAsString(yarnApp));\n+\n+      docs.add(buffer);\n+      // Commit Solr changes.\n+      UpdateResponse detailsResponse \u003d solr.add(docs);\n+      if (detailsResponse.getStatus() !\u003d 0) {\n+        throw new IOException(\"Unable to register application \" +\n+            \"in Application Store.\");\n+      }\n+      solr.commit();\n+    } catch (SolrServerException | IOException e) {\n+      throw new IOException(\"Unable to register application \" +\n+          \"in Application Store. \"+ e.getMessage());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void register(AppStoreEntry app) throws IOException {\n    Collection\u003cSolrInputDocument\u003e docs \u003d new HashSet\u003cSolrInputDocument\u003e();\n    SolrClient solr \u003d getSolrClient();\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    try {\n      SolrInputDocument buffer \u003d new SolrInputDocument();\n      buffer.setField(\"id\", java.util.UUID.randomUUID().toString()\n          .substring(0, 11));\n      buffer.setField(\"org_s\", app.getOrg());\n      buffer.setField(\"name_s\", app.getName());\n      buffer.setField(\"desc_s\", app.getDesc());\n      if (app.getIcon() !\u003d null) {\n        buffer.setField(\"icon_s\", app.getIcon());\n      }\n      buffer.setField(\"type_s\", \"AppStoreEntry\");\n      buffer.setField(\"like_i\", app.getLike());\n      buffer.setField(\"download_i\", app.getDownload());\n\n      // Keep only YARN data model for yarnfile field\n      String yarnFile \u003d mapper.writeValueAsString(app);\n      LOG.info(\"app:\"+yarnFile);\n      Service yarnApp \u003d mapper.readValue(yarnFile, Service.class);\n      buffer.setField(\"yarnfile_s\", mapper.writeValueAsString(yarnApp));\n\n      docs.add(buffer);\n      // Commit Solr changes.\n      UpdateResponse detailsResponse \u003d solr.add(docs);\n      if (detailsResponse.getStatus() !\u003d 0) {\n        throw new IOException(\"Unable to register application \" +\n            \"in Application Store.\");\n      }\n      solr.commit();\n    } catch (SolrServerException | IOException e) {\n      throw new IOException(\"Unable to register application \" +\n          \"in Application Store. \"+ e.getMessage());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java"
    }
  }
}