{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodecUtil.java",
  "functionName": "createCodec",
  "functionId": "createCodec___conf-Configuration__codecClassName-String__options-ErasureCodecOptions",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
  "functionStartLine": 213,
  "functionEndLine": 235,
  "numCommitsSeen": 18,
  "timeTaken": 1033,
  "changeHistory": [
    "c023c748869063fb67d14ea996569c42578d1cea"
  ],
  "changeHistoryShort": {
    "c023c748869063fb67d14ea996569c42578d1cea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c023c748869063fb67d14ea996569c42578d1cea": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13061. Refactor erasure coders. Contributed by Kai Sasaki\n",
      "commitDate": "17/10/16 11:02 PM",
      "commitName": "c023c748869063fb67d14ea996569c42578d1cea",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,23 @@\n+  private static ErasureCodec createCodec(Configuration conf,\n+      String codecClassName, ErasureCodecOptions options) {\n+    ErasureCodec codec \u003d null;\n+    try {\n+      Class\u003c? extends ErasureCodec\u003e codecClass \u003d\n+              conf.getClassByName(codecClassName)\n+              .asSubclass(ErasureCodec.class);\n+      Constructor\u003c? extends ErasureCodec\u003e constructor\n+          \u003d codecClass.getConstructor(Configuration.class,\n+          ErasureCodecOptions.class);\n+      codec \u003d constructor.newInstance(conf, options);\n+    } catch (ClassNotFoundException | InstantiationException |\n+            IllegalAccessException | NoSuchMethodException |\n+            InvocationTargetException e) {\n+      throw new RuntimeException(\"Failed to create erasure codec\", e);\n+    }\n+\n+    if (codec \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create erasure codec\");\n+    }\n+\n+    return codec;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ErasureCodec createCodec(Configuration conf,\n      String codecClassName, ErasureCodecOptions options) {\n    ErasureCodec codec \u003d null;\n    try {\n      Class\u003c? extends ErasureCodec\u003e codecClass \u003d\n              conf.getClassByName(codecClassName)\n              .asSubclass(ErasureCodec.class);\n      Constructor\u003c? extends ErasureCodec\u003e constructor\n          \u003d codecClass.getConstructor(Configuration.class,\n          ErasureCodecOptions.class);\n      codec \u003d constructor.newInstance(conf, options);\n    } catch (ClassNotFoundException | InstantiationException |\n            IllegalAccessException | NoSuchMethodException |\n            InvocationTargetException e) {\n      throw new RuntimeException(\"Failed to create erasure codec\", e);\n    }\n\n    if (codec \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create erasure codec\");\n    }\n\n    return codec;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java"
    }
  }
}