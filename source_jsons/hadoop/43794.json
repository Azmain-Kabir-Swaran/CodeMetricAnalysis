{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceUtils.java",
  "functionName": "getLocalHostName",
  "functionId": "getLocalHostName___conf-Configuration(annotations-@Nullable)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java",
  "functionStartLine": 564,
  "functionEndLine": 581,
  "numCommitsSeen": 7,
  "timeTaken": 990,
  "changeHistory": [
    "d30d57828fddaa8667de49af879cde999907c7f6"
  ],
  "changeHistoryShort": {
    "d30d57828fddaa8667de49af879cde999907c7f6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d30d57828fddaa8667de49af879cde999907c7f6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
      "commitDate": "04/12/17 12:11 PM",
      "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,18 @@\n+  public static String getLocalHostName(@Nullable Configuration conf)\n+      throws UnknownHostException {\n+    if (conf !\u003d null) {\n+      String dnsInterface \u003d conf.get(HADOOP_SECURITY_DNS_INTERFACE_KEY);\n+      String nameServer \u003d conf.get(HADOOP_SECURITY_DNS_NAMESERVER_KEY);\n+\n+      if (dnsInterface !\u003d null) {\n+        return DNS.getDefaultHost(dnsInterface, nameServer, true);\n+      } else if (nameServer !\u003d null) {\n+        throw new IllegalArgumentException(HADOOP_SECURITY_DNS_NAMESERVER_KEY +\n+            \" requires \" + HADOOP_SECURITY_DNS_INTERFACE_KEY + \". Check your\" +\n+            \"configuration.\");\n+      }\n+    }\n+\n+    // Fallback to querying the default hostname as we did before.\n+    return InetAddress.getLocalHost().getCanonicalHostName();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getLocalHostName(@Nullable Configuration conf)\n      throws UnknownHostException {\n    if (conf !\u003d null) {\n      String dnsInterface \u003d conf.get(HADOOP_SECURITY_DNS_INTERFACE_KEY);\n      String nameServer \u003d conf.get(HADOOP_SECURITY_DNS_NAMESERVER_KEY);\n\n      if (dnsInterface !\u003d null) {\n        return DNS.getDefaultHost(dnsInterface, nameServer, true);\n      } else if (nameServer !\u003d null) {\n        throw new IllegalArgumentException(HADOOP_SECURITY_DNS_NAMESERVER_KEY +\n            \" requires \" + HADOOP_SECURITY_DNS_INTERFACE_KEY + \". Check your\" +\n            \"configuration.\");\n      }\n    }\n\n    // Fallback to querying the default hostname as we did before.\n    return InetAddress.getLocalHost().getCanonicalHostName();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceUtils.java"
    }
  }
}