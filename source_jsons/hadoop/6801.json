{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageSerialization.java",
  "functionName": "writeINodeReference",
  "functionId": "writeINodeReference___ref-INodeReference__out-DataOutput__writeUnderConstruction-boolean__referenceMap-ReferenceMap",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
  "functionStartLine": 297,
  "functionEndLine": 323,
  "numCommitsSeen": 62,
  "timeTaken": 2215,
  "changeHistory": [
    "49d5cff49011cc0878665204e22b5c832bc914ce",
    "97f58955a6045b373ab73653bf26ab5922b00cf3"
  ],
  "changeHistoryShort": {
    "49d5cff49011cc0878665204e22b5c832bc914ce": "Ybodychange",
    "97f58955a6045b373ab73653bf26ab5922b00cf3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49d5cff49011cc0878665204e22b5c832bc914ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8559. Erasure Coding: fix non-protobuf fsimage for striped blocks. (Jing Zhao via yliu)\n",
      "commitDate": "14/06/15 12:39 AM",
      "commitName": "49d5cff49011cc0878665204e22b5c832bc914ce",
      "commitAuthor": "yliu",
      "commitDateOld": "26/05/15 12:02 PM",
      "commitNameOld": "c9103e9cacc67a614940e32fa87c5dbc3daa60de",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 18.53,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private static void writeINodeReference(INodeReference ref, DataOutput out,\n       boolean writeUnderConstruction, ReferenceMap referenceMap\n       ) throws IOException {\n     writeLocalName(ref, out);\n     out.writeLong(ref.getId());\n     out.writeShort(0);  // replication\n     out.writeLong(0);   // modification time\n     out.writeLong(0);   // access time\n     out.writeLong(0);   // preferred block size\n     out.writeInt(-3);   // # of blocks\n \n     final boolean isWithName \u003d ref instanceof INodeReference.WithName;\n     out.writeBoolean(isWithName);\n \n     if (!isWithName) {\n       Preconditions.checkState(ref instanceof INodeReference.DstReference);\n       // dst snapshot id\n-      out.writeInt(((INodeReference.DstReference) ref).getDstSnapshotId());\n+      out.writeInt(ref.getDstSnapshotId());\n     } else {\n       out.writeInt(((INodeReference.WithName) ref).getLastSnapshotId());\n     }\n \n     final INodeReference.WithCount withCount\n         \u003d (INodeReference.WithCount)ref.getReferredINode();\n     referenceMap.writeINodeReferenceWithCount(withCount, out,\n         writeUnderConstruction);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void writeINodeReference(INodeReference ref, DataOutput out,\n      boolean writeUnderConstruction, ReferenceMap referenceMap\n      ) throws IOException {\n    writeLocalName(ref, out);\n    out.writeLong(ref.getId());\n    out.writeShort(0);  // replication\n    out.writeLong(0);   // modification time\n    out.writeLong(0);   // access time\n    out.writeLong(0);   // preferred block size\n    out.writeInt(-3);   // # of blocks\n\n    final boolean isWithName \u003d ref instanceof INodeReference.WithName;\n    out.writeBoolean(isWithName);\n\n    if (!isWithName) {\n      Preconditions.checkState(ref instanceof INodeReference.DstReference);\n      // dst snapshot id\n      out.writeInt(ref.getDstSnapshotId());\n    } else {\n      out.writeInt(((INodeReference.WithName) ref).getLastSnapshotId());\n    }\n\n    final INodeReference.WithCount withCount\n        \u003d (INodeReference.WithCount)ref.getReferredINode();\n    referenceMap.writeINodeReferenceWithCount(withCount, out,\n        writeUnderConstruction);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "97f58955a6045b373ab73653bf26ab5922b00cf3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6293. Issues with OIV processing PB-based fsimages. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 6:15 PM",
      "commitName": "97f58955a6045b373ab73653bf26ab5922b00cf3",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,27 @@\n+  private static void writeINodeReference(INodeReference ref, DataOutput out,\n+      boolean writeUnderConstruction, ReferenceMap referenceMap\n+      ) throws IOException {\n+    writeLocalName(ref, out);\n+    out.writeLong(ref.getId());\n+    out.writeShort(0);  // replication\n+    out.writeLong(0);   // modification time\n+    out.writeLong(0);   // access time\n+    out.writeLong(0);   // preferred block size\n+    out.writeInt(-3);   // # of blocks\n+\n+    final boolean isWithName \u003d ref instanceof INodeReference.WithName;\n+    out.writeBoolean(isWithName);\n+\n+    if (!isWithName) {\n+      Preconditions.checkState(ref instanceof INodeReference.DstReference);\n+      // dst snapshot id\n+      out.writeInt(((INodeReference.DstReference) ref).getDstSnapshotId());\n+    } else {\n+      out.writeInt(((INodeReference.WithName) ref).getLastSnapshotId());\n+    }\n+\n+    final INodeReference.WithCount withCount\n+        \u003d (INodeReference.WithCount)ref.getReferredINode();\n+    referenceMap.writeINodeReferenceWithCount(withCount, out,\n+        writeUnderConstruction);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void writeINodeReference(INodeReference ref, DataOutput out,\n      boolean writeUnderConstruction, ReferenceMap referenceMap\n      ) throws IOException {\n    writeLocalName(ref, out);\n    out.writeLong(ref.getId());\n    out.writeShort(0);  // replication\n    out.writeLong(0);   // modification time\n    out.writeLong(0);   // access time\n    out.writeLong(0);   // preferred block size\n    out.writeInt(-3);   // # of blocks\n\n    final boolean isWithName \u003d ref instanceof INodeReference.WithName;\n    out.writeBoolean(isWithName);\n\n    if (!isWithName) {\n      Preconditions.checkState(ref instanceof INodeReference.DstReference);\n      // dst snapshot id\n      out.writeInt(((INodeReference.DstReference) ref).getDstSnapshotId());\n    } else {\n      out.writeInt(((INodeReference.WithName) ref).getLastSnapshotId());\n    }\n\n    final INodeReference.WithCount withCount\n        \u003d (INodeReference.WithCount)ref.getReferredINode();\n    referenceMap.writeINodeReferenceWithCount(withCount, out,\n        writeUnderConstruction);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java"
    }
  }
}