{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsShell.java",
  "functionName": "printInfo",
  "functionId": "printInfo___out-PrintStream__cmd-String__showHelp-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
  "functionStartLine": 212,
  "functionEndLine": 247,
  "numCommitsSeen": 66,
  "timeTaken": 1503,
  "changeHistory": [
    "ceb3d1c17051665b67977bb5153c697239be5049",
    "be3fdd1c40140e24df1a5414cf91537862b66e82",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3"
  ],
  "changeHistoryShort": {
    "ceb3d1c17051665b67977bb5153c697239be5049": "Ybodychange",
    "be3fdd1c40140e24df1a5414cf91537862b66e82": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ceb3d1c17051665b67977bb5153c697239be5049": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7349. Support DFS command for the EC encoding (Contributed by Vinayakumar B)\n",
      "commitDate": "26/05/15 11:59 AM",
      "commitName": "ceb3d1c17051665b67977bb5153c697239be5049",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "12/06/14 11:39 PM",
      "commitNameOld": "be3fdd1c40140e24df1a5414cf91537862b66e82",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 347.51,
      "commitsBetweenForRepo": 3101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n     if (cmd !\u003d null) {\n       // display help or usage for one command\n       Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n       if (instance \u003d\u003d null) {\n         throw new UnknownCommandException(cmd);\n       }\n       if (showHelp) {\n         printInstanceHelp(out, instance);\n       } else {\n         printInstanceUsage(out, instance);\n       }\n     } else {\n       // display help or usage for all commands \n-      out.println(usagePrefix);\n+      out.println(getUsagePrefix());\n       \n       // display list of short usages\n       ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n       for (String name : commandFactory.getNames()) {\n         Command instance \u003d commandFactory.getInstance(name);\n         if (!instance.isDeprecated()) {\n           out.println(\"\\t[\" + instance.getUsage() + \"]\");\n           instances.add(instance);\n         }\n       }\n       // display long descriptions for each command\n       if (showHelp) {\n         for (Command instance : instances) {\n           out.println();\n           printInstanceHelp(out, instance);\n         }\n       }\n       out.println();\n       ToolRunner.printGenericCommandUsage(out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n    if (cmd !\u003d null) {\n      // display help or usage for one command\n      Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n      if (instance \u003d\u003d null) {\n        throw new UnknownCommandException(cmd);\n      }\n      if (showHelp) {\n        printInstanceHelp(out, instance);\n      } else {\n        printInstanceUsage(out, instance);\n      }\n    } else {\n      // display help or usage for all commands \n      out.println(getUsagePrefix());\n      \n      // display list of short usages\n      ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n      for (String name : commandFactory.getNames()) {\n        Command instance \u003d commandFactory.getInstance(name);\n        if (!instance.isDeprecated()) {\n          out.println(\"\\t[\" + instance.getUsage() + \"]\");\n          instances.add(instance);\n        }\n      }\n      // display long descriptions for each command\n      if (showHelp) {\n        for (Command instance : instances) {\n          out.println();\n          printInstanceHelp(out, instance);\n        }\n      }\n      out.println();\n      ToolRunner.printGenericCommandUsage(out);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {}
    },
    "be3fdd1c40140e24df1a5414cf91537862b66e82": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10691. Improve the readability of \u0027hadoop fs -help\u0027. Contributed by Lei Xu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/14 11:39 PM",
      "commitName": "be3fdd1c40140e24df1a5414cf91537862b66e82",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "18/06/13 2:56 PM",
      "commitNameOld": "3ab7f86c16c0c3df89f5157aab0bb5d66fbcc2d5",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 359.36,
      "commitsBetweenForRepo": 2342,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n     if (cmd !\u003d null) {\n       // display help or usage for one command\n       Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n       if (instance \u003d\u003d null) {\n         throw new UnknownCommandException(cmd);\n       }\n       if (showHelp) {\n         printInstanceHelp(out, instance);\n       } else {\n         printInstanceUsage(out, instance);\n       }\n     } else {\n       // display help or usage for all commands \n       out.println(usagePrefix);\n       \n       // display list of short usages\n       ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n       for (String name : commandFactory.getNames()) {\n         Command instance \u003d commandFactory.getInstance(name);\n         if (!instance.isDeprecated()) {\n-          System.out.println(\"\\t[\" + instance.getUsage() + \"]\");\n+          out.println(\"\\t[\" + instance.getUsage() + \"]\");\n           instances.add(instance);\n         }\n       }\n       // display long descriptions for each command\n       if (showHelp) {\n         for (Command instance : instances) {\n           out.println();\n           printInstanceHelp(out, instance);\n         }\n       }\n       out.println();\n       ToolRunner.printGenericCommandUsage(out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n    if (cmd !\u003d null) {\n      // display help or usage for one command\n      Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n      if (instance \u003d\u003d null) {\n        throw new UnknownCommandException(cmd);\n      }\n      if (showHelp) {\n        printInstanceHelp(out, instance);\n      } else {\n        printInstanceUsage(out, instance);\n      }\n    } else {\n      // display help or usage for all commands \n      out.println(usagePrefix);\n      \n      // display list of short usages\n      ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n      for (String name : commandFactory.getNames()) {\n        Command instance \u003d commandFactory.getInstance(name);\n        if (!instance.isDeprecated()) {\n          out.println(\"\\t[\" + instance.getUsage() + \"]\");\n          instances.add(instance);\n        }\n      }\n      // display long descriptions for each command\n      if (showHelp) {\n        for (Command instance : instances) {\n          out.println();\n          printInstanceHelp(out, instance);\n        }\n      }\n      out.println();\n      ToolRunner.printGenericCommandUsage(out);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n    if (cmd !\u003d null) {\n      // display help or usage for one command\n      Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n      if (instance \u003d\u003d null) {\n        throw new UnknownCommandException(cmd);\n      }\n      if (showHelp) {\n        printInstanceHelp(out, instance);\n      } else {\n        printInstanceUsage(out, instance);\n      }\n    } else {\n      // display help or usage for all commands \n      out.println(usagePrefix);\n      \n      // display list of short usages\n      ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n      for (String name : commandFactory.getNames()) {\n        Command instance \u003d commandFactory.getInstance(name);\n        if (!instance.isDeprecated()) {\n          System.out.println(\"\\t[\" + instance.getUsage() + \"]\");\n          instances.add(instance);\n        }\n      }\n      // display long descriptions for each command\n      if (showHelp) {\n        for (Command instance : instances) {\n          out.println();\n          printInstanceHelp(out, instance);\n        }\n      }\n      out.println();\n      ToolRunner.printGenericCommandUsage(out);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n    if (cmd !\u003d null) {\n      // display help or usage for one command\n      Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n      if (instance \u003d\u003d null) {\n        throw new UnknownCommandException(cmd);\n      }\n      if (showHelp) {\n        printInstanceHelp(out, instance);\n      } else {\n        printInstanceUsage(out, instance);\n      }\n    } else {\n      // display help or usage for all commands \n      out.println(usagePrefix);\n      \n      // display list of short usages\n      ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n      for (String name : commandFactory.getNames()) {\n        Command instance \u003d commandFactory.getInstance(name);\n        if (!instance.isDeprecated()) {\n          System.out.println(\"\\t[\" + instance.getUsage() + \"]\");\n          instances.add(instance);\n        }\n      }\n      // display long descriptions for each command\n      if (showHelp) {\n        for (Command instance : instances) {\n          out.println();\n          printInstanceHelp(out, instance);\n        }\n      }\n      out.println();\n      ToolRunner.printGenericCommandUsage(out);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FsShell.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FsShell.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n    if (cmd !\u003d null) {\n      // display help or usage for one command\n      Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n      if (instance \u003d\u003d null) {\n        throw new UnknownCommandException(cmd);\n      }\n      if (showHelp) {\n        printInstanceHelp(out, instance);\n      } else {\n        printInstanceUsage(out, instance);\n      }\n    } else {\n      // display help or usage for all commands \n      out.println(usagePrefix);\n      \n      // display list of short usages\n      ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n      for (String name : commandFactory.getNames()) {\n        Command instance \u003d commandFactory.getInstance(name);\n        if (!instance.isDeprecated()) {\n          System.out.println(\"\\t[\" + instance.getUsage() + \"]\");\n          instances.add(instance);\n        }\n      }\n      // display long descriptions for each command\n      if (showHelp) {\n        for (Command instance : instances) {\n          out.println();\n          printInstanceHelp(out, instance);\n        }\n      }\n      out.println();\n      ToolRunner.printGenericCommandUsage(out);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FsShell.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FsShell.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FsShell.java"
      }
    },
    "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132764 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/06/11 1:53 PM",
      "commitName": "44a35b5d9accc4ecf7b1bbf762e593540bafe6a3",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,36 @@\n+  private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n+    if (cmd !\u003d null) {\n+      // display help or usage for one command\n+      Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n+      if (instance \u003d\u003d null) {\n+        throw new UnknownCommandException(cmd);\n+      }\n+      if (showHelp) {\n+        printInstanceHelp(out, instance);\n+      } else {\n+        printInstanceUsage(out, instance);\n+      }\n+    } else {\n+      // display help or usage for all commands \n+      out.println(usagePrefix);\n+      \n+      // display list of short usages\n+      ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n+      for (String name : commandFactory.getNames()) {\n+        Command instance \u003d commandFactory.getInstance(name);\n+        if (!instance.isDeprecated()) {\n+          System.out.println(\"\\t[\" + instance.getUsage() + \"]\");\n+          instances.add(instance);\n+        }\n+      }\n+      // display long descriptions for each command\n+      if (showHelp) {\n+        for (Command instance : instances) {\n+          out.println();\n+          printInstanceHelp(out, instance);\n+        }\n+      }\n+      out.println();\n+      ToolRunner.printGenericCommandUsage(out);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printInfo(PrintStream out, String cmd, boolean showHelp) {\n    if (cmd !\u003d null) {\n      // display help or usage for one command\n      Command instance \u003d commandFactory.getInstance(\"-\" + cmd);\n      if (instance \u003d\u003d null) {\n        throw new UnknownCommandException(cmd);\n      }\n      if (showHelp) {\n        printInstanceHelp(out, instance);\n      } else {\n        printInstanceUsage(out, instance);\n      }\n    } else {\n      // display help or usage for all commands \n      out.println(usagePrefix);\n      \n      // display list of short usages\n      ArrayList\u003cCommand\u003e instances \u003d new ArrayList\u003cCommand\u003e();\n      for (String name : commandFactory.getNames()) {\n        Command instance \u003d commandFactory.getInstance(name);\n        if (!instance.isDeprecated()) {\n          System.out.println(\"\\t[\" + instance.getUsage() + \"]\");\n          instances.add(instance);\n        }\n      }\n      // display long descriptions for each command\n      if (showHelp) {\n        for (Command instance : instances) {\n          out.println();\n          printInstanceHelp(out, instance);\n        }\n      }\n      out.println();\n      ToolRunner.printGenericCommandUsage(out);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FsShell.java"
    }
  }
}