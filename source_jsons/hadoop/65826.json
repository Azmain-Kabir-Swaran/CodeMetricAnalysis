{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DynamoDBMetadataStore.java",
  "functionName": "prune",
  "functionId": "prune___pruneMode-PruneMode__cutoff-long",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
  "functionStartLine": 1568,
  "functionEndLine": 1570,
  "numCommitsSeen": 68,
  "timeTaken": 3557,
  "changeHistory": [
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
    "ea3849f0ccd32b2f8acbc6107de3b9e91803ed4a",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c": "Ymultichange(Yparameterchange,Ybodychange)",
    "ea3849f0ccd32b2f8acbc6107de3b9e91803ed4a": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16279. S3Guard: Implement time-based (TTL) expiry for entries (and tombstones).\n\nContributed by Gabor Bota.\n\nChange-Id: I73a2d2861901dedfe7a0e783b310fbb95e7c1af9\n",
      "commitDate": "16/06/19 9:05 AM",
      "commitName": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
      "commitAuthor": "Gabor Bota",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16279. S3Guard: Implement time-based (TTL) expiry for entries (and tombstones).\n\nContributed by Gabor Bota.\n\nChange-Id: I73a2d2861901dedfe7a0e783b310fbb95e7c1af9\n",
          "commitDate": "16/06/19 9:05 AM",
          "commitName": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "07/06/19 10:26 AM",
          "commitNameOld": "4e38dafde4dce8cd8c368783a291e830f06e1def",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 8.94,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  public void prune(long modTime) throws IOException {\n-    prune(modTime, \"/\");\n+  public void prune(PruneMode pruneMode, long cutoff) throws IOException {\n+    prune(pruneMode, cutoff, \"/\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void prune(PruneMode pruneMode, long cutoff) throws IOException {\n    prune(pruneMode, cutoff, \"/\");\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
          "extendedDetails": {
            "oldValue": "[modTime-long]",
            "newValue": "[pruneMode-PruneMode, cutoff-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16279. S3Guard: Implement time-based (TTL) expiry for entries (and tombstones).\n\nContributed by Gabor Bota.\n\nChange-Id: I73a2d2861901dedfe7a0e783b310fbb95e7c1af9\n",
          "commitDate": "16/06/19 9:05 AM",
          "commitName": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthor": "Gabor Bota",
          "commitDateOld": "07/06/19 10:26 AM",
          "commitNameOld": "4e38dafde4dce8cd8c368783a291e830f06e1def",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 8.94,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  public void prune(long modTime) throws IOException {\n-    prune(modTime, \"/\");\n+  public void prune(PruneMode pruneMode, long cutoff) throws IOException {\n+    prune(pruneMode, cutoff, \"/\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void prune(PruneMode pruneMode, long cutoff) throws IOException {\n    prune(pruneMode, cutoff, \"/\");\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "ea3849f0ccd32b2f8acbc6107de3b9e91803ed4a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14759 S3GuardTool prune to prune specific bucket entries. Contributed by Gabor Bota.\n",
      "commitDate": "05/04/18 8:23 PM",
      "commitName": "ea3849f0ccd32b2f8acbc6107de3b9e91803ed4a",
      "commitAuthor": "Aaron Fabbri",
      "commitDateOld": "05/03/18 6:06 AM",
      "commitNameOld": "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 31.55,
      "commitsBetweenForRepo": 341,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,3 @@\n   public void prune(long modTime) throws IOException {\n-    int itemCount \u003d 0;\n-    try {\n-      Collection\u003cPath\u003e deletionBatch \u003d\n-          new ArrayList\u003c\u003e(S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT);\n-      int delay \u003d conf.getInt(S3GUARD_DDB_BACKGROUND_SLEEP_MSEC_KEY,\n-          S3GUARD_DDB_BACKGROUND_SLEEP_MSEC_DEFAULT);\n-      for (Item item : expiredFiles(modTime)) {\n-        PathMetadata md \u003d PathMetadataDynamoDBTranslation\n-            .itemToPathMetadata(item, username);\n-        Path path \u003d md.getFileStatus().getPath();\n-        deletionBatch.add(path);\n-        itemCount++;\n-        if (deletionBatch.size() \u003d\u003d S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT) {\n-          Thread.sleep(delay);\n-          processBatchWriteRequest(pathToKey(deletionBatch), null);\n-          deletionBatch.clear();\n-        }\n-      }\n-      if (deletionBatch.size() \u003e 0) {\n-        Thread.sleep(delay);\n-        processBatchWriteRequest(pathToKey(deletionBatch), null);\n-      }\n-    } catch (InterruptedException e) {\n-      Thread.currentThread().interrupt();\n-      throw new InterruptedIOException(\"Pruning was interrupted\");\n-    }\n-    LOG.info(\"Finished pruning {} items in batches of {}\", itemCount,\n-        S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT);\n+    prune(modTime, \"/\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void prune(long modTime) throws IOException {\n    prune(modTime, \"/\");\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,30 @@\n+  public void prune(long modTime) throws IOException {\n+    int itemCount \u003d 0;\n+    try {\n+      Collection\u003cPath\u003e deletionBatch \u003d\n+          new ArrayList\u003c\u003e(S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT);\n+      int delay \u003d conf.getInt(S3GUARD_DDB_BACKGROUND_SLEEP_MSEC_KEY,\n+          S3GUARD_DDB_BACKGROUND_SLEEP_MSEC_DEFAULT);\n+      for (Item item : expiredFiles(modTime)) {\n+        PathMetadata md \u003d PathMetadataDynamoDBTranslation\n+            .itemToPathMetadata(item, username);\n+        Path path \u003d md.getFileStatus().getPath();\n+        deletionBatch.add(path);\n+        itemCount++;\n+        if (deletionBatch.size() \u003d\u003d S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT) {\n+          Thread.sleep(delay);\n+          processBatchWriteRequest(pathToKey(deletionBatch), null);\n+          deletionBatch.clear();\n+        }\n+      }\n+      if (deletionBatch.size() \u003e 0) {\n+        Thread.sleep(delay);\n+        processBatchWriteRequest(pathToKey(deletionBatch), null);\n+      }\n+    } catch (InterruptedException e) {\n+      Thread.currentThread().interrupt();\n+      throw new InterruptedIOException(\"Pruning was interrupted\");\n+    }\n+    LOG.info(\"Finished pruning {} items in batches of {}\", itemCount,\n+        S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void prune(long modTime) throws IOException {\n    int itemCount \u003d 0;\n    try {\n      Collection\u003cPath\u003e deletionBatch \u003d\n          new ArrayList\u003c\u003e(S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT);\n      int delay \u003d conf.getInt(S3GUARD_DDB_BACKGROUND_SLEEP_MSEC_KEY,\n          S3GUARD_DDB_BACKGROUND_SLEEP_MSEC_DEFAULT);\n      for (Item item : expiredFiles(modTime)) {\n        PathMetadata md \u003d PathMetadataDynamoDBTranslation\n            .itemToPathMetadata(item, username);\n        Path path \u003d md.getFileStatus().getPath();\n        deletionBatch.add(path);\n        itemCount++;\n        if (deletionBatch.size() \u003d\u003d S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT) {\n          Thread.sleep(delay);\n          processBatchWriteRequest(pathToKey(deletionBatch), null);\n          deletionBatch.clear();\n        }\n      }\n      if (deletionBatch.size() \u003e 0) {\n        Thread.sleep(delay);\n        processBatchWriteRequest(pathToKey(deletionBatch), null);\n      }\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new InterruptedIOException(\"Pruning was interrupted\");\n    }\n    LOG.info(\"Finished pruning {} items in batches of {}\", itemCount,\n        S3GUARD_DDB_BATCH_WRITE_REQUEST_LIMIT);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java"
    }
  }
}