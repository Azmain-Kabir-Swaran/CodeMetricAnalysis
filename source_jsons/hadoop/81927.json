{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKCuratorManager.java",
  "functionName": "createRootDirRecursively",
  "functionId": "createRootDirRecursively___path-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
  "functionStartLine": 298,
  "functionEndLine": 300,
  "numCommitsSeen": 72,
  "timeTaken": 3895,
  "changeHistory": [
    "2df73dace06cfd2b3193a14cd455297f8f989617",
    "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "054a947989d6ccbe54a803ca96dcebeba8328367"
  ],
  "changeHistoryShort": {
    "2df73dace06cfd2b3193a14cd455297f8f989617": "Ybodychange",
    "75dd866bfb8b63cb9f13179d4365b05c48e0907d": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "054a947989d6ccbe54a803ca96dcebeba8328367": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2df73dace06cfd2b3193a14cd455297f8f989617": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8405. RM zk-state-store.parent-path ACLs has been changed since HADOOP-14773. Contributed by  Íñigo Goiri.\n",
      "commitDate": "12/06/18 4:43 AM",
      "commitName": "2df73dace06cfd2b3193a14cd455297f8f989617",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "16/01/18 10:15 AM",
      "commitNameOld": "b2029353537fc8da9ab67834568cb2e24924cf5a",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 146.73,
      "commitsBetweenForRepo": 1665,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,3 @@\n   public void createRootDirRecursively(String path) throws Exception {\n-    String[] pathParts \u003d path.split(\"/\");\n-    Preconditions.checkArgument(\n-        pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n-        \"Invalid path: %s\", path);\n-    StringBuilder sb \u003d new StringBuilder();\n-\n-    for (int i \u003d 1; i \u003c pathParts.length; i++) {\n-      sb.append(\"/\").append(pathParts[i]);\n-      create(sb.toString());\n-    }\n+    createRootDirRecursively(path, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void createRootDirRecursively(String path) throws Exception {\n    createRootDirRecursively(path, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
      "extendedDetails": {}
    },
    "75dd866bfb8b63cb9f13179d4365b05c48e0907d": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HADOOP-14773. Extend ZKCuratorManager API for more reusability. (Íñigo Goiri via Subru).\n",
      "commitDate": "15/08/17 4:53 PM",
      "commitName": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-14773. Extend ZKCuratorManager API for more reusability. (Íñigo Goiri via Subru).\n",
          "commitDate": "15/08/17 4:53 PM",
          "commitName": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "15/08/17 3:44 PM",
          "commitNameOld": "f34646d652310442cb5339aabbbb269f10dfa838",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-  private void createRootDirRecursively(String path) throws Exception {\n-    String pathParts[] \u003d path.split(\"/\");\n-    Preconditions.checkArgument(pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n+  public void createRootDirRecursively(String path) throws Exception {\n+    String[] pathParts \u003d path.split(\"/\");\n+    Preconditions.checkArgument(\n+        pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n         \"Invalid path: %s\", path);\n     StringBuilder sb \u003d new StringBuilder();\n \n     for (int i \u003d 1; i \u003c pathParts.length; i++) {\n       sb.append(\"/\").append(pathParts[i]);\n       create(sb.toString());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void createRootDirRecursively(String path) throws Exception {\n    String[] pathParts \u003d path.split(\"/\");\n    Preconditions.checkArgument(\n        pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n        \"Invalid path: %s\", path);\n    StringBuilder sb \u003d new StringBuilder();\n\n    for (int i \u003d 1; i \u003c pathParts.length; i++) {\n      sb.append(\"/\").append(pathParts[i]);\n      create(sb.toString());\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
            "oldMethodName": "createRootDirRecursively",
            "newMethodName": "createRootDirRecursively"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-14773. Extend ZKCuratorManager API for more reusability. (Íñigo Goiri via Subru).\n",
          "commitDate": "15/08/17 4:53 PM",
          "commitName": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "15/08/17 3:44 PM",
          "commitNameOld": "f34646d652310442cb5339aabbbb269f10dfa838",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-  private void createRootDirRecursively(String path) throws Exception {\n-    String pathParts[] \u003d path.split(\"/\");\n-    Preconditions.checkArgument(pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n+  public void createRootDirRecursively(String path) throws Exception {\n+    String[] pathParts \u003d path.split(\"/\");\n+    Preconditions.checkArgument(\n+        pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n         \"Invalid path: %s\", path);\n     StringBuilder sb \u003d new StringBuilder();\n \n     for (int i \u003d 1; i \u003c pathParts.length; i++) {\n       sb.append(\"/\").append(pathParts[i]);\n       create(sb.toString());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void createRootDirRecursively(String path) throws Exception {\n    String[] pathParts \u003d path.split(\"/\");\n    Preconditions.checkArgument(\n        pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n        \"Invalid path: %s\", path);\n    StringBuilder sb \u003d new StringBuilder();\n\n    for (int i \u003d 1; i \u003c pathParts.length; i++) {\n      sb.append(\"/\").append(pathParts[i]);\n      create(sb.toString());\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        }
      ]
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private void createRootDirRecursively(String path) throws Exception {\n     String pathParts[] \u003d path.split(\"/\");\n     Preconditions.checkArgument(pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n         \"Invalid path: %s\", path);\n     StringBuilder sb \u003d new StringBuilder();\n     for (int i \u003d 1; i \u003c pathParts.length; i++) {\n       sb.append(\"/\").append(pathParts[i]);\n-      createRootDir(sb.toString());\n+      create(sb.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createRootDirRecursively(String path) throws Exception {\n    String pathParts[] \u003d path.split(\"/\");\n    Preconditions.checkArgument(pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n        \"Invalid path: %s\", path);\n    StringBuilder sb \u003d new StringBuilder();\n    for (int i \u003d 1; i \u003c pathParts.length; i++) {\n      sb.append(\"/\").append(pathParts[i]);\n      create(sb.toString());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "054a947989d6ccbe54a803ca96dcebeba8328367": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3077. Fixed RM to create zk root path recursively. Contributed by Chun Chen\n",
      "commitDate": "30/01/15 5:34 PM",
      "commitName": "054a947989d6ccbe54a803ca96dcebeba8328367",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,10 @@\n+  private void createRootDirRecursively(String path) throws Exception {\n+    String pathParts[] \u003d path.split(\"/\");\n+    Preconditions.checkArgument(pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n+        \"Invalid path: %s\", path);\n+    StringBuilder sb \u003d new StringBuilder();\n+    for (int i \u003d 1; i \u003c pathParts.length; i++) {\n+      sb.append(\"/\").append(pathParts[i]);\n+      createRootDir(sb.toString());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void createRootDirRecursively(String path) throws Exception {\n    String pathParts[] \u003d path.split(\"/\");\n    Preconditions.checkArgument(pathParts.length \u003e\u003d 1 \u0026\u0026 pathParts[0].isEmpty(),\n        \"Invalid path: %s\", path);\n    StringBuilder sb \u003d new StringBuilder();\n    for (int i \u003d 1; i \u003c pathParts.length; i++) {\n      sb.append(\"/\").append(pathParts[i]);\n      createRootDir(sb.toString());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}