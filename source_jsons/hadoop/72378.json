{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NfsExports.java",
  "functionName": "getInstance",
  "functionId": "getInstance___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/NfsExports.java",
  "functionStartLine": 47,
  "functionEndLine": 65,
  "numCommitsSeen": 12,
  "timeTaken": 1336,
  "changeHistory": [
    "2a5f1029a5221c42ab61b22f99d79251ed069ca4",
    "42391d260da400593812396c1ffd45d1a371d3cb",
    "613979c8fdacf25fd563395ecc399c4de94d3ee7",
    "cbca1668317f3f2d295eea53d7bd020bda4a810f",
    "15632cd76f12c2f7df50d0df4865fbe3d8261597"
  ],
  "changeHistoryShort": {
    "2a5f1029a5221c42ab61b22f99d79251ed069ca4": "Ybodychange",
    "42391d260da400593812396c1ffd45d1a371d3cb": "Ybodychange",
    "613979c8fdacf25fd563395ecc399c4de94d3ee7": "Yfilerename",
    "cbca1668317f3f2d295eea53d7bd020bda4a810f": "Yfilerename",
    "15632cd76f12c2f7df50d0df4865fbe3d8261597": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2a5f1029a5221c42ab61b22f99d79251ed069ca4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6455. NFS: Exception should be added in NFS log for invalid separator in nfs.exports.allowed.hosts. Contributed by Abhiraj Butala\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612947 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/14 2:22 PM",
      "commitName": "2a5f1029a5221c42ab61b22f99d79251ed069ca4",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "15/07/14 1:35 PM",
      "commitNameOld": "fb1f5bc618f4e006971bdb982cfa8adad71a4e32",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 8.03,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   public static synchronized NfsExports getInstance(Configuration conf) {\n     if (exports \u003d\u003d null) {\n       String matchHosts \u003d conf.get(\n           CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY,\n           CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n       int cacheSize \u003d conf.getInt(Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_KEY,\n           Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_DEFAULT);\n       long expirationPeriodNano \u003d conf.getLong(\n           Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n           Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n-      exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n+      try {\n+        exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n+      } catch (IllegalArgumentException e) {\n+        LOG.error(\"Invalid NFS Exports provided: \", e);\n+        return exports;\n+      }\n     }\n     return exports;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized NfsExports getInstance(Configuration conf) {\n    if (exports \u003d\u003d null) {\n      String matchHosts \u003d conf.get(\n          CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY,\n          CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n      int cacheSize \u003d conf.getInt(Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_KEY,\n          Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_DEFAULT);\n      long expirationPeriodNano \u003d conf.getLong(\n          Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n          Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n      try {\n        exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n      } catch (IllegalArgumentException e) {\n        LOG.error(\"Invalid NFS Exports provided: \", e);\n        return exports;\n      }\n    }\n    return exports;\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/NfsExports.java",
      "extendedDetails": {}
    },
    "42391d260da400593812396c1ffd45d1a371d3cb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6056. Clean up NFS config settings. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598782 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 4:53 PM",
      "commitName": "42391d260da400593812396c1ffd45d1a371d3cb",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "10/09/13 12:29 PM",
      "commitNameOld": "613979c8fdacf25fd563395ecc399c4de94d3ee7",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 262.18,
      "commitsBetweenForRepo": 1783,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public static synchronized NfsExports getInstance(Configuration conf) {\n     if (exports \u003d\u003d null) {\n-      String matchHosts \u003d conf.get(Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY,\n-          Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n-      int cacheSize \u003d conf.getInt(Nfs3Constant.EXPORTS_CACHE_SIZE_KEY,\n-          Nfs3Constant.EXPORTS_CACHE_SIZE_DEFAULT);\n+      String matchHosts \u003d conf.get(\n+          CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY,\n+          CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n+      int cacheSize \u003d conf.getInt(Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_KEY,\n+          Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_DEFAULT);\n       long expirationPeriodNano \u003d conf.getLong(\n-          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n-          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n+          Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n+          Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n       exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n     }\n     return exports;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized NfsExports getInstance(Configuration conf) {\n    if (exports \u003d\u003d null) {\n      String matchHosts \u003d conf.get(\n          CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY,\n          CommonConfigurationKeys.NFS_EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n      int cacheSize \u003d conf.getInt(Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_KEY,\n          Nfs3Constant.NFS_EXPORTS_CACHE_SIZE_DEFAULT);\n      long expirationPeriodNano \u003d conf.getLong(\n          Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n          Nfs3Constant.NFS_EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n      exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n    }\n    return exports;\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/NfsExports.java",
      "extendedDetails": {}
    },
    "613979c8fdacf25fd563395ecc399c4de94d3ee7": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-5085. Refactor o.a.h.nfs to support different types of authentications. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1521601 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/13 12:29 PM",
      "commitName": "613979c8fdacf25fd563395ecc399c4de94d3ee7",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "10/09/13 11:31 AM",
      "commitNameOld": "75c31df9dd1d9435aec4cc245e1e58ca326e6159",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static synchronized NfsExports getInstance(Configuration conf) {\n    if (exports \u003d\u003d null) {\n      String matchHosts \u003d conf.get(Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY,\n          Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n      int cacheSize \u003d conf.getInt(Nfs3Constant.EXPORTS_CACHE_SIZE_KEY,\n          Nfs3Constant.EXPORTS_CACHE_SIZE_DEFAULT);\n      long expirationPeriodNano \u003d conf.getLong(\n          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n      exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n    }\n    return exports;\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/NfsExports.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/security/NfsExports.java",
        "newPath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/NfsExports.java"
      }
    },
    "cbca1668317f3f2d295eea53d7bd020bda4a810f": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-5136 MNT EXPORT should give the full group list which can mount the exports. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519222 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/13 2:12 PM",
      "commitName": "cbca1668317f3f2d295eea53d7bd020bda4a810f",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "31/08/13 12:55 PM",
      "commitNameOld": "76cb07ee2077da61e0c07131bcbe7d0ddc73080e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static synchronized NfsExports getInstance(Configuration conf) {\n    if (exports \u003d\u003d null) {\n      String matchHosts \u003d conf.get(Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY,\n          Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n      int cacheSize \u003d conf.getInt(Nfs3Constant.EXPORTS_CACHE_SIZE_KEY,\n          Nfs3Constant.EXPORTS_CACHE_SIZE_DEFAULT);\n      long expirationPeriodNano \u003d conf.getLong(\n          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n      exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n    }\n    return exports;\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/security/NfsExports.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/security/NfsExports.java",
        "newPath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/security/NfsExports.java"
      }
    },
    "15632cd76f12c2f7df50d0df4865fbe3d8261597": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4947 Add NFS server export table to control export by hostname or IP range. Contributed by Jing Zhao\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517040 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/13 2:14 PM",
      "commitName": "15632cd76f12c2f7df50d0df4865fbe3d8261597",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,13 @@\n+  public static synchronized NfsExports getInstance(Configuration conf) {\n+    if (exports \u003d\u003d null) {\n+      String matchHosts \u003d conf.get(Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY,\n+          Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n+      int cacheSize \u003d conf.getInt(Nfs3Constant.EXPORTS_CACHE_SIZE_KEY,\n+          Nfs3Constant.EXPORTS_CACHE_SIZE_DEFAULT);\n+      long expirationPeriodNano \u003d conf.getLong(\n+          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n+          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n+      exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n+    }\n+    return exports;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static synchronized NfsExports getInstance(Configuration conf) {\n    if (exports \u003d\u003d null) {\n      String matchHosts \u003d conf.get(Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY,\n          Nfs3Constant.EXPORTS_ALLOWED_HOSTS_KEY_DEFAULT);\n      int cacheSize \u003d conf.getInt(Nfs3Constant.EXPORTS_CACHE_SIZE_KEY,\n          Nfs3Constant.EXPORTS_CACHE_SIZE_DEFAULT);\n      long expirationPeriodNano \u003d conf.getLong(\n          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_KEY,\n          Nfs3Constant.EXPORTS_CACHE_EXPIRYTIME_MILLIS_DEFAULT) * 1000 * 1000;\n      exports \u003d new NfsExports(cacheSize, expirationPeriodNano, matchHosts);\n    }\n    return exports;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/security/NfsExports.java"
    }
  }
}