{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpenFileCtx.java",
  "functionName": "checkSequential",
  "functionId": "checkSequential___commitOffset-long(modifiers-final)__nextOffset-long(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java",
  "functionStartLine": 807,
  "functionEndLine": 826,
  "numCommitsSeen": 36,
  "timeTaken": 839,
  "changeHistory": [
    "99d9d0c2d19b9f161b765947f3fb64619ea58090"
  ],
  "changeHistoryShort": {
    "99d9d0c2d19b9f161b765947f3fb64619ea58090": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99d9d0c2d19b9f161b765947f3fb64619ea58090": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7387. NFS may only do partial commit due to a race between COMMIT and write. Contributed by Brandon Li\n",
      "commitDate": "11/11/14 1:03 PM",
      "commitName": "99d9d0c2d19b9f161b765947f3fb64619ea58090",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,20 @@\n+  synchronized boolean checkSequential(final long commitOffset,\n+      final long nextOffset) {\n+    Preconditions.checkState(commitOffset \u003e\u003d nextOffset, \"commitOffset \"\n+        + commitOffset + \" less than nextOffset \" + nextOffset);\n+    long offset \u003d nextOffset;\n+    Iterator\u003cOffsetRange\u003e it \u003d pendingWrites.descendingKeySet().iterator();\n+    while (it.hasNext()) {\n+      OffsetRange range \u003d it.next();\n+      if (range.getMin() !\u003d offset) {\n+        // got a hole\n+        return false;\n+      }\n+      offset \u003d range.getMax();\n+      if (offset \u003e commitOffset) {\n+        return true;\n+      }\n+    }\n+    // there is gap between the last pending write and commitOffset\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized boolean checkSequential(final long commitOffset,\n      final long nextOffset) {\n    Preconditions.checkState(commitOffset \u003e\u003d nextOffset, \"commitOffset \"\n        + commitOffset + \" less than nextOffset \" + nextOffset);\n    long offset \u003d nextOffset;\n    Iterator\u003cOffsetRange\u003e it \u003d pendingWrites.descendingKeySet().iterator();\n    while (it.hasNext()) {\n      OffsetRange range \u003d it.next();\n      if (range.getMin() !\u003d offset) {\n        // got a hole\n        return false;\n      }\n      offset \u003d range.getMax();\n      if (offset \u003e commitOffset) {\n        return true;\n      }\n    }\n    // there is gap between the last pending write and commitOffset\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java"
    }
  }
}