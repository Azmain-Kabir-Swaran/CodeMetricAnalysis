{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Service.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
  "functionStartLine": 425,
  "functionEndLine": 460,
  "numCommitsSeen": 19,
  "timeTaken": 5533,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "d1c1dde3097eea6a46a39d0312f94949f6884002",
    "1d6e43da51aaaab522325bdbe4b51e58934e03f1",
    "a0bde7d525911680f9e5fb0a939604865eb8e164",
    "e1f5251f3c0d6e74af1b52eda6633b728804fe2a",
    "d30d57828fddaa8667de49af879cde999907c7f6",
    "68acd88dcbfe03a0134c60b5398dfaa31ad2b786",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "024e90a50838f19e92630902d7af21ad30b5772c",
    "18bf0dce28a9a602f67a0c28fe5c350065931bd0"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "d1c1dde3097eea6a46a39d0312f94949f6884002": "Ybodychange",
    "1d6e43da51aaaab522325bdbe4b51e58934e03f1": "Ybodychange",
    "a0bde7d525911680f9e5fb0a939604865eb8e164": "Ybodychange",
    "e1f5251f3c0d6e74af1b52eda6633b728804fe2a": "Ybodychange",
    "d30d57828fddaa8667de49af879cde999907c7f6": "Ybodychange",
    "68acd88dcbfe03a0134c60b5398dfaa31ad2b786": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange)",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymovefromfile",
    "024e90a50838f19e92630902d7af21ad30b5772c": "Yfilerename",
    "18bf0dce28a9a602f67a0c28fe5c350065931bd0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "28/09/18 9:40 AM",
      "commitNameOld": "d1c1dde3097eea6a46a39d0312f94949f6884002",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 150.13,
      "commitsBetweenForRepo": 1136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n-    sb.append(\"class Service {\\n\");\n+    sb.append(\"class Service {\\n\")\n \n-    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n-    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n-    sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n-    sb.append(\"    description: \").append(toIndentedString(description))\n-        .append(\"\\n\");\n-    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n-    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n-    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n-        .append(\"\\n\");\n-    sb.append(\"    numberOfRunningContainers: \")\n-        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n-    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n-    sb.append(\"    components: \").append(toIndentedString(components))\n-        .append(\"\\n\");\n-    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n-        .append(\"\\n\");\n-    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n-    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n-        .append(\"\\n\");\n-    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n-    sb.append(\"    kerberosPrincipal: \")\n-        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n-    sb.append(\"    dockerClientConfig: \")\n-        .append(toIndentedString(dockerClientConfig)).append(\"\\n\");\n-    sb.append(\"    dependencies: \")\n-        .append(toIndentedString(dependencies)).append(\"\\n\");\n-    sb.append(\"}\");\n+        .append(\"    name: \").append(toIndentedString(name)).append(\"\\n\")\n+        .append(\"    id: \").append(toIndentedString(id)).append(\"\\n\")\n+        .append(\"    version: \").append(toIndentedString(version)).append(\"\\n\")\n+        .append(\"    description: \").append(toIndentedString(description))\n+        .append(\"\\n\")\n+        .append(\"    artifact: \").append(toIndentedString(artifact))\n+        .append(\"\\n\")\n+        .append(\"    resource: \").append(toIndentedString(resource))\n+        .append(\"\\n\")\n+        .append(\"    launchTime: \").append(toIndentedString(launchTime))\n+        .append(\"\\n\")\n+        .append(\"    numberOfRunningContainers: \")\n+        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\")\n+        .append(\"    lifetime: \").append(toIndentedString(lifetime))\n+        .append(\"\\n\")\n+        .append(\"    components: \").append(toIndentedString(components))\n+        .append(\"\\n\")\n+        .append(\"    configuration: \").append(toIndentedString(configuration))\n+        .append(\"\\n\")\n+        .append(\"    state: \").append(toIndentedString(state)).append(\"\\n\")\n+        .append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n+        .append(\"\\n\")\n+        .append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\")\n+        .append(\"    kerberosPrincipal: \")\n+        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\")\n+        .append(\"    dockerClientConfig: \")\n+        .append(toIndentedString(dockerClientConfig)).append(\"\\n\")\n+        .append(\"    dependencies: \")\n+        .append(toIndentedString(dependencies)).append(\"\\n\")\n+        .append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\")\n\n        .append(\"    name: \").append(toIndentedString(name)).append(\"\\n\")\n        .append(\"    id: \").append(toIndentedString(id)).append(\"\\n\")\n        .append(\"    version: \").append(toIndentedString(version)).append(\"\\n\")\n        .append(\"    description: \").append(toIndentedString(description))\n        .append(\"\\n\")\n        .append(\"    artifact: \").append(toIndentedString(artifact))\n        .append(\"\\n\")\n        .append(\"    resource: \").append(toIndentedString(resource))\n        .append(\"\\n\")\n        .append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\")\n        .append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\")\n        .append(\"    lifetime: \").append(toIndentedString(lifetime))\n        .append(\"\\n\")\n        .append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\")\n        .append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\")\n        .append(\"    state: \").append(toIndentedString(state)).append(\"\\n\")\n        .append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\")\n        .append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\")\n        .append(\"    kerberosPrincipal: \")\n        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\")\n        .append(\"    dockerClientConfig: \")\n        .append(toIndentedString(dockerClientConfig)).append(\"\\n\")\n        .append(\"    dependencies: \")\n        .append(toIndentedString(dependencies)).append(\"\\n\")\n        .append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
      "extendedDetails": {}
    },
    "d1c1dde3097eea6a46a39d0312f94949f6884002": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8734. Readiness check for remote service belonging to the same user. Contributed by Eric Yang\n",
      "commitDate": "28/09/18 9:40 AM",
      "commitName": "d1c1dde3097eea6a46a39d0312f94949f6884002",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "13/09/18 11:02 PM",
      "commitNameOld": "568ebecdf49d0919db1a8d856043c10b76326c34",
      "commitAuthorOld": "Andrew Purtell",
      "daysBetweenCommits": 14.44,
      "commitsBetweenForRepo": 157,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,33 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n     sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n     sb.append(\"    description: \").append(toIndentedString(description))\n         .append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n     sb.append(\"    kerberosPrincipal: \")\n         .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n     sb.append(\"    dockerClientConfig: \")\n         .append(toIndentedString(dockerClientConfig)).append(\"\\n\");\n+    sb.append(\"    dependencies: \")\n+        .append(toIndentedString(dependencies)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n    sb.append(\"    description: \").append(toIndentedString(description))\n        .append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"    kerberosPrincipal: \")\n        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n    sb.append(\"    dockerClientConfig: \")\n        .append(toIndentedString(dockerClientConfig)).append(\"\\n\");\n    sb.append(\"    dependencies: \")\n        .append(toIndentedString(dependencies)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
      "extendedDetails": {}
    },
    "1d6e43da51aaaab522325bdbe4b51e58934e03f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7996. Allow user supplied Docker client configurations with YARN native services. Contributed by Shane Kumpf\n",
      "commitDate": "17/04/18 6:57 AM",
      "commitName": "1d6e43da51aaaab522325bdbe4b51e58934e03f1",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "02/04/18 7:26 AM",
      "commitNameOld": "a0bde7d525911680f9e5fb0a939604865eb8e164",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 14.98,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n     sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n     sb.append(\"    description: \").append(toIndentedString(description))\n         .append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n     sb.append(\"    kerberosPrincipal: \")\n         .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n+    sb.append(\"    dockerClientConfig: \")\n+        .append(toIndentedString(dockerClientConfig)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n    sb.append(\"    description: \").append(toIndentedString(description))\n        .append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"    kerberosPrincipal: \")\n        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n    sb.append(\"    dockerClientConfig: \")\n        .append(toIndentedString(dockerClientConfig)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
      "extendedDetails": {}
    },
    "a0bde7d525911680f9e5fb0a939604865eb8e164": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7142. Support placement policy in yarn native services. (Gour Saha via wangda)\n\nChange-Id: I166c67a7a34430627c17365f60bac75b6da1b434\n",
      "commitDate": "02/04/18 7:26 AM",
      "commitName": "a0bde7d525911680f9e5fb0a939604865eb8e164",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "10/03/18 7:49 AM",
      "commitNameOld": "e1f5251f3c0d6e74af1b52eda6633b728804fe2a",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 22.94,
      "commitsBetweenForRepo": 272,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,29 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n     sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n     sb.append(\"    description: \").append(toIndentedString(description))\n         .append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n-    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n-        .append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n     sb.append(\"    kerberosPrincipal: \")\n         .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n    sb.append(\"    description: \").append(toIndentedString(description))\n        .append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"    kerberosPrincipal: \")\n        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
      "extendedDetails": {}
    },
    "e1f5251f3c0d6e74af1b52eda6633b728804fe2a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7523. Introduce description and version field in Service record. Contributed by Chandni Singh\n",
      "commitDate": "10/03/18 7:49 AM",
      "commitName": "e1f5251f3c0d6e74af1b52eda6633b728804fe2a",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "04/12/17 12:11 PM",
      "commitNameOld": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 95.82,
      "commitsBetweenForRepo": 596,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n+    sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n+    sb.append(\"    description: \").append(toIndentedString(description))\n+        .append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n     sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n         .append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n     sb.append(\"    kerberosPrincipal: \")\n         .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    version: \").append(toIndentedString(version)).append(\"\\n\");\n    sb.append(\"    description: \").append(toIndentedString(description))\n        .append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n        .append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"    kerberosPrincipal: \")\n        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
      "extendedDetails": {}
    },
    "d30d57828fddaa8667de49af879cde999907c7f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
      "commitDate": "04/12/17 12:11 PM",
      "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "17/11/17 9:28 AM",
      "commitNameOld": "0940e4f692441f16e742666ac925f71a083eab27",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 17.11,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n     sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n         .append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n+    sb.append(\"    kerberosPrincipal: \")\n+        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n        .append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"    kerberosPrincipal: \")\n        .append(toIndentedString(kerberosPrincipal)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
      "extendedDetails": {}
    },
    "68acd88dcbfe03a0134c60b5398dfaa31ad2b786": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7323. Data structure update in service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "68acd88dcbfe03a0134c60b5398dfaa31ad2b786",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,26 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n     sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n-    sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n-        .append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n-    sb.append(\"    numberOfContainers: \")\n-        .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n     sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n         .append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n-    sb.append(\"    containers: \").append(toIndentedString(containers))\n-        .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n        .append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n-    sb.append(\"class Application {\\n\");\n+    sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n     sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n         .append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n     sb.append(\"    numberOfContainers: \")\n         .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n     sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n         .append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n     sb.append(\"    containers: \").append(toIndentedString(containers))\n         .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n        .append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfContainers: \")\n        .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n        .append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    containers: \").append(toIndentedString(containers))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Application.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n-    sb.append(\"class Application {\\n\");\n+    sb.append(\"class Service {\\n\");\n \n     sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n     sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n     sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n     sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n     sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n         .append(\"\\n\");\n     sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n         .append(\"\\n\");\n     sb.append(\"    numberOfContainers: \")\n         .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n     sb.append(\"    numberOfRunningContainers: \")\n         .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n     sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n     sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n         .append(\"\\n\");\n     sb.append(\"    components: \").append(toIndentedString(components))\n         .append(\"\\n\");\n     sb.append(\"    configuration: \").append(toIndentedString(configuration))\n         .append(\"\\n\");\n     sb.append(\"    containers: \").append(toIndentedString(containers))\n         .append(\"\\n\");\n     sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n     sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n         .append(\"\\n\");\n     sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n     sb.append(\"}\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Service {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n        .append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfContainers: \")\n        .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n        .append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    containers: \").append(toIndentedString(containers))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Service.java",
          "extendedDetails": {}
        }
      ]
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Application {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n        .append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfContainers: \")\n        .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n        .append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    containers: \").append(toIndentedString(containers))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Application.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/api/resource/Application.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/api/records/Application.java",
        "oldMethodName": "toString",
        "newMethodName": "toString"
      }
    },
    "024e90a50838f19e92630902d7af21ad30b5772c": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6192. Move yarn-native-service API records into hadoop-yarn-slider-core module. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "024e90a50838f19e92630902d7af21ad30b5772c",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:28 PM",
      "commitNameOld": "0ed8d4ebe68cc5aa172d276f3e87eb15fe914d57",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Application {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n        .append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfContainers: \")\n        .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \").append(toIndentedString(placementPolicy))\n        .append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    containers: \").append(toIndentedString(containers))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/api/resource/Application.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/services/resource/Application.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/api/resource/Application.java"
      }
    },
    "18bf0dce28a9a602f67a0c28fe5c350065931bd0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5610. Initial code for native services REST API. Contributed by Gour Saha\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "18bf0dce28a9a602f67a0c28fe5c350065931bd0",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,32 @@\n+  public String toString() {\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(\"class Application {\\n\");\n+\n+    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n+    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n+    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n+    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n+    sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n+        .append(\"\\n\");\n+    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n+        .append(\"\\n\");\n+    sb.append(\"    numberOfContainers: \")\n+        .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n+    sb.append(\"    numberOfRunningContainers: \")\n+        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n+    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n+    sb.append(\"    placementPolicy: \")\n+        .append(toIndentedString(placementPolicy)).append(\"\\n\");\n+    sb.append(\"    components: \").append(toIndentedString(components))\n+        .append(\"\\n\");\n+    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n+        .append(\"\\n\");\n+    sb.append(\"    containers: \").append(toIndentedString(containers))\n+        .append(\"\\n\");\n+    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n+    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n+        .append(\"\\n\");\n+    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n+    sb.append(\"}\");\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(\"class Application {\\n\");\n\n    sb.append(\"    name: \").append(toIndentedString(name)).append(\"\\n\");\n    sb.append(\"    id: \").append(toIndentedString(id)).append(\"\\n\");\n    sb.append(\"    artifact: \").append(toIndentedString(artifact)).append(\"\\n\");\n    sb.append(\"    resource: \").append(toIndentedString(resource)).append(\"\\n\");\n    sb.append(\"    launchCommand: \").append(toIndentedString(launchCommand))\n        .append(\"\\n\");\n    sb.append(\"    launchTime: \").append(toIndentedString(launchTime))\n        .append(\"\\n\");\n    sb.append(\"    numberOfContainers: \")\n        .append(toIndentedString(numberOfContainers)).append(\"\\n\");\n    sb.append(\"    numberOfRunningContainers: \")\n        .append(toIndentedString(numberOfRunningContainers)).append(\"\\n\");\n    sb.append(\"    lifetime: \").append(toIndentedString(lifetime)).append(\"\\n\");\n    sb.append(\"    placementPolicy: \")\n        .append(toIndentedString(placementPolicy)).append(\"\\n\");\n    sb.append(\"    components: \").append(toIndentedString(components))\n        .append(\"\\n\");\n    sb.append(\"    configuration: \").append(toIndentedString(configuration))\n        .append(\"\\n\");\n    sb.append(\"    containers: \").append(toIndentedString(containers))\n        .append(\"\\n\");\n    sb.append(\"    state: \").append(toIndentedString(state)).append(\"\\n\");\n    sb.append(\"    quicklinks: \").append(toIndentedString(quicklinks))\n        .append(\"\\n\");\n    sb.append(\"    queue: \").append(toIndentedString(queue)).append(\"\\n\");\n    sb.append(\"}\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/services/resource/Application.java"
    }
  }
}