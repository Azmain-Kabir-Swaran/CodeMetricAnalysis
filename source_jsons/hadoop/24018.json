{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FadvisedChunkedFile.java",
  "functionName": "close",
  "functionId": "close",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/FadvisedChunkedFile.java",
  "functionStartLine": 84,
  "functionEndLine": 106,
  "numCommitsSeen": 7,
  "timeTaken": 1469,
  "changeHistory": [
    "274eee32841082a734c57f9e383e5e2f02f97f78",
    "21d10ccc6e463cf250414264c78acb4a6e7c83e3",
    "efea68dc3538de9aafae206d64903506e41fc9e1",
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
    "638801cce16fc1dc3259c541dc30a599faaddda1",
    "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38"
  ],
  "changeHistoryShort": {
    "274eee32841082a734c57f9e383e5e2f02f97f78": "Ybodychange",
    "21d10ccc6e463cf250414264c78acb4a6e7c83e3": "Ybodychange",
    "efea68dc3538de9aafae206d64903506e41fc9e1": "Ybodychange",
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24": "Ybodychange",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Ybodychange",
    "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "274eee32841082a734c57f9e383e5e2f02f97f78": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7095. Race conditions in closing FadvisedChunkedFile. (Miklos Szegedi via Haibo Chen)\n",
      "commitDate": "10/05/18 10:46 AM",
      "commitName": "274eee32841082a734c57f9e383e5e2f02f97f78",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "08/11/17 2:28 AM",
      "commitNameOld": "e4c220ee4fdc4550275bda0fa9468d7d87d143c3",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 183.3,
      "commitsBetweenForRepo": 1757,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,23 @@\n   public void close() throws Exception {\n-    if (readaheadRequest !\u003d null) {\n-      readaheadRequest.cancel();\n-    }\n-    if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n-      try {\n-        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n-            fd,\n-            getStartOffset(), getEndOffset() - getStartOffset(),\n-            POSIX_FADV_DONTNEED);\n-      } catch (Throwable t) {\n-        LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n+    synchronized (closeLock) {\n+      if (readaheadRequest !\u003d null) {\n+        readaheadRequest.cancel();\n+        readaheadRequest \u003d null;\n       }\n+      if (fd.valid() \u0026\u0026\n+          manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n+        try {\n+          NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(\n+              identifier,\n+              fd,\n+              getStartOffset(), getEndOffset() - getStartOffset(),\n+              POSIX_FADV_DONTNEED);\n+        } catch (Throwable t) {\n+          LOG.warn(\"Failed to manage OS cache for \" + identifier +\n+              \" fd \" + fd.toString(), t);\n+        }\n+      }\n+      // fd becomes invalid upon closing\n+      super.close();\n     }\n-    super.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() throws Exception {\n    synchronized (closeLock) {\n      if (readaheadRequest !\u003d null) {\n        readaheadRequest.cancel();\n        readaheadRequest \u003d null;\n      }\n      if (fd.valid() \u0026\u0026\n          manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n        try {\n          NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(\n              identifier,\n              fd,\n              getStartOffset(), getEndOffset() - getStartOffset(),\n              POSIX_FADV_DONTNEED);\n        } catch (Throwable t) {\n          LOG.warn(\"Failed to manage OS cache for \" + identifier +\n              \" fd \" + fd.toString(), t);\n        }\n      }\n      // fd becomes invalid upon closing\n      super.close();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/FadvisedChunkedFile.java",
      "extendedDetails": {}
    },
    "21d10ccc6e463cf250414264c78acb4a6e7c83e3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7824. NativeIO.java flags and identifiers must be set correctly for each platform, not hardcoded to their Linux values (Martin Walsh via Colin P. McCabe)\n",
      "commitDate": "31/07/15 3:01 PM",
      "commitName": "21d10ccc6e463cf250414264c78acb4a6e7c83e3",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "19/11/13 4:48 PM",
      "commitNameOld": "efea68dc3538de9aafae206d64903506e41fc9e1",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 618.88,
      "commitsBetweenForRepo": 4858,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void close() throws Exception {\n     if (readaheadRequest !\u003d null) {\n       readaheadRequest.cancel();\n     }\n     if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n       try {\n         NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n             fd,\n             getStartOffset(), getEndOffset() - getStartOffset(),\n-            NativeIO.POSIX.POSIX_FADV_DONTNEED);\n+            POSIX_FADV_DONTNEED);\n       } catch (Throwable t) {\n         LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n       }\n     }\n     super.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() throws Exception {\n    if (readaheadRequest !\u003d null) {\n      readaheadRequest.cancel();\n    }\n    if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n      try {\n        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n            fd,\n            getStartOffset(), getEndOffset() - getStartOffset(),\n            POSIX_FADV_DONTNEED);\n      } catch (Throwable t) {\n        LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n      }\n    }\n    super.close();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/FadvisedChunkedFile.java",
      "extendedDetails": {}
    },
    "efea68dc3538de9aafae206d64903506e41fc9e1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5511. improve CacheManipulator interface to allow better unit testing (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543676 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/13 4:48 PM",
      "commitName": "efea68dc3538de9aafae206d64903506e41fc9e1",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "22/07/13 11:15 AM",
      "commitNameOld": "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 120.27,
      "commitsBetweenForRepo": 765,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void close() throws Exception {\n     if (readaheadRequest !\u003d null) {\n       readaheadRequest.cancel();\n     }\n     if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n       try {\n-        NativeIO.POSIX.posixFadviseIfPossible(identifier,\n+        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n             fd,\n             getStartOffset(), getEndOffset() - getStartOffset(),\n             NativeIO.POSIX.POSIX_FADV_DONTNEED);\n       } catch (Throwable t) {\n         LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n       }\n     }\n     super.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() throws Exception {\n    if (readaheadRequest !\u003d null) {\n      readaheadRequest.cancel();\n    }\n    if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n      try {\n        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n            fd,\n            getStartOffset(), getEndOffset() - getStartOffset(),\n            NativeIO.POSIX.POSIX_FADV_DONTNEED);\n      } catch (Throwable t) {\n        LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n      }\n    }\n    super.close();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/FadvisedChunkedFile.java",
      "extendedDetails": {}
    },
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4817.  Make HDFS advisory caching configurable on a per-file basis.  (Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1505753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/13 11:15 AM",
      "commitName": "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "06/03/13 11:15 AM",
      "commitNameOld": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 137.96,
      "commitsBetweenForRepo": 857,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void close() throws Exception {\n     if (readaheadRequest !\u003d null) {\n       readaheadRequest.cancel();\n     }\n     if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n       try {\n-        NativeIO.POSIX.posixFadviseIfPossible(\n+        NativeIO.POSIX.posixFadviseIfPossible(identifier,\n             fd,\n             getStartOffset(), getEndOffset() - getStartOffset(),\n             NativeIO.POSIX.POSIX_FADV_DONTNEED);\n       } catch (Throwable t) {\n         LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n       }\n     }\n     super.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() throws Exception {\n    if (readaheadRequest !\u003d null) {\n      readaheadRequest.cancel();\n    }\n    if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n      try {\n        NativeIO.POSIX.posixFadviseIfPossible(identifier,\n            fd,\n            getStartOffset(), getEndOffset() - getStartOffset(),\n            NativeIO.POSIX.POSIX_FADV_DONTNEED);\n      } catch (Throwable t) {\n        LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n      }\n    }\n    super.close();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/FadvisedChunkedFile.java",
      "extendedDetails": {}
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "02/08/12 2:55 PM",
      "commitNameOld": "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 215.89,
      "commitsBetweenForRepo": 1079,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   public void close() throws Exception {\n     if (readaheadRequest !\u003d null) {\n       readaheadRequest.cancel();\n     }\n     if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n       try {\n-        NativeIO.posixFadviseIfPossible(fd, getStartOffset(), getEndOffset()\n-            - getStartOffset(), NativeIO.POSIX_FADV_DONTNEED);\n+        NativeIO.POSIX.posixFadviseIfPossible(\n+            fd,\n+            getStartOffset(), getEndOffset() - getStartOffset(),\n+            NativeIO.POSIX.POSIX_FADV_DONTNEED);\n       } catch (Throwable t) {\n         LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n       }\n     }\n     super.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() throws Exception {\n    if (readaheadRequest !\u003d null) {\n      readaheadRequest.cancel();\n    }\n    if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n      try {\n        NativeIO.POSIX.posixFadviseIfPossible(\n            fd,\n            getStartOffset(), getEndOffset() - getStartOffset(),\n            NativeIO.POSIX.POSIX_FADV_DONTNEED);\n      } catch (Throwable t) {\n        LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n      }\n    }\n    super.close();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/FadvisedChunkedFile.java",
      "extendedDetails": {}
    },
    "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3289. Make use of fadvise in the NM\u0027s shuffle handler. (Contributed by Todd Lipcon and Siddharth Seth)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1368718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/12 2:55 PM",
      "commitName": "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,14 @@\n+  public void close() throws Exception {\n+    if (readaheadRequest !\u003d null) {\n+      readaheadRequest.cancel();\n+    }\n+    if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n+      try {\n+        NativeIO.posixFadviseIfPossible(fd, getStartOffset(), getEndOffset()\n+            - getStartOffset(), NativeIO.POSIX_FADV_DONTNEED);\n+      } catch (Throwable t) {\n+        LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n+      }\n+    }\n+    super.close();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() throws Exception {\n    if (readaheadRequest !\u003d null) {\n      readaheadRequest.cancel();\n    }\n    if (manageOsCache \u0026\u0026 getEndOffset() - getStartOffset() \u003e 0) {\n      try {\n        NativeIO.posixFadviseIfPossible(fd, getStartOffset(), getEndOffset()\n            - getStartOffset(), NativeIO.POSIX_FADV_DONTNEED);\n      } catch (Throwable t) {\n        LOG.warn(\"Failed to manage OS cache for \" + identifier, t);\n      }\n    }\n    super.close();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/FadvisedChunkedFile.java"
    }
  }
}