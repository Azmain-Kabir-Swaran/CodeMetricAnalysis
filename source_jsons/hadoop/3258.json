{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebHdfsFileSystem.java",
  "functionName": "setQuotaByStorageType",
  "functionId": "setQuotaByStorageType___path-Path__type-StorageType__quota-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
  "functionStartLine": 1914,
  "functionEndLine": 1933,
  "numCommitsSeen": 73,
  "timeTaken": 1292,
  "changeHistory": [
    "29bd6f3fc3bd78b439d61768885c9f3e7f31a540"
  ],
  "changeHistoryShort": {
    "29bd6f3fc3bd78b439d61768885c9f3e7f31a540": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29bd6f3fc3bd78b439d61768885c9f3e7f31a540": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8631. WebHDFS : Support setQuota. Contributed by Chao Sun.\n",
      "commitDate": "28/08/19 11:28 AM",
      "commitName": "29bd6f3fc3bd78b439d61768885c9f3e7f31a540",
      "commitAuthor": "Surendra Singh Lilhore",
      "diff": "@@ -0,0 +1,20 @@\n+  public void setQuotaByStorageType(Path path, StorageType type, long quota)\n+      throws IOException {\n+    if (quota \u003c\u003d 0 \u0026\u0026 quota !\u003d HdfsConstants.QUOTA_RESET) {\n+      throw new IllegalArgumentException(\"Invalid values for quota :\" + quota);\n+    }\n+    if (type \u003d\u003d null) {\n+      throw new IllegalArgumentException(\"Invalid storage type (null)\");\n+    }\n+    if (!type.supportTypeQuota()) {\n+      throw new IllegalArgumentException(\n+          \"Quota for storage type \u0027\" + type.toString() + \"\u0027 is not supported\");\n+    }\n+\n+    statistics.incrementWriteOps(1);\n+    storageStatistics.incrementOpCounter(OpType.SET_QUOTA_BYTSTORAGEYPE);\n+\n+    final HttpOpParam.Op op \u003d PutOpParam.Op.SETQUOTABYSTORAGETYPE;\n+    new FsPathRunner(op, path, new StorageTypeParam(type.name()),\n+        new StorageSpaceQuotaParam(quota)).run();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setQuotaByStorageType(Path path, StorageType type, long quota)\n      throws IOException {\n    if (quota \u003c\u003d 0 \u0026\u0026 quota !\u003d HdfsConstants.QUOTA_RESET) {\n      throw new IllegalArgumentException(\"Invalid values for quota :\" + quota);\n    }\n    if (type \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Invalid storage type (null)\");\n    }\n    if (!type.supportTypeQuota()) {\n      throw new IllegalArgumentException(\n          \"Quota for storage type \u0027\" + type.toString() + \"\u0027 is not supported\");\n    }\n\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.SET_QUOTA_BYTSTORAGEYPE);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.SETQUOTABYSTORAGETYPE;\n    new FsPathRunner(op, path, new StorageTypeParam(type.name()),\n        new StorageSpaceQuotaParam(quota)).run();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java"
    }
  }
}