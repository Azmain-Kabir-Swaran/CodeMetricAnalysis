{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuxServices.java",
  "functionName": "createServiceRecordFromConfiguration",
  "functionId": "createServiceRecordFromConfiguration___sName-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
  "functionStartLine": 703,
  "functionEndLine": 739,
  "numCommitsSeen": 28,
  "timeTaken": 2137,
  "changeHistory": [
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61"
  ],
  "changeHistoryShort": {
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9075.  Add ability to register/remove auxiliary service without restart node manager.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "18/12/18 2:05 PM",
      "commitName": "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,37 @@\n+  private static AuxServiceRecord createServiceRecordFromConfiguration(String\n+      sName, Configuration conf) {\n+    String className \u003d conf.get(String.format(\n+        YarnConfiguration.NM_AUX_SERVICE_FMT, sName));\n+    String remoteClassPath \u003d conf.get(String.format(\n+        YarnConfiguration.NM_AUX_SERVICE_REMOTE_CLASSPATH, sName));\n+    String[] systemClasses \u003d conf.getTrimmedStrings(String.format(\n+        YarnConfiguration.NM_AUX_SERVICES_SYSTEM_CLASSES, sName));\n+\n+    AuxServiceConfiguration serviceConf \u003d new AuxServiceConfiguration();\n+    if (className !\u003d null) {\n+      serviceConf.setProperty(CLASS_NAME, className);\n+    }\n+    if (systemClasses !\u003d null) {\n+      serviceConf.setProperty(SYSTEM_CLASSES, StringUtils.join(\",\",\n+          systemClasses));\n+    }\n+    if (remoteClassPath !\u003d null) {\n+      AuxServiceFile.TypeEnum type;\n+      String lcClassPath \u003d StringUtils.toLowerCase(remoteClassPath);\n+      if (lcClassPath.endsWith(\".jar\")) {\n+        type \u003d AuxServiceFile.TypeEnum.STATIC;\n+      } else if (lcClassPath.endsWith(\".zip\") ||\n+          lcClassPath.endsWith(\".tar.gz\") || lcClassPath.endsWith(\".tgz\") ||\n+          lcClassPath.endsWith(\".tar\")) {\n+        type \u003d AuxServiceFile.TypeEnum.ARCHIVE;\n+      } else {\n+        throw new YarnRuntimeException(\"Cannot unpack file from \" +\n+            \"remote-file-path:\" + remoteClassPath + \"for aux-service:\" +\n+            sName + \".\\n\");\n+      }\n+      AuxServiceFile file \u003d new AuxServiceFile().srcFile(remoteClassPath)\n+          .type(type);\n+      serviceConf.getFiles().add(file);\n+    }\n+    return new AuxServiceRecord().name(sName).configuration(serviceConf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static AuxServiceRecord createServiceRecordFromConfiguration(String\n      sName, Configuration conf) {\n    String className \u003d conf.get(String.format(\n        YarnConfiguration.NM_AUX_SERVICE_FMT, sName));\n    String remoteClassPath \u003d conf.get(String.format(\n        YarnConfiguration.NM_AUX_SERVICE_REMOTE_CLASSPATH, sName));\n    String[] systemClasses \u003d conf.getTrimmedStrings(String.format(\n        YarnConfiguration.NM_AUX_SERVICES_SYSTEM_CLASSES, sName));\n\n    AuxServiceConfiguration serviceConf \u003d new AuxServiceConfiguration();\n    if (className !\u003d null) {\n      serviceConf.setProperty(CLASS_NAME, className);\n    }\n    if (systemClasses !\u003d null) {\n      serviceConf.setProperty(SYSTEM_CLASSES, StringUtils.join(\",\",\n          systemClasses));\n    }\n    if (remoteClassPath !\u003d null) {\n      AuxServiceFile.TypeEnum type;\n      String lcClassPath \u003d StringUtils.toLowerCase(remoteClassPath);\n      if (lcClassPath.endsWith(\".jar\")) {\n        type \u003d AuxServiceFile.TypeEnum.STATIC;\n      } else if (lcClassPath.endsWith(\".zip\") ||\n          lcClassPath.endsWith(\".tar.gz\") || lcClassPath.endsWith(\".tgz\") ||\n          lcClassPath.endsWith(\".tar\")) {\n        type \u003d AuxServiceFile.TypeEnum.ARCHIVE;\n      } else {\n        throw new YarnRuntimeException(\"Cannot unpack file from \" +\n            \"remote-file-path:\" + remoteClassPath + \"for aux-service:\" +\n            sName + \".\\n\");\n      }\n      AuxServiceFile file \u003d new AuxServiceFile().srcFile(remoteClassPath)\n          .type(type);\n      serviceConf.getFiles().add(file);\n    }\n    return new AuxServiceRecord().name(sName).configuration(serviceConf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
    }
  }
}