{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientHSTokenSelector.java",
  "functionName": "selectToken",
  "functionId": "selectToken___service-Text__tokens-Collection__Token__? extends TokenIdentifier____",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/security/client/ClientHSTokenSelector.java",
  "functionStartLine": 38,
  "functionEndLine": 55,
  "numCommitsSeen": 2,
  "timeTaken": 930,
  "changeHistory": [
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e"
  ],
  "changeHistoryShort": {
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3380. Token infrastructure for running clients which are not kerberos authenticated. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229855 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/12 5:50 PM",
      "commitName": "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,18 @@\n+  public Token\u003cMRDelegationTokenIdentifier\u003e selectToken(Text service,\n+      Collection\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokens) {\n+    if (service \u003d\u003d null) {\n+      return null;\n+    }\n+    LOG.debug(\"Looking for a token with service \" + service.toString());\n+    for (Token\u003c? extends TokenIdentifier\u003e token : tokens) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Token kind is \" + token.getKind().toString()\n+            + \" and the token\u0027s service name is \" + token.getService());\n+      }\n+      if (MRDelegationTokenIdentifier.KIND_NAME.equals(token.getKind())\n+          \u0026\u0026 service.equals(token.getService())) {\n+        return (Token\u003cMRDelegationTokenIdentifier\u003e) token;\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cMRDelegationTokenIdentifier\u003e selectToken(Text service,\n      Collection\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokens) {\n    if (service \u003d\u003d null) {\n      return null;\n    }\n    LOG.debug(\"Looking for a token with service \" + service.toString());\n    for (Token\u003c? extends TokenIdentifier\u003e token : tokens) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Token kind is \" + token.getKind().toString()\n            + \" and the token\u0027s service name is \" + token.getService());\n      }\n      if (MRDelegationTokenIdentifier.KIND_NAME.equals(token.getKind())\n          \u0026\u0026 service.equals(token.getService())) {\n        return (Token\u003cMRDelegationTokenIdentifier\u003e) token;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/security/client/ClientHSTokenSelector.java"
    }
  }
}