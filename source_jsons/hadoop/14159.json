{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QuorumJournalManager.java",
  "functionName": "format",
  "functionId": "format___nsInfo-NamespaceInfo__force-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
  "functionStartLine": 252,
  "functionEndLine": 266,
  "numCommitsSeen": 72,
  "timeTaken": 3324,
  "changeHistory": [
    "96c4575d7373079becfa3e3db29ba98e6fb86388",
    "b9e423fa8d30ea89244f6ec018a8064cc87d94a9",
    "8a8c9c18d37f0c8b219264796c0df4bcae6f4e38",
    "f765fdb65701e61887daedb2b369af4be12cb432"
  ],
  "changeHistoryShort": {
    "96c4575d7373079becfa3e3db29ba98e6fb86388": "Ymultichange(Yparameterchange,Ybodychange)",
    "b9e423fa8d30ea89244f6ec018a8064cc87d94a9": "Ybodychange",
    "8a8c9c18d37f0c8b219264796c0df4bcae6f4e38": "Ybodychange",
    "f765fdb65701e61887daedb2b369af4be12cb432": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96c4575d7373079becfa3e3db29ba98e6fb86388": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13805. Journal Nodes should allow to format non-empty directories with -force option. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "23/08/18 7:44 PM",
      "commitName": "96c4575d7373079becfa3e3db29ba98e6fb86388",
      "commitAuthor": "Surendra Singh Lilhore",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13805. Journal Nodes should allow to format non-empty directories with -force option. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "23/08/18 7:44 PM",
          "commitName": "96c4575d7373079becfa3e3db29ba98e6fb86388",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "09/08/18 10:11 AM",
          "commitNameOld": "5326a7906de7c86a236d948012cabf3a9ba82310",
          "commitAuthorOld": "Chen Liang",
          "daysBetweenCommits": 14.4,
          "commitsBetweenForRepo": 147,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void format(NamespaceInfo nsInfo) throws IOException {\n-    QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n+  public void format(NamespaceInfo nsInfo, boolean force) throws IOException {\n+    QuorumCall\u003cAsyncLogger, Void\u003e call \u003d loggers.format(nsInfo, force);\n     try {\n       call.waitFor(loggers.size(), loggers.size(), 0, timeoutMs,\n           \"format\");\n     } catch (InterruptedException e) {\n       throw new IOException(\"Interrupted waiting for format() response\");\n     } catch (TimeoutException e) {\n       throw new IOException(\"Timed out waiting for format() response\");\n     }\n     \n     if (call.countExceptions() \u003e 0) {\n       call.rethrowException(\"Could not format one or more JournalNodes\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void format(NamespaceInfo nsInfo, boolean force) throws IOException {\n    QuorumCall\u003cAsyncLogger, Void\u003e call \u003d loggers.format(nsInfo, force);\n    try {\n      call.waitFor(loggers.size(), loggers.size(), 0, timeoutMs,\n          \"format\");\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted waiting for format() response\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for format() response\");\n    }\n    \n    if (call.countExceptions() \u003e 0) {\n      call.rethrowException(\"Could not format one or more JournalNodes\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
          "extendedDetails": {
            "oldValue": "[nsInfo-NamespaceInfo]",
            "newValue": "[nsInfo-NamespaceInfo, force-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13805. Journal Nodes should allow to format non-empty directories with -force option. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "23/08/18 7:44 PM",
          "commitName": "96c4575d7373079becfa3e3db29ba98e6fb86388",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "09/08/18 10:11 AM",
          "commitNameOld": "5326a7906de7c86a236d948012cabf3a9ba82310",
          "commitAuthorOld": "Chen Liang",
          "daysBetweenCommits": 14.4,
          "commitsBetweenForRepo": 147,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public void format(NamespaceInfo nsInfo) throws IOException {\n-    QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n+  public void format(NamespaceInfo nsInfo, boolean force) throws IOException {\n+    QuorumCall\u003cAsyncLogger, Void\u003e call \u003d loggers.format(nsInfo, force);\n     try {\n       call.waitFor(loggers.size(), loggers.size(), 0, timeoutMs,\n           \"format\");\n     } catch (InterruptedException e) {\n       throw new IOException(\"Interrupted waiting for format() response\");\n     } catch (TimeoutException e) {\n       throw new IOException(\"Timed out waiting for format() response\");\n     }\n     \n     if (call.countExceptions() \u003e 0) {\n       call.rethrowException(\"Could not format one or more JournalNodes\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void format(NamespaceInfo nsInfo, boolean force) throws IOException {\n    QuorumCall\u003cAsyncLogger, Void\u003e call \u003d loggers.format(nsInfo, force);\n    try {\n      call.waitFor(loggers.size(), loggers.size(), 0, timeoutMs,\n          \"format\");\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted waiting for format() response\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for format() response\");\n    }\n    \n    if (call.countExceptions() \u003e 0) {\n      call.rethrowException(\"Could not format one or more JournalNodes\");\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "b9e423fa8d30ea89244f6ec018a8064cc87d94a9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12496. Make QuorumJournalManager timeout properties configurable. Contributed by Ajay Kumar.\n",
      "commitDate": "21/09/17 8:44 AM",
      "commitName": "b9e423fa8d30ea89244f6ec018a8064cc87d94a9",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/02/17 4:33 PM",
      "commitNameOld": "13d4bcfe3535a2df79c2a56e7578716d15497ff4",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 210.63,
      "commitsBetweenForRepo": 1366,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void format(NamespaceInfo nsInfo) throws IOException {\n     QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n     try {\n-      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS,\n+      call.waitFor(loggers.size(), loggers.size(), 0, timeoutMs,\n           \"format\");\n     } catch (InterruptedException e) {\n       throw new IOException(\"Interrupted waiting for format() response\");\n     } catch (TimeoutException e) {\n       throw new IOException(\"Timed out waiting for format() response\");\n     }\n     \n     if (call.countExceptions() \u003e 0) {\n       call.rethrowException(\"Could not format one or more JournalNodes\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void format(NamespaceInfo nsInfo) throws IOException {\n    QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n    try {\n      call.waitFor(loggers.size(), loggers.size(), 0, timeoutMs,\n          \"format\");\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted waiting for format() response\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for format() response\");\n    }\n    \n    if (call.countExceptions() \u003e 0) {\n      call.rethrowException(\"Could not format one or more JournalNodes\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
      "extendedDetails": {}
    },
    "8a8c9c18d37f0c8b219264796c0df4bcae6f4e38": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3906. QJM: quorum timeout on failover with large log segment. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1383251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/12 11:31 PM",
      "commitName": "8a8c9c18d37f0c8b219264796c0df4bcae6f4e38",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "05/09/12 11:57 PM",
      "commitNameOld": "437948ea1c0c9c61c2b5049b82ffd9525f33be97",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 4.98,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public void format(NamespaceInfo nsInfo) throws IOException {\n     QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n     try {\n-      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS);\n+      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS,\n+          \"format\");\n     } catch (InterruptedException e) {\n       throw new IOException(\"Interrupted waiting for format() response\");\n     } catch (TimeoutException e) {\n       throw new IOException(\"Timed out waiting for format() response\");\n     }\n     \n     if (call.countExceptions() \u003e 0) {\n       call.rethrowException(\"Could not format one or more JournalNodes\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void format(NamespaceInfo nsInfo) throws IOException {\n    QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n    try {\n      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS,\n          \"format\");\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted waiting for format() response\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for format() response\");\n    }\n    \n    if (call.countExceptions() \u003e 0) {\n      call.rethrowException(\"Could not format one or more JournalNodes\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java",
      "extendedDetails": {}
    },
    "f765fdb65701e61887daedb2b369af4be12cb432": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3793. Implement genericized format() in QJM. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1373177 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/12 5:48 PM",
      "commitName": "f765fdb65701e61887daedb2b369af4be12cb432",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+  public void format(NamespaceInfo nsInfo) throws IOException {\n+    QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n+    try {\n+      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS);\n+    } catch (InterruptedException e) {\n+      throw new IOException(\"Interrupted waiting for format() response\");\n+    } catch (TimeoutException e) {\n+      throw new IOException(\"Timed out waiting for format() response\");\n+    }\n+    \n+    if (call.countExceptions() \u003e 0) {\n+      call.rethrowException(\"Could not format one or more JournalNodes\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void format(NamespaceInfo nsInfo) throws IOException {\n    QuorumCall\u003cAsyncLogger,Void\u003e call \u003d loggers.format(nsInfo);\n    try {\n      call.waitFor(loggers.size(), loggers.size(), 0, FORMAT_TIMEOUT_MS);\n    } catch (InterruptedException e) {\n      throw new IOException(\"Interrupted waiting for format() response\");\n    } catch (TimeoutException e) {\n      throw new IOException(\"Timed out waiting for format() response\");\n    }\n    \n    if (call.countExceptions() \u003e 0) {\n      call.rethrowException(\"Could not format one or more JournalNodes\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java"
    }
  }
}