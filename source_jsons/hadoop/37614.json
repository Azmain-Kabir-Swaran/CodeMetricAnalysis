{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenRenewer.java",
  "functionName": "setTimerForTokenRenewal",
  "functionId": "setTimerForTokenRenewal___token-DelegationTokenToRenew",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
  "functionStartLine": 626,
  "functionEndLine": 642,
  "numCommitsSeen": 43,
  "timeTaken": 2681,
  "changeHistory": [
    "7ab08a9c37a76edbe02d556fcfb2e637f45afc21",
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54",
    "cd975d4b647acaf818cbb4f67656bcf19785da15",
    "a806a2aac6c955e35b930d677523637bf016ff7a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "29c6c3ed328965a73fe7b68eb29cb30794beef38"
  ],
  "changeHistoryShort": {
    "7ab08a9c37a76edbe02d556fcfb2e637f45afc21": "Ybodychange",
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca": "Ybodychange",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": "Ybodychange",
    "cd975d4b647acaf818cbb4f67656bcf19785da15": "Ymodifierchange",
    "a806a2aac6c955e35b930d677523637bf016ff7a": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "29c6c3ed328965a73fe7b68eb29cb30794beef38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ab08a9c37a76edbe02d556fcfb2e637f45afc21": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15390. Yarn RM logs flooded by DelegationTokenRenewer trying to renew KMS tokens (xiaochen via rkanter)\n",
      "commitDate": "23/04/18 3:44 PM",
      "commitName": "7ab08a9c37a76edbe02d556fcfb2e637f45afc21",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "23/01/17 9:12 AM",
      "commitNameOld": "69fa81679f59378fd19a2c65db8019393d7c05a2",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 455.23,
      "commitsBetweenForRepo": 3083,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n       throws IOException {\n     // calculate timer time\n     long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n+    if (expiresIn \u003c\u003d 0) {\n+      LOG.info(\"Will not renew token \" + token);\n+      return;\n+    }\n     long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n     // need to create new task every time\n     RenewalTimerTask tTask \u003d new RenewalTimerTask(token);\n     token.setTimerTask(tTask); // keep reference to the timer\n \n     renewalTimer.schedule(token.timerTask, new Date(renewIn));\n     LOG.info(\"Renew \" + token + \" in \" + expiresIn + \" ms, appId \u003d \"\n         + token.referringAppIds);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n      throws IOException {\n    // calculate timer time\n    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n    if (expiresIn \u003c\u003d 0) {\n      LOG.info(\"Will not renew token \" + token);\n      return;\n    }\n    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n    // need to create new task every time\n    RenewalTimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n    LOG.info(\"Renew \" + token + \" in \" + expiresIn + \" ms, appId \u003d \"\n        + token.referringAppIds);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3055. Fixed ResourceManager\u0027s DelegationTokenRenewer to not stop token renewal of applications part of a bigger workflow. Contributed by Daryn Sharp.\n",
      "commitDate": "09/04/15 1:08 PM",
      "commitName": "9c5911294e0ba71aefe4763731b0e780cde9d0ca",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/03/15 10:45 AM",
      "commitNameOld": "6ca1f12024fd7cec7b01df0f039ca59f3f365dc1",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 17.1,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n       throws IOException {\n       \n     // calculate timer time\n     long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n     long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n     // need to create new task every time\n-    TimerTask tTask \u003d new RenewalTimerTask(token);\n+    RenewalTimerTask tTask \u003d new RenewalTimerTask(token);\n     token.setTimerTask(tTask); // keep reference to the timer\n \n     renewalTimer.schedule(token.timerTask, new Date(renewIn));\n     LOG.info(\"Renew \" + token + \" in \" + expiresIn + \" ms, appId \u003d \"\n-        + token.applicationId);\n+        + token.referringAppIds);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n      throws IOException {\n      \n    // calculate timer time\n    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n    // need to create new task every time\n    RenewalTimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n    LOG.info(\"Renew \" + token + \" in \" + expiresIn + \" ms, appId \u003d \"\n        + token.referringAppIds);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2704. Changed ResourceManager to optionally obtain tokens itself for the sake of localization and log-aggregation for long-running services. Contributed by Jian He.\n",
      "commitDate": "27/10/14 3:49 PM",
      "commitName": "a16d022ca4313a41425c8e97841c841a2d6f2f54",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/08/14 11:16 AM",
      "commitNameOld": "3de66011c2e80d7c458a67f80042af986fcc677d",
      "commitAuthorOld": "Hitesh Shah",
      "daysBetweenCommits": 59.19,
      "commitsBetweenForRepo": 586,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n       throws IOException {\n       \n     // calculate timer time\n     long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n     long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n-    \n     // need to create new task every time\n     TimerTask tTask \u003d new RenewalTimerTask(token);\n     token.setTimerTask(tTask); // keep reference to the timer\n \n     renewalTimer.schedule(token.timerTask, new Date(renewIn));\n+\n+    LOG.info(\"Renew \" + token + \" in \" + expiresIn + \" ms, appId \u003d \"\n+        + token.applicationId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n      throws IOException {\n      \n    // calculate timer time\n    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n    // need to create new task every time\n    TimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n\n    LOG.info(\"Renew \" + token + \" in \" + expiresIn + \" ms, appId \u003d \"\n        + token.applicationId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "cd975d4b647acaf818cbb4f67656bcf19785da15": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-581. Added a test to verify that app delegation tokens are restored after RM restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1471187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/13 3:49 PM",
      "commitName": "cd975d4b647acaf818cbb4f67656bcf19785da15",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/02/13 4:26 PM",
      "commitNameOld": "5d679c4f43494eb4508edebc6cc5aa4ddc5a63d2",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 77.93,
      "commitsBetweenForRepo": 381,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  private void setTimerForTokenRenewal(DelegationTokenToRenew token)\n+  protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n       throws IOException {\n       \n     // calculate timer time\n     long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n     long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n     \n     // need to create new task every time\n     TimerTask tTask \u003d new RenewalTimerTask(token);\n     token.setTimerTask(tTask); // keep reference to the timer\n \n     renewalTimer.schedule(token.timerTask, new Date(renewIn));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void setTimerForTokenRenewal(DelegationTokenToRenew token)\n      throws IOException {\n      \n    // calculate timer time\n    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n    \n    // need to create new task every time\n    TimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "a806a2aac6c955e35b930d677523637bf016ff7a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-280. RM does not reject app submission with invalid tokens (Daryn Sharp via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1425079 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/12/12 10:49 AM",
      "commitName": "a806a2aac6c955e35b930d677523637bf016ff7a",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-280. RM does not reject app submission with invalid tokens (Daryn Sharp via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1425079 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/12/12 10:49 AM",
          "commitName": "a806a2aac6c955e35b930d677523637bf016ff7a",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "13/12/12 2:16 PM",
          "commitNameOld": "be8ef2ec33c6206bfb92734315961b6e3eb51fd0",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 7.86,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,13 @@\n-  void setTimerForTokenRenewal(DelegationTokenToRenew token, \n-                               boolean firstTime) throws IOException {\n+  private void setTimerForTokenRenewal(DelegationTokenToRenew token)\n+      throws IOException {\n       \n     // calculate timer time\n-    long now \u003d System.currentTimeMillis();\n-    long renewIn;\n-    if(firstTime) {\n-      renewIn \u003d now;\n-    } else {\n-      long expiresIn \u003d (token.expirationDate - now); \n-      renewIn \u003d now + expiresIn - expiresIn/10; // little bit before the expiration\n-    }\n+    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n+    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n     \n     // need to create new task every time\n     TimerTask tTask \u003d new RenewalTimerTask(token);\n     token.setTimerTask(tTask); // keep reference to the timer\n \n     renewalTimer.schedule(token.timerTask, new Date(renewIn));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setTimerForTokenRenewal(DelegationTokenToRenew token)\n      throws IOException {\n      \n    // calculate timer time\n    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n    \n    // need to create new task every time\n    TimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
          "extendedDetails": {
            "oldValue": "[token-DelegationTokenToRenew, firstTime-boolean]",
            "newValue": "[token-DelegationTokenToRenew]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-280. RM does not reject app submission with invalid tokens (Daryn Sharp via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1425079 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/12/12 10:49 AM",
          "commitName": "a806a2aac6c955e35b930d677523637bf016ff7a",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "13/12/12 2:16 PM",
          "commitNameOld": "be8ef2ec33c6206bfb92734315961b6e3eb51fd0",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 7.86,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,13 @@\n-  void setTimerForTokenRenewal(DelegationTokenToRenew token, \n-                               boolean firstTime) throws IOException {\n+  private void setTimerForTokenRenewal(DelegationTokenToRenew token)\n+      throws IOException {\n       \n     // calculate timer time\n-    long now \u003d System.currentTimeMillis();\n-    long renewIn;\n-    if(firstTime) {\n-      renewIn \u003d now;\n-    } else {\n-      long expiresIn \u003d (token.expirationDate - now); \n-      renewIn \u003d now + expiresIn - expiresIn/10; // little bit before the expiration\n-    }\n+    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n+    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n     \n     // need to create new task every time\n     TimerTask tTask \u003d new RenewalTimerTask(token);\n     token.setTimerTask(tTask); // keep reference to the timer\n \n     renewalTimer.schedule(token.timerTask, new Date(renewIn));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setTimerForTokenRenewal(DelegationTokenToRenew token)\n      throws IOException {\n      \n    // calculate timer time\n    long expiresIn \u003d token.expirationDate - System.currentTimeMillis();\n    long renewIn \u003d token.expirationDate - expiresIn/10; // little bit before the expiration\n    \n    // need to create new task every time\n    TimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void setTimerForTokenRenewal(DelegationTokenToRenew token, \n                               boolean firstTime) throws IOException {\n      \n    // calculate timer time\n    long now \u003d System.currentTimeMillis();\n    long renewIn;\n    if(firstTime) {\n      renewIn \u003d now;\n    } else {\n      long expiresIn \u003d (token.expirationDate - now); \n      renewIn \u003d now + expiresIn - expiresIn/10; // little bit before the expiration\n    }\n    \n    // need to create new task every time\n    TimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java"
      }
    },
    "29c6c3ed328965a73fe7b68eb29cb30794beef38": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2977. Fix ResourceManager to renew HDFS delegation tokens for applications. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189012 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 7:53 PM",
      "commitName": "29c6c3ed328965a73fe7b68eb29cb30794beef38",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,19 @@\n+  void setTimerForTokenRenewal(DelegationTokenToRenew token, \n+                               boolean firstTime) throws IOException {\n+      \n+    // calculate timer time\n+    long now \u003d System.currentTimeMillis();\n+    long renewIn;\n+    if(firstTime) {\n+      renewIn \u003d now;\n+    } else {\n+      long expiresIn \u003d (token.expirationDate - now); \n+      renewIn \u003d now + expiresIn - expiresIn/10; // little bit before the expiration\n+    }\n+    \n+    // need to create new task every time\n+    TimerTask tTask \u003d new RenewalTimerTask(token);\n+    token.setTimerTask(tTask); // keep reference to the timer\n+\n+    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void setTimerForTokenRenewal(DelegationTokenToRenew token, \n                               boolean firstTime) throws IOException {\n      \n    // calculate timer time\n    long now \u003d System.currentTimeMillis();\n    long renewIn;\n    if(firstTime) {\n      renewIn \u003d now;\n    } else {\n      long expiresIn \u003d (token.expirationDate - now); \n      renewIn \u003d now + expiresIn - expiresIn/10; // little bit before the expiration\n    }\n    \n    // need to create new task every time\n    TimerTask tTask \u003d new RenewalTimerTask(token);\n    token.setTimerTask(tTask); // keep reference to the timer\n\n    renewalTimer.schedule(token.timerTask, new Date(renewIn));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java"
    }
  }
}