{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IdentityTransformer.java",
  "functionName": "transformUserOrGroupForSetRequest",
  "functionId": "transformUserOrGroupForSetRequest___userOrGroup-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/IdentityTransformer.java",
  "functionStartLine": 150,
  "functionEndLine": 166,
  "numCommitsSeen": 5,
  "timeTaken": 666,
  "changeHistory": [
    "1f1655028eede24197705a594b6ef19e6737db35"
  ],
  "changeHistoryShort": {
    "1f1655028eede24197705a594b6ef19e6737db35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f1655028eede24197705a594b6ef19e6737db35": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15954. ABFS: Enable owner and group conversion for MSI and login user using OAuth.\n\nContributed by Da Zhou and Junhua Gu.\n",
      "commitDate": "07/02/19 1:58 PM",
      "commitName": "1f1655028eede24197705a594b6ef19e6737db35",
      "commitAuthor": "Da Zhou",
      "diff": "@@ -0,0 +1,17 @@\n+  public String transformUserOrGroupForSetRequest(String userOrGroup) {\n+    if (userOrGroup \u003d\u003d null || userOrGroup.isEmpty() || skipUserIdentityReplacement) {\n+      return userOrGroup;\n+    }\n+\n+    // case 1: when the owner to be set is stated in substitution list.\n+    if (isInSubstitutionList(userOrGroup)) {\n+      return servicePrincipalId;\n+    }\n+\n+    // case 2: when the owner is a short name of the user principal name(UPN).\n+    if (shouldUseFullyQualifiedUserName(userOrGroup)) {\n+      return getFullyQualifiedName(userOrGroup);\n+    }\n+\n+    return userOrGroup;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String transformUserOrGroupForSetRequest(String userOrGroup) {\n    if (userOrGroup \u003d\u003d null || userOrGroup.isEmpty() || skipUserIdentityReplacement) {\n      return userOrGroup;\n    }\n\n    // case 1: when the owner to be set is stated in substitution list.\n    if (isInSubstitutionList(userOrGroup)) {\n      return servicePrincipalId;\n    }\n\n    // case 2: when the owner is a short name of the user principal name(UPN).\n    if (shouldUseFullyQualifiedUserName(userOrGroup)) {\n      return getFullyQualifiedName(userOrGroup);\n    }\n\n    return userOrGroup;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/IdentityTransformer.java"
    }
  }
}