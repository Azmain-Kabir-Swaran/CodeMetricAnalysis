{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "flexByRestService",
  "functionId": "flexByRestService___serviceName-String__componentCounts-Map__String,Long__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 624,
  "functionEndLine": 636,
  "numCommitsSeen": 56,
  "timeTaken": 4086,
  "changeHistory": [
    "d30d57828fddaa8667de49af879cde999907c7f6",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "d30d57828fddaa8667de49af879cde999907c7f6": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d30d57828fddaa8667de49af879cde999907c7f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6669.  Implemented Kerberos security for YARN service framework.  (Contributed by Jian He)\n",
      "commitDate": "04/12/17 12:11 PM",
      "commitName": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/11/17 10:53 AM",
      "commitNameOld": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 18.05,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n       Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n     // load app definition\n     Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n     if (StringUtils.isEmpty(persistedService.getId())) {\n       throw new YarnException(\n           serviceName + \" appId is null, may be not submitted to YARN yet\");\n     }\n-    cachedAppIds.put(persistedService.getName(),\n-        ApplicationId.fromString(persistedService.getId()));\n+    cachedAppInfo.put(persistedService.getName(), new AppInfo(\n+        ApplicationId.fromString(persistedService.getId()), persistedService\n+        .getKerberosPrincipal().getPrincipalName()));\n     return flexComponents(serviceName, componentCounts, persistedService);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n      Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n    // load app definition\n    Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n    if (StringUtils.isEmpty(persistedService.getId())) {\n      throw new YarnException(\n          serviceName + \" appId is null, may be not submitted to YARN yet\");\n    }\n    cachedAppInfo.put(persistedService.getName(), new AppInfo(\n        ApplicationId.fromString(persistedService.getId()), persistedService\n        .getKerberosPrincipal().getPrincipalName()));\n    return flexComponents(serviceName, componentCounts, persistedService);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-  public Map\u003cString, Long\u003e flexByRestService(String appName,\n+  public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n       Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n     // load app definition\n-    Application persistedApp \u003d ServiceApiUtil.loadApplication(fs, appName);\n-    cachedAppIds.put(persistedApp.getName(),\n-        ApplicationId.fromString(persistedApp.getId()));\n-    return flexComponents(appName, componentCounts, persistedApp);\n+    Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n+    if (StringUtils.isEmpty(persistedService.getId())) {\n+      throw new YarnException(\n+          serviceName + \" appId is null, may be not submitted to YARN yet\");\n+    }\n+    cachedAppIds.put(persistedService.getName(),\n+        ApplicationId.fromString(persistedService.getId()));\n+    return flexComponents(serviceName, componentCounts, persistedService);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n      Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n    // load app definition\n    Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n    if (StringUtils.isEmpty(persistedService.getId())) {\n      throw new YarnException(\n          serviceName + \" appId is null, may be not submitted to YARN yet\");\n    }\n    cachedAppIds.put(persistedService.getName(),\n        ApplicationId.fromString(persistedService.getId()));\n    return flexComponents(serviceName, componentCounts, persistedService);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-  public Map\u003cString, Long\u003e flexByRestService(String appName,\n+  public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n       Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n     // load app definition\n-    Application persistedApp \u003d ServiceApiUtil.loadApplication(fs, appName);\n-    cachedAppIds.put(persistedApp.getName(),\n-        ApplicationId.fromString(persistedApp.getId()));\n-    return flexComponents(appName, componentCounts, persistedApp);\n+    Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n+    if (StringUtils.isEmpty(persistedService.getId())) {\n+      throw new YarnException(\n+          serviceName + \" appId is null, may be not submitted to YARN yet\");\n+    }\n+    cachedAppIds.put(persistedService.getName(),\n+        ApplicationId.fromString(persistedService.getId()));\n+    return flexComponents(serviceName, componentCounts, persistedService);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n      Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n    // load app definition\n    Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n    if (StringUtils.isEmpty(persistedService.getId())) {\n      throw new YarnException(\n          serviceName + \" appId is null, may be not submitted to YARN yet\");\n    }\n    cachedAppIds.put(persistedService.getName(),\n        ApplicationId.fromString(persistedService.getId()));\n    return flexComponents(serviceName, componentCounts, persistedService);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-  public Map\u003cString, Long\u003e flexByRestService(String appName,\n+  public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n       Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n     // load app definition\n-    Application persistedApp \u003d ServiceApiUtil.loadApplication(fs, appName);\n-    cachedAppIds.put(persistedApp.getName(),\n-        ApplicationId.fromString(persistedApp.getId()));\n-    return flexComponents(appName, componentCounts, persistedApp);\n+    Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n+    if (StringUtils.isEmpty(persistedService.getId())) {\n+      throw new YarnException(\n+          serviceName + \" appId is null, may be not submitted to YARN yet\");\n+    }\n+    cachedAppIds.put(persistedService.getName(),\n+        ApplicationId.fromString(persistedService.getId()));\n+    return flexComponents(serviceName, componentCounts, persistedService);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cString, Long\u003e flexByRestService(String serviceName,\n      Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n    // load app definition\n    Service persistedService \u003d ServiceApiUtil.loadService(fs, serviceName);\n    if (StringUtils.isEmpty(persistedService.getId())) {\n      throw new YarnException(\n          serviceName + \" appId is null, may be not submitted to YARN yet\");\n    }\n    cachedAppIds.put(persistedService.getName(),\n        ApplicationId.fromString(persistedService.getId()));\n    return flexComponents(serviceName, componentCounts, persistedService);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[appName-String, componentCounts-Map\u003cString,Long\u003e]",
            "newValue": "[serviceName-String, componentCounts-Map\u003cString,Long\u003e]"
          }
        }
      ]
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,8 @@\n+  public Map\u003cString, Long\u003e flexByRestService(String appName,\n+      Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n+    // load app definition\n+    Application persistedApp \u003d ServiceApiUtil.loadApplication(fs, appName);\n+    cachedAppIds.put(persistedApp.getName(),\n+        ApplicationId.fromString(persistedApp.getId()));\n+    return flexComponents(appName, componentCounts, persistedApp);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Long\u003e flexByRestService(String appName,\n      Map\u003cString, Long\u003e componentCounts) throws YarnException, IOException {\n    // load app definition\n    Application persistedApp \u003d ServiceApiUtil.loadApplication(fs, appName);\n    cachedAppIds.put(persistedApp.getName(),\n        ApplicationId.fromString(persistedApp.getId()));\n    return flexComponents(appName, componentCounts, persistedApp);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}