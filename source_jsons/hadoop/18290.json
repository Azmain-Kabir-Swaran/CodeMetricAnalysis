{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BalanceJournalInfoHDFS.java",
  "functionName": "getLatestStateJobPath",
  "functionId": "getLatestStateJobPath___job-BalanceJob",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceJournalInfoHDFS.java",
  "functionStartLine": 185,
  "functionEndLine": 202,
  "numCommitsSeen": 1,
  "timeTaken": 356,
  "changeHistory": [
    "1983eea62def58fb769f44c1d41dc29690274809"
  ],
  "changeHistoryShort": {
    "1983eea62def58fb769f44c1d41dc29690274809": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1983eea62def58fb769f44c1d41dc29690274809": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-15340. RBF: Implement BalanceProcedureScheduler basic framework. Contributed by Jinglun.\n",
      "commitDate": "19/05/20 7:39 PM",
      "commitName": "1983eea62def58fb769f44c1d41dc29690274809",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,18 @@\n+  private Path getLatestStateJobPath(BalanceJob job) throws IOException {\n+    Path latestFile \u003d null;\n+    Path basePath \u003d getJobBaseDir(job);\n+    FileSystem fs \u003d FileSystem.get(workUri, conf);\n+    RemoteIterator\u003cLocatedFileStatus\u003e iterator \u003d fs.listFiles(basePath, false);\n+    while (iterator.hasNext()) {\n+      FileStatus status \u003d iterator.next();\n+      String fileName \u003d status.getPath().getName();\n+      if (fileName.startsWith(JOB_PREFIX) \u0026\u0026 !fileName.contains(TMP_TAIL)) {\n+        if (latestFile \u003d\u003d null) {\n+          latestFile \u003d status.getPath();\n+        } else if (latestFile.getName().compareTo(fileName) \u003c\u003d 0) {\n+          latestFile \u003d status.getPath();\n+        }\n+      }\n+    }\n+    return latestFile;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Path getLatestStateJobPath(BalanceJob job) throws IOException {\n    Path latestFile \u003d null;\n    Path basePath \u003d getJobBaseDir(job);\n    FileSystem fs \u003d FileSystem.get(workUri, conf);\n    RemoteIterator\u003cLocatedFileStatus\u003e iterator \u003d fs.listFiles(basePath, false);\n    while (iterator.hasNext()) {\n      FileStatus status \u003d iterator.next();\n      String fileName \u003d status.getPath().getName();\n      if (fileName.startsWith(JOB_PREFIX) \u0026\u0026 !fileName.contains(TMP_TAIL)) {\n        if (latestFile \u003d\u003d null) {\n          latestFile \u003d status.getPath();\n        } else if (latestFile.getName().compareTo(fileName) \u003c\u003d 0) {\n          latestFile \u003d status.getPath();\n        }\n      }\n    }\n    return latestFile;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceJournalInfoHDFS.java"
    }
  }
}