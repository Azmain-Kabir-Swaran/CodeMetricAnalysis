{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "purge",
  "functionId": "purge___prefix-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 2927,
  "functionEndLine": 2956,
  "numCommitsSeen": 53,
  "timeTaken": 2403,
  "changeHistory": [
    "2ed58c40e5dcbf5c5303c00e85096085b1055f85",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "2ed58c40e5dcbf5c5303c00e85096085b1055f85": "Ybodychange",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2ed58c40e5dcbf5c5303c00e85096085b1055f85": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13403. AzureNativeFileSystem rename/delete performance improvements. Contributed by Subramanyam Pattipaka.\n",
      "commitDate": "08/08/16 12:28 PM",
      "commitName": "2ed58c40e5dcbf5c5303c00e85096085b1055f85",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "04/03/16 10:57 PM",
      "commitNameOld": "c50aad0f854b74ede9668e35db314b0a93be81b2",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 156.52,
      "commitsBetweenForRepo": 1122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public void purge(String prefix) throws IOException {\n     try {\n \n       // Attempts to purge may occur before opening any streams so first,\n       // check if a session exists, if not create a session with the Azure\n       // storage server.\n       if (null \u003d\u003d storageInteractionLayer) {\n         final String errMsg \u003d String.format(\n             \"Storage session expected for URI \u0027%s\u0027 but does not exist.\",\n             sessionUri);\n         throw new AssertionError(errMsg);\n       }\n \n       if (checkContainer(ContainerAccessType.ReadThenWrite) \u003d\u003d ContainerState.DoesntExist) {\n         // Container doesn\u0027t exist, no need to do anything.\n         return;\n       }\n       // Get all blob items with the given prefix from the container and delete\n       // them.\n-      Iterable\u003cListBlobItem\u003e objects \u003d listRootBlobs(prefix, false);\n+      Iterable\u003cListBlobItem\u003e objects \u003d listRootBlobs(prefix, false, false);\n       for (ListBlobItem blobItem : objects) {\n         ((CloudBlob) blobItem).delete(DeleteSnapshotsOption.NONE, null, null,\n             getInstrumentedContext());\n       }\n     } catch (Exception e) {\n       // Re-throw as an Azure storage exception.\n       //\n       throw new AzureException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void purge(String prefix) throws IOException {\n    try {\n\n      // Attempts to purge may occur before opening any streams so first,\n      // check if a session exists, if not create a session with the Azure\n      // storage server.\n      if (null \u003d\u003d storageInteractionLayer) {\n        final String errMsg \u003d String.format(\n            \"Storage session expected for URI \u0027%s\u0027 but does not exist.\",\n            sessionUri);\n        throw new AssertionError(errMsg);\n      }\n\n      if (checkContainer(ContainerAccessType.ReadThenWrite) \u003d\u003d ContainerState.DoesntExist) {\n        // Container doesn\u0027t exist, no need to do anything.\n        return;\n      }\n      // Get all blob items with the given prefix from the container and delete\n      // them.\n      Iterable\u003cListBlobItem\u003e objects \u003d listRootBlobs(prefix, false, false);\n      for (ListBlobItem blobItem : objects) {\n        ((CloudBlob) blobItem).delete(DeleteSnapshotsOption.NONE, null, null,\n            getInstrumentedContext());\n      }\n    } catch (Exception e) {\n      // Re-throw as an Azure storage exception.\n      //\n      throw new AzureException(e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,30 @@\n+  public void purge(String prefix) throws IOException {\n+    try {\n+\n+      // Attempts to purge may occur before opening any streams so first,\n+      // check if a session exists, if not create a session with the Azure\n+      // storage server.\n+      if (null \u003d\u003d storageInteractionLayer) {\n+        final String errMsg \u003d String.format(\n+            \"Storage session expected for URI \u0027%s\u0027 but does not exist.\",\n+            sessionUri);\n+        throw new AssertionError(errMsg);\n+      }\n+\n+      if (checkContainer(ContainerAccessType.ReadThenWrite) \u003d\u003d ContainerState.DoesntExist) {\n+        // Container doesn\u0027t exist, no need to do anything.\n+        return;\n+      }\n+      // Get all blob items with the given prefix from the container and delete\n+      // them.\n+      Iterable\u003cListBlobItem\u003e objects \u003d listRootBlobs(prefix, false);\n+      for (ListBlobItem blobItem : objects) {\n+        ((CloudBlob) blobItem).delete(DeleteSnapshotsOption.NONE, null, null,\n+            getInstrumentedContext());\n+      }\n+    } catch (Exception e) {\n+      // Re-throw as an Azure storage exception.\n+      //\n+      throw new AzureException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void purge(String prefix) throws IOException {\n    try {\n\n      // Attempts to purge may occur before opening any streams so first,\n      // check if a session exists, if not create a session with the Azure\n      // storage server.\n      if (null \u003d\u003d storageInteractionLayer) {\n        final String errMsg \u003d String.format(\n            \"Storage session expected for URI \u0027%s\u0027 but does not exist.\",\n            sessionUri);\n        throw new AssertionError(errMsg);\n      }\n\n      if (checkContainer(ContainerAccessType.ReadThenWrite) \u003d\u003d ContainerState.DoesntExist) {\n        // Container doesn\u0027t exist, no need to do anything.\n        return;\n      }\n      // Get all blob items with the given prefix from the container and delete\n      // them.\n      Iterable\u003cListBlobItem\u003e objects \u003d listRootBlobs(prefix, false);\n      for (ListBlobItem blobItem : objects) {\n        ((CloudBlob) blobItem).delete(DeleteSnapshotsOption.NONE, null, null,\n            getInstrumentedContext());\n      }\n    } catch (Exception e) {\n      // Re-throw as an Azure storage exception.\n      //\n      throw new AzureException(e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}