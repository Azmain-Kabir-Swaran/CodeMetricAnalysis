{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SaslRpcClient.java",
  "functionName": "getServerToken",
  "functionId": "getServerToken___authType-SaslAuth",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java",
  "functionStartLine": 272,
  "functionEndLine": 286,
  "numCommitsSeen": 30,
  "timeTaken": 1404,
  "changeHistory": [
    "ff2b2bea9143c6299cad4bb7d1d049e415d2d7f3",
    "65be21267587f04a2c33af65b951211cc9085b15"
  ],
  "changeHistoryShort": {
    "ff2b2bea9143c6299cad4bb7d1d049e415d2d7f3": "Ybodychange",
    "65be21267587f04a2c33af65b951211cc9085b15": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff2b2bea9143c6299cad4bb7d1d049e415d2d7f3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12385. Include nested stack trace in SaslRpcClient.getServerToken() (stevel)\n",
      "commitDate": "28/10/15 3:25 AM",
      "commitName": "ff2b2bea9143c6299cad4bb7d1d049e415d2d7f3",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "22/10/15 8:19 AM",
      "commitNameOld": "4c0bae240bea9a475e8ee9a0b081bfce6d1cd1e5",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 5.8,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n   private Token\u003c?\u003e getServerToken(SaslAuth authType) throws IOException {\n     TokenInfo tokenInfo \u003d SecurityUtil.getTokenInfo(protocol, conf);\n-    LOG.debug(\"Get token info proto:\"+protocol+\" info:\"+tokenInfo);\n+    LOG.debug(\"Get token info proto:\" + protocol + \" info:\" + tokenInfo);\n     if (tokenInfo \u003d\u003d null) { // protocol has no support for tokens\n       return null;\n     }\n     TokenSelector\u003c?\u003e tokenSelector \u003d null;\n     try {\n       tokenSelector \u003d tokenInfo.value().newInstance();\n-    } catch (InstantiationException e) {\n-      throw new IOException(e.toString());\n-    } catch (IllegalAccessException e) {\n-      throw new IOException(e.toString());\n+    } catch (InstantiationException | IllegalAccessException e) {\n+      throw new IOException(e.toString(), e);\n     }\n     return tokenSelector.selectToken(\n         SecurityUtil.buildTokenService(serverAddr), ugi.getTokens());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c?\u003e getServerToken(SaslAuth authType) throws IOException {\n    TokenInfo tokenInfo \u003d SecurityUtil.getTokenInfo(protocol, conf);\n    LOG.debug(\"Get token info proto:\" + protocol + \" info:\" + tokenInfo);\n    if (tokenInfo \u003d\u003d null) { // protocol has no support for tokens\n      return null;\n    }\n    TokenSelector\u003c?\u003e tokenSelector \u003d null;\n    try {\n      tokenSelector \u003d tokenInfo.value().newInstance();\n    } catch (InstantiationException | IllegalAccessException e) {\n      throw new IOException(e.toString(), e);\n    }\n    return tokenSelector.selectToken(\n        SecurityUtil.buildTokenService(serverAddr), ugi.getTokens());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java",
      "extendedDetails": {}
    },
    "65be21267587f04a2c33af65b951211cc9085b15": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/13 7:44 AM",
      "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
      "commitAuthor": "Daryn Sharp",
      "diff": "@@ -0,0 +1,17 @@\n+  private Token\u003c?\u003e getServerToken(SaslAuth authType) throws IOException {\n+    TokenInfo tokenInfo \u003d SecurityUtil.getTokenInfo(protocol, conf);\n+    LOG.debug(\"Get token info proto:\"+protocol+\" info:\"+tokenInfo);\n+    if (tokenInfo \u003d\u003d null) { // protocol has no support for tokens\n+      return null;\n+    }\n+    TokenSelector\u003c?\u003e tokenSelector \u003d null;\n+    try {\n+      tokenSelector \u003d tokenInfo.value().newInstance();\n+    } catch (InstantiationException e) {\n+      throw new IOException(e.toString());\n+    } catch (IllegalAccessException e) {\n+      throw new IOException(e.toString());\n+    }\n+    return tokenSelector.selectToken(\n+        SecurityUtil.buildTokenService(serverAddr), ugi.getTokens());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c?\u003e getServerToken(SaslAuth authType) throws IOException {\n    TokenInfo tokenInfo \u003d SecurityUtil.getTokenInfo(protocol, conf);\n    LOG.debug(\"Get token info proto:\"+protocol+\" info:\"+tokenInfo);\n    if (tokenInfo \u003d\u003d null) { // protocol has no support for tokens\n      return null;\n    }\n    TokenSelector\u003c?\u003e tokenSelector \u003d null;\n    try {\n      tokenSelector \u003d tokenInfo.value().newInstance();\n    } catch (InstantiationException e) {\n      throw new IOException(e.toString());\n    } catch (IllegalAccessException e) {\n      throw new IOException(e.toString());\n    }\n    return tokenSelector.selectToken(\n        SecurityUtil.buildTokenService(serverAddr), ugi.getTokens());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java"
    }
  }
}