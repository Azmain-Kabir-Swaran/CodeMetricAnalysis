{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSAdmin.java",
  "functionName": "getDataNodeProxy",
  "functionId": "getDataNodeProxy___datanode-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
  "functionStartLine": 2487,
  "functionEndLine": 2502,
  "numCommitsSeen": 118,
  "timeTaken": 10186,
  "changeHistory": [
    "e2c9b288b223b9fd82dc12018936e13128413492",
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd",
    "11db1b855fa08a5ef7cdf2d40bd18ee33eba92ee",
    "0920056f0467bcf055628bc23d91c602aac7da49",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "e2c9b288b223b9fd82dc12018936e13128413492": "Ybodychange",
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd": "Ybodychange",
    "11db1b855fa08a5ef7cdf2d40bd18ee33eba92ee": "Ybodychange",
    "0920056f0467bcf055628bc23d91c602aac7da49": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2c9b288b223b9fd82dc12018936e13128413492": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "28/08/15 2:38 PM",
      "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/08/15 3:52 AM",
      "commitNameOld": "0bf285413f8fcaadbb2d5817fe8090f5fb0d37d9",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 1.45,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n       throws IOException {\n     InetSocketAddress datanodeAddr \u003d NetUtils.createSocketAddr(datanode);\n     // Get the current configuration\n     Configuration conf \u003d getConf();\n \n     // For datanode proxy the server principal should be DN\u0027s one.\n     conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n         conf.get(DFSConfigKeys.DFS_DATANODE_KERBEROS_PRINCIPAL_KEY, \"\"));\n \n     // Create the client\n     ClientDatanodeProtocol dnProtocol \u003d     \n-        DFSUtil.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n+        DFSUtilClient.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n             NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n     return dnProtocol;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n      throws IOException {\n    InetSocketAddress datanodeAddr \u003d NetUtils.createSocketAddr(datanode);\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    // For datanode proxy the server principal should be DN\u0027s one.\n    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n        conf.get(DFSConfigKeys.DFS_DATANODE_KERBEROS_PRINCIPAL_KEY, \"\"));\n\n    // Create the client\n    ClientDatanodeProtocol dnProtocol \u003d     \n        DFSUtilClient.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n            NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n    return dnProtocol;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6181. Fix the wrong property names in NFS user guide. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1585563 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/04/14 11:55 AM",
      "commitName": "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "03/04/14 1:18 PM",
      "commitNameOld": "620809b9a063bd6ea84d582166eed3fb957dcd0a",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.94,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n       throws IOException {\n     InetSocketAddress datanodeAddr \u003d NetUtils.createSocketAddr(datanode);\n     // Get the current configuration\n     Configuration conf \u003d getConf();\n \n     // For datanode proxy the server principal should be DN\u0027s one.\n     conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n-        conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n+        conf.get(DFSConfigKeys.DFS_DATANODE_KERBEROS_PRINCIPAL_KEY, \"\"));\n \n     // Create the client\n     ClientDatanodeProtocol dnProtocol \u003d     \n         DFSUtil.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n             NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n     return dnProtocol;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n      throws IOException {\n    InetSocketAddress datanodeAddr \u003d NetUtils.createSocketAddr(datanode);\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    // For datanode proxy the server principal should be DN\u0027s one.\n    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n        conf.get(DFSConfigKeys.DFS_DATANODE_KERBEROS_PRINCIPAL_KEY, \"\"));\n\n    // Create the client\n    ClientDatanodeProtocol dnProtocol \u003d     \n        DFSUtil.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n            NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n    return dnProtocol;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "11db1b855fa08a5ef7cdf2d40bd18ee33eba92ee": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2786. Fix host-based token incompatibilities in DFSUtil. Contributed by Kihwal Lee.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241766 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/12 7:55 PM",
      "commitName": "11db1b855fa08a5ef7cdf2d40bd18ee33eba92ee",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "11/01/12 9:13 PM",
      "commitNameOld": "dcea80a21b96e71e4dc3dca27b13444a327ad1a9",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 26.95,
      "commitsBetweenForRepo": 179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n       throws IOException {\n-    InetSocketAddress datanodeAddr \u003d DFSUtil.getSocketAddress(datanode);\n+    InetSocketAddress datanodeAddr \u003d NetUtils.createSocketAddr(datanode);\n     // Get the current configuration\n     Configuration conf \u003d getConf();\n \n     // For datanode proxy the server principal should be DN\u0027s one.\n     conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n         conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n \n     // Create the client\n     ClientDatanodeProtocol dnProtocol \u003d     \n         DFSUtil.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n             NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n     return dnProtocol;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n      throws IOException {\n    InetSocketAddress datanodeAddr \u003d NetUtils.createSocketAddr(datanode);\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    // For datanode proxy the server principal should be DN\u0027s one.\n    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n        conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n\n    // Create the client\n    ClientDatanodeProtocol dnProtocol \u003d     \n        DFSUtil.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n            NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n    return dnProtocol;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "0920056f0467bcf055628bc23d91c602aac7da49": {
      "type": "Ybodychange",
      "commitMessage": "\tHDFS-2481 Unknown protocol: org.apache.hadoop.hdfs.protocol.ClientProtocol (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188300 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 12:08 PM",
      "commitName": "0920056f0467bcf055628bc23d91c602aac7da49",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "04/09/11 12:30 PM",
      "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 49.98,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n       throws IOException {\n     InetSocketAddress datanodeAddr \u003d DFSUtil.getSocketAddress(datanode);\n     // Get the current configuration\n     Configuration conf \u003d getConf();\n \n     // For datanode proxy the server principal should be DN\u0027s one.\n     conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n         conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n \n     // Create the client\n-    ClientDatanodeProtocol dnProtocol \u003d RPC.getProxy(\n-        ClientDatanodeProtocol.class, ClientDatanodeProtocol.versionID,\n-        datanodeAddr, getUGI(), conf, NetUtils.getSocketFactory(conf,\n-            ClientDatanodeProtocol.class));\n+    ClientDatanodeProtocol dnProtocol \u003d     \n+        DFSUtil.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n+            NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n     return dnProtocol;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n      throws IOException {\n    InetSocketAddress datanodeAddr \u003d DFSUtil.getSocketAddress(datanode);\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    // For datanode proxy the server principal should be DN\u0027s one.\n    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n        conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n\n    // Create the client\n    ClientDatanodeProtocol dnProtocol \u003d     \n        DFSUtil.createClientDatanodeProtocolProxy(datanodeAddr, getUGI(), conf,\n            NetUtils.getSocketFactory(conf, ClientDatanodeProtocol.class));\n    return dnProtocol;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n      throws IOException {\n    InetSocketAddress datanodeAddr \u003d DFSUtil.getSocketAddress(datanode);\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    // For datanode proxy the server principal should be DN\u0027s one.\n    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n        conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n\n    // Create the client\n    ClientDatanodeProtocol dnProtocol \u003d RPC.getProxy(\n        ClientDatanodeProtocol.class, ClientDatanodeProtocol.versionID,\n        datanodeAddr, getUGI(), conf, NetUtils.getSocketFactory(conf,\n            ClientDatanodeProtocol.class));\n    return dnProtocol;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n      throws IOException {\n    InetSocketAddress datanodeAddr \u003d DFSUtil.getSocketAddress(datanode);\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    // For datanode proxy the server principal should be DN\u0027s one.\n    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n        conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n\n    // Create the client\n    ClientDatanodeProtocol dnProtocol \u003d RPC.getProxy(\n        ClientDatanodeProtocol.class, ClientDatanodeProtocol.versionID,\n        datanodeAddr, getUGI(), conf, NetUtils.getSocketFactory(conf,\n            ClientDatanodeProtocol.class));\n    return dnProtocol;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n+      throws IOException {\n+    InetSocketAddress datanodeAddr \u003d DFSUtil.getSocketAddress(datanode);\n+    // Get the current configuration\n+    Configuration conf \u003d getConf();\n+\n+    // For datanode proxy the server principal should be DN\u0027s one.\n+    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n+        conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n+\n+    // Create the client\n+    ClientDatanodeProtocol dnProtocol \u003d RPC.getProxy(\n+        ClientDatanodeProtocol.class, ClientDatanodeProtocol.versionID,\n+        datanodeAddr, getUGI(), conf, NetUtils.getSocketFactory(conf,\n+            ClientDatanodeProtocol.class));\n+    return dnProtocol;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ClientDatanodeProtocol getDataNodeProxy(String datanode)\n      throws IOException {\n    InetSocketAddress datanodeAddr \u003d DFSUtil.getSocketAddress(datanode);\n    // Get the current configuration\n    Configuration conf \u003d getConf();\n\n    // For datanode proxy the server principal should be DN\u0027s one.\n    conf.set(CommonConfigurationKeys.HADOOP_SECURITY_SERVICE_USER_NAME_KEY,\n        conf.get(DFSConfigKeys.DFS_DATANODE_USER_NAME_KEY, \"\"));\n\n    // Create the client\n    ClientDatanodeProtocol dnProtocol \u003d RPC.getProxy(\n        ClientDatanodeProtocol.class, ClientDatanodeProtocol.versionID,\n        datanodeAddr, getUGI(), conf, NetUtils.getSocketFactory(conf,\n            ClientDatanodeProtocol.class));\n    return dnProtocol;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
    }
  }
}