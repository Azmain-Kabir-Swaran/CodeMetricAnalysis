{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Nfs3Utils.java",
  "functionName": "getAccessRightsForUserGroup",
  "functionId": "getAccessRightsForUserGroup___uid-int__gid-int__auxGids-int[]__attr-Nfs3FileAttributes",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/Nfs3Utils.java",
  "functionStartLine": 192,
  "functionEndLine": 210,
  "numCommitsSeen": 22,
  "timeTaken": 1904,
  "changeHistory": [
    "5f880f79d275c74475836a1932be6f6f2daa1407",
    "37f587563a943a827fbff865f5302bac6d202415"
  ],
  "changeHistoryShort": {
    "5f880f79d275c74475836a1932be6f6f2daa1407": "Ymultichange(Yparameterchange,Ybodychange)",
    "37f587563a943a827fbff865f5302bac6d202415": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f880f79d275c74475836a1932be6f6f2daa1407": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10701. NFS should not validate the access premission only based on the user\u0027s primary group. Contributed by Harsh J.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606042 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/14 5:00 AM",
      "commitName": "5f880f79d275c74475836a1932be6f6f2daa1407",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10701. NFS should not validate the access premission only based on the user\u0027s primary group. Contributed by Harsh J.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606042 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/06/14 5:00 AM",
          "commitName": "5f880f79d275c74475836a1932be6f6f2daa1407",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "24/03/14 1:49 PM",
          "commitNameOld": "3bfd18c6b0483ae27eff6d53bda934e67dda5464",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 94.63,
          "commitsBetweenForRepo": 581,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,19 @@\n   public static int getAccessRightsForUserGroup(int uid, int gid,\n-      Nfs3FileAttributes attr) {\n+      int[] auxGids, Nfs3FileAttributes attr) {\n     int mode \u003d attr.getMode();\n     if (uid \u003d\u003d attr.getUid()) {\n       return getAccessRights(mode \u003e\u003e 6, attr.getType());\n     }\n     if (gid \u003d\u003d attr.getGid()) {\n       return getAccessRights(mode \u003e\u003e 3, attr.getType());\n     }\n+    // Check for membership in auxiliary groups\n+    if (auxGids !\u003d null) {\n+      for (int auxGid : auxGids) {\n+        if (attr.getGid() \u003d\u003d auxGid) {\n+          return getAccessRights(mode \u003e\u003e 3, attr.getType());\n+        }\n+      }\n+    }\n     return getAccessRights(mode, attr.getType());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static int getAccessRightsForUserGroup(int uid, int gid,\n      int[] auxGids, Nfs3FileAttributes attr) {\n    int mode \u003d attr.getMode();\n    if (uid \u003d\u003d attr.getUid()) {\n      return getAccessRights(mode \u003e\u003e 6, attr.getType());\n    }\n    if (gid \u003d\u003d attr.getGid()) {\n      return getAccessRights(mode \u003e\u003e 3, attr.getType());\n    }\n    // Check for membership in auxiliary groups\n    if (auxGids !\u003d null) {\n      for (int auxGid : auxGids) {\n        if (attr.getGid() \u003d\u003d auxGid) {\n          return getAccessRights(mode \u003e\u003e 3, attr.getType());\n        }\n      }\n    }\n    return getAccessRights(mode, attr.getType());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/Nfs3Utils.java",
          "extendedDetails": {
            "oldValue": "[uid-int, gid-int, attr-Nfs3FileAttributes]",
            "newValue": "[uid-int, gid-int, auxGids-int[], attr-Nfs3FileAttributes]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10701. NFS should not validate the access premission only based on the user\u0027s primary group. Contributed by Harsh J.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606042 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/06/14 5:00 AM",
          "commitName": "5f880f79d275c74475836a1932be6f6f2daa1407",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "24/03/14 1:49 PM",
          "commitNameOld": "3bfd18c6b0483ae27eff6d53bda934e67dda5464",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 94.63,
          "commitsBetweenForRepo": 581,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,19 @@\n   public static int getAccessRightsForUserGroup(int uid, int gid,\n-      Nfs3FileAttributes attr) {\n+      int[] auxGids, Nfs3FileAttributes attr) {\n     int mode \u003d attr.getMode();\n     if (uid \u003d\u003d attr.getUid()) {\n       return getAccessRights(mode \u003e\u003e 6, attr.getType());\n     }\n     if (gid \u003d\u003d attr.getGid()) {\n       return getAccessRights(mode \u003e\u003e 3, attr.getType());\n     }\n+    // Check for membership in auxiliary groups\n+    if (auxGids !\u003d null) {\n+      for (int auxGid : auxGids) {\n+        if (attr.getGid() \u003d\u003d auxGid) {\n+          return getAccessRights(mode \u003e\u003e 3, attr.getType());\n+        }\n+      }\n+    }\n     return getAccessRights(mode, attr.getType());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static int getAccessRightsForUserGroup(int uid, int gid,\n      int[] auxGids, Nfs3FileAttributes attr) {\n    int mode \u003d attr.getMode();\n    if (uid \u003d\u003d attr.getUid()) {\n      return getAccessRights(mode \u003e\u003e 6, attr.getType());\n    }\n    if (gid \u003d\u003d attr.getGid()) {\n      return getAccessRights(mode \u003e\u003e 3, attr.getType());\n    }\n    // Check for membership in auxiliary groups\n    if (auxGids !\u003d null) {\n      for (int auxGid : auxGids) {\n        if (attr.getGid() \u003d\u003d auxGid) {\n          return getAccessRights(mode \u003e\u003e 3, attr.getType());\n        }\n      }\n    }\n    return getAccessRights(mode, attr.getType());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/Nfs3Utils.java",
          "extendedDetails": {}
        }
      ]
    },
    "37f587563a943a827fbff865f5302bac6d202415": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4762 Provide HDFS based NFSv3 and Mountd implementation. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1499029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/13 10:31 AM",
      "commitName": "37f587563a943a827fbff865f5302bac6d202415",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,11 @@\n+  public static int getAccessRightsForUserGroup(int uid, int gid,\n+      Nfs3FileAttributes attr) {\n+    int mode \u003d attr.getMode();\n+    if (uid \u003d\u003d attr.getUid()) {\n+      return getAccessRights(mode \u003e\u003e 6, attr.getType());\n+    }\n+    if (gid \u003d\u003d attr.getGid()) {\n+      return getAccessRights(mode \u003e\u003e 3, attr.getType());\n+    }\n+    return getAccessRights(mode, attr.getType());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int getAccessRightsForUserGroup(int uid, int gid,\n      Nfs3FileAttributes attr) {\n    int mode \u003d attr.getMode();\n    if (uid \u003d\u003d attr.getUid()) {\n      return getAccessRights(mode \u003e\u003e 6, attr.getType());\n    }\n    if (gid \u003d\u003d attr.getGid()) {\n      return getAccessRights(mode \u003e\u003e 3, attr.getType());\n    }\n    return getAccessRights(mode, attr.getType());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/Nfs3Utils.java"
    }
  }
}