{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbfsAclHelper.java",
  "functionName": "processAclString",
  "functionId": "processAclString___aclSpecString-String(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsAclHelper.java",
  "functionStartLine": 73,
  "functionEndLine": 93,
  "numCommitsSeen": 3,
  "timeTaken": 658,
  "changeHistory": [
    "9c1e4e81399913f180131f4faa95604087c6d962"
  ],
  "changeHistoryShort": {
    "9c1e4e81399913f180131f4faa95604087c6d962": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c1e4e81399913f180131f4faa95604087c6d962": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15661. ABFS: Add support for ACL.\nContributed by Junhua Gu and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "9c1e4e81399913f180131f4faa95604087c6d962",
      "commitAuthor": "Thomas Marquardt",
      "diff": "@@ -0,0 +1,21 @@\n+  public static String processAclString(final String aclSpecString) {\n+    final List\u003cString\u003e aclEntries \u003d Arrays.asList(aclSpecString.split(AbfsHttpConstants.COMMA));\n+    final StringBuilder sb \u003d new StringBuilder();\n+\n+    boolean containsMask \u003d false;\n+    for (int i \u003d aclEntries.size() - 1; i \u003e\u003d 0; i--) {\n+      String ace \u003d aclEntries.get(i);\n+      if (ace.startsWith(AbfsHttpConstants.ACCESS_OTHER)|| ace.startsWith(AbfsHttpConstants.ACCESS_USER + AbfsHttpConstants.COLON)) {\n+        // skip\n+      } else if (ace.startsWith(AbfsHttpConstants.ACCESS_MASK)) {\n+        containsMask \u003d true;\n+        // skip\n+      } else if (ace.startsWith(AbfsHttpConstants.ACCESS_GROUP + AbfsHttpConstants.COLON) \u0026\u0026 !containsMask) {\n+        // skip\n+      } else {\n+        sb.insert(0, ace + AbfsHttpConstants.COMMA);\n+      }\n+    }\n+\n+    return sb.length() \u003d\u003d 0 ? AbfsHttpConstants.EMPTY_STRING : sb.substring(0, sb.length() - 1);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String processAclString(final String aclSpecString) {\n    final List\u003cString\u003e aclEntries \u003d Arrays.asList(aclSpecString.split(AbfsHttpConstants.COMMA));\n    final StringBuilder sb \u003d new StringBuilder();\n\n    boolean containsMask \u003d false;\n    for (int i \u003d aclEntries.size() - 1; i \u003e\u003d 0; i--) {\n      String ace \u003d aclEntries.get(i);\n      if (ace.startsWith(AbfsHttpConstants.ACCESS_OTHER)|| ace.startsWith(AbfsHttpConstants.ACCESS_USER + AbfsHttpConstants.COLON)) {\n        // skip\n      } else if (ace.startsWith(AbfsHttpConstants.ACCESS_MASK)) {\n        containsMask \u003d true;\n        // skip\n      } else if (ace.startsWith(AbfsHttpConstants.ACCESS_GROUP + AbfsHttpConstants.COLON) \u0026\u0026 !containsMask) {\n        // skip\n      } else {\n        sb.insert(0, ace + AbfsHttpConstants.COMMA);\n      }\n    }\n\n    return sb.length() \u003d\u003d 0 ? AbfsHttpConstants.EMPTY_STRING : sb.substring(0, sb.length() - 1);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsAclHelper.java"
    }
  }
}