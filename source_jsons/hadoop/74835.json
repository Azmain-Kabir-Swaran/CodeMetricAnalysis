{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenAuthenticator.java",
  "functionName": "getDelegationToken",
  "functionId": "getDelegationToken___url-URL__token-AuthenticatedURL.Token__renewer-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
  "functionStartLine": 167,
  "functionEndLine": 171,
  "numCommitsSeen": 30,
  "timeTaken": 2541,
  "changeHistory": [
    "11375578162d77b78cc3f7a82f2495b1e31a3656",
    "be9c67930b57c516723d566625f9036a88a84055",
    "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
    "5e09ae1633fb7fcf293ea10e663064e566c70909",
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
    "4d4560189adccb941a3dc5eee7add134adbf6519"
  ],
  "changeHistoryShort": {
    "11375578162d77b78cc3f7a82f2495b1e31a3656": "Ybodychange",
    "be9c67930b57c516723d566625f9036a88a84055": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b": "Yfilerename",
    "5e09ae1633fb7fcf293ea10e663064e566c70909": "Ybodychange",
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941": "Ybodychange",
    "4d4560189adccb941a3dc5eee7add134adbf6519": "Yintroduced"
  },
  "changeHistoryDetails": {
    "11375578162d77b78cc3f7a82f2495b1e31a3656": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11207. Enhanced common DelegationTokenAuthenticationHandler to support proxy-users on Delegation-token management operations. Contributed by Zhijie Shen.\n",
      "commitDate": "17/10/14 3:56 PM",
      "commitName": "11375578162d77b78cc3f7a82f2495b1e31a3656",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/10/14 2:46 PM",
      "commitNameOld": "b2f619752355d4ef6733935c020f57c8a26d82e1",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 10.05,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,5 @@\n   public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n       AuthenticatedURL.Token token, String renewer)\n       throws IOException, AuthenticationException {\n-    Map json \u003d doDelegationTokenOperation(url, token,\n-        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n-    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n-    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n-    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n-        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n-    dToken.decodeFromUrlString(tokenStr);\n-    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n-        url.getPort());\n-    SecurityUtil.setTokenService(dToken, service);\n-    return dToken;\n+   return getDelegationToken(url, token, renewer, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n      AuthenticatedURL.Token token, String renewer)\n      throws IOException, AuthenticationException {\n   return getDelegationToken(url, token, renewer, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
      "extendedDetails": {}
    },
    "be9c67930b57c516723d566625f9036a88a84055": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 9:58 PM",
      "commitName": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/14 9:58 PM",
          "commitName": "be9c67930b57c516723d566625f9036a88a84055",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "07/08/14 9:55 PM",
          "commitNameOld": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,15 @@\n-  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n-    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n-    String renewer) throws IOException {\n-    DelegationTokenOperation op \u003d \n-      DelegationTokenOperation.GETDELEGATIONTOKEN;\n-    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-    params.put(OP_PARAM, op.toString());\n-    params.put(RENEWER_PARAM,renewer);\n-    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n-    AuthenticatedURL aUrl \u003d\n-      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n-    try {\n-      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n-      conn.setRequestMethod(op.getHttpMethod());\n-      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n-      JSONObject json \u003d (JSONObject) ((JSONObject)\n-        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n-      String tokenStr \u003d (String)\n-        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n-      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n+  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n+      AuthenticatedURL.Token token, String renewer)\n+      throws IOException, AuthenticationException {\n+    Map json \u003d doDelegationTokenOperation(url, token,\n+        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n+    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n+    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n+    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n         new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n-      dToken.decodeFromUrlString(tokenStr);\n-      SecurityUtil.setTokenService(dToken, httpFSAddr);\n-      return dToken;\n-    } catch (AuthenticationException ex) {\n-      throw new IOException(ex.toString(), ex);\n-    }\n+    dToken.decodeFromUrlString(tokenStr);\n+    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n+        url.getPort());\n+    SecurityUtil.setTokenService(dToken, service);\n+    return dToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n      AuthenticatedURL.Token token, String renewer)\n      throws IOException, AuthenticationException {\n    Map json \u003d doDelegationTokenOperation(url, token,\n        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n    dToken.decodeFromUrlString(tokenStr);\n    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n        url.getPort());\n    SecurityUtil.setTokenService(dToken, service);\n    return dToken;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
          "extendedDetails": {
            "oldValue": "[fsURI-URI, httpFSAddr-InetSocketAddress, token-AuthenticatedURL.Token, renewer-String]",
            "newValue": "[url-URL, token-AuthenticatedURL.Token, renewer-String]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/14 9:58 PM",
          "commitName": "be9c67930b57c516723d566625f9036a88a84055",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "07/08/14 9:55 PM",
          "commitNameOld": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,15 @@\n-  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n-    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n-    String renewer) throws IOException {\n-    DelegationTokenOperation op \u003d \n-      DelegationTokenOperation.GETDELEGATIONTOKEN;\n-    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-    params.put(OP_PARAM, op.toString());\n-    params.put(RENEWER_PARAM,renewer);\n-    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n-    AuthenticatedURL aUrl \u003d\n-      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n-    try {\n-      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n-      conn.setRequestMethod(op.getHttpMethod());\n-      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n-      JSONObject json \u003d (JSONObject) ((JSONObject)\n-        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n-      String tokenStr \u003d (String)\n-        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n-      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n+  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n+      AuthenticatedURL.Token token, String renewer)\n+      throws IOException, AuthenticationException {\n+    Map json \u003d doDelegationTokenOperation(url, token,\n+        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n+    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n+    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n+    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n         new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n-      dToken.decodeFromUrlString(tokenStr);\n-      SecurityUtil.setTokenService(dToken, httpFSAddr);\n-      return dToken;\n-    } catch (AuthenticationException ex) {\n-      throw new IOException(ex.toString(), ex);\n-    }\n+    dToken.decodeFromUrlString(tokenStr);\n+    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n+        url.getPort());\n+    SecurityUtil.setTokenService(dToken, service);\n+    return dToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n      AuthenticatedURL.Token token, String renewer)\n      throws IOException, AuthenticationException {\n    Map json \u003d doDelegationTokenOperation(url, token,\n        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n    dToken.decodeFromUrlString(tokenStr);\n    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n        url.getPort());\n    SecurityUtil.setTokenService(dToken, service);\n    return dToken;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
          "extendedDetails": {
            "oldValue": "Token\u003c?\u003e",
            "newValue": "Token\u003cAbstractDelegationTokenIdentifier\u003e"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/14 9:58 PM",
          "commitName": "be9c67930b57c516723d566625f9036a88a84055",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "07/08/14 9:55 PM",
          "commitNameOld": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,15 @@\n-  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n-    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n-    String renewer) throws IOException {\n-    DelegationTokenOperation op \u003d \n-      DelegationTokenOperation.GETDELEGATIONTOKEN;\n-    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-    params.put(OP_PARAM, op.toString());\n-    params.put(RENEWER_PARAM,renewer);\n-    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n-    AuthenticatedURL aUrl \u003d\n-      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n-    try {\n-      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n-      conn.setRequestMethod(op.getHttpMethod());\n-      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n-      JSONObject json \u003d (JSONObject) ((JSONObject)\n-        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n-      String tokenStr \u003d (String)\n-        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n-      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n+  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n+      AuthenticatedURL.Token token, String renewer)\n+      throws IOException, AuthenticationException {\n+    Map json \u003d doDelegationTokenOperation(url, token,\n+        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n+    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n+    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n+    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n         new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n-      dToken.decodeFromUrlString(tokenStr);\n-      SecurityUtil.setTokenService(dToken, httpFSAddr);\n-      return dToken;\n-    } catch (AuthenticationException ex) {\n-      throw new IOException(ex.toString(), ex);\n-    }\n+    dToken.decodeFromUrlString(tokenStr);\n+    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n+        url.getPort());\n+    SecurityUtil.setTokenService(dToken, service);\n+    return dToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n      AuthenticatedURL.Token token, String renewer)\n      throws IOException, AuthenticationException {\n    Map json \u003d doDelegationTokenOperation(url, token,\n        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n    dToken.decodeFromUrlString(tokenStr);\n    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n        url.getPort());\n    SecurityUtil.setTokenService(dToken, service);\n    return dToken;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/14 9:58 PM",
          "commitName": "be9c67930b57c516723d566625f9036a88a84055",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "07/08/14 9:55 PM",
          "commitNameOld": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,15 @@\n-  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n-    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n-    String renewer) throws IOException {\n-    DelegationTokenOperation op \u003d \n-      DelegationTokenOperation.GETDELEGATIONTOKEN;\n-    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-    params.put(OP_PARAM, op.toString());\n-    params.put(RENEWER_PARAM,renewer);\n-    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n-    AuthenticatedURL aUrl \u003d\n-      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n-    try {\n-      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n-      conn.setRequestMethod(op.getHttpMethod());\n-      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n-      JSONObject json \u003d (JSONObject) ((JSONObject)\n-        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n-      String tokenStr \u003d (String)\n-        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n-      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n+  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n+      AuthenticatedURL.Token token, String renewer)\n+      throws IOException, AuthenticationException {\n+    Map json \u003d doDelegationTokenOperation(url, token,\n+        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n+    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n+    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n+    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n         new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n-      dToken.decodeFromUrlString(tokenStr);\n-      SecurityUtil.setTokenService(dToken, httpFSAddr);\n-      return dToken;\n-    } catch (AuthenticationException ex) {\n-      throw new IOException(ex.toString(), ex);\n-    }\n+    dToken.decodeFromUrlString(tokenStr);\n+    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n+        url.getPort());\n+    SecurityUtil.setTokenService(dToken, service);\n+    return dToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n      AuthenticatedURL.Token token, String renewer)\n      throws IOException, AuthenticationException {\n    Map json \u003d doDelegationTokenOperation(url, token,\n        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n    dToken.decodeFromUrlString(tokenStr);\n    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n        url.getPort());\n    SecurityUtil.setTokenService(dToken, service);\n    return dToken;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[IOException, AuthenticationException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/14 9:58 PM",
          "commitName": "be9c67930b57c516723d566625f9036a88a84055",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "07/08/14 9:55 PM",
          "commitNameOld": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,15 @@\n-  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n-    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n-    String renewer) throws IOException {\n-    DelegationTokenOperation op \u003d \n-      DelegationTokenOperation.GETDELEGATIONTOKEN;\n-    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-    params.put(OP_PARAM, op.toString());\n-    params.put(RENEWER_PARAM,renewer);\n-    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n-    AuthenticatedURL aUrl \u003d\n-      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n-    try {\n-      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n-      conn.setRequestMethod(op.getHttpMethod());\n-      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n-      JSONObject json \u003d (JSONObject) ((JSONObject)\n-        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n-      String tokenStr \u003d (String)\n-        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n-      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n+  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n+      AuthenticatedURL.Token token, String renewer)\n+      throws IOException, AuthenticationException {\n+    Map json \u003d doDelegationTokenOperation(url, token,\n+        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n+    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n+    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n+    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n         new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n-      dToken.decodeFromUrlString(tokenStr);\n-      SecurityUtil.setTokenService(dToken, httpFSAddr);\n-      return dToken;\n-    } catch (AuthenticationException ex) {\n-      throw new IOException(ex.toString(), ex);\n-    }\n+    dToken.decodeFromUrlString(tokenStr);\n+    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n+        url.getPort());\n+    SecurityUtil.setTokenService(dToken, service);\n+    return dToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cAbstractDelegationTokenIdentifier\u003e getDelegationToken(URL url,\n      AuthenticatedURL.Token token, String renewer)\n      throws IOException, AuthenticationException {\n    Map json \u003d doDelegationTokenOperation(url, token,\n        DelegationTokenOperation.GETDELEGATIONTOKEN, renewer, null, true);\n    json \u003d (Map) json.get(DELEGATION_TOKEN_JSON);\n    String tokenStr \u003d (String) json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n    Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n    dToken.decodeFromUrlString(tokenStr);\n    InetSocketAddress service \u003d new InetSocketAddress(url.getHost(),\n        url.getPort());\n    SecurityUtil.setTokenService(dToken, service);\n    return dToken;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
          "extendedDetails": {}
        }
      ]
    },
    "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 1. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616671 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 9:55 PM",
      "commitName": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "07/08/14 9:27 PM",
      "commitNameOld": "2ac640ec751f665365d548104b3713e414f53351",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n    String renewer) throws IOException {\n    DelegationTokenOperation op \u003d \n      DelegationTokenOperation.GETDELEGATIONTOKEN;\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, op.toString());\n    params.put(RENEWER_PARAM,renewer);\n    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n    AuthenticatedURL aUrl \u003d\n      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n    try {\n      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n      conn.setRequestMethod(op.getHttpMethod());\n      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) ((JSONObject)\n        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n      String tokenStr \u003d (String)\n        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n      dToken.decodeFromUrlString(tokenStr);\n      SecurityUtil.setTokenService(dToken, httpFSAddr);\n      return dToken;\n    } catch (AuthenticationException ex) {\n      throw new IOException(ex.toString(), ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSKerberosAuthenticator.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java"
      }
    },
    "5e09ae1633fb7fcf293ea10e663064e566c70909": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5703. Add support for HTTPS and swebhdfs to HttpFS. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1560504 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/14 12:38 PM",
      "commitName": "5e09ae1633fb7fcf293ea10e663064e566c70909",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "09/07/13 11:41 AM",
      "commitNameOld": "3ed7c6e9e56cf5054b7c04e60a46b26b68d7e140",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 197.08,
      "commitsBetweenForRepo": 1204,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n     InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n     String renewer) throws IOException {\n     DelegationTokenOperation op \u003d \n       DelegationTokenOperation.GETDELEGATIONTOKEN;\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n     params.put(OP_PARAM, op.toString());\n     params.put(RENEWER_PARAM,renewer);\n-    URL url \u003d HttpFSUtils.createHttpURL(new Path(fsURI), params);\n+    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n     AuthenticatedURL aUrl \u003d\n       new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n     try {\n       HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n       conn.setRequestMethod(op.getHttpMethod());\n       HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n       JSONObject json \u003d (JSONObject) ((JSONObject)\n         HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n       String tokenStr \u003d (String)\n         json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n       Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n         new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n       dToken.decodeFromUrlString(tokenStr);\n       SecurityUtil.setTokenService(dToken, httpFSAddr);\n       return dToken;\n     } catch (AuthenticationException ex) {\n       throw new IOException(ex.toString(), ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n    String renewer) throws IOException {\n    DelegationTokenOperation op \u003d \n      DelegationTokenOperation.GETDELEGATIONTOKEN;\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, op.toString());\n    params.put(RENEWER_PARAM,renewer);\n    URL url \u003d HttpFSUtils.createURL(new Path(fsURI), params);\n    AuthenticatedURL aUrl \u003d\n      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n    try {\n      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n      conn.setRequestMethod(op.getHttpMethod());\n      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) ((JSONObject)\n        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n      String tokenStr \u003d (String)\n        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n      dToken.decodeFromUrlString(tokenStr);\n      SecurityUtil.setTokenService(dToken, httpFSAddr);\n      return dToken;\n    } catch (AuthenticationException ex) {\n      throw new IOException(ex.toString(), ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSKerberosAuthenticator.java",
      "extendedDetails": {}
    },
    "8fa10b184e607a33f59e67bd4b1fbe5a2e683941": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7967. Need generalized multi-token filesystem support (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/12 7:05 AM",
      "commitName": "8fa10b184e607a33f59e67bd4b1fbe5a2e683941",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "01/08/12 4:14 PM",
      "commitNameOld": "08e89662170010dd619c0df859c670cb37b630dd",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 15.62,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,28 @@\n   public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n     InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n     String renewer) throws IOException {\n-    return getDelegationTokens(fsURI, httpFSAddr,\n-      DelegationTokenOperation.GETDELEGATIONTOKENS, token, renewer).get(0);\n+    DelegationTokenOperation op \u003d \n+      DelegationTokenOperation.GETDELEGATIONTOKEN;\n+    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n+    params.put(OP_PARAM, op.toString());\n+    params.put(RENEWER_PARAM,renewer);\n+    URL url \u003d HttpFSUtils.createHttpURL(new Path(fsURI), params);\n+    AuthenticatedURL aUrl \u003d\n+      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n+    try {\n+      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n+      conn.setRequestMethod(op.getHttpMethod());\n+      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n+      JSONObject json \u003d (JSONObject) ((JSONObject)\n+        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n+      String tokenStr \u003d (String)\n+        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n+      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n+        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n+      dToken.decodeFromUrlString(tokenStr);\n+      SecurityUtil.setTokenService(dToken, httpFSAddr);\n+      return dToken;\n+    } catch (AuthenticationException ex) {\n+      throw new IOException(ex.toString(), ex);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n    String renewer) throws IOException {\n    DelegationTokenOperation op \u003d \n      DelegationTokenOperation.GETDELEGATIONTOKEN;\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, op.toString());\n    params.put(RENEWER_PARAM,renewer);\n    URL url \u003d HttpFSUtils.createHttpURL(new Path(fsURI), params);\n    AuthenticatedURL aUrl \u003d\n      new AuthenticatedURL(new HttpFSKerberosAuthenticator());\n    try {\n      HttpURLConnection conn \u003d aUrl.openConnection(url, token);\n      conn.setRequestMethod(op.getHttpMethod());\n      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) ((JSONObject)\n        HttpFSUtils.jsonParse(conn)).get(DELEGATION_TOKEN_JSON);\n      String tokenStr \u003d (String)\n        json.get(DELEGATION_TOKEN_URL_STRING_JSON);\n      Token\u003cAbstractDelegationTokenIdentifier\u003e dToken \u003d\n        new Token\u003cAbstractDelegationTokenIdentifier\u003e();\n      dToken.decodeFromUrlString(tokenStr);\n      SecurityUtil.setTokenService(dToken, httpFSAddr);\n      return dToken;\n    } catch (AuthenticationException ex) {\n      throw new IOException(ex.toString(), ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSKerberosAuthenticator.java",
      "extendedDetails": {}
    },
    "4d4560189adccb941a3dc5eee7add134adbf6519": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3113. httpfs does not support delegation tokens. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365988 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:39 AM",
      "commitName": "4d4560189adccb941a3dc5eee7add134adbf6519",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,6 @@\n+  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n+    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n+    String renewer) throws IOException {\n+    return getDelegationTokens(fsURI, httpFSAddr,\n+      DelegationTokenOperation.GETDELEGATIONTOKENS, token, renewer).get(0);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Token\u003c?\u003e getDelegationToken(URI fsURI,\n    InetSocketAddress httpFSAddr, AuthenticatedURL.Token token,\n    String renewer) throws IOException {\n    return getDelegationTokens(fsURI, httpFSAddr,\n      DelegationTokenOperation.GETDELEGATIONTOKENS, token, renewer).get(0);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSKerberosAuthenticator.java"
    }
  }
}