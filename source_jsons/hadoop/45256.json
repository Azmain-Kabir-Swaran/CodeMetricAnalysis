{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "populateNMTokens",
  "functionId": "populateNMTokens___nmTokens-List__NMToken__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 493,
  "functionEndLine": 505,
  "numCommitsSeen": 85,
  "timeTaken": 3165,
  "changeHistory": [
    "2549ee9d4c4ddd3ebccdebb8623df30c0a8f27d2",
    "92317e3459b502f33a3575c247f05d64e5d39a00",
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
    "b8f1d1350b1f047a16cd6648d2349df41a989e8f",
    "1a06175440eec7994d6b63b0e5ac8b6532870fb3",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "769a0bd8314cd7317c083a9b74abf47242acb58c"
  ],
  "changeHistoryShort": {
    "2549ee9d4c4ddd3ebccdebb8623df30c0a8f27d2": "Ybodychange",
    "92317e3459b502f33a3575c247f05d64e5d39a00": "Ybodychange",
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc": "Ymultichange(Yparameterchange,Ybodychange)",
    "b8f1d1350b1f047a16cd6648d2349df41a989e8f": "Ybodychange",
    "1a06175440eec7994d6b63b0e5ac8b6532870fb3": "Ybodychange",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "769a0bd8314cd7317c083a9b74abf47242acb58c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2549ee9d4c4ddd3ebccdebb8623df30c0a8f27d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5693. Reduce loglevel to Debug in ContainerManagementProtocolProxy and AMRMClientImpl (yufeigu via rkanter)\n",
      "commitDate": "30/09/16 1:30 PM",
      "commitName": "2549ee9d4c4ddd3ebccdebb8623df30c0a8f27d2",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "30/08/16 3:52 PM",
      "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 30.9,
      "commitsBetweenForRepo": 174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n   protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n     for (NMToken token : nmTokens) {\n       String nodeId \u003d token.getNodeId().toString();\n-      if (getNMTokenCache().containsToken(nodeId)) {\n-        LOG.info(\"Replacing token for : \" + nodeId);\n-      } else {\n-        LOG.info(\"Received new token for : \" + nodeId);\n+      if (LOG.isDebugEnabled()) {\n+        if (getNMTokenCache().containsToken(nodeId)) {\n+          LOG.debug(\"Replacing token for : \" + nodeId);\n+        } else {\n+          LOG.debug(\"Received new token for : \" + nodeId);\n+        }\n       }\n       getNMTokenCache().setToken(nodeId, token.getToken());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n    for (NMToken token : nmTokens) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (LOG.isDebugEnabled()) {\n        if (getNMTokenCache().containsToken(nodeId)) {\n          LOG.debug(\"Replacing token for : \" + nodeId);\n        } else {\n          LOG.debug(\"Received new token for : \" + nodeId);\n        }\n      }\n      getNMTokenCache().setToken(nodeId, token.getToken());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "92317e3459b502f33a3575c247f05d64e5d39a00": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1839. Fixed handling of NMTokens in ResourceManager such that containers launched by AMs running on the same machine as the AM are correctly propagated. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578631 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/03/14 3:22 PM",
      "commitName": "92317e3459b502f33a3575c247f05d64e5d39a00",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "26/02/14 12:20 PM",
      "commitNameOld": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.08,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,11 @@\n   protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n     for (NMToken token : nmTokens) {\n       String nodeId \u003d token.getNodeId().toString();\n       if (getNMTokenCache().containsToken(nodeId)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Replacing token for : \" + nodeId);\n-        }\n+        LOG.info(\"Replacing token for : \" + nodeId);\n       } else {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Received new token for : \" + nodeId);\n-        }\n+        LOG.info(\"Received new token for : \" + nodeId);\n       }\n       getNMTokenCache().setToken(nodeId, token.getToken());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n    for (NMToken token : nmTokens) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (getNMTokenCache().containsToken(nodeId)) {\n        LOG.info(\"Replacing token for : \" + nodeId);\n      } else {\n        LOG.info(\"Received new token for : \" + nodeId);\n      }\n      getNMTokenCache().setToken(nodeId, token.getToken());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/02/14 12:20 PM",
      "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/02/14 12:20 PM",
          "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/10/13 1:45 PM",
          "commitNameOld": "9a204f8c51c6015d15d603bf413e86a15f1cd32b",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 117.98,
          "commitsBetweenForRepo": 745,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  protected void populateNMTokens(AllocateResponse allocateResponse) {\n-    for (NMToken token : allocateResponse.getNMTokens()) {\n+  protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n+    for (NMToken token : nmTokens) {\n       String nodeId \u003d token.getNodeId().toString();\n       if (getNMTokenCache().containsToken(nodeId)) {\n-        LOG.debug(\"Replacing token for : \" + nodeId);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Replacing token for : \" + nodeId);\n+        }\n       } else {\n-        LOG.debug(\"Received new token for : \" + nodeId);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Received new token for : \" + nodeId);\n+        }\n       }\n       getNMTokenCache().setToken(nodeId, token.getToken());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n    for (NMToken token : nmTokens) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (getNMTokenCache().containsToken(nodeId)) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Replacing token for : \" + nodeId);\n        }\n      } else {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Received new token for : \" + nodeId);\n        }\n      }\n      getNMTokenCache().setToken(nodeId, token.getToken());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {
            "oldValue": "[allocateResponse-AllocateResponse]",
            "newValue": "[nmTokens-List\u003cNMToken\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/02/14 12:20 PM",
          "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/10/13 1:45 PM",
          "commitNameOld": "9a204f8c51c6015d15d603bf413e86a15f1cd32b",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 117.98,
          "commitsBetweenForRepo": 745,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  protected void populateNMTokens(AllocateResponse allocateResponse) {\n-    for (NMToken token : allocateResponse.getNMTokens()) {\n+  protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n+    for (NMToken token : nmTokens) {\n       String nodeId \u003d token.getNodeId().toString();\n       if (getNMTokenCache().containsToken(nodeId)) {\n-        LOG.debug(\"Replacing token for : \" + nodeId);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Replacing token for : \" + nodeId);\n+        }\n       } else {\n-        LOG.debug(\"Received new token for : \" + nodeId);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Received new token for : \" + nodeId);\n+        }\n       }\n       getNMTokenCache().setToken(nodeId, token.getToken());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void populateNMTokens(List\u003cNMToken\u003e nmTokens) {\n    for (NMToken token : nmTokens) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (getNMTokenCache().containsToken(nodeId)) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Replacing token for : \" + nodeId);\n        }\n      } else {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Received new token for : \" + nodeId);\n        }\n      }\n      getNMTokenCache().setToken(nodeId, token.getToken());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b8f1d1350b1f047a16cd6648d2349df41a989e8f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1321. Changed NMTokenCache to support both singleton and an instance usage. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537334 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/13 3:37 PM",
      "commitName": "b8f1d1350b1f047a16cd6648d2349df41a989e8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/10/13 6:43 PM",
      "commitNameOld": "fc23fd312174f36508eb40f3084e262e23a68e1b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 25.87,
      "commitsBetweenForRepo": 171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   protected void populateNMTokens(AllocateResponse allocateResponse) {\n     for (NMToken token : allocateResponse.getNMTokens()) {\n       String nodeId \u003d token.getNodeId().toString();\n-      if (NMTokenCache.containsNMToken(nodeId)) {\n+      if (getNMTokenCache().containsToken(nodeId)) {\n         LOG.debug(\"Replacing token for : \" + nodeId);\n       } else {\n         LOG.debug(\"Received new token for : \" + nodeId);\n       }\n-      NMTokenCache.setNMToken(nodeId, token.getToken());\n+      getNMTokenCache().setToken(nodeId, token.getToken());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void populateNMTokens(AllocateResponse allocateResponse) {\n    for (NMToken token : allocateResponse.getNMTokens()) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (getNMTokenCache().containsToken(nodeId)) {\n        LOG.debug(\"Replacing token for : \" + nodeId);\n      } else {\n        LOG.debug(\"Received new token for : \" + nodeId);\n      }\n      getNMTokenCache().setToken(nodeId, token.getToken());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "1a06175440eec7994d6b63b0e5ac8b6532870fb3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-851. Share NMTokens using NMTokenCache (api-based) between AMRMClient and NMClient instead of memory based approach which is used currently. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1495247 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/06/13 5:08 PM",
      "commitName": "1a06175440eec7994d6b63b0e5ac8b6532870fb3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/06/13 2:14 PM",
      "commitNameOld": "40cab68409a90a88e41e5b2e1d076fa8e53f85af",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 2.12,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   protected void populateNMTokens(AllocateResponse allocateResponse) {\n     for (NMToken token : allocateResponse.getNMTokens()) {\n       String nodeId \u003d token.getNodeId().toString();\n-      if (nmTokens.containsKey(nodeId)) {\n+      if (NMTokenCache.containsNMToken(nodeId)) {\n         LOG.debug(\"Replacing token for : \" + nodeId);\n       } else {\n         LOG.debug(\"Received new token for : \" + nodeId);\n       }\n-      nmTokens.put(nodeId, token.getToken());\n+      NMTokenCache.setNMToken(nodeId, token.getToken());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void populateNMTokens(AllocateResponse allocateResponse) {\n    for (NMToken token : allocateResponse.getNMTokens()) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (NMTokenCache.containsNMToken(nodeId)) {\n        LOG.debug(\"Replacing token for : \" + nodeId);\n      } else {\n        LOG.debug(\"Received new token for : \" + nodeId);\n      }\n      NMTokenCache.setNMToken(nodeId, token.getToken());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void populateNMTokens(AllocateResponse allocateResponse) {\n    for (NMToken token : allocateResponse.getNMTokens()) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (nmTokens.containsKey(nodeId)) {\n        LOG.debug(\"Replacing token for : \" + nodeId);\n      } else {\n        LOG.debug(\"Received new token for : \" + nodeId);\n      }\n      nmTokens.put(nodeId, token.getToken());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
      }
    },
    "769a0bd8314cd7317c083a9b74abf47242acb58c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-693. Modified RM to send NMTokens on allocate call so that AMs can then use them for authentication with NMs. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/13 8:11 PM",
      "commitName": "769a0bd8314cd7317c083a9b74abf47242acb58c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+  protected void populateNMTokens(AllocateResponse allocateResponse) {\n+    for (NMToken token : allocateResponse.getNMTokens()) {\n+      String nodeId \u003d token.getNodeId().toString();\n+      if (nmTokens.containsKey(nodeId)) {\n+        LOG.debug(\"Replacing token for : \" + nodeId);\n+      } else {\n+        LOG.debug(\"Received new token for : \" + nodeId);\n+      }\n+      nmTokens.put(nodeId, token.getToken());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void populateNMTokens(AllocateResponse allocateResponse) {\n    for (NMToken token : allocateResponse.getNMTokens()) {\n      String nodeId \u003d token.getNodeId().toString();\n      if (nmTokens.containsKey(nodeId)) {\n        LOG.debug(\"Replacing token for : \" + nodeId);\n      } else {\n        LOG.debug(\"Received new token for : \" + nodeId);\n      }\n      nmTokens.put(nodeId, token.getToken());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java"
    }
  }
}