{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KeyProviderCache.java",
  "functionName": "createKeyProviderURI",
  "functionId": "createKeyProviderURI___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java",
  "functionStartLine": 88,
  "functionEndLine": 107,
  "numCommitsSeen": 7,
  "timeTaken": 2386,
  "changeHistory": [
    "18432130a7f580f206adf023507678c534487f2e",
    "ea839bd48e4478fc7b6d0a69e0eaeae2de5e0f0d",
    "e2c9b288b223b9fd82dc12018936e13128413492",
    "05e04f34f27149537fdb89f46af26bee14531ca4",
    "02340a24f211212b91dc7380c1e5b54ddb5e82eb"
  ],
  "changeHistoryShort": {
    "18432130a7f580f206adf023507678c534487f2e": "Ybodychange",
    "ea839bd48e4478fc7b6d0a69e0eaeae2de5e0f0d": "Ybodychange",
    "e2c9b288b223b9fd82dc12018936e13128413492": "Ymultichange(Yfilerename,Ybodychange)",
    "05e04f34f27149537fdb89f46af26bee14531ca4": "Ybodychange",
    "02340a24f211212b91dc7380c1e5b54ddb5e82eb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "18432130a7f580f206adf023507678c534487f2e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14104. Client should always ask namenode for kms provider path. Contributed by Rushabh S Shah.\n",
      "commitDate": "04/04/17 1:38 PM",
      "commitName": "18432130a7f580f206adf023507678c534487f2e",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "17/09/16 10:25 PM",
      "commitNameOld": "ea839bd48e4478fc7b6d0a69e0eaeae2de5e0f0d",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 198.63,
      "commitsBetweenForRepo": 1239,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private URI createKeyProviderURI(Configuration conf) {\n     final String providerUriStr \u003d conf.getTrimmed(\n-        CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH, \"\");\n+        CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH);\n     // No provider set in conf\n-    if (providerUriStr.isEmpty()) {\n+    if (providerUriStr \u003d\u003d null || providerUriStr.isEmpty()) {\n       LOG.error(\"Could not find uri with key [\"\n           + CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH\n           + \"] to create a keyProvider !!\");\n       return null;\n     }\n     final URI providerUri;\n     try {\n       providerUri \u003d new URI(providerUriStr);\n     } catch (URISyntaxException e) {\n       LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n           + \"]!!\", e.getCause());\n       return null;\n     }\n     return providerUri;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private URI createKeyProviderURI(Configuration conf) {\n    final String providerUriStr \u003d conf.getTrimmed(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH);\n    // No provider set in conf\n    if (providerUriStr \u003d\u003d null || providerUriStr.isEmpty()) {\n      LOG.error(\"Could not find uri with key [\"\n          + CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH\n          + \"] to create a keyProvider !!\");\n      return null;\n    }\n    final URI providerUri;\n    try {\n      providerUri \u003d new URI(providerUriStr);\n    } catch (URISyntaxException e) {\n      LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n          + \"]!!\", e.getCause());\n      return null;\n    }\n    return providerUri;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java",
      "extendedDetails": {}
    },
    "ea839bd48e4478fc7b6d0a69e0eaeae2de5e0f0d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10489. Deprecate dfs.encryption.key.provider.uri for HDFS encryption zones. Contributed by Xiao Chen.\n",
      "commitDate": "17/09/16 10:25 PM",
      "commitName": "ea839bd48e4478fc7b6d0a69e0eaeae2de5e0f0d",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "03/10/15 11:38 AM",
      "commitNameOld": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 350.45,
      "commitsBetweenForRepo": 2429,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private URI createKeyProviderURI(Configuration conf) {\n     final String providerUriStr \u003d conf.getTrimmed(\n-        HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n+        CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH, \"\");\n     // No provider set in conf\n     if (providerUriStr.isEmpty()) {\n       LOG.error(\"Could not find uri with key [\"\n-          + HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n+          + CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH\n           + \"] to create a keyProvider !!\");\n       return null;\n     }\n     final URI providerUri;\n     try {\n       providerUri \u003d new URI(providerUriStr);\n     } catch (URISyntaxException e) {\n       LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n           + \"]!!\", e.getCause());\n       return null;\n     }\n     return providerUri;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private URI createKeyProviderURI(Configuration conf) {\n    final String providerUriStr \u003d conf.getTrimmed(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH, \"\");\n    // No provider set in conf\n    if (providerUriStr.isEmpty()) {\n      LOG.error(\"Could not find uri with key [\"\n          + CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH\n          + \"] to create a keyProvider !!\");\n      return null;\n    }\n    final URI providerUri;\n    try {\n      providerUri \u003d new URI(providerUriStr);\n    } catch (URISyntaxException e) {\n      LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n          + \"]!!\", e.getCause());\n      return null;\n    }\n    return providerUri;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java",
      "extendedDetails": {}
    },
    "e2c9b288b223b9fd82dc12018936e13128413492": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "28/08/15 2:38 PM",
      "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "28/08/15 2:38 PM",
          "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "28/08/15 2:21 PM",
          "commitNameOld": "b94b56806d3d6e04984e229b479f7ac15b62bbfa",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   private URI createKeyProviderURI(Configuration conf) {\n     final String providerUriStr \u003d\n-        conf.getTrimmed(DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n+        conf.getTrimmed(HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n     // No provider set in conf\n     if (providerUriStr.isEmpty()) {\n       LOG.error(\"Could not find uri with key [\"\n-          + DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n+          + HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n           + \"] to create a keyProvider !!\");\n       return null;\n     }\n     final URI providerUri;\n     try {\n       providerUri \u003d new URI(providerUriStr);\n     } catch (URISyntaxException e) {\n       LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n           + \"]!!\", e.getCause());\n       return null;\n     }\n     return providerUri;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private URI createKeyProviderURI(Configuration conf) {\n    final String providerUriStr \u003d\n        conf.getTrimmed(HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n    // No provider set in conf\n    if (providerUriStr.isEmpty()) {\n      LOG.error(\"Could not find uri with key [\"\n          + HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n          + \"] to create a keyProvider !!\");\n      return null;\n    }\n    final URI providerUri;\n    try {\n      providerUri \u003d new URI(providerUriStr);\n    } catch (URISyntaxException e) {\n      LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n          + \"]!!\", e.getCause());\n      return null;\n    }\n    return providerUri;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8925. Move BlockReaderLocal to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "28/08/15 2:38 PM",
          "commitName": "e2c9b288b223b9fd82dc12018936e13128413492",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "28/08/15 2:21 PM",
          "commitNameOld": "b94b56806d3d6e04984e229b479f7ac15b62bbfa",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   private URI createKeyProviderURI(Configuration conf) {\n     final String providerUriStr \u003d\n-        conf.getTrimmed(DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n+        conf.getTrimmed(HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n     // No provider set in conf\n     if (providerUriStr.isEmpty()) {\n       LOG.error(\"Could not find uri with key [\"\n-          + DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n+          + HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n           + \"] to create a keyProvider !!\");\n       return null;\n     }\n     final URI providerUri;\n     try {\n       providerUri \u003d new URI(providerUriStr);\n     } catch (URISyntaxException e) {\n       LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n           + \"]!!\", e.getCause());\n       return null;\n     }\n     return providerUri;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private URI createKeyProviderURI(Configuration conf) {\n    final String providerUriStr \u003d\n        conf.getTrimmed(HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n    // No provider set in conf\n    if (providerUriStr.isEmpty()) {\n      LOG.error(\"Could not find uri with key [\"\n          + HdfsClientConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n          + \"] to create a keyProvider !!\");\n      return null;\n    }\n    final URI providerUri;\n    try {\n      providerUri \u003d new URI(providerUriStr);\n    } catch (URISyntaxException e) {\n      LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n          + \"]!!\", e.getCause());\n      return null;\n    }\n    return providerUri;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java",
          "extendedDetails": {}
        }
      ]
    },
    "05e04f34f27149537fdb89f46af26bee14531ca4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8451. DFSClient probe for encryption testing interprets empty URI property for enabled. Contributed by Steve Loughran.\n",
      "commitDate": "21/05/15 11:58 AM",
      "commitName": "05e04f34f27149537fdb89f46af26bee14531ca4",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "07/04/15 1:59 PM",
      "commitNameOld": "571a1ce9d037d99e7c9042bcb77ae7a2c4daf6d3",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 43.92,
      "commitsBetweenForRepo": 470,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private URI createKeyProviderURI(Configuration conf) {\n     final String providerUriStr \u003d\n-        conf.get(DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, null);\n+        conf.getTrimmed(DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n     // No provider set in conf\n-    if (providerUriStr \u003d\u003d null) {\n+    if (providerUriStr.isEmpty()) {\n       LOG.error(\"Could not find uri with key [\"\n           + DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n           + \"] to create a keyProvider !!\");\n       return null;\n     }\n     final URI providerUri;\n     try {\n       providerUri \u003d new URI(providerUriStr);\n     } catch (URISyntaxException e) {\n       LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n           + \"]!!\", e.getCause());\n       return null;\n     }\n     return providerUri;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private URI createKeyProviderURI(Configuration conf) {\n    final String providerUriStr \u003d\n        conf.getTrimmed(DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, \"\");\n    // No provider set in conf\n    if (providerUriStr.isEmpty()) {\n      LOG.error(\"Could not find uri with key [\"\n          + DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n          + \"] to create a keyProvider !!\");\n      return null;\n    }\n    final URI providerUri;\n    try {\n      providerUri \u003d new URI(providerUriStr);\n    } catch (URISyntaxException e) {\n      LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n          + \"]!!\", e.getCause());\n      return null;\n    }\n    return providerUri;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java",
      "extendedDetails": {}
    },
    "02340a24f211212b91dc7380c1e5b54ddb5e82eb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7718. Store KeyProvider in ClientContext to avoid leaking key provider threads when using FileContext (Arun Suresh via Colin P. McCabe)\n",
      "commitDate": "09/02/15 8:23 PM",
      "commitName": "02340a24f211212b91dc7380c1e5b54ddb5e82eb",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,20 @@\n+  private URI createKeyProviderURI(Configuration conf) {\n+    final String providerUriStr \u003d\n+        conf.get(DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, null);\n+    // No provider set in conf\n+    if (providerUriStr \u003d\u003d null) {\n+      LOG.error(\"Could not find uri with key [\"\n+          + DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n+          + \"] to create a keyProvider !!\");\n+      return null;\n+    }\n+    final URI providerUri;\n+    try {\n+      providerUri \u003d new URI(providerUriStr);\n+    } catch (URISyntaxException e) {\n+      LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n+          + \"]!!\", e.getCause());\n+      return null;\n+    }\n+    return providerUri;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private URI createKeyProviderURI(Configuration conf) {\n    final String providerUriStr \u003d\n        conf.get(DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI, null);\n    // No provider set in conf\n    if (providerUriStr \u003d\u003d null) {\n      LOG.error(\"Could not find uri with key [\"\n          + DFSConfigKeys.DFS_ENCRYPTION_KEY_PROVIDER_URI\n          + \"] to create a keyProvider !!\");\n      return null;\n    }\n    final URI providerUri;\n    try {\n      providerUri \u003d new URI(providerUriStr);\n    } catch (URISyntaxException e) {\n      LOG.error(\"KeyProvider URI string is invalid [\" + providerUriStr\n          + \"]!!\", e.getCause());\n      return null;\n    }\n    return providerUri;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/KeyProviderCache.java"
    }
  }
}