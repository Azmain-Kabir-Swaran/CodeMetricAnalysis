{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "replaceLabelsOnNode",
  "functionId": "replaceLabelsOnNode___request-ReplaceLabelsOnNodeRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 841,
  "functionEndLine": 912,
  "numCommitsSeen": 78,
  "timeTaken": 3561,
  "changeHistory": [
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "6e130c308cf1b97e8386b6a43c26d72d2850119c",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b",
    "db9304788187c700647c4d84caeb3b5ad6d868d8",
    "db1b674b50ddecf2774f4092d677c412722bdcb1",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
    "82567664988b673f1b819a42a4baf31cb0dcb331"
  ],
  "changeHistoryShort": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "6e130c308cf1b97e8386b6a43c26d72d2850119c": "Ybodychange",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": "Ybodychange",
    "db9304788187c700647c4d84caeb3b5ad6d868d8": "Ybodychange",
    "db1b674b50ddecf2774f4092d677c412722bdcb1": "Ybodychange",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": "Ybodychange",
    "82567664988b673f1b819a42a4baf31cb0dcb331": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/05/17 2:44 PM",
      "commitNameOld": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 75.35,
      "commitsBetweenForRepo": 358,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,71 +1,72 @@\n   public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n       ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n     final String operation \u003d \"replaceLabelsOnNode\";\n     final String msg \u003d \"set node to labels.\";\n \n     try {\n       NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n           isCentralizedNodeLabelConfiguration);\n     } catch (IOException ioe) {\n       throw RPCUtil.getRemoteException(ioe);\n     }\n \n     UserGroupInformation user \u003d checkAcls(operation);\n \n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n     ReplaceLabelsOnNodeResponse response \u003d\n         recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n \n     if (request.getFailOnUnknownNodes()) {\n       // verify if nodes have registered to RM\n       List\u003cNodeId\u003e unknownNodes \u003d new ArrayList\u003c\u003e();\n       for (NodeId requestedNode : request.getNodeToLabels().keySet()) {\n         boolean isKnown \u003d false;\n         // both active and inactive nodes are recognized as known nodes\n         if (requestedNode.getPort() !\u003d 0) {\n-          if (rmContext.getRMNodes().containsKey(requestedNode)\n-              || rmContext.getInactiveRMNodes().containsKey(requestedNode)) {\n+          if (rm.getRMContext().getRMNodes().containsKey(requestedNode) || rm\n+              .getRMContext().getInactiveRMNodes().containsKey(requestedNode)) {\n             isKnown \u003d true;\n           }\n         } else {\n-          for (NodeId knownNode : rmContext.getRMNodes().keySet()) {\n+          for (NodeId knownNode : rm.getRMContext().getRMNodes().keySet()) {\n             if (knownNode.getHost().equals(requestedNode.getHost())) {\n               isKnown \u003d true;\n               break;\n             }\n           }\n           if (!isKnown) {\n-            for (NodeId knownNode : rmContext.getInactiveRMNodes().keySet()) {\n+            for (NodeId knownNode : rm.getRMContext().getInactiveRMNodes()\n+                .keySet()) {\n               if (knownNode.getHost().equals(requestedNode.getHost())) {\n                 isKnown \u003d true;\n                 break;\n               }\n             }\n           }\n         }\n         if (!isKnown) {\n           unknownNodes.add(requestedNode);\n         }\n       }\n \n       if (!unknownNodes.isEmpty()) {\n         RMAuditLogger.logFailure(user.getShortUserName(), operation, \"\",\n             \"AdminService\",\n             \"Failed to replace labels as there are unknown nodes:\"\n                 + Arrays.toString(unknownNodes.toArray()));\n         throw RPCUtil.getRemoteException(new IOException(\n             \"Failed to replace labels as there are unknown nodes:\"\n                 + Arrays.toString(unknownNodes.toArray())));\n       }\n     }\n     try {\n-      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n+      rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(\n           request.getNodeToLabels());\n       RMAuditLogger\n           .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n       return response;\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n    final String operation \u003d \"replaceLabelsOnNode\";\n    final String msg \u003d \"set node to labels.\";\n\n    try {\n      NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n          isCentralizedNodeLabelConfiguration);\n    } catch (IOException ioe) {\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    ReplaceLabelsOnNodeResponse response \u003d\n        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n\n    if (request.getFailOnUnknownNodes()) {\n      // verify if nodes have registered to RM\n      List\u003cNodeId\u003e unknownNodes \u003d new ArrayList\u003c\u003e();\n      for (NodeId requestedNode : request.getNodeToLabels().keySet()) {\n        boolean isKnown \u003d false;\n        // both active and inactive nodes are recognized as known nodes\n        if (requestedNode.getPort() !\u003d 0) {\n          if (rm.getRMContext().getRMNodes().containsKey(requestedNode) || rm\n              .getRMContext().getInactiveRMNodes().containsKey(requestedNode)) {\n            isKnown \u003d true;\n          }\n        } else {\n          for (NodeId knownNode : rm.getRMContext().getRMNodes().keySet()) {\n            if (knownNode.getHost().equals(requestedNode.getHost())) {\n              isKnown \u003d true;\n              break;\n            }\n          }\n          if (!isKnown) {\n            for (NodeId knownNode : rm.getRMContext().getInactiveRMNodes()\n                .keySet()) {\n              if (knownNode.getHost().equals(requestedNode.getHost())) {\n                isKnown \u003d true;\n                break;\n              }\n            }\n          }\n        }\n        if (!isKnown) {\n          unknownNodes.add(requestedNode);\n        }\n      }\n\n      if (!unknownNodes.isEmpty()) {\n        RMAuditLogger.logFailure(user.getShortUserName(), operation, \"\",\n            \"AdminService\",\n            \"Failed to replace labels as there are unknown nodes:\"\n                + Arrays.toString(unknownNodes.toArray()));\n        throw RPCUtil.getRemoteException(new IOException(\n            \"Failed to replace labels as there are unknown nodes:\"\n                + Arrays.toString(unknownNodes.toArray())));\n      }\n    }\n    try {\n      rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(\n          request.getNodeToLabels());\n      RMAuditLogger\n          .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n      return response;\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "6e130c308cf1b97e8386b6a43c26d72d2850119c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4855. Should check if node exists when replace nodelabels. Contributeed by Tao Jie\n",
      "commitDate": "02/10/16 11:02 PM",
      "commitName": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "18/08/16 7:27 AM",
      "commitNameOld": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 45.65,
      "commitsBetweenForRepo": 263,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,71 @@\n   public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n       ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n     final String operation \u003d \"replaceLabelsOnNode\";\n     final String msg \u003d \"set node to labels.\";\n \n     try {\n       NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n           isCentralizedNodeLabelConfiguration);\n     } catch (IOException ioe) {\n       throw RPCUtil.getRemoteException(ioe);\n     }\n \n     UserGroupInformation user \u003d checkAcls(operation);\n \n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n     ReplaceLabelsOnNodeResponse response \u003d\n         recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n+\n+    if (request.getFailOnUnknownNodes()) {\n+      // verify if nodes have registered to RM\n+      List\u003cNodeId\u003e unknownNodes \u003d new ArrayList\u003c\u003e();\n+      for (NodeId requestedNode : request.getNodeToLabels().keySet()) {\n+        boolean isKnown \u003d false;\n+        // both active and inactive nodes are recognized as known nodes\n+        if (requestedNode.getPort() !\u003d 0) {\n+          if (rmContext.getRMNodes().containsKey(requestedNode)\n+              || rmContext.getInactiveRMNodes().containsKey(requestedNode)) {\n+            isKnown \u003d true;\n+          }\n+        } else {\n+          for (NodeId knownNode : rmContext.getRMNodes().keySet()) {\n+            if (knownNode.getHost().equals(requestedNode.getHost())) {\n+              isKnown \u003d true;\n+              break;\n+            }\n+          }\n+          if (!isKnown) {\n+            for (NodeId knownNode : rmContext.getInactiveRMNodes().keySet()) {\n+              if (knownNode.getHost().equals(requestedNode.getHost())) {\n+                isKnown \u003d true;\n+                break;\n+              }\n+            }\n+          }\n+        }\n+        if (!isKnown) {\n+          unknownNodes.add(requestedNode);\n+        }\n+      }\n+\n+      if (!unknownNodes.isEmpty()) {\n+        RMAuditLogger.logFailure(user.getShortUserName(), operation, \"\",\n+            \"AdminService\",\n+            \"Failed to replace labels as there are unknown nodes:\"\n+                + Arrays.toString(unknownNodes.toArray()));\n+        throw RPCUtil.getRemoteException(new IOException(\n+            \"Failed to replace labels as there are unknown nodes:\"\n+                + Arrays.toString(unknownNodes.toArray())));\n+      }\n+    }\n     try {\n       rmContext.getNodeLabelManager().replaceLabelsOnNode(\n           request.getNodeToLabels());\n       RMAuditLogger\n           .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n       return response;\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n    final String operation \u003d \"replaceLabelsOnNode\";\n    final String msg \u003d \"set node to labels.\";\n\n    try {\n      NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n          isCentralizedNodeLabelConfiguration);\n    } catch (IOException ioe) {\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    ReplaceLabelsOnNodeResponse response \u003d\n        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n\n    if (request.getFailOnUnknownNodes()) {\n      // verify if nodes have registered to RM\n      List\u003cNodeId\u003e unknownNodes \u003d new ArrayList\u003c\u003e();\n      for (NodeId requestedNode : request.getNodeToLabels().keySet()) {\n        boolean isKnown \u003d false;\n        // both active and inactive nodes are recognized as known nodes\n        if (requestedNode.getPort() !\u003d 0) {\n          if (rmContext.getRMNodes().containsKey(requestedNode)\n              || rmContext.getInactiveRMNodes().containsKey(requestedNode)) {\n            isKnown \u003d true;\n          }\n        } else {\n          for (NodeId knownNode : rmContext.getRMNodes().keySet()) {\n            if (knownNode.getHost().equals(requestedNode.getHost())) {\n              isKnown \u003d true;\n              break;\n            }\n          }\n          if (!isKnown) {\n            for (NodeId knownNode : rmContext.getInactiveRMNodes().keySet()) {\n              if (knownNode.getHost().equals(requestedNode.getHost())) {\n                isKnown \u003d true;\n                break;\n              }\n            }\n          }\n        }\n        if (!isKnown) {\n          unknownNodes.add(requestedNode);\n        }\n      }\n\n      if (!unknownNodes.isEmpty()) {\n        RMAuditLogger.logFailure(user.getShortUserName(), operation, \"\",\n            \"AdminService\",\n            \"Failed to replace labels as there are unknown nodes:\"\n                + Arrays.toString(unknownNodes.toArray()));\n        throw RPCUtil.getRemoteException(new IOException(\n            \"Failed to replace labels as there are unknown nodes:\"\n                + Arrays.toString(unknownNodes.toArray())));\n      }\n    }\n    try {\n      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n          request.getNodeToLabels());\n      RMAuditLogger\n          .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n      return response;\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4883. Make consistent operation name in AdminService. Contributed by Kai Sasaki.\n",
      "commitDate": "20/07/16 4:51 PM",
      "commitName": "c63afdbe14df7359841aa4b213252a8a275e8c4b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "09/04/16 10:31 AM",
      "commitNameOld": "ff95fd547b3030529983fa4e701ac728c54ab63a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 102.26,
      "commitsBetweenForRepo": 794,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n       ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n-    String operation \u003d \"replaceLabelsOnNode\";\n+    final String operation \u003d \"replaceLabelsOnNode\";\n     final String msg \u003d \"set node to labels.\";\n \n     try {\n       NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n           isCentralizedNodeLabelConfiguration);\n     } catch (IOException ioe) {\n       throw RPCUtil.getRemoteException(ioe);\n     }\n \n     UserGroupInformation user \u003d checkAcls(operation);\n \n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n     ReplaceLabelsOnNodeResponse response \u003d\n         recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n     try {\n       rmContext.getNodeLabelManager().replaceLabelsOnNode(\n           request.getNodeToLabels());\n       RMAuditLogger\n           .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n       return response;\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n    final String operation \u003d \"replaceLabelsOnNode\";\n    final String msg \u003d \"set node to labels.\";\n\n    try {\n      NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n          isCentralizedNodeLabelConfiguration);\n    } catch (IOException ioe) {\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    ReplaceLabelsOnNodeResponse response \u003d\n        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n    try {\n      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n          request.getNodeToLabels());\n      RMAuditLogger\n          .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n      return response;\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "db9304788187c700647c4d84caeb3b5ad6d868d8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3964. Support NodeLabelsProvider at Resource Manager side.\nContributed by Dian Fu.\n",
      "commitDate": "10/10/15 10:51 PM",
      "commitName": "db9304788187c700647c4d84caeb3b5ad6d868d8",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "15/09/15 7:56 AM",
      "commitNameOld": "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 25.62,
      "commitsBetweenForRepo": 198,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,28 @@\n   public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n       ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n     String operation \u003d \"replaceLabelsOnNode\";\n     final String msg \u003d \"set node to labels.\";\n \n-    checkAndThrowIfDistributedNodeLabelConfEnabled(operation);\n+    try {\n+      NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n+          isCentralizedNodeLabelConfiguration);\n+    } catch (IOException ioe) {\n+      throw RPCUtil.getRemoteException(ioe);\n+    }\n+\n     UserGroupInformation user \u003d checkAcls(operation);\n \n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n     ReplaceLabelsOnNodeResponse response \u003d\n         recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n     try {\n       rmContext.getNodeLabelManager().replaceLabelsOnNode(\n           request.getNodeToLabels());\n       RMAuditLogger\n           .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n       return response;\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n    String operation \u003d \"replaceLabelsOnNode\";\n    final String msg \u003d \"set node to labels.\";\n\n    try {\n      NodeLabelsUtils.verifyCentralizedNodeLabelConfEnabled(operation,\n          isCentralizedNodeLabelConfiguration);\n    } catch (IOException ioe) {\n      throw RPCUtil.getRemoteException(ioe);\n    }\n\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    ReplaceLabelsOnNodeResponse response \u003d\n        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n    try {\n      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n          request.getNodeToLabels());\n      RMAuditLogger\n          .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n      return response;\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "db1b674b50ddecf2774f4092d677c412722bdcb1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
      "commitDate": "27/04/15 4:24 PM",
      "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/04/15 11:19 AM",
      "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.21,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n       ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n-    String argName \u003d \"replaceLabelsOnNode\";\n+    String operation \u003d \"replaceLabelsOnNode\";\n     final String msg \u003d \"set node to labels.\";\n-    UserGroupInformation user \u003d checkAcls(argName);\n \n-    checkRMStatus(user.getShortUserName(), argName, msg);\n+    checkAndThrowIfDistributedNodeLabelConfEnabled(operation);\n+    UserGroupInformation user \u003d checkAcls(operation);\n+\n+    checkRMStatus(user.getShortUserName(), operation, msg);\n \n     ReplaceLabelsOnNodeResponse response \u003d\n         recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n     try {\n       rmContext.getNodeLabelManager().replaceLabelsOnNode(\n           request.getNodeToLabels());\n       RMAuditLogger\n-          .logSuccess(user.getShortUserName(), argName, \"AdminService\");\n+          .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n       return response;\n     } catch (IOException ioe) {\n-      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n    String operation \u003d \"replaceLabelsOnNode\";\n    final String msg \u003d \"set node to labels.\";\n\n    checkAndThrowIfDistributedNodeLabelConfEnabled(operation);\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    ReplaceLabelsOnNodeResponse response \u003d\n        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n    try {\n      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n          request.getNodeToLabels());\n      RMAuditLogger\n          .logSuccess(user.getShortUserName(), operation, \"AdminService\");\n      return response;\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2993. Several fixes (missing acl check, error log msg ...) and some refinement in AdminService. (Contributed by Yi Liu)\n",
      "commitDate": "26/12/14 6:59 AM",
      "commitName": "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
      "commitAuthor": "Junping Du",
      "commitDateOld": "30/10/14 10:59 PM",
      "commitNameOld": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 56.37,
      "commitsBetweenForRepo": 427,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,20 @@\n   public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n       ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n     String argName \u003d \"replaceLabelsOnNode\";\n+    final String msg \u003d \"set node to labels.\";\n     UserGroupInformation user \u003d checkAcls(argName);\n \n-    if (!isRMActive()) {\n-      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n-          adminAcl.toString(), \"AdminService\",\n-          \"ResourceManager is not active. Can not set node to labels.\");\n-      throwStandbyException();\n-    }\n+    checkRMStatus(user.getShortUserName(), argName, msg);\n \n     ReplaceLabelsOnNodeResponse response \u003d\n         recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n     try {\n       rmContext.getNodeLabelManager().replaceLabelsOnNode(\n           request.getNodeToLabels());\n       RMAuditLogger\n           .logSuccess(user.getShortUserName(), argName, \"AdminService\");\n       return response;\n     } catch (IOException ioe) {\n-      LOG.info(\"Exception set node to labels. \", ioe);\n-      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n-          adminAcl.toString(), \"AdminService\",\n-          \"Exception set node to labels.\");\n-      throw RPCUtil.getRemoteException(ioe);\n+      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n    String argName \u003d \"replaceLabelsOnNode\";\n    final String msg \u003d \"set node to labels.\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    checkRMStatus(user.getShortUserName(), argName, msg);\n\n    ReplaceLabelsOnNodeResponse response \u003d\n        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n    try {\n      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n          request.getNodeToLabels());\n      RMAuditLogger\n          .logSuccess(user.getShortUserName(), argName, \"AdminService\");\n      return response;\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "82567664988b673f1b819a42a4baf31cb0dcb331": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2504. Enhanced RM Admin CLI to support management of node-labels. Contribyted by Wangda Tan.\n",
      "commitDate": "18/10/14 12:07 PM",
      "commitName": "82567664988b673f1b819a42a4baf31cb0dcb331",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n+      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n+    String argName \u003d \"replaceLabelsOnNode\";\n+    UserGroupInformation user \u003d checkAcls(argName);\n+\n+    if (!isRMActive()) {\n+      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n+          adminAcl.toString(), \"AdminService\",\n+          \"ResourceManager is not active. Can not set node to labels.\");\n+      throwStandbyException();\n+    }\n+\n+    ReplaceLabelsOnNodeResponse response \u003d\n+        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n+    try {\n+      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n+          request.getNodeToLabels());\n+      RMAuditLogger\n+          .logSuccess(user.getShortUserName(), argName, \"AdminService\");\n+      return response;\n+    } catch (IOException ioe) {\n+      LOG.info(\"Exception set node to labels. \", ioe);\n+      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n+          adminAcl.toString(), \"AdminService\",\n+          \"Exception set node to labels.\");\n+      throw RPCUtil.getRemoteException(ioe);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplaceLabelsOnNodeResponse replaceLabelsOnNode(\n      ReplaceLabelsOnNodeRequest request) throws YarnException, IOException {\n    String argName \u003d \"replaceLabelsOnNode\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not set node to labels.\");\n      throwStandbyException();\n    }\n\n    ReplaceLabelsOnNodeResponse response \u003d\n        recordFactory.newRecordInstance(ReplaceLabelsOnNodeResponse.class);\n    try {\n      rmContext.getNodeLabelManager().replaceLabelsOnNode(\n          request.getNodeToLabels());\n      RMAuditLogger\n          .logSuccess(user.getShortUserName(), argName, \"AdminService\");\n      return response;\n    } catch (IOException ioe) {\n      LOG.info(\"Exception set node to labels. \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"Exception set node to labels.\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}