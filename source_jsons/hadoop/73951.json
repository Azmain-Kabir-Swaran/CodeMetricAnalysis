{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "closeIdle",
  "functionId": "closeIdle___scanAll-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 3794,
  "functionEndLine": 3813,
  "numCommitsSeen": 162,
  "timeTaken": 3873,
  "changeHistory": [
    "1da81363fac49152ef34d2fcc536935bda0ba990"
  ],
  "changeHistoryShort": {
    "1da81363fac49152ef34d2fcc536935bda0ba990": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1da81363fac49152ef34d2fcc536935bda0ba990": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9955. RPC idle connection closing is extremely inefficient (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542111 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 2:55 PM",
      "commitName": "1da81363fac49152ef34d2fcc536935bda0ba990",
      "commitAuthor": "Daryn Sharp",
      "diff": "@@ -0,0 +1,20 @@\n+    synchronized void closeIdle(boolean scanAll) {\n+      long minLastContact \u003d Time.now() - maxIdleTime;\n+      // concurrent iterator might miss new connections added\n+      // during the iteration, but that\u0027s ok because they won\u0027t\n+      // be idle yet anyway and will be caught on next scan\n+      int closed \u003d 0;\n+      for (Connection connection : connections) {\n+        // stop if connections dropped below threshold unless scanning all\n+        if (!scanAll \u0026\u0026 size() \u003c idleScanThreshold) {\n+          break;\n+        }\n+        // stop if not scanning all and max connections are closed\n+        if (connection.isIdle() \u0026\u0026\n+            connection.getLastContact() \u003c minLastContact \u0026\u0026\n+            close(connection) \u0026\u0026\n+            !scanAll \u0026\u0026 (++closed \u003d\u003d maxIdleToClose)) {\n+          break;\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized void closeIdle(boolean scanAll) {\n      long minLastContact \u003d Time.now() - maxIdleTime;\n      // concurrent iterator might miss new connections added\n      // during the iteration, but that\u0027s ok because they won\u0027t\n      // be idle yet anyway and will be caught on next scan\n      int closed \u003d 0;\n      for (Connection connection : connections) {\n        // stop if connections dropped below threshold unless scanning all\n        if (!scanAll \u0026\u0026 size() \u003c idleScanThreshold) {\n          break;\n        }\n        // stop if not scanning all and max connections are closed\n        if (connection.isIdle() \u0026\u0026\n            connection.getLastContact() \u003c minLastContact \u0026\u0026\n            close(connection) \u0026\u0026\n            !scanAll \u0026\u0026 (++closed \u003d\u003d maxIdleToClose)) {\n          break;\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}