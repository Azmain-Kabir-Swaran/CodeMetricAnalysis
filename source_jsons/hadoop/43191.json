{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "verifyNoLiveAppInRM",
  "functionId": "verifyNoLiveAppInRM___serviceName-String__action-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 951,
  "functionEndLine": 979,
  "numCommitsSeen": 56,
  "timeTaken": 5145,
  "changeHistory": [
    "0bee3849e323bf71925024992f9e655aee2d75f9",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "541b64c7985db425c5ce8bd5f71a2d5980809708",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "0bee3849e323bf71925024992f9e655aee2d75f9": "Ybodychange",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ybodychange",
    "541b64c7985db425c5ce8bd5f71a2d5980809708": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ybodychange",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0bee3849e323bf71925024992f9e655aee2d75f9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7816.  Allow same application name submitted by multiple users.  (Contributed by Gour Saha)\n",
      "commitDate": "31/01/18 5:51 PM",
      "commitName": "0bee3849e323bf71925024992f9e655aee2d75f9",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "23/01/18 5:54 PM",
      "commitNameOld": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 8.0,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n   private void verifyNoLiveAppInRM(String serviceName, String action)\n       throws IOException, YarnException {\n     Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n     types.add(YarnServiceConstants.APP_TYPE);\n     Set\u003cString\u003e tags \u003d null;\n     if (serviceName !\u003d null) {\n       tags \u003d Collections.singleton(ServiceUtils.createNameTag(serviceName));\n     }\n     GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n     request.setApplicationTypes(types);\n     request.setApplicationTags(tags);\n     request.setApplicationStates(liveStates);\n+    String user \u003d UserGroupInformation.getCurrentUser().getUserName();\n+    if (user !\u003d null) {\n+      request.setUsers(Collections.singleton(user));\n+    }\n     List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n     if (!reports.isEmpty()) {\n       String message \u003d \"\";\n       if (action.equals(\"destroy\")) {\n         message \u003d \"Failed to destroy service \" + serviceName\n             + \", because it is still running.\";\n       } else {\n         message \u003d \"Failed to \" + action + \" service \" + serviceName\n             + \", because it already exists.\";\n       }\n       throw new YarnException(message);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyNoLiveAppInRM(String serviceName, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(YarnServiceConstants.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (serviceName !\u003d null) {\n      tags \u003d Collections.singleton(ServiceUtils.createNameTag(serviceName));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    String user \u003d UserGroupInformation.getCurrentUser().getUserName();\n    if (user !\u003d null) {\n      request.setUsers(Collections.singleton(user));\n    }\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      String message \u003d \"\";\n      if (action.equals(\"destroy\")) {\n        message \u003d \"Failed to destroy service \" + serviceName\n            + \", because it is still running.\";\n      } else {\n        message \u003d \"Failed to \" + action + \" service \" + serviceName\n            + \", because it already exists.\";\n      }\n      throw new YarnException(message);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private void verifyNoLiveAppInRM(String serviceName, String action)\n       throws IOException, YarnException {\n     Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n     types.add(YarnServiceConstants.APP_TYPE);\n     Set\u003cString\u003e tags \u003d null;\n     if (serviceName !\u003d null) {\n-      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n+      tags \u003d Collections.singleton(ServiceUtils.createNameTag(serviceName));\n     }\n     GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n     request.setApplicationTypes(types);\n     request.setApplicationTags(tags);\n     request.setApplicationStates(liveStates);\n     List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n     if (!reports.isEmpty()) {\n       String message \u003d \"\";\n       if (action.equals(\"destroy\")) {\n         message \u003d \"Failed to destroy service \" + serviceName\n             + \", because it is still running.\";\n       } else {\n         message \u003d \"Failed to \" + action + \" service \" + serviceName\n             + \", because it already exists.\";\n       }\n       throw new YarnException(message);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyNoLiveAppInRM(String serviceName, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(YarnServiceConstants.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (serviceName !\u003d null) {\n      tags \u003d Collections.singleton(ServiceUtils.createNameTag(serviceName));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      String message \u003d \"\";\n      if (action.equals(\"destroy\")) {\n        message \u003d \"Failed to destroy service \" + serviceName\n            + \", because it is still running.\";\n      } else {\n        message \u003d \"Failed to \" + action + \" service \" + serviceName\n            + \", because it already exists.\";\n      }\n      throw new YarnException(message);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "541b64c7985db425c5ce8bd5f71a2d5980809708": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7165. Miscellaneous fixes in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "541b64c7985db425c5ce8bd5f71a2d5980809708",
      "commitAuthor": "Gour Saha",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,25 @@\n   private void verifyNoLiveAppInRM(String serviceName, String action)\n       throws IOException, YarnException {\n     Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n     types.add(YarnServiceConstants.APP_TYPE);\n     Set\u003cString\u003e tags \u003d null;\n     if (serviceName !\u003d null) {\n       tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n     }\n     GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n     request.setApplicationTypes(types);\n     request.setApplicationTags(tags);\n     request.setApplicationStates(liveStates);\n     List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n     if (!reports.isEmpty()) {\n-      throw new YarnException(\n-          \"Failed to \" + action + \" service, as \" + serviceName\n-              + \" already exists.\");\n+      String message \u003d \"\";\n+      if (action.equals(\"destroy\")) {\n+        message \u003d \"Failed to destroy service \" + serviceName\n+            + \", because it is still running.\";\n+      } else {\n+        message \u003d \"Failed to \" + action + \" service \" + serviceName\n+            + \", because it already exists.\";\n+      }\n+      throw new YarnException(message);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyNoLiveAppInRM(String serviceName, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(YarnServiceConstants.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (serviceName !\u003d null) {\n      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      String message \u003d \"\";\n      if (action.equals(\"destroy\")) {\n        message \u003d \"Failed to destroy service \" + serviceName\n            + \", because it is still running.\";\n      } else {\n        message \u003d \"Failed to \" + action + \" service \" + serviceName\n            + \", because it already exists.\";\n      }\n      throw new YarnException(message);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  private void verifyNoLiveAppInRM(String appname, String action)\n+  private void verifyNoLiveAppInRM(String serviceName, String action)\n       throws IOException, YarnException {\n     Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n     types.add(YarnServiceConstants.APP_TYPE);\n     Set\u003cString\u003e tags \u003d null;\n-    if (appname !\u003d null) {\n-      tags \u003d Collections.singleton(SliderUtils.createNameTag(appname));\n+    if (serviceName !\u003d null) {\n+      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n     }\n     GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n     request.setApplicationTypes(types);\n     request.setApplicationTags(tags);\n     request.setApplicationStates(liveStates);\n     List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n     if (!reports.isEmpty()) {\n       throw new YarnException(\n-          \"Failed to \" + action + \" application, as \" + appname\n+          \"Failed to \" + action + \" service, as \" + serviceName\n               + \" already exists.\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifyNoLiveAppInRM(String serviceName, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(YarnServiceConstants.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (serviceName !\u003d null) {\n      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      throw new YarnException(\n          \"Failed to \" + action + \" service, as \" + serviceName\n              + \" already exists.\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  private void verifyNoLiveAppInRM(String appname, String action)\n+  private void verifyNoLiveAppInRM(String serviceName, String action)\n       throws IOException, YarnException {\n     Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n     types.add(YarnServiceConstants.APP_TYPE);\n     Set\u003cString\u003e tags \u003d null;\n-    if (appname !\u003d null) {\n-      tags \u003d Collections.singleton(SliderUtils.createNameTag(appname));\n+    if (serviceName !\u003d null) {\n+      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n     }\n     GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n     request.setApplicationTypes(types);\n     request.setApplicationTags(tags);\n     request.setApplicationStates(liveStates);\n     List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n     if (!reports.isEmpty()) {\n       throw new YarnException(\n-          \"Failed to \" + action + \" application, as \" + appname\n+          \"Failed to \" + action + \" service, as \" + serviceName\n               + \" already exists.\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifyNoLiveAppInRM(String serviceName, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(YarnServiceConstants.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (serviceName !\u003d null) {\n      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      throw new YarnException(\n          \"Failed to \" + action + \" service, as \" + serviceName\n              + \" already exists.\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  private void verifyNoLiveAppInRM(String appname, String action)\n+  private void verifyNoLiveAppInRM(String serviceName, String action)\n       throws IOException, YarnException {\n     Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n     types.add(YarnServiceConstants.APP_TYPE);\n     Set\u003cString\u003e tags \u003d null;\n-    if (appname !\u003d null) {\n-      tags \u003d Collections.singleton(SliderUtils.createNameTag(appname));\n+    if (serviceName !\u003d null) {\n+      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n     }\n     GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n     request.setApplicationTypes(types);\n     request.setApplicationTags(tags);\n     request.setApplicationStates(liveStates);\n     List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n     if (!reports.isEmpty()) {\n       throw new YarnException(\n-          \"Failed to \" + action + \" application, as \" + appname\n+          \"Failed to \" + action + \" service, as \" + serviceName\n               + \" already exists.\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifyNoLiveAppInRM(String serviceName, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(YarnServiceConstants.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (serviceName !\u003d null) {\n      tags \u003d Collections.singleton(SliderUtils.createNameTag(serviceName));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      throw new YarnException(\n          \"Failed to \" + action + \" service, as \" + serviceName\n              + \" already exists.\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[appname-String, action-String]",
            "newValue": "[serviceName-String, action-String]"
          }
        }
      ]
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void verifyNoLiveAppInRM(String appname, String action)\n       throws IOException, YarnException {\n     Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n-    types.add(SliderKeys.APP_TYPE);\n+    types.add(YarnServiceConstants.APP_TYPE);\n     Set\u003cString\u003e tags \u003d null;\n     if (appname !\u003d null) {\n       tags \u003d Collections.singleton(SliderUtils.createNameTag(appname));\n     }\n     GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n     request.setApplicationTypes(types);\n     request.setApplicationTags(tags);\n     request.setApplicationStates(liveStates);\n     List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n     if (!reports.isEmpty()) {\n       throw new YarnException(\n           \"Failed to \" + action + \" application, as \" + appname\n               + \" already exists.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyNoLiveAppInRM(String appname, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(YarnServiceConstants.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (appname !\u003d null) {\n      tags \u003d Collections.singleton(SliderUtils.createNameTag(appname));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      throw new YarnException(\n          \"Failed to \" + action + \" application, as \" + appname\n              + \" already exists.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,19 @@\n+  private void verifyNoLiveAppInRM(String appname, String action)\n+      throws IOException, YarnException {\n+    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n+    types.add(SliderKeys.APP_TYPE);\n+    Set\u003cString\u003e tags \u003d null;\n+    if (appname !\u003d null) {\n+      tags \u003d Collections.singleton(SliderUtils.createNameTag(appname));\n+    }\n+    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n+    request.setApplicationTypes(types);\n+    request.setApplicationTags(tags);\n+    request.setApplicationStates(liveStates);\n+    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n+    if (!reports.isEmpty()) {\n+      throw new YarnException(\n+          \"Failed to \" + action + \" application, as \" + appname\n+              + \" already exists.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyNoLiveAppInRM(String appname, String action)\n      throws IOException, YarnException {\n    Set\u003cString\u003e types \u003d new HashSet\u003c\u003e(1);\n    types.add(SliderKeys.APP_TYPE);\n    Set\u003cString\u003e tags \u003d null;\n    if (appname !\u003d null) {\n      tags \u003d Collections.singleton(SliderUtils.createNameTag(appname));\n    }\n    GetApplicationsRequest request \u003d GetApplicationsRequest.newInstance();\n    request.setApplicationTypes(types);\n    request.setApplicationTags(tags);\n    request.setApplicationStates(liveStates);\n    List\u003cApplicationReport\u003e reports \u003d yarnClient.getApplications(request);\n    if (!reports.isEmpty()) {\n      throw new YarnException(\n          \"Failed to \" + action + \" application, as \" + appname\n              + \" already exists.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}