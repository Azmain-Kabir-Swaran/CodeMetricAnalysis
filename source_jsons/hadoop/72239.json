{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XDR.java",
  "functionName": "ensureFreeSpace",
  "functionId": "ensureFreeSpace___size-int",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/XDR.java",
  "functionStartLine": 204,
  "functionEndLine": 220,
  "numCommitsSeen": 8,
  "timeTaken": 633,
  "changeHistory": [
    "c16442c45958f6c6a106d2a3949d84b1404a256c"
  ],
  "changeHistoryShort": {
    "c16442c45958f6c6a106d2a3949d84b1404a256c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c16442c45958f6c6a106d2a3949d84b1404a256c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9669 Reduce the number of byte array creations and copies in XDR data manipulation. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524259 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/09/13 5:06 PM",
      "commitName": "c16442c45958f6c6a106d2a3949d84b1404a256c",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,17 @@\n+  private void ensureFreeSpace(int size) {\n+    Preconditions.checkState(state \u003d\u003d State.WRITING);\n+    if (buf.remaining() \u003c size) {\n+      int newCapacity \u003d buf.capacity() * 2;\n+      int newRemaining \u003d buf.capacity() + buf.remaining();\n+\n+      while (newRemaining \u003c size) {\n+        newRemaining +\u003d newCapacity;\n+        newCapacity *\u003d 2;\n+      }\n+\n+      ByteBuffer newbuf \u003d ByteBuffer.allocate(newCapacity);\n+      buf.flip();\n+      newbuf.put(buf);\n+      buf \u003d newbuf;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void ensureFreeSpace(int size) {\n    Preconditions.checkState(state \u003d\u003d State.WRITING);\n    if (buf.remaining() \u003c size) {\n      int newCapacity \u003d buf.capacity() * 2;\n      int newRemaining \u003d buf.capacity() + buf.remaining();\n\n      while (newRemaining \u003c size) {\n        newRemaining +\u003d newCapacity;\n        newCapacity *\u003d 2;\n      }\n\n      ByteBuffer newbuf \u003d ByteBuffer.allocate(newCapacity);\n      buf.flip();\n      newbuf.put(buf);\n      buf \u003d newbuf;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/XDR.java"
    }
  }
}