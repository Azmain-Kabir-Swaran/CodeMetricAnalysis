{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProvidedReplica.java",
  "functionName": "getDataInputStream",
  "functionId": "getDataInputStream___seekOffset-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ProvidedReplica.java",
  "functionStartLine": 183,
  "functionEndLine": 204,
  "numCommitsSeen": 7,
  "timeTaken": 2730,
  "changeHistory": [
    "4531588a94dcd2b4141b12828cb60ca3b953a58c",
    "e1a28f95b8ffcb86300148f10a23b710f8388341",
    "1108cb76917debf0a8541d5130e015883eb521af",
    "b668eb91556b8c85c2b4925808ccb1f769031c20"
  ],
  "changeHistoryShort": {
    "4531588a94dcd2b4141b12828cb60ca3b953a58c": "Ybodychange",
    "e1a28f95b8ffcb86300148f10a23b710f8388341": "Ybodychange",
    "1108cb76917debf0a8541d5130e015883eb521af": "Ybodychange",
    "b668eb91556b8c85c2b4925808ccb1f769031c20": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4531588a94dcd2b4141b12828cb60ca3b953a58c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11640. [READ] Datanodes should use a unique identifier when reading from external stores\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "4531588a94dcd2b4141b12828cb60ca3b953a58c",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "a027055dd2bf5009fe272e9ceb08305bd0a8cc31",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,22 @@\n   public InputStream getDataInputStream(long seekOffset) throws IOException {\n     if (remoteFS !\u003d null) {\n-      FSDataInputStream ins \u003d remoteFS.open(new Path(getRemoteURI()));\n+      FSDataInputStream ins;\n+      try {\n+        if (pathHandle !\u003d null) {\n+          ins \u003d remoteFS.open(pathHandle, conf.getInt(IO_FILE_BUFFER_SIZE_KEY,\n+              IO_FILE_BUFFER_SIZE_DEFAULT));\n+        } else {\n+          ins \u003d remoteFS.open(new Path(getRemoteURI()));\n+        }\n+      } catch (UnsupportedOperationException e) {\n+        throw new IOException(\"PathHandle specified, but unsuported\", e);\n+      }\n+\n       ins.seek(fileOffset + seekOffset);\n       return new BoundedInputStream(\n           new FSDataInputStream(ins), getBlockDataLength());\n     } else {\n       throw new IOException(\"Remote filesystem for provided replica \" + this +\n           \" does not exist\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public InputStream getDataInputStream(long seekOffset) throws IOException {\n    if (remoteFS !\u003d null) {\n      FSDataInputStream ins;\n      try {\n        if (pathHandle !\u003d null) {\n          ins \u003d remoteFS.open(pathHandle, conf.getInt(IO_FILE_BUFFER_SIZE_KEY,\n              IO_FILE_BUFFER_SIZE_DEFAULT));\n        } else {\n          ins \u003d remoteFS.open(new Path(getRemoteURI()));\n        }\n      } catch (UnsupportedOperationException e) {\n        throw new IOException(\"PathHandle specified, but unsuported\", e);\n      }\n\n      ins.seek(fileOffset + seekOffset);\n      return new BoundedInputStream(\n          new FSDataInputStream(ins), getBlockDataLength());\n    } else {\n      throw new IOException(\"Remote filesystem for provided replica \" + this +\n          \" does not exist\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ProvidedReplica.java",
      "extendedDetails": {}
    },
    "e1a28f95b8ffcb86300148f10a23b710f8388341": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12777. [READ] Reduce memory and CPU footprint for PROVIDED volumes.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "e1a28f95b8ffcb86300148f10a23b710f8388341",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "2407c9b93aabb021b76c802b19c928fb6cbb0a85",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public InputStream getDataInputStream(long seekOffset) throws IOException {\n     if (remoteFS !\u003d null) {\n-      FSDataInputStream ins \u003d remoteFS.open(new Path(fileURI));\n+      FSDataInputStream ins \u003d remoteFS.open(new Path(getRemoteURI()));\n       ins.seek(fileOffset + seekOffset);\n       return new BoundedInputStream(\n           new FSDataInputStream(ins), getBlockDataLength());\n     } else {\n       throw new IOException(\"Remote filesystem for provided replica \" + this +\n           \" does not exist\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public InputStream getDataInputStream(long seekOffset) throws IOException {\n    if (remoteFS !\u003d null) {\n      FSDataInputStream ins \u003d remoteFS.open(new Path(getRemoteURI()));\n      ins.seek(fileOffset + seekOffset);\n      return new BoundedInputStream(\n          new FSDataInputStream(ins), getBlockDataLength());\n    } else {\n      throw new IOException(\"Remote filesystem for provided replica \" + this +\n          \" does not exist\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ProvidedReplica.java",
      "extendedDetails": {}
    },
    "1108cb76917debf0a8541d5130e015883eb521af": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11653. [READ] ProvidedReplica should return an InputStream that is bounded by its length\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "1108cb76917debf0a8541d5130e015883eb521af",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public InputStream getDataInputStream(long seekOffset) throws IOException {\n     if (remoteFS !\u003d null) {\n       FSDataInputStream ins \u003d remoteFS.open(new Path(fileURI));\n       ins.seek(fileOffset + seekOffset);\n-      return new FSDataInputStream(ins);\n+      return new BoundedInputStream(\n+          new FSDataInputStream(ins), getBlockDataLength());\n     } else {\n       throw new IOException(\"Remote filesystem for provided replica \" + this +\n           \" does not exist\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public InputStream getDataInputStream(long seekOffset) throws IOException {\n    if (remoteFS !\u003d null) {\n      FSDataInputStream ins \u003d remoteFS.open(new Path(fileURI));\n      ins.seek(fileOffset + seekOffset);\n      return new BoundedInputStream(\n          new FSDataInputStream(ins), getBlockDataLength());\n    } else {\n      throw new IOException(\"Remote filesystem for provided replica \" + this +\n          \" does not exist\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ProvidedReplica.java",
      "extendedDetails": {}
    },
    "b668eb91556b8c85c2b4925808ccb1f769031c20": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,10 @@\n+  public InputStream getDataInputStream(long seekOffset) throws IOException {\n+    if (remoteFS !\u003d null) {\n+      FSDataInputStream ins \u003d remoteFS.open(new Path(fileURI));\n+      ins.seek(fileOffset + seekOffset);\n+      return new FSDataInputStream(ins);\n+    } else {\n+      throw new IOException(\"Remote filesystem for provided replica \" + this +\n+          \" does not exist\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public InputStream getDataInputStream(long seekOffset) throws IOException {\n    if (remoteFS !\u003d null) {\n      FSDataInputStream ins \u003d remoteFS.open(new Path(fileURI));\n      ins.seek(fileOffset + seekOffset);\n      return new FSDataInputStream(ins);\n    } else {\n      throw new IOException(\"Remote filesystem for provided replica \" + this +\n          \" does not exist\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ProvidedReplica.java"
    }
  }
}