{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AggregatedLogFormat.java",
  "functionName": "filterFiles",
  "functionId": "filterFiles___pattern-String__candidates-Set__File____exclusion-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
  "functionStartLine": 369,
  "functionEndLine": 382,
  "numCommitsSeen": 47,
  "timeTaken": 2090,
  "changeHistory": [
    "863079bb874ba77918ca1c0741eae10e245995c8",
    "34cdcaad71cad76c0874a4e5266b4074009d2ffc"
  ],
  "changeHistoryShort": {
    "863079bb874ba77918ca1c0741eae10e245995c8": "Ybodychange",
    "34cdcaad71cad76c0874a4e5266b4074009d2ffc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "863079bb874ba77918ca1c0741eae10e245995c8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3154. Added additional APIs in LogAggregationContext to avoid aggregating running logs of application when rolling is enabled. Contributed by Xuan Gong.\n",
      "commitDate": "12/03/15 1:32 PM",
      "commitName": "863079bb874ba77918ca1c0741eae10e245995c8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/12/14 3:06 AM",
      "commitNameOld": "a696fbb001b946ae75f3b8e962839c2fd3decfa1",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 80.39,
      "commitsBetweenForRepo": 609,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     private void filterFiles(String pattern, Set\u003cFile\u003e candidates,\n         boolean exclusion) {\n-      Pattern filterPattern \u003d\n-          Pattern.compile(pattern);\n-      for (Iterator\u003cFile\u003e candidatesItr \u003d candidates.iterator(); candidatesItr\n+      if (pattern !\u003d null \u0026\u0026 !pattern.isEmpty()) {\n+        Pattern filterPattern \u003d Pattern.compile(pattern);\n+        for (Iterator\u003cFile\u003e candidatesItr \u003d candidates.iterator(); candidatesItr\n           .hasNext();) {\n-        File candidate \u003d candidatesItr.next();\n-        boolean match \u003d filterPattern.matcher(candidate.getName()).find();\n-        if ((!match \u0026\u0026 !exclusion) || (match \u0026\u0026 exclusion)) {\n-          candidatesItr.remove();\n+          File candidate \u003d candidatesItr.next();\n+          boolean match \u003d filterPattern.matcher(candidate.getName()).find();\n+          if ((!match \u0026\u0026 !exclusion) || (match \u0026\u0026 exclusion)) {\n+            candidatesItr.remove();\n+          }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void filterFiles(String pattern, Set\u003cFile\u003e candidates,\n        boolean exclusion) {\n      if (pattern !\u003d null \u0026\u0026 !pattern.isEmpty()) {\n        Pattern filterPattern \u003d Pattern.compile(pattern);\n        for (Iterator\u003cFile\u003e candidatesItr \u003d candidates.iterator(); candidatesItr\n          .hasNext();) {\n          File candidate \u003d candidatesItr.next();\n          boolean match \u003d filterPattern.matcher(candidate.getName()).find();\n          if ((!match \u0026\u0026 !exclusion) || (match \u0026\u0026 exclusion)) {\n            candidatesItr.remove();\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {}
    },
    "34cdcaad71cad76c0874a4e5266b4074009d2ffc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2468. Enhanced NodeManager to support log handling APIs (YARN-2569) for use by long running services. Contributed by Xuan Gong.\n",
      "commitDate": "03/10/14 12:15 PM",
      "commitName": "34cdcaad71cad76c0874a4e5266b4074009d2ffc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+    private void filterFiles(String pattern, Set\u003cFile\u003e candidates,\n+        boolean exclusion) {\n+      Pattern filterPattern \u003d\n+          Pattern.compile(pattern);\n+      for (Iterator\u003cFile\u003e candidatesItr \u003d candidates.iterator(); candidatesItr\n+          .hasNext();) {\n+        File candidate \u003d candidatesItr.next();\n+        boolean match \u003d filterPattern.matcher(candidate.getName()).find();\n+        if ((!match \u0026\u0026 !exclusion) || (match \u0026\u0026 exclusion)) {\n+          candidatesItr.remove();\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void filterFiles(String pattern, Set\u003cFile\u003e candidates,\n        boolean exclusion) {\n      Pattern filterPattern \u003d\n          Pattern.compile(pattern);\n      for (Iterator\u003cFile\u003e candidatesItr \u003d candidates.iterator(); candidatesItr\n          .hasNext();) {\n        File candidate \u003d candidatesItr.next();\n        boolean match \u003d filterPattern.matcher(candidate.getName()).find();\n        if ((!match \u0026\u0026 !exclusion) || (match \u0026\u0026 exclusion)) {\n          candidatesItr.remove();\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java"
    }
  }
}