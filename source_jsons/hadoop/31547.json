{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationEntityReader.java",
  "functionName": "getResult",
  "functionId": "getResult___hbaseConf-Configuration__conn-Connection__filterList-FilterList",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
  "functionStartLine": 320,
  "functionEndLine": 335,
  "numCommitsSeen": 30,
  "timeTaken": 4595,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "70078e91e3287aad51f6ddf6acd9ed75e7c6760d",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "892b193bd77c15932b4c084c1d525b7017def0d4",
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
    "960af7d4717b8a8949d0b2e43949e7daab45aa88",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "70078e91e3287aad51f6ddf6acd9ed75e7c6760d": "Ybodychange",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "892b193bd77c15932b4c084c1d525b7017def0d4": "Ybodychange",
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b": "Ybodychange",
    "960af7d4717b8a8949d0b2e43949e7daab45aa88": "Ybodychange",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": "Ybodychange",
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f": "Yfilerename",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ybodychange",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": "Ymultichange(Yparameterchange,Ybodychange)",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    TimelineReaderContext context \u003d getContext();\n    ApplicationRowKey applicationRowKey \u003d\n        new ApplicationRowKey(context.getClusterId(), context.getUserId(),\n            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n    byte[] rowKey \u003d applicationRowKey.getRowKey();\n    Get get \u003d new Get(rowKey);\n    // Set time range for metric values.\n    setMetricsTimeRange(get);\n    get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return getTable().getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java"
      }
    },
    "70078e91e3287aad51f6ddf6acd9ed75e7c6760d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4455. Support fetching metrics by time range. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "70078e91e3287aad51f6ddf6acd9ed75e7c6760d",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "c3bd8d6ad3e30c08865cc1a5f374d1d2a485f844",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   protected Result getResult(Configuration hbaseConf, Connection conn,\n       FilterList filterList) throws IOException {\n     TimelineReaderContext context \u003d getContext();\n     ApplicationRowKey applicationRowKey \u003d\n         new ApplicationRowKey(context.getClusterId(), context.getUserId(),\n             context.getFlowName(), context.getFlowRunId(), context.getAppId());\n     byte[] rowKey \u003d applicationRowKey.getRowKey();\n     Get get \u003d new Get(rowKey);\n+    // Set time range for metric values.\n+    setMetricsTimeRange(get);\n     get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n     if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n       get.setFilter(filterList);\n     }\n     return getTable().getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    TimelineReaderContext context \u003d getContext();\n    ApplicationRowKey applicationRowKey \u003d\n        new ApplicationRowKey(context.getClusterId(), context.getUserId(),\n            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n    byte[] rowKey \u003d applicationRowKey.getRowKey();\n    Get get \u003d new Get(rowKey);\n    // Set time range for metric values.\n    setMetricsTimeRange(get);\n    get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return getTable().getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {}
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    TimelineReaderContext context \u003d getContext();\n    ApplicationRowKey applicationRowKey \u003d\n        new ApplicationRowKey(context.getClusterId(), context.getUserId(),\n            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n    byte[] rowKey \u003d applicationRowKey.getRowKey();\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return getTable().getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java"
      }
    },
    "892b193bd77c15932b4c084c1d525b7017def0d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   protected Result getResult(Configuration hbaseConf, Connection conn,\n       FilterList filterList) throws IOException {\n     TimelineReaderContext context \u003d getContext();\n-    byte[] rowKey \u003d\n-        ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),\n+    ApplicationRowKey applicationRowKey \u003d\n+        new ApplicationRowKey(context.getClusterId(), context.getUserId(),\n             context.getFlowName(), context.getFlowRunId(), context.getAppId());\n+    byte[] rowKey \u003d applicationRowKey.getRowKey();\n     Get get \u003d new Get(rowKey);\n     get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n     if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n       get.setFilter(filterList);\n     }\n     return getTable().getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    TimelineReaderContext context \u003d getContext();\n    ApplicationRowKey applicationRowKey \u003d\n        new ApplicationRowKey(context.getClusterId(), context.getUserId(),\n            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n    byte[] rowKey \u003d applicationRowKey.getRowKey();\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return getTable().getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {}
    },
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5015. entire time series is returned for YARN container system metrics (CPU and memory) (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "8c8183e515b42b7fff7d56a14ea7af78d3fdc772",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected Result getResult(Configuration hbaseConf, Connection conn,\n       FilterList filterList) throws IOException {\n     TimelineReaderContext context \u003d getContext();\n     byte[] rowKey \u003d\n         ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),\n             context.getFlowName(), context.getFlowRunId(), context.getAppId());\n     Get get \u003d new Get(rowKey);\n-    get.setMaxVersions(Integer.MAX_VALUE);\n+    get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n     if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n       get.setFilter(filterList);\n     }\n     return getTable().getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    TimelineReaderContext context \u003d getContext();\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),\n            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(getDataToRetrieve().getMetricsLimit());\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return getTable().getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {}
    },
    "960af7d4717b8a8949d0b2e43949e7daab45aa88": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4409. Fix javadoc and checkstyle issues in timelineservice code (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected Result getResult(Configuration hbaseConf, Connection conn,\n       FilterList filterList) throws IOException {\n     TimelineReaderContext context \u003d getContext();\n     byte[] rowKey \u003d\n         ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),\n             context.getFlowName(), context.getFlowRunId(), context.getAppId());\n     Get get \u003d new Get(rowKey);\n     get.setMaxVersions(Integer.MAX_VALUE);\n     if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n       get.setFilter(filterList);\n     }\n-    return table.getResult(hbaseConf, conn, get);\n+    return getTable().getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    TimelineReaderContext context \u003d getContext();\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),\n            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return getTable().getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {}
    },
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   protected Result getResult(Configuration hbaseConf, Connection conn,\n       FilterList filterList) throws IOException {\n+    TimelineReaderContext context \u003d getContext();\n     byte[] rowKey \u003d\n-        ApplicationRowKey.getRowKey(clusterId, userId, flowName, flowRunId,\n-            appId);\n+        ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),\n+            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n     Get get \u003d new Get(rowKey);\n     get.setMaxVersions(Integer.MAX_VALUE);\n     if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n       get.setFilter(filterList);\n     }\n     return table.getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    TimelineReaderContext context \u003d getContext();\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(context.getClusterId(), context.getUserId(),\n            context.getFlowName(), context.getFlowRunId(), context.getAppId());\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return table.getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {}
    },
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f": {
      "type": "Yfilerename",
      "commitMessage": "YARN-4200. Refactor reader classes in storage to nest under hbase\nspecific package name. Contributed by Li Lu.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "88f02941144824187b70fa2aaf0c6d90bcb77d8f",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "cc16683cefe2611cf4de7819496aa54854f5394c",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(clusterId, userId, flowName, flowRunId,\n            appId);\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return table.getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/ApplicationEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/ApplicationEntityReader.java"
      }
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   protected Result getResult(Configuration hbaseConf, Connection conn,\n       FilterList filterList) throws IOException {\n     byte[] rowKey \u003d\n-        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n+        ApplicationRowKey.getRowKey(clusterId, userId, flowName, flowRunId,\n             appId);\n     Get get \u003d new Get(rowKey);\n     get.setMaxVersions(Integer.MAX_VALUE);\n     if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n       get.setFilter(filterList);\n     }\n     return table.getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(clusterId, userId, flowName, flowRunId,\n            appId);\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return table.getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/ApplicationEntityReader.java",
      "extendedDetails": {}
    },
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "09649005ca269f249f98384ecd1abf9fb6d5b0c1",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,12 @@\n-  protected Result getResult(Configuration hbaseConf, Connection conn)\n-      throws IOException {\n+  protected Result getResult(Configuration hbaseConf, Connection conn,\n+      FilterList filterList) throws IOException {\n     byte[] rowKey \u003d\n         ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n             appId);\n     Get get \u003d new Get(rowKey);\n     get.setMaxVersions(Integer.MAX_VALUE);\n+    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n+      get.setFilter(filterList);\n+    }\n     return table.getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n            appId);\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return table.getResult(hbaseConf, conn, get);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/ApplicationEntityReader.java",
          "extendedDetails": {
            "oldValue": "[hbaseConf-Configuration, conn-Connection]",
            "newValue": "[hbaseConf-Configuration, conn-Connection, filterList-FilterList]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "09649005ca269f249f98384ecd1abf9fb6d5b0c1",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,12 @@\n-  protected Result getResult(Configuration hbaseConf, Connection conn)\n-      throws IOException {\n+  protected Result getResult(Configuration hbaseConf, Connection conn,\n+      FilterList filterList) throws IOException {\n     byte[] rowKey \u003d\n         ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n             appId);\n     Get get \u003d new Get(rowKey);\n     get.setMaxVersions(Integer.MAX_VALUE);\n+    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n+      get.setFilter(filterList);\n+    }\n     return table.getResult(hbaseConf, conn, get);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn,\n      FilterList filterList) throws IOException {\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n            appId);\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    if (filterList !\u003d null \u0026\u0026 !filterList.getFilters().isEmpty()) {\n      get.setFilter(filterList);\n    }\n    return table.getResult(hbaseConf, conn, get);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/ApplicationEntityReader.java",
          "extendedDetails": {}
        }
      ]
    },
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthor": "Vrushali",
      "diff": "@@ -0,0 +1,9 @@\n+  protected Result getResult(Configuration hbaseConf, Connection conn)\n+      throws IOException {\n+    byte[] rowKey \u003d\n+        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n+            appId);\n+    Get get \u003d new Get(rowKey);\n+    get.setMaxVersions(Integer.MAX_VALUE);\n+    return table.getResult(hbaseConf, conn, get);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Result getResult(Configuration hbaseConf, Connection conn)\n      throws IOException {\n    byte[] rowKey \u003d\n        ApplicationRowKey.getRowKey(clusterId, userId, flowId, flowRunId,\n            appId);\n    Get get \u003d new Get(rowKey);\n    get.setMaxVersions(Integer.MAX_VALUE);\n    return table.getResult(hbaseConf, conn, get);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/ApplicationEntityReader.java"
    }
  }
}