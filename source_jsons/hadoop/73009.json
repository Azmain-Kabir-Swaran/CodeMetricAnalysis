{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AesCtrCryptoCodec.java",
  "functionName": "calculateIV",
  "functionId": "calculateIV___initIV-byte[]__counter-long__IV-byte[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/AesCtrCryptoCodec.java",
  "functionStartLine": 49,
  "functionEndLine": 65,
  "numCommitsSeen": 4,
  "timeTaken": 815,
  "changeHistory": [
    "0707e4eca906552c960e3b8c4e20d9913145eca6",
    "2b5e0444246e82093f58a9658b4508f272077379",
    "03c858dad46e440028c58a716630160338db4b14"
  ],
  "changeHistoryShort": {
    "0707e4eca906552c960e3b8c4e20d9913145eca6": "Ybodychange",
    "2b5e0444246e82093f58a9658b4508f272077379": "Ybodychange",
    "03c858dad46e440028c58a716630160338db4b14": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0707e4eca906552c960e3b8c4e20d9913145eca6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11343. Overflow is not properly handled in caclulating final iv for AES CTR. Contributed by Jerry Chen.\n",
      "commitDate": "05/12/14 6:20 PM",
      "commitName": "0707e4eca906552c960e3b8c4e20d9913145eca6",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "05/08/14 9:43 PM",
      "commitNameOld": "2b5e0444246e82093f58a9658b4508f272077379",
      "commitAuthorOld": "Yi Liu",
      "daysBetweenCommits": 121.9,
      "commitsBetweenForRepo": 1146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n   public void calculateIV(byte[] initIV, long counter, byte[] IV) {\n     Preconditions.checkArgument(initIV.length \u003d\u003d AES_BLOCK_SIZE);\n     Preconditions.checkArgument(IV.length \u003d\u003d AES_BLOCK_SIZE);\n-    \n-    System.arraycopy(initIV, 0, IV, 0, CTR_OFFSET);\n-    long l \u003d 0;\n-    for (int i \u003d 0; i \u003c 8; i++) {\n-      l \u003d ((l \u003c\u003c 8) | (initIV[CTR_OFFSET + i] \u0026 0xff));\n+\n+    int i \u003d IV.length; // IV length\n+    int j \u003d 0; // counter bytes index\n+    int sum \u003d 0;\n+    while (i-- \u003e 0) {\n+      // (sum \u003e\u003e\u003e Byte.SIZE) is the carry for addition\n+      sum \u003d (initIV[i] \u0026 0xff) + (sum \u003e\u003e\u003e Byte.SIZE);\n+      if (j++ \u003c 8) { // Big-endian, and long is 8 bytes length\n+        sum +\u003d (byte) counter \u0026 0xff;\n+        counter \u003e\u003e\u003e\u003d 8;\n+      }\n+      IV[i] \u003d (byte) sum;\n     }\n-    l +\u003d counter;\n-    IV[CTR_OFFSET + 0] \u003d (byte) (l \u003e\u003e\u003e 56);\n-    IV[CTR_OFFSET + 1] \u003d (byte) (l \u003e\u003e\u003e 48);\n-    IV[CTR_OFFSET + 2] \u003d (byte) (l \u003e\u003e\u003e 40);\n-    IV[CTR_OFFSET + 3] \u003d (byte) (l \u003e\u003e\u003e 32);\n-    IV[CTR_OFFSET + 4] \u003d (byte) (l \u003e\u003e\u003e 24);\n-    IV[CTR_OFFSET + 5] \u003d (byte) (l \u003e\u003e\u003e 16);\n-    IV[CTR_OFFSET + 6] \u003d (byte) (l \u003e\u003e\u003e 8);\n-    IV[CTR_OFFSET + 7] \u003d (byte) (l);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void calculateIV(byte[] initIV, long counter, byte[] IV) {\n    Preconditions.checkArgument(initIV.length \u003d\u003d AES_BLOCK_SIZE);\n    Preconditions.checkArgument(IV.length \u003d\u003d AES_BLOCK_SIZE);\n\n    int i \u003d IV.length; // IV length\n    int j \u003d 0; // counter bytes index\n    int sum \u003d 0;\n    while (i-- \u003e 0) {\n      // (sum \u003e\u003e\u003e Byte.SIZE) is the carry for addition\n      sum \u003d (initIV[i] \u0026 0xff) + (sum \u003e\u003e\u003e Byte.SIZE);\n      if (j++ \u003c 8) { // Big-endian, and long is 8 bytes length\n        sum +\u003d (byte) counter \u0026 0xff;\n        counter \u003e\u003e\u003e\u003d 8;\n      }\n      IV[i] \u003d (byte) sum;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/AesCtrCryptoCodec.java",
      "extendedDetails": {}
    },
    "2b5e0444246e82093f58a9658b4508f272077379": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6817. Fix findbugs and other warnings. (yliu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1616092 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/14 9:43 PM",
      "commitName": "2b5e0444246e82093f58a9658b4508f272077379",
      "commitAuthor": "Yi Liu",
      "commitDateOld": "03/07/14 4:51 PM",
      "commitNameOld": "03c858dad46e440028c58a716630160338db4b14",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 33.2,
      "commitsBetweenForRepo": 253,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,19 @@\n   public void calculateIV(byte[] initIV, long counter, byte[] IV) {\n     Preconditions.checkArgument(initIV.length \u003d\u003d AES_BLOCK_SIZE);\n     Preconditions.checkArgument(IV.length \u003d\u003d AES_BLOCK_SIZE);\n     \n     System.arraycopy(initIV, 0, IV, 0, CTR_OFFSET);\n-    long l \u003d (initIV[CTR_OFFSET + 0] \u003c\u003c 56)\n-        + ((initIV[CTR_OFFSET + 1] \u0026 0xFF) \u003c\u003c 48)\n-        + ((initIV[CTR_OFFSET + 2] \u0026 0xFF) \u003c\u003c 40)\n-        + ((initIV[CTR_OFFSET + 3] \u0026 0xFF) \u003c\u003c 32)\n-        + ((initIV[CTR_OFFSET + 4] \u0026 0xFF) \u003c\u003c 24)\n-        + ((initIV[CTR_OFFSET + 5] \u0026 0xFF) \u003c\u003c 16)\n-        + ((initIV[CTR_OFFSET + 6] \u0026 0xFF) \u003c\u003c 8)\n-        + (initIV[CTR_OFFSET + 7] \u0026 0xFF);\n+    long l \u003d 0;\n+    for (int i \u003d 0; i \u003c 8; i++) {\n+      l \u003d ((l \u003c\u003c 8) | (initIV[CTR_OFFSET + i] \u0026 0xff));\n+    }\n     l +\u003d counter;\n     IV[CTR_OFFSET + 0] \u003d (byte) (l \u003e\u003e\u003e 56);\n     IV[CTR_OFFSET + 1] \u003d (byte) (l \u003e\u003e\u003e 48);\n     IV[CTR_OFFSET + 2] \u003d (byte) (l \u003e\u003e\u003e 40);\n     IV[CTR_OFFSET + 3] \u003d (byte) (l \u003e\u003e\u003e 32);\n     IV[CTR_OFFSET + 4] \u003d (byte) (l \u003e\u003e\u003e 24);\n     IV[CTR_OFFSET + 5] \u003d (byte) (l \u003e\u003e\u003e 16);\n     IV[CTR_OFFSET + 6] \u003d (byte) (l \u003e\u003e\u003e 8);\n     IV[CTR_OFFSET + 7] \u003d (byte) (l);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void calculateIV(byte[] initIV, long counter, byte[] IV) {\n    Preconditions.checkArgument(initIV.length \u003d\u003d AES_BLOCK_SIZE);\n    Preconditions.checkArgument(IV.length \u003d\u003d AES_BLOCK_SIZE);\n    \n    System.arraycopy(initIV, 0, IV, 0, CTR_OFFSET);\n    long l \u003d 0;\n    for (int i \u003d 0; i \u003c 8; i++) {\n      l \u003d ((l \u003c\u003c 8) | (initIV[CTR_OFFSET + i] \u0026 0xff));\n    }\n    l +\u003d counter;\n    IV[CTR_OFFSET + 0] \u003d (byte) (l \u003e\u003e\u003e 56);\n    IV[CTR_OFFSET + 1] \u003d (byte) (l \u003e\u003e\u003e 48);\n    IV[CTR_OFFSET + 2] \u003d (byte) (l \u003e\u003e\u003e 40);\n    IV[CTR_OFFSET + 3] \u003d (byte) (l \u003e\u003e\u003e 32);\n    IV[CTR_OFFSET + 4] \u003d (byte) (l \u003e\u003e\u003e 24);\n    IV[CTR_OFFSET + 5] \u003d (byte) (l \u003e\u003e\u003e 16);\n    IV[CTR_OFFSET + 6] \u003d (byte) (l \u003e\u003e\u003e 8);\n    IV[CTR_OFFSET + 7] \u003d (byte) (l);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/AesCtrCryptoCodec.java",
      "extendedDetails": {}
    },
    "03c858dad46e440028c58a716630160338db4b14": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10693: add files left out of previous checkin (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607769 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 4:51 PM",
      "commitName": "03c858dad46e440028c58a716630160338db4b14",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,23 @@\n+  public void calculateIV(byte[] initIV, long counter, byte[] IV) {\n+    Preconditions.checkArgument(initIV.length \u003d\u003d AES_BLOCK_SIZE);\n+    Preconditions.checkArgument(IV.length \u003d\u003d AES_BLOCK_SIZE);\n+    \n+    System.arraycopy(initIV, 0, IV, 0, CTR_OFFSET);\n+    long l \u003d (initIV[CTR_OFFSET + 0] \u003c\u003c 56)\n+        + ((initIV[CTR_OFFSET + 1] \u0026 0xFF) \u003c\u003c 48)\n+        + ((initIV[CTR_OFFSET + 2] \u0026 0xFF) \u003c\u003c 40)\n+        + ((initIV[CTR_OFFSET + 3] \u0026 0xFF) \u003c\u003c 32)\n+        + ((initIV[CTR_OFFSET + 4] \u0026 0xFF) \u003c\u003c 24)\n+        + ((initIV[CTR_OFFSET + 5] \u0026 0xFF) \u003c\u003c 16)\n+        + ((initIV[CTR_OFFSET + 6] \u0026 0xFF) \u003c\u003c 8)\n+        + (initIV[CTR_OFFSET + 7] \u0026 0xFF);\n+    l +\u003d counter;\n+    IV[CTR_OFFSET + 0] \u003d (byte) (l \u003e\u003e\u003e 56);\n+    IV[CTR_OFFSET + 1] \u003d (byte) (l \u003e\u003e\u003e 48);\n+    IV[CTR_OFFSET + 2] \u003d (byte) (l \u003e\u003e\u003e 40);\n+    IV[CTR_OFFSET + 3] \u003d (byte) (l \u003e\u003e\u003e 32);\n+    IV[CTR_OFFSET + 4] \u003d (byte) (l \u003e\u003e\u003e 24);\n+    IV[CTR_OFFSET + 5] \u003d (byte) (l \u003e\u003e\u003e 16);\n+    IV[CTR_OFFSET + 6] \u003d (byte) (l \u003e\u003e\u003e 8);\n+    IV[CTR_OFFSET + 7] \u003d (byte) (l);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void calculateIV(byte[] initIV, long counter, byte[] IV) {\n    Preconditions.checkArgument(initIV.length \u003d\u003d AES_BLOCK_SIZE);\n    Preconditions.checkArgument(IV.length \u003d\u003d AES_BLOCK_SIZE);\n    \n    System.arraycopy(initIV, 0, IV, 0, CTR_OFFSET);\n    long l \u003d (initIV[CTR_OFFSET + 0] \u003c\u003c 56)\n        + ((initIV[CTR_OFFSET + 1] \u0026 0xFF) \u003c\u003c 48)\n        + ((initIV[CTR_OFFSET + 2] \u0026 0xFF) \u003c\u003c 40)\n        + ((initIV[CTR_OFFSET + 3] \u0026 0xFF) \u003c\u003c 32)\n        + ((initIV[CTR_OFFSET + 4] \u0026 0xFF) \u003c\u003c 24)\n        + ((initIV[CTR_OFFSET + 5] \u0026 0xFF) \u003c\u003c 16)\n        + ((initIV[CTR_OFFSET + 6] \u0026 0xFF) \u003c\u003c 8)\n        + (initIV[CTR_OFFSET + 7] \u0026 0xFF);\n    l +\u003d counter;\n    IV[CTR_OFFSET + 0] \u003d (byte) (l \u003e\u003e\u003e 56);\n    IV[CTR_OFFSET + 1] \u003d (byte) (l \u003e\u003e\u003e 48);\n    IV[CTR_OFFSET + 2] \u003d (byte) (l \u003e\u003e\u003e 40);\n    IV[CTR_OFFSET + 3] \u003d (byte) (l \u003e\u003e\u003e 32);\n    IV[CTR_OFFSET + 4] \u003d (byte) (l \u003e\u003e\u003e 24);\n    IV[CTR_OFFSET + 5] \u003d (byte) (l \u003e\u003e\u003e 16);\n    IV[CTR_OFFSET + 6] \u003d (byte) (l \u003e\u003e\u003e 8);\n    IV[CTR_OFFSET + 7] \u003d (byte) (l);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/AesCtrCryptoCodec.java"
    }
  }
}