{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ImageLoaderCurrent.java",
  "functionName": "processDirectoryDiff",
  "functionId": "processDirectoryDiff___in-DataInputStream__v-ImageVisitor__currentINodeName-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/ImageLoaderCurrent.java",
  "functionStartLine": 575,
  "functionEndLine": 617,
  "numCommitsSeen": 35,
  "timeTaken": 1876,
  "changeHistory": [
    "97f58955a6045b373ab73653bf26ab5922b00cf3"
  ],
  "changeHistoryShort": {
    "97f58955a6045b373ab73653bf26ab5922b00cf3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97f58955a6045b373ab73653bf26ab5922b00cf3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6293. Issues with OIV processing PB-based fsimages. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 6:15 PM",
      "commitName": "97f58955a6045b373ab73653bf26ab5922b00cf3",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,43 @@\n+  private void processDirectoryDiff(DataInputStream in, ImageVisitor v,\n+      String currentINodeName) throws IOException {\n+    v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF);\n+    int snapshotId \u003d in.readInt();\n+    v.visit(ImageElement.SNAPSHOT_DIFF_SNAPSHOTID, snapshotId);\n+    v.visit(ImageElement.SNAPSHOT_DIR_DIFF_CHILDREN_SIZE, in.readInt());\n+    \n+    // process snapshotINode\n+    boolean useRoot \u003d in.readBoolean();\n+    if (!useRoot) {\n+      if (in.readBoolean()) {\n+        v.visitEnclosingElement(ImageElement.SNAPSHOT_INODE_DIRECTORY_ATTRIBUTES);\n+        if (NameNodeLayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, imageVersion)) {\n+          processINodeDirectoryAttributes(in, v, currentINodeName);\n+        } else {\n+          processINode(in, v, true, currentINodeName, true);\n+        }\n+        v.leaveEnclosingElement();\n+      }\n+    }\n+    \n+    // process createdList\n+    int createdSize \u003d in.readInt();\n+    v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_CREATEDLIST,\n+        ImageElement.SNAPSHOT_DIR_DIFF_CREATEDLIST_SIZE, createdSize);\n+    for (int i \u003d 0; i \u003c createdSize; i++) {\n+      String createdNode \u003d FSImageSerialization.readString(in);\n+      v.visit(ImageElement.SNAPSHOT_DIR_DIFF_CREATED_INODE, createdNode);\n+    }\n+    v.leaveEnclosingElement();\n+    \n+    // process deletedList\n+    int deletedSize \u003d in.readInt();\n+    v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_DELETEDLIST,\n+        ImageElement.SNAPSHOT_DIR_DIFF_DELETEDLIST_SIZE, deletedSize);\n+    for (int i \u003d 0; i \u003c deletedSize; i++) {\n+      v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_DELETED_INODE);\n+      processINode(in, v, false, currentINodeName, true);\n+      v.leaveEnclosingElement();\n+    }\n+    v.leaveEnclosingElement();\n+    v.leaveEnclosingElement();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void processDirectoryDiff(DataInputStream in, ImageVisitor v,\n      String currentINodeName) throws IOException {\n    v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF);\n    int snapshotId \u003d in.readInt();\n    v.visit(ImageElement.SNAPSHOT_DIFF_SNAPSHOTID, snapshotId);\n    v.visit(ImageElement.SNAPSHOT_DIR_DIFF_CHILDREN_SIZE, in.readInt());\n    \n    // process snapshotINode\n    boolean useRoot \u003d in.readBoolean();\n    if (!useRoot) {\n      if (in.readBoolean()) {\n        v.visitEnclosingElement(ImageElement.SNAPSHOT_INODE_DIRECTORY_ATTRIBUTES);\n        if (NameNodeLayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, imageVersion)) {\n          processINodeDirectoryAttributes(in, v, currentINodeName);\n        } else {\n          processINode(in, v, true, currentINodeName, true);\n        }\n        v.leaveEnclosingElement();\n      }\n    }\n    \n    // process createdList\n    int createdSize \u003d in.readInt();\n    v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_CREATEDLIST,\n        ImageElement.SNAPSHOT_DIR_DIFF_CREATEDLIST_SIZE, createdSize);\n    for (int i \u003d 0; i \u003c createdSize; i++) {\n      String createdNode \u003d FSImageSerialization.readString(in);\n      v.visit(ImageElement.SNAPSHOT_DIR_DIFF_CREATED_INODE, createdNode);\n    }\n    v.leaveEnclosingElement();\n    \n    // process deletedList\n    int deletedSize \u003d in.readInt();\n    v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_DELETEDLIST,\n        ImageElement.SNAPSHOT_DIR_DIFF_DELETEDLIST_SIZE, deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      v.visitEnclosingElement(ImageElement.SNAPSHOT_DIR_DIFF_DELETED_INODE);\n      processINode(in, v, false, currentINodeName, true);\n      v.leaveEnclosingElement();\n    }\n    v.leaveEnclosingElement();\n    v.leaveEnclosingElement();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/ImageLoaderCurrent.java"
    }
  }
}