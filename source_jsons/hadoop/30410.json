{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationHistoryClientService.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryClientService.java",
  "functionStartLine": 78,
  "functionEndLine": 115,
  "numCommitsSeen": 13,
  "timeTaken": 2121,
  "changeHistory": [
    "95bfd087dc89e57a93340604cc8b96042fa1a05a",
    "8f1454cc6d46afa057770a39aecc151c5f048b57",
    "88e329fdfb27c11f1964c0345188bcf328c95fd6",
    "e52f67e3897a67a0b6d29e557a31cfa881738821",
    "e167e585e9dd5c86ae763c257d62fdcc83260200",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": "Ybodychange",
    "8f1454cc6d46afa057770a39aecc151c5f048b57": "Ybodychange",
    "88e329fdfb27c11f1964c0345188bcf328c95fd6": "Ybodychange",
    "e52f67e3897a67a0b6d29e557a31cfa881738821": "Ybodychange",
    "e167e585e9dd5c86ae763c257d62fdcc83260200": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
      "commitDate": "05/03/15 9:20 PM",
      "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/02/15 11:48 PM",
      "commitNameOld": "18b2507edaac991e3ed68d2f27eb96f6882137b9",
      "commitAuthorOld": "Arun C. Murthy",
      "daysBetweenCommits": 27.9,
      "commitsBetweenForRepo": 279,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     InetSocketAddress address \u003d conf.getSocketAddr(\n         YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n         YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n \n     Preconditions.checkArgument(conf.getInt(\n         YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT) \u003e 0,\n         \"%s property value should be greater than zero\",\n         YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT);\n \n     server \u003d\n-        rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n+        rpc.getServer(ApplicationHistoryProtocol.class, this,\n           address, conf, null, conf.getInt(\n             YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n             YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\n       refreshServiceAcls(conf, new TimelinePolicyProvider());\n     }\n \n     server.start();\n     this.bindAddress \u003d\n         conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n                                YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n                                YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n                                server.getListenerAddress());\n     LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n         + this.bindAddress);\n \n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    InetSocketAddress address \u003d conf.getSocketAddr(\n        YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n        YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n\n    Preconditions.checkArgument(conf.getInt(\n        YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT) \u003e 0,\n        \"%s property value should be greater than zero\",\n        YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT);\n\n    server \u003d\n        rpc.getServer(ApplicationHistoryProtocol.class, this,\n          address, conf, null, conf.getInt(\n            YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n\n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\n      refreshServiceAcls(conf, new TimelinePolicyProvider());\n    }\n\n    server.start();\n    this.bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n                               YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n                               YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n                               server.getListenerAddress());\n    LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n        + this.bindAddress);\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryClientService.java",
      "extendedDetails": {}
    },
    "8f1454cc6d46afa057770a39aecc151c5f048b57": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2165. Added the sanity check for the numeric configuration values of the timeline service. Contributed by Vasanth kumar RJ.\n",
      "commitDate": "26/11/14 12:09 PM",
      "commitName": "8f1454cc6d46afa057770a39aecc151c5f048b57",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "15/09/14 1:13 PM",
      "commitNameOld": "88e329fdfb27c11f1964c0345188bcf328c95fd6",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 72.0,
      "commitsBetweenForRepo": 710,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,38 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     InetSocketAddress address \u003d conf.getSocketAddr(\n         YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n         YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n \n+    Preconditions.checkArgument(conf.getInt(\n+        YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT) \u003e 0,\n+        \"%s property value should be greater than zero\",\n+        YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT);\n+\n     server \u003d\n         rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n           address, conf, null, conf.getInt(\n             YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n             YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\n       refreshServiceAcls(conf, new TimelinePolicyProvider());\n     }\n \n     server.start();\n     this.bindAddress \u003d\n         conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n                                YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n                                YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n                                server.getListenerAddress());\n     LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n         + this.bindAddress);\n \n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    InetSocketAddress address \u003d conf.getSocketAddr(\n        YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n        YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n\n    Preconditions.checkArgument(conf.getInt(\n        YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT) \u003e 0,\n        \"%s property value should be greater than zero\",\n        YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT);\n\n    server \u003d\n        rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n          address, conf, null, conf.getInt(\n            YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n\n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\n      refreshServiceAcls(conf, new TimelinePolicyProvider());\n    }\n\n    server.start();\n    this.bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n                               YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n                               YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n                               server.getListenerAddress());\n    LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n        + this.bindAddress);\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryClientService.java",
      "extendedDetails": {}
    },
    "88e329fdfb27c11f1964c0345188bcf328c95fd6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2529. Generic history service RPC interface doesn\u0027t work when service authorization is enabled. Contributed by Zhijie Shen\n",
      "commitDate": "15/09/14 1:13 PM",
      "commitName": "88e329fdfb27c11f1964c0345188bcf328c95fd6",
      "commitAuthor": "Jian He",
      "commitDateOld": "31/07/14 1:06 PM",
      "commitNameOld": "e52f67e3897a67a0b6d29e557a31cfa881738821",
      "commitAuthorOld": "Xuan Gong",
      "daysBetweenCommits": 46.01,
      "commitsBetweenForRepo": 383,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,32 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     InetSocketAddress address \u003d conf.getSocketAddr(\n         YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n         YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n \n     server \u003d\n         rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n           address, conf, null, conf.getInt(\n             YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n             YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n \n+    // Enable service authorization?\n+    if (conf.getBoolean(\n+        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\n+      refreshServiceAcls(conf, new TimelinePolicyProvider());\n+    }\n+\n     server.start();\n     this.bindAddress \u003d\n         conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n                                YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n                                YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n                                server.getListenerAddress());\n     LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n         + this.bindAddress);\n \n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    InetSocketAddress address \u003d conf.getSocketAddr(\n        YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n        YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n\n    server \u003d\n        rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n          address, conf, null, conf.getInt(\n            YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n\n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, false)) {\n      refreshServiceAcls(conf, new TimelinePolicyProvider());\n    }\n\n    server.start();\n    this.bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n                               YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n                               YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n                               server.getListenerAddress());\n    LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n        + this.bindAddress);\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryClientService.java",
      "extendedDetails": {}
    },
    "e52f67e3897a67a0b6d29e557a31cfa881738821": {
      "type": "Ybodychange",
      "commitMessage": "    YARN-1994. Expose YARN/MR endpoints on multiple interfaces. Contributed by Craig Welch, Milan Potocnik,and Arpit Agarwal\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1614981 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 1:06 PM",
      "commitName": "e52f67e3897a67a0b6d29e557a31cfa881738821",
      "commitAuthor": "Xuan Gong",
      "commitDateOld": "22/02/14 6:04 PM",
      "commitNameOld": "e167e585e9dd5c86ae763c257d62fdcc83260200",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 158.75,
      "commitsBetweenForRepo": 1064,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n-    InetSocketAddress address \u003d\n-        conf.getSocketAddr(YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n-          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n-          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n+    InetSocketAddress address \u003d conf.getSocketAddr(\n+        YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n+        YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n \n     server \u003d\n         rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n           address, conf, null, conf.getInt(\n             YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n             YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n \n     server.start();\n     this.bindAddress \u003d\n-        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n-          server.getListenerAddress());\n+        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n+                               YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n+                               YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n+                               server.getListenerAddress());\n     LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n         + this.bindAddress);\n \n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    InetSocketAddress address \u003d conf.getSocketAddr(\n        YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n        YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n\n    server \u003d\n        rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n          address, conf, null, conf.getInt(\n            YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n\n    server.start();\n    this.bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_BIND_HOST,\n                               YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n                               YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n                               server.getListenerAddress());\n    LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n        + this.bindAddress);\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryClientService.java",
      "extendedDetails": {}
    },
    "e167e585e9dd5c86ae763c257d62fdcc83260200": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1749. Updated application-history related configs to reflect the latest reality and to be consistently named. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570948 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 6:04 PM",
      "commitName": "e167e585e9dd5c86ae763c257d62fdcc83260200",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/01/14 8:51 PM",
      "commitNameOld": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 27.88,
      "commitsBetweenForRepo": 246,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     InetSocketAddress address \u003d\n-        conf.getSocketAddr(YarnConfiguration.AHS_ADDRESS,\n-          YarnConfiguration.DEFAULT_AHS_ADDRESS,\n-          YarnConfiguration.DEFAULT_AHS_PORT);\n+        conf.getSocketAddr(YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n \n     server \u003d\n         rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n           address, conf, null, conf.getInt(\n-            YarnConfiguration.AHS_CLIENT_THREAD_COUNT,\n-            YarnConfiguration.DEFAULT_AHS_CLIENT_THREAD_COUNT));\n+            YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n+            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n \n     server.start();\n     this.bindAddress \u003d\n-        conf.updateConnectAddr(YarnConfiguration.AHS_ADDRESS,\n+        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n           server.getListenerAddress());\n     LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n         + this.bindAddress);\n \n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    InetSocketAddress address \u003d\n        conf.getSocketAddr(YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ADDRESS,\n          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_PORT);\n\n    server \u003d\n        rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n          address, conf, null, conf.getInt(\n            YarnConfiguration.TIMELINE_SERVICE_HANDLER_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_TIMELINE_SERVICE_CLIENT_THREAD_COUNT));\n\n    server.start();\n    this.bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.TIMELINE_SERVICE_ADDRESS,\n          server.getListenerAddress());\n    LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n        + this.bindAddress);\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryClientService.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  protected void serviceStart() throws Exception {\n+    Configuration conf \u003d getConfig();\n+    YarnRPC rpc \u003d YarnRPC.create(conf);\n+    InetSocketAddress address \u003d\n+        conf.getSocketAddr(YarnConfiguration.AHS_ADDRESS,\n+          YarnConfiguration.DEFAULT_AHS_ADDRESS,\n+          YarnConfiguration.DEFAULT_AHS_PORT);\n+\n+    server \u003d\n+        rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n+          address, conf, null, conf.getInt(\n+            YarnConfiguration.AHS_CLIENT_THREAD_COUNT,\n+            YarnConfiguration.DEFAULT_AHS_CLIENT_THREAD_COUNT));\n+\n+    server.start();\n+    this.bindAddress \u003d\n+        conf.updateConnectAddr(YarnConfiguration.AHS_ADDRESS,\n+          server.getListenerAddress());\n+    LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n+        + this.bindAddress);\n+\n+    super.serviceStart();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    InetSocketAddress address \u003d\n        conf.getSocketAddr(YarnConfiguration.AHS_ADDRESS,\n          YarnConfiguration.DEFAULT_AHS_ADDRESS,\n          YarnConfiguration.DEFAULT_AHS_PORT);\n\n    server \u003d\n        rpc.getServer(ApplicationHistoryProtocol.class, protocolHandler,\n          address, conf, null, conf.getInt(\n            YarnConfiguration.AHS_CLIENT_THREAD_COUNT,\n            YarnConfiguration.DEFAULT_AHS_CLIENT_THREAD_COUNT));\n\n    server.start();\n    this.bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.AHS_ADDRESS,\n          server.getListenerAddress());\n    LOG.info(\"Instantiated ApplicationHistoryClientService at \"\n        + this.bindAddress);\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryClientService.java"
    }
  }
}