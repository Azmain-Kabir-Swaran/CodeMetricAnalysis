{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLogOp.java",
  "functionName": "delegationTokenFromXml",
  "functionId": "delegationTokenFromXml___st-Stanza",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
  "functionStartLine": 5408,
  "functionEndLine": 5431,
  "numCommitsSeen": 100,
  "timeTaken": 4635,
  "changeHistory": [
    "14556cc5d8fee8f8a846e4f65572828553be386c",
    "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5"
  ],
  "changeHistoryShort": {
    "14556cc5d8fee8f8a846e4f65572828553be386c": "Ybodychange",
    "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "14556cc5d8fee8f8a846e4f65572828553be386c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6155. Fix Boxing/unboxing to parse a primitive findbugs warnings. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582068 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/14 2:27 PM",
      "commitName": "14556cc5d8fee8f8a846e4f65572828553be386c",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/03/14 10:51 PM",
      "commitNameOld": "3a61d25457606b93f7e99a48fe8f66984f4084b0",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.65,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public static DelegationTokenIdentifier delegationTokenFromXml(Stanza st)\n       throws InvalidXmlException {\n     String kind \u003d st.getValue(\"KIND\");\n     if (!kind.equals(DelegationTokenIdentifier.\n         HDFS_DELEGATION_KIND.toString())) {\n       throw new InvalidXmlException(\"can\u0027t understand \" +\n         \"DelegationTokenIdentifier KIND \" + kind);\n     }\n-    int seqNum \u003d Integer.valueOf(st.getValue(\"SEQUENCE_NUMBER\"));\n+    int seqNum \u003d Integer.parseInt(st.getValue(\"SEQUENCE_NUMBER\"));\n     String owner \u003d st.getValue(\"OWNER\");\n     String renewer \u003d st.getValue(\"RENEWER\");\n     String realuser \u003d st.getValue(\"REALUSER\");\n-    long issueDate \u003d Long.valueOf(st.getValue(\"ISSUE_DATE\"));\n-    long maxDate \u003d Long.valueOf(st.getValue(\"MAX_DATE\"));\n-    int masterKeyId \u003d Integer.valueOf(st.getValue(\"MASTER_KEY_ID\"));\n+    long issueDate \u003d Long.parseLong(st.getValue(\"ISSUE_DATE\"));\n+    long maxDate \u003d Long.parseLong(st.getValue(\"MAX_DATE\"));\n+    int masterKeyId \u003d Integer.parseInt(st.getValue(\"MASTER_KEY_ID\"));\n     DelegationTokenIdentifier token \u003d\n         new DelegationTokenIdentifier(new Text(owner),\n             new Text(renewer), new Text(realuser));\n     token.setSequenceNumber(seqNum);\n     token.setIssueDate(issueDate);\n     token.setMaxDate(maxDate);\n     token.setMasterKeyId(masterKeyId);\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static DelegationTokenIdentifier delegationTokenFromXml(Stanza st)\n      throws InvalidXmlException {\n    String kind \u003d st.getValue(\"KIND\");\n    if (!kind.equals(DelegationTokenIdentifier.\n        HDFS_DELEGATION_KIND.toString())) {\n      throw new InvalidXmlException(\"can\u0027t understand \" +\n        \"DelegationTokenIdentifier KIND \" + kind);\n    }\n    int seqNum \u003d Integer.parseInt(st.getValue(\"SEQUENCE_NUMBER\"));\n    String owner \u003d st.getValue(\"OWNER\");\n    String renewer \u003d st.getValue(\"RENEWER\");\n    String realuser \u003d st.getValue(\"REALUSER\");\n    long issueDate \u003d Long.parseLong(st.getValue(\"ISSUE_DATE\"));\n    long maxDate \u003d Long.parseLong(st.getValue(\"MAX_DATE\"));\n    int masterKeyId \u003d Integer.parseInt(st.getValue(\"MASTER_KEY_ID\"));\n    DelegationTokenIdentifier token \u003d\n        new DelegationTokenIdentifier(new Text(owner),\n            new Text(renewer), new Text(realuser));\n    token.setSequenceNumber(seqNum);\n    token.setIssueDate(issueDate);\n    token.setMaxDate(maxDate);\n    token.setMasterKeyId(masterKeyId);\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java",
      "extendedDetails": {}
    },
    "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3050. rework OEV to share more code with the NameNode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/04/12 5:02 PM",
      "commitName": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,24 @@\n+  public static DelegationTokenIdentifier delegationTokenFromXml(Stanza st)\n+      throws InvalidXmlException {\n+    String kind \u003d st.getValue(\"KIND\");\n+    if (!kind.equals(DelegationTokenIdentifier.\n+        HDFS_DELEGATION_KIND.toString())) {\n+      throw new InvalidXmlException(\"can\u0027t understand \" +\n+        \"DelegationTokenIdentifier KIND \" + kind);\n+    }\n+    int seqNum \u003d Integer.valueOf(st.getValue(\"SEQUENCE_NUMBER\"));\n+    String owner \u003d st.getValue(\"OWNER\");\n+    String renewer \u003d st.getValue(\"RENEWER\");\n+    String realuser \u003d st.getValue(\"REALUSER\");\n+    long issueDate \u003d Long.valueOf(st.getValue(\"ISSUE_DATE\"));\n+    long maxDate \u003d Long.valueOf(st.getValue(\"MAX_DATE\"));\n+    int masterKeyId \u003d Integer.valueOf(st.getValue(\"MASTER_KEY_ID\"));\n+    DelegationTokenIdentifier token \u003d\n+        new DelegationTokenIdentifier(new Text(owner),\n+            new Text(renewer), new Text(realuser));\n+    token.setSequenceNumber(seqNum);\n+    token.setIssueDate(issueDate);\n+    token.setMaxDate(maxDate);\n+    token.setMasterKeyId(masterKeyId);\n+    return token;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static DelegationTokenIdentifier delegationTokenFromXml(Stanza st)\n      throws InvalidXmlException {\n    String kind \u003d st.getValue(\"KIND\");\n    if (!kind.equals(DelegationTokenIdentifier.\n        HDFS_DELEGATION_KIND.toString())) {\n      throw new InvalidXmlException(\"can\u0027t understand \" +\n        \"DelegationTokenIdentifier KIND \" + kind);\n    }\n    int seqNum \u003d Integer.valueOf(st.getValue(\"SEQUENCE_NUMBER\"));\n    String owner \u003d st.getValue(\"OWNER\");\n    String renewer \u003d st.getValue(\"RENEWER\");\n    String realuser \u003d st.getValue(\"REALUSER\");\n    long issueDate \u003d Long.valueOf(st.getValue(\"ISSUE_DATE\"));\n    long maxDate \u003d Long.valueOf(st.getValue(\"MAX_DATE\"));\n    int masterKeyId \u003d Integer.valueOf(st.getValue(\"MASTER_KEY_ID\"));\n    DelegationTokenIdentifier token \u003d\n        new DelegationTokenIdentifier(new Text(owner),\n            new Text(renewer), new Text(realuser));\n    token.setSequenceNumber(seqNum);\n    token.setIssueDate(issueDate);\n    token.setMaxDate(maxDate);\n    token.setMasterKeyId(masterKeyId);\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java"
    }
  }
}