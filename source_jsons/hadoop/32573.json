{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMWebServices.java",
  "functionName": "getNodeContainer",
  "functionId": "getNodeContainer___hsr-HttpServletRequest(annotations-@javax.ws.rs.core.Context)__id-String(annotations-@PathParam(\"containerid\"))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
  "functionStartLine": 255,
  "functionEndLine": 272,
  "numCommitsSeen": 37,
  "timeTaken": 3472,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "34ef1a092bcab369bb845481efffb8c47adef53a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef",
    "f025652fdafae4d385d4174f48cb4246d07caa3b",
    "0ea8570be578be60e2f32849900a1c50506d78d3"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "34ef1a092bcab369bb845481efffb8c47adef53a": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": "Ybodychange",
    "f025652fdafae4d385d4174f48cb4246d07caa3b": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/06/16 12:30 PM",
      "commitNameOld": "9378d9428f127eff7acd6c13544016cdbf2d65fb",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.11,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public ContainerInfo getNodeContainer(@javax.ws.rs.core.Context\n       HttpServletRequest hsr, @PathParam(\"containerid\") String id) {\n     ContainerId containerId \u003d null;\n     init();\n     try {\n-      containerId \u003d ConverterUtils.toContainerId(id);\n+      containerId \u003d ContainerId.fromString(id);\n     } catch (Exception e) {\n       throw new BadRequestException(\"invalid container id, \" + id);\n     }\n \n     Container container \u003d nmContext.getContainers().get(containerId);\n     if (container \u003d\u003d null) {\n       throw new NotFoundException(\"container with id, \" + id + \", not found\");\n     }\n     return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n         .toString(), webapp.name(), hsr.getRemoteUser());\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerInfo getNodeContainer(@javax.ws.rs.core.Context\n      HttpServletRequest hsr, @PathParam(\"containerid\") String id) {\n    ContainerId containerId \u003d null;\n    init();\n    try {\n      containerId \u003d ContainerId.fromString(id);\n    } catch (Exception e) {\n      throw new BadRequestException(\"invalid container id, \" + id);\n    }\n\n    Container container \u003d nmContext.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n    }\n    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n        .toString(), webapp.name(), hsr.getRemoteUser());\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "34ef1a092bcab369bb845481efffb8c47adef53a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4149. yarn logs -am should provide an option to fetch all the log\nfiles. Contributed by Varun Vasudev\n",
      "commitDate": "15/09/15 2:36 PM",
      "commitName": "34ef1a092bcab369bb845481efffb8c47adef53a",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4149. yarn logs -am should provide an option to fetch all the log\nfiles. Contributed by Varun Vasudev\n",
          "commitDate": "15/09/15 2:36 PM",
          "commitName": "34ef1a092bcab369bb845481efffb8c47adef53a",
          "commitAuthor": "Xuan",
          "commitDateOld": "01/09/13 5:09 PM",
          "commitNameOld": "a759abcd898224c3481c55aa7e424bc286f60b15",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 743.89,
          "commitsBetweenForRepo": 5644,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n+  public ContainerInfo getNodeContainer(@javax.ws.rs.core.Context\n+      HttpServletRequest hsr, @PathParam(\"containerid\") String id) {\n     ContainerId containerId \u003d null;\n     init();\n     try {\n       containerId \u003d ConverterUtils.toContainerId(id);\n     } catch (Exception e) {\n       throw new BadRequestException(\"invalid container id, \" + id);\n     }\n \n     Container container \u003d nmContext.getContainers().get(containerId);\n     if (container \u003d\u003d null) {\n       throw new NotFoundException(\"container with id, \" + id + \", not found\");\n     }\n     return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n-        .toString(), webapp.name());\n+        .toString(), webapp.name(), hsr.getRemoteUser());\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ContainerInfo getNodeContainer(@javax.ws.rs.core.Context\n      HttpServletRequest hsr, @PathParam(\"containerid\") String id) {\n    ContainerId containerId \u003d null;\n    init();\n    try {\n      containerId \u003d ConverterUtils.toContainerId(id);\n    } catch (Exception e) {\n      throw new BadRequestException(\"invalid container id, \" + id);\n    }\n\n    Container container \u003d nmContext.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n    }\n    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n        .toString(), webapp.name(), hsr.getRemoteUser());\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
          "extendedDetails": {
            "oldValue": "[id-String(annotations-@PathParam(\"containerid\"))]",
            "newValue": "[hsr-HttpServletRequest(annotations-@javax.ws.rs.core.Context), id-String(annotations-@PathParam(\"containerid\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4149. yarn logs -am should provide an option to fetch all the log\nfiles. Contributed by Varun Vasudev\n",
          "commitDate": "15/09/15 2:36 PM",
          "commitName": "34ef1a092bcab369bb845481efffb8c47adef53a",
          "commitAuthor": "Xuan",
          "commitDateOld": "01/09/13 5:09 PM",
          "commitNameOld": "a759abcd898224c3481c55aa7e424bc286f60b15",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 743.89,
          "commitsBetweenForRepo": 5644,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n+  public ContainerInfo getNodeContainer(@javax.ws.rs.core.Context\n+      HttpServletRequest hsr, @PathParam(\"containerid\") String id) {\n     ContainerId containerId \u003d null;\n     init();\n     try {\n       containerId \u003d ConverterUtils.toContainerId(id);\n     } catch (Exception e) {\n       throw new BadRequestException(\"invalid container id, \" + id);\n     }\n \n     Container container \u003d nmContext.getContainers().get(containerId);\n     if (container \u003d\u003d null) {\n       throw new NotFoundException(\"container with id, \" + id + \", not found\");\n     }\n     return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n-        .toString(), webapp.name());\n+        .toString(), webapp.name(), hsr.getRemoteUser());\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ContainerInfo getNodeContainer(@javax.ws.rs.core.Context\n      HttpServletRequest hsr, @PathParam(\"containerid\") String id) {\n    ContainerId containerId \u003d null;\n    init();\n    try {\n      containerId \u003d ConverterUtils.toContainerId(id);\n    } catch (Exception e) {\n      throw new BadRequestException(\"invalid container id, \" + id);\n    }\n\n    Container container \u003d nmContext.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n    }\n    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n        .toString(), webapp.name(), hsr.getRemoteUser());\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n    ContainerId containerId \u003d null;\n    init();\n    try {\n      containerId \u003d ConverterUtils.toContainerId(id);\n    } catch (Exception e) {\n      throw new BadRequestException(\"invalid container id, \" + id);\n    }\n\n    Container container \u003d nmContext.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n    }\n    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n        .toString(), webapp.name());\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java"
      }
    },
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3613. web service calls header contains 2 content types (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/12 2:13 PM",
      "commitName": "e7583d816a69677bbaa4280deb58ea73dbc42cef",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "29/12/11 12:06 AM",
      "commitNameOld": "f025652fdafae4d385d4174f48cb4246d07caa3b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 118.55,
      "commitsBetweenForRepo": 884,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n     ContainerId containerId \u003d null;\n+    init();\n     try {\n       containerId \u003d ConverterUtils.toContainerId(id);\n     } catch (Exception e) {\n       throw new BadRequestException(\"invalid container id, \" + id);\n     }\n \n     Container container \u003d nmContext.getContainers().get(containerId);\n     if (container \u003d\u003d null) {\n       throw new NotFoundException(\"container with id, \" + id + \", not found\");\n     }\n     return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n         .toString(), webapp.name());\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n    ContainerId containerId \u003d null;\n    init();\n    try {\n      containerId \u003d ConverterUtils.toContainerId(id);\n    } catch (Exception e) {\n      throw new BadRequestException(\"invalid container id, \" + id);\n    }\n\n    Container container \u003d nmContext.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n    }\n    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n        .toString(), webapp.name());\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "f025652fdafae4d385d4174f48cb4246d07caa3b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3547. Added a bunch of unit tests for the the RM/NM webservices. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1225463 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/12/11 12:06 AM",
      "commitName": "f025652fdafae4d385d4174f48cb4246d07caa3b",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 15.38,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n     ContainerId containerId \u003d null;\n-    containerId \u003d ConverterUtils.toContainerId(id);\n-    if (containerId \u003d\u003d null) {\n-      throw new NotFoundException(\"container with id, \" + id\n-          + \", is empty or null\");\n+    try {\n+      containerId \u003d ConverterUtils.toContainerId(id);\n+    } catch (Exception e) {\n+      throw new BadRequestException(\"invalid container id, \" + id);\n     }\n+\n     Container container \u003d nmContext.getContainers().get(containerId);\n     if (container \u003d\u003d null) {\n       throw new NotFoundException(\"container with id, \" + id + \", not found\");\n     }\n     return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n         .toString(), webapp.name());\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n    ContainerId containerId \u003d null;\n    try {\n      containerId \u003d ConverterUtils.toContainerId(id);\n    } catch (Exception e) {\n      throw new BadRequestException(\"invalid container id, \" + id);\n    }\n\n    Container container \u003d nmContext.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n    }\n    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n        .toString(), webapp.name());\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+  public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n+    ContainerId containerId \u003d null;\n+    containerId \u003d ConverterUtils.toContainerId(id);\n+    if (containerId \u003d\u003d null) {\n+      throw new NotFoundException(\"container with id, \" + id\n+          + \", is empty or null\");\n+    }\n+    Container container \u003d nmContext.getContainers().get(containerId);\n+    if (container \u003d\u003d null) {\n+      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n+    }\n+    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n+        .toString(), webapp.name());\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerInfo getNodeContainer(@PathParam(\"containerid\") String id) {\n    ContainerId containerId \u003d null;\n    containerId \u003d ConverterUtils.toContainerId(id);\n    if (containerId \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id\n          + \", is empty or null\");\n    }\n    Container container \u003d nmContext.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new NotFoundException(\"container with id, \" + id + \", not found\");\n    }\n    return new ContainerInfo(this.nmContext, container, uriInfo.getBaseUri()\n        .toString(), webapp.name());\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java"
    }
  }
}