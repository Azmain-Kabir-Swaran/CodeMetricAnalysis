{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskBalancer.java",
  "functionName": "computeDelay",
  "functionId": "computeDelay___bytesCopied-long__timeUsed-long__item-DiskBalancerWorkItem",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
  "functionStartLine": 865,
  "functionEndLine": 882,
  "numCommitsSeen": 32,
  "timeTaken": 1794,
  "changeHistory": [
    "0e79a865822eed05f3f8433976b2cfef8f427f25",
    "1594b472bb9df7537dbc001411c99058cc11ba41"
  ],
  "changeHistoryShort": {
    "0e79a865822eed05f3f8433976b2cfef8f427f25": "Ymultichange(Ymodifierchange,Ybodychange)",
    "1594b472bb9df7537dbc001411c99058cc11ba41": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0e79a865822eed05f3f8433976b2cfef8f427f25": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-14202. dfs.disk.balancer.max.disk.throughputInMBperSec property is not working as per set value. Contributed by Ranith Sardar.\n",
      "commitDate": "04/02/19 11:59 AM",
      "commitName": "0e79a865822eed05f3f8433976b2cfef8f427f25",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-14202. dfs.disk.balancer.max.disk.throughputInMBperSec property is not working as per set value. Contributed by Ranith Sardar.\n",
          "commitDate": "04/02/19 11:59 AM",
          "commitName": "0e79a865822eed05f3f8433976b2cfef8f427f25",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "02/07/18 9:43 PM",
          "commitNameOld": "59a3038bc3d7913dca3de971026bc32cef536a2d",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 216.64,
          "commitsBetweenForRepo": 1679,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,18 @@\n-    private long computeDelay(long bytesCopied, long timeUsed,\n+    public long computeDelay(long bytesCopied, long timeUsed,\n                               DiskBalancerWorkItem item) {\n \n       // we had an overflow, ignore this reading and continue.\n       if (timeUsed \u003d\u003d 0) {\n         return 0;\n       }\n       final int megaByte \u003d 1024 * 1024;\n+      if (bytesCopied \u003c megaByte) {\n+        return 0;\n+      }\n       long bytesInMB \u003d bytesCopied / megaByte;\n-      long lastThroughput \u003d bytesInMB / SECONDS.convert(timeUsed,\n-          TimeUnit.MILLISECONDS);\n-      long delay \u003d (bytesInMB / getDiskBandwidth(item)) - lastThroughput;\n-      return (delay \u003c\u003d 0) ? 0 : MILLISECONDS.convert(delay, TimeUnit.SECONDS);\n+\n+      // converting disk bandwidth in MB/millisec\n+      float bandwidth \u003d getDiskBandwidth(item) / 1000f;\n+      float delay \u003d ((long) (bytesInMB / bandwidth) - timeUsed);\n+      return (delay \u003c\u003d 0) ? 0 : (long) delay;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long computeDelay(long bytesCopied, long timeUsed,\n                              DiskBalancerWorkItem item) {\n\n      // we had an overflow, ignore this reading and continue.\n      if (timeUsed \u003d\u003d 0) {\n        return 0;\n      }\n      final int megaByte \u003d 1024 * 1024;\n      if (bytesCopied \u003c megaByte) {\n        return 0;\n      }\n      long bytesInMB \u003d bytesCopied / megaByte;\n\n      // converting disk bandwidth in MB/millisec\n      float bandwidth \u003d getDiskBandwidth(item) / 1000f;\n      float delay \u003d ((long) (bytesInMB / bandwidth) - timeUsed);\n      return (delay \u003c\u003d 0) ? 0 : (long) delay;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14202. dfs.disk.balancer.max.disk.throughputInMBperSec property is not working as per set value. Contributed by Ranith Sardar.\n",
          "commitDate": "04/02/19 11:59 AM",
          "commitName": "0e79a865822eed05f3f8433976b2cfef8f427f25",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "02/07/18 9:43 PM",
          "commitNameOld": "59a3038bc3d7913dca3de971026bc32cef536a2d",
          "commitAuthorOld": "Bharat Viswanadham",
          "daysBetweenCommits": 216.64,
          "commitsBetweenForRepo": 1679,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,18 @@\n-    private long computeDelay(long bytesCopied, long timeUsed,\n+    public long computeDelay(long bytesCopied, long timeUsed,\n                               DiskBalancerWorkItem item) {\n \n       // we had an overflow, ignore this reading and continue.\n       if (timeUsed \u003d\u003d 0) {\n         return 0;\n       }\n       final int megaByte \u003d 1024 * 1024;\n+      if (bytesCopied \u003c megaByte) {\n+        return 0;\n+      }\n       long bytesInMB \u003d bytesCopied / megaByte;\n-      long lastThroughput \u003d bytesInMB / SECONDS.convert(timeUsed,\n-          TimeUnit.MILLISECONDS);\n-      long delay \u003d (bytesInMB / getDiskBandwidth(item)) - lastThroughput;\n-      return (delay \u003c\u003d 0) ? 0 : MILLISECONDS.convert(delay, TimeUnit.SECONDS);\n+\n+      // converting disk bandwidth in MB/millisec\n+      float bandwidth \u003d getDiskBandwidth(item) / 1000f;\n+      float delay \u003d ((long) (bytesInMB / bandwidth) - timeUsed);\n+      return (delay \u003c\u003d 0) ? 0 : (long) delay;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long computeDelay(long bytesCopied, long timeUsed,\n                              DiskBalancerWorkItem item) {\n\n      // we had an overflow, ignore this reading and continue.\n      if (timeUsed \u003d\u003d 0) {\n        return 0;\n      }\n      final int megaByte \u003d 1024 * 1024;\n      if (bytesCopied \u003c megaByte) {\n        return 0;\n      }\n      long bytesInMB \u003d bytesCopied / megaByte;\n\n      // converting disk bandwidth in MB/millisec\n      float bandwidth \u003d getDiskBandwidth(item) / 1000f;\n      float delay \u003d ((long) (bytesInMB / bandwidth) - timeUsed);\n      return (delay \u003c\u003d 0) ? 0 : (long) delay;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1594b472bb9df7537dbc001411c99058cc11ba41": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9543. DiskBalancer: Add Data mover. Contributed by Anu Engineer.\n",
      "commitDate": "23/06/16 6:20 PM",
      "commitName": "1594b472bb9df7537dbc001411c99058cc11ba41",
      "commitAuthor": "Anu Engineer",
      "diff": "@@ -0,0 +1,14 @@\n+    private long computeDelay(long bytesCopied, long timeUsed,\n+                              DiskBalancerWorkItem item) {\n+\n+      // we had an overflow, ignore this reading and continue.\n+      if (timeUsed \u003d\u003d 0) {\n+        return 0;\n+      }\n+      final int megaByte \u003d 1024 * 1024;\n+      long bytesInMB \u003d bytesCopied / megaByte;\n+      long lastThroughput \u003d bytesInMB / SECONDS.convert(timeUsed,\n+          TimeUnit.MILLISECONDS);\n+      long delay \u003d (bytesInMB / getDiskBandwidth(item)) - lastThroughput;\n+      return (delay \u003c\u003d 0) ? 0 : MILLISECONDS.convert(delay, TimeUnit.SECONDS);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private long computeDelay(long bytesCopied, long timeUsed,\n                              DiskBalancerWorkItem item) {\n\n      // we had an overflow, ignore this reading and continue.\n      if (timeUsed \u003d\u003d 0) {\n        return 0;\n      }\n      final int megaByte \u003d 1024 * 1024;\n      long bytesInMB \u003d bytesCopied / megaByte;\n      long lastThroughput \u003d bytesInMB / SECONDS.convert(timeUsed,\n          TimeUnit.MILLISECONDS);\n      long delay \u003d (bytesInMB / getDiskBandwidth(item)) - lastThroughput;\n      return (delay \u003c\u003d 0) ? 0 : MILLISECONDS.convert(delay, TimeUnit.SECONDS);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java"
    }
  }
}