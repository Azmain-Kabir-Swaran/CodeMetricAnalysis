{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TrashPolicyDefault.java",
  "functionName": "createCheckpoint",
  "functionId": "createCheckpoint",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
  "functionStartLine": 200,
  "functionEndLine": 202,
  "numCommitsSeen": 31,
  "timeTaken": 1321,
  "changeHistory": [
    "af78767870b8296886c03f8be24cf13a4e2bd4b0",
    "3c2101ae4a65af4b68a08651c27966490e8fbef0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "184ff33de5598b04bf968ea3b113b175a4225b82"
  ],
  "changeHistoryShort": {
    "af78767870b8296886c03f8be24cf13a4e2bd4b0": "Ybodychange",
    "3c2101ae4a65af4b68a08651c27966490e8fbef0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "184ff33de5598b04bf968ea3b113b175a4225b82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "af78767870b8296886c03f8be24cf13a4e2bd4b0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12352. Delay in checkpointing Trash can leave trash for 2 intervals before deleting. Contributed by Casey Brotherton.\n",
      "commitDate": "24/08/15 10:51 PM",
      "commitName": "af78767870b8296886c03f8be24cf13a4e2bd4b0",
      "commitAuthor": "Harsh J",
      "commitDateOld": "29/05/15 4:21 AM",
      "commitNameOld": "7366e4256395ed7550702275d0d9f2674bd43d6c",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 87.77,
      "commitsBetweenForRepo": 530,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,3 @@\n   public void createCheckpoint() throws IOException {\n-    if (!fs.exists(current))                     // no trash, no checkpoint\n-      return;\n-\n-    Path checkpointBase;\n-    synchronized (CHECKPOINT) {\n-      checkpointBase \u003d new Path(trash, CHECKPOINT.format(new Date()));\n-    }\n-    Path checkpoint \u003d checkpointBase;\n-\n-    int attempt \u003d 0;\n-    while (true) {\n-      try {\n-        fs.rename(current, checkpoint, Rename.NONE);\n-        break;\n-      } catch (FileAlreadyExistsException e) {\n-        if (++attempt \u003e 1000) {\n-          throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n-        }\n-        checkpoint \u003d checkpointBase.suffix(\"-\" + attempt);\n-      }\n-    }\n-\n-    LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n+    createCheckpoint(new Date());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void createCheckpoint() throws IOException {\n    createCheckpoint(new Date());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {}
    },
    "3c2101ae4a65af4b68a08651c27966490e8fbef0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8110. Fix trash checkpoint collisions (Jason Lowe via daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1356897 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/12 12:59 PM",
      "commitName": "3c2101ae4a65af4b68a08651c27966490e8fbef0",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 313.82,
      "commitsBetweenForRepo": 2128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,25 @@\n   public void createCheckpoint() throws IOException {\n     if (!fs.exists(current))                     // no trash, no checkpoint\n       return;\n \n-    Path checkpoint;\n+    Path checkpointBase;\n     synchronized (CHECKPOINT) {\n-      checkpoint \u003d new Path(trash, CHECKPOINT.format(new Date()));\n+      checkpointBase \u003d new Path(trash, CHECKPOINT.format(new Date()));\n+    }\n+    Path checkpoint \u003d checkpointBase;\n+\n+    int attempt \u003d 0;\n+    while (true) {\n+      try {\n+        fs.rename(current, checkpoint, Rename.NONE);\n+        break;\n+      } catch (FileAlreadyExistsException e) {\n+        if (++attempt \u003e 1000) {\n+          throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n+        }\n+        checkpoint \u003d checkpointBase.suffix(\"-\" + attempt);\n+      }\n     }\n \n-    if (fs.rename(current, checkpoint)) {\n-      LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n-    } else {\n-      throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n-    }\n+    LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void createCheckpoint() throws IOException {\n    if (!fs.exists(current))                     // no trash, no checkpoint\n      return;\n\n    Path checkpointBase;\n    synchronized (CHECKPOINT) {\n      checkpointBase \u003d new Path(trash, CHECKPOINT.format(new Date()));\n    }\n    Path checkpoint \u003d checkpointBase;\n\n    int attempt \u003d 0;\n    while (true) {\n      try {\n        fs.rename(current, checkpoint, Rename.NONE);\n        break;\n      } catch (FileAlreadyExistsException e) {\n        if (++attempt \u003e 1000) {\n          throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n        }\n        checkpoint \u003d checkpointBase.suffix(\"-\" + attempt);\n      }\n    }\n\n    LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void createCheckpoint() throws IOException {\n    if (!fs.exists(current))                     // no trash, no checkpoint\n      return;\n\n    Path checkpoint;\n    synchronized (CHECKPOINT) {\n      checkpoint \u003d new Path(trash, CHECKPOINT.format(new Date()));\n    }\n\n    if (fs.rename(current, checkpoint)) {\n      LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n    } else {\n      throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void createCheckpoint() throws IOException {\n    if (!fs.exists(current))                     // no trash, no checkpoint\n      return;\n\n    Path checkpoint;\n    synchronized (CHECKPOINT) {\n      checkpoint \u003d new Path(trash, CHECKPOINT.format(new Date()));\n    }\n\n    if (fs.rename(current, checkpoint)) {\n      LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n    } else {\n      throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/TrashPolicyDefault.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java"
      }
    },
    "184ff33de5598b04bf968ea3b113b175a4225b82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7460. Support pluggable trash policies. Contributed by Usman Masoon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1149760 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/11 4:23 PM",
      "commitName": "184ff33de5598b04bf968ea3b113b175a4225b82",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,15 @@\n+  public void createCheckpoint() throws IOException {\n+    if (!fs.exists(current))                     // no trash, no checkpoint\n+      return;\n+\n+    Path checkpoint;\n+    synchronized (CHECKPOINT) {\n+      checkpoint \u003d new Path(trash, CHECKPOINT.format(new Date()));\n+    }\n+\n+    if (fs.rename(current, checkpoint)) {\n+      LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n+    } else {\n+      throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void createCheckpoint() throws IOException {\n    if (!fs.exists(current))                     // no trash, no checkpoint\n      return;\n\n    Path checkpoint;\n    synchronized (CHECKPOINT) {\n      checkpoint \u003d new Path(trash, CHECKPOINT.format(new Date()));\n    }\n\n    if (fs.rename(current, checkpoint)) {\n      LOG.info(\"Created trash checkpoint: \"+checkpoint.toUri().getPath());\n    } else {\n      throw new IOException(\"Failed to checkpoint trash: \"+checkpoint);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/TrashPolicyDefault.java"
    }
  }
}