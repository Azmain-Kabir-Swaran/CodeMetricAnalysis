{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectoryScanner.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
  "functionStartLine": 326,
  "functionEndLine": 336,
  "numCommitsSeen": 60,
  "timeTaken": 7551,
  "changeHistory": [
    "1dc0adfac0ee4821c67366728c70be9b59477b0f",
    "9ef89ede2f18c76c601fd585cb9d47511f5fc3ed",
    "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4",
    "0857641f62778fad64e8158d78320efb0c8b417c",
    "7a3c381b39887a02e944fa98287afd0eb4db3560",
    "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "710e5a960e8af1d4c73e386041096aacfee8b828",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "1dc0adfac0ee4821c67366728c70be9b59477b0f": "Ybodychange",
    "9ef89ede2f18c76c601fd585cb9d47511f5fc3ed": "Ybodychange",
    "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4": "Ybodychange",
    "0857641f62778fad64e8158d78320efb0c8b417c": "Ybodychange",
    "7a3c381b39887a02e944fa98287afd0eb4db3560": "Ybodychange",
    "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080": "Ybodychange",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "710e5a960e8af1d4c73e386041096aacfee8b828": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1dc0adfac0ee4821c67366728c70be9b59477b0f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13947. Review of DirectoryScanner Class. Contributed by BELUGA BEHR.\n",
      "commitDate": "03/10/18 11:19 AM",
      "commitName": "1dc0adfac0ee4821c67366728c70be9b59477b0f",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 26.86,
      "commitsBetweenForRepo": 283,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,11 @@\n   void start() {\n-    shouldRun \u003d true;\n-    long offset \u003d ThreadLocalRandom.current().nextInt(\n-        (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n-    long firstScanTime \u003d Time.now() + offset;\n-    String logMsg;\n+    shouldRun.set(true);\n+    long firstScanTime \u003d ThreadLocalRandom.current().nextLong(scanPeriodMsecs);\n \n-    if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n-      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE,\n-          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs,\n-          throttleLimitMsPerSec);\n-    } else {\n-      logMsg \u003d String.format(START_MESSAGE,\n-          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs);\n-    }\n+    LOG.info(\n+        \"Periodic Directory Tree Verification scan starting in {}ms with interval of {}ms and throttle limit of {}ms/s\",\n+        firstScanTime, scanPeriodMsecs, throttleLimitMsPerSec);\n \n-    LOG.info(logMsg);\n-    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n-                                     TimeUnit.MILLISECONDS);\n+    masterThread.scheduleAtFixedRate(this, firstScanTime, scanPeriodMsecs,\n+        TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun.set(true);\n    long firstScanTime \u003d ThreadLocalRandom.current().nextLong(scanPeriodMsecs);\n\n    LOG.info(\n        \"Periodic Directory Tree Verification scan starting in {}ms with interval of {}ms and throttle limit of {}ms/s\",\n        firstScanTime, scanPeriodMsecs, throttleLimitMsPerSec);\n\n    masterThread.scheduleAtFixedRate(this, firstScanTime, scanPeriodMsecs,\n        TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "9ef89ede2f18c76c601fd585cb9d47511f5fc3ed": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11140. Directory Scanner should log startup message time correctly. Contributed by Yiqun Lin.\n",
      "commitDate": "07/12/16 8:38 PM",
      "commitName": "9ef89ede2f18c76c601fd585cb9d47511f5fc3ed",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/12/16 8:37 PM",
      "commitNameOld": "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   void start() {\n     shouldRun \u003d true;\n     long offset \u003d ThreadLocalRandom.current().nextInt(\n         (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n     long firstScanTime \u003d Time.now() + offset;\n     String logMsg;\n \n     if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n-      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE, firstScanTime,\n-          scanPeriodMsecs, throttleLimitMsPerSec);\n+      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE,\n+          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs,\n+          throttleLimitMsPerSec);\n     } else {\n-      logMsg \u003d String.format(START_MESSAGE, firstScanTime, scanPeriodMsecs);\n+      logMsg \u003d String.format(START_MESSAGE,\n+          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs);\n     }\n \n     LOG.info(logMsg);\n     masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                      TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d ThreadLocalRandom.current().nextInt(\n        (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n    long firstScanTime \u003d Time.now() + offset;\n    String logMsg;\n\n    if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE,\n          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs,\n          throttleLimitMsPerSec);\n    } else {\n      logMsg \u003d String.format(START_MESSAGE,\n          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs);\n    }\n\n    LOG.info(logMsg);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-11140. Directory Scanner should log startup message time correctly. Contributed by Yiqun Lin.\"\n\nThis reverts commit 0857641f62778fad64e8158d78320efb0c8b417c.\n",
      "commitDate": "07/12/16 8:37 PM",
      "commitName": "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/12/16 8:34 PM",
      "commitNameOld": "0857641f62778fad64e8158d78320efb0c8b417c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   void start() {\n     shouldRun \u003d true;\n     long offset \u003d ThreadLocalRandom.current().nextInt(\n         (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n     long firstScanTime \u003d Time.now() + offset;\n     String logMsg;\n \n     if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n-      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE,\n-          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs,\n-          throttleLimitMsPerSec);\n+      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE, firstScanTime,\n+          scanPeriodMsecs, throttleLimitMsPerSec);\n     } else {\n-      logMsg \u003d String.format(START_MESSAGE,\n-          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs);\n+      logMsg \u003d String.format(START_MESSAGE, firstScanTime, scanPeriodMsecs);\n     }\n \n     LOG.info(logMsg);\n     masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                      TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d ThreadLocalRandom.current().nextInt(\n        (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n    long firstScanTime \u003d Time.now() + offset;\n    String logMsg;\n\n    if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE, firstScanTime,\n          scanPeriodMsecs, throttleLimitMsPerSec);\n    } else {\n      logMsg \u003d String.format(START_MESSAGE, firstScanTime, scanPeriodMsecs);\n    }\n\n    LOG.info(logMsg);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "0857641f62778fad64e8158d78320efb0c8b417c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11140. Directory Scanner should log startup message time correctly. Contributed by Yiqun Lin.\n",
      "commitDate": "07/12/16 8:34 PM",
      "commitName": "0857641f62778fad64e8158d78320efb0c8b417c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "27/10/16 4:00 PM",
      "commitNameOld": "9e03ee527988ff85af7f2c224c5570b69d09279a",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 41.23,
      "commitsBetweenForRepo": 311,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   void start() {\n     shouldRun \u003d true;\n     long offset \u003d ThreadLocalRandom.current().nextInt(\n         (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n     long firstScanTime \u003d Time.now() + offset;\n     String logMsg;\n \n     if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n-      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE, firstScanTime,\n-          scanPeriodMsecs, throttleLimitMsPerSec);\n+      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE,\n+          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs,\n+          throttleLimitMsPerSec);\n     } else {\n-      logMsg \u003d String.format(START_MESSAGE, firstScanTime, scanPeriodMsecs);\n+      logMsg \u003d String.format(START_MESSAGE,\n+          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs);\n     }\n \n     LOG.info(logMsg);\n     masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                      TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d ThreadLocalRandom.current().nextInt(\n        (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n    long firstScanTime \u003d Time.now() + offset;\n    String logMsg;\n\n    if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE,\n          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs,\n          throttleLimitMsPerSec);\n    } else {\n      logMsg \u003d String.format(START_MESSAGE,\n          FastDateFormat.getInstance().format(firstScanTime), scanPeriodMsecs);\n    }\n\n    LOG.info(logMsg);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "7a3c381b39887a02e944fa98287afd0eb4db3560": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8873. Allow the directoryScanner to be rate-limited (Daniel Templeton via Colin P. McCabe)\n",
      "commitDate": "26/09/15 4:09 AM",
      "commitName": "7a3c381b39887a02e944fa98287afd0eb4db3560",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "19/05/15 10:50 AM",
      "commitNameOld": "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 129.72,
      "commitsBetweenForRepo": 819,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,18 @@\n   void start() {\n     shouldRun \u003d true;\n     long offset \u003d ThreadLocalRandom.current().nextInt(\n-        (int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n+        (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n     long firstScanTime \u003d Time.now() + offset;\n-    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n-        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n+    String logMsg;\n+\n+    if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n+      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE, firstScanTime,\n+          scanPeriodMsecs, throttleLimitMsPerSec);\n+    } else {\n+      logMsg \u003d String.format(START_MESSAGE, firstScanTime, scanPeriodMsecs);\n+    }\n+\n+    LOG.info(logMsg);\n     masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                      TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d ThreadLocalRandom.current().nextInt(\n        (int) (scanPeriodMsecs/MILLIS_PER_SECOND)) * MILLIS_PER_SECOND; //msec\n    long firstScanTime \u003d Time.now() + offset;\n    String logMsg;\n\n    if (throttleLimitMsPerSec \u003c MILLIS_PER_SECOND) {\n      logMsg \u003d String.format(START_MESSAGE_WITH_THROTTLE, firstScanTime,\n          scanPeriodMsecs, throttleLimitMsPerSec);\n    } else {\n      logMsg \u003d String.format(START_MESSAGE, firstScanTime, scanPeriodMsecs);\n    }\n\n    LOG.info(logMsg);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11970. Replace uses of ThreadLocal\u003cRandom\u003e with JDK7 ThreadLocalRandom (Sean Busbey via Colin P. McCabe)\n",
      "commitDate": "19/05/15 10:50 AM",
      "commitName": "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "05/05/15 11:08 AM",
      "commitNameOld": "24d3a2d4fdd836ac9a5bc755a7fb9354f7a582b1",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 13.99,
      "commitsBetweenForRepo": 197,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   void start() {\n     shouldRun \u003d true;\n-    long offset \u003d DFSUtil.getRandom().nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n+    long offset \u003d ThreadLocalRandom.current().nextInt(\n+        (int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n     long firstScanTime \u003d Time.now() + offset;\n     LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n         + firstScanTime + \" with interval \" + scanPeriodMsecs);\n     masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                      TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d ThreadLocalRandom.current().nextInt(\n        (int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n    long firstScanTime \u003d Time.now() + offset;\n    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3641. Move server Util time methods to common and use now instead of System#currentTimeMillis. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 12:01 PM",
      "commitName": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "06/06/12 1:56 PM",
      "commitNameOld": "8813f42175360150105d101ea0e8cc5c4a642f71",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 35.92,
      "commitsBetweenForRepo": 179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   void start() {\n     shouldRun \u003d true;\n     long offset \u003d DFSUtil.getRandom().nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n-    long firstScanTime \u003d System.currentTimeMillis() + offset;\n+    long firstScanTime \u003d Time.now() + offset;\n     LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n         + firstScanTime + \" with interval \" + scanPeriodMsecs);\n     masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                      TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d DFSUtil.getRandom().nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n    long firstScanTime \u003d Time.now() + offset;\n    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d DFSUtil.getRandom().nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n    long firstScanTime \u003d System.currentTimeMillis() + offset;\n    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d DFSUtil.getRandom().nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n    long firstScanTime \u003d System.currentTimeMillis() + offset;\n    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
      }
    },
    "710e5a960e8af1d4c73e386041096aacfee8b828": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2161. Move createNamenode(..), createClientDatanodeProtocolProxy(..) and Random object creation to DFSUtil; move DFSClient.stringifyToken(..) to DelegationTokenIdentifier.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1148348 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/11 7:23 AM",
      "commitName": "710e5a960e8af1d4c73e386041096aacfee8b828",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 36.68,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n   void start() {\n     shouldRun \u003d true;\n-    Random rand \u003d new Random();\n-    long offset \u003d rand.nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n+    long offset \u003d DFSUtil.getRandom().nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n     long firstScanTime \u003d System.currentTimeMillis() + offset;\n     LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n         + firstScanTime + \" with interval \" + scanPeriodMsecs);\n     masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                      TimeUnit.MILLISECONDS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    long offset \u003d DFSUtil.getRandom().nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n    long firstScanTime \u003d System.currentTimeMillis() + offset;\n    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,10 @@\n+  void start() {\n+    shouldRun \u003d true;\n+    Random rand \u003d new Random();\n+    long offset \u003d rand.nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n+    long firstScanTime \u003d System.currentTimeMillis() + offset;\n+    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n+        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n+    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n+                                     TimeUnit.MILLISECONDS);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void start() {\n    shouldRun \u003d true;\n    Random rand \u003d new Random();\n    long offset \u003d rand.nextInt((int) (scanPeriodMsecs/1000L)) * 1000L; //msec\n    long firstScanTime \u003d System.currentTimeMillis() + offset;\n    LOG.info(\"Periodic Directory Tree Verification scan starting at \" \n        + firstScanTime + \" with interval \" + scanPeriodMsecs);\n    masterThread.scheduleAtFixedRate(this, offset, scanPeriodMsecs, \n                                     TimeUnit.MILLISECONDS);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
    }
  }
}