{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractReservationSystem.java",
  "functionName": "initializePlan",
  "functionId": "initializePlan___planQueueName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
  "functionStartLine": 413,
  "functionEndLine": 430,
  "numCommitsSeen": 17,
  "timeTaken": 4054,
  "changeHistory": [
    "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0",
    "e3345e985bff93c6c74a76747e45376c6027f42c",
    "7996eca7dcfaa1bdf970e32022274f2699bef8a1",
    "4174b9756c8c7877797545c4356b1f40df603ec5",
    "2798723a5443d04455b9d79c48d61f435ab52267",
    "506d1b1dbcb7ae5dad4a3dc4d415af241c72887c",
    "2fce6d61412843f0447f60cfe02326f769edae25",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0": "Ybodychange",
    "e3345e985bff93c6c74a76747e45376c6027f42c": "Ybodychange",
    "7996eca7dcfaa1bdf970e32022274f2699bef8a1": "Ybodychange",
    "4174b9756c8c7877797545c4356b1f40df603ec5": "Ybodychange",
    "2798723a5443d04455b9d79c48d61f435ab52267": "Ybodychange",
    "506d1b1dbcb7ae5dad4a3dc4d415af241c72887c": "Ybodychange",
    "2fce6d61412843f0447f60cfe02326f769edae25": "Ymultichange(Ymovefromfile,Ybodychange)",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5328. Plan/ResourceAllocation data structure enhancements required to support recurring reservations in ReservationSystem.\n",
      "commitDate": "06/09/17 4:46 PM",
      "commitName": "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "06/09/17 4:39 PM",
      "commitNameOld": "e3345e985bff93c6c74a76747e45376c6027f42c",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n     String planQueuePath \u003d getPlanQueuePath(planQueueName);\n     SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n     adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n     Resource minAllocation \u003d getMinAllocation();\n     Resource maxAllocation \u003d getMaxAllocation();\n     ResourceCalculator rescCalc \u003d getResourceCalculator();\n     Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n-    Plan plan \u003d\n-        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n-            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n-            minAllocation, maxAllocation, planQueueName,\n-            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n-            .getMoveOnExpiry(planQueuePath), rmContext);\n+    Plan plan \u003d new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n+        getAgent(planQueuePath), totCap, planStepSize, rescCalc, minAllocation,\n+        maxAllocation, planQueueName, getReplanner(planQueuePath),\n+        getReservationSchedulerConfiguration().getMoveOnExpiry(planQueuePath),\n+        maxPeriodicity, rmContext);\n     LOG.info(\"Initialized plan {} based on reservable queue {}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n        getAgent(planQueuePath), totCap, planStepSize, rescCalc, minAllocation,\n        maxAllocation, planQueueName, getReplanner(planQueuePath),\n        getReservationSchedulerConfiguration().getMoveOnExpiry(planQueuePath),\n        maxPeriodicity, rmContext);\n    LOG.info(\"Initialized plan {} based on reservable queue {}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "e3345e985bff93c6c74a76747e45376c6027f42c": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Plan/ResourceAllocation data structure enhancements required to support recurring reservations in ReservationSystem.\"\n\nThis reverts commit 7996eca7dcfaa1bdf970e32022274f2699bef8a1.\n",
      "commitDate": "06/09/17 4:39 PM",
      "commitName": "e3345e985bff93c6c74a76747e45376c6027f42c",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/09/17 3:16 PM",
      "commitNameOld": "7996eca7dcfaa1bdf970e32022274f2699bef8a1",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 5.06,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n     String planQueuePath \u003d getPlanQueuePath(planQueueName);\n     SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n     adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n     Resource minAllocation \u003d getMinAllocation();\n     Resource maxAllocation \u003d getMaxAllocation();\n     ResourceCalculator rescCalc \u003d getResourceCalculator();\n     Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n-    Plan plan \u003d new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n-        getAgent(planQueuePath), totCap, planStepSize, rescCalc, minAllocation,\n-        maxAllocation, planQueueName, getReplanner(planQueuePath),\n-        getReservationSchedulerConfiguration().getMoveOnExpiry(planQueuePath),\n-        maxPeriodicity, rmContext);\n+    Plan plan \u003d\n+        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n+            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n+            minAllocation, maxAllocation, planQueueName,\n+            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n+            .getMoveOnExpiry(planQueuePath), rmContext);\n     LOG.info(\"Initialized plan {} based on reservable queue {}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d\n        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n            minAllocation, maxAllocation, planQueueName,\n            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n            .getMoveOnExpiry(planQueuePath), rmContext);\n    LOG.info(\"Initialized plan {} based on reservable queue {}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "7996eca7dcfaa1bdf970e32022274f2699bef8a1": {
      "type": "Ybodychange",
      "commitMessage": "Plan/ResourceAllocation data structure enhancements required to support recurring reservations in ReservationSystem.\n",
      "commitDate": "01/09/17 3:16 PM",
      "commitName": "7996eca7dcfaa1bdf970e32022274f2699bef8a1",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "27/02/17 7:08 AM",
      "commitNameOld": "5f5b031d1f20cb7f621db41979e963eaa42cf52f",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 186.3,
      "commitsBetweenForRepo": 1148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n     String planQueuePath \u003d getPlanQueuePath(planQueueName);\n     SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n     adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n     Resource minAllocation \u003d getMinAllocation();\n     Resource maxAllocation \u003d getMaxAllocation();\n     ResourceCalculator rescCalc \u003d getResourceCalculator();\n     Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n-    Plan plan \u003d\n-        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n-            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n-            minAllocation, maxAllocation, planQueueName,\n-            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n-            .getMoveOnExpiry(planQueuePath), rmContext);\n+    Plan plan \u003d new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n+        getAgent(planQueuePath), totCap, planStepSize, rescCalc, minAllocation,\n+        maxAllocation, planQueueName, getReplanner(planQueuePath),\n+        getReservationSchedulerConfiguration().getMoveOnExpiry(planQueuePath),\n+        maxPeriodicity, rmContext);\n     LOG.info(\"Initialized plan {} based on reservable queue {}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n        getAgent(planQueuePath), totCap, planStepSize, rescCalc, minAllocation,\n        maxAllocation, planQueueName, getReplanner(planQueuePath),\n        getReservationSchedulerConfiguration().getMoveOnExpiry(planQueuePath),\n        maxPeriodicity, rmContext);\n    LOG.info(\"Initialized plan {} based on reservable queue {}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "4174b9756c8c7877797545c4356b1f40df603ec5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5642. Typos in 9 log messages. Contributed by Mehran Hassani\n",
      "commitDate": "16/09/16 10:05 PM",
      "commitName": "4174b9756c8c7877797545c4356b1f40df603ec5",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "11/02/16 10:47 AM",
      "commitNameOld": "23f937e3b718f607d4fc975610ab3a03265f0f7e",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 218.43,
      "commitsBetweenForRepo": 1523,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n     String planQueuePath \u003d getPlanQueuePath(planQueueName);\n     SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n     adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n     Resource minAllocation \u003d getMinAllocation();\n     Resource maxAllocation \u003d getMaxAllocation();\n     ResourceCalculator rescCalc \u003d getResourceCalculator();\n     Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n     Plan plan \u003d\n         new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n             getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n             minAllocation, maxAllocation, planQueueName,\n             getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n             .getMoveOnExpiry(planQueuePath), rmContext);\n-    LOG.info(\"Intialized plan {} based on reservable queue {}\",\n+    LOG.info(\"Initialized plan {} based on reservable queue {}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d\n        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n            minAllocation, maxAllocation, planQueueName,\n            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n            .getMoveOnExpiry(planQueuePath), rmContext);\n    LOG.info(\"Initialized plan {} based on reservable queue {}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "2798723a5443d04455b9d79c48d61f435ab52267": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3739. Add reservation system recovery to RM recovery process. Contributed by  Subru Krishnan.\n",
      "commitDate": "22/10/15 6:51 AM",
      "commitName": "2798723a5443d04455b9d79c48d61f435ab52267",
      "commitAuthor": "Anubhav Dhoot",
      "commitDateOld": "20/10/15 4:46 PM",
      "commitNameOld": "506d1b1dbcb7ae5dad4a3dc4d415af241c72887c",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 1.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n     String planQueuePath \u003d getPlanQueuePath(planQueueName);\n     SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n     adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n     Resource minAllocation \u003d getMinAllocation();\n     Resource maxAllocation \u003d getMaxAllocation();\n     ResourceCalculator rescCalc \u003d getResourceCalculator();\n     Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n     Plan plan \u003d\n         new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n             getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n             minAllocation, maxAllocation, planQueueName,\n             getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n             .getMoveOnExpiry(planQueuePath), rmContext);\n-    LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n+    LOG.info(\"Intialized plan {} based on reservable queue {}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d\n        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n            minAllocation, maxAllocation, planQueueName,\n            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n            .getMoveOnExpiry(planQueuePath), rmContext);\n    LOG.info(\"Intialized plan {} based on reservable queue {}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "506d1b1dbcb7ae5dad4a3dc4d415af241c72887c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3985. Make ReservationSystem persist state using RMStateStore reservation APIs. (adhoot via asuresh)\n",
      "commitDate": "20/10/15 4:46 PM",
      "commitName": "506d1b1dbcb7ae5dad4a3dc4d415af241c72887c",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "25/07/15 7:39 AM",
      "commitNameOld": "156f24ead00436faad5d4aeef327a546392cd265",
      "commitAuthorOld": "ccurino",
      "daysBetweenCommits": 87.38,
      "commitsBetweenForRepo": 560,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n     String planQueuePath \u003d getPlanQueuePath(planQueueName);\n     SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n     adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n     Resource minAllocation \u003d getMinAllocation();\n     Resource maxAllocation \u003d getMaxAllocation();\n     ResourceCalculator rescCalc \u003d getResourceCalculator();\n     Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n     Plan plan \u003d\n         new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n             getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n             minAllocation, maxAllocation, planQueueName,\n             getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n-            .getMoveOnExpiry(planQueuePath));\n+            .getMoveOnExpiry(planQueuePath), rmContext);\n     LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d\n        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n            minAllocation, maxAllocation, planQueueName,\n            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n            .getMoveOnExpiry(planQueuePath), rmContext);\n    LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
      "extendedDetails": {}
    },
    "2fce6d61412843f0447f60cfe02326f769edae25": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-2690. [YARN-2574] Make ReservationSystem and its dependent classes independent of Scheduler type. (Anubhav Dhoot via kasha)\n",
      "commitDate": "17/11/14 4:45 PM",
      "commitName": "2fce6d61412843f0447f60cfe02326f769edae25",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-2690. [YARN-2574] Make ReservationSystem and its dependent classes independent of Scheduler type. (Anubhav Dhoot via kasha)\n",
          "commitDate": "17/11/14 4:45 PM",
          "commitName": "2fce6d61412843f0447f60cfe02326f769edae25",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "17/11/14 2:59 PM",
          "commitNameOld": "09b3dee122ad20fae22ae8de74886dbf11c39343",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n-    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueueName);\n-    String planQueuePath \u003d capScheduler.getQueue(planQueueName).getQueuePath();\n-    adPolicy.init(planQueuePath, capScheduler.getConfiguration());\n-    CSQueue planQueue \u003d capScheduler.getQueue(planQueueName);\n+    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n+    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n+    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n-    Resource minAllocation \u003d capScheduler.getMinimumResourceCapability();\n-    ResourceCalculator rescCalc \u003d capScheduler.getResourceCalculator();\n-    Resource totCap \u003d\n-        rescCalc.multiplyAndNormalizeDown(capScheduler.getClusterResource(),\n-            planQueue.getAbsoluteCapacity(), minAllocation);\n+    Resource minAllocation \u003d getMinAllocation();\n+    Resource maxAllocation \u003d getMaxAllocation();\n+    ResourceCalculator rescCalc \u003d getResourceCalculator();\n+    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n     Plan plan \u003d\n-        new InMemoryPlan(capScheduler.getRootQueueMetrics(), adPolicy,\n+        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n             getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n-            minAllocation, capScheduler.getMaximumResourceCapability(),\n-            planQueueName, getReplanner(planQueuePath), capScheduler\n-                .getConfiguration().getMoveOnExpiry(planQueuePath));\n+            minAllocation, maxAllocation, planQueueName,\n+            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n+            .getMoveOnExpiry(planQueuePath));\n     LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d\n        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n            minAllocation, maxAllocation, planQueueName,\n            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n            .getMoveOnExpiry(planQueuePath));\n    LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/CapacityReservationSystem.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
            "oldMethodName": "initializePlan",
            "newMethodName": "initializePlan"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2690. [YARN-2574] Make ReservationSystem and its dependent classes independent of Scheduler type. (Anubhav Dhoot via kasha)\n",
          "commitDate": "17/11/14 4:45 PM",
          "commitName": "2fce6d61412843f0447f60cfe02326f769edae25",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "17/11/14 2:59 PM",
          "commitNameOld": "09b3dee122ad20fae22ae8de74886dbf11c39343",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n   protected Plan initializePlan(String planQueueName) throws YarnException {\n-    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueueName);\n-    String planQueuePath \u003d capScheduler.getQueue(planQueueName).getQueuePath();\n-    adPolicy.init(planQueuePath, capScheduler.getConfiguration());\n-    CSQueue planQueue \u003d capScheduler.getQueue(planQueueName);\n+    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n+    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n+    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n     // Calculate the max plan capacity\n-    Resource minAllocation \u003d capScheduler.getMinimumResourceCapability();\n-    ResourceCalculator rescCalc \u003d capScheduler.getResourceCalculator();\n-    Resource totCap \u003d\n-        rescCalc.multiplyAndNormalizeDown(capScheduler.getClusterResource(),\n-            planQueue.getAbsoluteCapacity(), minAllocation);\n+    Resource minAllocation \u003d getMinAllocation();\n+    Resource maxAllocation \u003d getMaxAllocation();\n+    ResourceCalculator rescCalc \u003d getResourceCalculator();\n+    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n     Plan plan \u003d\n-        new InMemoryPlan(capScheduler.getRootQueueMetrics(), adPolicy,\n+        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n             getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n-            minAllocation, capScheduler.getMaximumResourceCapability(),\n-            planQueueName, getReplanner(planQueuePath), capScheduler\n-                .getConfiguration().getMoveOnExpiry(planQueuePath));\n+            minAllocation, maxAllocation, planQueueName,\n+            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n+            .getMoveOnExpiry(planQueuePath));\n     LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n         plan.toString(), planQueueName);\n     return plan;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    String planQueuePath \u003d getPlanQueuePath(planQueueName);\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueuePath);\n    adPolicy.init(planQueuePath, getReservationSchedulerConfiguration());\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d getMinAllocation();\n    Resource maxAllocation \u003d getMaxAllocation();\n    ResourceCalculator rescCalc \u003d getResourceCalculator();\n    Resource totCap \u003d getPlanQueueCapacity(planQueueName);\n    Plan plan \u003d\n        new InMemoryPlan(getRootQueueMetrics(), adPolicy,\n            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n            minAllocation, maxAllocation, planQueueName,\n            getReplanner(planQueuePath), getReservationSchedulerConfiguration()\n            .getMoveOnExpiry(planQueuePath));\n    LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,21 @@\n+  protected Plan initializePlan(String planQueueName) throws YarnException {\n+    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueueName);\n+    String planQueuePath \u003d capScheduler.getQueue(planQueueName).getQueuePath();\n+    adPolicy.init(planQueuePath, capScheduler.getConfiguration());\n+    CSQueue planQueue \u003d capScheduler.getQueue(planQueueName);\n+    // Calculate the max plan capacity\n+    Resource minAllocation \u003d capScheduler.getMinimumResourceCapability();\n+    ResourceCalculator rescCalc \u003d capScheduler.getResourceCalculator();\n+    Resource totCap \u003d\n+        rescCalc.multiplyAndNormalizeDown(capScheduler.getClusterResource(),\n+            planQueue.getAbsoluteCapacity(), minAllocation);\n+    Plan plan \u003d\n+        new InMemoryPlan(capScheduler.getRootQueueMetrics(), adPolicy,\n+            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n+            minAllocation, capScheduler.getMaximumResourceCapability(),\n+            planQueueName, getReplanner(planQueuePath), capScheduler\n+                .getConfiguration().getMoveOnExpiry(planQueuePath));\n+    LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n+        plan.toString(), planQueueName);\n+    return plan;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Plan initializePlan(String planQueueName) throws YarnException {\n    SharingPolicy adPolicy \u003d getAdmissionPolicy(planQueueName);\n    String planQueuePath \u003d capScheduler.getQueue(planQueueName).getQueuePath();\n    adPolicy.init(planQueuePath, capScheduler.getConfiguration());\n    CSQueue planQueue \u003d capScheduler.getQueue(planQueueName);\n    // Calculate the max plan capacity\n    Resource minAllocation \u003d capScheduler.getMinimumResourceCapability();\n    ResourceCalculator rescCalc \u003d capScheduler.getResourceCalculator();\n    Resource totCap \u003d\n        rescCalc.multiplyAndNormalizeDown(capScheduler.getClusterResource(),\n            planQueue.getAbsoluteCapacity(), minAllocation);\n    Plan plan \u003d\n        new InMemoryPlan(capScheduler.getRootQueueMetrics(), adPolicy,\n            getAgent(planQueuePath), totCap, planStepSize, rescCalc,\n            minAllocation, capScheduler.getMaximumResourceCapability(),\n            planQueueName, getReplanner(planQueuePath), capScheduler\n                .getConfiguration().getMoveOnExpiry(planQueuePath));\n    LOG.info(\"Intialized plan {0} based on reservable queue {1}\",\n        plan.toString(), planQueueName);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/CapacityReservationSystem.java"
    }
  }
}