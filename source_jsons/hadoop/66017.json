{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CopyOutcome.java",
  "functionName": "waitForCopy",
  "functionId": "waitForCopy___copy-Copy",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/CopyOutcome.java",
  "functionStartLine": 70,
  "functionEndLine": 79,
  "numCommitsSeen": 1,
  "timeTaken": 1272,
  "changeHistory": [
    "a36274d69947648dbe82721220cc5240ec5d396d"
  ],
  "changeHistoryShort": {
    "a36274d69947648dbe82721220cc5240ec5d396d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "diff": "@@ -0,0 +1,10 @@\n+  public static CopyOutcome waitForCopy(Copy copy) {\n+    try {\n+      CopyResult result \u003d copy.waitForCopyResult();\n+      return new CopyOutcome(result, null, null);\n+    } catch (SdkBaseException e) {\n+      return new CopyOutcome(null, null, e);\n+    } catch (InterruptedException e) {\n+      return new CopyOutcome(null, e, null);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static CopyOutcome waitForCopy(Copy copy) {\n    try {\n      CopyResult result \u003d copy.waitForCopyResult();\n      return new CopyOutcome(result, null, null);\n    } catch (SdkBaseException e) {\n      return new CopyOutcome(null, null, e);\n    } catch (InterruptedException e) {\n      return new CopyOutcome(null, e, null);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/CopyOutcome.java"
    }
  }
}