{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterWebServiceUtil.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
  "functionStartLine": 122,
  "functionEndLine": 153,
  "numCommitsSeen": 8,
  "timeTaken": 1742,
  "changeHistory": [
    "25361b077bd34606259dac5a00c41faddd2dfc7d",
    "8be5707067509b78bde5fcf60072ae988d5a9f32",
    "acda6b96a4e92e432bd1d97fa14004a11e70387e"
  ],
  "changeHistoryShort": {
    "25361b077bd34606259dac5a00c41faddd2dfc7d": "Ybodychange",
    "8be5707067509b78bde5fcf60072ae988d5a9f32": "Ybodychange",
    "acda6b96a4e92e432bd1d97fa14004a11e70387e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "25361b077bd34606259dac5a00c41faddd2dfc7d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10120. Https Support in Router WebServiceClient.\n\nContributed by Bilwa S T.\n",
      "commitDate": "02/04/20 5:41 AM",
      "commitName": "25361b077bd34606259dac5a00c41faddd2dfc7d",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "27/10/17 4:46 PM",
      "commitNameOld": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 887.54,
      "commitsBetweenForRepo": 6584,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n         public T run() {\n \n           Map\u003cString, String[]\u003e paramMap \u003d null;\n \n           // We can have hsr or additionalParam. There are no case with both.\n           if (hsr !\u003d null) {\n             paramMap \u003d hsr.getParameterMap();\n           } else if (additionalParam !\u003d null) {\n             paramMap \u003d additionalParam;\n           }\n \n           ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n               webApp, targetPath, method,\n               (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n-              getMediaTypeFromHttpServletRequest(hsr, returnType));\n+              getMediaTypeFromHttpServletRequest(hsr, returnType), conf);\n           if (Response.class.equals(returnType)) {\n             return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n           }\n           // YARN RM can answer with Status.OK or it throws an exception\n           if (response.getStatus() \u003d\u003d SC_OK) {\n             return response.getEntity(returnType);\n           }\n           if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n             try {\n               return returnType.getConstructor().newInstance();\n             } catch (RuntimeException | ReflectiveOperationException e) {\n               LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n             }\n           }\n           RouterWebServiceUtil.retrieveException(response);\n           return null;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n              getMediaTypeFromHttpServletRequest(hsr, returnType), conf);\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d SC_OK) {\n            return response.getEntity(returnType);\n          }\n          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n            try {\n              return returnType.getConstructor().newInstance();\n            } catch (RuntimeException | ReflectiveOperationException e) {\n              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n            }\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
      "extendedDetails": {}
    },
    "8be5707067509b78bde5fcf60072ae988d5a9f32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
      "commitDate": "27/10/17 4:46 PM",
      "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "17/10/17 10:15 AM",
      "commitNameOld": "acabc657ff5433f36ce1b238cecd3a3b5bbe87ae",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 10.27,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,32 @@\n         public T run() {\n \n           Map\u003cString, String[]\u003e paramMap \u003d null;\n \n           // We can have hsr or additionalParam. There are no case with both.\n           if (hsr !\u003d null) {\n             paramMap \u003d hsr.getParameterMap();\n           } else if (additionalParam !\u003d null) {\n             paramMap \u003d additionalParam;\n           }\n \n           ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n               webApp, targetPath, method,\n-              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam);\n+              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n+              getMediaTypeFromHttpServletRequest(hsr, returnType));\n           if (Response.class.equals(returnType)) {\n             return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n           }\n           // YARN RM can answer with Status.OK or it throws an exception\n-          if (response.getStatus() \u003d\u003d 200) {\n+          if (response.getStatus() \u003d\u003d SC_OK) {\n             return response.getEntity(returnType);\n           }\n+          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n+            try {\n+              return returnType.getConstructor().newInstance();\n+            } catch (RuntimeException | ReflectiveOperationException e) {\n+              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n+            }\n+          }\n           RouterWebServiceUtil.retrieveException(response);\n           return null;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n              getMediaTypeFromHttpServletRequest(hsr, returnType));\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d SC_OK) {\n            return response.getEntity(returnType);\n          }\n          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n            try {\n              return returnType.getConstructor().newInstance();\n            } catch (RuntimeException | ReflectiveOperationException e) {\n              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n            }\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
      "extendedDetails": {}
    },
    "acda6b96a4e92e432bd1d97fa14004a11e70387e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5412. Create a proxy chain for ResourceManager REST API in the Router. (Contributed by Giovanni Matteo Fumarola via curino)\n\n(cherry picked from commit b6240b92abf453affc5fd64e1eedf2d29842aa75)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "acda6b96a4e92e432bd1d97fa14004a11e70387e",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,24 @@\n+        public T run() {\n+\n+          Map\u003cString, String[]\u003e paramMap \u003d null;\n+\n+          // We can have hsr or additionalParam. There are no case with both.\n+          if (hsr !\u003d null) {\n+            paramMap \u003d hsr.getParameterMap();\n+          } else if (additionalParam !\u003d null) {\n+            paramMap \u003d additionalParam;\n+          }\n+\n+          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n+              webApp, targetPath, method,\n+              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam);\n+          if (Response.class.equals(returnType)) {\n+            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n+          }\n+          // YARN RM can answer with Status.OK or it throws an exception\n+          if (response.getStatus() \u003d\u003d 200) {\n+            return response.getEntity(returnType);\n+          }\n+          RouterWebServiceUtil.retrieveException(response);\n+          return null;\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam);\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d 200) {\n            return response.getEntity(returnType);\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java"
    }
  }
}