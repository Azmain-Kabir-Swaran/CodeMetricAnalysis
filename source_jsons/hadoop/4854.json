{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectorySnapshottableFeature.java",
  "functionName": "findRenameTargetPath",
  "functionId": "findRenameTargetPath___snapshotRoot-INodeDirectory(modifiers-final)__wn-INodeReference.WithName__snapshotId-int(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
  "functionStartLine": 529,
  "functionEndLine": 555,
  "numCommitsSeen": 83,
  "timeTaken": 3084,
  "changeHistory": [
    "b1c7654ee40b372ed777525a42981c7cf55b5c72",
    "76a621ffd2d66bf012a554f4400091a92a5b473e",
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c"
  ],
  "changeHistoryShort": {
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": "Ymodifierchange",
    "76a621ffd2d66bf012a554f4400091a92a5b473e": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-12594. snapshotDiff fails if the report exceeds the RPC response limit. Contributed by Shashikant Banerjee\n",
      "commitDate": "30/11/17 12:18 PM",
      "commitName": "b1c7654ee40b372ed777525a42981c7cf55b5c72",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "25/10/17 10:54 AM",
      "commitNameOld": "075dd45a24398dcdcddd60da995f0dc152eee321",
      "commitAuthorOld": "Manoj Govindassamy",
      "daysBetweenCommits": 36.1,
      "commitsBetweenForRepo": 293,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n-  private byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n+  public byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n       INodeReference.WithName wn, final int snapshotId) {\n     INode inode \u003d wn.getReferredINode();\n     final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n     while (inode !\u003d null) {\n       if (inode \u003d\u003d snapshotRoot) {\n         return ancestors.toArray(new byte[ancestors.size()][]);\n       }\n       if (inode instanceof INodeReference.WithCount) {\n         inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n       } else {\n         INode parent \u003d inode.getParentReference() !\u003d null ? inode\n             .getParentReference() : inode.getParent();\n         if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n           int sid \u003d parent.asDirectory().searchChild(inode);\n           if (sid \u003c snapshotId) {\n             return null;\n           }\n         }\n         if (!(parent instanceof WithCount)) {\n           ancestors.addFirst(inode.getLocalNameBytes());\n         }\n         inode \u003d parent;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n      INodeReference.WithName wn, final int snapshotId) {\n    INode inode \u003d wn.getReferredINode();\n    final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n    while (inode !\u003d null) {\n      if (inode \u003d\u003d snapshotRoot) {\n        return ancestors.toArray(new byte[ancestors.size()][]);\n      }\n      if (inode instanceof INodeReference.WithCount) {\n        inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n      } else {\n        INode parent \u003d inode.getParentReference() !\u003d null ? inode\n            .getParentReference() : inode.getParent();\n        if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n          int sid \u003d parent.asDirectory().searchChild(inode);\n          if (sid \u003c snapshotId) {\n            return null;\n          }\n        }\n        if (!(parent instanceof WithCount)) {\n          ancestors.addFirst(inode.getLocalNameBytes());\n        }\n        inode \u003d parent;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "76a621ffd2d66bf012a554f4400091a92a5b473e": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 5:08 PM",
      "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 5:08 PM",
          "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/07/14 1:14 PM",
          "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,27 @@\n-  private byte[][] findRenameTargetPath(INodeReference.WithName wn,\n-      final int snapshotId) {\n+  private byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n+      INodeReference.WithName wn, final int snapshotId) {\n     INode inode \u003d wn.getReferredINode();\n     final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n     while (inode !\u003d null) {\n-      if (inode \u003d\u003d this) {\n+      if (inode \u003d\u003d snapshotRoot) {\n         return ancestors.toArray(new byte[ancestors.size()][]);\n       }\n       if (inode instanceof INodeReference.WithCount) {\n         inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n       } else {\n         INode parent \u003d inode.getParentReference() !\u003d null ? inode\n             .getParentReference() : inode.getParent();\n         if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n           int sid \u003d parent.asDirectory().searchChild(inode);\n           if (sid \u003c snapshotId) {\n             return null;\n           }\n         }\n         if (!(parent instanceof WithCount)) {\n           ancestors.addFirst(inode.getLocalNameBytes());\n         }\n         inode \u003d parent;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n      INodeReference.WithName wn, final int snapshotId) {\n    INode inode \u003d wn.getReferredINode();\n    final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n    while (inode !\u003d null) {\n      if (inode \u003d\u003d snapshotRoot) {\n        return ancestors.toArray(new byte[ancestors.size()][]);\n      }\n      if (inode instanceof INodeReference.WithCount) {\n        inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n      } else {\n        INode parent \u003d inode.getParentReference() !\u003d null ? inode\n            .getParentReference() : inode.getParent();\n        if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n          int sid \u003d parent.asDirectory().searchChild(inode);\n          if (sid \u003c snapshotId) {\n            return null;\n          }\n        }\n        if (!(parent instanceof WithCount)) {\n          ancestors.addFirst(inode.getLocalNameBytes());\n        }\n        inode \u003d parent;\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 5:08 PM",
          "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/07/14 1:14 PM",
          "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,27 @@\n-  private byte[][] findRenameTargetPath(INodeReference.WithName wn,\n-      final int snapshotId) {\n+  private byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n+      INodeReference.WithName wn, final int snapshotId) {\n     INode inode \u003d wn.getReferredINode();\n     final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n     while (inode !\u003d null) {\n-      if (inode \u003d\u003d this) {\n+      if (inode \u003d\u003d snapshotRoot) {\n         return ancestors.toArray(new byte[ancestors.size()][]);\n       }\n       if (inode instanceof INodeReference.WithCount) {\n         inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n       } else {\n         INode parent \u003d inode.getParentReference() !\u003d null ? inode\n             .getParentReference() : inode.getParent();\n         if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n           int sid \u003d parent.asDirectory().searchChild(inode);\n           if (sid \u003c snapshotId) {\n             return null;\n           }\n         }\n         if (!(parent instanceof WithCount)) {\n           ancestors.addFirst(inode.getLocalNameBytes());\n         }\n         inode \u003d parent;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n      INodeReference.WithName wn, final int snapshotId) {\n    INode inode \u003d wn.getReferredINode();\n    final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n    while (inode !\u003d null) {\n      if (inode \u003d\u003d snapshotRoot) {\n        return ancestors.toArray(new byte[ancestors.size()][]);\n      }\n      if (inode instanceof INodeReference.WithCount) {\n        inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n      } else {\n        INode parent \u003d inode.getParentReference() !\u003d null ? inode\n            .getParentReference() : inode.getParent();\n        if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n          int sid \u003d parent.asDirectory().searchChild(inode);\n          if (sid \u003c snapshotId) {\n            return null;\n          }\n        }\n        if (!(parent instanceof WithCount)) {\n          ancestors.addFirst(inode.getLocalNameBytes());\n        }\n        inode \u003d parent;\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 5:08 PM",
          "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/07/14 1:14 PM",
          "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,27 @@\n-  private byte[][] findRenameTargetPath(INodeReference.WithName wn,\n-      final int snapshotId) {\n+  private byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n+      INodeReference.WithName wn, final int snapshotId) {\n     INode inode \u003d wn.getReferredINode();\n     final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n     while (inode !\u003d null) {\n-      if (inode \u003d\u003d this) {\n+      if (inode \u003d\u003d snapshotRoot) {\n         return ancestors.toArray(new byte[ancestors.size()][]);\n       }\n       if (inode instanceof INodeReference.WithCount) {\n         inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n       } else {\n         INode parent \u003d inode.getParentReference() !\u003d null ? inode\n             .getParentReference() : inode.getParent();\n         if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n           int sid \u003d parent.asDirectory().searchChild(inode);\n           if (sid \u003c snapshotId) {\n             return null;\n           }\n         }\n         if (!(parent instanceof WithCount)) {\n           ancestors.addFirst(inode.getLocalNameBytes());\n         }\n         inode \u003d parent;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private byte[][] findRenameTargetPath(final INodeDirectory snapshotRoot,\n      INodeReference.WithName wn, final int snapshotId) {\n    INode inode \u003d wn.getReferredINode();\n    final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n    while (inode !\u003d null) {\n      if (inode \u003d\u003d snapshotRoot) {\n        return ancestors.toArray(new byte[ancestors.size()][]);\n      }\n      if (inode instanceof INodeReference.WithCount) {\n        inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n      } else {\n        INode parent \u003d inode.getParentReference() !\u003d null ? inode\n            .getParentReference() : inode.getParent();\n        if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n          int sid \u003d parent.asDirectory().searchChild(inode);\n          if (sid \u003c snapshotId) {\n            return null;\n          }\n        }\n        if (!(parent instanceof WithCount)) {\n          ancestors.addFirst(inode.getLocalNameBytes());\n        }\n        inode \u003d parent;\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldValue": "[wn-INodeReference.WithName, snapshotId-int(modifiers-final)]",
            "newValue": "[snapshotRoot-INodeDirectory(modifiers-final), wn-INodeReference.WithName, snapshotId-int(modifiers-final)]"
          }
        }
      ]
    },
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4667. Capture renamed files/directories in snapshot diff report. Contributed by Jing Zhao and Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604488 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/06/14 3:59 PM",
      "commitName": "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,27 @@\n+  private byte[][] findRenameTargetPath(INodeReference.WithName wn,\n+      final int snapshotId) {\n+    INode inode \u003d wn.getReferredINode();\n+    final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n+    while (inode !\u003d null) {\n+      if (inode \u003d\u003d this) {\n+        return ancestors.toArray(new byte[ancestors.size()][]);\n+      }\n+      if (inode instanceof INodeReference.WithCount) {\n+        inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n+      } else {\n+        INode parent \u003d inode.getParentReference() !\u003d null ? inode\n+            .getParentReference() : inode.getParent();\n+        if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n+          int sid \u003d parent.asDirectory().searchChild(inode);\n+          if (sid \u003c snapshotId) {\n+            return null;\n+          }\n+        }\n+        if (!(parent instanceof WithCount)) {\n+          ancestors.addFirst(inode.getLocalNameBytes());\n+        }\n+        inode \u003d parent;\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private byte[][] findRenameTargetPath(INodeReference.WithName wn,\n      final int snapshotId) {\n    INode inode \u003d wn.getReferredINode();\n    final LinkedList\u003cbyte[]\u003e ancestors \u003d Lists.newLinkedList();\n    while (inode !\u003d null) {\n      if (inode \u003d\u003d this) {\n        return ancestors.toArray(new byte[ancestors.size()][]);\n      }\n      if (inode instanceof INodeReference.WithCount) {\n        inode \u003d ((WithCount) inode).getParentRef(snapshotId);\n      } else {\n        INode parent \u003d inode.getParentReference() !\u003d null ? inode\n            .getParentReference() : inode.getParent();\n        if (parent !\u003d null \u0026\u0026 parent instanceof INodeDirectory) {\n          int sid \u003d parent.asDirectory().searchChild(inode);\n          if (sid \u003c snapshotId) {\n            return null;\n          }\n        }\n        if (!(parent instanceof WithCount)) {\n          ancestors.addFirst(inode.getLocalNameBytes());\n        }\n        inode \u003d parent;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java"
    }
  }
}