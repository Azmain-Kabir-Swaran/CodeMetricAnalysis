{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AggregatedLogDeletionService.java",
  "functionName": "scheduleLogDeletionTask",
  "functionId": "scheduleLogDeletionTask",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
  "functionStartLine": 258,
  "functionEndLine": 277,
  "numCommitsSeen": 14,
  "timeTaken": 1769,
  "changeHistory": [
    "2b39ad26984d641bad57db2cfcc0b7515ef95f46",
    "cb81bac0029fce3a9726df3523f0b692cd3375b8",
    "a42e459b9eba8c79652036e44dceb34d717b665e"
  ],
  "changeHistoryShort": {
    "2b39ad26984d641bad57db2cfcc0b7515ef95f46": "Ybodychange",
    "cb81bac0029fce3a9726df3523f0b692cd3375b8": "Ymultichange(Yexceptionschange,Ybodychange)",
    "a42e459b9eba8c79652036e44dceb34d717b665e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b39ad26984d641bad57db2cfcc0b7515ef95f46": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8584. Several typos in Log Aggregation related classes. Contributed by Szilard Nemeth.\n",
      "commitDate": "30/07/18 10:55 AM",
      "commitName": "2b39ad26984d641bad57db2cfcc0b7515ef95f46",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "30/11/17 10:39 AM",
      "commitNameOld": "5cfaee2e6db8b2ac55708de0968ff5539ee3bd76",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 241.97,
      "commitsBetweenForRepo": 2233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void scheduleLogDeletionTask() throws IOException {\n     Configuration conf \u003d getConfig();\n     if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n         YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n       // Log aggregation is not enabled so don\u0027t bother\n       return;\n     }\n     long retentionSecs \u003d conf.getLong(\n         YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n         YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n     if (retentionSecs \u003c 0) {\n       LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n           + \" too small (\" + retentionSecs + \")\");\n       return;\n     }\n     setLogAggCheckIntervalMsecs(retentionSecs);\n-    task \u003d new LogDeletionTask(conf, retentionSecs, creatRMClient());\n+    task \u003d new LogDeletionTask(conf, retentionSecs, createRMClient());\n     timer \u003d new Timer();\n     timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void scheduleLogDeletionTask() throws IOException {\n    Configuration conf \u003d getConfig();\n    if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n      // Log aggregation is not enabled so don\u0027t bother\n      return;\n    }\n    long retentionSecs \u003d conf.getLong(\n        YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n    if (retentionSecs \u003c 0) {\n      LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n          + \" too small (\" + retentionSecs + \")\");\n      return;\n    }\n    setLogAggCheckIntervalMsecs(retentionSecs);\n    task \u003d new LogDeletionTask(conf, retentionSecs, createRMClient());\n    timer \u003d new Timer();\n    timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
      "extendedDetails": {}
    },
    "cb81bac0029fce3a9726df3523f0b692cd3375b8": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-2583. Modified AggregatedLogDeletionService to be able to delete rolling aggregated logs. Contributed by Xuan Gong.\n",
      "commitDate": "10/10/14 12:11 AM",
      "commitName": "cb81bac0029fce3a9726df3523f0b692cd3375b8",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-2583. Modified AggregatedLogDeletionService to be able to delete rolling aggregated logs. Contributed by Xuan Gong.\n",
          "commitDate": "10/10/14 12:11 AM",
          "commitName": "cb81bac0029fce3a9726df3523f0b692cd3375b8",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/07/13 12:20 PM",
          "commitNameOld": "a42e459b9eba8c79652036e44dceb34d717b665e",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 443.49,
          "commitsBetweenForRepo": 3290,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private void scheduleLogDeletionTask() {\n+  private void scheduleLogDeletionTask() throws IOException {\n     Configuration conf \u003d getConfig();\n     if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n         YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n       // Log aggregation is not enabled so don\u0027t bother\n       return;\n     }\n     long retentionSecs \u003d conf.getLong(\n         YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n         YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n     if (retentionSecs \u003c 0) {\n       LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n           + \" too small (\" + retentionSecs + \")\");\n       return;\n     }\n     setLogAggCheckIntervalMsecs(retentionSecs);\n-    TimerTask task \u003d new LogDeletionTask(conf, retentionSecs);\n+    task \u003d new LogDeletionTask(conf, retentionSecs, creatRMClient());\n     timer \u003d new Timer();\n     timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void scheduleLogDeletionTask() throws IOException {\n    Configuration conf \u003d getConfig();\n    if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n      // Log aggregation is not enabled so don\u0027t bother\n      return;\n    }\n    long retentionSecs \u003d conf.getLong(\n        YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n    if (retentionSecs \u003c 0) {\n      LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n          + \" too small (\" + retentionSecs + \")\");\n      return;\n    }\n    setLogAggCheckIntervalMsecs(retentionSecs);\n    task \u003d new LogDeletionTask(conf, retentionSecs, creatRMClient());\n    timer \u003d new Timer();\n    timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2583. Modified AggregatedLogDeletionService to be able to delete rolling aggregated logs. Contributed by Xuan Gong.\n",
          "commitDate": "10/10/14 12:11 AM",
          "commitName": "cb81bac0029fce3a9726df3523f0b692cd3375b8",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/07/13 12:20 PM",
          "commitNameOld": "a42e459b9eba8c79652036e44dceb34d717b665e",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 443.49,
          "commitsBetweenForRepo": 3290,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private void scheduleLogDeletionTask() {\n+  private void scheduleLogDeletionTask() throws IOException {\n     Configuration conf \u003d getConfig();\n     if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n         YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n       // Log aggregation is not enabled so don\u0027t bother\n       return;\n     }\n     long retentionSecs \u003d conf.getLong(\n         YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n         YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n     if (retentionSecs \u003c 0) {\n       LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n           + \" too small (\" + retentionSecs + \")\");\n       return;\n     }\n     setLogAggCheckIntervalMsecs(retentionSecs);\n-    TimerTask task \u003d new LogDeletionTask(conf, retentionSecs);\n+    task \u003d new LogDeletionTask(conf, retentionSecs, creatRMClient());\n     timer \u003d new Timer();\n     timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void scheduleLogDeletionTask() throws IOException {\n    Configuration conf \u003d getConfig();\n    if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n      // Log aggregation is not enabled so don\u0027t bother\n      return;\n    }\n    long retentionSecs \u003d conf.getLong(\n        YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n    if (retentionSecs \u003c 0) {\n      LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n          + \" too small (\" + retentionSecs + \")\");\n      return;\n    }\n    setLogAggCheckIntervalMsecs(retentionSecs);\n    task \u003d new LogDeletionTask(conf, retentionSecs, creatRMClient());\n    timer \u003d new Timer();\n    timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java",
          "extendedDetails": {}
        }
      ]
    },
    "a42e459b9eba8c79652036e44dceb34d717b665e": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5356. Ability to refresh aggregated log retention period and check interval. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506226 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 12:20 PM",
      "commitName": "a42e459b9eba8c79652036e44dceb34d717b665e",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,20 @@\n+  private void scheduleLogDeletionTask() {\n+    Configuration conf \u003d getConfig();\n+    if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n+        YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n+      // Log aggregation is not enabled so don\u0027t bother\n+      return;\n+    }\n+    long retentionSecs \u003d conf.getLong(\n+        YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n+        YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n+    if (retentionSecs \u003c 0) {\n+      LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n+          + \" too small (\" + retentionSecs + \")\");\n+      return;\n+    }\n+    setLogAggCheckIntervalMsecs(retentionSecs);\n+    TimerTask task \u003d new LogDeletionTask(conf, retentionSecs);\n+    timer \u003d new Timer();\n+    timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void scheduleLogDeletionTask() {\n    Configuration conf \u003d getConfig();\n    if (!conf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n      // Log aggregation is not enabled so don\u0027t bother\n      return;\n    }\n    long retentionSecs \u003d conf.getLong(\n        YarnConfiguration.LOG_AGGREGATION_RETAIN_SECONDS,\n        YarnConfiguration.DEFAULT_LOG_AGGREGATION_RETAIN_SECONDS);\n    if (retentionSecs \u003c 0) {\n      LOG.info(\"Log Aggregation deletion is disabled because retention is\"\n          + \" too small (\" + retentionSecs + \")\");\n      return;\n    }\n    setLogAggCheckIntervalMsecs(retentionSecs);\n    TimerTask task \u003d new LogDeletionTask(conf, retentionSecs);\n    timer \u003d new Timer();\n    timer.scheduleAtFixedRate(task, 0, checkIntervalMsecs);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java"
    }
  }
}