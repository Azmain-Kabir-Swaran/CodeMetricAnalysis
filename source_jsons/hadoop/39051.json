{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueMetricsCustomResource.java",
  "functionName": "update",
  "functionId": "update___res-Resource__operation-BiFunction__Long,Long,Long__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetricsCustomResource.java",
  "functionStartLine": 55,
  "functionEndLine": 71,
  "numCommitsSeen": 2,
  "timeTaken": 1964,
  "changeHistory": [
    "7b928f19a4521d46ed7c48f8ce5c936acfd6b794",
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8"
  ],
  "changeHistoryShort": {
    "7b928f19a4521d46ed7c48f8ce5c936acfd6b794": "Ymovefromfile",
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b928f19a4521d46ed7c48f8ce5c936acfd6b794": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-9322. Store metrics for custom resource types into FSQueueMetrics and query them in FairSchedulerQueueInfo\n(Contributed by Szilard Nemeth via Daniel Templeton)\n\nChange-Id: I14c12f1265999d62102f2ec5506d90015efeefe8\n",
      "commitDate": "27/02/19 7:43 PM",
      "commitName": "7b928f19a4521d46ed7c48f8ce5c936acfd6b794",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "27/02/19 5:56 PM",
      "commitNameOld": "1779fc57a1183c3cc8ff51fe70fdd2892c44b4fe",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-    private void update(Resource res, BiFunction\u003cLong, Long, Long\u003e operation) {\n-      if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n-        ResourceInformation[] resources \u003d res.getResources();\n+  private void update(Resource res, BiFunction\u003cLong, Long, Long\u003e operation) {\n+    if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n+      ResourceInformation[] resources \u003d res.getResources();\n \n-        for (int i \u003d 2; i \u003c resources.length; i++) {\n-          ResourceInformation resource \u003d resources[i];\n+      for (int i \u003d 2; i \u003c resources.length; i++) {\n+        ResourceInformation resource \u003d resources[i];\n \n-          // Map.merge only applies operation if there is\n-          // a value for the key in the map\n-          if (!values.containsKey(resource.getName())) {\n-            values.put(resource.getName(), 0L);\n-          }\n-          values.merge(resource.getName(),\n-              resource.getValue(), operation);\n+        // Map.merge only applies operation if there is\n+        // a value for the key in the map\n+        if (!values.containsKey(resource.getName())) {\n+          values.put(resource.getName(), 0L);\n         }\n+        values.merge(resource.getName(),\n+            resource.getValue(), operation);\n       }\n-    }\n\\ No newline at end of file\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void update(Resource res, BiFunction\u003cLong, Long, Long\u003e operation) {\n    if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n      ResourceInformation[] resources \u003d res.getResources();\n\n      for (int i \u003d 2; i \u003c resources.length; i++) {\n        ResourceInformation resource \u003d resources[i];\n\n        // Map.merge only applies operation if there is\n        // a value for the key in the map\n        if (!values.containsKey(resource.getName())) {\n          values.put(resource.getName(), 0L);\n        }\n        values.merge(resource.getName(),\n            resource.getValue(), operation);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetricsCustomResource.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetricsForCustomResources.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetricsCustomResource.java",
        "oldMethodName": "update",
        "newMethodName": "update"
      }
    },
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8842. Expose metrics for custom resource types in QueueMetrics. (Contributed by Szilard Nemeth)\n",
      "commitDate": "16/10/18 2:14 PM",
      "commitName": "84e22a6af46db2859d7d2caf192861cae9b6a1a8",
      "commitAuthor": "Haibo Chen",
      "diff": "@@ -0,0 +1,17 @@\n+    private void update(Resource res, BiFunction\u003cLong, Long, Long\u003e operation) {\n+      if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n+        ResourceInformation[] resources \u003d res.getResources();\n+\n+        for (int i \u003d 2; i \u003c resources.length; i++) {\n+          ResourceInformation resource \u003d resources[i];\n+\n+          // Map.merge only applies operation if there is\n+          // a value for the key in the map\n+          if (!values.containsKey(resource.getName())) {\n+            values.put(resource.getName(), 0L);\n+          }\n+          values.merge(resource.getName(),\n+              resource.getValue(), operation);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void update(Resource res, BiFunction\u003cLong, Long, Long\u003e operation) {\n      if (ResourceUtils.getNumberOfKnownResourceTypes() \u003e 2) {\n        ResourceInformation[] resources \u003d res.getResources();\n\n        for (int i \u003d 2; i \u003c resources.length; i++) {\n          ResourceInformation resource \u003d resources[i];\n\n          // Map.merge only applies operation if there is\n          // a value for the key in the map\n          if (!values.containsKey(resource.getName())) {\n            values.put(resource.getName(), 0L);\n          }\n          values.merge(resource.getName(),\n              resource.getValue(), operation);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetricsForCustomResources.java"
    }
  }
}