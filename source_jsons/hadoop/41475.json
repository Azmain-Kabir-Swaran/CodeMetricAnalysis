{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "shouldContinueAssigning",
  "functionId": "shouldContinueAssigning___containers-int__maxResourcesToAssign-Resource__assignedResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1068,
  "functionEndLine": 1082,
  "numCommitsSeen": 226,
  "timeTaken": 2788,
  "changeHistory": [
    "04ded558b03ee0fbf68a611cf1f25508b4447e44"
  ],
  "changeHistoryShort": {
    "04ded558b03ee0fbf68a611cf1f25508b4447e44": "Yintroduced"
  },
  "changeHistoryDetails": {
    "04ded558b03ee0fbf68a611cf1f25508b4447e44": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5035. FairScheduler: Adjust maxAssign dynamically when assignMultiple is turned on. (kasha)\n",
      "commitDate": "26/05/16 2:41 PM",
      "commitName": "04ded558b03ee0fbf68a611cf1f25508b4447e44",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,15 @@\n+  private boolean shouldContinueAssigning(int containers,\n+      Resource maxResourcesToAssign, Resource assignedResource) {\n+    if (!assignMultiple) {\n+      return false; // assignMultiple is not enabled. Allocate one at a time.\n+    }\n+\n+    if (maxAssignDynamic) {\n+      // Using fitsIn to check if the resources assigned so far are less than\n+      // or equal to max resources to assign (half of remaining resources).\n+      // The \"equal to\" part can lead to allocating one extra container.\n+      return Resources.fitsIn(assignedResource, maxResourcesToAssign);\n+    } else {\n+      return maxAssign \u003c\u003d 0 || containers \u003c maxAssign;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldContinueAssigning(int containers,\n      Resource maxResourcesToAssign, Resource assignedResource) {\n    if (!assignMultiple) {\n      return false; // assignMultiple is not enabled. Allocate one at a time.\n    }\n\n    if (maxAssignDynamic) {\n      // Using fitsIn to check if the resources assigned so far are less than\n      // or equal to max resources to assign (half of remaining resources).\n      // The \"equal to\" part can lead to allocating one extra container.\n      return Resources.fitsIn(assignedResource, maxResourcesToAssign);\n    } else {\n      return maxAssign \u003c\u003d 0 || containers \u003c maxAssign;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}