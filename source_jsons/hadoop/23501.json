{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryFileManager.java",
  "functionName": "createHistoryDirs",
  "functionId": "createHistoryDirs___clock-Clock__intervalCheckMillis-long__timeOutMillis-long",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
  "functionStartLine": 630,
  "functionEndLine": 651,
  "numCommitsSeen": 44,
  "timeTaken": 1576,
  "changeHistory": [
    "0d6778d800ff16366911e3b064f3af6162dee2e4",
    "3a6f8b878501cc6961a8388813f33bbeb5ebae34"
  ],
  "changeHistoryShort": {
    "0d6778d800ff16366911e3b064f3af6162dee2e4": "Ybodychange",
    "3a6f8b878501cc6961a8388813f33bbeb5ebae34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0d6778d800ff16366911e3b064f3af6162dee2e4": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6718. add progress log to JHS during startup (haibochen via rkanter)\n",
      "commitDate": "28/09/16 3:41 PM",
      "commitName": "0d6778d800ff16366911e3b064f3af6162dee2e4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "15/07/16 1:30 PM",
      "commitNameOld": "0881ed3fc313abda2896d3f26769690f5ba37346",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 75.09,
      "commitsBetweenForRepo": 465,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   void createHistoryDirs(Clock clock, long intervalCheckMillis,\n       long timeOutMillis) throws IOException {\n     long start \u003d clock.getTime();\n     boolean done \u003d false;\n     int counter \u003d 0;\n     while (!done \u0026\u0026\n         ((timeOutMillis \u003d\u003d -1) || (clock.getTime() - start \u003c timeOutMillis))) {\n       done \u003d tryCreatingHistoryDirs(counter++ % 3 \u003d\u003d 0); // log every 3 attempts, 30sec\n+      if (done) {\n+        break;\n+      }\n       try {\n         Thread.sleep(intervalCheckMillis);\n       } catch (InterruptedException ex) {\n         throw new YarnRuntimeException(ex);\n       }\n     }\n     if (!done) {\n       throw new YarnRuntimeException(\"Timed out \u0027\" + timeOutMillis+\n               \"ms\u0027 waiting for FileSystem to become available\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void createHistoryDirs(Clock clock, long intervalCheckMillis,\n      long timeOutMillis) throws IOException {\n    long start \u003d clock.getTime();\n    boolean done \u003d false;\n    int counter \u003d 0;\n    while (!done \u0026\u0026\n        ((timeOutMillis \u003d\u003d -1) || (clock.getTime() - start \u003c timeOutMillis))) {\n      done \u003d tryCreatingHistoryDirs(counter++ % 3 \u003d\u003d 0); // log every 3 attempts, 30sec\n      if (done) {\n        break;\n      }\n      try {\n        Thread.sleep(intervalCheckMillis);\n      } catch (InterruptedException ex) {\n        throw new YarnRuntimeException(ex);\n      }\n    }\n    if (!done) {\n      throw new YarnRuntimeException(\"Timed out \u0027\" + timeOutMillis+\n              \"ms\u0027 waiting for FileSystem to become available\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
      "extendedDetails": {}
    },
    "3a6f8b878501cc6961a8388813f33bbeb5ebae34": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5724. JobHistoryServer does not start if HDFS is not running. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1558852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/01/14 9:10 AM",
      "commitName": "3a6f8b878501cc6961a8388813f33bbeb5ebae34",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,19 @@\n+  void createHistoryDirs(Clock clock, long intervalCheckMillis,\n+      long timeOutMillis) throws IOException {\n+    long start \u003d clock.getTime();\n+    boolean done \u003d false;\n+    int counter \u003d 0;\n+    while (!done \u0026\u0026\n+        ((timeOutMillis \u003d\u003d -1) || (clock.getTime() - start \u003c timeOutMillis))) {\n+      done \u003d tryCreatingHistoryDirs(counter++ % 3 \u003d\u003d 0); // log every 3 attempts, 30sec\n+      try {\n+        Thread.sleep(intervalCheckMillis);\n+      } catch (InterruptedException ex) {\n+        throw new YarnRuntimeException(ex);\n+      }\n+    }\n+    if (!done) {\n+      throw new YarnRuntimeException(\"Timed out \u0027\" + timeOutMillis+\n+              \"ms\u0027 waiting for FileSystem to become available\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void createHistoryDirs(Clock clock, long intervalCheckMillis,\n      long timeOutMillis) throws IOException {\n    long start \u003d clock.getTime();\n    boolean done \u003d false;\n    int counter \u003d 0;\n    while (!done \u0026\u0026\n        ((timeOutMillis \u003d\u003d -1) || (clock.getTime() - start \u003c timeOutMillis))) {\n      done \u003d tryCreatingHistoryDirs(counter++ % 3 \u003d\u003d 0); // log every 3 attempts, 30sec\n      try {\n        Thread.sleep(intervalCheckMillis);\n      } catch (InterruptedException ex) {\n        throw new YarnRuntimeException(ex);\n      }\n    }\n    if (!done) {\n      throw new YarnRuntimeException(\"Timed out \u0027\" + timeOutMillis+\n              \"ms\u0027 waiting for FileSystem to become available\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java"
    }
  }
}