{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileOutputCommitter.java",
  "functionName": "commitJob",
  "functionId": "commitJob___context-JobContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
  "functionStartLine": 135,
  "functionEndLine": 137,
  "numCommitsSeen": 11,
  "timeTaken": 4614,
  "changeHistory": [
    "94242c93857a06fb9c56ee571a47d6ca18f00f48",
    "c7fb49b3c5b8aa394f578e644bbc13fc9cbfcaca",
    "ac64df85a92cb99f83b719fba3ffde7bc0eab5d8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "94242c93857a06fb9c56ee571a47d6ca18f00f48": "Ybodychange",
    "c7fb49b3c5b8aa394f578e644bbc13fc9cbfcaca": "Ybodychange",
    "ac64df85a92cb99f83b719fba3ffde7bc0eab5d8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "94242c93857a06fb9c56ee571a47d6ca18f00f48": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3711. Fixed MR AM recovery so that only single selected task output is recovered and thus reduce the unnecessarily bloated recovery time. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/12 4:04 PM",
      "commitName": "94242c93857a06fb9c56ee571a47d6ca18f00f48",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/10/11 6:16 PM",
      "commitNameOld": "c7fb49b3c5b8aa394f578e644bbc13fc9cbfcaca",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 112.95,
      "commitsBetweenForRepo": 675,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,3 @@\n   public void commitJob(JobContext context) throws IOException {\n-    //delete the task temp directory from the current jobtempdir\n-    JobConf conf \u003d context.getJobConf();\n-    Path outputPath \u003d FileOutputFormat.getOutputPath(conf);\n-    if (outputPath !\u003d null) {\n-      FileSystem outputFileSystem \u003d outputPath.getFileSystem(conf);\n-      Path tmpDir \u003d new Path(outputPath, getJobAttemptBaseDirName(context) +\n-          Path.SEPARATOR + FileOutputCommitter.TEMP_DIR_NAME);\n-      FileSystem fileSys \u003d tmpDir.getFileSystem(context.getConfiguration());\n-      if (fileSys.exists(tmpDir)) {\n-        fileSys.delete(tmpDir, true);\n-      } else {\n-        LOG.warn(\"Task temp dir could not be deleted \" + tmpDir);\n-      }\n-\n-      //move the job output to final place\n-      Path jobOutputPath \u003d \n-          new Path(outputPath, getJobAttemptBaseDirName(context));\n-      moveJobOutputs(outputFileSystem, \n-          jobOutputPath, outputPath, jobOutputPath);\n-\n-      // delete the _temporary folder in the output folder\n-      cleanupJob(context);\n-      // check if the output-dir marking is required\n-      if (shouldMarkOutputDir(context.getJobConf())) {\n-        // create a _success file in the output folder\n-        markOutputDirSuccessful(context);\n-      }\n-    }\n+    getWrapped(context).commitJob(context);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext context) throws IOException {\n    getWrapped(context).commitJob(context);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
      "extendedDetails": {}
    },
    "c7fb49b3c5b8aa394f578e644bbc13fc9cbfcaca": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3170. Fixed job output commit for deep hierarchies. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183185 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/10/11 6:16 PM",
      "commitName": "c7fb49b3c5b8aa394f578e644bbc13fc9cbfcaca",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "11/10/11 11:27 AM",
      "commitNameOld": "ac64df85a92cb99f83b719fba3ffde7bc0eab5d8",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.28,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   public void commitJob(JobContext context) throws IOException {\n     //delete the task temp directory from the current jobtempdir\n     JobConf conf \u003d context.getJobConf();\n     Path outputPath \u003d FileOutputFormat.getOutputPath(conf);\n-    FileSystem outputFileSystem \u003d outputPath.getFileSystem(conf);\n-    Path tmpDir \u003d new Path(outputPath, getJobAttemptBaseDirName(context) +\n-        Path.SEPARATOR + FileOutputCommitter.TEMP_DIR_NAME);\n-    FileSystem fileSys \u003d tmpDir.getFileSystem(context.getConfiguration());\n-    if (fileSys.exists(tmpDir)) {\n-      fileSys.delete(tmpDir, true);\n-    } else {\n-      LOG.warn(\"Task temp dir could not be deleted \" + tmpDir);\n-    }\n-    \n-    //move the job output to final place\n-    Path jobOutputPath \u003d \n-        new Path(outputPath, getJobAttemptBaseDirName(context));\n-    moveJobOutputs(outputFileSystem, outputPath, jobOutputPath);\n-    \n-    // delete the _temporary folder in the output folder\n-    cleanupJob(context);\n-    // check if the output-dir marking is required\n-    if (shouldMarkOutputDir(context.getJobConf())) {\n-      // create a _success file in the output folder\n-      markOutputDirSuccessful(context);\n+    if (outputPath !\u003d null) {\n+      FileSystem outputFileSystem \u003d outputPath.getFileSystem(conf);\n+      Path tmpDir \u003d new Path(outputPath, getJobAttemptBaseDirName(context) +\n+          Path.SEPARATOR + FileOutputCommitter.TEMP_DIR_NAME);\n+      FileSystem fileSys \u003d tmpDir.getFileSystem(context.getConfiguration());\n+      if (fileSys.exists(tmpDir)) {\n+        fileSys.delete(tmpDir, true);\n+      } else {\n+        LOG.warn(\"Task temp dir could not be deleted \" + tmpDir);\n+      }\n+\n+      //move the job output to final place\n+      Path jobOutputPath \u003d \n+          new Path(outputPath, getJobAttemptBaseDirName(context));\n+      moveJobOutputs(outputFileSystem, \n+          jobOutputPath, outputPath, jobOutputPath);\n+\n+      // delete the _temporary folder in the output folder\n+      cleanupJob(context);\n+      // check if the output-dir marking is required\n+      if (shouldMarkOutputDir(context.getJobConf())) {\n+        // create a _success file in the output folder\n+        markOutputDirSuccessful(context);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext context) throws IOException {\n    //delete the task temp directory from the current jobtempdir\n    JobConf conf \u003d context.getJobConf();\n    Path outputPath \u003d FileOutputFormat.getOutputPath(conf);\n    if (outputPath !\u003d null) {\n      FileSystem outputFileSystem \u003d outputPath.getFileSystem(conf);\n      Path tmpDir \u003d new Path(outputPath, getJobAttemptBaseDirName(context) +\n          Path.SEPARATOR + FileOutputCommitter.TEMP_DIR_NAME);\n      FileSystem fileSys \u003d tmpDir.getFileSystem(context.getConfiguration());\n      if (fileSys.exists(tmpDir)) {\n        fileSys.delete(tmpDir, true);\n      } else {\n        LOG.warn(\"Task temp dir could not be deleted \" + tmpDir);\n      }\n\n      //move the job output to final place\n      Path jobOutputPath \u003d \n          new Path(outputPath, getJobAttemptBaseDirName(context));\n      moveJobOutputs(outputFileSystem, \n          jobOutputPath, outputPath, jobOutputPath);\n\n      // delete the _temporary folder in the output folder\n      cleanupJob(context);\n      // check if the output-dir marking is required\n      if (shouldMarkOutputDir(context.getJobConf())) {\n        // create a _success file in the output folder\n        markOutputDirSuccessful(context);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
      "extendedDetails": {}
    },
    "ac64df85a92cb99f83b719fba3ffde7bc0eab5d8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3148. Ported MAPREDUCE-2702 to old mapred api for aiding task recovery. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1182008 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/11 11:27 AM",
      "commitName": "ac64df85a92cb99f83b719fba3ffde7bc0eab5d8",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 47.76,
      "commitsBetweenForRepo": 315,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,27 @@\n   public void commitJob(JobContext context) throws IOException {\n+    //delete the task temp directory from the current jobtempdir\n+    JobConf conf \u003d context.getJobConf();\n+    Path outputPath \u003d FileOutputFormat.getOutputPath(conf);\n+    FileSystem outputFileSystem \u003d outputPath.getFileSystem(conf);\n+    Path tmpDir \u003d new Path(outputPath, getJobAttemptBaseDirName(context) +\n+        Path.SEPARATOR + FileOutputCommitter.TEMP_DIR_NAME);\n+    FileSystem fileSys \u003d tmpDir.getFileSystem(context.getConfiguration());\n+    if (fileSys.exists(tmpDir)) {\n+      fileSys.delete(tmpDir, true);\n+    } else {\n+      LOG.warn(\"Task temp dir could not be deleted \" + tmpDir);\n+    }\n+    \n+    //move the job output to final place\n+    Path jobOutputPath \u003d \n+        new Path(outputPath, getJobAttemptBaseDirName(context));\n+    moveJobOutputs(outputFileSystem, outputPath, jobOutputPath);\n+    \n     // delete the _temporary folder in the output folder\n     cleanupJob(context);\n     // check if the output-dir marking is required\n     if (shouldMarkOutputDir(context.getJobConf())) {\n       // create a _success file in the output folder\n       markOutputDirSuccessful(context);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext context) throws IOException {\n    //delete the task temp directory from the current jobtempdir\n    JobConf conf \u003d context.getJobConf();\n    Path outputPath \u003d FileOutputFormat.getOutputPath(conf);\n    FileSystem outputFileSystem \u003d outputPath.getFileSystem(conf);\n    Path tmpDir \u003d new Path(outputPath, getJobAttemptBaseDirName(context) +\n        Path.SEPARATOR + FileOutputCommitter.TEMP_DIR_NAME);\n    FileSystem fileSys \u003d tmpDir.getFileSystem(context.getConfiguration());\n    if (fileSys.exists(tmpDir)) {\n      fileSys.delete(tmpDir, true);\n    } else {\n      LOG.warn(\"Task temp dir could not be deleted \" + tmpDir);\n    }\n    \n    //move the job output to final place\n    Path jobOutputPath \u003d \n        new Path(outputPath, getJobAttemptBaseDirName(context));\n    moveJobOutputs(outputFileSystem, outputPath, jobOutputPath);\n    \n    // delete the _temporary folder in the output folder\n    cleanupJob(context);\n    // check if the output-dir marking is required\n    if (shouldMarkOutputDir(context.getJobConf())) {\n      // create a _success file in the output folder\n      markOutputDirSuccessful(context);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void commitJob(JobContext context) throws IOException {\n    // delete the _temporary folder in the output folder\n    cleanupJob(context);\n    // check if the output-dir marking is required\n    if (shouldMarkOutputDir(context.getJobConf())) {\n      // create a _success file in the output folder\n      markOutputDirSuccessful(context);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void commitJob(JobContext context) throws IOException {\n    // delete the _temporary folder in the output folder\n    cleanupJob(context);\n    // check if the output-dir marking is required\n    if (shouldMarkOutputDir(context.getJobConf())) {\n      // create a _success file in the output folder\n      markOutputDirSuccessful(context);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/FileOutputCommitter.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileOutputCommitter.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,9 @@\n+  public void commitJob(JobContext context) throws IOException {\n+    // delete the _temporary folder in the output folder\n+    cleanupJob(context);\n+    // check if the output-dir marking is required\n+    if (shouldMarkOutputDir(context.getJobConf())) {\n+      // create a _success file in the output folder\n+      markOutputDirSuccessful(context);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext context) throws IOException {\n    // delete the _temporary folder in the output folder\n    cleanupJob(context);\n    // check if the output-dir marking is required\n    if (shouldMarkOutputDir(context.getJobConf())) {\n      // create a _success file in the output folder\n      markOutputDirSuccessful(context);\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/FileOutputCommitter.java"
    }
  }
}