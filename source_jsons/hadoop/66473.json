{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMSimulator.java",
  "functionName": "init",
  "functionId": "init___heartbeatInterval-int__containerList-List__ContainerSimulator____resourceManager-ResourceManager__slsRunnner-SLSRunner__startTime-long__finishTime-long__simUser-String__simQueue-String__tracked-boolean__oldApp-String__baseTimeMS-long__amResource-Resource__nodeLabelExpr-String__params-Map__String,String____appIdAMSim-Map__ApplicationId,AMSimulator__",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
  "functionStartLine": 126,
  "functionEndLine": 146,
  "numCommitsSeen": 98,
  "timeTaken": 7673,
  "changeHistory": [
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
    "16be42d3097c13b17d704e5b6dc8d66bd5ff6d9a",
    "147df300bf00b5f4ed250426b6ccdd69085466da",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": "Ymultichange(Yparameterchange,Ybodychange)",
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": "Ymultichange(Yparameterchange,Ybodychange)",
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf": "Yparameterchange",
    "16be42d3097c13b17d704e5b6dc8d66bd5ff6d9a": "Ymultichange(Yparameterchange,Ybodychange)",
    "147df300bf00b5f4ed250426b6ccdd69085466da": "Ymultichange(Yparameterchange,Ybodychange)",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Ymultichange(Yparameterchange,Ybodychange)",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
      "commitDate": "14/02/19 9:26 AM",
      "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
      "commitAuthor": "bibinchundatt",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
          "commitDate": "14/02/19 9:26 AM",
          "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "31/07/18 9:36 AM",
          "commitNameOld": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 198.03,
          "commitsBetweenForRepo": 1577,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n       String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n-      Resource amResource, String nodeLabelExpr,\n-      Map\u003cString, String\u003e params) {\n+      Resource amResource, String nodeLabelExpr, Map\u003cString, String\u003e params,\n+      Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n     this.amContainerResource \u003d amResource;\n     this.nodeLabelExpression \u003d nodeLabelExpr;\n+    this.appIdToAMSim \u003d appIdAMSim;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource, String nodeLabelExpr, Map\u003cString, String\u003e params,\n      Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.amContainerResource \u003d amResource;\n    this.nodeLabelExpression \u003d nodeLabelExpr;\n    this.appIdToAMSim \u003d appIdAMSim;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {
            "oldValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, baseTimeMS-long, amResource-Resource, nodeLabelExpr-String, params-Map\u003cString,String\u003e]",
            "newValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, baseTimeMS-long, amResource-Resource, nodeLabelExpr-String, params-Map\u003cString,String\u003e, appIdAMSim-Map\u003cApplicationId,AMSimulator\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
          "commitDate": "14/02/19 9:26 AM",
          "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "31/07/18 9:36 AM",
          "commitNameOld": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 198.03,
          "commitsBetweenForRepo": 1577,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n       String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n-      Resource amResource, String nodeLabelExpr,\n-      Map\u003cString, String\u003e params) {\n+      Resource amResource, String nodeLabelExpr, Map\u003cString, String\u003e params,\n+      Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n     this.amContainerResource \u003d amResource;\n     this.nodeLabelExpression \u003d nodeLabelExpr;\n+    this.appIdToAMSim \u003d appIdAMSim;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource, String nodeLabelExpr, Map\u003cString, String\u003e params,\n      Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.amContainerResource \u003d amResource;\n    this.nodeLabelExpression \u003d nodeLabelExpr;\n    this.appIdToAMSim \u003d appIdAMSim;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {}
        }
      ]
    },
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "31/07/18 9:36 AM",
      "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "28/02/18 1:58 AM",
          "commitNameOld": "7af4f34de54f6e667b47374e31fc9328eba869f0",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 153.28,
          "commitsBetweenForRepo": 1701,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n       String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n-      Resource amResource, Map\u003cString, String\u003e params) {\n+      Resource amResource, String nodeLabelExpr,\n+      Map\u003cString, String\u003e params) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n     this.amContainerResource \u003d amResource;\n+    this.nodeLabelExpression \u003d nodeLabelExpr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource, String nodeLabelExpr,\n      Map\u003cString, String\u003e params) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.amContainerResource \u003d amResource;\n    this.nodeLabelExpression \u003d nodeLabelExpr;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {
            "oldValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, baseTimeMS-long, amResource-Resource, params-Map\u003cString,String\u003e]",
            "newValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, baseTimeMS-long, amResource-Resource, nodeLabelExpr-String, params-Map\u003cString,String\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "28/02/18 1:58 AM",
          "commitNameOld": "7af4f34de54f6e667b47374e31fc9328eba869f0",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 153.28,
          "commitsBetweenForRepo": 1701,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n       String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n-      Resource amResource, Map\u003cString, String\u003e params) {\n+      Resource amResource, String nodeLabelExpr,\n+      Map\u003cString, String\u003e params) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n     this.amContainerResource \u003d amResource;\n+    this.nodeLabelExpression \u003d nodeLabelExpr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource, String nodeLabelExpr,\n      Map\u003cString, String\u003e params) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.amContainerResource \u003d amResource;\n    this.nodeLabelExpression \u003d nodeLabelExpr;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {}
        }
      ]
    },
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-7732. Support Generic AM Simulator from SynthGenerator. (Contributed by Young Chen via curino)\n",
      "commitDate": "20/02/18 5:00 PM",
      "commitName": "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "25/01/18 1:06 PM",
      "commitNameOld": "16be42d3097c13b17d704e5b6dc8d66bd5ff6d9a",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 26.16,
      "commitsBetweenForRepo": 172,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n       String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n-      Resource amResource) {\n+      Resource amResource, Map\u003cString, String\u003e params) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n     this.amContainerResource \u003d amResource;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource, Map\u003cString, String\u003e params) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.amContainerResource \u003d amResource;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
      "extendedDetails": {
        "oldValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, baseTimeMS-long, amResource-Resource]",
        "newValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, baseTimeMS-long, amResource-Resource, params-Map\u003cString,String\u003e]"
      }
    },
    "16be42d3097c13b17d704e5b6dc8d66bd5ff6d9a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7798. Refactor SLS Reservation Creation. Contributed by Young Chen.\n",
      "commitDate": "25/01/18 1:06 PM",
      "commitName": "16be42d3097c13b17d704e5b6dc8d66bd5ff6d9a",
      "commitAuthor": "Yufei Gu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7798. Refactor SLS Reservation Creation. Contributed by Young Chen.\n",
          "commitDate": "25/01/18 1:06 PM",
          "commitName": "16be42d3097c13b17d704e5b6dc8d66bd5ff6d9a",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "03/10/17 3:10 PM",
          "commitNameOld": "79e37dc6dba44e7d1d913593304db7a8516056aa",
          "commitAuthorOld": "Yufei Gu",
          "daysBetweenCommits": 113.95,
          "commitsBetweenForRepo": 773,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n-      String simQueue, boolean tracked, String oldApp,\n-      ReservationSubmissionRequest rr, long baseTimeMS,\n-      Resource amContainerResource) {\n+      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n+      Resource amResource) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n-    this.reservationRequest \u003d rr;\n-    this.amContainerResource \u003d amContainerResource;\n+    this.amContainerResource \u003d amResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.amContainerResource \u003d amResource;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {
            "oldValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, rr-ReservationSubmissionRequest, baseTimeMS-long, amContainerResource-Resource]",
            "newValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, baseTimeMS-long, amResource-Resource]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7798. Refactor SLS Reservation Creation. Contributed by Young Chen.\n",
          "commitDate": "25/01/18 1:06 PM",
          "commitName": "16be42d3097c13b17d704e5b6dc8d66bd5ff6d9a",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "03/10/17 3:10 PM",
          "commitNameOld": "79e37dc6dba44e7d1d913593304db7a8516056aa",
          "commitAuthorOld": "Yufei Gu",
          "daysBetweenCommits": 113.95,
          "commitsBetweenForRepo": 773,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n-      String simQueue, boolean tracked, String oldApp,\n-      ReservationSubmissionRequest rr, long baseTimeMS,\n-      Resource amContainerResource) {\n+      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n+      Resource amResource) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n-    this.reservationRequest \u003d rr;\n-    this.amContainerResource \u003d amContainerResource;\n+    this.amContainerResource \u003d amResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.amContainerResource \u003d amResource;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {}
        }
      ]
    },
    "147df300bf00b5f4ed250426b6ccdd69085466da": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5067 Support specifying resources for AM containers in SLS. (Yufei Gu via Haibo Chen)\n",
      "commitDate": "30/06/17 5:03 PM",
      "commitName": "147df300bf00b5f4ed250426b6ccdd69085466da",
      "commitAuthor": "Haibo Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5067 Support specifying resources for AM containers in SLS. (Yufei Gu via Haibo Chen)\n",
          "commitDate": "30/06/17 5:03 PM",
          "commitName": "147df300bf00b5f4ed250426b6ccdd69085466da",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "19/06/17 9:18 PM",
          "commitNameOld": "3369540653a41dd0194b65f5ef1d53225fb97ba8",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 10.82,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  public void init(int id, int heartbeatInterval,\n+  public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n       String simQueue, boolean tracked, String oldApp,\n-      ReservationSubmissionRequest rr, long baseTimeMS) {\n+      ReservationSubmissionRequest rr, long baseTimeMS,\n+      Resource amContainerResource) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n     this.reservationRequest \u003d rr;\n+    this.amContainerResource \u003d amContainerResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp,\n      ReservationSubmissionRequest rr, long baseTimeMS,\n      Resource amContainerResource) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.reservationRequest \u003d rr;\n    this.amContainerResource \u003d amContainerResource;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {
            "oldValue": "[id-int, heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, rr-ReservationSubmissionRequest, baseTimeMS-long]",
            "newValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, rr-ReservationSubmissionRequest, baseTimeMS-long, amContainerResource-Resource]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5067 Support specifying resources for AM containers in SLS. (Yufei Gu via Haibo Chen)\n",
          "commitDate": "30/06/17 5:03 PM",
          "commitName": "147df300bf00b5f4ed250426b6ccdd69085466da",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "19/06/17 9:18 PM",
          "commitNameOld": "3369540653a41dd0194b65f5ef1d53225fb97ba8",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 10.82,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  public void init(int id, int heartbeatInterval,\n+  public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n       SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n       String simQueue, boolean tracked, String oldApp,\n-      ReservationSubmissionRequest rr, long baseTimeMS) {\n+      ReservationSubmissionRequest rr, long baseTimeMS,\n+      Resource amContainerResource) {\n     super.init(startTime, startTime + 1000000L * heartbeatInterval,\n         heartbeatInterval);\n     this.user \u003d simUser;\n     this.rm \u003d resourceManager;\n     this.se \u003d slsRunnner;\n     this.queue \u003d simQueue;\n     this.oldAppId \u003d oldApp;\n     this.isTracked \u003d tracked;\n     this.baselineTimeMS \u003d baseTimeMS;\n     this.traceStartTimeMS \u003d startTime;\n     this.traceFinishTimeMS \u003d finishTime;\n     this.reservationRequest \u003d rr;\n+    this.amContainerResource \u003d amContainerResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp,\n      ReservationSubmissionRequest rr, long baseTimeMS,\n      Resource amContainerResource) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.reservationRequest \u003d rr;\n    this.amContainerResource \u003d amContainerResource;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {}
        }
      ]
    },
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
          "commitDate": "20/04/17 9:54 PM",
          "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "29/03/17 4:18 PM",
          "commitNameOld": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 22.23,
          "commitsBetweenForRepo": 128,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  public void init(int id, int heartbeatInterval, \n-      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n-      long traceStartTime, long traceFinishTime, String user, String queue, \n-      boolean isTracked, String oldAppId) {\n-    super.init(traceStartTime, traceStartTime + 1000000L * heartbeatInterval,\n-            heartbeatInterval);\n-    this.user \u003d user;\n-    this.rm \u003d rm;\n-    this.se \u003d se;\n-    this.user \u003d user;\n-    this.queue \u003d queue;\n-    this.oldAppId \u003d oldAppId;\n-    this.isTracked \u003d isTracked;\n-    this.traceStartTimeMS \u003d traceStartTime;\n-    this.traceFinishTimeMS \u003d traceFinishTime;\n+  public void init(int id, int heartbeatInterval,\n+      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n+      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n+      String simQueue, boolean tracked, String oldApp,\n+      ReservationSubmissionRequest rr, long baseTimeMS) {\n+    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n+        heartbeatInterval);\n+    this.user \u003d simUser;\n+    this.rm \u003d resourceManager;\n+    this.se \u003d slsRunnner;\n+    this.queue \u003d simQueue;\n+    this.oldAppId \u003d oldApp;\n+    this.isTracked \u003d tracked;\n+    this.baselineTimeMS \u003d baseTimeMS;\n+    this.traceStartTimeMS \u003d startTime;\n+    this.traceFinishTimeMS \u003d finishTime;\n+    this.reservationRequest \u003d rr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int id, int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp,\n      ReservationSubmissionRequest rr, long baseTimeMS) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.reservationRequest \u003d rr;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {
            "oldValue": "[id-int, heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, rm-ResourceManager, se-SLSRunner, traceStartTime-long, traceFinishTime-long, user-String, queue-String, isTracked-boolean, oldAppId-String]",
            "newValue": "[id-int, heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, resourceManager-ResourceManager, slsRunnner-SLSRunner, startTime-long, finishTime-long, simUser-String, simQueue-String, tracked-boolean, oldApp-String, rr-ReservationSubmissionRequest, baseTimeMS-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
          "commitDate": "20/04/17 9:54 PM",
          "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "29/03/17 4:18 PM",
          "commitNameOld": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 22.23,
          "commitsBetweenForRepo": 128,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  public void init(int id, int heartbeatInterval, \n-      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n-      long traceStartTime, long traceFinishTime, String user, String queue, \n-      boolean isTracked, String oldAppId) {\n-    super.init(traceStartTime, traceStartTime + 1000000L * heartbeatInterval,\n-            heartbeatInterval);\n-    this.user \u003d user;\n-    this.rm \u003d rm;\n-    this.se \u003d se;\n-    this.user \u003d user;\n-    this.queue \u003d queue;\n-    this.oldAppId \u003d oldAppId;\n-    this.isTracked \u003d isTracked;\n-    this.traceStartTimeMS \u003d traceStartTime;\n-    this.traceFinishTimeMS \u003d traceFinishTime;\n+  public void init(int id, int heartbeatInterval,\n+      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n+      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n+      String simQueue, boolean tracked, String oldApp,\n+      ReservationSubmissionRequest rr, long baseTimeMS) {\n+    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n+        heartbeatInterval);\n+    this.user \u003d simUser;\n+    this.rm \u003d resourceManager;\n+    this.se \u003d slsRunnner;\n+    this.queue \u003d simQueue;\n+    this.oldAppId \u003d oldApp;\n+    this.isTracked \u003d tracked;\n+    this.baselineTimeMS \u003d baseTimeMS;\n+    this.traceStartTimeMS \u003d startTime;\n+    this.traceFinishTimeMS \u003d finishTime;\n+    this.reservationRequest \u003d rr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int id, int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp,\n      ReservationSubmissionRequest rr, long baseTimeMS) {\n    super.init(startTime, startTime + 1000000L * heartbeatInterval,\n        heartbeatInterval);\n    this.user \u003d simUser;\n    this.rm \u003d resourceManager;\n    this.se \u003d slsRunnner;\n    this.queue \u003d simQueue;\n    this.oldAppId \u003d oldApp;\n    this.isTracked \u003d tracked;\n    this.baselineTimeMS \u003d baseTimeMS;\n    this.traceStartTimeMS \u003d startTime;\n    this.traceFinishTimeMS \u003d finishTime;\n    this.reservationRequest \u003d rr;\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java",
          "extendedDetails": {}
        }
      ]
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,16 @@\n+  public void init(int id, int heartbeatInterval, \n+      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n+      long traceStartTime, long traceFinishTime, String user, String queue, \n+      boolean isTracked, String oldAppId) {\n+    super.init(traceStartTime, traceStartTime + 1000000L * heartbeatInterval,\n+            heartbeatInterval);\n+    this.user \u003d user;\n+    this.rm \u003d rm;\n+    this.se \u003d se;\n+    this.user \u003d user;\n+    this.queue \u003d queue;\n+    this.oldAppId \u003d oldAppId;\n+    this.isTracked \u003d isTracked;\n+    this.traceStartTimeMS \u003d traceStartTime;\n+    this.traceFinishTimeMS \u003d traceFinishTime;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(int id, int heartbeatInterval, \n      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n      long traceStartTime, long traceFinishTime, String user, String queue, \n      boolean isTracked, String oldAppId) {\n    super.init(traceStartTime, traceStartTime + 1000000L * heartbeatInterval,\n            heartbeatInterval);\n    this.user \u003d user;\n    this.rm \u003d rm;\n    this.se \u003d se;\n    this.user \u003d user;\n    this.queue \u003d queue;\n    this.oldAppId \u003d oldAppId;\n    this.isTracked \u003d isTracked;\n    this.traceStartTimeMS \u003d traceStartTime;\n    this.traceFinishTimeMS \u003d traceFinishTime;\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/AMSimulator.java"
    }
  }
}