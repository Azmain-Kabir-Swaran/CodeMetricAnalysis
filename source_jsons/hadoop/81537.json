{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TraceUtils.java",
  "functionName": "wrapHadoopConf",
  "functionId": "wrapHadoopConf___prefix-String(modifiers-final)__conf-Configuration(modifiers-final)__extraConfig-List__ConfigurationPair__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
  "functionStartLine": 42,
  "functionEndLine": 74,
  "numCommitsSeen": 13,
  "timeTaken": 4421,
  "changeHistory": [
    "0a74610d1c7c7f183d2b2d0b7a775add53cf6c94",
    "892ade689f9bcce76daae8f66fc00a49bee8548e",
    "90b384564875bb353224630e501772b46d4ca9c5",
    "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b",
    "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
    "7f6ed7fe365166e8075359f1d0ad035fa876c70f",
    "55302ccfba199ddf070119be30df06afd2511e05",
    "6962510f729717f776929708813f99a28e582f34"
  ],
  "changeHistoryShort": {
    "0a74610d1c7c7f183d2b2d0b7a775add53cf6c94": "Ybodychange",
    "892ade689f9bcce76daae8f66fc00a49bee8548e": "Ybodychange",
    "90b384564875bb353224630e501772b46d4ca9c5": "Ybodychange",
    "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b": "Ymultichange(Yparameterchange,Ybodychange)",
    "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "7f6ed7fe365166e8075359f1d0ad035fa876c70f": "Ybodychange",
    "55302ccfba199ddf070119be30df06afd2511e05": "Ymultichange(Yparameterchange,Ybodychange)",
    "6962510f729717f776929708813f99a28e582f34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a74610d1c7c7f183d2b2d0b7a775add53cf6c94": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11393. Revert HADOOP_PREFIX, go back to HADOOP_HOME (aw)\n",
      "commitDate": "31/03/16 7:51 AM",
      "commitName": "0a74610d1c7c7f183d2b2d0b7a775add53cf6c94",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "28/09/15 7:42 AM",
      "commitNameOld": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 185.01,
      "commitsBetweenForRepo": 1239,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public static HTraceConfiguration wrapHadoopConf(final String prefix,\n         final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n       @Override\n       public String get(String key) {\n         String ret \u003d getInternal(prefix + key);\n         if (ret !\u003d null) {\n           return ret;\n         }\n-        return getInternal(DEFAULT_HADOOP_PREFIX  + key);\n+        return getInternal(DEFAULT_HADOOP_TRACE_PREFIX  + key);\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n         String ret \u003d get(key);\n         if (ret !\u003d null) {\n           return ret;\n         }\n         return defaultValue;\n       }\n \n       private String getInternal(String key) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n         return conf.get(key);\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final String prefix,\n        final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        String ret \u003d getInternal(prefix + key);\n        if (ret !\u003d null) {\n          return ret;\n        }\n        return getInternal(DEFAULT_HADOOP_TRACE_PREFIX  + key);\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        String ret \u003d get(key);\n        if (ret !\u003d null) {\n          return ret;\n        }\n        return defaultValue;\n      }\n\n      private String getInternal(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(key);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
      "extendedDetails": {}
    },
    "892ade689f9bcce76daae8f66fc00a49bee8548e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9080. Update htrace version to 4.0.1 (cmccabe)\n",
      "commitDate": "28/09/15 7:42 AM",
      "commitName": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "05/05/15 5:40 PM",
      "commitNameOld": "90b384564875bb353224630e501772b46d4ca9c5",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 145.58,
      "commitsBetweenForRepo": 1015,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,33 @@\n   public static HTraceConfiguration wrapHadoopConf(final String prefix,\n         final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n       @Override\n       public String get(String key) {\n-        return get(key, \"\");\n+        String ret \u003d getInternal(prefix + key);\n+        if (ret !\u003d null) {\n+          return ret;\n+        }\n+        return getInternal(DEFAULT_HADOOP_PREFIX  + key);\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n-        String prefixedKey \u003d prefix + key;\n-        if (extraMap.containsKey(prefixedKey)) {\n-          return extraMap.get(prefixedKey);\n+        String ret \u003d get(key);\n+        if (ret !\u003d null) {\n+          return ret;\n         }\n-        return conf.get(prefixedKey, defaultValue);\n+        return defaultValue;\n+      }\n+\n+      private String getInternal(String key) {\n+        if (extraMap.containsKey(key)) {\n+          return extraMap.get(key);\n+        }\n+        return conf.get(key);\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final String prefix,\n        final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        String ret \u003d getInternal(prefix + key);\n        if (ret !\u003d null) {\n          return ret;\n        }\n        return getInternal(DEFAULT_HADOOP_PREFIX  + key);\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        String ret \u003d get(key);\n        if (ret !\u003d null) {\n          return ret;\n        }\n        return defaultValue;\n      }\n\n      private String getInternal(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(key);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
      "extendedDetails": {}
    },
    "90b384564875bb353224630e501772b46d4ca9c5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11912. Extra configuration key used in TraceUtils should respect prefix (Masatake Iwasaki via Colin P. McCabe)\n",
      "commitDate": "05/05/15 5:40 PM",
      "commitName": "90b384564875bb353224630e501772b46d4ca9c5",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "01/05/15 11:19 AM",
      "commitNameOld": "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 4.26,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n   public static HTraceConfiguration wrapHadoopConf(final String prefix,\n         final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n       @Override\n       public String get(String key) {\n-        if (extraMap.containsKey(key)) {\n-          return extraMap.get(key);\n-        }\n-        return conf.get(prefix + key, \"\");\n+        return get(key, \"\");\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n-        if (extraMap.containsKey(key)) {\n-          return extraMap.get(key);\n+        String prefixedKey \u003d prefix + key;\n+        if (extraMap.containsKey(prefixedKey)) {\n+          return extraMap.get(prefixedKey);\n         }\n-        return conf.get(prefix + key, defaultValue);\n+        return conf.get(prefixedKey, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final String prefix,\n        final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        return get(key, \"\");\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        String prefixedKey \u003d prefix + key;\n        if (extraMap.containsKey(prefixedKey)) {\n          return extraMap.get(prefixedKey);\n        }\n        return conf.get(prefixedKey, defaultValue);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
      "extendedDetails": {}
    },
    "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8213. DFSClient should use hdfs.client.htrace HTrace configuration prefix rather than hadoop.htrace (cmccabe)\n",
      "commitDate": "01/05/15 11:19 AM",
      "commitName": "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8213. DFSClient should use hdfs.client.htrace HTrace configuration prefix rather than hadoop.htrace (cmccabe)\n",
          "commitDate": "01/05/15 11:19 AM",
          "commitName": "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "30/01/15 4:01 PM",
          "commitNameOld": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 90.76,
          "commitsBetweenForRepo": 835,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n-          List\u003cConfigurationPair\u003e extraConfig) {\n+  public static HTraceConfiguration wrapHadoopConf(final String prefix,\n+        final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n       @Override\n       public String get(String key) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n-        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n+        return conf.get(prefix + key, \"\");\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n-        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n+        return conf.get(prefix + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final String prefix,\n        final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(prefix + key, \"\");\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(prefix + key, defaultValue);\n      }\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration(modifiers-final), extraConfig-List\u003cConfigurationPair\u003e]",
            "newValue": "[prefix-String(modifiers-final), conf-Configuration(modifiers-final), extraConfig-List\u003cConfigurationPair\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8213. DFSClient should use hdfs.client.htrace HTrace configuration prefix rather than hadoop.htrace (cmccabe)\n",
          "commitDate": "01/05/15 11:19 AM",
          "commitName": "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "30/01/15 4:01 PM",
          "commitNameOld": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 90.76,
          "commitsBetweenForRepo": 835,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n-          List\u003cConfigurationPair\u003e extraConfig) {\n+  public static HTraceConfiguration wrapHadoopConf(final String prefix,\n+        final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n       @Override\n       public String get(String key) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n-        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n+        return conf.get(prefix + key, \"\");\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n-        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n+        return conf.get(prefix + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final String prefix,\n        final Configuration conf, List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(prefix + key, \"\");\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(prefix + key, defaultValue);\n      }\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-11498. Bump the version of HTrace to 3.1.0-incubating (Masatake Iwasaki via Colin P. McCabe)\n",
      "commitDate": "30/01/15 4:01 PM",
      "commitName": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-11498. Bump the version of HTrace to 3.1.0-incubating (Masatake Iwasaki via Colin P. McCabe)\n",
          "commitDate": "30/01/15 4:01 PM",
          "commitName": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "30/01/15 3:21 PM",
          "commitNameOld": "8dc59cb9e0f8d300991a437c1b42f1e4e495cfe4",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,24 @@\n-  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n+  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n           List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n-      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.htrace.\";\n-\n       @Override\n       public String get(String key) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n-        return conf.get(HTRACE_CONF_PREFIX + key);\n+        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n         return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n          List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n      }\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/SpanReceiverHost.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
            "oldMethodName": "wrapHadoopConf",
            "newMethodName": "wrapHadoopConf"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-11498. Bump the version of HTrace to 3.1.0-incubating (Masatake Iwasaki via Colin P. McCabe)\n",
          "commitDate": "30/01/15 4:01 PM",
          "commitName": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "30/01/15 3:21 PM",
          "commitNameOld": "8dc59cb9e0f8d300991a437c1b42f1e4e495cfe4",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,24 @@\n-  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n+  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n           List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n-      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.htrace.\";\n-\n       @Override\n       public String get(String key) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n-        return conf.get(HTRACE_CONF_PREFIX + key);\n+        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n         return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n          List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n      }\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11498. Bump the version of HTrace to 3.1.0-incubating (Masatake Iwasaki via Colin P. McCabe)\n",
          "commitDate": "30/01/15 4:01 PM",
          "commitName": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "30/01/15 3:21 PM",
          "commitNameOld": "8dc59cb9e0f8d300991a437c1b42f1e4e495cfe4",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,24 @@\n-  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n+  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n           List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n-      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.htrace.\";\n-\n       @Override\n       public String get(String key) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n-        return conf.get(HTRACE_CONF_PREFIX + key);\n+        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n         return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n          List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, \"\");\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n      }\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/TraceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "7f6ed7fe365166e8075359f1d0ad035fa876c70f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7055. Add tracing to DFSInputStream (cmccabe)\n",
      "commitDate": "03/10/14 1:35 PM",
      "commitName": "7f6ed7fe365166e8075359f1d0ad035fa876c70f",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "26/09/14 10:30 AM",
      "commitNameOld": "55302ccfba199ddf070119be30df06afd2511e05",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 7.13,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n           List\u003cConfigurationPair\u003e extraConfig) {\n     final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n     for (ConfigurationPair pair : extraConfig) {\n       extraMap.put(pair.getKey(), pair.getValue());\n     }\n     return new HTraceConfiguration() {\n-      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.\";\n+      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.htrace.\";\n \n       @Override\n       public String get(String key) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n         return conf.get(HTRACE_CONF_PREFIX + key);\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n         if (extraMap.containsKey(key)) {\n           return extraMap.get(key);\n         }\n         return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n          List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.htrace.\";\n\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key);\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/SpanReceiverHost.java",
      "extendedDetails": {}
    },
    "55302ccfba199ddf070119be30df06afd2511e05": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6956. Allow dynamically changing the tracing level in Hadoop servers (cmccabe)\n",
      "commitDate": "26/09/14 10:30 AM",
      "commitName": "55302ccfba199ddf070119be30df06afd2511e05",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6956. Allow dynamically changing the tracing level in Hadoop servers (cmccabe)\n",
          "commitDate": "26/09/14 10:30 AM",
          "commitName": "55302ccfba199ddf070119be30df06afd2511e05",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "27/08/14 2:12 PM",
          "commitNameOld": "6962510f729717f776929708813f99a28e582f34",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 29.85,
          "commitsBetweenForRepo": 307,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,26 @@\n-  private static HTraceConfiguration wrapHadoopConf(final Configuration conf) {\n+  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n+          List\u003cConfigurationPair\u003e extraConfig) {\n+    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n+    for (ConfigurationPair pair : extraConfig) {\n+      extraMap.put(pair.getKey(), pair.getValue());\n+    }\n     return new HTraceConfiguration() {\n       public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.\";\n \n       @Override\n       public String get(String key) {\n+        if (extraMap.containsKey(key)) {\n+          return extraMap.get(key);\n+        }\n         return conf.get(HTRACE_CONF_PREFIX + key);\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n+        if (extraMap.containsKey(key)) {\n+          return extraMap.get(key);\n+        }\n         return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n          List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.\";\n\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key);\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n      }\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/SpanReceiverHost.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration(modifiers-final)]",
            "newValue": "[conf-Configuration(modifiers-final), extraConfig-List\u003cConfigurationPair\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6956. Allow dynamically changing the tracing level in Hadoop servers (cmccabe)\n",
          "commitDate": "26/09/14 10:30 AM",
          "commitName": "55302ccfba199ddf070119be30df06afd2511e05",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "27/08/14 2:12 PM",
          "commitNameOld": "6962510f729717f776929708813f99a28e582f34",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 29.85,
          "commitsBetweenForRepo": 307,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,26 @@\n-  private static HTraceConfiguration wrapHadoopConf(final Configuration conf) {\n+  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n+          List\u003cConfigurationPair\u003e extraConfig) {\n+    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n+    for (ConfigurationPair pair : extraConfig) {\n+      extraMap.put(pair.getKey(), pair.getValue());\n+    }\n     return new HTraceConfiguration() {\n       public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.\";\n \n       @Override\n       public String get(String key) {\n+        if (extraMap.containsKey(key)) {\n+          return extraMap.get(key);\n+        }\n         return conf.get(HTRACE_CONF_PREFIX + key);\n       }\n \n       @Override\n       public String get(String key, String defaultValue) {\n+        if (extraMap.containsKey(key)) {\n+          return extraMap.get(key);\n+        }\n         return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n       }\n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static HTraceConfiguration wrapHadoopConf(final Configuration conf,\n          List\u003cConfigurationPair\u003e extraConfig) {\n    final HashMap\u003cString, String\u003e extraMap \u003d new HashMap\u003cString, String\u003e();\n    for (ConfigurationPair pair : extraConfig) {\n      extraMap.put(pair.getKey(), pair.getValue());\n    }\n    return new HTraceConfiguration() {\n      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.\";\n\n      @Override\n      public String get(String key) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key);\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        if (extraMap.containsKey(key)) {\n          return extraMap.get(key);\n        }\n        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n      }\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/SpanReceiverHost.java",
          "extendedDetails": {}
        }
      ]
    },
    "6962510f729717f776929708813f99a28e582f34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6879. Adding tracing to Hadoop RPC.  Contributed by Masatake Iwasaki.\n",
      "commitDate": "27/08/14 2:12 PM",
      "commitName": "6962510f729717f776929708813f99a28e582f34",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,15 @@\n+  private static HTraceConfiguration wrapHadoopConf(final Configuration conf) {\n+    return new HTraceConfiguration() {\n+      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.\";\n+\n+      @Override\n+      public String get(String key) {\n+        return conf.get(HTRACE_CONF_PREFIX + key);\n+      }\n+\n+      @Override\n+      public String get(String key, String defaultValue) {\n+        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static HTraceConfiguration wrapHadoopConf(final Configuration conf) {\n    return new HTraceConfiguration() {\n      public static final String HTRACE_CONF_PREFIX \u003d \"hadoop.\";\n\n      @Override\n      public String get(String key) {\n        return conf.get(HTRACE_CONF_PREFIX + key);\n      }\n\n      @Override\n      public String get(String key, String defaultValue) {\n        return conf.get(HTRACE_CONF_PREFIX + key, defaultValue);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/SpanReceiverHost.java"
    }
  }
}