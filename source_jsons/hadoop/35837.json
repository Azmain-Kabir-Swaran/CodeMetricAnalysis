{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMNodeImpl.java",
  "functionName": "handleReportedIncreasedContainers",
  "functionId": "handleReportedIncreasedContainers___reportedIncreasedContainers-List__Container__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
  "functionStartLine": 1364,
  "functionEndLine": 1390,
  "numCommitsSeen": 92,
  "timeTaken": 3719,
  "changeHistory": [
    "89cab1ba5f0671f8ef30dbe7432079c18362b434"
  ],
  "changeHistoryShort": {
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Yintroduced"
  },
  "changeHistoryDetails": {
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,27 @@\n+  private void handleReportedIncreasedContainers(\n+      List\u003cContainer\u003e reportedIncreasedContainers) {\n+    for (Container container : reportedIncreasedContainers) {\n+      ContainerId containerId \u003d container.getId();\n+\n+      // Don\u0027t bother with containers already scheduled for cleanup, or for\n+      // applications already killed. The scheduler doens\u0027t need to know any\n+      // more about this container\n+      if (containersToClean.contains(containerId)) {\n+        LOG.info(\"Container \" + containerId + \" already scheduled for \"\n+            + \"cleanup, no further processing\");\n+        continue;\n+      }\n+\n+      ApplicationId containerAppId \u003d\n+          containerId.getApplicationAttemptId().getApplicationId();\n+\n+      if (finishedApplications.contains(containerAppId)) {\n+        LOG.info(\"Container \" + containerId\n+            + \" belongs to an application that is already killed,\"\n+            + \" no further processing\");\n+        continue;\n+      }\n+      \n+      this.nmReportedIncreasedContainers.put(containerId, container);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleReportedIncreasedContainers(\n      List\u003cContainer\u003e reportedIncreasedContainers) {\n    for (Container container : reportedIncreasedContainers) {\n      ContainerId containerId \u003d container.getId();\n\n      // Don\u0027t bother with containers already scheduled for cleanup, or for\n      // applications already killed. The scheduler doens\u0027t need to know any\n      // more about this container\n      if (containersToClean.contains(containerId)) {\n        LOG.info(\"Container \" + containerId + \" already scheduled for \"\n            + \"cleanup, no further processing\");\n        continue;\n      }\n\n      ApplicationId containerAppId \u003d\n          containerId.getApplicationAttemptId().getApplicationId();\n\n      if (finishedApplications.contains(containerAppId)) {\n        LOG.info(\"Container \" + containerId\n            + \" belongs to an application that is already killed,\"\n            + \" no further processing\");\n        continue;\n      }\n      \n      this.nmReportedIncreasedContainers.put(containerId, container);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java"
    }
  }
}