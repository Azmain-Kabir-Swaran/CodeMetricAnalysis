{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SequenceFile.java",
  "functionName": "sync",
  "functionId": "sync___position-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
  "functionStartLine": 2727,
  "functionEndLine": 2760,
  "numCommitsSeen": 46,
  "timeTaken": 3283,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "c9cc61e8538925081b6ed92596e599d23c8a5542",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "c9cc61e8538925081b6ed92596e599d23c8a5542": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public synchronized void sync(long position) throws IOException {\n      if (position+SYNC_SIZE \u003e\u003d end) {\n        seek(end);\n        return;\n      }\n\n      if (position \u003c headerEnd) {\n        // seek directly to first record\n        in.seek(headerEnd);\n        // note the sync marker \"seen\" in the header\n        syncSeen \u003d true;\n        return;\n      }\n\n      try {\n        seek(position+4);                         // skip escape\n        in.readFully(syncCheck);\n        int syncLen \u003d sync.length;\n        for (int i \u003d 0; in.getPos() \u003c end; i++) {\n          int j \u003d 0;\n          for (; j \u003c syncLen; j++) {\n            if (sync[j] !\u003d syncCheck[(i+j)%syncLen])\n              break;\n          }\n          if (j \u003d\u003d syncLen) {\n            in.seek(in.getPos() - SYNC_SIZE);     // position before sync\n            return;\n          }\n          syncCheck[i%syncLen] \u003d in.readByte();\n        }\n      } catch (ChecksumException e) {             // checksum failure\n        handleChecksumException(e);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public synchronized void sync(long position) throws IOException {\n      if (position+SYNC_SIZE \u003e\u003d end) {\n        seek(end);\n        return;\n      }\n\n      if (position \u003c headerEnd) {\n        // seek directly to first record\n        in.seek(headerEnd);\n        // note the sync marker \"seen\" in the header\n        syncSeen \u003d true;\n        return;\n      }\n\n      try {\n        seek(position+4);                         // skip escape\n        in.readFully(syncCheck);\n        int syncLen \u003d sync.length;\n        for (int i \u003d 0; in.getPos() \u003c end; i++) {\n          int j \u003d 0;\n          for (; j \u003c syncLen; j++) {\n            if (sync[j] !\u003d syncCheck[(i+j)%syncLen])\n              break;\n          }\n          if (j \u003d\u003d syncLen) {\n            in.seek(in.getPos() - SYNC_SIZE);     // position before sync\n            return;\n          }\n          syncCheck[i%syncLen] \u003d in.readByte();\n        }\n      } catch (ChecksumException e) {             // checksum failure\n        handleChecksumException(e);\n      }\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/SequenceFile.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public synchronized void sync(long position) throws IOException {\n      if (position+SYNC_SIZE \u003e\u003d end) {\n        seek(end);\n        return;\n      }\n\n      if (position \u003c headerEnd) {\n        // seek directly to first record\n        in.seek(headerEnd);\n        // note the sync marker \"seen\" in the header\n        syncSeen \u003d true;\n        return;\n      }\n\n      try {\n        seek(position+4);                         // skip escape\n        in.readFully(syncCheck);\n        int syncLen \u003d sync.length;\n        for (int i \u003d 0; in.getPos() \u003c end; i++) {\n          int j \u003d 0;\n          for (; j \u003c syncLen; j++) {\n            if (sync[j] !\u003d syncCheck[(i+j)%syncLen])\n              break;\n          }\n          if (j \u003d\u003d syncLen) {\n            in.seek(in.getPos() - SYNC_SIZE);     // position before sync\n            return;\n          }\n          syncCheck[i%syncLen] \u003d in.readByte();\n        }\n      } catch (ChecksumException e) {             // checksum failure\n        handleChecksumException(e);\n      }\n    }",
      "path": "common/src/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/SequenceFile.java",
        "newPath": "common/src/java/org/apache/hadoop/io/SequenceFile.java"
      }
    },
    "c9cc61e8538925081b6ed92596e599d23c8a5542": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6196. Fix a bug in SequenceFile.Reader where syncing within the header\nwould cause the reader to read the sync marker as a record. Contributed by Jay Booth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@813698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/09 12:38 AM",
      "commitName": "c9cc61e8538925081b6ed92596e599d23c8a5542",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "02/09/09 6:36 PM",
      "commitNameOld": "d6428581ff6ad7859d69b41318bd6fe4736d022d",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 8.25,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,34 @@\n     public synchronized void sync(long position) throws IOException {\n       if (position+SYNC_SIZE \u003e\u003d end) {\n         seek(end);\n         return;\n       }\n \n+      if (position \u003c headerEnd) {\n+        // seek directly to first record\n+        in.seek(headerEnd);\n+        // note the sync marker \"seen\" in the header\n+        syncSeen \u003d true;\n+        return;\n+      }\n+\n       try {\n         seek(position+4);                         // skip escape\n         in.readFully(syncCheck);\n         int syncLen \u003d sync.length;\n         for (int i \u003d 0; in.getPos() \u003c end; i++) {\n           int j \u003d 0;\n           for (; j \u003c syncLen; j++) {\n             if (sync[j] !\u003d syncCheck[(i+j)%syncLen])\n               break;\n           }\n           if (j \u003d\u003d syncLen) {\n             in.seek(in.getPos() - SYNC_SIZE);     // position before sync\n             return;\n           }\n           syncCheck[i%syncLen] \u003d in.readByte();\n         }\n       } catch (ChecksumException e) {             // checksum failure\n         handleChecksumException(e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void sync(long position) throws IOException {\n      if (position+SYNC_SIZE \u003e\u003d end) {\n        seek(end);\n        return;\n      }\n\n      if (position \u003c headerEnd) {\n        // seek directly to first record\n        in.seek(headerEnd);\n        // note the sync marker \"seen\" in the header\n        syncSeen \u003d true;\n        return;\n      }\n\n      try {\n        seek(position+4);                         // skip escape\n        in.readFully(syncCheck);\n        int syncLen \u003d sync.length;\n        for (int i \u003d 0; in.getPos() \u003c end; i++) {\n          int j \u003d 0;\n          for (; j \u003c syncLen; j++) {\n            if (sync[j] !\u003d syncCheck[(i+j)%syncLen])\n              break;\n          }\n          if (j \u003d\u003d syncLen) {\n            in.seek(in.getPos() - SYNC_SIZE);     // position before sync\n            return;\n          }\n          syncCheck[i%syncLen] \u003d in.readByte();\n        }\n      } catch (ChecksumException e) {             // checksum failure\n        handleChecksumException(e);\n      }\n    }",
      "path": "src/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,26 @@\n+    public synchronized void sync(long position) throws IOException {\n+      if (position+SYNC_SIZE \u003e\u003d end) {\n+        seek(end);\n+        return;\n+      }\n+\n+      try {\n+        seek(position+4);                         // skip escape\n+        in.readFully(syncCheck);\n+        int syncLen \u003d sync.length;\n+        for (int i \u003d 0; in.getPos() \u003c end; i++) {\n+          int j \u003d 0;\n+          for (; j \u003c syncLen; j++) {\n+            if (sync[j] !\u003d syncCheck[(i+j)%syncLen])\n+              break;\n+          }\n+          if (j \u003d\u003d syncLen) {\n+            in.seek(in.getPos() - SYNC_SIZE);     // position before sync\n+            return;\n+          }\n+          syncCheck[i%syncLen] \u003d in.readByte();\n+        }\n+      } catch (ChecksumException e) {             // checksum failure\n+        handleChecksumException(e);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void sync(long position) throws IOException {\n      if (position+SYNC_SIZE \u003e\u003d end) {\n        seek(end);\n        return;\n      }\n\n      try {\n        seek(position+4);                         // skip escape\n        in.readFully(syncCheck);\n        int syncLen \u003d sync.length;\n        for (int i \u003d 0; in.getPos() \u003c end; i++) {\n          int j \u003d 0;\n          for (; j \u003c syncLen; j++) {\n            if (sync[j] !\u003d syncCheck[(i+j)%syncLen])\n              break;\n          }\n          if (j \u003d\u003d syncLen) {\n            in.seek(in.getPos() - SYNC_SIZE);     // position before sync\n            return;\n          }\n          syncCheck[i%syncLen] \u003d in.readByte();\n        }\n      } catch (ChecksumException e) {             // checksum failure\n        handleChecksumException(e);\n      }\n    }",
      "path": "src/java/org/apache/hadoop/io/SequenceFile.java"
    }
  }
}