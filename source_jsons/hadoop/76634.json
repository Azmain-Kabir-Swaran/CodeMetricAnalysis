{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BloomMapFile.java",
  "functionName": "initBloomFilter",
  "functionId": "initBloomFilter___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/BloomMapFile.java",
  "functionStartLine": 166,
  "functionEndLine": 180,
  "numCommitsSeen": 11,
  "timeTaken": 1128,
  "changeHistory": [
    "9a44a832a99eb967aa4e34338dfa75baf35f9845",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "9a44a832a99eb967aa4e34338dfa75baf35f9845": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a44a832a99eb967aa4e34338dfa75baf35f9845": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13658. Replace config key literal strings with names I: hadoop common. Contributed by Chen Liang\n",
      "commitDate": "27/09/16 5:36 PM",
      "commitName": "9a44a832a99eb967aa4e34338dfa75baf35f9845",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1861.02,
      "commitsBetweenForRepo": 13095,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n     private synchronized void initBloomFilter(Configuration conf) {\n-      numKeys \u003d conf.getInt(\"io.mapfile.bloom.size\", 1024 * 1024);\n+      numKeys \u003d conf.getInt(\n+          IO_MAPFILE_BLOOM_SIZE_KEY, IO_MAPFILE_BLOOM_SIZE_DEFAULT);\n       // vector size should be \u003ccode\u003e-kn / (ln(1 - c^(1/k)))\u003c/code\u003e bits for\n       // single key, where \u003ccode\u003e is the number of hash functions,\n       // \u003ccode\u003en\u003c/code\u003e is the number of keys and \u003ccode\u003ec\u003c/code\u003e is the desired\n       // max. error rate.\n       // Our desired error rate is by default 0.005, i.e. 0.5%\n-      float errorRate \u003d conf.getFloat(\"io.mapfile.bloom.error.rate\", 0.005f);\n+      float errorRate \u003d conf.getFloat(\n+          IO_MAPFILE_BLOOM_ERROR_RATE_KEY, IO_MAPFILE_BLOOM_ERROR_RATE_DEFAULT);\n       vectorSize \u003d (int)Math.ceil((double)(-HASH_COUNT * numKeys) /\n           Math.log(1.0 - Math.pow(errorRate, 1.0/HASH_COUNT)));\n       bloomFilter \u003d new DynamicBloomFilter(vectorSize, HASH_COUNT,\n           Hash.getHashType(conf), numKeys);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized void initBloomFilter(Configuration conf) {\n      numKeys \u003d conf.getInt(\n          IO_MAPFILE_BLOOM_SIZE_KEY, IO_MAPFILE_BLOOM_SIZE_DEFAULT);\n      // vector size should be \u003ccode\u003e-kn / (ln(1 - c^(1/k)))\u003c/code\u003e bits for\n      // single key, where \u003ccode\u003e is the number of hash functions,\n      // \u003ccode\u003en\u003c/code\u003e is the number of keys and \u003ccode\u003ec\u003c/code\u003e is the desired\n      // max. error rate.\n      // Our desired error rate is by default 0.005, i.e. 0.5%\n      float errorRate \u003d conf.getFloat(\n          IO_MAPFILE_BLOOM_ERROR_RATE_KEY, IO_MAPFILE_BLOOM_ERROR_RATE_DEFAULT);\n      vectorSize \u003d (int)Math.ceil((double)(-HASH_COUNT * numKeys) /\n          Math.log(1.0 - Math.pow(errorRate, 1.0/HASH_COUNT)));\n      bloomFilter \u003d new DynamicBloomFilter(vectorSize, HASH_COUNT,\n          Hash.getHashType(conf), numKeys);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/BloomMapFile.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private synchronized void initBloomFilter(Configuration conf) {\n      numKeys \u003d conf.getInt(\"io.mapfile.bloom.size\", 1024 * 1024);\n      // vector size should be \u003ccode\u003e-kn / (ln(1 - c^(1/k)))\u003c/code\u003e bits for\n      // single key, where \u003ccode\u003e is the number of hash functions,\n      // \u003ccode\u003en\u003c/code\u003e is the number of keys and \u003ccode\u003ec\u003c/code\u003e is the desired\n      // max. error rate.\n      // Our desired error rate is by default 0.005, i.e. 0.5%\n      float errorRate \u003d conf.getFloat(\"io.mapfile.bloom.error.rate\", 0.005f);\n      vectorSize \u003d (int)Math.ceil((double)(-HASH_COUNT * numKeys) /\n          Math.log(1.0 - Math.pow(errorRate, 1.0/HASH_COUNT)));\n      bloomFilter \u003d new DynamicBloomFilter(vectorSize, HASH_COUNT,\n          Hash.getHashType(conf), numKeys);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/BloomMapFile.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/BloomMapFile.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/BloomMapFile.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private synchronized void initBloomFilter(Configuration conf) {\n      numKeys \u003d conf.getInt(\"io.mapfile.bloom.size\", 1024 * 1024);\n      // vector size should be \u003ccode\u003e-kn / (ln(1 - c^(1/k)))\u003c/code\u003e bits for\n      // single key, where \u003ccode\u003e is the number of hash functions,\n      // \u003ccode\u003en\u003c/code\u003e is the number of keys and \u003ccode\u003ec\u003c/code\u003e is the desired\n      // max. error rate.\n      // Our desired error rate is by default 0.005, i.e. 0.5%\n      float errorRate \u003d conf.getFloat(\"io.mapfile.bloom.error.rate\", 0.005f);\n      vectorSize \u003d (int)Math.ceil((double)(-HASH_COUNT * numKeys) /\n          Math.log(1.0 - Math.pow(errorRate, 1.0/HASH_COUNT)));\n      bloomFilter \u003d new DynamicBloomFilter(vectorSize, HASH_COUNT,\n          Hash.getHashType(conf), numKeys);\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/BloomMapFile.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/BloomMapFile.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/BloomMapFile.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private synchronized void initBloomFilter(Configuration conf) {\n      numKeys \u003d conf.getInt(\"io.mapfile.bloom.size\", 1024 * 1024);\n      // vector size should be \u003ccode\u003e-kn / (ln(1 - c^(1/k)))\u003c/code\u003e bits for\n      // single key, where \u003ccode\u003e is the number of hash functions,\n      // \u003ccode\u003en\u003c/code\u003e is the number of keys and \u003ccode\u003ec\u003c/code\u003e is the desired\n      // max. error rate.\n      // Our desired error rate is by default 0.005, i.e. 0.5%\n      float errorRate \u003d conf.getFloat(\"io.mapfile.bloom.error.rate\", 0.005f);\n      vectorSize \u003d (int)Math.ceil((double)(-HASH_COUNT * numKeys) /\n          Math.log(1.0 - Math.pow(errorRate, 1.0/HASH_COUNT)));\n      bloomFilter \u003d new DynamicBloomFilter(vectorSize, HASH_COUNT,\n          Hash.getHashType(conf), numKeys);\n    }",
      "path": "common/src/java/org/apache/hadoop/io/BloomMapFile.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/BloomMapFile.java",
        "newPath": "common/src/java/org/apache/hadoop/io/BloomMapFile.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,13 @@\n+    private synchronized void initBloomFilter(Configuration conf) {\n+      numKeys \u003d conf.getInt(\"io.mapfile.bloom.size\", 1024 * 1024);\n+      // vector size should be \u003ccode\u003e-kn / (ln(1 - c^(1/k)))\u003c/code\u003e bits for\n+      // single key, where \u003ccode\u003e is the number of hash functions,\n+      // \u003ccode\u003en\u003c/code\u003e is the number of keys and \u003ccode\u003ec\u003c/code\u003e is the desired\n+      // max. error rate.\n+      // Our desired error rate is by default 0.005, i.e. 0.5%\n+      float errorRate \u003d conf.getFloat(\"io.mapfile.bloom.error.rate\", 0.005f);\n+      vectorSize \u003d (int)Math.ceil((double)(-HASH_COUNT * numKeys) /\n+          Math.log(1.0 - Math.pow(errorRate, 1.0/HASH_COUNT)));\n+      bloomFilter \u003d new DynamicBloomFilter(vectorSize, HASH_COUNT,\n+          Hash.getHashType(conf), numKeys);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized void initBloomFilter(Configuration conf) {\n      numKeys \u003d conf.getInt(\"io.mapfile.bloom.size\", 1024 * 1024);\n      // vector size should be \u003ccode\u003e-kn / (ln(1 - c^(1/k)))\u003c/code\u003e bits for\n      // single key, where \u003ccode\u003e is the number of hash functions,\n      // \u003ccode\u003en\u003c/code\u003e is the number of keys and \u003ccode\u003ec\u003c/code\u003e is the desired\n      // max. error rate.\n      // Our desired error rate is by default 0.005, i.e. 0.5%\n      float errorRate \u003d conf.getFloat(\"io.mapfile.bloom.error.rate\", 0.005f);\n      vectorSize \u003d (int)Math.ceil((double)(-HASH_COUNT * numKeys) /\n          Math.log(1.0 - Math.pow(errorRate, 1.0/HASH_COUNT)));\n      bloomFilter \u003d new DynamicBloomFilter(vectorSize, HASH_COUNT,\n          Hash.getHashType(conf), numKeys);\n    }",
      "path": "src/java/org/apache/hadoop/io/BloomMapFile.java"
    }
  }
}