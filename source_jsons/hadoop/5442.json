{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XAttrStorage.java",
  "functionName": "updateINodeXAttrs",
  "functionId": "updateINodeXAttrs___inode-INode__xAttrs-List__XAttr____snapshotId-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrStorage.java",
  "functionStartLine": 71,
  "functionEndLine": 80,
  "numCommitsSeen": 8,
  "timeTaken": 3002,
  "changeHistory": [
    "eee0d4563c62647cfaaed6605ee713aaf69add78",
    "ca52cb01c40f09585431ef1c1c1ba4044657e8c7",
    "ac23a55547716df29b3e25c98a113399e184d9d1"
  ],
  "changeHistoryShort": {
    "eee0d4563c62647cfaaed6605ee713aaf69add78": "Ybodychange",
    "ca52cb01c40f09585431ef1c1c1ba4044657e8c7": "Ybodychange",
    "ac23a55547716df29b3e25c98a113399e184d9d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eee0d4563c62647cfaaed6605ee713aaf69add78": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8900. Compact XAttrs to optimize memory footprint. (yliu)\n",
      "commitDate": "25/08/15 1:16 AM",
      "commitName": "eee0d4563c62647cfaaed6605ee713aaf69add78",
      "commitAuthor": "yliu",
      "commitDateOld": "09/04/15 12:38 PM",
      "commitNameOld": "922b7ed21d1f1460263ca42f709bb9f415d189c5",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 137.53,
      "commitsBetweenForRepo": 1026,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,10 @@\n   public static void updateINodeXAttrs(INode inode, \n       List\u003cXAttr\u003e xAttrs, int snapshotId) throws QuotaExceededException {\n-    if (xAttrs \u003d\u003d null || xAttrs.isEmpty()) {\n-      if (inode.getXAttrFeature() !\u003d null) {\n-        inode.removeXAttrFeature(snapshotId);\n-      }\n-      return;\n-    }\n-    // Dedupe the xAttr name and save them into a new interned list\n-    List\u003cXAttr\u003e internedXAttrs \u003d Lists.newArrayListWithCapacity(xAttrs.size());\n-    for (XAttr xAttr : xAttrs) {\n-      final String name \u003d xAttr.getName();\n-      String internedName \u003d internedNames.get(name);\n-      if (internedName \u003d\u003d null) {\n-        internedName \u003d name;\n-        internedNames.put(internedName, internedName);\n-      }\n-      XAttr internedXAttr \u003d new XAttr.Builder()\n-          .setName(internedName)\n-          .setNameSpace(xAttr.getNameSpace())\n-          .setValue(xAttr.getValue())\n-          .build();\n-      internedXAttrs.add(internedXAttr);\n-    }\n-    // Save the list of interned xattrs\n-    ImmutableList\u003cXAttr\u003e newXAttrs \u003d ImmutableList.copyOf(internedXAttrs);\n     if (inode.getXAttrFeature() !\u003d null) {\n       inode.removeXAttrFeature(snapshotId);\n     }\n-    inode.addXAttrFeature(new XAttrFeature(newXAttrs), snapshotId);\n+    if (xAttrs \u003d\u003d null || xAttrs.isEmpty()) {\n+      return;\n+    }\n+    inode.addXAttrFeature(new XAttrFeature(xAttrs), snapshotId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void updateINodeXAttrs(INode inode, \n      List\u003cXAttr\u003e xAttrs, int snapshotId) throws QuotaExceededException {\n    if (inode.getXAttrFeature() !\u003d null) {\n      inode.removeXAttrFeature(snapshotId);\n    }\n    if (xAttrs \u003d\u003d null || xAttrs.isEmpty()) {\n      return;\n    }\n    inode.addXAttrFeature(new XAttrFeature(xAttrs), snapshotId);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrStorage.java",
      "extendedDetails": {}
    },
    "ca52cb01c40f09585431ef1c1c1ba4044657e8c7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6690. Deduplicate xattr names in memory. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611226 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/14 5:44 PM",
      "commitName": "ca52cb01c40f09585431ef1c1c1ba4044657e8c7",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/05/14 6:57 AM",
      "commitNameOld": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 56.45,
      "commitsBetweenForRepo": 350,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,31 @@\n   public static void updateINodeXAttrs(INode inode, \n       List\u003cXAttr\u003e xAttrs, int snapshotId) throws QuotaExceededException {\n     if (xAttrs \u003d\u003d null || xAttrs.isEmpty()) {\n       if (inode.getXAttrFeature() !\u003d null) {\n         inode.removeXAttrFeature(snapshotId);\n       }\n       return;\n     }\n-    \n-    ImmutableList\u003cXAttr\u003e newXAttrs \u003d ImmutableList.copyOf(xAttrs);\n+    // Dedupe the xAttr name and save them into a new interned list\n+    List\u003cXAttr\u003e internedXAttrs \u003d Lists.newArrayListWithCapacity(xAttrs.size());\n+    for (XAttr xAttr : xAttrs) {\n+      final String name \u003d xAttr.getName();\n+      String internedName \u003d internedNames.get(name);\n+      if (internedName \u003d\u003d null) {\n+        internedName \u003d name;\n+        internedNames.put(internedName, internedName);\n+      }\n+      XAttr internedXAttr \u003d new XAttr.Builder()\n+          .setName(internedName)\n+          .setNameSpace(xAttr.getNameSpace())\n+          .setValue(xAttr.getValue())\n+          .build();\n+      internedXAttrs.add(internedXAttr);\n+    }\n+    // Save the list of interned xattrs\n+    ImmutableList\u003cXAttr\u003e newXAttrs \u003d ImmutableList.copyOf(internedXAttrs);\n     if (inode.getXAttrFeature() !\u003d null) {\n       inode.removeXAttrFeature(snapshotId);\n     }\n     inode.addXAttrFeature(new XAttrFeature(newXAttrs), snapshotId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void updateINodeXAttrs(INode inode, \n      List\u003cXAttr\u003e xAttrs, int snapshotId) throws QuotaExceededException {\n    if (xAttrs \u003d\u003d null || xAttrs.isEmpty()) {\n      if (inode.getXAttrFeature() !\u003d null) {\n        inode.removeXAttrFeature(snapshotId);\n      }\n      return;\n    }\n    // Dedupe the xAttr name and save them into a new interned list\n    List\u003cXAttr\u003e internedXAttrs \u003d Lists.newArrayListWithCapacity(xAttrs.size());\n    for (XAttr xAttr : xAttrs) {\n      final String name \u003d xAttr.getName();\n      String internedName \u003d internedNames.get(name);\n      if (internedName \u003d\u003d null) {\n        internedName \u003d name;\n        internedNames.put(internedName, internedName);\n      }\n      XAttr internedXAttr \u003d new XAttr.Builder()\n          .setName(internedName)\n          .setNameSpace(xAttr.getNameSpace())\n          .setValue(xAttr.getValue())\n          .build();\n      internedXAttrs.add(internedXAttr);\n    }\n    // Save the list of interned xattrs\n    ImmutableList\u003cXAttr\u003e newXAttrs \u003d ImmutableList.copyOf(internedXAttrs);\n    if (inode.getXAttrFeature() !\u003d null) {\n      inode.removeXAttrFeature(snapshotId);\n    }\n    inode.addXAttrFeature(new XAttrFeature(newXAttrs), snapshotId);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrStorage.java",
      "extendedDetails": {}
    },
    "ac23a55547716df29b3e25c98a113399e184d9d1": {
      "type": "Yintroduced",
      "commitMessage": "Merge HDFS-2006 HDFS XAttrs branch to Trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 6:57 AM",
      "commitName": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,15 @@\n+  public static void updateINodeXAttrs(INode inode, \n+      List\u003cXAttr\u003e xAttrs, int snapshotId) throws QuotaExceededException {\n+    if (xAttrs \u003d\u003d null || xAttrs.isEmpty()) {\n+      if (inode.getXAttrFeature() !\u003d null) {\n+        inode.removeXAttrFeature(snapshotId);\n+      }\n+      return;\n+    }\n+    \n+    ImmutableList\u003cXAttr\u003e newXAttrs \u003d ImmutableList.copyOf(xAttrs);\n+    if (inode.getXAttrFeature() !\u003d null) {\n+      inode.removeXAttrFeature(snapshotId);\n+    }\n+    inode.addXAttrFeature(new XAttrFeature(newXAttrs), snapshotId);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void updateINodeXAttrs(INode inode, \n      List\u003cXAttr\u003e xAttrs, int snapshotId) throws QuotaExceededException {\n    if (xAttrs \u003d\u003d null || xAttrs.isEmpty()) {\n      if (inode.getXAttrFeature() !\u003d null) {\n        inode.removeXAttrFeature(snapshotId);\n      }\n      return;\n    }\n    \n    ImmutableList\u003cXAttr\u003e newXAttrs \u003d ImmutableList.copyOf(xAttrs);\n    if (inode.getXAttrFeature() !\u003d null) {\n      inode.removeXAttrFeature(snapshotId);\n    }\n    inode.addXAttrFeature(new XAttrFeature(newXAttrs), snapshotId);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrStorage.java"
    }
  }
}