{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppLifetimeMonitor.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/monitor/RMAppLifetimeMonitor.java",
  "functionStartLine": 56,
  "functionEndLine": 70,
  "numCommitsSeen": 4,
  "timeTaken": 1519,
  "changeHistory": [
    "bcc15c6290b3912a054323695a6a931b0de163bd",
    "2ae5a3a5bf5ea355370469a53eeccff0b5220081"
  ],
  "changeHistoryShort": {
    "bcc15c6290b3912a054323695a6a931b0de163bd": "Ybodychange",
    "2ae5a3a5bf5ea355370469a53eeccff0b5220081": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcc15c6290b3912a054323695a6a931b0de163bd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5611. Provide an API to update lifetime of an application. Contributed by Rohith Sharma K S\n",
      "commitDate": "09/11/16 4:08 PM",
      "commitName": "bcc15c6290b3912a054323695a6a931b0de163bd",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/09/16 7:00 AM",
      "commitNameOld": "2ae5a3a5bf5ea355370469a53eeccff0b5220081",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 41.42,
      "commitsBetweenForRepo": 379,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n-    long monitorInterval \u003d conf.getLong(\n-        YarnConfiguration.RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS,\n-        YarnConfiguration.DEFAULT_RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS);\n+    long monitorInterval \u003d\n+        conf.getLong(YarnConfiguration.RM_APPLICATION_MONITOR_INTERVAL_MS,\n+            YarnConfiguration.DEFAULT_RM_APPLICATION_MONITOR_INTERVAL_MS);\n     if (monitorInterval \u003c\u003d 0) {\n       monitorInterval \u003d\n-          YarnConfiguration.DEFAULT_RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS;\n+          YarnConfiguration.DEFAULT_RM_APPLICATION_MONITOR_INTERVAL_MS;\n     }\n     setMonitorInterval(monitorInterval);\n+    setExpireInterval(0); // No need of expire interval for App.\n+    setResetTimeOnStart(false); // do not reset expire time on restart\n     LOG.info(\"Application lifelime monitor interval set to \" + monitorInterval\n         + \" ms.\");\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    long monitorInterval \u003d\n        conf.getLong(YarnConfiguration.RM_APPLICATION_MONITOR_INTERVAL_MS,\n            YarnConfiguration.DEFAULT_RM_APPLICATION_MONITOR_INTERVAL_MS);\n    if (monitorInterval \u003c\u003d 0) {\n      monitorInterval \u003d\n          YarnConfiguration.DEFAULT_RM_APPLICATION_MONITOR_INTERVAL_MS;\n    }\n    setMonitorInterval(monitorInterval);\n    setExpireInterval(0); // No need of expire interval for App.\n    setResetTimeOnStart(false); // do not reset expire time on restart\n    LOG.info(\"Application lifelime monitor interval set to \" + monitorInterval\n        + \" ms.\");\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/monitor/RMAppLifetimeMonitor.java",
      "extendedDetails": {}
    },
    "2ae5a3a5bf5ea355370469a53eeccff0b5220081": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4205. Add a service for monitoring application life time out. Contributed by Rohith Sharma K S\n",
      "commitDate": "29/09/16 7:00 AM",
      "commitName": "2ae5a3a5bf5ea355370469a53eeccff0b5220081",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,13 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    long monitorInterval \u003d conf.getLong(\n+        YarnConfiguration.RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS,\n+        YarnConfiguration.DEFAULT_RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS);\n+    if (monitorInterval \u003c\u003d 0) {\n+      monitorInterval \u003d\n+          YarnConfiguration.DEFAULT_RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS;\n+    }\n+    setMonitorInterval(monitorInterval);\n+    LOG.info(\"Application lifelime monitor interval set to \" + monitorInterval\n+        + \" ms.\");\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    long monitorInterval \u003d conf.getLong(\n        YarnConfiguration.RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS,\n        YarnConfiguration.DEFAULT_RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS);\n    if (monitorInterval \u003c\u003d 0) {\n      monitorInterval \u003d\n          YarnConfiguration.DEFAULT_RM_APPLICATION_LIFETIME_MONITOR_INTERVAL_MS;\n    }\n    setMonitorInterval(monitorInterval);\n    LOG.info(\"Application lifelime monitor interval set to \" + monitorInterval\n        + \" ms.\");\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/monitor/RMAppLifetimeMonitor.java"
    }
  }
}