{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSClientProvider.java",
  "functionName": "getKeysMetadata",
  "functionId": "getKeysMetadata___keyNames-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
  "functionStartLine": 674,
  "functionEndLine": 691,
  "numCommitsSeen": 71,
  "timeTaken": 1711,
  "changeHistory": [
    "021ae471153ce2566924b0f6d29809669074c06d",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "021ae471153ce2566924b0f6d29809669074c06d": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "021ae471153ce2566924b0f6d29809669074c06d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10862. Miscellaneous trivial corrections to KMS classes. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616903 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 4:10 PM",
      "commitName": "021ae471153ce2566924b0f6d29809669074c06d",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "04/08/14 7:21 PM",
      "commitNameOld": "513dc29ce833f574895a6c40036758ba16823942",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.87,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public Metadata[] getKeysMetadata(String ... keyNames) throws IOException {\n     List\u003cMetadata\u003e keysMetadata \u003d new ArrayList\u003cMetadata\u003e();\n     List\u003cString[]\u003e keySets \u003d createKeySets(keyNames);\n     for (String[] keySet : keySets) {\n       if (keyNames.length \u003e 0) {\n         Map\u003cString, Object\u003e queryStr \u003d new HashMap\u003cString, Object\u003e();\n-        queryStr.put(KMSRESTConstants.KEY_OP, keySet);\n+        queryStr.put(KMSRESTConstants.KEY, keySet);\n         URL url \u003d createURL(KMSRESTConstants.KEYS_METADATA_RESOURCE, null,\n             null, queryStr);\n         HttpURLConnection conn \u003d createConnection(url, HTTP_GET);\n         List\u003cMap\u003e list \u003d call(conn, null, HttpURLConnection.HTTP_OK, List.class);\n         for (Map map : list) {\n           keysMetadata.add(parseJSONMetadata(map));\n         }\n       }\n     }\n     return keysMetadata.toArray(new Metadata[keysMetadata.size()]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Metadata[] getKeysMetadata(String ... keyNames) throws IOException {\n    List\u003cMetadata\u003e keysMetadata \u003d new ArrayList\u003cMetadata\u003e();\n    List\u003cString[]\u003e keySets \u003d createKeySets(keyNames);\n    for (String[] keySet : keySets) {\n      if (keyNames.length \u003e 0) {\n        Map\u003cString, Object\u003e queryStr \u003d new HashMap\u003cString, Object\u003e();\n        queryStr.put(KMSRESTConstants.KEY, keySet);\n        URL url \u003d createURL(KMSRESTConstants.KEYS_METADATA_RESOURCE, null,\n            null, queryStr);\n        HttpURLConnection conn \u003d createConnection(url, HTTP_GET);\n        List\u003cMap\u003e list \u003d call(conn, null, HttpURLConnection.HTTP_OK, List.class);\n        for (Map map : list) {\n          keysMetadata.add(parseJSONMetadata(map));\n        }\n      }\n    }\n    return keysMetadata.toArray(new Metadata[keysMetadata.size()]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,18 @@\n+  public Metadata[] getKeysMetadata(String ... keyNames) throws IOException {\n+    List\u003cMetadata\u003e keysMetadata \u003d new ArrayList\u003cMetadata\u003e();\n+    List\u003cString[]\u003e keySets \u003d createKeySets(keyNames);\n+    for (String[] keySet : keySets) {\n+      if (keyNames.length \u003e 0) {\n+        Map\u003cString, Object\u003e queryStr \u003d new HashMap\u003cString, Object\u003e();\n+        queryStr.put(KMSRESTConstants.KEY_OP, keySet);\n+        URL url \u003d createURL(KMSRESTConstants.KEYS_METADATA_RESOURCE, null,\n+            null, queryStr);\n+        HttpURLConnection conn \u003d createConnection(url, HTTP_GET);\n+        List\u003cMap\u003e list \u003d call(conn, null, HttpURLConnection.HTTP_OK, List.class);\n+        for (Map map : list) {\n+          keysMetadata.add(parseJSONMetadata(map));\n+        }\n+      }\n+    }\n+    return keysMetadata.toArray(new Metadata[keysMetadata.size()]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Metadata[] getKeysMetadata(String ... keyNames) throws IOException {\n    List\u003cMetadata\u003e keysMetadata \u003d new ArrayList\u003cMetadata\u003e();\n    List\u003cString[]\u003e keySets \u003d createKeySets(keyNames);\n    for (String[] keySet : keySets) {\n      if (keyNames.length \u003e 0) {\n        Map\u003cString, Object\u003e queryStr \u003d new HashMap\u003cString, Object\u003e();\n        queryStr.put(KMSRESTConstants.KEY_OP, keySet);\n        URL url \u003d createURL(KMSRESTConstants.KEYS_METADATA_RESOURCE, null,\n            null, queryStr);\n        HttpURLConnection conn \u003d createConnection(url, HTTP_GET);\n        List\u003cMap\u003e list \u003d call(conn, null, HttpURLConnection.HTTP_OK, List.class);\n        for (Map map : list) {\n          keysMetadata.add(parseJSONMetadata(map));\n        }\n      }\n    }\n    return keysMetadata.toArray(new Metadata[keysMetadata.size()]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}