{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirSatisfyStoragePolicyOp.java",
  "functionName": "inodeHasSatisfyXAttr",
  "functionId": "inodeHasSatisfyXAttr___inode-INode",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSatisfyStoragePolicyOp.java",
  "functionStartLine": 133,
  "functionEndLine": 140,
  "numCommitsSeen": 46,
  "timeTaken": 4219,
  "changeHistory": [
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
    "5ce332dc9a072f8850ab71ba16898faf8e866c06",
    "6215e35bb633706753a464ad3e8633366e6a10b2"
  ],
  "changeHistoryShort": {
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": "Ymultichange(Yparameterchange,Ybodychange)",
    "5ce332dc9a072f8850ab71ba16898faf8e866c06": "Ymovefromfile",
    "6215e35bb633706753a464ad3e8633366e6a10b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12225: [SPS]: Optimize extended attributes for tracking SPS movements. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12225: [SPS]: Optimize extended attributes for tracking SPS movements. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "d638a7dc0363dbe07deb8c389116132814267b10",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  private static boolean inodeHasSatisfyXAttr(List\u003cINode\u003e candidateNodes) {\n-    // If the node is a directory and one of the child files\n-    // has satisfy xattr, then return true for this directory.\n-    for (INode inode : candidateNodes) {\n-      final XAttrFeature f \u003d inode.getXAttrFeature();\n-      if (inode.isFile() \u0026\u0026 f !\u003d null\n-          \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n-        return true;\n-      }\n+  private static boolean inodeHasSatisfyXAttr(INode inode) {\n+    final XAttrFeature f \u003d inode.getXAttrFeature();\n+    if (inode.isFile() \u0026\u0026 f !\u003d null\n+        \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n+      return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean inodeHasSatisfyXAttr(INode inode) {\n    final XAttrFeature f \u003d inode.getXAttrFeature();\n    if (inode.isFile() \u0026\u0026 f !\u003d null\n        \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSatisfyStoragePolicyOp.java",
          "extendedDetails": {
            "oldValue": "[candidateNodes-List\u003cINode\u003e]",
            "newValue": "[inode-INode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12225: [SPS]: Optimize extended attributes for tracking SPS movements. Contributed by Surendra Singh Lilhore.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "d638a7dc0363dbe07deb8c389116132814267b10",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  private static boolean inodeHasSatisfyXAttr(List\u003cINode\u003e candidateNodes) {\n-    // If the node is a directory and one of the child files\n-    // has satisfy xattr, then return true for this directory.\n-    for (INode inode : candidateNodes) {\n-      final XAttrFeature f \u003d inode.getXAttrFeature();\n-      if (inode.isFile() \u0026\u0026 f !\u003d null\n-          \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n-        return true;\n-      }\n+  private static boolean inodeHasSatisfyXAttr(INode inode) {\n+    final XAttrFeature f \u003d inode.getXAttrFeature();\n+    if (inode.isFile() \u0026\u0026 f !\u003d null\n+        \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n+      return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean inodeHasSatisfyXAttr(INode inode) {\n    final XAttrFeature f \u003d inode.getXAttrFeature();\n    if (inode.isFile() \u0026\u0026 f !\u003d null\n        \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSatisfyStoragePolicyOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "5ce332dc9a072f8850ab71ba16898faf8e866c06": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-11695: [SPS]: Namenode failed to start while loading SPS xAttrs from the edits log. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "5ce332dc9a072f8850ab71ba16898faf8e866c06",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:05 AM",
      "commitNameOld": "6fe6c549e8226b4893f502186f52452dcd9408a2",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private static boolean inodeHasSatisfyXAttr(List\u003cINode\u003e candidateNodes) {\n     // If the node is a directory and one of the child files\n     // has satisfy xattr, then return true for this directory.\n     for (INode inode : candidateNodes) {\n       final XAttrFeature f \u003d inode.getXAttrFeature();\n-      if (inode.isFile() \u0026\u0026\n-          f !\u003d null \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n+      if (inode.isFile() \u0026\u0026 f !\u003d null\n+          \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n         return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean inodeHasSatisfyXAttr(List\u003cINode\u003e candidateNodes) {\n    // If the node is a directory and one of the child files\n    // has satisfy xattr, then return true for this directory.\n    for (INode inode : candidateNodes) {\n      final XAttrFeature f \u003d inode.getXAttrFeature();\n      if (inode.isFile() \u0026\u0026 f !\u003d null\n          \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSatisfyStoragePolicyOp.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSatisfyStoragePolicyOp.java",
        "oldMethodName": "inodeHasSatisfyXAttr",
        "newMethodName": "inodeHasSatisfyXAttr"
      }
    },
    "6215e35bb633706753a464ad3e8633366e6a10b2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11150: [SPS]: Provide persistence when satisfying storage policy. Contributed by Yuanbo Liu\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "6215e35bb633706753a464ad3e8633366e6a10b2",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,12 @@\n+  private static boolean inodeHasSatisfyXAttr(List\u003cINode\u003e candidateNodes) {\n+    // If the node is a directory and one of the child files\n+    // has satisfy xattr, then return true for this directory.\n+    for (INode inode : candidateNodes) {\n+      final XAttrFeature f \u003d inode.getXAttrFeature();\n+      if (inode.isFile() \u0026\u0026\n+          f !\u003d null \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean inodeHasSatisfyXAttr(List\u003cINode\u003e candidateNodes) {\n    // If the node is a directory and one of the child files\n    // has satisfy xattr, then return true for this directory.\n    for (INode inode : candidateNodes) {\n      final XAttrFeature f \u003d inode.getXAttrFeature();\n      if (inode.isFile() \u0026\u0026\n          f !\u003d null \u0026\u0026 f.getXAttr(XATTR_SATISFY_STORAGE_POLICY) !\u003d null) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAttrOp.java"
    }
  }
}