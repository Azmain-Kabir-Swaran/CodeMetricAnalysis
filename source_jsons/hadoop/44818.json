{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueCLI.java",
  "functionName": "printQueueInfo",
  "functionId": "printQueueInfo___writer-PrintWriter__queueInfo-QueueInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
  "functionStartLine": 125,
  "functionEndLine": 167,
  "numCommitsSeen": 12,
  "timeTaken": 2792,
  "changeHistory": [
    "14d0f9a775086b2f0d174818c00c118c11f0c2b6",
    "949721508467968d5f46170353716ad04349cd6f",
    "bddfe42e2ccda2e6cc9d149461640ba36eca5922",
    "c5e6e3de1c31eda052f89eddd7bba288625936b9",
    "7faa406f27f687844c941346f59a27a375af3233",
    "ae5308fe1d08479da0f3929cc6a57816411e9121",
    "61effcbebc819ee1bd3d60f5444c39c972494a32"
  ],
  "changeHistoryShort": {
    "14d0f9a775086b2f0d174818c00c118c11f0c2b6": "Ybodychange",
    "949721508467968d5f46170353716ad04349cd6f": "Ybodychange",
    "bddfe42e2ccda2e6cc9d149461640ba36eca5922": "Ybodychange",
    "c5e6e3de1c31eda052f89eddd7bba288625936b9": "Ybodychange",
    "7faa406f27f687844c941346f59a27a375af3233": "Ybodychange",
    "ae5308fe1d08479da0f3929cc6a57816411e9121": "Ybodychange",
    "61effcbebc819ee1bd3d60f5444c39c972494a32": "Yintroduced"
  },
  "changeHistoryDetails": {
    "14d0f9a775086b2f0d174818c00c118c11f0c2b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8148. Update decimal values for queue capacities shown on queue status CLI. Contributed by Prabhu Joseph\n",
      "commitDate": "20/01/20 12:28 AM",
      "commitName": "14d0f9a775086b2f0d174818c00c118c11f0c2b6",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "28/11/18 12:42 AM",
      "commitNameOld": "7dc272199ffea28c8597151e17d4606928a7f9f3",
      "commitAuthorOld": "Suma Shivaprasad",
      "daysBetweenCommits": 417.99,
      "commitsBetweenForRepo": 2772,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n   private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n     writer.print(\"Queue Name : \");\n     writer.println(queueInfo.getQueueName());\n \n     writer.print(\"\\tState : \");\n     writer.println(queueInfo.getQueueState());\n-    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n+    DecimalFormat df \u003d new DecimalFormat(\"#.00\");\n     writer.print(\"\\tCapacity : \");\n     writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n     writer.print(\"\\tCurrent Capacity : \");\n     writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n     writer.print(\"\\tMaximum Capacity : \");\n     writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n     writer.print(\"\\tDefault Node Label expression : \");\n     String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n     nodeLabelExpression \u003d\n         (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n             ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n     writer.println(nodeLabelExpression);\n \n     Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n     StringBuilder labelList \u003d new StringBuilder();\n     writer.print(\"\\tAccessible Node Labels : \");\n     for (String nodeLabel : nodeLabels) {\n       if (labelList.length() \u003e 0) {\n         labelList.append(\u0027,\u0027);\n       }\n       labelList.append(nodeLabel);\n     }\n     writer.println(labelList.toString());\n \n     Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n     if (preemptStatus !\u003d null) {\n       writer.print(\"\\tPreemption : \");\n       writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n     }\n \n     Boolean intraQueuePreemption \u003d queueInfo.getIntraQueuePreemptionDisabled();\n     if (intraQueuePreemption !\u003d null) {\n       writer.print(\"\\tIntra-queue Preemption : \");\n       writer.println(intraQueuePreemption ? \"disabled\" : \"enabled\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n    writer.print(\"Queue Name : \");\n    writer.println(queueInfo.getQueueName());\n\n    writer.print(\"\\tState : \");\n    writer.println(queueInfo.getQueueState());\n    DecimalFormat df \u003d new DecimalFormat(\"#.00\");\n    writer.print(\"\\tCapacity : \");\n    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n    writer.print(\"\\tCurrent Capacity : \");\n    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n    writer.print(\"\\tMaximum Capacity : \");\n    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n    writer.print(\"\\tDefault Node Label expression : \");\n    String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n    nodeLabelExpression \u003d\n        (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n    writer.println(nodeLabelExpression);\n\n    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n    StringBuilder labelList \u003d new StringBuilder();\n    writer.print(\"\\tAccessible Node Labels : \");\n    for (String nodeLabel : nodeLabels) {\n      if (labelList.length() \u003e 0) {\n        labelList.append(\u0027,\u0027);\n      }\n      labelList.append(nodeLabel);\n    }\n    writer.println(labelList.toString());\n\n    Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n    if (preemptStatus !\u003d null) {\n      writer.print(\"\\tPreemption : \");\n      writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n    }\n\n    Boolean intraQueuePreemption \u003d queueInfo.getIntraQueuePreemptionDisabled();\n    if (intraQueuePreemption !\u003d null) {\n      writer.print(\"\\tIntra-queue Preemption : \");\n      writer.println(intraQueuePreemption ? \"disabled\" : \"enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "949721508467968d5f46170353716ad04349cd6f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7813. Capacity Scheduler Intra-queue Preemption should be configurable for each queue. Contributed by Eric Payne\n",
      "commitDate": "19/02/18 12:06 PM",
      "commitName": "949721508467968d5f46170353716ad04349cd6f",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "14/02/18 12:29 PM",
      "commitNameOld": "bddfe42e2ccda2e6cc9d149461640ba36eca5922",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 4.98,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,43 @@\n   private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n     writer.print(\"Queue Name : \");\n     writer.println(queueInfo.getQueueName());\n \n     writer.print(\"\\tState : \");\n     writer.println(queueInfo.getQueueState());\n     DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n     writer.print(\"\\tCapacity : \");\n     writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n     writer.print(\"\\tCurrent Capacity : \");\n     writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n     writer.print(\"\\tMaximum Capacity : \");\n     writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n     writer.print(\"\\tDefault Node Label expression : \");\n     String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n     nodeLabelExpression \u003d\n         (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n             ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n     writer.println(nodeLabelExpression);\n \n     Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n     StringBuilder labelList \u003d new StringBuilder();\n     writer.print(\"\\tAccessible Node Labels : \");\n     for (String nodeLabel : nodeLabels) {\n       if (labelList.length() \u003e 0) {\n         labelList.append(\u0027,\u0027);\n       }\n       labelList.append(nodeLabel);\n     }\n     writer.println(labelList.toString());\n \n     Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n     if (preemptStatus !\u003d null) {\n       writer.print(\"\\tPreemption : \");\n       writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n     }\n+\n+    Boolean intraQueuePreemption \u003d queueInfo.getIntraQueuePreemptionDisabled();\n+    if (intraQueuePreemption !\u003d null) {\n+      writer.print(\"\\tIntra-queue Preemption : \");\n+      writer.println(intraQueuePreemption ? \"disabled\" : \"enabled\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n    writer.print(\"Queue Name : \");\n    writer.println(queueInfo.getQueueName());\n\n    writer.print(\"\\tState : \");\n    writer.println(queueInfo.getQueueState());\n    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n    writer.print(\"\\tCapacity : \");\n    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n    writer.print(\"\\tCurrent Capacity : \");\n    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n    writer.print(\"\\tMaximum Capacity : \");\n    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n    writer.print(\"\\tDefault Node Label expression : \");\n    String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n    nodeLabelExpression \u003d\n        (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n    writer.println(nodeLabelExpression);\n\n    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n    StringBuilder labelList \u003d new StringBuilder();\n    writer.print(\"\\tAccessible Node Labels : \");\n    for (String nodeLabel : nodeLabels) {\n      if (labelList.length() \u003e 0) {\n        labelList.append(\u0027,\u0027);\n      }\n      labelList.append(nodeLabel);\n    }\n    writer.println(labelList.toString());\n\n    Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n    if (preemptStatus !\u003d null) {\n      writer.print(\"\\tPreemption : \");\n      writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n    }\n\n    Boolean intraQueuePreemption \u003d queueInfo.getIntraQueuePreemptionDisabled();\n    if (intraQueuePreemption !\u003d null) {\n      writer.print(\"\\tIntra-queue Preemption : \");\n      writer.println(intraQueuePreemption ? \"disabled\" : \"enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "bddfe42e2ccda2e6cc9d149461640ba36eca5922": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7813: Capacity Scheduler Intra-queue Preemption should be configurable for each queue\"\n\nThis reverts commit c5e6e3de1c31eda052f89eddd7bba288625936b9.\n",
      "commitDate": "14/02/18 12:29 PM",
      "commitName": "bddfe42e2ccda2e6cc9d149461640ba36eca5922",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "13/02/18 8:11 AM",
      "commitNameOld": "c5e6e3de1c31eda052f89eddd7bba288625936b9",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 1.18,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,37 @@\n   private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n     writer.print(\"Queue Name : \");\n     writer.println(queueInfo.getQueueName());\n \n     writer.print(\"\\tState : \");\n     writer.println(queueInfo.getQueueState());\n     DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n     writer.print(\"\\tCapacity : \");\n     writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n     writer.print(\"\\tCurrent Capacity : \");\n     writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n     writer.print(\"\\tMaximum Capacity : \");\n     writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n     writer.print(\"\\tDefault Node Label expression : \");\n     String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n     nodeLabelExpression \u003d\n         (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n             ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n     writer.println(nodeLabelExpression);\n \n     Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n     StringBuilder labelList \u003d new StringBuilder();\n     writer.print(\"\\tAccessible Node Labels : \");\n     for (String nodeLabel : nodeLabels) {\n       if (labelList.length() \u003e 0) {\n         labelList.append(\u0027,\u0027);\n       }\n       labelList.append(nodeLabel);\n     }\n     writer.println(labelList.toString());\n \n     Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n     if (preemptStatus !\u003d null) {\n       writer.print(\"\\tPreemption : \");\n       writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n     }\n-\n-    Boolean intraQueuePreemption \u003d queueInfo.getIntraQueuePreemptionDisabled();\n-    if (intraQueuePreemption !\u003d null) {\n-      writer.print(\"\\tIntra-queue Preemption : \");\n-      writer.println(intraQueuePreemption ? \"disabled\" : \"enabled\");\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n    writer.print(\"Queue Name : \");\n    writer.println(queueInfo.getQueueName());\n\n    writer.print(\"\\tState : \");\n    writer.println(queueInfo.getQueueState());\n    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n    writer.print(\"\\tCapacity : \");\n    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n    writer.print(\"\\tCurrent Capacity : \");\n    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n    writer.print(\"\\tMaximum Capacity : \");\n    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n    writer.print(\"\\tDefault Node Label expression : \");\n    String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n    nodeLabelExpression \u003d\n        (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n    writer.println(nodeLabelExpression);\n\n    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n    StringBuilder labelList \u003d new StringBuilder();\n    writer.print(\"\\tAccessible Node Labels : \");\n    for (String nodeLabel : nodeLabels) {\n      if (labelList.length() \u003e 0) {\n        labelList.append(\u0027,\u0027);\n      }\n      labelList.append(nodeLabel);\n    }\n    writer.println(labelList.toString());\n\n    Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n    if (preemptStatus !\u003d null) {\n      writer.print(\"\\tPreemption : \");\n      writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "c5e6e3de1c31eda052f89eddd7bba288625936b9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7813: Capacity Scheduler Intra-queue Preemption should be configurable for each queue\n",
      "commitDate": "13/02/18 8:11 AM",
      "commitName": "c5e6e3de1c31eda052f89eddd7bba288625936b9",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "16/12/15 1:19 PM",
      "commitNameOld": "7faa406f27f687844c941346f59a27a375af3233",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 789.79,
      "commitsBetweenForRepo": 5243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,43 @@\n   private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n     writer.print(\"Queue Name : \");\n     writer.println(queueInfo.getQueueName());\n \n     writer.print(\"\\tState : \");\n     writer.println(queueInfo.getQueueState());\n     DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n     writer.print(\"\\tCapacity : \");\n     writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n     writer.print(\"\\tCurrent Capacity : \");\n     writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n     writer.print(\"\\tMaximum Capacity : \");\n     writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n     writer.print(\"\\tDefault Node Label expression : \");\n     String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n     nodeLabelExpression \u003d\n         (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n             ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n     writer.println(nodeLabelExpression);\n \n     Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n     StringBuilder labelList \u003d new StringBuilder();\n     writer.print(\"\\tAccessible Node Labels : \");\n     for (String nodeLabel : nodeLabels) {\n       if (labelList.length() \u003e 0) {\n         labelList.append(\u0027,\u0027);\n       }\n       labelList.append(nodeLabel);\n     }\n     writer.println(labelList.toString());\n \n     Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n     if (preemptStatus !\u003d null) {\n       writer.print(\"\\tPreemption : \");\n       writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n     }\n+\n+    Boolean intraQueuePreemption \u003d queueInfo.getIntraQueuePreemptionDisabled();\n+    if (intraQueuePreemption !\u003d null) {\n+      writer.print(\"\\tIntra-queue Preemption : \");\n+      writer.println(intraQueuePreemption ? \"disabled\" : \"enabled\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n    writer.print(\"Queue Name : \");\n    writer.println(queueInfo.getQueueName());\n\n    writer.print(\"\\tState : \");\n    writer.println(queueInfo.getQueueState());\n    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n    writer.print(\"\\tCapacity : \");\n    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n    writer.print(\"\\tCurrent Capacity : \");\n    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n    writer.print(\"\\tMaximum Capacity : \");\n    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n    writer.print(\"\\tDefault Node Label expression : \");\n    String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n    nodeLabelExpression \u003d\n        (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n    writer.println(nodeLabelExpression);\n\n    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n    StringBuilder labelList \u003d new StringBuilder();\n    writer.print(\"\\tAccessible Node Labels : \");\n    for (String nodeLabel : nodeLabels) {\n      if (labelList.length() \u003e 0) {\n        labelList.append(\u0027,\u0027);\n      }\n      labelList.append(nodeLabel);\n    }\n    writer.println(labelList.toString());\n\n    Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n    if (preemptStatus !\u003d null) {\n      writer.print(\"\\tPreemption : \");\n      writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n    }\n\n    Boolean intraQueuePreemption \u003d queueInfo.getIntraQueuePreemptionDisabled();\n    if (intraQueuePreemption !\u003d null) {\n      writer.print(\"\\tIntra-queue Preemption : \");\n      writer.println(intraQueuePreemption ? \"disabled\" : \"enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "7faa406f27f687844c941346f59a27a375af3233": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4225. Add preemption status to yarn queue -status for capacity scheduler. (Eric Payne via wangda)\n",
      "commitDate": "16/12/15 1:19 PM",
      "commitName": "7faa406f27f687844c941346f59a27a375af3233",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "15/09/15 11:40 AM",
      "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 92.11,
      "commitsBetweenForRepo": 684,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,37 @@\n   private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n     writer.print(\"Queue Name : \");\n     writer.println(queueInfo.getQueueName());\n \n     writer.print(\"\\tState : \");\n     writer.println(queueInfo.getQueueState());\n     DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n     writer.print(\"\\tCapacity : \");\n     writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n     writer.print(\"\\tCurrent Capacity : \");\n     writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n     writer.print(\"\\tMaximum Capacity : \");\n     writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n     writer.print(\"\\tDefault Node Label expression : \");\n     String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n     nodeLabelExpression \u003d\n         (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n             ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n     writer.println(nodeLabelExpression);\n \n     Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n     StringBuilder labelList \u003d new StringBuilder();\n     writer.print(\"\\tAccessible Node Labels : \");\n     for (String nodeLabel : nodeLabels) {\n       if (labelList.length() \u003e 0) {\n         labelList.append(\u0027,\u0027);\n       }\n       labelList.append(nodeLabel);\n     }\n     writer.println(labelList.toString());\n+\n+    Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n+    if (preemptStatus !\u003d null) {\n+      writer.print(\"\\tPreemption : \");\n+      writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n    writer.print(\"Queue Name : \");\n    writer.println(queueInfo.getQueueName());\n\n    writer.print(\"\\tState : \");\n    writer.println(queueInfo.getQueueState());\n    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n    writer.print(\"\\tCapacity : \");\n    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n    writer.print(\"\\tCurrent Capacity : \");\n    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n    writer.print(\"\\tMaximum Capacity : \");\n    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n    writer.print(\"\\tDefault Node Label expression : \");\n    String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n    nodeLabelExpression \u003d\n        (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n    writer.println(nodeLabelExpression);\n\n    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n    StringBuilder labelList \u003d new StringBuilder();\n    writer.print(\"\\tAccessible Node Labels : \");\n    for (String nodeLabel : nodeLabels) {\n      if (labelList.length() \u003e 0) {\n        labelList.append(\u0027,\u0027);\n      }\n      labelList.append(nodeLabel);\n    }\n    writer.println(labelList.toString());\n\n    Boolean preemptStatus \u003d queueInfo.getPreemptionDisabled();\n    if (preemptStatus !\u003d null) {\n      writer.print(\"\\tPreemption : \");\n      writer.println(preemptStatus ? \"disabled\" : \"enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "ae5308fe1d08479da0f3929cc6a57816411e9121": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3717. Expose app/am/queue\u0027s node-label-expression to RM web UI / CLI / REST-API. (Naganarasimha G R via wangda)\n",
      "commitDate": "15/09/15 11:40 AM",
      "commitName": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/12/14 8:04 PM",
      "commitNameOld": "d468c9aaf15e977f12e6214b47996412c907e069",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 265.61,
      "commitsBetweenForRepo": 2008,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n     writer.print(\"Queue Name : \");\n     writer.println(queueInfo.getQueueName());\n \n     writer.print(\"\\tState : \");\n     writer.println(queueInfo.getQueueState());\n     DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n     writer.print(\"\\tCapacity : \");\n     writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n     writer.print(\"\\tCurrent Capacity : \");\n     writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n     writer.print(\"\\tMaximum Capacity : \");\n     writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n     writer.print(\"\\tDefault Node Label expression : \");\n-    if (null !\u003d queueInfo.getDefaultNodeLabelExpression()) {\n-      writer.println(queueInfo.getDefaultNodeLabelExpression());\n-    } else {\n-      writer.println();\n-    }\n+    String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n+    nodeLabelExpression \u003d\n+        (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n+            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n+    writer.println(nodeLabelExpression);\n \n     Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n     StringBuilder labelList \u003d new StringBuilder();\n     writer.print(\"\\tAccessible Node Labels : \");\n     for (String nodeLabel : nodeLabels) {\n       if (labelList.length() \u003e 0) {\n         labelList.append(\u0027,\u0027);\n       }\n       labelList.append(nodeLabel);\n     }\n     writer.println(labelList.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n    writer.print(\"Queue Name : \");\n    writer.println(queueInfo.getQueueName());\n\n    writer.print(\"\\tState : \");\n    writer.println(queueInfo.getQueueState());\n    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n    writer.print(\"\\tCapacity : \");\n    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n    writer.print(\"\\tCurrent Capacity : \");\n    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n    writer.print(\"\\tMaximum Capacity : \");\n    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n    writer.print(\"\\tDefault Node Label expression : \");\n    String nodeLabelExpression \u003d queueInfo.getDefaultNodeLabelExpression();\n    nodeLabelExpression \u003d\n        (nodeLabelExpression \u003d\u003d null || nodeLabelExpression.trim().isEmpty())\n            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabelExpression;\n    writer.println(nodeLabelExpression);\n\n    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n    StringBuilder labelList \u003d new StringBuilder();\n    writer.print(\"\\tAccessible Node Labels : \");\n    for (String nodeLabel : nodeLabels) {\n      if (labelList.length() \u003e 0) {\n        labelList.append(\u0027,\u0027);\n      }\n      labelList.append(nodeLabel);\n    }\n    writer.println(labelList.toString());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "61effcbebc819ee1bd3d60f5444c39c972494a32": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2647. Added a queue CLI for getting queue information. Contributed by Sunil Govind.\n",
      "commitDate": "06/11/14 8:48 PM",
      "commitName": "61effcbebc819ee1bd3d60f5444c39c972494a32",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,31 @@\n+  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n+    writer.print(\"Queue Name : \");\n+    writer.println(queueInfo.getQueueName());\n+\n+    writer.print(\"\\tState : \");\n+    writer.println(queueInfo.getQueueState());\n+    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n+    writer.print(\"\\tCapacity : \");\n+    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n+    writer.print(\"\\tCurrent Capacity : \");\n+    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n+    writer.print(\"\\tMaximum Capacity : \");\n+    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n+    writer.print(\"\\tDefault Node Label expression : \");\n+    if (null !\u003d queueInfo.getDefaultNodeLabelExpression()) {\n+      writer.println(queueInfo.getDefaultNodeLabelExpression());\n+    } else {\n+      writer.println();\n+    }\n+\n+    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n+    StringBuilder labelList \u003d new StringBuilder();\n+    writer.print(\"\\tAccessible Node Labels : \");\n+    for (String nodeLabel : nodeLabels) {\n+      if (labelList.length() \u003e 0) {\n+        labelList.append(\u0027,\u0027);\n+      }\n+      labelList.append(nodeLabel);\n+    }\n+    writer.println(labelList.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printQueueInfo(PrintWriter writer, QueueInfo queueInfo) {\n    writer.print(\"Queue Name : \");\n    writer.println(queueInfo.getQueueName());\n\n    writer.print(\"\\tState : \");\n    writer.println(queueInfo.getQueueState());\n    DecimalFormat df \u003d new DecimalFormat(\"#.0\");\n    writer.print(\"\\tCapacity : \");\n    writer.println(df.format(queueInfo.getCapacity() * 100) + \"%\");\n    writer.print(\"\\tCurrent Capacity : \");\n    writer.println(df.format(queueInfo.getCurrentCapacity() * 100) + \"%\");\n    writer.print(\"\\tMaximum Capacity : \");\n    writer.println(df.format(queueInfo.getMaximumCapacity() * 100) + \"%\");\n    writer.print(\"\\tDefault Node Label expression : \");\n    if (null !\u003d queueInfo.getDefaultNodeLabelExpression()) {\n      writer.println(queueInfo.getDefaultNodeLabelExpression());\n    } else {\n      writer.println();\n    }\n\n    Set\u003cString\u003e nodeLabels \u003d queueInfo.getAccessibleNodeLabels();\n    StringBuilder labelList \u003d new StringBuilder();\n    writer.print(\"\\tAccessible Node Labels : \");\n    for (String nodeLabel : nodeLabels) {\n      if (labelList.length() \u003e 0) {\n        labelList.append(\u0027,\u0027);\n      }\n      labelList.append(nodeLabel);\n    }\n    writer.println(labelList.toString());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java"
    }
  }
}