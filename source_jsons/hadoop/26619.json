{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobImpl.java",
  "functionName": "getMapAttemptCompletionEvents",
  "functionId": "getMapAttemptCompletionEvents___startIndex-int__maxEvents-int",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
  "functionStartLine": 842,
  "functionEndLine": 857,
  "numCommitsSeen": 94,
  "timeTaken": 2321,
  "changeHistory": [
    "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb",
    "1195f844a9a74de6709ba7d8aaf70c21f27cd2b3"
  ],
  "changeHistoryShort": {
    "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb": "Ymultichange(Yreturntypechange,Ybodychange)",
    "1195f844a9a74de6709ba7d8aaf70c21f27cd2b3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4946. Fix a performance problem for large jobs by reducing the number of map completion event type conversions. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1437103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/13 11:07 AM",
      "commitName": "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-4946. Fix a performance problem for large jobs by reducing the number of map completion event type conversions. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1437103 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/01/13 11:07 AM",
          "commitName": "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "15/01/13 6:45 AM",
          "commitNameOld": "dd6aa0cf124786e473bf373bc5e0957e50fc9b5d",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 7.18,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,16 @@\n-  public TaskAttemptCompletionEvent[] getMapAttemptCompletionEvents(\n+  public TaskCompletionEvent[] getMapAttemptCompletionEvents(\n       int startIndex, int maxEvents) {\n-    return getAttemptCompletionEvents(mapAttemptCompletionEvents,\n-        startIndex, maxEvents);\n+    TaskCompletionEvent[] events \u003d EMPTY_TASK_COMPLETION_EVENTS;\n+    readLock.lock();\n+    try {\n+      if (mapAttemptCompletionEvents.size() \u003e startIndex) {\n+        int actualMax \u003d Math.min(maxEvents,\n+            (mapAttemptCompletionEvents.size() - startIndex));\n+        events \u003d mapAttemptCompletionEvents.subList(startIndex,\n+            actualMax + startIndex).toArray(events);\n+      }\n+      return events;\n+    } finally {\n+      readLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TaskCompletionEvent[] getMapAttemptCompletionEvents(\n      int startIndex, int maxEvents) {\n    TaskCompletionEvent[] events \u003d EMPTY_TASK_COMPLETION_EVENTS;\n    readLock.lock();\n    try {\n      if (mapAttemptCompletionEvents.size() \u003e startIndex) {\n        int actualMax \u003d Math.min(maxEvents,\n            (mapAttemptCompletionEvents.size() - startIndex));\n        events \u003d mapAttemptCompletionEvents.subList(startIndex,\n            actualMax + startIndex).toArray(events);\n      }\n      return events;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
          "extendedDetails": {
            "oldValue": "TaskAttemptCompletionEvent[]",
            "newValue": "TaskCompletionEvent[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4946. Fix a performance problem for large jobs by reducing the number of map completion event type conversions. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1437103 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/01/13 11:07 AM",
          "commitName": "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "15/01/13 6:45 AM",
          "commitNameOld": "dd6aa0cf124786e473bf373bc5e0957e50fc9b5d",
          "commitAuthorOld": "Jason Darrell Lowe",
          "daysBetweenCommits": 7.18,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,16 @@\n-  public TaskAttemptCompletionEvent[] getMapAttemptCompletionEvents(\n+  public TaskCompletionEvent[] getMapAttemptCompletionEvents(\n       int startIndex, int maxEvents) {\n-    return getAttemptCompletionEvents(mapAttemptCompletionEvents,\n-        startIndex, maxEvents);\n+    TaskCompletionEvent[] events \u003d EMPTY_TASK_COMPLETION_EVENTS;\n+    readLock.lock();\n+    try {\n+      if (mapAttemptCompletionEvents.size() \u003e startIndex) {\n+        int actualMax \u003d Math.min(maxEvents,\n+            (mapAttemptCompletionEvents.size() - startIndex));\n+        events \u003d mapAttemptCompletionEvents.subList(startIndex,\n+            actualMax + startIndex).toArray(events);\n+      }\n+      return events;\n+    } finally {\n+      readLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TaskCompletionEvent[] getMapAttemptCompletionEvents(\n      int startIndex, int maxEvents) {\n    TaskCompletionEvent[] events \u003d EMPTY_TASK_COMPLETION_EVENTS;\n    readLock.lock();\n    try {\n      if (mapAttemptCompletionEvents.size() \u003e startIndex) {\n        int actualMax \u003d Math.min(maxEvents,\n            (mapAttemptCompletionEvents.size() - startIndex));\n        events \u003d mapAttemptCompletionEvents.subList(startIndex,\n            actualMax + startIndex).toArray(events);\n      }\n      return events;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "1195f844a9a74de6709ba7d8aaf70c21f27cd2b3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4733. Reducer can fail to make progress during shuffle if too many reducers complete consecutively. Contributed by Jason Lowe via.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1400264 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/10/12 1:18 PM",
      "commitName": "1195f844a9a74de6709ba7d8aaf70c21f27cd2b3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,5 @@\n+  public TaskAttemptCompletionEvent[] getMapAttemptCompletionEvents(\n+      int startIndex, int maxEvents) {\n+    return getAttemptCompletionEvents(mapAttemptCompletionEvents,\n+        startIndex, maxEvents);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptCompletionEvent[] getMapAttemptCompletionEvents(\n      int startIndex, int maxEvents) {\n    return getAttemptCompletionEvents(mapAttemptCompletionEvents,\n        startIndex, maxEvents);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
    }
  }
}