{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActiveStandbyElector.java",
  "functionName": "becomeActive",
  "functionId": "becomeActive",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
  "functionStartLine": 889,
  "functionEndLine": 909,
  "numCommitsSeen": 38,
  "timeTaken": 1865,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5",
    "b74d7427855eb7e20be70155c11acac0e333bd6a",
    "66931670287bc859300014ad50531f5d9a648067",
    "31c2e3f29cbdc33a7333022d61130a25cee03684",
    "805c1280ce2773bc61ea718723b42b09d795688f",
    "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5": "Ybodychange",
    "b74d7427855eb7e20be70155c11acac0e333bd6a": "Ybodychange",
    "66931670287bc859300014ad50531f5d9a648067": "Ymultichange(Yreturntypechange,Ybodychange)",
    "31c2e3f29cbdc33a7333022d61130a25cee03684": "Ybodychange",
    "805c1280ce2773bc61ea718723b42b09d795688f": "Ybodychange",
    "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   private boolean becomeActive() {\n     assert wantToBeInElection;\n     if (state \u003d\u003d State.ACTIVE) {\n       // already active\n       return true;\n     }\n     try {\n       Stat oldBreadcrumbStat \u003d fenceOldActive();\n       writeBreadCrumbNode(oldBreadcrumbStat);\n \n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Becoming active for \" + this);\n-      }\n+      LOG.debug(\"Becoming active for {}\", this);\n+\n       appClient.becomeActive();\n       state \u003d State.ACTIVE;\n       return true;\n     } catch (Exception e) {\n       LOG.warn(\"Exception handling the winning of election\", e);\n       // Caller will handle quitting and rejoining the election.\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean becomeActive() {\n    assert wantToBeInElection;\n    if (state \u003d\u003d State.ACTIVE) {\n      // already active\n      return true;\n    }\n    try {\n      Stat oldBreadcrumbStat \u003d fenceOldActive();\n      writeBreadCrumbNode(oldBreadcrumbStat);\n\n      LOG.debug(\"Becoming active for {}\", this);\n\n      appClient.becomeActive();\n      state \u003d State.ACTIVE;\n      return true;\n    } catch (Exception e) {\n      LOG.warn(\"Exception handling the winning of election\", e);\n      // Caller will handle quitting and rejoining the election.\n      return false;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11741. Add LOG.isDebugEnabled() guard for some LOG.debug(). Contributed by Walter Su.\n",
      "commitDate": "25/03/15 12:36 AM",
      "commitName": "5582b0f1d469e7c98811a341c4b4c78eaa64ede5",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "05/01/15 7:45 PM",
      "commitNameOld": "9803ae374f69942aec82ec6eeeb9722523a1ade0",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 78.16,
      "commitsBetweenForRepo": 694,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   private boolean becomeActive() {\n     assert wantToBeInElection;\n     if (state \u003d\u003d State.ACTIVE) {\n       // already active\n       return true;\n     }\n     try {\n       Stat oldBreadcrumbStat \u003d fenceOldActive();\n       writeBreadCrumbNode(oldBreadcrumbStat);\n-      \n-      LOG.debug(\"Becoming active for \" + this);\n+\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Becoming active for \" + this);\n+      }\n       appClient.becomeActive();\n       state \u003d State.ACTIVE;\n       return true;\n     } catch (Exception e) {\n       LOG.warn(\"Exception handling the winning of election\", e);\n       // Caller will handle quitting and rejoining the election.\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean becomeActive() {\n    assert wantToBeInElection;\n    if (state \u003d\u003d State.ACTIVE) {\n      // already active\n      return true;\n    }\n    try {\n      Stat oldBreadcrumbStat \u003d fenceOldActive();\n      writeBreadCrumbNode(oldBreadcrumbStat);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Becoming active for \" + this);\n      }\n      appClient.becomeActive();\n      state \u003d State.ACTIVE;\n      return true;\n    } catch (Exception e) {\n      LOG.warn(\"Exception handling the winning of election\", e);\n      // Caller will handle quitting and rejoining the election.\n      return false;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "b74d7427855eb7e20be70155c11acac0e333bd6a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8245. Fix flakiness in TestZKFailoverController. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1309554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/04/12 12:21 PM",
      "commitName": "b74d7427855eb7e20be70155c11acac0e333bd6a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "03/04/12 4:37 PM",
      "commitNameOld": "30e1b3bba856b2379a0dc1e7450512427d39c5d7",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.82,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private boolean becomeActive() {\n     assert wantToBeInElection;\n     if (state \u003d\u003d State.ACTIVE) {\n       // already active\n       return true;\n     }\n     try {\n       Stat oldBreadcrumbStat \u003d fenceOldActive();\n       writeBreadCrumbNode(oldBreadcrumbStat);\n       \n-      LOG.debug(\"Becoming active\");\n+      LOG.debug(\"Becoming active for \" + this);\n       appClient.becomeActive();\n       state \u003d State.ACTIVE;\n       return true;\n     } catch (Exception e) {\n       LOG.warn(\"Exception handling the winning of election\", e);\n       // Caller will handle quitting and rejoining the election.\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean becomeActive() {\n    assert wantToBeInElection;\n    if (state \u003d\u003d State.ACTIVE) {\n      // already active\n      return true;\n    }\n    try {\n      Stat oldBreadcrumbStat \u003d fenceOldActive();\n      writeBreadCrumbNode(oldBreadcrumbStat);\n      \n      LOG.debug(\"Becoming active for \" + this);\n      appClient.becomeActive();\n      state \u003d State.ACTIVE;\n      return true;\n    } catch (Exception e) {\n      LOG.warn(\"Exception handling the winning of election\", e);\n      // Caller will handle quitting and rejoining the election.\n      return false;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "66931670287bc859300014ad50531f5d9a648067": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-8220. ZKFailoverController doesn\u0027t handle failure to become active correctly. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1307596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/03/12 1:23 PM",
      "commitName": "66931670287bc859300014ad50531f5d9a648067",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-8220. ZKFailoverController doesn\u0027t handle failure to become active correctly. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1307596 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/03/12 1:23 PM",
          "commitName": "66931670287bc859300014ad50531f5d9a648067",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/03/12 2:49 PM",
          "commitNameOld": "04416861eb068f5d0a4ba1361924714d89f2d73c",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.94,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n-  private void becomeActive() {\n+  private boolean becomeActive() {\n     assert wantToBeInElection;\n-    if (state !\u003d State.ACTIVE) {\n-      try {\n-        Stat oldBreadcrumbStat \u003d fenceOldActive();\n-        writeBreadCrumbNode(oldBreadcrumbStat);\n-      } catch (Exception e) {\n-        LOG.warn(\"Exception handling the winning of election\", e);\n-        reJoinElection();\n-        return;\n-      }\n+    if (state \u003d\u003d State.ACTIVE) {\n+      // already active\n+      return true;\n+    }\n+    try {\n+      Stat oldBreadcrumbStat \u003d fenceOldActive();\n+      writeBreadCrumbNode(oldBreadcrumbStat);\n+      \n       LOG.debug(\"Becoming active\");\n-      state \u003d State.ACTIVE;\n       appClient.becomeActive();\n+      state \u003d State.ACTIVE;\n+      return true;\n+    } catch (Exception e) {\n+      LOG.warn(\"Exception handling the winning of election\", e);\n+      // Caller will handle quitting and rejoining the election.\n+      return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean becomeActive() {\n    assert wantToBeInElection;\n    if (state \u003d\u003d State.ACTIVE) {\n      // already active\n      return true;\n    }\n    try {\n      Stat oldBreadcrumbStat \u003d fenceOldActive();\n      writeBreadCrumbNode(oldBreadcrumbStat);\n      \n      LOG.debug(\"Becoming active\");\n      appClient.becomeActive();\n      state \u003d State.ACTIVE;\n      return true;\n    } catch (Exception e) {\n      LOG.warn(\"Exception handling the winning of election\", e);\n      // Caller will handle quitting and rejoining the election.\n      return false;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8220. ZKFailoverController doesn\u0027t handle failure to become active correctly. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1307596 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/03/12 1:23 PM",
          "commitName": "66931670287bc859300014ad50531f5d9a648067",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/03/12 2:49 PM",
          "commitNameOld": "04416861eb068f5d0a4ba1361924714d89f2d73c",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.94,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n-  private void becomeActive() {\n+  private boolean becomeActive() {\n     assert wantToBeInElection;\n-    if (state !\u003d State.ACTIVE) {\n-      try {\n-        Stat oldBreadcrumbStat \u003d fenceOldActive();\n-        writeBreadCrumbNode(oldBreadcrumbStat);\n-      } catch (Exception e) {\n-        LOG.warn(\"Exception handling the winning of election\", e);\n-        reJoinElection();\n-        return;\n-      }\n+    if (state \u003d\u003d State.ACTIVE) {\n+      // already active\n+      return true;\n+    }\n+    try {\n+      Stat oldBreadcrumbStat \u003d fenceOldActive();\n+      writeBreadCrumbNode(oldBreadcrumbStat);\n+      \n       LOG.debug(\"Becoming active\");\n-      state \u003d State.ACTIVE;\n       appClient.becomeActive();\n+      state \u003d State.ACTIVE;\n+      return true;\n+    } catch (Exception e) {\n+      LOG.warn(\"Exception handling the winning of election\", e);\n+      // Caller will handle quitting and rejoining the election.\n+      return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean becomeActive() {\n    assert wantToBeInElection;\n    if (state \u003d\u003d State.ACTIVE) {\n      // already active\n      return true;\n    }\n    try {\n      Stat oldBreadcrumbStat \u003d fenceOldActive();\n      writeBreadCrumbNode(oldBreadcrumbStat);\n      \n      LOG.debug(\"Becoming active\");\n      appClient.becomeActive();\n      state \u003d State.ACTIVE;\n      return true;\n    } catch (Exception e) {\n      LOG.warn(\"Exception handling the winning of election\", e);\n      // Caller will handle quitting and rejoining the election.\n      return false;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
          "extendedDetails": {}
        }
      ]
    },
    "31c2e3f29cbdc33a7333022d61130a25cee03684": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8212. Improve ActiveStandbyElector\u0027s behavior when session expires. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305510 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 12:31 PM",
      "commitName": "31c2e3f29cbdc33a7333022d61130a25cee03684",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "23/03/12 5:05 PM",
      "commitNameOld": "805c1280ce2773bc61ea718723b42b09d795688f",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 2.81,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   private void becomeActive() {\n+    assert wantToBeInElection;\n     if (state !\u003d State.ACTIVE) {\n       try {\n         Stat oldBreadcrumbStat \u003d fenceOldActive();\n         writeBreadCrumbNode(oldBreadcrumbStat);\n       } catch (Exception e) {\n         LOG.warn(\"Exception handling the winning of election\", e);\n         reJoinElection();\n         return;\n       }\n       LOG.debug(\"Becoming active\");\n       state \u003d State.ACTIVE;\n       appClient.becomeActive();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void becomeActive() {\n    assert wantToBeInElection;\n    if (state !\u003d State.ACTIVE) {\n      try {\n        Stat oldBreadcrumbStat \u003d fenceOldActive();\n        writeBreadCrumbNode(oldBreadcrumbStat);\n      } catch (Exception e) {\n        LOG.warn(\"Exception handling the winning of election\", e);\n        reJoinElection();\n        return;\n      }\n      LOG.debug(\"Becoming active\");\n      state \u003d State.ACTIVE;\n      appClient.becomeActive();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "805c1280ce2773bc61ea718723b42b09d795688f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8163. Improve ActiveStandbyElector to provide hooks for fencing old active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/03/12 5:05 PM",
      "commitName": "805c1280ce2773bc61ea718723b42b09d795688f",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "01/03/12 5:32 PM",
      "commitNameOld": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 21.94,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,15 @@\n   private void becomeActive() {\n     if (state !\u003d State.ACTIVE) {\n+      try {\n+        Stat oldBreadcrumbStat \u003d fenceOldActive();\n+        writeBreadCrumbNode(oldBreadcrumbStat);\n+      } catch (Exception e) {\n+        LOG.warn(\"Exception handling the winning of election\", e);\n+        reJoinElection();\n+        return;\n+      }\n       LOG.debug(\"Becoming active\");\n       state \u003d State.ACTIVE;\n       appClient.becomeActive();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void becomeActive() {\n    if (state !\u003d State.ACTIVE) {\n      try {\n        Stat oldBreadcrumbStat \u003d fenceOldActive();\n        writeBreadCrumbNode(oldBreadcrumbStat);\n      } catch (Exception e) {\n        LOG.warn(\"Exception handling the winning of election\", e);\n        reJoinElection();\n        return;\n      }\n      LOG.debug(\"Becoming active\");\n      state \u003d State.ACTIVE;\n      appClient.becomeActive();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7992. Add ZKClient library to facilitate leader election. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1235841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 9:26 AM",
      "commitName": "cbfe8fea0ee9753b1f79dd8bb9a2972d0539e9ec",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,7 @@\n+  private void becomeActive() {\n+    if (state !\u003d State.ACTIVE) {\n+      LOG.debug(\"Becoming active\");\n+      state \u003d State.ACTIVE;\n+      appClient.becomeActive();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void becomeActive() {\n    if (state !\u003d State.ACTIVE) {\n      LOG.debug(\"Becoming active\");\n      state \u003d State.ACTIVE;\n      appClient.becomeActive();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java"
    }
  }
}