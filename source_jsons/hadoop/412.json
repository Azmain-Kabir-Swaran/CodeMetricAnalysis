{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockReaderRemote.java",
  "functionName": "skip",
  "functionId": "skip___n-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote.java",
  "functionStartLine": 243,
  "functionEndLine": 263,
  "numCommitsSeen": 46,
  "timeTaken": 5968,
  "changeHistory": [
    "8b281bce85474501868d68f8d5590a6086abb7b7",
    "f308561f1d885491b88db73ac63003202056d661",
    "826ae1c26d31f87d88efc920b271bec7eec2e17a",
    "e89fc53a1d264fde407dd2c36defab5241cd0b52",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "dd86860633d2ed64705b669a75bf318442ed6225",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8b281bce85474501868d68f8d5590a6086abb7b7": "Ybodychange",
    "f308561f1d885491b88db73ac63003202056d661": "Yfilerename",
    "826ae1c26d31f87d88efc920b271bec7eec2e17a": "Yfilerename",
    "e89fc53a1d264fde407dd2c36defab5241cd0b52": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "dd86860633d2ed64705b669a75bf318442ed6225": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8b281bce85474501868d68f8d5590a6086abb7b7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10548. Remove the long deprecated BlockReaderRemote. Contributed by Kai Zheng\n",
      "commitDate": "02/07/16 8:56 PM",
      "commitName": "8b281bce85474501868d68f8d5590a6086abb7b7",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "25/04/16 12:01 PM",
      "commitNameOld": "f308561f1d885491b88db73ac63003202056d661",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 68.37,
      "commitsBetweenForRepo": 478,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,21 @@\n   public synchronized long skip(long n) throws IOException {\n     /* How can we make sure we don\u0027t throw a ChecksumException, at least\n      * in majority of the cases?. This one throws. */\n-    long nSkipped \u003d 0;\n-    while (nSkipped \u003c n) {\n-      int toSkip \u003d (int)Math.min(n-nSkipped, Integer.MAX_VALUE);\n-      int ret \u003d readAndDiscard(toSkip);\n-      if (ret \u003c\u003d 0) {\n-        return nSkipped;\n+    long skipped \u003d 0;\n+    while (skipped \u003c n) {\n+      long needToSkip \u003d n - skipped;\n+      if (curDataSlice \u003d\u003d null ||\n+          curDataSlice.remaining() \u003d\u003d 0 \u0026\u0026 bytesNeededToFinish \u003e 0) {\n+        readNextPacket();\n       }\n-      nSkipped +\u003d ret;\n+      if (curDataSlice.remaining() \u003d\u003d 0) {\n+        // we\u0027re at EOF now\n+        break;\n+      }\n+\n+      int skip \u003d (int)Math.min(curDataSlice.remaining(), needToSkip);\n+      curDataSlice.position(curDataSlice.position() + skip);\n+      skipped +\u003d skip;\n     }\n-    return nSkipped;\n+    return skipped;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */\n    long skipped \u003d 0;\n    while (skipped \u003c n) {\n      long needToSkip \u003d n - skipped;\n      if (curDataSlice \u003d\u003d null ||\n          curDataSlice.remaining() \u003d\u003d 0 \u0026\u0026 bytesNeededToFinish \u003e 0) {\n        readNextPacket();\n      }\n      if (curDataSlice.remaining() \u003d\u003d 0) {\n        // we\u0027re at EOF now\n        break;\n      }\n\n      int skip \u003d (int)Math.min(curDataSlice.remaining(), needToSkip);\n      curDataSlice.position(curDataSlice.position() + skip);\n      skipped +\u003d skip;\n    }\n    return skipped;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote.java",
      "extendedDetails": {}
    },
    "f308561f1d885491b88db73ac63003202056d661": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8057 Move BlockReader implementation to the client implementation package.  Contributed by Takanobu Asanuma\n",
      "commitDate": "25/04/16 12:01 PM",
      "commitName": "f308561f1d885491b88db73ac63003202056d661",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "25/04/16 9:38 AM",
      "commitNameOld": "10f0f7851a3255caab775777e8fb6c2781d97062",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */\n    long nSkipped \u003d 0;\n    while (nSkipped \u003c n) {\n      int toSkip \u003d (int)Math.min(n-nSkipped, Integer.MAX_VALUE);\n      int ret \u003d readAndDiscard(toSkip);\n      if (ret \u003c\u003d 0) {\n        return nSkipped;\n      }\n      nSkipped +\u003d ret;\n    }\n    return nSkipped;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderRemote.java"
      }
    },
    "826ae1c26d31f87d88efc920b271bec7eec2e17a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8990. Move RemoteBlockReader to hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "31/08/15 1:54 PM",
      "commitName": "826ae1c26d31f87d88efc920b271bec7eec2e17a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "31/08/15 11:48 AM",
      "commitNameOld": "caa04de149030691b7bc952b534c6128db217ed2",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */  \n    long nSkipped \u003d 0;\n    while (nSkipped \u003c n) {\n      int toSkip \u003d (int)Math.min(n-nSkipped, Integer.MAX_VALUE);\n      int ret \u003d readAndDiscard(toSkip);\n      if (ret \u003c\u003d 0) {\n        return nSkipped;\n      }\n      nSkipped +\u003d ret;\n    }\n    return nSkipped;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java"
      }
    },
    "e89fc53a1d264fde407dd2c36defab5241cd0b52": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5574. Remove buffer copy in BlockReader.skip. Contributed by Binglin Chang.\n",
      "commitDate": "30/04/15 3:11 AM",
      "commitName": "e89fc53a1d264fde407dd2c36defab5241cd0b52",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "04/03/15 5:51 PM",
      "commitNameOld": "430b5371883e22abb65f37c3e3d4afc3f421fc89",
      "commitAuthorOld": "Dongming Liang",
      "daysBetweenCommits": 56.35,
      "commitsBetweenForRepo": 482,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,14 @@\n   public synchronized long skip(long n) throws IOException {\n     /* How can we make sure we don\u0027t throw a ChecksumException, at least\n      * in majority of the cases?. This one throws. */  \n-    if ( skipBuf \u003d\u003d null ) {\n-      skipBuf \u003d new byte[bytesPerChecksum]; \n-    }\n-\n     long nSkipped \u003d 0;\n-    while ( nSkipped \u003c n ) {\n-      int toSkip \u003d (int)Math.min(n-nSkipped, skipBuf.length);\n-      int ret \u003d read(skipBuf, 0, toSkip);\n-      if ( ret \u003c\u003d 0 ) {\n+    while (nSkipped \u003c n) {\n+      int toSkip \u003d (int)Math.min(n-nSkipped, Integer.MAX_VALUE);\n+      int ret \u003d readAndDiscard(toSkip);\n+      if (ret \u003c\u003d 0) {\n         return nSkipped;\n       }\n       nSkipped +\u003d ret;\n     }\n     return nSkipped;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */  \n    long nSkipped \u003d 0;\n    while (nSkipped \u003c n) {\n      int toSkip \u003d (int)Math.min(n-nSkipped, Integer.MAX_VALUE);\n      int ret \u003d readAndDiscard(toSkip);\n      if (ret \u003c\u003d 0) {\n        return nSkipped;\n      }\n      nSkipped +\u003d ret;\n    }\n    return nSkipped;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */  \n    if ( skipBuf \u003d\u003d null ) {\n      skipBuf \u003d new byte[bytesPerChecksum]; \n    }\n\n    long nSkipped \u003d 0;\n    while ( nSkipped \u003c n ) {\n      int toSkip \u003d (int)Math.min(n-nSkipped, skipBuf.length);\n      int ret \u003d read(skipBuf, 0, toSkip);\n      if ( ret \u003c\u003d 0 ) {\n        return nSkipped;\n      }\n      nSkipped +\u003d ret;\n    }\n    return nSkipped;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */  \n    if ( skipBuf \u003d\u003d null ) {\n      skipBuf \u003d new byte[bytesPerChecksum]; \n    }\n\n    long nSkipped \u003d 0;\n    while ( nSkipped \u003c n ) {\n      int toSkip \u003d (int)Math.min(n-nSkipped, skipBuf.length);\n      int ret \u003d read(skipBuf, 0, toSkip);\n      if ( ret \u003c\u003d 0 ) {\n        return nSkipped;\n      }\n      nSkipped +\u003d ret;\n    }\n    return nSkipped;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java"
      }
    },
    "dd86860633d2ed64705b669a75bf318442ed6225": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-2260. Refactor BlockReader into an interface and implementation. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159004 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/11 8:02 PM",
      "commitName": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "17/08/11 3:00 PM",
      "commitNameOld": "cc875f0124d1951a4aab0565442242dac3dd35c8",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */  \n    if ( skipBuf \u003d\u003d null ) {\n      skipBuf \u003d new byte[bytesPerChecksum]; \n    }\n\n    long nSkipped \u003d 0;\n    while ( nSkipped \u003c n ) {\n      int toSkip \u003d (int)Math.min(n-nSkipped, skipBuf.length);\n      int ret \u003d read(skipBuf, 0, toSkip);\n      if ( ret \u003c\u003d 0 ) {\n        return nSkipped;\n      }\n      nSkipped +\u003d ret;\n    }\n    return nSkipped;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/BlockReader.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/RemoteBlockReader.java",
        "oldMethodName": "skip",
        "newMethodName": "skip"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  public synchronized long skip(long n) throws IOException {\n+    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n+     * in majority of the cases?. This one throws. */  \n+    if ( skipBuf \u003d\u003d null ) {\n+      skipBuf \u003d new byte[bytesPerChecksum]; \n+    }\n+\n+    long nSkipped \u003d 0;\n+    while ( nSkipped \u003c n ) {\n+      int toSkip \u003d (int)Math.min(n-nSkipped, skipBuf.length);\n+      int ret \u003d read(skipBuf, 0, toSkip);\n+      if ( ret \u003c\u003d 0 ) {\n+        return nSkipped;\n+      }\n+      nSkipped +\u003d ret;\n+    }\n+    return nSkipped;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized long skip(long n) throws IOException {\n    /* How can we make sure we don\u0027t throw a ChecksumException, at least\n     * in majority of the cases?. This one throws. */  \n    if ( skipBuf \u003d\u003d null ) {\n      skipBuf \u003d new byte[bytesPerChecksum]; \n    }\n\n    long nSkipped \u003d 0;\n    while ( nSkipped \u003c n ) {\n      int toSkip \u003d (int)Math.min(n-nSkipped, skipBuf.length);\n      int ret \u003d read(skipBuf, 0, toSkip);\n      if ( ret \u003c\u003d 0 ) {\n        return nSkipped;\n      }\n      nSkipped +\u003d ret;\n    }\n    return nSkipped;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/BlockReader.java"
    }
  }
}