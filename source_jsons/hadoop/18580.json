{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QuasiMonteCarlo.java",
  "functionName": "map",
  "functionId": "map___offset-LongWritable__size-LongWritable__context-Context",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/QuasiMonteCarlo.java",
  "functionStartLine": 161,
  "functionEndLine": 193,
  "numCommitsSeen": 10,
  "timeTaken": 4915,
  "changeHistory": [
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void map(LongWritable offset,\n                    LongWritable size,\n                    Context context) \n        throws IOException, InterruptedException {\n\n      final HaltonSequence haltonsequence \u003d new HaltonSequence(offset.get());\n      long numInside \u003d 0L;\n      long numOutside \u003d 0L;\n\n      for(long i \u003d 0; i \u003c size.get(); ) {\n        //generate points in a unit square\n        final double[] point \u003d haltonsequence.nextPoint();\n\n        //count points inside/outside of the inscribed circle of the square\n        final double x \u003d point[0] - 0.5;\n        final double y \u003d point[1] - 0.5;\n        if (x*x + y*y \u003e 0.25) {\n          numOutside++;\n        } else {\n          numInside++;\n        }\n\n        //report status\n        i++;\n        if (i % 1000 \u003d\u003d 0) {\n          context.setStatus(\"Generated \" + i + \" samples.\");\n        }\n      }\n\n      //output map results\n      context.write(new BooleanWritable(true), new LongWritable(numInside));\n      context.write(new BooleanWritable(false), new LongWritable(numOutside));\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/QuasiMonteCarlo.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/QuasiMonteCarlo.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void map(LongWritable offset,\n                    LongWritable size,\n                    Context context) \n        throws IOException, InterruptedException {\n\n      final HaltonSequence haltonsequence \u003d new HaltonSequence(offset.get());\n      long numInside \u003d 0L;\n      long numOutside \u003d 0L;\n\n      for(long i \u003d 0; i \u003c size.get(); ) {\n        //generate points in a unit square\n        final double[] point \u003d haltonsequence.nextPoint();\n\n        //count points inside/outside of the inscribed circle of the square\n        final double x \u003d point[0] - 0.5;\n        final double y \u003d point[1] - 0.5;\n        if (x*x + y*y \u003e 0.25) {\n          numOutside++;\n        } else {\n          numInside++;\n        }\n\n        //report status\n        i++;\n        if (i % 1000 \u003d\u003d 0) {\n          context.setStatus(\"Generated \" + i + \" samples.\");\n        }\n      }\n\n      //output map results\n      context.write(new BooleanWritable(true), new LongWritable(numInside));\n      context.write(new BooleanWritable(false), new LongWritable(numOutside));\n    }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void map(LongWritable offset,\n                    LongWritable size,\n                    Context context) \n        throws IOException, InterruptedException {\n\n      final HaltonSequence haltonsequence \u003d new HaltonSequence(offset.get());\n      long numInside \u003d 0L;\n      long numOutside \u003d 0L;\n\n      for(long i \u003d 0; i \u003c size.get(); ) {\n        //generate points in a unit square\n        final double[] point \u003d haltonsequence.nextPoint();\n\n        //count points inside/outside of the inscribed circle of the square\n        final double x \u003d point[0] - 0.5;\n        final double y \u003d point[1] - 0.5;\n        if (x*x + y*y \u003e 0.25) {\n          numOutside++;\n        } else {\n          numInside++;\n        }\n\n        //report status\n        i++;\n        if (i % 1000 \u003d\u003d 0) {\n          context.setStatus(\"Generated \" + i + \" samples.\");\n        }\n      }\n\n      //output map results\n      context.write(new BooleanWritable(true), new LongWritable(numInside));\n      context.write(new BooleanWritable(false), new LongWritable(numOutside));\n    }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,33 @@\n+    public void map(LongWritable offset,\n+                    LongWritable size,\n+                    Context context) \n+        throws IOException, InterruptedException {\n+\n+      final HaltonSequence haltonsequence \u003d new HaltonSequence(offset.get());\n+      long numInside \u003d 0L;\n+      long numOutside \u003d 0L;\n+\n+      for(long i \u003d 0; i \u003c size.get(); ) {\n+        //generate points in a unit square\n+        final double[] point \u003d haltonsequence.nextPoint();\n+\n+        //count points inside/outside of the inscribed circle of the square\n+        final double x \u003d point[0] - 0.5;\n+        final double y \u003d point[1] - 0.5;\n+        if (x*x + y*y \u003e 0.25) {\n+          numOutside++;\n+        } else {\n+          numInside++;\n+        }\n+\n+        //report status\n+        i++;\n+        if (i % 1000 \u003d\u003d 0) {\n+          context.setStatus(\"Generated \" + i + \" samples.\");\n+        }\n+      }\n+\n+      //output map results\n+      context.write(new BooleanWritable(true), new LongWritable(numInside));\n+      context.write(new BooleanWritable(false), new LongWritable(numOutside));\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void map(LongWritable offset,\n                    LongWritable size,\n                    Context context) \n        throws IOException, InterruptedException {\n\n      final HaltonSequence haltonsequence \u003d new HaltonSequence(offset.get());\n      long numInside \u003d 0L;\n      long numOutside \u003d 0L;\n\n      for(long i \u003d 0; i \u003c size.get(); ) {\n        //generate points in a unit square\n        final double[] point \u003d haltonsequence.nextPoint();\n\n        //count points inside/outside of the inscribed circle of the square\n        final double x \u003d point[0] - 0.5;\n        final double y \u003d point[1] - 0.5;\n        if (x*x + y*y \u003e 0.25) {\n          numOutside++;\n        } else {\n          numInside++;\n        }\n\n        //report status\n        i++;\n        if (i % 1000 \u003d\u003d 0) {\n          context.setStatus(\"Generated \" + i + \" samples.\");\n        }\n      }\n\n      //output map results\n      context.write(new BooleanWritable(true), new LongWritable(numInside));\n      context.write(new BooleanWritable(false), new LongWritable(numOutside));\n    }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/QuasiMonteCarlo.java"
    }
  }
}