{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirRenameOp.java",
  "functionName": "renameTo",
  "functionId": "renameTo___fsd-FSDirectory__pc-FSPermissionChecker__src-String__dst-String__collectedBlocks-BlocksMapUpdateInfo__logRetryCache-boolean__options-Options.Rename",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
  "functionStartLine": 259,
  "functionEndLine": 313,
  "numCommitsSeen": 709,
  "timeTaken": 15809,
  "changeHistory": [
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "5f34402adae191232fe78e62990396ca07f314bb",
    "c49333becfa7652460976a61eb86522010bcfeed",
    "869393643de23dcb010cc33091c8eb398de0fd6c",
    "24315e7d374a1ddd4329b64350cf96fc9ab6f59c",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
    "3425ae5d7eaa27b2526d0e0c07bdfea9440359f8",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
    "8c7a7e619699386f9e6991842558d78aa0c8053d",
    "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4",
    "2116d0520e528c44fa280f2a5b28594c6d6fc28a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "5f34402adae191232fe78e62990396ca07f314bb": "Ymultichange(Yreturntypechange,Ybodychange)",
    "c49333becfa7652460976a61eb86522010bcfeed": "Ybodychange",
    "869393643de23dcb010cc33091c8eb398de0fd6c": "Ymultichange(Yreturntypechange,Ybodychange)",
    "24315e7d374a1ddd4329b64350cf96fc9ab6f59c": "Ybodychange",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": "Ymultichange(Yparameterchange,Ybodychange)",
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
    "3425ae5d7eaa27b2526d0e0c07bdfea9440359f8": "Ymultichange(Yparameterchange,Ybodychange)",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": "Ybodychange",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
    "8c7a7e619699386f9e6991842558d78aa0c8053d": "Ymultichange(Yparameterchange,Ybodychange)",
    "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4": "Yexceptionschange",
    "2116d0520e528c44fa280f2a5b28594c6d6fc28a": "Yexceptionschange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/10/16 1:11 PM",
      "commitNameOld": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 18.09,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,55 @@\n   static RenameResult renameTo(FSDirectory fsd, FSPermissionChecker pc,\n       String src, String dst, BlocksMapUpdateInfo collectedBlocks,\n       boolean logRetryCache,Options.Rename... options)\n           throws IOException {\n-    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n-    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n+    final INodesInPath srcIIP \u003d fsd.resolvePath(pc, src, DirOp.WRITE_LINK);\n+    final INodesInPath dstIIP \u003d fsd.resolvePath(pc, dst, DirOp.CREATE_LINK);\n     if (fsd.isPermissionEnabled()) {\n       boolean renameToTrash \u003d false;\n       if (null !\u003d options \u0026\u0026\n           Arrays.asList(options).\n           contains(Options.Rename.TO_TRASH)) {\n         renameToTrash \u003d true;\n       }\n \n       if(renameToTrash) {\n         // if destination is the trash directory,\n         // besides the permission check on \"rename\"\n         // we need to enforce the check for \"delete\"\n         // otherwise, it would expose a\n         // security hole that stuff moved to trash\n         // will be deleted by superuser\n         fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n             FsAction.ALL, true);\n       } else {\n         // Rename does not operate on link targets\n         // Do not resolveLink when checking permissions of src and dst\n         // Check write access to parent of src\n         fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n             null, false);\n       }\n       // Check write access to ancestor of dst\n       fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n           false);\n     }\n \n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n     final long mtime \u003d Time.now();\n     fsd.writeLock();\n     final RenameResult result;\n     try {\n       result \u003d unprotectedRenameTo(fsd, srcIIP, dstIIP, mtime,\n           collectedBlocks, options);\n       if (result.filesDeleted) {\n         FSDirDeleteOp.incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logRename(\n         srcIIP.getPath(), dstIIP.getPath(), mtime, logRetryCache, options);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static RenameResult renameTo(FSDirectory fsd, FSPermissionChecker pc,\n      String src, String dst, BlocksMapUpdateInfo collectedBlocks,\n      boolean logRetryCache,Options.Rename... options)\n          throws IOException {\n    final INodesInPath srcIIP \u003d fsd.resolvePath(pc, src, DirOp.WRITE_LINK);\n    final INodesInPath dstIIP \u003d fsd.resolvePath(pc, dst, DirOp.CREATE_LINK);\n    if (fsd.isPermissionEnabled()) {\n      boolean renameToTrash \u003d false;\n      if (null !\u003d options \u0026\u0026\n          Arrays.asList(options).\n          contains(Options.Rename.TO_TRASH)) {\n        renameToTrash \u003d true;\n      }\n\n      if(renameToTrash) {\n        // if destination is the trash directory,\n        // besides the permission check on \"rename\"\n        // we need to enforce the check for \"delete\"\n        // otherwise, it would expose a\n        // security hole that stuff moved to trash\n        // will be deleted by superuser\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            FsAction.ALL, true);\n      } else {\n        // Rename does not operate on link targets\n        // Do not resolveLink when checking permissions of src and dst\n        // Check write access to parent of src\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            null, false);\n      }\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    final RenameResult result;\n    try {\n      result \u003d unprotectedRenameTo(fsd, srcIIP, dstIIP, mtime,\n          collectedBlocks, options);\n      if (result.filesDeleted) {\n        FSDirDeleteOp.incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(\n        srcIIP.getPath(), dstIIP.getPath(), mtime, logRetryCache, options);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
      "extendedDetails": {}
    },
    "5f34402adae191232fe78e62990396ca07f314bb": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-10779. Rename does not need to re-solve destination. Contributed by Daryn Sharp.\n",
      "commitDate": "28/09/16 3:57 PM",
      "commitName": "5f34402adae191232fe78e62990396ca07f314bb",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-10779. Rename does not need to re-solve destination. Contributed by Daryn Sharp.\n",
          "commitDate": "28/09/16 3:57 PM",
          "commitName": "5f34402adae191232fe78e62990396ca07f314bb",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "22/08/16 6:29 PM",
          "commitNameOld": "c49333becfa7652460976a61eb86522010bcfeed",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 36.89,
          "commitsBetweenForRepo": 212,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,55 @@\n-  static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n-      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n-      Options.Rename... options) throws IOException {\n+  static RenameResult renameTo(FSDirectory fsd, FSPermissionChecker pc,\n+      String src, String dst, BlocksMapUpdateInfo collectedBlocks,\n+      boolean logRetryCache,Options.Rename... options)\n+          throws IOException {\n     final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n     final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n-    src \u003d srcIIP.getPath();\n-    dst \u003d dstIIP.getPath();\n     if (fsd.isPermissionEnabled()) {\n       boolean renameToTrash \u003d false;\n       if (null !\u003d options \u0026\u0026\n           Arrays.asList(options).\n           contains(Options.Rename.TO_TRASH)) {\n         renameToTrash \u003d true;\n       }\n \n       if(renameToTrash) {\n         // if destination is the trash directory,\n         // besides the permission check on \"rename\"\n         // we need to enforce the check for \"delete\"\n         // otherwise, it would expose a\n         // security hole that stuff moved to trash\n         // will be deleted by superuser\n         fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n             FsAction.ALL, true);\n       } else {\n         // Rename does not operate on link targets\n         // Do not resolveLink when checking permissions of src and dst\n         // Check write access to parent of src\n         fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n             null, false);\n       }\n       // Check write access to ancestor of dst\n       fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n           false);\n     }\n \n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n     final long mtime \u003d Time.now();\n     fsd.writeLock();\n+    final RenameResult result;\n     try {\n-      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n-          collectedBlocks, options)) {\n+      result \u003d unprotectedRenameTo(fsd, srcIIP, dstIIP, mtime,\n+          collectedBlocks, options);\n+      if (result.filesDeleted) {\n         FSDirDeleteOp.incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n-    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n-    return dst;\n+    fsd.getEditLog().logRename(\n+        srcIIP.getPath(), dstIIP.getPath(), mtime, logRetryCache, options);\n+    return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static RenameResult renameTo(FSDirectory fsd, FSPermissionChecker pc,\n      String src, String dst, BlocksMapUpdateInfo collectedBlocks,\n      boolean logRetryCache,Options.Rename... options)\n          throws IOException {\n    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n    if (fsd.isPermissionEnabled()) {\n      boolean renameToTrash \u003d false;\n      if (null !\u003d options \u0026\u0026\n          Arrays.asList(options).\n          contains(Options.Rename.TO_TRASH)) {\n        renameToTrash \u003d true;\n      }\n\n      if(renameToTrash) {\n        // if destination is the trash directory,\n        // besides the permission check on \"rename\"\n        // we need to enforce the check for \"delete\"\n        // otherwise, it would expose a\n        // security hole that stuff moved to trash\n        // will be deleted by superuser\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            FsAction.ALL, true);\n      } else {\n        // Rename does not operate on link targets\n        // Do not resolveLink when checking permissions of src and dst\n        // Check write access to parent of src\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            null, false);\n      }\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    final RenameResult result;\n    try {\n      result \u003d unprotectedRenameTo(fsd, srcIIP, dstIIP, mtime,\n          collectedBlocks, options);\n      if (result.filesDeleted) {\n        FSDirDeleteOp.incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(\n        srcIIP.getPath(), dstIIP.getPath(), mtime, logRetryCache, options);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "RenameResult"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10779. Rename does not need to re-solve destination. Contributed by Daryn Sharp.\n",
          "commitDate": "28/09/16 3:57 PM",
          "commitName": "5f34402adae191232fe78e62990396ca07f314bb",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "22/08/16 6:29 PM",
          "commitNameOld": "c49333becfa7652460976a61eb86522010bcfeed",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 36.89,
          "commitsBetweenForRepo": 212,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,55 @@\n-  static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n-      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n-      Options.Rename... options) throws IOException {\n+  static RenameResult renameTo(FSDirectory fsd, FSPermissionChecker pc,\n+      String src, String dst, BlocksMapUpdateInfo collectedBlocks,\n+      boolean logRetryCache,Options.Rename... options)\n+          throws IOException {\n     final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n     final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n-    src \u003d srcIIP.getPath();\n-    dst \u003d dstIIP.getPath();\n     if (fsd.isPermissionEnabled()) {\n       boolean renameToTrash \u003d false;\n       if (null !\u003d options \u0026\u0026\n           Arrays.asList(options).\n           contains(Options.Rename.TO_TRASH)) {\n         renameToTrash \u003d true;\n       }\n \n       if(renameToTrash) {\n         // if destination is the trash directory,\n         // besides the permission check on \"rename\"\n         // we need to enforce the check for \"delete\"\n         // otherwise, it would expose a\n         // security hole that stuff moved to trash\n         // will be deleted by superuser\n         fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n             FsAction.ALL, true);\n       } else {\n         // Rename does not operate on link targets\n         // Do not resolveLink when checking permissions of src and dst\n         // Check write access to parent of src\n         fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n             null, false);\n       }\n       // Check write access to ancestor of dst\n       fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n           false);\n     }\n \n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n     final long mtime \u003d Time.now();\n     fsd.writeLock();\n+    final RenameResult result;\n     try {\n-      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n-          collectedBlocks, options)) {\n+      result \u003d unprotectedRenameTo(fsd, srcIIP, dstIIP, mtime,\n+          collectedBlocks, options);\n+      if (result.filesDeleted) {\n         FSDirDeleteOp.incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n-    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n-    return dst;\n+    fsd.getEditLog().logRename(\n+        srcIIP.getPath(), dstIIP.getPath(), mtime, logRetryCache, options);\n+    return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static RenameResult renameTo(FSDirectory fsd, FSPermissionChecker pc,\n      String src, String dst, BlocksMapUpdateInfo collectedBlocks,\n      boolean logRetryCache,Options.Rename... options)\n          throws IOException {\n    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n    if (fsd.isPermissionEnabled()) {\n      boolean renameToTrash \u003d false;\n      if (null !\u003d options \u0026\u0026\n          Arrays.asList(options).\n          contains(Options.Rename.TO_TRASH)) {\n        renameToTrash \u003d true;\n      }\n\n      if(renameToTrash) {\n        // if destination is the trash directory,\n        // besides the permission check on \"rename\"\n        // we need to enforce the check for \"delete\"\n        // otherwise, it would expose a\n        // security hole that stuff moved to trash\n        // will be deleted by superuser\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            FsAction.ALL, true);\n      } else {\n        // Rename does not operate on link targets\n        // Do not resolveLink when checking permissions of src and dst\n        // Check write access to parent of src\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            null, false);\n      }\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    final RenameResult result;\n    try {\n      result \u003d unprotectedRenameTo(fsd, srcIIP, dstIIP, mtime,\n          collectedBlocks, options);\n      if (result.filesDeleted) {\n        FSDirDeleteOp.incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(\n        srcIIP.getPath(), dstIIP.getPath(), mtime, logRetryCache, options);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "c49333becfa7652460976a61eb86522010bcfeed": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8312. Added permission check for moving file to Trash. (Weiwei Yang via Eric Yang)\n",
      "commitDate": "22/08/16 6:29 PM",
      "commitName": "c49333becfa7652460976a61eb86522010bcfeed",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "17/08/16 1:53 PM",
      "commitNameOld": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 5.19,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,53 @@\n   static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n       String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n       Options.Rename... options) throws IOException {\n     final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n     final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n     src \u003d srcIIP.getPath();\n     dst \u003d dstIIP.getPath();\n     if (fsd.isPermissionEnabled()) {\n-      // Rename does not operate on link targets\n-      // Do not resolveLink when checking permissions of src and dst\n-      // Check write access to parent of src\n-      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n-          false);\n+      boolean renameToTrash \u003d false;\n+      if (null !\u003d options \u0026\u0026\n+          Arrays.asList(options).\n+          contains(Options.Rename.TO_TRASH)) {\n+        renameToTrash \u003d true;\n+      }\n+\n+      if(renameToTrash) {\n+        // if destination is the trash directory,\n+        // besides the permission check on \"rename\"\n+        // we need to enforce the check for \"delete\"\n+        // otherwise, it would expose a\n+        // security hole that stuff moved to trash\n+        // will be deleted by superuser\n+        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n+            FsAction.ALL, true);\n+      } else {\n+        // Rename does not operate on link targets\n+        // Do not resolveLink when checking permissions of src and dst\n+        // Check write access to parent of src\n+        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n+            null, false);\n+      }\n       // Check write access to ancestor of dst\n       fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n           false);\n     }\n \n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n     final long mtime \u003d Time.now();\n     fsd.writeLock();\n     try {\n       if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n           collectedBlocks, options)) {\n         FSDirDeleteOp.incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n     return dst;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n      Options.Rename... options) throws IOException {\n    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n    src \u003d srcIIP.getPath();\n    dst \u003d dstIIP.getPath();\n    if (fsd.isPermissionEnabled()) {\n      boolean renameToTrash \u003d false;\n      if (null !\u003d options \u0026\u0026\n          Arrays.asList(options).\n          contains(Options.Rename.TO_TRASH)) {\n        renameToTrash \u003d true;\n      }\n\n      if(renameToTrash) {\n        // if destination is the trash directory,\n        // besides the permission check on \"rename\"\n        // we need to enforce the check for \"delete\"\n        // otherwise, it would expose a\n        // security hole that stuff moved to trash\n        // will be deleted by superuser\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            FsAction.ALL, true);\n      } else {\n        // Rename does not operate on link targets\n        // Do not resolveLink when checking permissions of src and dst\n        // Check write access to parent of src\n        fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null,\n            null, false);\n      }\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n          collectedBlocks, options)) {\n        FSDirDeleteOp.incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n    return dst;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
      "extendedDetails": {}
    },
    "869393643de23dcb010cc33091c8eb398de0fd6c": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
      "commitDate": "17/08/16 1:53 PM",
      "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
          "commitDate": "17/08/16 1:53 PM",
          "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "15/08/16 2:45 PM",
          "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.96,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,35 @@\n-  static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n+  static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n       String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n       Options.Rename... options) throws IOException {\n-    final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n-    final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n+    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n+    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n+    src \u003d srcIIP.getPath();\n+    dst \u003d dstIIP.getPath();\n     if (fsd.isPermissionEnabled()) {\n       // Rename does not operate on link targets\n       // Do not resolveLink when checking permissions of src and dst\n       // Check write access to parent of src\n       fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n           false);\n       // Check write access to ancestor of dst\n       fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n           false);\n     }\n \n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n     final long mtime \u003d Time.now();\n     fsd.writeLock();\n     try {\n       if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n           collectedBlocks, options)) {\n         FSDirDeleteOp.incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n+    return dst;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n      Options.Rename... options) throws IOException {\n    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n    src \u003d srcIIP.getPath();\n    dst \u003d dstIIP.getPath();\n    if (fsd.isPermissionEnabled()) {\n      // Rename does not operate on link targets\n      // Do not resolveLink when checking permissions of src and dst\n      // Check write access to parent of src\n      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n          false);\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n          collectedBlocks, options)) {\n        FSDirDeleteOp.incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n    return dst;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "String"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
          "commitDate": "17/08/16 1:53 PM",
          "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "15/08/16 2:45 PM",
          "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.96,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,35 @@\n-  static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n+  static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n       String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n       Options.Rename... options) throws IOException {\n-    final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n-    final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n+    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n+    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n+    src \u003d srcIIP.getPath();\n+    dst \u003d dstIIP.getPath();\n     if (fsd.isPermissionEnabled()) {\n       // Rename does not operate on link targets\n       // Do not resolveLink when checking permissions of src and dst\n       // Check write access to parent of src\n       fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n           false);\n       // Check write access to ancestor of dst\n       fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n           false);\n     }\n \n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n     final long mtime \u003d Time.now();\n     fsd.writeLock();\n     try {\n       if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n           collectedBlocks, options)) {\n         FSDirDeleteOp.incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n+    return dst;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n      Options.Rename... options) throws IOException {\n    final INodesInPath srcIIP \u003d fsd.resolvePathForWrite(pc, src, false);\n    final INodesInPath dstIIP \u003d fsd.resolvePathForWrite(pc, dst, false);\n    src \u003d srcIIP.getPath();\n    dst \u003d dstIIP.getPath();\n    if (fsd.isPermissionEnabled()) {\n      // Rename does not operate on link targets\n      // Do not resolveLink when checking permissions of src and dst\n      // Check write access to parent of src\n      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n          false);\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n          collectedBlocks, options)) {\n        FSDirDeleteOp.incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n    return dst;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "24315e7d374a1ddd4329b64350cf96fc9ab6f59c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7573. Consolidate the implementation of delete() into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "17/01/15 12:56 PM",
      "commitName": "24315e7d374a1ddd4329b64350cf96fc9ab6f59c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/12/14 11:19 PM",
      "commitNameOld": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 25.57,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n       String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n       Options.Rename... options) throws IOException {\n     final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n     final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n     if (fsd.isPermissionEnabled()) {\n       // Rename does not operate on link targets\n       // Do not resolveLink when checking permissions of src and dst\n       // Check write access to parent of src\n       fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n           false);\n       // Check write access to ancestor of dst\n       fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n           false);\n     }\n \n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n     final long mtime \u003d Time.now();\n     fsd.writeLock();\n     try {\n       if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n           collectedBlocks, options)) {\n-        fsd.getFSNamesystem().incrDeletedFileCount(1);\n+        FSDirDeleteOp.incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n      Options.Rename... options) throws IOException {\n    final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n    final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n    if (fsd.isPermissionEnabled()) {\n      // Rename does not operate on link targets\n      // Do not resolveLink when checking permissions of src and dst\n      // Check write access to parent of src\n      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n          false);\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n          collectedBlocks, options)) {\n        FSDirDeleteOp.incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
      "extendedDetails": {}
    },
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
      "commitDate": "12/12/14 3:13 PM",
      "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
          "commitDate": "12/12/14 3:13 PM",
          "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "11/12/14 12:36 PM",
          "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.11,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,32 @@\n-  static void renameTo(\n-      FSDirectory fsd, String src, String dst, long mtime,\n-      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n-      throws IOException {\n+  static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n+      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n+      Options.Rename... options) throws IOException {\n+    final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n+    final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n+    if (fsd.isPermissionEnabled()) {\n+      // Rename does not operate on link targets\n+      // Do not resolveLink when checking permissions of src and dst\n+      // Check write access to parent of src\n+      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n+          false);\n+      // Check write access to ancestor of dst\n+      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n+          false);\n+    }\n+\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n+    final long mtime \u003d Time.now();\n     fsd.writeLock();\n     try {\n-      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n+      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n+          collectedBlocks, options)) {\n         fsd.getFSNamesystem().incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n+    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n      Options.Rename... options) throws IOException {\n    final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n    final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n    if (fsd.isPermissionEnabled()) {\n      // Rename does not operate on link targets\n      // Do not resolveLink when checking permissions of src and dst\n      // Check write access to parent of src\n      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n          false);\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n          collectedBlocks, options)) {\n        fsd.getFSNamesystem().incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, src-String, dst-String, mtime-long, collectedBlocks-BlocksMapUpdateInfo, options-Options.Rename]",
            "newValue": "[fsd-FSDirectory, pc-FSPermissionChecker, src-String, dst-String, collectedBlocks-BlocksMapUpdateInfo, logRetryCache-boolean, options-Options.Rename]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
          "commitDate": "12/12/14 3:13 PM",
          "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "11/12/14 12:36 PM",
          "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.11,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,32 @@\n-  static void renameTo(\n-      FSDirectory fsd, String src, String dst, long mtime,\n-      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n-      throws IOException {\n+  static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n+      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n+      Options.Rename... options) throws IOException {\n+    final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n+    final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n+    if (fsd.isPermissionEnabled()) {\n+      // Rename does not operate on link targets\n+      // Do not resolveLink when checking permissions of src and dst\n+      // Check write access to parent of src\n+      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n+          false);\n+      // Check write access to ancestor of dst\n+      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n+          false);\n+    }\n+\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n           + dst);\n     }\n+    final long mtime \u003d Time.now();\n     fsd.writeLock();\n     try {\n-      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n+      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n+          collectedBlocks, options)) {\n         fsd.getFSNamesystem().incrDeletedFileCount(1);\n       }\n     } finally {\n       fsd.writeUnlock();\n     }\n+    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void renameTo(FSDirectory fsd, FSPermissionChecker pc, String src,\n      String dst, BlocksMapUpdateInfo collectedBlocks, boolean logRetryCache,\n      Options.Rename... options) throws IOException {\n    final INodesInPath srcIIP \u003d fsd.getINodesInPath4Write(src, false);\n    final INodesInPath dstIIP \u003d fsd.getINodesInPath4Write(dst, false);\n    if (fsd.isPermissionEnabled()) {\n      // Rename does not operate on link targets\n      // Do not resolveLink when checking permissions of src and dst\n      // Check write access to parent of src\n      fsd.checkPermission(pc, srcIIP, false, null, FsAction.WRITE, null, null,\n          false);\n      // Check write access to ancestor of dst\n      fsd.checkPermission(pc, dstIIP, false, FsAction.WRITE, null, null, null,\n          false);\n    }\n\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    final long mtime \u003d Time.now();\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, srcIIP, dstIIP, mtime,\n          collectedBlocks, options)) {\n        fsd.getFSNamesystem().incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logRename(src, dst, mtime, logRetryCache, options);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "01/12/14 9:48 PM",
      "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "01/12/14 9:48 PM",
          "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "01/12/14 9:36 PM",
          "commitNameOld": "0af44ea8462437f8e7a8271b15a19677fd7f05a1",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  void renameTo(String src, String dst, long mtime,\n+  static void renameTo(\n+      FSDirectory fsd, String src, String dst, long mtime,\n       BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n-      throws FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, QuotaExceededException,\n-      UnresolvedLinkException, IOException {\n+      throws IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n-          + \" to \" + dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n+          + dst);\n     }\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n-        namesystem.incrDeletedFileCount(1);\n+      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n+        fsd.getFSNamesystem().incrDeletedFileCount(1);\n       }\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void renameTo(\n      FSDirectory fsd, String src, String dst, long mtime,\n      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n      throws IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n        fsd.getFSNamesystem().incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
            "oldMethodName": "renameTo",
            "newMethodName": "renameTo"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "01/12/14 9:48 PM",
          "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "01/12/14 9:36 PM",
          "commitNameOld": "0af44ea8462437f8e7a8271b15a19677fd7f05a1",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  void renameTo(String src, String dst, long mtime,\n+  static void renameTo(\n+      FSDirectory fsd, String src, String dst, long mtime,\n       BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n-      throws FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, QuotaExceededException,\n-      UnresolvedLinkException, IOException {\n+      throws IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n-          + \" to \" + dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n+          + dst);\n     }\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n-        namesystem.incrDeletedFileCount(1);\n+      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n+        fsd.getFSNamesystem().incrDeletedFileCount(1);\n       }\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void renameTo(\n      FSDirectory fsd, String src, String dst, long mtime,\n      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n      throws IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n        fsd.getFSNamesystem().incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "01/12/14 9:48 PM",
          "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "01/12/14 9:36 PM",
          "commitNameOld": "0af44ea8462437f8e7a8271b15a19677fd7f05a1",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  void renameTo(String src, String dst, long mtime,\n+  static void renameTo(\n+      FSDirectory fsd, String src, String dst, long mtime,\n       BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n-      throws FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, QuotaExceededException,\n-      UnresolvedLinkException, IOException {\n+      throws IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n-          + \" to \" + dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n+          + dst);\n     }\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n-        namesystem.incrDeletedFileCount(1);\n+      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n+        fsd.getFSNamesystem().incrDeletedFileCount(1);\n       }\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void renameTo(\n      FSDirectory fsd, String src, String dst, long mtime,\n      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n      throws IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n        fsd.getFSNamesystem().incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[FileAlreadyExistsException, FileNotFoundException, ParentNotDirectoryException, QuotaExceededException, UnresolvedLinkException, IOException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "01/12/14 9:48 PM",
          "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "01/12/14 9:36 PM",
          "commitNameOld": "0af44ea8462437f8e7a8271b15a19677fd7f05a1",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  void renameTo(String src, String dst, long mtime,\n+  static void renameTo(\n+      FSDirectory fsd, String src, String dst, long mtime,\n       BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n-      throws FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, QuotaExceededException,\n-      UnresolvedLinkException, IOException {\n+      throws IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n-          + \" to \" + dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n+          + dst);\n     }\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n-        namesystem.incrDeletedFileCount(1);\n+      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n+        fsd.getFSNamesystem().incrDeletedFileCount(1);\n       }\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void renameTo(\n      FSDirectory fsd, String src, String dst, long mtime,\n      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n      throws IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n        fsd.getFSNamesystem().incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "01/12/14 9:48 PM",
          "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "01/12/14 9:36 PM",
          "commitNameOld": "0af44ea8462437f8e7a8271b15a19677fd7f05a1",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  void renameTo(String src, String dst, long mtime,\n+  static void renameTo(\n+      FSDirectory fsd, String src, String dst, long mtime,\n       BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n-      throws FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, QuotaExceededException,\n-      UnresolvedLinkException, IOException {\n+      throws IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n-          + \" to \" + dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n+          + dst);\n     }\n-    writeLock();\n+    fsd.writeLock();\n     try {\n-      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n-        namesystem.incrDeletedFileCount(1);\n+      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n+        fsd.getFSNamesystem().incrDeletedFileCount(1);\n       }\n     } finally {\n-      writeUnlock();\n+      fsd.writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void renameTo(\n      FSDirectory fsd, String src, String dst, long mtime,\n      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n      throws IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src + \" to \"\n          + dst);\n    }\n    fsd.writeLock();\n    try {\n      if (unprotectedRenameTo(fsd, src, dst, mtime, collectedBlocks, options)) {\n        fsd.getFSNamesystem().incrDeletedFileCount(1);\n      }\n    } finally {\n      fsd.writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[src-String, dst-String, mtime-long, collectedBlocks-BlocksMapUpdateInfo, options-Options.Rename]",
            "newValue": "[fsd-FSDirectory, src-String, dst-String, mtime-long, collectedBlocks-BlocksMapUpdateInfo, options-Options.Rename]"
          }
        }
      ]
    },
    "3425ae5d7eaa27b2526d0e0c07bdfea9440359f8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2975. Rename with overwrite flag true can make NameNode to stuck in safemode on NN (crash + restart). (Yi Liu via umamahesh)\n",
      "commitDate": "03/09/14 6:23 AM",
      "commitName": "3425ae5d7eaa27b2526d0e0c07bdfea9440359f8",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2975. Rename with overwrite flag true can make NameNode to stuck in safemode on NN (crash + restart). (Yi Liu via umamahesh)\n",
          "commitDate": "03/09/14 6:23 AM",
          "commitName": "3425ae5d7eaa27b2526d0e0c07bdfea9440359f8",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "20/08/14 11:19 AM",
          "commitNameOld": "834fccf02b5202176f3c0a5e580c46855ca5d1d5",
          "commitAuthorOld": "",
          "daysBetweenCommits": 13.79,
          "commitsBetweenForRepo": 85,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n   void renameTo(String src, String dst, long mtime,\n-      Options.Rename... options)\n+      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n       throws FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, QuotaExceededException,\n       UnresolvedLinkException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n           + \" to \" + dst);\n     }\n     writeLock();\n     try {\n-      if (unprotectedRenameTo(src, dst, mtime, options)) {\n+      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n         namesystem.incrDeletedFileCount(1);\n       }\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void renameTo(String src, String dst, long mtime,\n      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n      throws FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, QuotaExceededException,\n      UnresolvedLinkException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n          + \" to \" + dst);\n    }\n    writeLock();\n    try {\n      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n        namesystem.incrDeletedFileCount(1);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[src-String, dst-String, mtime-long, options-Options.Rename]",
            "newValue": "[src-String, dst-String, mtime-long, collectedBlocks-BlocksMapUpdateInfo, options-Options.Rename]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2975. Rename with overwrite flag true can make NameNode to stuck in safemode on NN (crash + restart). (Yi Liu via umamahesh)\n",
          "commitDate": "03/09/14 6:23 AM",
          "commitName": "3425ae5d7eaa27b2526d0e0c07bdfea9440359f8",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "20/08/14 11:19 AM",
          "commitNameOld": "834fccf02b5202176f3c0a5e580c46855ca5d1d5",
          "commitAuthorOld": "",
          "daysBetweenCommits": 13.79,
          "commitsBetweenForRepo": 85,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n   void renameTo(String src, String dst, long mtime,\n-      Options.Rename... options)\n+      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n       throws FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, QuotaExceededException,\n       UnresolvedLinkException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n           + \" to \" + dst);\n     }\n     writeLock();\n     try {\n-      if (unprotectedRenameTo(src, dst, mtime, options)) {\n+      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n         namesystem.incrDeletedFileCount(1);\n       }\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void renameTo(String src, String dst, long mtime,\n      BlocksMapUpdateInfo collectedBlocks, Options.Rename... options)\n      throws FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, QuotaExceededException,\n      UnresolvedLinkException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n          + \" to \" + dst);\n    }\n    writeLock();\n    try {\n      if (unprotectedRenameTo(src, dst, mtime, collectedBlocks, options)) {\n        namesystem.incrDeletedFileCount(1);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6480. Move waitForReady() from FSDirectory to FSNamesystem. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 9:13 PM",
      "commitName": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "18/06/14 12:57 PM",
      "commitNameOld": "4cf94aaf809c77b3b7dc925faa39a72d53e4246e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   void renameTo(String src, String dst, long mtime,\n       Options.Rename... options)\n       throws FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, QuotaExceededException,\n       UnresolvedLinkException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n           + \" to \" + dst);\n     }\n-    waitForReady();\n     writeLock();\n     try {\n       if (unprotectedRenameTo(src, dst, mtime, options)) {\n         namesystem.incrDeletedFileCount(1);\n       }\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void renameTo(String src, String dst, long mtime,\n      Options.Rename... options)\n      throws FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, QuotaExceededException,\n      UnresolvedLinkException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n          + \" to \" + dst);\n    }\n    writeLock();\n    try {\n      if (unprotectedRenameTo(src, dst, mtime, options)) {\n        namesystem.incrDeletedFileCount(1);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 10:22 AM",
      "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/05/14 6:57 AM",
          "commitNameOld": "ac23a55547716df29b3e25c98a113399e184d9d1",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 21.14,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  boolean renameTo(String src, String dst, boolean logRetryCache) \n-      throws QuotaExceededException, UnresolvedLinkException, \n-      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n+  void renameTo(String src, String dst, long mtime,\n+      Options.Rename... options)\n+      throws FileAlreadyExistsException, FileNotFoundException,\n+      ParentNotDirectoryException, QuotaExceededException,\n+      UnresolvedLinkException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n-          +src+\" to \"+dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n+          + \" to \" + dst);\n     }\n     waitForReady();\n-    long now \u003d now();\n     writeLock();\n     try {\n-      if (!unprotectedRenameTo(src, dst, now))\n-        return false;\n+      if (unprotectedRenameTo(src, dst, mtime, options)) {\n+        namesystem.incrDeletedFileCount(1);\n+      }\n     } finally {\n       writeUnlock();\n     }\n-    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n-    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void renameTo(String src, String dst, long mtime,\n      Options.Rename... options)\n      throws FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, QuotaExceededException,\n      UnresolvedLinkException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n          + \" to \" + dst);\n    }\n    waitForReady();\n    writeLock();\n    try {\n      if (unprotectedRenameTo(src, dst, mtime, options)) {\n        namesystem.incrDeletedFileCount(1);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[src-String, dst-String, logRetryCache-boolean]",
            "newValue": "[src-String, dst-String, mtime-long, options-Options.Rename]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/05/14 6:57 AM",
          "commitNameOld": "ac23a55547716df29b3e25c98a113399e184d9d1",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 21.14,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  boolean renameTo(String src, String dst, boolean logRetryCache) \n-      throws QuotaExceededException, UnresolvedLinkException, \n-      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n+  void renameTo(String src, String dst, long mtime,\n+      Options.Rename... options)\n+      throws FileAlreadyExistsException, FileNotFoundException,\n+      ParentNotDirectoryException, QuotaExceededException,\n+      UnresolvedLinkException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n-          +src+\" to \"+dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n+          + \" to \" + dst);\n     }\n     waitForReady();\n-    long now \u003d now();\n     writeLock();\n     try {\n-      if (!unprotectedRenameTo(src, dst, now))\n-        return false;\n+      if (unprotectedRenameTo(src, dst, mtime, options)) {\n+        namesystem.incrDeletedFileCount(1);\n+      }\n     } finally {\n       writeUnlock();\n     }\n-    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n-    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void renameTo(String src, String dst, long mtime,\n      Options.Rename... options)\n      throws FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, QuotaExceededException,\n      UnresolvedLinkException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n          + \" to \" + dst);\n    }\n    waitForReady();\n    writeLock();\n    try {\n      if (unprotectedRenameTo(src, dst, mtime, options)) {\n        namesystem.incrDeletedFileCount(1);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "void"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/05/14 6:57 AM",
          "commitNameOld": "ac23a55547716df29b3e25c98a113399e184d9d1",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 21.14,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  boolean renameTo(String src, String dst, boolean logRetryCache) \n-      throws QuotaExceededException, UnresolvedLinkException, \n-      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n+  void renameTo(String src, String dst, long mtime,\n+      Options.Rename... options)\n+      throws FileAlreadyExistsException, FileNotFoundException,\n+      ParentNotDirectoryException, QuotaExceededException,\n+      UnresolvedLinkException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n-          +src+\" to \"+dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n+          + \" to \" + dst);\n     }\n     waitForReady();\n-    long now \u003d now();\n     writeLock();\n     try {\n-      if (!unprotectedRenameTo(src, dst, now))\n-        return false;\n+      if (unprotectedRenameTo(src, dst, mtime, options)) {\n+        namesystem.incrDeletedFileCount(1);\n+      }\n     } finally {\n       writeUnlock();\n     }\n-    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n-    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void renameTo(String src, String dst, long mtime,\n      Options.Rename... options)\n      throws FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, QuotaExceededException,\n      UnresolvedLinkException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n          + \" to \" + dst);\n    }\n    waitForReady();\n    writeLock();\n    try {\n      if (unprotectedRenameTo(src, dst, mtime, options)) {\n        namesystem.incrDeletedFileCount(1);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[QuotaExceededException, UnresolvedLinkException, FileAlreadyExistsException, SnapshotAccessControlException, IOException]",
            "newValue": "[FileAlreadyExistsException, FileNotFoundException, ParentNotDirectoryException, QuotaExceededException, UnresolvedLinkException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 10:22 AM",
          "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/05/14 6:57 AM",
          "commitNameOld": "ac23a55547716df29b3e25c98a113399e184d9d1",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 21.14,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  boolean renameTo(String src, String dst, boolean logRetryCache) \n-      throws QuotaExceededException, UnresolvedLinkException, \n-      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n+  void renameTo(String src, String dst, long mtime,\n+      Options.Rename... options)\n+      throws FileAlreadyExistsException, FileNotFoundException,\n+      ParentNotDirectoryException, QuotaExceededException,\n+      UnresolvedLinkException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n-      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n-          +src+\" to \"+dst);\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n+          + \" to \" + dst);\n     }\n     waitForReady();\n-    long now \u003d now();\n     writeLock();\n     try {\n-      if (!unprotectedRenameTo(src, dst, now))\n-        return false;\n+      if (unprotectedRenameTo(src, dst, mtime, options)) {\n+        namesystem.incrDeletedFileCount(1);\n+      }\n     } finally {\n       writeUnlock();\n     }\n-    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n-    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void renameTo(String src, String dst, long mtime,\n      Options.Rename... options)\n      throws FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, QuotaExceededException,\n      UnresolvedLinkException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \" + src\n          + \" to \" + dst);\n    }\n    waitForReady();\n    writeLock();\n    try {\n      if (unprotectedRenameTo(src, dst, mtime, options)) {\n        namesystem.incrDeletedFileCount(1);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c7a7e619699386f9e6991842558d78aa0c8053d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/07/13 12:51 AM",
      "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/07/13 12:51 AM",
          "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "22/07/13 11:22 AM",
          "commitNameOld": "11c073134afc878619c37c95935d6a3098a21f17",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 7.56,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  boolean renameTo(String src, String dst) \n+  boolean renameTo(String src, String dst, boolean logRetryCache) \n       throws QuotaExceededException, UnresolvedLinkException, \n       FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n           +src+\" to \"+dst);\n     }\n     waitForReady();\n     long now \u003d now();\n     writeLock();\n     try {\n       if (!unprotectedRenameTo(src, dst, now))\n         return false;\n     } finally {\n       writeUnlock();\n     }\n-    fsImage.getEditLog().logRename(src, dst, now);\n+    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean renameTo(String src, String dst, boolean logRetryCache) \n      throws QuotaExceededException, UnresolvedLinkException, \n      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n          +src+\" to \"+dst);\n    }\n    waitForReady();\n    long now \u003d now();\n    writeLock();\n    try {\n      if (!unprotectedRenameTo(src, dst, now))\n        return false;\n    } finally {\n      writeUnlock();\n    }\n    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[src-String, dst-String]",
            "newValue": "[src-String, dst-String, logRetryCache-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/07/13 12:51 AM",
          "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "22/07/13 11:22 AM",
          "commitNameOld": "11c073134afc878619c37c95935d6a3098a21f17",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 7.56,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  boolean renameTo(String src, String dst) \n+  boolean renameTo(String src, String dst, boolean logRetryCache) \n       throws QuotaExceededException, UnresolvedLinkException, \n       FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n           +src+\" to \"+dst);\n     }\n     waitForReady();\n     long now \u003d now();\n     writeLock();\n     try {\n       if (!unprotectedRenameTo(src, dst, now))\n         return false;\n     } finally {\n       writeUnlock();\n     }\n-    fsImage.getEditLog().logRename(src, dst, now);\n+    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean renameTo(String src, String dst, boolean logRetryCache) \n      throws QuotaExceededException, UnresolvedLinkException, \n      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n          +src+\" to \"+dst);\n    }\n    waitForReady();\n    long now \u003d now();\n    writeLock();\n    try {\n      if (!unprotectedRenameTo(src, dst, now))\n        return false;\n    } finally {\n      writeUnlock();\n    }\n    fsImage.getEditLog().logRename(src, dst, now, logRetryCache);\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-4675. Fix rename across snapshottable directories.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1467540 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/04/13 7:48 PM",
      "commitName": "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "10/04/13 1:17 PM",
      "commitNameOld": "3209d4a3c4d4c227ca50bbcd1ab3e939beceec35",
      "commitAuthorOld": "",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   boolean renameTo(String src, String dst) \n       throws QuotaExceededException, UnresolvedLinkException, \n-      FileAlreadyExistsException, SnapshotAccessControlException {\n+      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n           +src+\" to \"+dst);\n     }\n     waitForReady();\n     long now \u003d now();\n     writeLock();\n     try {\n       if (!unprotectedRenameTo(src, dst, now))\n         return false;\n     } finally {\n       writeUnlock();\n     }\n     fsImage.getEditLog().logRename(src, dst, now);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renameTo(String src, String dst) \n      throws QuotaExceededException, UnresolvedLinkException, \n      FileAlreadyExistsException, SnapshotAccessControlException, IOException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n          +src+\" to \"+dst);\n    }\n    waitForReady();\n    long now \u003d now();\n    writeLock();\n    try {\n      if (!unprotectedRenameTo(src, dst, now))\n        return false;\n    } finally {\n      writeUnlock();\n    }\n    fsImage.getEditLog().logRename(src, dst, now);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {
        "oldValue": "[QuotaExceededException, UnresolvedLinkException, FileAlreadyExistsException, SnapshotAccessControlException]",
        "newValue": "[QuotaExceededException, UnresolvedLinkException, FileAlreadyExistsException, SnapshotAccessControlException, IOException]"
      }
    },
    "2116d0520e528c44fa280f2a5b28594c6d6fc28a": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-4148. Disallow write/modify operations on files and directories in a snapshot. Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1409023 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/11/12 3:26 PM",
      "commitName": "2116d0520e528c44fa280f2a5b28594c6d6fc28a",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "13/11/12 11:59 AM",
      "commitNameOld": "099762a0bc960066f8157fdd1e495b6752a6f802",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   boolean renameTo(String src, String dst) \n       throws QuotaExceededException, UnresolvedLinkException, \n-      FileAlreadyExistsException {\n+      FileAlreadyExistsException, SnapshotAccessControlException {\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n           +src+\" to \"+dst);\n     }\n     waitForReady();\n     long now \u003d now();\n     writeLock();\n     try {\n       if (!unprotectedRenameTo(src, dst, now))\n         return false;\n     } finally {\n       writeUnlock();\n     }\n     fsImage.getEditLog().logRename(src, dst, now);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renameTo(String src, String dst) \n      throws QuotaExceededException, UnresolvedLinkException, \n      FileAlreadyExistsException, SnapshotAccessControlException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n          +src+\" to \"+dst);\n    }\n    waitForReady();\n    long now \u003d now();\n    writeLock();\n    try {\n      if (!unprotectedRenameTo(src, dst, now))\n        return false;\n    } finally {\n      writeUnlock();\n    }\n    fsImage.getEditLog().logRename(src, dst, now);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {
        "oldValue": "[QuotaExceededException, UnresolvedLinkException, FileAlreadyExistsException]",
        "newValue": "[QuotaExceededException, UnresolvedLinkException, FileAlreadyExistsException, SnapshotAccessControlException]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean renameTo(String src, String dst) \n      throws QuotaExceededException, UnresolvedLinkException, \n      FileAlreadyExistsException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n          +src+\" to \"+dst);\n    }\n    waitForReady();\n    long now \u003d now();\n    writeLock();\n    try {\n      if (!unprotectedRenameTo(src, dst, now))\n        return false;\n    } finally {\n      writeUnlock();\n    }\n    fsImage.getEditLog().logRename(src, dst, now);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean renameTo(String src, String dst) \n      throws QuotaExceededException, UnresolvedLinkException, \n      FileAlreadyExistsException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n          +src+\" to \"+dst);\n    }\n    waitForReady();\n    long now \u003d now();\n    writeLock();\n    try {\n      if (!unprotectedRenameTo(src, dst, now))\n        return false;\n    } finally {\n      writeUnlock();\n    }\n    fsImage.getEditLog().logRename(src, dst, now);\n    return true;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  boolean renameTo(String src, String dst) \n+      throws QuotaExceededException, UnresolvedLinkException, \n+      FileAlreadyExistsException {\n+    if (NameNode.stateChangeLog.isDebugEnabled()) {\n+      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n+          +src+\" to \"+dst);\n+    }\n+    waitForReady();\n+    long now \u003d now();\n+    writeLock();\n+    try {\n+      if (!unprotectedRenameTo(src, dst, now))\n+        return false;\n+    } finally {\n+      writeUnlock();\n+    }\n+    fsImage.getEditLog().logRename(src, dst, now);\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renameTo(String src, String dst) \n      throws QuotaExceededException, UnresolvedLinkException, \n      FileAlreadyExistsException {\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"DIR* FSDirectory.renameTo: \"\n          +src+\" to \"+dst);\n    }\n    waitForReady();\n    long now \u003d now();\n    writeLock();\n    try {\n      if (!unprotectedRenameTo(src, dst, now))\n        return false;\n    } finally {\n      writeUnlock();\n    }\n    fsImage.getEditLog().logRename(src, dst, now);\n    return true;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
    }
  }
}