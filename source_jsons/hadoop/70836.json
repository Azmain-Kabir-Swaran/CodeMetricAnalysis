{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PageBlobOutputStream.java",
  "functionName": "writePayloadToServer",
  "functionId": "writePayloadToServer___rawPayload-byte[]",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/PageBlobOutputStream.java",
  "functionStartLine": 366,
  "functionEndLine": 386,
  "numCommitsSeen": 8,
  "timeTaken": 999,
  "changeHistory": [
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40"
  ],
  "changeHistoryShort": {
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,21 @@\n+    private void writePayloadToServer(byte[] rawPayload) {\n+      final ByteArrayInputStream wrapperStream \u003d\n+                  new ByteArrayInputStream(rawPayload);\n+      LOG.debug(\"writing payload of \" + rawPayload.length + \" bytes to Azure page blob\");\n+      try {\n+        long start \u003d System.currentTimeMillis();\n+        blob.uploadPages(wrapperStream, currentBlobOffset, rawPayload.length,\n+            withMD5Checking(), PageBlobOutputStream.this.opContext);\n+        long end \u003d System.currentTimeMillis();\n+        LOG.trace(\"Azure uploadPages time for \" + rawPayload.length + \" bytes \u003d \" + (end - start));\n+      } catch (IOException ex) {\n+        LOG.debug(ExceptionUtils.getStackTrace(ex));\n+        lastError \u003d ex;\n+      } catch (StorageException ex) {\n+        LOG.debug(ExceptionUtils.getStackTrace(ex));\n+        lastError \u003d new IOException(ex);\n+      }\n+      if (lastError !\u003d null) {\n+        LOG.debug(\"Caught error in PageBlobOutputStream#writePayloadToServer()\");\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void writePayloadToServer(byte[] rawPayload) {\n      final ByteArrayInputStream wrapperStream \u003d\n                  new ByteArrayInputStream(rawPayload);\n      LOG.debug(\"writing payload of \" + rawPayload.length + \" bytes to Azure page blob\");\n      try {\n        long start \u003d System.currentTimeMillis();\n        blob.uploadPages(wrapperStream, currentBlobOffset, rawPayload.length,\n            withMD5Checking(), PageBlobOutputStream.this.opContext);\n        long end \u003d System.currentTimeMillis();\n        LOG.trace(\"Azure uploadPages time for \" + rawPayload.length + \" bytes \u003d \" + (end - start));\n      } catch (IOException ex) {\n        LOG.debug(ExceptionUtils.getStackTrace(ex));\n        lastError \u003d ex;\n      } catch (StorageException ex) {\n        LOG.debug(ExceptionUtils.getStackTrace(ex));\n        lastError \u003d new IOException(ex);\n      }\n      if (lastError !\u003d null) {\n        LOG.debug(\"Caught error in PageBlobOutputStream#writePayloadToServer()\");\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/PageBlobOutputStream.java"
    }
  }
}