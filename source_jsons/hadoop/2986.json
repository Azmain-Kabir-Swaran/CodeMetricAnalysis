{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtilClient.java",
  "functionName": "peerFromSocketAndKey",
  "functionId": "peerFromSocketAndKey___saslClient-SaslDataTransferClient__s-Socket__keyFactory-DataEncryptionKeyFactory__blockToken-Token__BlockTokenIdentifier____datanodeId-DatanodeID__socketTimeoutMs-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
  "functionStartLine": 720,
  "functionEndLine": 739,
  "numCommitsSeen": 72,
  "timeTaken": 4283,
  "changeHistory": [
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
    "37e23ce45c592f3c9c48a08a52a5f46787f6c0e9",
    "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f",
    "3b54223c0f32d42a84436c670d80b791a8e9696d",
    "c9db06f2e4d1c1f71f021d5070323f9fc194cdd7"
  ],
  "changeHistoryShort": {
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568": "Ybodychange",
    "37e23ce45c592f3c9c48a08a52a5f46787f6c0e9": "Ymultichange(Yparameterchange,Ybodychange)",
    "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f": "Ymultichange(Ymovefromfile,Ybodychange)",
    "3b54223c0f32d42a84436c670d80b791a8e9696d": "Ymultichange(Yparameterchange,Ybodychange)",
    "c9db06f2e4d1c1f71f021d5070323f9fc194cdd7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eca1a4bfe952fc184fe90dde50bac9b0e5293568": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13695. Move logging to slf4j in HDFS package. Contributed by Ian Pickering.\n",
      "commitDate": "06/09/18 2:48 PM",
      "commitName": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "02/07/18 10:48 AM",
      "commitNameOld": "1804a31515e541b3371925aa895589919b54d443",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 66.17,
      "commitsBetweenForRepo": 481,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public static Peer peerFromSocketAndKey(\n         SaslDataTransferClient saslClient, Socket s,\n         DataEncryptionKeyFactory keyFactory,\n         Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId,\n         int socketTimeoutMs) throws IOException {\n     Peer peer \u003d null;\n     boolean success \u003d false;\n     try {\n       peer \u003d peerFromSocket(s);\n       peer.setReadTimeout(socketTimeoutMs);\n       peer.setWriteTimeout(socketTimeoutMs);\n       peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n       success \u003d true;\n       return peer;\n     } finally {\n       if (!success) {\n-        IOUtilsClient.cleanup(null, peer);\n+        IOUtilsClient.cleanupWithLogger(LOG, peer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Peer peerFromSocketAndKey(\n        SaslDataTransferClient saslClient, Socket s,\n        DataEncryptionKeyFactory keyFactory,\n        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId,\n        int socketTimeoutMs) throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s);\n      peer.setReadTimeout(socketTimeoutMs);\n      peer.setWriteTimeout(socketTimeoutMs);\n      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtilsClient.cleanupWithLogger(LOG, peer);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
      "extendedDetails": {}
    },
    "37e23ce45c592f3c9c48a08a52a5f46787f6c0e9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10223. peerFromSocketAndKey performs SASL exchange before setting connection timeouts (cmccabe)\n",
      "commitDate": "30/03/16 1:37 PM",
      "commitName": "37e23ce45c592f3c9c48a08a52a5f46787f6c0e9",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10223. peerFromSocketAndKey performs SASL exchange before setting connection timeouts (cmccabe)\n",
          "commitDate": "30/03/16 1:37 PM",
          "commitName": "37e23ce45c592f3c9c48a08a52a5f46787f6c0e9",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "29/02/16 9:52 PM",
          "commitNameOld": "307ec80acae3b4a41d21b2d4b3a55032e55fcdc6",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 29.61,
          "commitsBetweenForRepo": 163,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   public static Peer peerFromSocketAndKey(\n         SaslDataTransferClient saslClient, Socket s,\n         DataEncryptionKeyFactory keyFactory,\n-        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n-        throws IOException {\n+        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId,\n+        int socketTimeoutMs) throws IOException {\n     Peer peer \u003d null;\n     boolean success \u003d false;\n     try {\n       peer \u003d peerFromSocket(s);\n+      peer.setReadTimeout(socketTimeoutMs);\n+      peer.setWriteTimeout(socketTimeoutMs);\n       peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n       success \u003d true;\n       return peer;\n     } finally {\n       if (!success) {\n         IOUtilsClient.cleanup(null, peer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Peer peerFromSocketAndKey(\n        SaslDataTransferClient saslClient, Socket s,\n        DataEncryptionKeyFactory keyFactory,\n        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId,\n        int socketTimeoutMs) throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s);\n      peer.setReadTimeout(socketTimeoutMs);\n      peer.setWriteTimeout(socketTimeoutMs);\n      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtilsClient.cleanup(null, peer);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {
            "oldValue": "[saslClient-SaslDataTransferClient, s-Socket, keyFactory-DataEncryptionKeyFactory, blockToken-Token\u003cBlockTokenIdentifier\u003e, datanodeId-DatanodeID]",
            "newValue": "[saslClient-SaslDataTransferClient, s-Socket, keyFactory-DataEncryptionKeyFactory, blockToken-Token\u003cBlockTokenIdentifier\u003e, datanodeId-DatanodeID, socketTimeoutMs-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10223. peerFromSocketAndKey performs SASL exchange before setting connection timeouts (cmccabe)\n",
          "commitDate": "30/03/16 1:37 PM",
          "commitName": "37e23ce45c592f3c9c48a08a52a5f46787f6c0e9",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "29/02/16 9:52 PM",
          "commitNameOld": "307ec80acae3b4a41d21b2d4b3a55032e55fcdc6",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 29.61,
          "commitsBetweenForRepo": 163,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   public static Peer peerFromSocketAndKey(\n         SaslDataTransferClient saslClient, Socket s,\n         DataEncryptionKeyFactory keyFactory,\n-        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n-        throws IOException {\n+        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId,\n+        int socketTimeoutMs) throws IOException {\n     Peer peer \u003d null;\n     boolean success \u003d false;\n     try {\n       peer \u003d peerFromSocket(s);\n+      peer.setReadTimeout(socketTimeoutMs);\n+      peer.setWriteTimeout(socketTimeoutMs);\n       peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n       success \u003d true;\n       return peer;\n     } finally {\n       if (!success) {\n         IOUtilsClient.cleanup(null, peer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Peer peerFromSocketAndKey(\n        SaslDataTransferClient saslClient, Socket s,\n        DataEncryptionKeyFactory keyFactory,\n        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId,\n        int socketTimeoutMs) throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s);\n      peer.setReadTimeout(socketTimeoutMs);\n      peer.setWriteTimeout(socketTimeoutMs);\n      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtilsClient.cleanup(null, peer);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-9002. Move o.a.h.hdfs.net/*Peer classes to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "03/09/15 3:32 PM",
      "commitName": "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-9002. Move o.a.h.hdfs.net/*Peer classes to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "03/09/15 3:32 PM",
          "commitName": "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "03/09/15 1:26 PM",
          "commitNameOld": "c2d2c1802a11e3e11a953b23b0eccbf4d107de59",
          "commitAuthorOld": "Jakob Homan",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n   public static Peer peerFromSocketAndKey(\n         SaslDataTransferClient saslClient, Socket s,\n         DataEncryptionKeyFactory keyFactory,\n         Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n         throws IOException {\n     Peer peer \u003d null;\n     boolean success \u003d false;\n     try {\n       peer \u003d peerFromSocket(s);\n       peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n       success \u003d true;\n       return peer;\n     } finally {\n       if (!success) {\n-        IOUtils.cleanup(null, peer);\n+        IOUtilsClient.cleanup(null, peer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Peer peerFromSocketAndKey(\n        SaslDataTransferClient saslClient, Socket s,\n        DataEncryptionKeyFactory keyFactory,\n        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n        throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s);\n      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtilsClient.cleanup(null, peer);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/TcpPeerServer.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
            "oldMethodName": "peerFromSocketAndKey",
            "newMethodName": "peerFromSocketAndKey"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9002. Move o.a.h.hdfs.net/*Peer classes to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "03/09/15 3:32 PM",
          "commitName": "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "03/09/15 1:26 PM",
          "commitNameOld": "c2d2c1802a11e3e11a953b23b0eccbf4d107de59",
          "commitAuthorOld": "Jakob Homan",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n   public static Peer peerFromSocketAndKey(\n         SaslDataTransferClient saslClient, Socket s,\n         DataEncryptionKeyFactory keyFactory,\n         Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n         throws IOException {\n     Peer peer \u003d null;\n     boolean success \u003d false;\n     try {\n       peer \u003d peerFromSocket(s);\n       peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n       success \u003d true;\n       return peer;\n     } finally {\n       if (!success) {\n-        IOUtils.cleanup(null, peer);\n+        IOUtilsClient.cleanup(null, peer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Peer peerFromSocketAndKey(\n        SaslDataTransferClient saslClient, Socket s,\n        DataEncryptionKeyFactory keyFactory,\n        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n        throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s);\n      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtilsClient.cleanup(null, peer);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "3b54223c0f32d42a84436c670d80b791a8e9696d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2856. Fix block protocol so that Datanodes don\u0027t require root or jsvc. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610474 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/07/14 11:10 AM",
      "commitName": "3b54223c0f32d42a84436c670d80b791a8e9696d",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2856. Fix block protocol so that Datanodes don\u0027t require root or jsvc. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610474 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/07/14 11:10 AM",
          "commitName": "3b54223c0f32d42a84436c670d80b791a8e9696d",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 111.78,
          "commitsBetweenForRepo": 669,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static Peer peerFromSocketAndKey(Socket s,\n-        DataEncryptionKey key) throws IOException {\n+  public static Peer peerFromSocketAndKey(\n+        SaslDataTransferClient saslClient, Socket s,\n+        DataEncryptionKeyFactory keyFactory,\n+        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n+        throws IOException {\n     Peer peer \u003d null;\n     boolean success \u003d false;\n     try {\n-      peer \u003d peerFromSocket(s); \n-      if (key !\u003d null) {\n-        peer \u003d new EncryptedPeer(peer, key);\n-      }\n+      peer \u003d peerFromSocket(s);\n+      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n       success \u003d true;\n       return peer;\n     } finally {\n       if (!success) {\n         IOUtils.cleanup(null, peer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Peer peerFromSocketAndKey(\n        SaslDataTransferClient saslClient, Socket s,\n        DataEncryptionKeyFactory keyFactory,\n        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n        throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s);\n      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtils.cleanup(null, peer);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/TcpPeerServer.java",
          "extendedDetails": {
            "oldValue": "[s-Socket, key-DataEncryptionKey]",
            "newValue": "[saslClient-SaslDataTransferClient, s-Socket, keyFactory-DataEncryptionKeyFactory, blockToken-Token\u003cBlockTokenIdentifier\u003e, datanodeId-DatanodeID]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2856. Fix block protocol so that Datanodes don\u0027t require root or jsvc. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610474 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/07/14 11:10 AM",
          "commitName": "3b54223c0f32d42a84436c670d80b791a8e9696d",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 111.78,
          "commitsBetweenForRepo": 669,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static Peer peerFromSocketAndKey(Socket s,\n-        DataEncryptionKey key) throws IOException {\n+  public static Peer peerFromSocketAndKey(\n+        SaslDataTransferClient saslClient, Socket s,\n+        DataEncryptionKeyFactory keyFactory,\n+        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n+        throws IOException {\n     Peer peer \u003d null;\n     boolean success \u003d false;\n     try {\n-      peer \u003d peerFromSocket(s); \n-      if (key !\u003d null) {\n-        peer \u003d new EncryptedPeer(peer, key);\n-      }\n+      peer \u003d peerFromSocket(s);\n+      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n       success \u003d true;\n       return peer;\n     } finally {\n       if (!success) {\n         IOUtils.cleanup(null, peer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Peer peerFromSocketAndKey(\n        SaslDataTransferClient saslClient, Socket s,\n        DataEncryptionKeyFactory keyFactory,\n        Token\u003cBlockTokenIdentifier\u003e blockToken, DatanodeID datanodeId)\n        throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s);\n      peer \u003d saslClient.peerSend(peer, keyFactory, blockToken, datanodeId);\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtils.cleanup(null, peer);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/TcpPeerServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "c9db06f2e4d1c1f71f021d5070323f9fc194cdd7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4353. Encapsulate connections to peers in Peer and PeerServer classes. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-347@1431097 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 1:34 PM",
      "commitName": "c9db06f2e4d1c1f71f021d5070323f9fc194cdd7",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+  public static Peer peerFromSocketAndKey(Socket s,\n+        DataEncryptionKey key) throws IOException {\n+    Peer peer \u003d null;\n+    boolean success \u003d false;\n+    try {\n+      peer \u003d peerFromSocket(s); \n+      if (key !\u003d null) {\n+        peer \u003d new EncryptedPeer(peer, key);\n+      }\n+      success \u003d true;\n+      return peer;\n+    } finally {\n+      if (!success) {\n+        IOUtils.cleanup(null, peer);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Peer peerFromSocketAndKey(Socket s,\n        DataEncryptionKey key) throws IOException {\n    Peer peer \u003d null;\n    boolean success \u003d false;\n    try {\n      peer \u003d peerFromSocket(s); \n      if (key !\u003d null) {\n        peer \u003d new EncryptedPeer(peer, key);\n      }\n      success \u003d true;\n      return peer;\n    } finally {\n      if (!success) {\n        IOUtils.cleanup(null, peer);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/TcpPeerServer.java"
    }
  }
}