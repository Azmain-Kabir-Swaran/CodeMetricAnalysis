{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "outputContainerLogMeta",
  "functionId": "outputContainerLogMeta___containerId-String__nodeId-String__nodeHttpAddress-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 1407,
  "functionEndLine": 1423,
  "numCommitsSeen": 52,
  "timeTaken": 1718,
  "changeHistory": [
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
    "871dc420f8a4f151189c0925e062c64859a8f275"
  ],
  "changeHistoryShort": {
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc": "Ybodychange",
    "871dc420f8a4f151189c0925e062c64859a8f275": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7072. Add a new log aggregation file format controller. Contributed by Xuan Gong.\n",
      "commitDate": "08/09/17 3:16 PM",
      "commitName": "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
      "commitAuthor": "Junping Du",
      "commitDateOld": "01/05/17 6:08 AM",
      "commitNameOld": "64f68cb0b8c0b93d37699893b812b37c4b05c939",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 130.38,
      "commitsBetweenForRepo": 830,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void outputContainerLogMeta(String containerId, String nodeId,\n       String nodeHttpAddress) throws IOException {\n     String containerString \u003d String.format(\n         LogCLIHelpers.CONTAINER_ON_NODE_PATTERN, containerId, nodeId);\n     outStream.println(containerString);\n     outStream.println(StringUtils.repeat(\"\u003d\", containerString.length()));\n     outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n         \"LogFile\", \"LogLength\", \"LastModificationTime\", \"LogAggregationType\");\n     outStream.println(StringUtils.repeat(\"\u003d\", containerString.length() * 2));\n-    List\u003cPair\u003cPerContainerLogFileInfo, String\u003e\u003e infos \u003d getContainerLogFiles(\n+    List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e infos \u003d getContainerLogFiles(\n         getConf(), containerId, nodeHttpAddress);\n-    for (Pair\u003cPerContainerLogFileInfo, String\u003e info : infos) {\n+    for (Pair\u003cContainerLogFileInfo, String\u003e info : infos) {\n       outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n           info.getKey().getFileName(), info.getKey().getFileSize(),\n           info.getKey().getLastModifiedTime(), info.getValue());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputContainerLogMeta(String containerId, String nodeId,\n      String nodeHttpAddress) throws IOException {\n    String containerString \u003d String.format(\n        LogCLIHelpers.CONTAINER_ON_NODE_PATTERN, containerId, nodeId);\n    outStream.println(containerString);\n    outStream.println(StringUtils.repeat(\"\u003d\", containerString.length()));\n    outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n        \"LogFile\", \"LogLength\", \"LastModificationTime\", \"LogAggregationType\");\n    outStream.println(StringUtils.repeat(\"\u003d\", containerString.length() * 2));\n    List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e infos \u003d getContainerLogFiles(\n        getConf(), containerId, nodeHttpAddress);\n    for (Pair\u003cContainerLogFileInfo, String\u003e info : infos) {\n      outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n          info.getKey().getFileName(), info.getKey().getFileSize(),\n          info.getKey().getLastModifiedTime(), info.getValue());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "871dc420f8a4f151189c0925e062c64859a8f275": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6313. YARN logs cli should provide logs for a completed container even when application is still running. Contributed by Xuan Gong.\n\n(cherry picked from commit b88f5e0f7858d1d89b79dfd325b767c34416052d)\n",
      "commitDate": "14/03/17 12:58 PM",
      "commitName": "871dc420f8a4f151189c0925e062c64859a8f275",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,17 @@\n+  private void outputContainerLogMeta(String containerId, String nodeId,\n+      String nodeHttpAddress) throws IOException {\n+    String containerString \u003d String.format(\n+        LogCLIHelpers.CONTAINER_ON_NODE_PATTERN, containerId, nodeId);\n+    outStream.println(containerString);\n+    outStream.println(StringUtils.repeat(\"\u003d\", containerString.length()));\n+    outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n+        \"LogFile\", \"LogLength\", \"LastModificationTime\", \"LogAggregationType\");\n+    outStream.println(StringUtils.repeat(\"\u003d\", containerString.length() * 2));\n+    List\u003cPair\u003cPerContainerLogFileInfo, String\u003e\u003e infos \u003d getContainerLogFiles(\n+        getConf(), containerId, nodeHttpAddress);\n+    for (Pair\u003cPerContainerLogFileInfo, String\u003e info : infos) {\n+      outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n+          info.getKey().getFileName(), info.getKey().getFileSize(),\n+          info.getKey().getLastModifiedTime(), info.getValue());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputContainerLogMeta(String containerId, String nodeId,\n      String nodeHttpAddress) throws IOException {\n    String containerString \u003d String.format(\n        LogCLIHelpers.CONTAINER_ON_NODE_PATTERN, containerId, nodeId);\n    outStream.println(containerString);\n    outStream.println(StringUtils.repeat(\"\u003d\", containerString.length()));\n    outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n        \"LogFile\", \"LogLength\", \"LastModificationTime\", \"LogAggregationType\");\n    outStream.println(StringUtils.repeat(\"\u003d\", containerString.length() * 2));\n    List\u003cPair\u003cPerContainerLogFileInfo, String\u003e\u003e infos \u003d getContainerLogFiles(\n        getConf(), containerId, nodeHttpAddress);\n    for (Pair\u003cPerContainerLogFileInfo, String\u003e info : infos) {\n      outStream.printf(LogCLIHelpers.PER_LOG_FILE_INFO_PATTERN,\n          info.getKey().getFileName(), info.getKey().getFileSize(),\n          info.getKey().getLastModifiedTime(), info.getValue());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}