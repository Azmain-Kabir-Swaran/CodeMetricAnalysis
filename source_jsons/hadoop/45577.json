{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogCLIHelpers.java",
  "functionName": "guessOwnerWithFileFormat",
  "functionId": "guessOwnerWithFileFormat___fileFormat-LogAggregationFileController__appId-ApplicationId__bestGuess-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/LogCLIHelpers.java",
  "functionStartLine": 71,
  "functionEndLine": 138,
  "numCommitsSeen": 30,
  "timeTaken": 1138,
  "changeHistory": [
    "460ba7fb14114f44e14a660f533f32c54e504478"
  ],
  "changeHistoryShort": {
    "460ba7fb14114f44e14a660f533f32c54e504478": "Yintroduced"
  },
  "changeHistoryDetails": {
    "460ba7fb14114f44e14a660f533f32c54e504478": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9558.  Fixed LogAggregation test cases.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "23/05/19 3:38 PM",
      "commitName": "460ba7fb14114f44e14a660f533f32c54e504478",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,68 @@\n+  public static String guessOwnerWithFileFormat(\n+      LogAggregationFileController fileFormat, ApplicationId appId,\n+      String bestGuess, Configuration conf) throws IOException {\n+\n+    boolean scanOldPath \u003d LogAggregationUtils.isOlderPathEnabled(conf);\n+    Path remoteRootLogDir \u003d fileFormat.getRemoteRootLogDir();\n+    String suffix \u003d fileFormat.getRemoteRootLogDirSuffix();\n+    Path fullPath \u003d fileFormat.getRemoteAppLogDir(appId, bestGuess);\n+    FileContext fc \u003d\n+        FileContext.getFileContext(remoteRootLogDir.toUri(), conf);\n+    String pathAccess \u003d fullPath.toString();\n+\n+    try {\n+      if (fc.util().exists(fullPath)) {\n+        return bestGuess;\n+      }\n+\n+      if (scanOldPath) {\n+        Path olderAppPath \u003d fileFormat.getOlderRemoteAppLogDir(appId,\n+            bestGuess);\n+        pathAccess \u003d olderAppPath.toString();\n+        if (fc.util().exists(olderAppPath)) {\n+          return bestGuess;\n+        }\n+      }\n+    } catch (AccessControlException | AccessDeniedException ex) {\n+      logDirNoAccessPermission(pathAccess, bestGuess, ex.getMessage());\n+      throw ex;\n+    }\n+\n+    try {\n+      Path toMatch \u003d fileFormat.getRemoteAppLogDir(appId, null);\n+      FileStatus[] matching \u003d fc.util().globStatus(toMatch);\n+      if (matching !\u003d null \u0026\u0026 matching.length \u003d\u003d 1) {\n+        //fetch user from new path /app-logs/user[/suffix]/bucket/app_id\n+        Path parent \u003d matching[0].getPath().getParent();\n+        //skip the suffix too\n+        if (suffix !\u003d null \u0026\u0026 !StringUtils.isEmpty(suffix)) {\n+          parent \u003d parent.getParent();\n+        }\n+        //skip the bucket\n+        parent \u003d parent.getParent();\n+        return parent.getName();\n+      }\n+    } catch (IOException e) {\n+      // Ignore IOException thrown from wrong file format\n+    }\n+\n+    if (scanOldPath) {\n+      try {\n+        Path toMatch \u003d fileFormat.getOlderRemoteAppLogDir(appId, null);\n+        FileStatus[] matching \u003d fc.util().globStatus(toMatch);\n+        if (matching !\u003d null \u0026\u0026 matching.length \u003d\u003d 1) {\n+          //fetch user from old path /app-logs/user[/suffix]/app_id\n+          Path parent \u003d matching[0].getPath().getParent();\n+          //skip the suffix too\n+          if (suffix !\u003d null \u0026\u0026 !StringUtils.isEmpty(suffix)) {\n+            parent \u003d parent.getParent();\n+          }\n+          return parent.getName();\n+        }\n+      } catch (IOException e) {\n+        // Ignore IOException thrown from wrong file format\n+      }\n+    }\n+\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String guessOwnerWithFileFormat(\n      LogAggregationFileController fileFormat, ApplicationId appId,\n      String bestGuess, Configuration conf) throws IOException {\n\n    boolean scanOldPath \u003d LogAggregationUtils.isOlderPathEnabled(conf);\n    Path remoteRootLogDir \u003d fileFormat.getRemoteRootLogDir();\n    String suffix \u003d fileFormat.getRemoteRootLogDirSuffix();\n    Path fullPath \u003d fileFormat.getRemoteAppLogDir(appId, bestGuess);\n    FileContext fc \u003d\n        FileContext.getFileContext(remoteRootLogDir.toUri(), conf);\n    String pathAccess \u003d fullPath.toString();\n\n    try {\n      if (fc.util().exists(fullPath)) {\n        return bestGuess;\n      }\n\n      if (scanOldPath) {\n        Path olderAppPath \u003d fileFormat.getOlderRemoteAppLogDir(appId,\n            bestGuess);\n        pathAccess \u003d olderAppPath.toString();\n        if (fc.util().exists(olderAppPath)) {\n          return bestGuess;\n        }\n      }\n    } catch (AccessControlException | AccessDeniedException ex) {\n      logDirNoAccessPermission(pathAccess, bestGuess, ex.getMessage());\n      throw ex;\n    }\n\n    try {\n      Path toMatch \u003d fileFormat.getRemoteAppLogDir(appId, null);\n      FileStatus[] matching \u003d fc.util().globStatus(toMatch);\n      if (matching !\u003d null \u0026\u0026 matching.length \u003d\u003d 1) {\n        //fetch user from new path /app-logs/user[/suffix]/bucket/app_id\n        Path parent \u003d matching[0].getPath().getParent();\n        //skip the suffix too\n        if (suffix !\u003d null \u0026\u0026 !StringUtils.isEmpty(suffix)) {\n          parent \u003d parent.getParent();\n        }\n        //skip the bucket\n        parent \u003d parent.getParent();\n        return parent.getName();\n      }\n    } catch (IOException e) {\n      // Ignore IOException thrown from wrong file format\n    }\n\n    if (scanOldPath) {\n      try {\n        Path toMatch \u003d fileFormat.getOlderRemoteAppLogDir(appId, null);\n        FileStatus[] matching \u003d fc.util().globStatus(toMatch);\n        if (matching !\u003d null \u0026\u0026 matching.length \u003d\u003d 1) {\n          //fetch user from old path /app-logs/user[/suffix]/app_id\n          Path parent \u003d matching[0].getPath().getParent();\n          //skip the suffix too\n          if (suffix !\u003d null \u0026\u0026 !StringUtils.isEmpty(suffix)) {\n            parent \u003d parent.getParent();\n          }\n          return parent.getName();\n        }\n      } catch (IOException e) {\n        // Ignore IOException thrown from wrong file format\n      }\n    }\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/LogCLIHelpers.java"
    }
  }
}