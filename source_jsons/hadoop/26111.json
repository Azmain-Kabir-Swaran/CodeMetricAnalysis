{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppController.java",
  "functionName": "writeJobConf",
  "functionId": "writeJobConf",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
  "functionStartLine": 340,
  "functionEndLine": 359,
  "numCommitsSeen": 27,
  "timeTaken": 1489,
  "changeHistory": [
    "c87b3a448a00df97149a4e93a8c39d9ad0268bdb"
  ],
  "changeHistoryShort": {
    "c87b3a448a00df97149a4e93a8c39d9ad0268bdb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c87b3a448a00df97149a4e93a8c39d9ad0268bdb": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6787. Allow job_conf.xml to be downloadable on the job overview page in JHS (haibochen via rkanter)\n",
      "commitDate": "01/12/16 5:29 PM",
      "commitName": "c87b3a448a00df97149a4e93a8c39d9ad0268bdb",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,20 @@\n+  private void writeJobConf() {\n+    String jobId \u003d $(JOB_ID);\n+    assert(!jobId.isEmpty());\n+\n+    JobId jobID \u003d MRApps.toJobID($(JOB_ID));\n+    Job job \u003d app.context.getJob(jobID);\n+    assert(job !\u003d null);\n+\n+    try {\n+      Configuration jobConf \u003d job.loadConfFile();\n+      response().setContentType(\"text/xml\");\n+      response().setHeader(\"Content-Disposition\",\n+          \"attachment; filename\u003d\" + jobId + \".xml\");\n+      jobConf.writeXml(writer());\n+    } catch (IOException e) {\n+      LOG.error(\"Error reading/writing job\" +\n+          \" conf file for job: \" + jobId, e);\n+      renderText(e.getMessage());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeJobConf() {\n    String jobId \u003d $(JOB_ID);\n    assert(!jobId.isEmpty());\n\n    JobId jobID \u003d MRApps.toJobID($(JOB_ID));\n    Job job \u003d app.context.getJob(jobID);\n    assert(job !\u003d null);\n\n    try {\n      Configuration jobConf \u003d job.loadConfFile();\n      response().setContentType(\"text/xml\");\n      response().setHeader(\"Content-Disposition\",\n          \"attachment; filename\u003d\" + jobId + \".xml\");\n      jobConf.writeXml(writer());\n    } catch (IOException e) {\n      LOG.error(\"Error reading/writing job\" +\n          \" conf file for job: \" + jobId, e);\n      renderText(e.getMessage());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java"
    }
  }
}