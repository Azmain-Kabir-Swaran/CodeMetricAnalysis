{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyService.java",
  "functionName": "allocate",
  "functionId": "allocate___request-AllocateRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
  "functionStartLine": 356,
  "functionEndLine": 378,
  "numCommitsSeen": 17,
  "timeTaken": 1478,
  "changeHistory": [
    "3859fa76d0b5202abaf6e02fc9743684f5ab1cb2",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "3859fa76d0b5202abaf6e02fc9743684f5ab1cb2": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3859fa76d0b5202abaf6e02fc9743684f5ab1cb2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6924. Metrics for Federation AMRMProxy. Contributed by Young Chen\n",
      "commitDate": "06/03/20 8:04 PM",
      "commitName": "3859fa76d0b5202abaf6e02fc9743684f5ab1cb2",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 357.2,
      "commitsBetweenForRepo": 2130,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,23 @@\n   public AllocateResponse allocate(AllocateRequest request)\n       throws YarnException, IOException {\n-    AMRMTokenIdentifier amrmTokenIdentifier \u003d\n-        YarnServerSecurityUtils.authorizeRequest();\n-    RequestInterceptorChainWrapper pipeline \u003d\n-        getInterceptorChain(amrmTokenIdentifier);\n-    AllocateResponse allocateResponse \u003d\n-        pipeline.getRootInterceptor().allocate(request);\n+    long startTime \u003d clock.getTime();\n+    try {\n+      AMRMTokenIdentifier amrmTokenIdentifier \u003d\n+          YarnServerSecurityUtils.authorizeRequest();\n+      RequestInterceptorChainWrapper pipeline \u003d\n+          getInterceptorChain(amrmTokenIdentifier);\n+      AllocateResponse allocateResponse \u003d\n+          pipeline.getRootInterceptor().allocate(request);\n \n-    updateAMRMTokens(amrmTokenIdentifier, pipeline, allocateResponse);\n+      updateAMRMTokens(amrmTokenIdentifier, pipeline, allocateResponse);\n \n-    return allocateResponse;\n+      long endTime \u003d clock.getTime();\n+      this.metrics.succeededAllocateRequests(endTime - startTime);\n+      LOG.info(\"Allocate processing finished in {} ms for application {}\",\n+          endTime - startTime, pipeline.getApplicationAttemptId());\n+      return allocateResponse;\n+    } catch (Throwable t) {\n+      this.metrics.incrFailedAllocateRequests();\n+      throw t;\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AllocateResponse allocate(AllocateRequest request)\n      throws YarnException, IOException {\n    long startTime \u003d clock.getTime();\n    try {\n      AMRMTokenIdentifier amrmTokenIdentifier \u003d\n          YarnServerSecurityUtils.authorizeRequest();\n      RequestInterceptorChainWrapper pipeline \u003d\n          getInterceptorChain(amrmTokenIdentifier);\n      AllocateResponse allocateResponse \u003d\n          pipeline.getRootInterceptor().allocate(request);\n\n      updateAMRMTokens(amrmTokenIdentifier, pipeline, allocateResponse);\n\n      long endTime \u003d clock.getTime();\n      this.metrics.succeededAllocateRequests(endTime - startTime);\n      LOG.info(\"Allocate processing finished in {} ms for application {}\",\n          endTime - startTime, pipeline.getApplicationAttemptId());\n      return allocateResponse;\n    } catch (Throwable t) {\n      this.metrics.incrFailedAllocateRequests();\n      throw t;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,13 @@\n+  public AllocateResponse allocate(AllocateRequest request)\n+      throws YarnException, IOException {\n+    AMRMTokenIdentifier amrmTokenIdentifier \u003d\n+        YarnServerSecurityUtils.authorizeRequest();\n+    RequestInterceptorChainWrapper pipeline \u003d\n+        getInterceptorChain(amrmTokenIdentifier);\n+    AllocateResponse allocateResponse \u003d\n+        pipeline.getRootInterceptor().allocate(request);\n+\n+    updateAMRMTokens(amrmTokenIdentifier, pipeline, allocateResponse);\n+\n+    return allocateResponse;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AllocateResponse allocate(AllocateRequest request)\n      throws YarnException, IOException {\n    AMRMTokenIdentifier amrmTokenIdentifier \u003d\n        YarnServerSecurityUtils.authorizeRequest();\n    RequestInterceptorChainWrapper pipeline \u003d\n        getInterceptorChain(amrmTokenIdentifier);\n    AllocateResponse allocateResponse \u003d\n        pipeline.getRootInterceptor().allocate(request);\n\n    updateAMRMTokens(amrmTokenIdentifier, pipeline, allocateResponse);\n\n    return allocateResponse;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java"
    }
  }
}