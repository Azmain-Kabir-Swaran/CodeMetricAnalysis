{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StripedReader.java",
  "functionName": "getInputBuffers",
  "functionId": "getInputBuffers___toReconstructLen-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReader.java",
  "functionStartLine": 220,
  "functionEndLine": 241,
  "numCommitsSeen": 6,
  "timeTaken": 873,
  "changeHistory": [
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f"
  ],
  "changeHistoryShort": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9719. Refactoring ErasureCodingWorker into smaller reusable constructs. Contributed by Kai Zheng.\n",
      "commitDate": "06/04/16 10:50 PM",
      "commitName": "3c18a53cbd2efabb2ad108d63a0b0b558424115f",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,22 @@\n+  ByteBuffer[] getInputBuffers(int toReconstructLen) {\n+    ByteBuffer[] inputs \u003d new ByteBuffer[dataBlkNum + parityBlkNum];\n+\n+    for (int i \u003d 0; i \u003c successList.length; i++) {\n+      int index \u003d successList[i];\n+      StripedBlockReader reader \u003d getReader(index);\n+      ByteBuffer buffer \u003d reader.getReadBuffer();\n+      paddingBufferToLen(buffer, toReconstructLen);\n+      inputs[reader.getIndex()] \u003d (ByteBuffer)buffer.flip();\n+    }\n+\n+    if (successList.length \u003c dataBlkNum) {\n+      for (int i \u003d 0; i \u003c zeroStripeBuffers.length; i++) {\n+        ByteBuffer buffer \u003d zeroStripeBuffers[i];\n+        paddingBufferToLen(buffer, toReconstructLen);\n+        int index \u003d zeroStripeIndices[i];\n+        inputs[index] \u003d (ByteBuffer)buffer.flip();\n+      }\n+    }\n+\n+    return inputs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  ByteBuffer[] getInputBuffers(int toReconstructLen) {\n    ByteBuffer[] inputs \u003d new ByteBuffer[dataBlkNum + parityBlkNum];\n\n    for (int i \u003d 0; i \u003c successList.length; i++) {\n      int index \u003d successList[i];\n      StripedBlockReader reader \u003d getReader(index);\n      ByteBuffer buffer \u003d reader.getReadBuffer();\n      paddingBufferToLen(buffer, toReconstructLen);\n      inputs[reader.getIndex()] \u003d (ByteBuffer)buffer.flip();\n    }\n\n    if (successList.length \u003c dataBlkNum) {\n      for (int i \u003d 0; i \u003c zeroStripeBuffers.length; i++) {\n        ByteBuffer buffer \u003d zeroStripeBuffers[i];\n        paddingBufferToLen(buffer, toReconstructLen);\n        int index \u003d zeroStripeIndices[i];\n        inputs[index] \u003d (ByteBuffer)buffer.flip();\n      }\n    }\n\n    return inputs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReader.java"
    }
  }
}