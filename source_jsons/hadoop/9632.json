{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsLoggerTask.java",
  "functionName": "makeMetricsLoggerAsync",
  "functionId": "makeMetricsLoggerAsync___metricsLog-Log",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
  "functionStartLine": 153,
  "functionEndLine": 175,
  "numCommitsSeen": 151,
  "timeTaken": 2703,
  "changeHistory": [
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
    "a88f31ebf3433392419127816f168136de0a9e77"
  ],
  "changeHistoryShort": {
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "a88f31ebf3433392419127816f168136de0a9e77": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-8953. DataNode Metrics logging (Contributed by Kanaka Kumar Avvaru)\n",
      "commitDate": "15/09/15 11:48 AM",
      "commitName": "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
      "commitAuthor": "Vinayakumar B",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8953. DataNode Metrics logging (Contributed by Kanaka Kumar Avvaru)\n",
          "commitDate": "15/09/15 11:48 AM",
          "commitName": "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "15/09/15 11:40 AM",
          "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  private static void makeMetricsLoggerAsync() {\n-    if (!(MetricsLog instanceof Log4JLogger)) {\n-      LOG.warn(\n-          \"Metrics logging will not be async since the logger is not log4j\");\n+  public static void makeMetricsLoggerAsync(Log metricsLog) {\n+    if (!(metricsLog instanceof Log4JLogger)) {\n+      LOG.warn(\"Metrics logging will not be async since \"\n+          + \"the logger is not log4j\");\n       return;\n     }\n-    org.apache.log4j.Logger logger \u003d ((Log4JLogger) MetricsLog).getLogger();\n-    logger.setAdditivity(false);  // Don\u0027t pollute NN logs with metrics dump\n+    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n+    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n \n     @SuppressWarnings(\"unchecked\")\n     List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n     // failsafe against trying to async it more than once\n     if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n       AsyncAppender asyncAppender \u003d new AsyncAppender();\n       // change logger to have an async appender containing all the\n       // previously configured appenders\n       for (Appender appender : appenders) {\n         logger.removeAppender(appender);\n         asyncAppender.addAppender(appender);\n       }\n       logger.addAppender(asyncAppender);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void makeMetricsLoggerAsync(Log metricsLog) {\n    if (!(metricsLog instanceof Log4JLogger)) {\n      LOG.warn(\"Metrics logging will not be async since \"\n          + \"the logger is not log4j\");\n      return;\n    }\n    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n\n    @SuppressWarnings(\"unchecked\")\n    List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n    // failsafe against trying to async it more than once\n    if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n      AsyncAppender asyncAppender \u003d new AsyncAppender();\n      // change logger to have an async appender containing all the\n      // previously configured appenders\n      for (Appender appender : appenders) {\n        logger.removeAppender(appender);\n        asyncAppender.addAppender(appender);\n      }\n      logger.addAppender(asyncAppender);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
            "oldMethodName": "makeMetricsLoggerAsync",
            "newMethodName": "makeMetricsLoggerAsync"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8953. DataNode Metrics logging (Contributed by Kanaka Kumar Avvaru)\n",
          "commitDate": "15/09/15 11:48 AM",
          "commitName": "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "15/09/15 11:40 AM",
          "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  private static void makeMetricsLoggerAsync() {\n-    if (!(MetricsLog instanceof Log4JLogger)) {\n-      LOG.warn(\n-          \"Metrics logging will not be async since the logger is not log4j\");\n+  public static void makeMetricsLoggerAsync(Log metricsLog) {\n+    if (!(metricsLog instanceof Log4JLogger)) {\n+      LOG.warn(\"Metrics logging will not be async since \"\n+          + \"the logger is not log4j\");\n       return;\n     }\n-    org.apache.log4j.Logger logger \u003d ((Log4JLogger) MetricsLog).getLogger();\n-    logger.setAdditivity(false);  // Don\u0027t pollute NN logs with metrics dump\n+    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n+    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n \n     @SuppressWarnings(\"unchecked\")\n     List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n     // failsafe against trying to async it more than once\n     if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n       AsyncAppender asyncAppender \u003d new AsyncAppender();\n       // change logger to have an async appender containing all the\n       // previously configured appenders\n       for (Appender appender : appenders) {\n         logger.removeAppender(appender);\n         asyncAppender.addAppender(appender);\n       }\n       logger.addAppender(asyncAppender);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void makeMetricsLoggerAsync(Log metricsLog) {\n    if (!(metricsLog instanceof Log4JLogger)) {\n      LOG.warn(\"Metrics logging will not be async since \"\n          + \"the logger is not log4j\");\n      return;\n    }\n    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n\n    @SuppressWarnings(\"unchecked\")\n    List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n    // failsafe against trying to async it more than once\n    if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n      AsyncAppender asyncAppender \u003d new AsyncAppender();\n      // change logger to have an async appender containing all the\n      // previously configured appenders\n      for (Appender appender : appenders) {\n        logger.removeAppender(appender);\n        asyncAppender.addAppender(appender);\n      }\n      logger.addAppender(asyncAppender);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8953. DataNode Metrics logging (Contributed by Kanaka Kumar Avvaru)\n",
          "commitDate": "15/09/15 11:48 AM",
          "commitName": "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "15/09/15 11:40 AM",
          "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  private static void makeMetricsLoggerAsync() {\n-    if (!(MetricsLog instanceof Log4JLogger)) {\n-      LOG.warn(\n-          \"Metrics logging will not be async since the logger is not log4j\");\n+  public static void makeMetricsLoggerAsync(Log metricsLog) {\n+    if (!(metricsLog instanceof Log4JLogger)) {\n+      LOG.warn(\"Metrics logging will not be async since \"\n+          + \"the logger is not log4j\");\n       return;\n     }\n-    org.apache.log4j.Logger logger \u003d ((Log4JLogger) MetricsLog).getLogger();\n-    logger.setAdditivity(false);  // Don\u0027t pollute NN logs with metrics dump\n+    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n+    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n \n     @SuppressWarnings(\"unchecked\")\n     List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n     // failsafe against trying to async it more than once\n     if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n       AsyncAppender asyncAppender \u003d new AsyncAppender();\n       // change logger to have an async appender containing all the\n       // previously configured appenders\n       for (Appender appender : appenders) {\n         logger.removeAppender(appender);\n         asyncAppender.addAppender(appender);\n       }\n       logger.addAppender(asyncAppender);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void makeMetricsLoggerAsync(Log metricsLog) {\n    if (!(metricsLog instanceof Log4JLogger)) {\n      LOG.warn(\"Metrics logging will not be async since \"\n          + \"the logger is not log4j\");\n      return;\n    }\n    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n\n    @SuppressWarnings(\"unchecked\")\n    List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n    // failsafe against trying to async it more than once\n    if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n      AsyncAppender asyncAppender \u003d new AsyncAppender();\n      // change logger to have an async appender containing all the\n      // previously configured appenders\n      for (Appender appender : appenders) {\n        logger.removeAppender(appender);\n        asyncAppender.addAppender(appender);\n      }\n      logger.addAppender(asyncAppender);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8953. DataNode Metrics logging (Contributed by Kanaka Kumar Avvaru)\n",
          "commitDate": "15/09/15 11:48 AM",
          "commitName": "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "15/09/15 11:40 AM",
          "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  private static void makeMetricsLoggerAsync() {\n-    if (!(MetricsLog instanceof Log4JLogger)) {\n-      LOG.warn(\n-          \"Metrics logging will not be async since the logger is not log4j\");\n+  public static void makeMetricsLoggerAsync(Log metricsLog) {\n+    if (!(metricsLog instanceof Log4JLogger)) {\n+      LOG.warn(\"Metrics logging will not be async since \"\n+          + \"the logger is not log4j\");\n       return;\n     }\n-    org.apache.log4j.Logger logger \u003d ((Log4JLogger) MetricsLog).getLogger();\n-    logger.setAdditivity(false);  // Don\u0027t pollute NN logs with metrics dump\n+    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n+    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n \n     @SuppressWarnings(\"unchecked\")\n     List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n     // failsafe against trying to async it more than once\n     if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n       AsyncAppender asyncAppender \u003d new AsyncAppender();\n       // change logger to have an async appender containing all the\n       // previously configured appenders\n       for (Appender appender : appenders) {\n         logger.removeAppender(appender);\n         asyncAppender.addAppender(appender);\n       }\n       logger.addAppender(asyncAppender);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void makeMetricsLoggerAsync(Log metricsLog) {\n    if (!(metricsLog instanceof Log4JLogger)) {\n      LOG.warn(\"Metrics logging will not be async since \"\n          + \"the logger is not log4j\");\n      return;\n    }\n    org.apache.log4j.Logger logger \u003d ((Log4JLogger) metricsLog).getLogger();\n    logger.setAdditivity(false); // Don\u0027t pollute actual logs with metrics dump\n\n    @SuppressWarnings(\"unchecked\")\n    List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n    // failsafe against trying to async it more than once\n    if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n      AsyncAppender asyncAppender \u003d new AsyncAppender();\n      // change logger to have an async appender containing all the\n      // previously configured appenders\n      for (Appender appender : appenders) {\n        logger.removeAppender(appender);\n        asyncAppender.addAppender(appender);\n      }\n      logger.addAppender(asyncAppender);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[metricsLog-Log]"
          }
        }
      ]
    },
    "a88f31ebf3433392419127816f168136de0a9e77": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8880. NameNode metrics logging. (Arpit Agarwal)\n",
      "commitDate": "17/08/15 4:55 PM",
      "commitName": "a88f31ebf3433392419127816f168136de0a9e77",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,23 @@\n+  private static void makeMetricsLoggerAsync() {\n+    if (!(MetricsLog instanceof Log4JLogger)) {\n+      LOG.warn(\n+          \"Metrics logging will not be async since the logger is not log4j\");\n+      return;\n+    }\n+    org.apache.log4j.Logger logger \u003d ((Log4JLogger) MetricsLog).getLogger();\n+    logger.setAdditivity(false);  // Don\u0027t pollute NN logs with metrics dump\n+\n+    @SuppressWarnings(\"unchecked\")\n+    List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n+    // failsafe against trying to async it more than once\n+    if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n+      AsyncAppender asyncAppender \u003d new AsyncAppender();\n+      // change logger to have an async appender containing all the\n+      // previously configured appenders\n+      for (Appender appender : appenders) {\n+        logger.removeAppender(appender);\n+        asyncAppender.addAppender(appender);\n+      }\n+      logger.addAppender(asyncAppender);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void makeMetricsLoggerAsync() {\n    if (!(MetricsLog instanceof Log4JLogger)) {\n      LOG.warn(\n          \"Metrics logging will not be async since the logger is not log4j\");\n      return;\n    }\n    org.apache.log4j.Logger logger \u003d ((Log4JLogger) MetricsLog).getLogger();\n    logger.setAdditivity(false);  // Don\u0027t pollute NN logs with metrics dump\n\n    @SuppressWarnings(\"unchecked\")\n    List\u003cAppender\u003e appenders \u003d Collections.list(logger.getAllAppenders());\n    // failsafe against trying to async it more than once\n    if (!appenders.isEmpty() \u0026\u0026 !(appenders.get(0) instanceof AsyncAppender)) {\n      AsyncAppender asyncAppender \u003d new AsyncAppender();\n      // change logger to have an async appender containing all the\n      // previously configured appenders\n      for (Appender appender : appenders) {\n        logger.removeAppender(appender);\n        asyncAppender.addAppender(appender);\n      }\n      logger.addAppender(asyncAppender);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
    }
  }
}