{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NumaResourceAllocator.java",
  "functionName": "parseCpus",
  "functionId": "parseCpus___outputLines-String[]__nodeId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/numa/NumaResourceAllocator.java",
  "functionStartLine": 160,
  "functionEndLine": 173,
  "numCommitsSeen": 3,
  "timeTaken": 867,
  "changeHistory": [
    "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd"
  ],
  "changeHistoryShort": {
    "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5764. NUMA awareness support for launching containers. Contributed by Devaraj K.\n",
      "commitDate": "13/03/18 12:36 PM",
      "commitName": "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd",
      "commitAuthor": "Miklos Szegedi",
      "diff": "@@ -0,0 +1,14 @@\n+  private int parseCpus(String[] outputLines, String nodeId) {\n+    int cpus \u003d 0;\n+    Pattern patternNodeCPUs \u003d Pattern\n+        .compile(NUMA_NODE_CPUS_REGEX.replace(NUMA_NODE, nodeId));\n+    for (String line : outputLines) {\n+      Matcher matcherNodeCPUs \u003d patternNodeCPUs.matcher(line);\n+      if (matcherNodeCPUs.find()) {\n+        String cpusStr \u003d matcherNodeCPUs.group(1);\n+        cpus \u003d cpusStr.split(SPACE).length;\n+        break;\n+      }\n+    }\n+    return cpus;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int parseCpus(String[] outputLines, String nodeId) {\n    int cpus \u003d 0;\n    Pattern patternNodeCPUs \u003d Pattern\n        .compile(NUMA_NODE_CPUS_REGEX.replace(NUMA_NODE, nodeId));\n    for (String line : outputLines) {\n      Matcher matcherNodeCPUs \u003d patternNodeCPUs.matcher(line);\n      if (matcherNodeCPUs.find()) {\n        String cpusStr \u003d matcherNodeCPUs.group(1);\n        cpus \u003d cpusStr.split(SPACE).length;\n        break;\n      }\n    }\n    return cpus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/numa/NumaResourceAllocator.java"
    }
  }
}