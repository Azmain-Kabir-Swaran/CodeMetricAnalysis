{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "getLeafZnodePath",
  "functionId": "getLeafZnodePath___nodeName-String__rootNode-String__splitIdx-int__createParentIfNotExists-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 1295,
  "functionEndLine": 1313,
  "numCommitsSeen": 145,
  "timeTaken": 4354,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": "Ybodychange",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n   private String getLeafZnodePath(String nodeName, String rootNode,\n       int splitIdx, boolean createParentIfNotExists) throws Exception {\n     if (splitIdx \u003d\u003d 0) {\n       return getNodePath(rootNode, nodeName);\n     }\n     int split \u003d nodeName.length() - splitIdx;\n     String rootNodePath \u003d\n         getNodePath(rootNode, nodeName.substring(0, split));\n     if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n       try {\n         zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n             zkAcl, fencingNodePath);\n       } catch (KeeperException.NodeExistsException e) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n-              \" as it already exists.\");\n-        }\n+        LOG.debug(\"Unable to create app parent node {} as it already exists.\",\n+            rootNodePath);\n       }\n     }\n     return getNodePath(rootNodePath, nodeName.substring(split));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getLeafZnodePath(String nodeName, String rootNode,\n      int splitIdx, boolean createParentIfNotExists) throws Exception {\n    if (splitIdx \u003d\u003d 0) {\n      return getNodePath(rootNode, nodeName);\n    }\n    int split \u003d nodeName.length() - splitIdx;\n    String rootNodePath \u003d\n        getNodePath(rootNode, nodeName.substring(0, split));\n    if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n      try {\n        zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n            zkAcl, fencingNodePath);\n      } catch (KeeperException.NodeExistsException e) {\n        LOG.debug(\"Unable to create app parent node {} as it already exists.\",\n            rootNodePath);\n      }\n    }\n    return getNodePath(rootNodePath, nodeName.substring(split));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
      "commitDate": "26/10/17 5:47 PM",
      "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
          "commitDate": "26/10/17 5:47 PM",
          "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 17.28,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,21 @@\n-  private String getLeafAppIdNodePath(String appId, String rootNode,\n-      int appIdNodeSplitIdx, boolean createParentIfNotExists) throws Exception {\n-    if (appIdNodeSplitIdx \u003d\u003d 0) {\n-      return getNodePath(rootNode, appId);\n+  private String getLeafZnodePath(String nodeName, String rootNode,\n+      int splitIdx, boolean createParentIfNotExists) throws Exception {\n+    if (splitIdx \u003d\u003d 0) {\n+      return getNodePath(rootNode, nodeName);\n     }\n-    String nodeName \u003d appId;\n-    int splitIdx \u003d nodeName.length() - appIdNodeSplitIdx;\n+    int split \u003d nodeName.length() - splitIdx;\n     String rootNodePath \u003d\n-        getNodePath(rootNode, nodeName.substring(0, splitIdx));\n+        getNodePath(rootNode, nodeName.substring(0, split));\n     if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n       try {\n         zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n             zkAcl, fencingNodePath);\n       } catch (KeeperException.NodeExistsException e) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n               \" as it already exists.\");\n         }\n       }\n     }\n-    return getNodePath(rootNodePath, nodeName.substring(splitIdx));\n+    return getNodePath(rootNodePath, nodeName.substring(split));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String getLeafZnodePath(String nodeName, String rootNode,\n      int splitIdx, boolean createParentIfNotExists) throws Exception {\n    if (splitIdx \u003d\u003d 0) {\n      return getNodePath(rootNode, nodeName);\n    }\n    int split \u003d nodeName.length() - splitIdx;\n    String rootNodePath \u003d\n        getNodePath(rootNode, nodeName.substring(0, split));\n    if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n      try {\n        zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n            zkAcl, fencingNodePath);\n      } catch (KeeperException.NodeExistsException e) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n              \" as it already exists.\");\n        }\n      }\n    }\n    return getNodePath(rootNodePath, nodeName.substring(split));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "getLeafAppIdNodePath",
            "newValue": "getLeafZnodePath"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
          "commitDate": "26/10/17 5:47 PM",
          "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 17.28,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,21 @@\n-  private String getLeafAppIdNodePath(String appId, String rootNode,\n-      int appIdNodeSplitIdx, boolean createParentIfNotExists) throws Exception {\n-    if (appIdNodeSplitIdx \u003d\u003d 0) {\n-      return getNodePath(rootNode, appId);\n+  private String getLeafZnodePath(String nodeName, String rootNode,\n+      int splitIdx, boolean createParentIfNotExists) throws Exception {\n+    if (splitIdx \u003d\u003d 0) {\n+      return getNodePath(rootNode, nodeName);\n     }\n-    String nodeName \u003d appId;\n-    int splitIdx \u003d nodeName.length() - appIdNodeSplitIdx;\n+    int split \u003d nodeName.length() - splitIdx;\n     String rootNodePath \u003d\n-        getNodePath(rootNode, nodeName.substring(0, splitIdx));\n+        getNodePath(rootNode, nodeName.substring(0, split));\n     if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n       try {\n         zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n             zkAcl, fencingNodePath);\n       } catch (KeeperException.NodeExistsException e) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n               \" as it already exists.\");\n         }\n       }\n     }\n-    return getNodePath(rootNodePath, nodeName.substring(splitIdx));\n+    return getNodePath(rootNodePath, nodeName.substring(split));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String getLeafZnodePath(String nodeName, String rootNode,\n      int splitIdx, boolean createParentIfNotExists) throws Exception {\n    if (splitIdx \u003d\u003d 0) {\n      return getNodePath(rootNode, nodeName);\n    }\n    int split \u003d nodeName.length() - splitIdx;\n    String rootNodePath \u003d\n        getNodePath(rootNode, nodeName.substring(0, split));\n    if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n      try {\n        zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n            zkAcl, fencingNodePath);\n      } catch (KeeperException.NodeExistsException e) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n              \" as it already exists.\");\n        }\n      }\n    }\n    return getNodePath(rootNodePath, nodeName.substring(split));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[appId-String, rootNode-String, appIdNodeSplitIdx-int, createParentIfNotExists-boolean]",
            "newValue": "[nodeName-String, rootNode-String, splitIdx-int, createParentIfNotExists-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
          "commitDate": "26/10/17 5:47 PM",
          "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 17.28,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,21 @@\n-  private String getLeafAppIdNodePath(String appId, String rootNode,\n-      int appIdNodeSplitIdx, boolean createParentIfNotExists) throws Exception {\n-    if (appIdNodeSplitIdx \u003d\u003d 0) {\n-      return getNodePath(rootNode, appId);\n+  private String getLeafZnodePath(String nodeName, String rootNode,\n+      int splitIdx, boolean createParentIfNotExists) throws Exception {\n+    if (splitIdx \u003d\u003d 0) {\n+      return getNodePath(rootNode, nodeName);\n     }\n-    String nodeName \u003d appId;\n-    int splitIdx \u003d nodeName.length() - appIdNodeSplitIdx;\n+    int split \u003d nodeName.length() - splitIdx;\n     String rootNodePath \u003d\n-        getNodePath(rootNode, nodeName.substring(0, splitIdx));\n+        getNodePath(rootNode, nodeName.substring(0, split));\n     if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n       try {\n         zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n             zkAcl, fencingNodePath);\n       } catch (KeeperException.NodeExistsException e) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n               \" as it already exists.\");\n         }\n       }\n     }\n-    return getNodePath(rootNodePath, nodeName.substring(splitIdx));\n+    return getNodePath(rootNodePath, nodeName.substring(split));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String getLeafZnodePath(String nodeName, String rootNode,\n      int splitIdx, boolean createParentIfNotExists) throws Exception {\n    if (splitIdx \u003d\u003d 0) {\n      return getNodePath(rootNode, nodeName);\n    }\n    int split \u003d nodeName.length() - splitIdx;\n    String rootNodePath \u003d\n        getNodePath(rootNode, nodeName.substring(0, split));\n    if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n      try {\n        zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n            zkAcl, fencingNodePath);\n      } catch (KeeperException.NodeExistsException e) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n              \" as it already exists.\");\n        }\n      }\n    }\n    return getNodePath(rootNodePath, nodeName.substring(split));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7053. Move curator transaction support to ZKCuratorManager. (Jonathan Hung via Subru).\n",
      "commitDate": "22/08/17 7:20 PM",
      "commitName": "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "15/08/17 4:53 PM",
      "commitNameOld": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 7.1,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   private String getLeafAppIdNodePath(String appId, String rootNode,\n       int appIdNodeSplitIdx, boolean createParentIfNotExists) throws Exception {\n     if (appIdNodeSplitIdx \u003d\u003d 0) {\n       return getNodePath(rootNode, appId);\n     }\n     String nodeName \u003d appId;\n     int splitIdx \u003d nodeName.length() - appIdNodeSplitIdx;\n     String rootNodePath \u003d\n         getNodePath(rootNode, nodeName.substring(0, splitIdx));\n     if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n       try {\n-        safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT);\n+        zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n+            zkAcl, fencingNodePath);\n       } catch (KeeperException.NodeExistsException e) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n               \" as it already exists.\");\n         }\n       }\n     }\n     return getNodePath(rootNodePath, nodeName.substring(splitIdx));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String getLeafAppIdNodePath(String appId, String rootNode,\n      int appIdNodeSplitIdx, boolean createParentIfNotExists) throws Exception {\n    if (appIdNodeSplitIdx \u003d\u003d 0) {\n      return getNodePath(rootNode, appId);\n    }\n    String nodeName \u003d appId;\n    int splitIdx \u003d nodeName.length() - appIdNodeSplitIdx;\n    String rootNodePath \u003d\n        getNodePath(rootNode, nodeName.substring(0, splitIdx));\n    if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n      try {\n        zkManager.safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT,\n            zkAcl, fencingNodePath);\n      } catch (KeeperException.NodeExistsException e) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n              \" as it already exists.\");\n        }\n      }\n    }\n    return getNodePath(rootNodePath, nodeName.substring(splitIdx));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2962. ZKRMStateStore: Limit the number of znodes under a znode (Contributed by Varun Sexena via Daniel Templeton)\n",
      "commitDate": "28/04/17 1:30 PM",
      "commitName": "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,21 @@\n+  private String getLeafAppIdNodePath(String appId, String rootNode,\n+      int appIdNodeSplitIdx, boolean createParentIfNotExists) throws Exception {\n+    if (appIdNodeSplitIdx \u003d\u003d 0) {\n+      return getNodePath(rootNode, appId);\n+    }\n+    String nodeName \u003d appId;\n+    int splitIdx \u003d nodeName.length() - appIdNodeSplitIdx;\n+    String rootNodePath \u003d\n+        getNodePath(rootNode, nodeName.substring(0, splitIdx));\n+    if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n+      try {\n+        safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT);\n+      } catch (KeeperException.NodeExistsException e) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n+              \" as it already exists.\");\n+        }\n+      }\n+    }\n+    return getNodePath(rootNodePath, nodeName.substring(splitIdx));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getLeafAppIdNodePath(String appId, String rootNode,\n      int appIdNodeSplitIdx, boolean createParentIfNotExists) throws Exception {\n    if (appIdNodeSplitIdx \u003d\u003d 0) {\n      return getNodePath(rootNode, appId);\n    }\n    String nodeName \u003d appId;\n    int splitIdx \u003d nodeName.length() - appIdNodeSplitIdx;\n    String rootNodePath \u003d\n        getNodePath(rootNode, nodeName.substring(0, splitIdx));\n    if (createParentIfNotExists \u0026\u0026 !exists(rootNodePath)) {\n      try {\n        safeCreate(rootNodePath, null, zkAcl, CreateMode.PERSISTENT);\n      } catch (KeeperException.NodeExistsException e) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Unable to create app parent node \" + rootNodePath +\n              \" as it already exists.\");\n        }\n      }\n    }\n    return getNodePath(rootNodePath, nodeName.substring(splitIdx));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}