{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "unsetErasureCodingPolicy",
  "functionId": "unsetErasureCodingPolicy___path-Path(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 3203,
  "functionEndLine": 3226,
  "numCommitsSeen": 96,
  "timeTaken": 3812,
  "changeHistory": [
    "f534736867eed962899615ca1b7eb68bcf591d17",
    "e69231658dc4a79da936e6856017b5c4f6124ecb"
  ],
  "changeHistoryShort": {
    "f534736867eed962899615ca1b7eb68bcf591d17": "Ybodychange",
    "e69231658dc4a79da936e6856017b5c4f6124ecb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f534736867eed962899615ca1b7eb68bcf591d17": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14095. EC: Track Erasure Coding commands in DFS statistics. Contributed by Ayush Saxena.\n",
      "commitDate": "29/11/18 10:48 AM",
      "commitName": "f534736867eed962899615ca1b7eb68bcf591d17",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "15/10/18 10:51 AM",
      "commitNameOld": "b6fc72a0250ac3f2341ebe8a14d19b073e6224c8",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 45.04,
      "commitsBetweenForRepo": 367,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   public void unsetErasureCodingPolicy(final Path path) throws IOException {\n+    statistics.incrementWriteOps(1);\n+    storageStatistics.incrementOpCounter(OpType.UNSET_EC_POLICY);\n     Path absF \u003d fixRelativePart(path);\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void doCall(final Path p) throws IOException {\n         dfs.unsetErasureCodingPolicy(getPathName(p));\n         return null;\n       }\n \n       @Override\n       public Void next(final FileSystem fs, final Path p) throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           myDfs.unsetErasureCodingPolicy(p);\n           return null;\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot unsetErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void unsetErasureCodingPolicy(final Path path) throws IOException {\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.UNSET_EC_POLICY);\n    Path absF \u003d fixRelativePart(path);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.unsetErasureCodingPolicy(getPathName(p));\n        return null;\n      }\n\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          myDfs.unsetErasureCodingPolicy(p);\n          return null;\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot unsetErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "e69231658dc4a79da936e6856017b5c4f6124ecb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11072. Add ability to unset and change directory EC policy. Contributed by Sammi Chen.\n",
      "commitDate": "10/01/17 11:32 AM",
      "commitName": "e69231658dc4a79da936e6856017b5c4f6124ecb",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,22 @@\n+  public void unsetErasureCodingPolicy(final Path path) throws IOException {\n+    Path absF \u003d fixRelativePart(path);\n+    new FileSystemLinkResolver\u003cVoid\u003e() {\n+      @Override\n+      public Void doCall(final Path p) throws IOException {\n+        dfs.unsetErasureCodingPolicy(getPathName(p));\n+        return null;\n+      }\n+\n+      @Override\n+      public Void next(final FileSystem fs, final Path p) throws IOException {\n+        if (fs instanceof DistributedFileSystem) {\n+          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n+          myDfs.unsetErasureCodingPolicy(p);\n+          return null;\n+        }\n+        throw new UnsupportedOperationException(\n+            \"Cannot unsetErasureCodingPolicy through a symlink to a \"\n+                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n+      }\n+    }.resolve(this, absF);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void unsetErasureCodingPolicy(final Path path) throws IOException {\n    Path absF \u003d fixRelativePart(path);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.unsetErasureCodingPolicy(getPathName(p));\n        return null;\n      }\n\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          myDfs.unsetErasureCodingPolicy(p);\n          return null;\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot unsetErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}