{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "addStoredBlockImmediate",
  "functionId": "addStoredBlockImmediate___storedBlock-BlockInfo__reported-Block__storageInfo-DatanodeStorageInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 3408,
  "functionEndLine": 3433,
  "numCommitsSeen": 477,
  "timeTaken": 9192,
  "changeHistory": [
    "a5bb88c8e0fd4bd19b6d377fecbe1d2d441514f6",
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553"
  ],
  "changeHistoryShort": {
    "a5bb88c8e0fd4bd19b6d377fecbe1d2d441514f6": "Ybodychange",
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": "Ybodychange",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": "Ybodychange"
  },
  "changeHistoryDetails": {
    "a5bb88c8e0fd4bd19b6d377fecbe1d2d441514f6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10843. Update space quota when a UC block is completed rather than committed. Contributed by Erik Krogen.",
      "commitDate": "23/09/16 10:37 AM",
      "commitName": "a5bb88c8e0fd4bd19b6d377fecbe1d2d441514f6",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "12/09/16 4:40 PM",
      "commitNameOld": "72dfb048a9a7be64b371b74478b90150bf300d35",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 10.75,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private void addStoredBlockImmediate(BlockInfo storedBlock, Block reported,\n       DatanodeStorageInfo storageInfo)\n   throws IOException {\n     assert (storedBlock !\u003d null \u0026\u0026 namesystem.hasWriteLock());\n     if (!namesystem.isInStartupSafeMode()\n         || isPopulatingReplQueues()) {\n       addStoredBlock(storedBlock, reported, storageInfo, null, false);\n       return;\n     }\n \n     // just add it\n     AddBlockResult result \u003d storageInfo.addBlockInitial(storedBlock, reported);\n \n     // Now check for completion of blocks and safe block count\n     int numCurrentReplica \u003d countLiveNodes(storedBlock);\n     if (storedBlock.getBlockUCState() \u003d\u003d BlockUCState.COMMITTED\n         \u0026\u0026 hasMinStorage(storedBlock, numCurrentReplica)) {\n-      completeBlock(storedBlock, false);\n+      completeBlock(storedBlock, null, false);\n     } else if (storedBlock.isComplete() \u0026\u0026 result \u003d\u003d AddBlockResult.ADDED) {\n       // check whether safe replication is reached for the block\n       // only complete blocks are counted towards that.\n       // In the case that the block just became complete above, completeBlock()\n       // handles the safe block count maintenance.\n       bmSafeMode.incrementSafeBlockCount(numCurrentReplica, storedBlock);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addStoredBlockImmediate(BlockInfo storedBlock, Block reported,\n      DatanodeStorageInfo storageInfo)\n  throws IOException {\n    assert (storedBlock !\u003d null \u0026\u0026 namesystem.hasWriteLock());\n    if (!namesystem.isInStartupSafeMode()\n        || isPopulatingReplQueues()) {\n      addStoredBlock(storedBlock, reported, storageInfo, null, false);\n      return;\n    }\n\n    // just add it\n    AddBlockResult result \u003d storageInfo.addBlockInitial(storedBlock, reported);\n\n    // Now check for completion of blocks and safe block count\n    int numCurrentReplica \u003d countLiveNodes(storedBlock);\n    if (storedBlock.getBlockUCState() \u003d\u003d BlockUCState.COMMITTED\n        \u0026\u0026 hasMinStorage(storedBlock, numCurrentReplica)) {\n      completeBlock(storedBlock, null, false);\n    } else if (storedBlock.isComplete() \u0026\u0026 result \u003d\u003d AddBlockResult.ADDED) {\n      // check whether safe replication is reached for the block\n      // only complete blocks are counted towards that.\n      // In the case that the block just became complete above, completeBlock()\n      // handles the safe block count maintenance.\n      bmSafeMode.incrementSafeBlockCount(numCurrentReplica, storedBlock);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9260. Improve the performance and GC friendliness of NameNode startup and full block reports (Staffan Friberg via cmccabe)\n",
      "commitDate": "02/02/16 11:23 AM",
      "commitName": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "31/01/16 11:54 PM",
      "commitNameOld": "e418bd1fb0568ce7ae22f588fea2dd9c95567383",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 1.48,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private void addStoredBlockImmediate(BlockInfo storedBlock, Block reported,\n       DatanodeStorageInfo storageInfo)\n   throws IOException {\n     assert (storedBlock !\u003d null \u0026\u0026 namesystem.hasWriteLock());\n     if (!namesystem.isInStartupSafeMode()\n         || isPopulatingReplQueues()) {\n       addStoredBlock(storedBlock, reported, storageInfo, null, false);\n       return;\n     }\n \n     // just add it\n-    AddBlockResult result \u003d storageInfo.addBlock(storedBlock, reported);\n+    AddBlockResult result \u003d storageInfo.addBlockInitial(storedBlock, reported);\n \n     // Now check for completion of blocks and safe block count\n     int numCurrentReplica \u003d countLiveNodes(storedBlock);\n     if (storedBlock.getBlockUCState() \u003d\u003d BlockUCState.COMMITTED\n         \u0026\u0026 hasMinStorage(storedBlock, numCurrentReplica)) {\n       completeBlock(storedBlock, false);\n     } else if (storedBlock.isComplete() \u0026\u0026 result \u003d\u003d AddBlockResult.ADDED) {\n       // check whether safe replication is reached for the block\n       // only complete blocks are counted towards that.\n       // In the case that the block just became complete above, completeBlock()\n       // handles the safe block count maintenance.\n       bmSafeMode.incrementSafeBlockCount(numCurrentReplica, storedBlock);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addStoredBlockImmediate(BlockInfo storedBlock, Block reported,\n      DatanodeStorageInfo storageInfo)\n  throws IOException {\n    assert (storedBlock !\u003d null \u0026\u0026 namesystem.hasWriteLock());\n    if (!namesystem.isInStartupSafeMode()\n        || isPopulatingReplQueues()) {\n      addStoredBlock(storedBlock, reported, storageInfo, null, false);\n      return;\n    }\n\n    // just add it\n    AddBlockResult result \u003d storageInfo.addBlockInitial(storedBlock, reported);\n\n    // Now check for completion of blocks and safe block count\n    int numCurrentReplica \u003d countLiveNodes(storedBlock);\n    if (storedBlock.getBlockUCState() \u003d\u003d BlockUCState.COMMITTED\n        \u0026\u0026 hasMinStorage(storedBlock, numCurrentReplica)) {\n      completeBlock(storedBlock, false);\n    } else if (storedBlock.isComplete() \u0026\u0026 result \u003d\u003d AddBlockResult.ADDED) {\n      // check whether safe replication is reached for the block\n      // only complete blocks are counted towards that.\n      // In the case that the block just became complete above, completeBlock()\n      // handles the safe block count maintenance.\n      bmSafeMode.incrementSafeBlockCount(numCurrentReplica, storedBlock);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
      "commitDate": "01/12/15 4:09 PM",
      "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "01/12/15 1:05 PM",
      "commitNameOld": "830eb252aaa4fec7ef2ec38cb66f669e8e1ecaa5",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private void addStoredBlockImmediate(BlockInfo storedBlock, Block reported,\n       DatanodeStorageInfo storageInfo)\n   throws IOException {\n     assert (storedBlock !\u003d null \u0026\u0026 namesystem.hasWriteLock());\n     if (!namesystem.isInStartupSafeMode()\n         || isPopulatingReplQueues()) {\n       addStoredBlock(storedBlock, reported, storageInfo, null, false);\n       return;\n     }\n \n     // just add it\n     AddBlockResult result \u003d storageInfo.addBlock(storedBlock, reported);\n \n     // Now check for completion of blocks and safe block count\n     int numCurrentReplica \u003d countLiveNodes(storedBlock);\n     if (storedBlock.getBlockUCState() \u003d\u003d BlockUCState.COMMITTED\n         \u0026\u0026 hasMinStorage(storedBlock, numCurrentReplica)) {\n       completeBlock(storedBlock, false);\n     } else if (storedBlock.isComplete() \u0026\u0026 result \u003d\u003d AddBlockResult.ADDED) {\n       // check whether safe replication is reached for the block\n       // only complete blocks are counted towards that.\n       // In the case that the block just became complete above, completeBlock()\n       // handles the safe block count maintenance.\n-      namesystem.incrementSafeBlockCount(numCurrentReplica, storedBlock);\n+      bmSafeMode.incrementSafeBlockCount(numCurrentReplica, storedBlock);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addStoredBlockImmediate(BlockInfo storedBlock, Block reported,\n      DatanodeStorageInfo storageInfo)\n  throws IOException {\n    assert (storedBlock !\u003d null \u0026\u0026 namesystem.hasWriteLock());\n    if (!namesystem.isInStartupSafeMode()\n        || isPopulatingReplQueues()) {\n      addStoredBlock(storedBlock, reported, storageInfo, null, false);\n      return;\n    }\n\n    // just add it\n    AddBlockResult result \u003d storageInfo.addBlock(storedBlock, reported);\n\n    // Now check for completion of blocks and safe block count\n    int numCurrentReplica \u003d countLiveNodes(storedBlock);\n    if (storedBlock.getBlockUCState() \u003d\u003d BlockUCState.COMMITTED\n        \u0026\u0026 hasMinStorage(storedBlock, numCurrentReplica)) {\n      completeBlock(storedBlock, false);\n    } else if (storedBlock.isComplete() \u0026\u0026 result \u003d\u003d AddBlockResult.ADDED) {\n      // check whether safe replication is reached for the block\n      // only complete blocks are counted towards that.\n      // In the case that the block just became complete above, completeBlock()\n      // handles the safe block count maintenance.\n      bmSafeMode.incrementSafeBlockCount(numCurrentReplica, storedBlock);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    }
  }
}