{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleHandler.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
  "functionStartLine": 497,
  "functionEndLine": 534,
  "numCommitsSeen": 78,
  "timeTaken": 9010,
  "changeHistory": [
    "2440671a117f165dcda5056404bc898df3c50803",
    "8e615588d5216394d0251a9c97bd706537856c6d",
    "a90a5c24525bf6b92c49f7476b6de286338018c0",
    "e0c99b80d47aaf65ee51c601cb8124ce5df79b2f",
    "0928502029ef141759008997335ea2cd836a7154",
    "e1062b8b787b871e6f01546de9f2e4a4c05039b0",
    "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38",
    "68328ae92632afc9cdd6e75b7a8d832723ddbe3b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "2440671a117f165dcda5056404bc898df3c50803": "Ybodychange",
    "8e615588d5216394d0251a9c97bd706537856c6d": "Ybodychange",
    "a90a5c24525bf6b92c49f7476b6de286338018c0": "Ybodychange",
    "e0c99b80d47aaf65ee51c601cb8124ce5df79b2f": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "e1062b8b787b871e6f01546de9f2e4a4c05039b0": "Ybodychange",
    "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38": "Ybodychange",
    "68328ae92632afc9cdd6e75b7a8d832723ddbe3b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2440671a117f165dcda5056404bc898df3c50803": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6634. Log uncaught exceptions/errors in various thread pools in mapreduce. Contributed by Sidharta Seethana.\n",
      "commitDate": "18/02/16 12:48 AM",
      "commitName": "2440671a117f165dcda5056404bc898df3c50803",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "08/11/15 10:25 PM",
      "commitNameOld": "668e897538e317d96784f75b4e1f979c72225db7",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 101.1,
      "commitsBetweenForRepo": 636,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n     int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n                                         DEFAULT_MAX_SHUFFLE_THREADS);\n     if (maxShuffleThreads \u003d\u003d 0) {\n       maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n     }\n     \n     shuffleBufferSize \u003d conf.getInt(SHUFFLE_BUFFER_SIZE, \n                                     DEFAULT_SHUFFLE_BUFFER_SIZE);\n         \n     shuffleTransferToAllowed \u003d conf.getBoolean(SHUFFLE_TRANSFERTO_ALLOWED,\n          (Shell.WINDOWS)?WINDOWS_DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED:\n                          DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED);\n \n     maxSessionOpenFiles \u003d conf.getInt(SHUFFLE_MAX_SESSION_OPEN_FILES,\n         DEFAULT_SHUFFLE_MAX_SESSION_OPEN_FILES);\n \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n-        Executors.newCachedThreadPool(bossFactory),\n-        Executors.newCachedThreadPool(workerFactory),\n+        HadoopExecutors.newCachedThreadPool(bossFactory),\n+        HadoopExecutors.newCachedThreadPool(workerFactory),\n         maxShuffleThreads);\n     super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n    int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n                                        DEFAULT_MAX_SHUFFLE_THREADS);\n    if (maxShuffleThreads \u003d\u003d 0) {\n      maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n    }\n    \n    shuffleBufferSize \u003d conf.getInt(SHUFFLE_BUFFER_SIZE, \n                                    DEFAULT_SHUFFLE_BUFFER_SIZE);\n        \n    shuffleTransferToAllowed \u003d conf.getBoolean(SHUFFLE_TRANSFERTO_ALLOWED,\n         (Shell.WINDOWS)?WINDOWS_DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED:\n                         DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED);\n\n    maxSessionOpenFiles \u003d conf.getInt(SHUFFLE_MAX_SESSION_OPEN_FILES,\n        DEFAULT_SHUFFLE_MAX_SESSION_OPEN_FILES);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        HadoopExecutors.newCachedThreadPool(bossFactory),\n        HadoopExecutors.newCachedThreadPool(workerFactory),\n        maxShuffleThreads);\n    super.serviceInit(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "8e615588d5216394d0251a9c97bd706537856c6d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6474. ShuffleHandler can possibly exhaust nodemanager file descriptors. Contributed by Kuhu Shukla\n",
      "commitDate": "10/09/15 9:00 AM",
      "commitName": "8e615588d5216394d0251a9c97bd706537856c6d",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "06/07/15 1:16 AM",
      "commitNameOld": "bff67dfe2f811654ffb1bbcbd87509c185f452b6",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 66.32,
      "commitsBetweenForRepo": 376,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,38 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n     int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n                                         DEFAULT_MAX_SHUFFLE_THREADS);\n     if (maxShuffleThreads \u003d\u003d 0) {\n       maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n     }\n     \n     shuffleBufferSize \u003d conf.getInt(SHUFFLE_BUFFER_SIZE, \n                                     DEFAULT_SHUFFLE_BUFFER_SIZE);\n         \n     shuffleTransferToAllowed \u003d conf.getBoolean(SHUFFLE_TRANSFERTO_ALLOWED,\n          (Shell.WINDOWS)?WINDOWS_DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED:\n                          DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED);\n \n+    maxSessionOpenFiles \u003d conf.getInt(SHUFFLE_MAX_SESSION_OPEN_FILES,\n+        DEFAULT_SHUFFLE_MAX_SESSION_OPEN_FILES);\n+\n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory),\n         maxShuffleThreads);\n     super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n    int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n                                        DEFAULT_MAX_SHUFFLE_THREADS);\n    if (maxShuffleThreads \u003d\u003d 0) {\n      maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n    }\n    \n    shuffleBufferSize \u003d conf.getInt(SHUFFLE_BUFFER_SIZE, \n                                    DEFAULT_SHUFFLE_BUFFER_SIZE);\n        \n    shuffleTransferToAllowed \u003d conf.getBoolean(SHUFFLE_TRANSFERTO_ALLOWED,\n         (Shell.WINDOWS)?WINDOWS_DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED:\n                         DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED);\n\n    maxSessionOpenFiles \u003d conf.getInt(SHUFFLE_MAX_SESSION_OPEN_FILES,\n        DEFAULT_SHUFFLE_MAX_SESSION_OPEN_FILES);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory),\n        maxShuffleThreads);\n    super.serviceInit(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "a90a5c24525bf6b92c49f7476b6de286338018c0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5791. Shuffle phase is slow in Windows - FadviseFileRegion::transferTo does not read disks efficiently. Contributed by Nikola Vujic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 11:57 AM",
      "commitName": "a90a5c24525bf6b92c49f7476b6de286338018c0",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "21/03/14 2:43 PM",
      "commitNameOld": "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.88,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,35 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n     int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n                                         DEFAULT_MAX_SHUFFLE_THREADS);\n     if (maxShuffleThreads \u003d\u003d 0) {\n       maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n     }\n+    \n+    shuffleBufferSize \u003d conf.getInt(SHUFFLE_BUFFER_SIZE, \n+                                    DEFAULT_SHUFFLE_BUFFER_SIZE);\n+        \n+    shuffleTransferToAllowed \u003d conf.getBoolean(SHUFFLE_TRANSFERTO_ALLOWED,\n+         (Shell.WINDOWS)?WINDOWS_DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED:\n+                         DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED);\n \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory),\n         maxShuffleThreads);\n     super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n    int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n                                        DEFAULT_MAX_SHUFFLE_THREADS);\n    if (maxShuffleThreads \u003d\u003d 0) {\n      maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n    }\n    \n    shuffleBufferSize \u003d conf.getInt(SHUFFLE_BUFFER_SIZE, \n                                    DEFAULT_SHUFFLE_BUFFER_SIZE);\n        \n    shuffleTransferToAllowed \u003d conf.getBoolean(SHUFFLE_TRANSFERTO_ALLOWED,\n         (Shell.WINDOWS)?WINDOWS_DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED:\n                         DEFAULT_SHUFFLE_TRANSFERTO_ALLOWED);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory),\n        maxShuffleThreads);\n    super.serviceInit(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "e0c99b80d47aaf65ee51c601cb8124ce5df79b2f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5596. Allow configuring the number of threads used to serve shuffle connections. Contributed by Sandy Ryza\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536711 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/10/13 6:41 AM",
      "commitName": "e0c99b80d47aaf65ee51c601cb8124ce5df79b2f",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "24/09/13 5:35 PM",
      "commitNameOld": "10a4289ebfe8a079562f2006a0e28acdbd8aa0c5",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 34.55,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,28 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n+    int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n+                                        DEFAULT_MAX_SHUFFLE_THREADS);\n+    if (maxShuffleThreads \u003d\u003d 0) {\n+      maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n+    }\n \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n-        Executors.newCachedThreadPool(workerFactory));\n+        Executors.newCachedThreadPool(workerFactory),\n+        maxShuffleThreads);\n     super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n    int maxShuffleThreads \u003d conf.getInt(MAX_SHUFFLE_THREADS,\n                                        DEFAULT_MAX_SHUFFLE_THREADS);\n    if (maxShuffleThreads \u003d\u003d 0) {\n      maxShuffleThreads \u003d 2 * Runtime.getRuntime().availableProcessors();\n    }\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory),\n        maxShuffleThreads);\n    super.serviceInit(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory));\n-    super.init(new Configuration(conf));\n+    super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory));\n    super.serviceInit(new Configuration(conf));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {
            "oldValue": "init",
            "newValue": "serviceInit"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory));\n-    super.init(new Configuration(conf));\n+    super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory));\n    super.serviceInit(new Configuration(conf));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory));\n-    super.init(new Configuration(conf));\n+    super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory));\n    super.serviceInit(new Configuration(conf));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:53 AM",
          "commitNameOld": "9a3379f6b1bf366236e6a064b7aeb589fda01143",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 9.96,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n     maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                         DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory));\n-    super.init(new Configuration(conf));\n+    super.serviceInit(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory));\n    super.serviceInit(new Configuration(conf));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1062b8b787b871e6f01546de9f2e4a4c05039b0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5027. Shuffle does not limit number of outstanding connections (Robert Parker via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453098 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/03/13 4:03 PM",
      "commitName": "e1062b8b787b871e6f01546de9f2e4a4c05039b0",
      "commitAuthor": "Jonathan Turner Eagles",
      "commitDateOld": "15/11/12 4:52 PM",
      "commitNameOld": "f13da263bf02e491ef5477d7d393a2659278694a",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 109.97,
      "commitsBetweenForRepo": 440,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public synchronized void init(Configuration conf) {\n     manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n         DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n \n     readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n         DEFAULT_SHUFFLE_READAHEAD_BYTES);\n     \n+    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n+                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n+\n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory));\n     super.init(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    maxShuffleConnections \u003d conf.getInt(MAX_SHUFFLE_CONNECTIONS, \n                                        DEFAULT_MAX_SHUFFLE_CONNECTIONS);\n\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory));\n    super.init(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3289. Make use of fadvise in the NM\u0027s shuffle handler. (Contributed by Todd Lipcon and Siddharth Seth)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1368718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/12 2:55 PM",
      "commitName": "3eb0cb27e8c037e6b29ac57ad72b5bffa362da38",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "26/07/12 6:23 AM",
      "commitNameOld": "9d16c9354b0c05edb30d23003dcdec4cc44ed925",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 7.36,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,19 @@\n   public synchronized void init(Configuration conf) {\n+    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n+        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n+\n+    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n+        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n+    \n     ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n       .build();\n     ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n       .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n       .build();\n     \n     selector \u003d new NioServerSocketChannelFactory(\n         Executors.newCachedThreadPool(bossFactory),\n         Executors.newCachedThreadPool(workerFactory));\n     super.init(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    manageOsCache \u003d conf.getBoolean(SHUFFLE_MANAGE_OS_CACHE,\n        DEFAULT_SHUFFLE_MANAGE_OS_CACHE);\n\n    readaheadLength \u003d conf.getInt(SHUFFLE_READAHEAD_BYTES,\n        DEFAULT_SHUFFLE_READAHEAD_BYTES);\n    \n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory));\n    super.init(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "68328ae92632afc9cdd6e75b7a8d832723ddbe3b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3187. Add names for various unnamed threads in MR2. (Todd Lipcon and Siddharth Seth via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1184904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/11 12:27 PM",
      "commitName": "68328ae92632afc9cdd6e75b7a8d832723ddbe3b",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "11/10/11 7:26 AM",
      "commitNameOld": "1c358b07969ecc93473ca9aea27be65e488ef602",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.21,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,13 @@\n   public synchronized void init(Configuration conf) {\n+    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n+      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n+      .build();\n+    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n+      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n+      .build();\n+    \n     selector \u003d new NioServerSocketChannelFactory(\n-        Executors.newCachedThreadPool(), Executors.newCachedThreadPool());\n+        Executors.newCachedThreadPool(bossFactory),\n+        Executors.newCachedThreadPool(workerFactory));\n     super.init(new Configuration(conf));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    ThreadFactory bossFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Boss #%d\")\n      .build();\n    ThreadFactory workerFactory \u003d new ThreadFactoryBuilder()\n      .setNameFormat(\"ShuffleHandler Netty Worker #%d\")\n      .build();\n    \n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(bossFactory),\n        Executors.newCachedThreadPool(workerFactory));\n    super.init(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(), Executors.newCachedThreadPool());\n    super.init(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,5 @@\n+  public synchronized void init(Configuration conf) {\n+    selector \u003d new NioServerSocketChannelFactory(\n+        Executors.newCachedThreadPool(), Executors.newCachedThreadPool());\n+    super.init(new Configuration(conf));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    selector \u003d new NioServerSocketChannelFactory(\n        Executors.newCachedThreadPool(), Executors.newCachedThreadPool());\n    super.init(new Configuration(conf));\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java"
    }
  }
}