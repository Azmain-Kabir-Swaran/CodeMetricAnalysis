{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StoragePolicySatisfyManager.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfyManager.java",
  "functionStartLine": 99,
  "functionEndLine": 118,
  "numCommitsSeen": 5,
  "timeTaken": 3117,
  "changeHistory": [
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
    "66e8f9b31529226309c924226a53dead3e6fcf11",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52"
  ],
  "changeHistoryShort": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": "Ybodychange",
    "66e8f9b31529226309c924226a53dead3e6fcf11": "Ybodychange",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13076: [SPS]: Cleanup work for HDFS-10285 merge. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "66e8f9b31529226309c924226a53dead3e6fcf11",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,20 @@\n   public void start() {\n     if (!storagePolicyEnabled) {\n       LOG.info(\"Disabling StoragePolicySatisfier service as {} set to {}.\",\n           DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY, storagePolicyEnabled);\n       return;\n     }\n \n     switch (mode) {\n-    case INTERNAL:\n-      if (spsService.isRunning()) {\n-        LOG.info(\"Storage policy satisfier is already running\"\n-            + \" as internal daemon service inside namenode.\");\n-        return;\n-      }\n-      // starts internal daemon service inside namenode\n-      spsService.init(\n-          new IntraSPSNameNodeContext(namesystem, blkMgr, spsService));\n-      spsService.start(false, mode);\n-      break;\n     case EXTERNAL:\n       LOG.info(\"Storage policy satisfier is configured as external, \"\n           + \"please start external sps service explicitly to satisfy policy\");\n       break;\n     case NONE:\n       LOG.info(\"Storage policy satisfier is disabled\");\n       break;\n     default:\n       LOG.info(\"Given mode: {} is invalid\", mode);\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (!storagePolicyEnabled) {\n      LOG.info(\"Disabling StoragePolicySatisfier service as {} set to {}.\",\n          DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY, storagePolicyEnabled);\n      return;\n    }\n\n    switch (mode) {\n    case EXTERNAL:\n      LOG.info(\"Storage policy satisfier is configured as external, \"\n          + \"please start external sps service explicitly to satisfy policy\");\n      break;\n    case NONE:\n      LOG.info(\"Storage policy satisfier is disabled\");\n      break;\n    default:\n      LOG.info(\"Given mode: {} is invalid\", mode);\n      break;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfyManager.java",
      "extendedDetails": {}
    },
    "66e8f9b31529226309c924226a53dead3e6fcf11": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13381 : [SPS]: Use DFSUtilClient#makePathFromFileId() to prepare satisfier file path. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "66e8f9b31529226309c924226a53dead3e6fcf11",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "8467ec24fb74f30371d5a13e893fc56309ee9372",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,31 @@\n   public void start() {\n     if (!storagePolicyEnabled) {\n       LOG.info(\"Disabling StoragePolicySatisfier service as {} set to {}.\",\n           DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY, storagePolicyEnabled);\n       return;\n     }\n \n     switch (mode) {\n     case INTERNAL:\n       if (spsService.isRunning()) {\n         LOG.info(\"Storage policy satisfier is already running\"\n             + \" as internal daemon service inside namenode.\");\n         return;\n       }\n       // starts internal daemon service inside namenode\n       spsService.init(\n-          new IntraSPSNameNodeContext(namesystem, blkMgr, spsService),\n-          new IntraSPSNameNodeFileIdCollector(namesystem.getFSDirectory(),\n-              spsService),\n-          new IntraSPSNameNodeBlockMoveTaskHandler(blkMgr, namesystem), null);\n+          new IntraSPSNameNodeContext(namesystem, blkMgr, spsService));\n       spsService.start(false, mode);\n       break;\n     case EXTERNAL:\n       LOG.info(\"Storage policy satisfier is configured as external, \"\n           + \"please start external sps service explicitly to satisfy policy\");\n       break;\n     case NONE:\n       LOG.info(\"Storage policy satisfier is disabled\");\n       break;\n     default:\n       LOG.info(\"Given mode: {} is invalid\", mode);\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (!storagePolicyEnabled) {\n      LOG.info(\"Disabling StoragePolicySatisfier service as {} set to {}.\",\n          DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY, storagePolicyEnabled);\n      return;\n    }\n\n    switch (mode) {\n    case INTERNAL:\n      if (spsService.isRunning()) {\n        LOG.info(\"Storage policy satisfier is already running\"\n            + \" as internal daemon service inside namenode.\");\n        return;\n      }\n      // starts internal daemon service inside namenode\n      spsService.init(\n          new IntraSPSNameNodeContext(namesystem, blkMgr, spsService));\n      spsService.start(false, mode);\n      break;\n    case EXTERNAL:\n      LOG.info(\"Storage policy satisfier is configured as external, \"\n          + \"please start external sps service explicitly to satisfy policy\");\n      break;\n    case NONE:\n      LOG.info(\"Storage policy satisfier is disabled\");\n      break;\n    default:\n      LOG.info(\"Given mode: {} is invalid\", mode);\n      break;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfyManager.java",
      "extendedDetails": {}
    },
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13097: [SPS]: Fix the branch review comments(Part1). Contributed by Surendra Singh.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,34 @@\n+  public void start() {\n+    if (!storagePolicyEnabled) {\n+      LOG.info(\"Disabling StoragePolicySatisfier service as {} set to {}.\",\n+          DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY, storagePolicyEnabled);\n+      return;\n+    }\n+\n+    switch (mode) {\n+    case INTERNAL:\n+      if (spsService.isRunning()) {\n+        LOG.info(\"Storage policy satisfier is already running\"\n+            + \" as internal daemon service inside namenode.\");\n+        return;\n+      }\n+      // starts internal daemon service inside namenode\n+      spsService.init(\n+          new IntraSPSNameNodeContext(namesystem, blkMgr, spsService),\n+          new IntraSPSNameNodeFileIdCollector(namesystem.getFSDirectory(),\n+              spsService),\n+          new IntraSPSNameNodeBlockMoveTaskHandler(blkMgr, namesystem), null);\n+      spsService.start(false, mode);\n+      break;\n+    case EXTERNAL:\n+      LOG.info(\"Storage policy satisfier is configured as external, \"\n+          + \"please start external sps service explicitly to satisfy policy\");\n+      break;\n+    case NONE:\n+      LOG.info(\"Storage policy satisfier is disabled\");\n+      break;\n+    default:\n+      LOG.info(\"Given mode: {} is invalid\", mode);\n+      break;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (!storagePolicyEnabled) {\n      LOG.info(\"Disabling StoragePolicySatisfier service as {} set to {}.\",\n          DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY, storagePolicyEnabled);\n      return;\n    }\n\n    switch (mode) {\n    case INTERNAL:\n      if (spsService.isRunning()) {\n        LOG.info(\"Storage policy satisfier is already running\"\n            + \" as internal daemon service inside namenode.\");\n        return;\n      }\n      // starts internal daemon service inside namenode\n      spsService.init(\n          new IntraSPSNameNodeContext(namesystem, blkMgr, spsService),\n          new IntraSPSNameNodeFileIdCollector(namesystem.getFSDirectory(),\n              spsService),\n          new IntraSPSNameNodeBlockMoveTaskHandler(blkMgr, namesystem), null);\n      spsService.start(false, mode);\n      break;\n    case EXTERNAL:\n      LOG.info(\"Storage policy satisfier is configured as external, \"\n          + \"please start external sps service explicitly to satisfy policy\");\n      break;\n    case NONE:\n      LOG.info(\"Storage policy satisfier is disabled\");\n      break;\n    default:\n      LOG.info(\"Given mode: {} is invalid\", mode);\n      break;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/sps/StoragePolicySatisfyManager.java"
    }
  }
}