{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "refreshNodes",
  "functionId": "refreshNodes___request-RefreshNodesRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 454,
  "functionEndLine": 484,
  "numCommitsSeen": 90,
  "timeTaken": 10530,
  "changeHistory": [
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
    "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "39f15579b83eae9a1384dc077491f3b9326ca99a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cdfabf5ae289836968b3d296668593b9500b6f26",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": "Ybodychange",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": "Ybodychange",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": "Ybodychange",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": "Ybodychange",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": "Ybodychange",
    "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac": "Ymultichange(Yexceptionschange,Ybodychange)",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "39f15579b83eae9a1384dc077491f3b9326ca99a": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cdfabf5ae289836968b3d296668593b9500b6f26": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/05/17 2:44 PM",
      "commitNameOld": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 75.35,
      "commitsBetweenForRepo": 358,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnException, StandbyException {\n     final String operation \u003d \"refreshNodes\";\n     final String msg \u003d \"refresh nodes.\";\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n     try {\n       Configuration conf \u003d\n           getConfiguration(new Configuration(false),\n               YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n       switch (request.getDecommissionType()) {\n       case NORMAL:\n-        rmContext.getNodesListManager().refreshNodes(conf);\n+        rm.getRMContext().getNodesListManager().refreshNodes(conf);\n         break;\n       case GRACEFUL:\n-        rmContext.getNodesListManager().refreshNodesGracefully(\n+        rm.getRMContext().getNodesListManager().refreshNodesGracefully(\n             conf, request.getDecommissionTimeout());\n         break;\n       case FORCEFUL:\n-        rmContext.getNodesListManager().refreshNodesForcefully();\n+        rm.getRMContext().getNodesListManager().refreshNodesForcefully();\n         break;\n       }\n       RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    final String operation \u003d \"refreshNodes\";\n    final String msg \u003d \"refresh nodes.\";\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    try {\n      Configuration conf \u003d\n          getConfiguration(new Configuration(false),\n              YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n      switch (request.getDecommissionType()) {\n      case NORMAL:\n        rm.getRMContext().getNodesListManager().refreshNodes(conf);\n        break;\n      case GRACEFUL:\n        rm.getRMContext().getNodesListManager().refreshNodesGracefully(\n            conf, request.getDecommissionTimeout());\n        break;\n      case FORCEFUL:\n        rm.getRMContext().getNodesListManager().refreshNodesForcefully();\n        break;\n      }\n      RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
      "commitDate": "18/08/16 7:27 AM",
      "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthor": "Junping Du",
      "commitDateOld": "05/08/16 9:05 AM",
      "commitNameOld": "d9a354c2f39274b2810144d1ae133201e44e3bfc",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 12.93,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnException, StandbyException {\n     final String operation \u003d \"refreshNodes\";\n     final String msg \u003d \"refresh nodes.\";\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n     checkRMStatus(user.getShortUserName(), operation, msg);\n \n     try {\n       Configuration conf \u003d\n           getConfiguration(new Configuration(false),\n               YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n       switch (request.getDecommissionType()) {\n       case NORMAL:\n         rmContext.getNodesListManager().refreshNodes(conf);\n         break;\n       case GRACEFUL:\n-        rmContext.getNodesListManager().refreshNodesGracefully(conf);\n+        rmContext.getNodesListManager().refreshNodesGracefully(\n+            conf, request.getDecommissionTimeout());\n         break;\n       case FORCEFUL:\n         rmContext.getNodesListManager().refreshNodesForcefully();\n         break;\n       }\n       RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    final String operation \u003d \"refreshNodes\";\n    final String msg \u003d \"refresh nodes.\";\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    try {\n      Configuration conf \u003d\n          getConfiguration(new Configuration(false),\n              YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n      switch (request.getDecommissionType()) {\n      case NORMAL:\n        rmContext.getNodesListManager().refreshNodes(conf);\n        break;\n      case GRACEFUL:\n        rmContext.getNodesListManager().refreshNodesGracefully(\n            conf, request.getDecommissionTimeout());\n        break;\n      case FORCEFUL:\n        rmContext.getNodesListManager().refreshNodesForcefully();\n        break;\n      }\n      RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4883. Make consistent operation name in AdminService. Contributed by Kai Sasaki.\n",
      "commitDate": "20/07/16 4:51 PM",
      "commitName": "c63afdbe14df7359841aa4b213252a8a275e8c4b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "09/04/16 10:31 AM",
      "commitNameOld": "ff95fd547b3030529983fa4e701ac728c54ab63a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 102.26,
      "commitsBetweenForRepo": 794,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnException, StandbyException {\n-    String argName \u003d \"refreshNodes\";\n+    final String operation \u003d \"refreshNodes\";\n     final String msg \u003d \"refresh nodes.\";\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n-    checkRMStatus(user.getShortUserName(), argName, msg);\n+    checkRMStatus(user.getShortUserName(), operation, msg);\n \n     try {\n       Configuration conf \u003d\n           getConfiguration(new Configuration(false),\n               YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n       switch (request.getDecommissionType()) {\n       case NORMAL:\n         rmContext.getNodesListManager().refreshNodes(conf);\n         break;\n       case GRACEFUL:\n         rmContext.getNodesListManager().refreshNodesGracefully(conf);\n         break;\n       case FORCEFUL:\n         rmContext.getNodesListManager().refreshNodesForcefully();\n         break;\n       }\n-      RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n+      RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n-      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n+      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    final String operation \u003d \"refreshNodes\";\n    final String msg \u003d \"refresh nodes.\";\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    checkRMStatus(user.getShortUserName(), operation, msg);\n\n    try {\n      Configuration conf \u003d\n          getConfiguration(new Configuration(false),\n              YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n      switch (request.getDecommissionType()) {\n      case NORMAL:\n        rmContext.getNodesListManager().refreshNodes(conf);\n        break;\n      case GRACEFUL:\n        rmContext.getNodesListManager().refreshNodesGracefully(conf);\n        break;\n      case FORCEFUL:\n        rmContext.getNodesListManager().refreshNodesForcefully();\n        break;\n      }\n      RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), operation, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": {
      "type": "Ybodychange",
      "commitMessage": "New parameter of CLI for decommissioning node gracefully in RMAdmin CLI. Contributed by Devaraj K\n",
      "commitDate": "22/04/15 10:07 AM",
      "commitName": "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
      "commitAuthor": "Junping Du",
      "commitDateOld": "24/03/15 10:38 AM",
      "commitNameOld": "97a7277a2d696474b5c8e2d814c8291d4bde246e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 28.98,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,30 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnException, StandbyException {\n     String argName \u003d \"refreshNodes\";\n     final String msg \u003d \"refresh nodes.\";\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n     checkRMStatus(user.getShortUserName(), argName, msg);\n \n     try {\n       Configuration conf \u003d\n           getConfiguration(new Configuration(false),\n               YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n-      rmContext.getNodesListManager().refreshNodes(conf);\n+      switch (request.getDecommissionType()) {\n+      case NORMAL:\n+        rmContext.getNodesListManager().refreshNodes(conf);\n+        break;\n+      case GRACEFUL:\n+        rmContext.getNodesListManager().refreshNodesGracefully(conf);\n+        break;\n+      case FORCEFUL:\n+        rmContext.getNodesListManager().refreshNodesForcefully();\n+        break;\n+      }\n       RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    String argName \u003d \"refreshNodes\";\n    final String msg \u003d \"refresh nodes.\";\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    checkRMStatus(user.getShortUserName(), argName, msg);\n\n    try {\n      Configuration conf \u003d\n          getConfiguration(new Configuration(false),\n              YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n      switch (request.getDecommissionType()) {\n      case NORMAL:\n        rmContext.getNodesListManager().refreshNodes(conf);\n        break;\n      case GRACEFUL:\n        rmContext.getNodesListManager().refreshNodesGracefully(conf);\n        break;\n      case FORCEFUL:\n        rmContext.getNodesListManager().refreshNodesForcefully();\n        break;\n      }\n      RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2993. Several fixes (missing acl check, error log msg ...) and some refinement in AdminService. (Contributed by Yi Liu)\n",
      "commitDate": "26/12/14 6:59 AM",
      "commitName": "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
      "commitAuthor": "Junping Du",
      "commitDateOld": "30/10/14 10:59 PM",
      "commitNameOld": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 56.37,
      "commitsBetweenForRepo": 427,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,20 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnException, StandbyException {\n     String argName \u003d \"refreshNodes\";\n+    final String msg \u003d \"refresh nodes.\";\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n-    if (!isRMActive()) {\n-      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n-          adminAcl.toString(), \"AdminService\",\n-          \"ResourceManager is not active. Can not refresh nodes.\");\n-      throwStandbyException();\n-    }\n+    checkRMStatus(user.getShortUserName(), argName, msg);\n \n     try {\n       Configuration conf \u003d\n           getConfiguration(new Configuration(false),\n               YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n       rmContext.getNodesListManager().refreshNodes(conf);\n       RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n-      LOG.info(\"Exception refreshing nodes \", ioe);\n-      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n-          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n-      throw RPCUtil.getRemoteException(ioe);\n+      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    String argName \u003d \"refreshNodes\";\n    final String msg \u003d \"refresh nodes.\";\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    checkRMStatus(user.getShortUserName(), argName, msg);\n\n    try {\n      Configuration conf \u003d\n          getConfiguration(new Configuration(false),\n              YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n      rmContext.getNodesListManager().refreshNodes(conf);\n      RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      throw logAndWrapException(ioe, user.getShortUserName(), argName, msg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1666. Modified RM HA handling of include/exclude node-lists to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569856 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/02/14 9:52 AM",
      "commitName": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/02/14 1:23 PM",
      "commitNameOld": "2b916db60b94ceffbb17dc2778287c88b966bc04",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.85,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnException, StandbyException {\n+    String argName \u003d \"refreshNodes\";\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n     if (!isRMActive()) {\n-      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n+      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n           adminAcl.toString(), \"AdminService\",\n           \"ResourceManager is not active. Can not refresh nodes.\");\n       throwStandbyException();\n     }\n \n     try {\n-      rmContext.getNodesListManager().refreshNodes(new YarnConfiguration());\n-      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n+      Configuration conf \u003d\n+          getConfiguration(new Configuration(false),\n+              YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n+      rmContext.getNodesListManager().refreshNodes(conf);\n+      RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       LOG.info(\"Exception refreshing nodes \", ioe);\n-      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n+      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n           adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    String argName \u003d \"refreshNodes\";\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh nodes.\");\n      throwStandbyException();\n    }\n\n    try {\n      Configuration conf \u003d\n          getConfiguration(new Configuration(false),\n              YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n      rmContext.getNodesListManager().refreshNodes(conf);\n      RMAuditLogger.logSuccess(user.getShortUserName(), argName,\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-1523. Use StandbyException instead of RMNotYetReadyException (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/12/13 7:28 PM",
      "commitName": "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-1523. Use StandbyException instead of RMNotYetReadyException (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553616 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/12/13 7:28 PM",
          "commitName": "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "16/12/13 3:36 PM",
          "commitNameOld": "49ad07af9782c2c2608799573e815a7cfc26851f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.16,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n-      throws YarnException {\n+      throws YarnException, StandbyException {\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n     if (!isRMActive()) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n           adminAcl.toString(), \"AdminService\",\n           \"ResourceManager is not active. Can not refresh nodes.\");\n-      throw new RMNotYetActiveException();\n+      throwStandbyException();\n     }\n \n     try {\n       rmContext.getNodesListManager().refreshNodes(new YarnConfiguration());\n       RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       LOG.info(\"Exception refreshing nodes \", ioe);\n       RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n           adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh nodes.\");\n      throwStandbyException();\n    }\n\n    try {\n      rmContext.getNodesListManager().refreshNodes(new YarnConfiguration());\n      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "[YarnException]",
            "newValue": "[YarnException, StandbyException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1523. Use StandbyException instead of RMNotYetReadyException (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553616 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/12/13 7:28 PM",
          "commitName": "1c9ac9adeb886f62d8d5f1f8aa8d6a12c51420ac",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "16/12/13 3:36 PM",
          "commitNameOld": "49ad07af9782c2c2608799573e815a7cfc26851f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.16,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n-      throws YarnException {\n+      throws YarnException, StandbyException {\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n \n     if (!isRMActive()) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n           adminAcl.toString(), \"AdminService\",\n           \"ResourceManager is not active. Can not refresh nodes.\");\n-      throw new RMNotYetActiveException();\n+      throwStandbyException();\n     }\n \n     try {\n       rmContext.getNodesListManager().refreshNodes(new YarnConfiguration());\n       RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       LOG.info(\"Exception refreshing nodes \", ioe);\n       RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n           adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException, StandbyException {\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh nodes.\");\n      throwStandbyException();\n    }\n\n    try {\n      rmContext.getNodesListManager().refreshNodes(new YarnConfiguration());\n      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/10/13 2:03 PM",
      "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 34.05,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,23 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnException {\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n+\n+    if (!isRMActive()) {\n+      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n+          adminAcl.toString(), \"AdminService\",\n+          \"ResourceManager is not active. Can not refresh nodes.\");\n+      throw new RMNotYetActiveException();\n+    }\n+\n     try {\n-      this.nodesListManager.refreshNodes(new YarnConfiguration());\n+      rmContext.getNodesListManager().refreshNodes(new YarnConfiguration());\n       RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       LOG.info(\"Exception refreshing nodes \", ioe);\n       RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n           adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException {\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh nodes.\");\n      throw new RMNotYetActiveException();\n    }\n\n    try {\n      rmContext.getNodesListManager().refreshNodes(new YarnConfiguration());\n      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/10/12 2:21 PM",
      "commitNameOld": "494e21052156a7c5abedbbee824578837ad8cc11",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 238.28,
      "commitsBetweenForRepo": 1343,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n-      throws YarnRemoteException {\n+      throws YarnException {\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n     try {\n       this.nodesListManager.refreshNodes(new YarnConfiguration());\n       RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       LOG.info(\"Exception refreshing nodes \", ioe);\n       RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n           adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnException {\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n    try {\n      this.nodesListManager.refreshNodes(new YarnConfiguration());\n      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[YarnException]"
      }
    },
    "39f15579b83eae9a1384dc077491f3b9326ca99a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-116. Add the ability to change the RM include/exclude file without a restart. (Contributed by xieguiming and Harsh J)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391912 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/12 3:39 PM",
      "commitName": "39f15579b83eae9a1384dc077491f3b9326ca99a",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "23/09/12 5:51 PM",
      "commitNameOld": "d52494228998db61683e486d19899e223cd85fa2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.91,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnRemoteException {\n     UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n     try {\n-      this.nodesListManager.refreshNodes();\n+      this.nodesListManager.refreshNodes(new YarnConfiguration());\n       RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n           \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       LOG.info(\"Exception refreshing nodes \", ioe);\n       RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n-          adminAcl.toString(), \"AdminService\",\n-          \"Exception refreshing nodes\");\n+          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnRemoteException {\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n    try {\n      this.nodesListManager.refreshNodes(new YarnConfiguration());\n      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\", \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnRemoteException {\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n    try {\n      this.nodesListManager.refreshNodes();\n      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\",\n          \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
      }
    },
    "cdfabf5ae289836968b3d296668593b9500b6f26": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2655. Add audit logs to ResourceManager and NodeManager. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165949 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/09/11 6:24 PM",
      "commitName": "cdfabf5ae289836968b3d296668593b9500b6f26",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 13.05,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n       throws YarnRemoteException {\n-    checkAcls(\"refreshNodes\");\n+    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n     try {\n       this.nodesListManager.refreshNodes();\n+      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n+          \"AdminService\");\n       return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n     } catch (IOException ioe) {\n       LOG.info(\"Exception refreshing nodes \", ioe);\n+      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n+          adminAcl.toString(), \"AdminService\",\n+          \"Exception refreshing nodes\");\n       throw RPCUtil.getRemoteException(ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnRemoteException {\n    UserGroupInformation user \u003d checkAcls(\"refreshNodes\");\n    try {\n      this.nodesListManager.refreshNodes();\n      RMAuditLogger.logSuccess(user.getShortUserName(), \"refreshNodes\",\n          \"AdminService\");\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      RMAuditLogger.logFailure(user.getShortUserName(), \"refreshNodes\",\n          adminAcl.toString(), \"AdminService\",\n          \"Exception refreshing nodes\");\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnRemoteException {\n    checkAcls(\"refreshNodes\");\n    try {\n      this.nodesListManager.refreshNodes();\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n+      throws YarnRemoteException {\n+    checkAcls(\"refreshNodes\");\n+    try {\n+      this.nodesListManager.refreshNodes();\n+      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n+    } catch (IOException ioe) {\n+      LOG.info(\"Exception refreshing nodes \", ioe);\n+      throw RPCUtil.getRemoteException(ioe);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshNodesResponse refreshNodes(RefreshNodesRequest request)\n      throws YarnRemoteException {\n    checkAcls(\"refreshNodes\");\n    try {\n      this.nodesListManager.refreshNodes();\n      return recordFactory.newRecordInstance(RefreshNodesResponse.class);\n    } catch (IOException ioe) {\n      LOG.info(\"Exception refreshing nodes \", ioe);\n      throw RPCUtil.getRemoteException(ioe);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}