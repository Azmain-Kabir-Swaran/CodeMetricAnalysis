{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConfiguredRMFailoverProxyProvider.java",
  "functionName": "getProxyInternal",
  "functionId": "getProxyInternal",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ConfiguredRMFailoverProxyProvider.java",
  "functionStartLine": 74,
  "functionEndLine": 83,
  "numCommitsSeen": 5,
  "timeTaken": 1250,
  "changeHistory": [
    "9855225a790e66835c79816712f432ffa8c599b4",
    "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28",
    "ca125153b319a8f5d75585d25cb0f37ae717be01"
  ],
  "changeHistoryShort": {
    "9855225a790e66835c79816712f432ffa8c599b4": "Ybodychange",
    "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28": "Ymodifierchange",
    "ca125153b319a8f5d75585d25cb0f37ae717be01": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9855225a790e66835c79816712f432ffa8c599b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6602. Impersonation does not work if standby RM is contacted first (rkanter)\n",
      "commitDate": "19/05/17 3:43 PM",
      "commitName": "9855225a790e66835c79816712f432ffa8c599b4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "22/01/16 6:20 PM",
      "commitNameOld": "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 482.85,
      "commitsBetweenForRepo": 3164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   protected T getProxyInternal() {\n     try {\n       final InetSocketAddress rmAddress \u003d rmProxy.getRMAddress(conf, protocol);\n-      return RMProxy.getProxy(conf, protocol, rmAddress);\n+      return rmProxy.getProxy(conf, protocol, rmAddress);\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to create proxy to the ResourceManager \" +\n           rmServiceIds[currentProxyIndex], ioe);\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected T getProxyInternal() {\n    try {\n      final InetSocketAddress rmAddress \u003d rmProxy.getRMAddress(conf, protocol);\n      return rmProxy.getProxy(conf, protocol, rmAddress);\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to create proxy to the ResourceManager \" +\n          rmServiceIds[currentProxyIndex], ioe);\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ConfiguredRMFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4496. Improve HA ResourceManager Failover detection on the client.\nContributed by Jian He\n",
      "commitDate": "22/01/16 6:20 PM",
      "commitName": "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28",
      "commitAuthor": "Xuan",
      "commitDateOld": "05/03/14 3:09 PM",
      "commitNameOld": "ad61eec0727d55ffcd4fca6f207a4919801bf18b",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 688.13,
      "commitsBetweenForRepo": 5482,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n-  private T getProxyInternal() {\n+  protected T getProxyInternal() {\n     try {\n       final InetSocketAddress rmAddress \u003d rmProxy.getRMAddress(conf, protocol);\n       return RMProxy.getProxy(conf, protocol, rmAddress);\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to create proxy to the ResourceManager \" +\n           rmServiceIds[currentProxyIndex], ioe);\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected T getProxyInternal() {\n    try {\n      final InetSocketAddress rmAddress \u003d rmProxy.getRMAddress(conf, protocol);\n      return RMProxy.getProxy(conf, protocol, rmAddress);\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to create proxy to the ResourceManager \" +\n          rmServiceIds[currentProxyIndex], ioe);\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ConfiguredRMFailoverProxyProvider.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "ca125153b319a8f5d75585d25cb0f37ae717be01": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1028. Added FailoverProxyProvider capability to ResourceManager to help with RM failover. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551739 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 2:32 PM",
      "commitName": "ca125153b319a8f5d75585d25cb0f37ae717be01",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,10 @@\n+  private T getProxyInternal() {\n+    try {\n+      final InetSocketAddress rmAddress \u003d rmProxy.getRMAddress(conf, protocol);\n+      return RMProxy.getProxy(conf, protocol, rmAddress);\n+    } catch (IOException ioe) {\n+      LOG.error(\"Unable to create proxy to the ResourceManager \" +\n+          rmServiceIds[currentProxyIndex], ioe);\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private T getProxyInternal() {\n    try {\n      final InetSocketAddress rmAddress \u003d rmProxy.getRMAddress(conf, protocol);\n      return RMProxy.getProxy(conf, protocol, rmAddress);\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to create proxy to the ResourceManager \" +\n          rmServiceIds[currentProxyIndex], ioe);\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ConfiguredRMFailoverProxyProvider.java"
    }
  }
}