{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderServer.java",
  "functionName": "addFilters",
  "functionId": "addFilters___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
  "functionStartLine": 151,
  "functionEndLine": 179,
  "numCommitsSeen": 20,
  "timeTaken": 1395,
  "changeHistory": [
    "3ba090f4360c81c9dfb575efa13b8161c7a5255b",
    "294695dd57cb75f2756a31a54264bdd37b32bb01",
    "d5ff965fee41fed28d3b94e11e546c1eb4c78a35",
    "d3f11e3f13ed5efc7f0b7f19567d142e554c35ed"
  ],
  "changeHistoryShort": {
    "3ba090f4360c81c9dfb575efa13b8161c7a5255b": "Ybodychange",
    "294695dd57cb75f2756a31a54264bdd37b32bb01": "Ybodychange",
    "d5ff965fee41fed28d3b94e11e546c1eb4c78a35": "Ybodychange",
    "d3f11e3f13ed5efc7f0b7f19567d142e554c35ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ba090f4360c81c9dfb575efa13b8161c7a5255b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16366.  Fixed ProxyUserAuthenticationFilterInitializer for timeline server.\n               Contributed by Prabhu Joseph\n",
      "commitDate": "14/06/19 9:54 AM",
      "commitName": "3ba090f4360c81c9dfb575efa13b8161c7a5255b",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "05/06/19 3:55 PM",
      "commitNameOld": "294695dd57cb75f2756a31a54264bdd37b32bb01",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.75,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   protected void addFilters(Configuration conf) {\n     boolean enableCorsFilter \u003d conf.getBoolean(\n         YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n         YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n     // Setup CORS\n     if (enableCorsFilter) {\n       conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n           + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n     }\n     String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n     Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n     if (!initializers.contains(\n         ProxyUserAuthenticationFilterInitializer.class.getName())) {\n       if (!initializers.contains(\n           TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n         defaultInitializers.add(\n             TimelineReaderAuthenticationFilterInitializer.class.getName());\n-      } else {\n-        defaultInitializers.add(\n-            ProxyUserAuthenticationFilterInitializer.class.getName());\n       }\n+    } else {\n+      defaultInitializers.add(\n+          ProxyUserAuthenticationFilterInitializer.class.getName());\n     }\n \n     defaultInitializers.add(\n         TimelineReaderWhitelistAuthorizationFilterInitializer.class.getName());\n \n     TimelineServerUtils.setTimelineFilters(\n         conf, initializers, defaultInitializers);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addFilters(Configuration conf) {\n    boolean enableCorsFilter \u003d conf.getBoolean(\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n    // Setup CORS\n    if (enableCorsFilter) {\n      conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n          + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n    }\n    String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n    Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n    if (!initializers.contains(\n        ProxyUserAuthenticationFilterInitializer.class.getName())) {\n      if (!initializers.contains(\n          TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n        defaultInitializers.add(\n            TimelineReaderAuthenticationFilterInitializer.class.getName());\n      }\n    } else {\n      defaultInitializers.add(\n          ProxyUserAuthenticationFilterInitializer.class.getName());\n    }\n\n    defaultInitializers.add(\n        TimelineReaderWhitelistAuthorizationFilterInitializer.class.getName());\n\n    TimelineServerUtils.setTimelineFilters(\n        conf, initializers, defaultInitializers);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
      "extendedDetails": {}
    },
    "294695dd57cb75f2756a31a54264bdd37b32bb01": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16314.  Make sure all web end points are covered by the same authentication filter.\n               Contributed by Prabhu Joseph\n",
      "commitDate": "05/06/19 3:55 PM",
      "commitName": "294695dd57cb75f2756a31a54264bdd37b32bb01",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "11/10/18 4:26 PM",
      "commitNameOld": "8d1981806feb8278966c02a9eff42d72541bb35e",
      "commitAuthorOld": "Vrushali C",
      "daysBetweenCommits": 236.98,
      "commitsBetweenForRepo": 1690,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,29 @@\n   protected void addFilters(Configuration conf) {\n     boolean enableCorsFilter \u003d conf.getBoolean(\n         YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n         YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n     // Setup CORS\n     if (enableCorsFilter) {\n       conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n           + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n     }\n     String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n     Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n     if (!initializers.contains(\n-        TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n-      defaultInitializers.add(\n-          TimelineReaderAuthenticationFilterInitializer.class.getName());\n+        ProxyUserAuthenticationFilterInitializer.class.getName())) {\n+      if (!initializers.contains(\n+          TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n+        defaultInitializers.add(\n+            TimelineReaderAuthenticationFilterInitializer.class.getName());\n+      } else {\n+        defaultInitializers.add(\n+            ProxyUserAuthenticationFilterInitializer.class.getName());\n+      }\n     }\n \n     defaultInitializers.add(\n         TimelineReaderWhitelistAuthorizationFilterInitializer.class.getName());\n \n     TimelineServerUtils.setTimelineFilters(\n         conf, initializers, defaultInitializers);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addFilters(Configuration conf) {\n    boolean enableCorsFilter \u003d conf.getBoolean(\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n    // Setup CORS\n    if (enableCorsFilter) {\n      conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n          + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n    }\n    String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n    Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n    if (!initializers.contains(\n        ProxyUserAuthenticationFilterInitializer.class.getName())) {\n      if (!initializers.contains(\n          TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n        defaultInitializers.add(\n            TimelineReaderAuthenticationFilterInitializer.class.getName());\n      } else {\n        defaultInitializers.add(\n            ProxyUserAuthenticationFilterInitializer.class.getName());\n      }\n    }\n\n    defaultInitializers.add(\n        TimelineReaderWhitelistAuthorizationFilterInitializer.class.getName());\n\n    TimelineServerUtils.setTimelineFilters(\n        conf, initializers, defaultInitializers);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
      "extendedDetails": {}
    },
    "d5ff965fee41fed28d3b94e11e546c1eb4c78a35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6820. Restrict read access to timelineservice v2 data. Contributed by Vrushali C\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "d5ff965fee41fed28d3b94e11e546c1eb4c78a35",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "d3f11e3f13ed5efc7f0b7f19567d142e554c35ed",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   protected void addFilters(Configuration conf) {\n     boolean enableCorsFilter \u003d conf.getBoolean(\n         YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n         YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n     // Setup CORS\n     if (enableCorsFilter) {\n       conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n           + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n     }\n     String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n     Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n     if (!initializers.contains(\n         TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n       defaultInitializers.add(\n           TimelineReaderAuthenticationFilterInitializer.class.getName());\n     }\n+\n+    defaultInitializers.add(\n+        TimelineReaderWhitelistAuthorizationFilterInitializer.class.getName());\n+\n     TimelineServerUtils.setTimelineFilters(\n         conf, initializers, defaultInitializers);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addFilters(Configuration conf) {\n    boolean enableCorsFilter \u003d conf.getBoolean(\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n    // Setup CORS\n    if (enableCorsFilter) {\n      conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n          + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n    }\n    String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n    Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n    if (!initializers.contains(\n        TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n      defaultInitializers.add(\n          TimelineReaderAuthenticationFilterInitializer.class.getName());\n    }\n\n    defaultInitializers.add(\n        TimelineReaderWhitelistAuthorizationFilterInitializer.class.getName());\n\n    TimelineServerUtils.setTimelineFilters(\n        conf, initializers, defaultInitializers);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
      "extendedDetails": {}
    },
    "d3f11e3f13ed5efc7f0b7f19567d142e554c35ed": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6638. [ATSv2 Security] Timeline reader side changes for loading auth filters and principals. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "d3f11e3f13ed5efc7f0b7f19567d142e554c35ed",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,19 @@\n+  protected void addFilters(Configuration conf) {\n+    boolean enableCorsFilter \u003d conf.getBoolean(\n+        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n+        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n+    // Setup CORS\n+    if (enableCorsFilter) {\n+      conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n+          + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n+    }\n+    String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n+    Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n+    if (!initializers.contains(\n+        TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n+      defaultInitializers.add(\n+          TimelineReaderAuthenticationFilterInitializer.class.getName());\n+    }\n+    TimelineServerUtils.setTimelineFilters(\n+        conf, initializers, defaultInitializers);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void addFilters(Configuration conf) {\n    boolean enableCorsFilter \u003d conf.getBoolean(\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED,\n        YarnConfiguration.TIMELINE_SERVICE_HTTP_CROSS_ORIGIN_ENABLED_DEFAULT);\n    // Setup CORS\n    if (enableCorsFilter) {\n      conf.setBoolean(HttpCrossOriginFilterInitializer.PREFIX\n          + HttpCrossOriginFilterInitializer.ENABLED_SUFFIX, true);\n    }\n    String initializers \u003d conf.get(\"hadoop.http.filter.initializers\", \"\");\n    Set\u003cString\u003e defaultInitializers \u003d new LinkedHashSet\u003cString\u003e();\n    if (!initializers.contains(\n        TimelineReaderAuthenticationFilterInitializer.class.getName())) {\n      defaultInitializers.add(\n          TimelineReaderAuthenticationFilterInitializer.class.getName());\n    }\n    TimelineServerUtils.setTimelineFilters(\n        conf, initializers, defaultInitializers);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java"
    }
  }
}