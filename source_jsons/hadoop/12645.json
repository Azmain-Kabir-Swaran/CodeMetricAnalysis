{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExternalSPSBlockMoveTaskHandler.java",
  "functionName": "initializeBlockMoverThreadPool",
  "functionId": "initializeBlockMoverThreadPool___num-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
  "functionStartLine": 118,
  "functionEndLine": 145,
  "numCommitsSeen": 6,
  "timeTaken": 1160,
  "changeHistory": [
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10"
  ],
  "changeHistoryShort": {
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,28 @@\n+  private ThreadPoolExecutor initializeBlockMoverThreadPool(int num) {\n+    LOG.debug(\"Block mover to satisfy storage policy; pool threads\u003d{}\", num);\n+\n+    ThreadPoolExecutor moverThreadPool \u003d new ThreadPoolExecutor(1, num, 60,\n+        TimeUnit.SECONDS, new SynchronousQueue\u003cRunnable\u003e(),\n+        new Daemon.DaemonFactory() {\n+          private final AtomicInteger threadIndex \u003d new AtomicInteger(0);\n+\n+          @Override\n+          public Thread newThread(Runnable r) {\n+            Thread t \u003d super.newThread(r);\n+            t.setName(\"BlockMoverTask-\" + threadIndex.getAndIncrement());\n+            return t;\n+          }\n+        }, new ThreadPoolExecutor.CallerRunsPolicy() {\n+          @Override\n+          public void rejectedExecution(Runnable runnable,\n+              ThreadPoolExecutor e) {\n+            LOG.info(\"Execution for block movement to satisfy storage policy\"\n+                + \" got rejected, Executing in current thread\");\n+            // will run in the current thread.\n+            super.rejectedExecution(runnable, e);\n+          }\n+        });\n+\n+    moverThreadPool.allowCoreThreadTimeOut(true);\n+    return moverThreadPool;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ThreadPoolExecutor initializeBlockMoverThreadPool(int num) {\n    LOG.debug(\"Block mover to satisfy storage policy; pool threads\u003d{}\", num);\n\n    ThreadPoolExecutor moverThreadPool \u003d new ThreadPoolExecutor(1, num, 60,\n        TimeUnit.SECONDS, new SynchronousQueue\u003cRunnable\u003e(),\n        new Daemon.DaemonFactory() {\n          private final AtomicInteger threadIndex \u003d new AtomicInteger(0);\n\n          @Override\n          public Thread newThread(Runnable r) {\n            Thread t \u003d super.newThread(r);\n            t.setName(\"BlockMoverTask-\" + threadIndex.getAndIncrement());\n            return t;\n          }\n        }, new ThreadPoolExecutor.CallerRunsPolicy() {\n          @Override\n          public void rejectedExecution(Runnable runnable,\n              ThreadPoolExecutor e) {\n            LOG.info(\"Execution for block movement to satisfy storage policy\"\n                + \" got rejected, Executing in current thread\");\n            // will run in the current thread.\n            super.rejectedExecution(runnable, e);\n          }\n        });\n\n    moverThreadPool.allowCoreThreadTimeOut(true);\n    return moverThreadPool;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java"
    }
  }
}