{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "getAppAttempts",
  "functionId": "getAppAttempts___hsr-HttpServletRequest(annotations-@Context)__appId-String(annotations-@PathParam(RMWSConsts.APPID))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1064,
  "functionEndLine": 1082,
  "numCommitsSeen": 153,
  "timeTaken": 5765,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
    "5092c94195a63bd2c3e36d5a74b4c061cea1b847",
    "40d222e862063dc6c474cc6e8de0dce6c4395012",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "358eda0bfaaf24f2ff4b2ef9967a370ddcb0a336"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": "Yparametermetachange",
    "5092c94195a63bd2c3e36d5a74b4c061cea1b847": "Ybodychange",
    "40d222e862063dc6c474cc6e8de0dce6c4395012": "Ymultichange(Yparameterchange,Ybodychange)",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": "Ybodychange",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "358eda0bfaaf24f2ff4b2ef9967a370ddcb0a336": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n       @PathParam(RMWSConsts.APPID) String appId) {\n+    initForReadableEndpoints();\n \n-    init();\n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n       AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n           app.getUser(), hsr.getScheme() + \"://\");\n       appAttemptsInfo.add(attemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId) {\n    initForReadableEndpoints();\n\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n          app.getUser(), hsr.getScheme() + \"://\");\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": {
      "type": "Yparametermetachange",
      "commitMessage": "YARN-6634. [API] Refactor ResourceManager WebServices to make API explicit. (Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "07/06/17 1:41 PM",
      "commitName": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "08/12/16 2:23 AM",
      "commitNameOld": "74d0066d3392169bec872f438a0818e2f5323010",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 181.43,
      "commitsBetweenForRepo": 954,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n-      @PathParam(\"appid\") String appId) {\n+      @PathParam(RMWSConsts.APPID) String appId) {\n \n     init();\n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n       AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n           app.getUser(), hsr.getScheme() + \"://\");\n       appAttemptsInfo.add(attemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId) {\n\n    init();\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n          app.getUser(), hsr.getScheme() + \"://\");\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(\"appid\"))]",
        "newValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(RMWSConsts.APPID))]"
      }
    },
    "5092c94195a63bd2c3e36d5a74b4c061cea1b847": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4746. yarn web services should convert parse failures of appId, appAttemptId and containerId to 400. Contributed by Bibin A Chundatt\n",
      "commitDate": "04/04/16 3:55 AM",
      "commitName": "5092c94195a63bd2c3e36d5a74b4c061cea1b847",
      "commitAuthor": "naganarasimha",
      "commitDateOld": "10/02/16 10:19 AM",
      "commitNameOld": "b706cbc1bc0ab3572c01676fe7365df21eda7ffa",
      "commitAuthorOld": "\u003d",
      "daysBetweenCommits": 53.69,
      "commitsBetweenForRepo": 324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,19 @@\n   public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n       @PathParam(\"appid\") String appId) {\n \n     init();\n-    if (appId \u003d\u003d null || appId.isEmpty()) {\n-      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n-    }\n-    ApplicationId id;\n-    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n-    if (id \u003d\u003d null) {\n-      throw new NotFoundException(\"appId is null\");\n-    }\n+    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n       AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n           app.getUser(), hsr.getScheme() + \"://\");\n       appAttemptsInfo.add(attemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n\n    init();\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n          app.getUser(), hsr.getScheme() + \"://\");\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "40d222e862063dc6c474cc6e8de0dce6c4395012": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4103. RM WebServices missing scheme for appattempts logLinks. Contributed by Jonathan Eagles.\n",
      "commitDate": "04/09/15 2:01 AM",
      "commitName": "40d222e862063dc6c474cc6e8de0dce6c4395012",
      "commitAuthor": "Varun Vasudev",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4103. RM WebServices missing scheme for appattempts logLinks. Contributed by Jonathan Eagles.\n",
          "commitDate": "04/09/15 2:01 AM",
          "commitName": "40d222e862063dc6c474cc6e8de0dce6c4395012",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "03/09/15 4:10 AM",
          "commitNameOld": "b469ac531af1bdda01a04ae0b8d39218ca292163",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n+  public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n+      @PathParam(\"appid\") String appId) {\n \n     init();\n     if (appId \u003d\u003d null || appId.isEmpty()) {\n       throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n     }\n     ApplicationId id;\n     id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n     if (id \u003d\u003d null) {\n       throw new NotFoundException(\"appId is null\");\n     }\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n-      AppAttemptInfo attemptInfo \u003d\n-          new AppAttemptInfo(rm, attempt, app.getUser());\n+      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n+          app.getUser(), hsr.getScheme() + \"://\");\n       appAttemptsInfo.add(attemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n          app.getUser(), hsr.getScheme() + \"://\");\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "[appId-String(annotations-@PathParam(\"appid\"))]",
            "newValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(\"appid\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4103. RM WebServices missing scheme for appattempts logLinks. Contributed by Jonathan Eagles.\n",
          "commitDate": "04/09/15 2:01 AM",
          "commitName": "40d222e862063dc6c474cc6e8de0dce6c4395012",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "03/09/15 4:10 AM",
          "commitNameOld": "b469ac531af1bdda01a04ae0b8d39218ca292163",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n+  public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n+      @PathParam(\"appid\") String appId) {\n \n     init();\n     if (appId \u003d\u003d null || appId.isEmpty()) {\n       throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n     }\n     ApplicationId id;\n     id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n     if (id \u003d\u003d null) {\n       throw new NotFoundException(\"appId is null\");\n     }\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n-      AppAttemptInfo attemptInfo \u003d\n-          new AppAttemptInfo(rm, attempt, app.getUser());\n+      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n+          app.getUser(), hsr.getScheme() + \"://\");\n       appAttemptsInfo.add(attemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AppAttemptsInfo getAppAttempts(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(rm, attempt,\n          app.getUser(), hsr.getScheme() + \"://\");\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3248. Display count of nodes blacklisted by apps in the web UI.\nContributed by Varun Vasudev\n",
      "commitDate": "01/04/15 4:19 AM",
      "commitName": "4728bdfa15809db4b8b235faa286c65de4a48cf6",
      "commitAuthor": "Xuan",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 29.25,
      "commitsBetweenForRepo": 260,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n \n     init();\n     if (appId \u003d\u003d null || appId.isEmpty()) {\n       throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n     }\n     ApplicationId id;\n     id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n     if (id \u003d\u003d null) {\n       throw new NotFoundException(\"appId is null\");\n     }\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n-      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(attempt, app.getUser());\n+      AppAttemptInfo attemptInfo \u003d\n+          new AppAttemptInfo(rm, attempt, app.getUser());\n       appAttemptsInfo.add(attemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d\n          new AppAttemptInfo(rm, attempt, app.getUser());\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 8:22 PM",
      "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 288.92,
      "commitsBetweenForRepo": 1653,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n \n     init();\n     if (appId \u003d\u003d null || appId.isEmpty()) {\n       throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n     }\n     ApplicationId id;\n     id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n     if (id \u003d\u003d null) {\n       throw new NotFoundException(\"appId is null\");\n     }\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n     for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n-      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(attempt);\n+      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(attempt, app.getUser());\n       appAttemptsInfo.add(attemptInfo);\n     }\n \n     return appAttemptsInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(attempt, app.getUser());\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(attempt);\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
      }
    },
    "358eda0bfaaf24f2ff4b2ef9967a370ddcb0a336": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3350. Per-app RM page should have the list of application-attempts like on the app JHS page (Jonathon Eagles via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1346047 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/06/12 10:41 AM",
      "commitName": "358eda0bfaaf24f2ff4b2ef9967a370ddcb0a336",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,24 @@\n+  public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n+\n+    init();\n+    if (appId \u003d\u003d null || appId.isEmpty()) {\n+      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n+    }\n+    ApplicationId id;\n+    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n+    if (id \u003d\u003d null) {\n+      throw new NotFoundException(\"appId is null\");\n+    }\n+    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n+    if (app \u003d\u003d null) {\n+      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n+    }\n+\n+    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n+    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n+      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(attempt);\n+      appAttemptsInfo.add(attemptInfo);\n+    }\n+\n+    return appAttemptsInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppAttemptsInfo getAppAttempts(@PathParam(\"appid\") String appId) {\n\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    AppAttemptsInfo appAttemptsInfo \u003d new AppAttemptsInfo();\n    for (RMAppAttempt attempt : app.getAppAttempts().values()) {\n      AppAttemptInfo attemptInfo \u003d new AppAttemptInfo(attempt);\n      appAttemptsInfo.add(attemptInfo);\n    }\n\n    return appAttemptsInfo;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}