{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "addTerseExceptions",
  "functionId": "addTerseExceptions___exceptionClass-Class__?__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 158,
  "functionEndLine": 160,
  "numCommitsSeen": 162,
  "timeTaken": 5073,
  "changeHistory": [
    "2e040d31c7bba021576e6baf267d937da7ff814a",
    "e8477759ac7df7f30d0f74d3689458075cae0d9f"
  ],
  "changeHistoryShort": {
    "2e040d31c7bba021576e6baf267d937da7ff814a": "Ymultichange(Ymodifierchange,Ybodychange)",
    "e8477759ac7df7f30d0f74d3689458075cae0d9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2e040d31c7bba021576e6baf267d937da7ff814a": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-12903. IPC Server should allow suppressing exception logging by type, not log \u0027server too busy\u0027 messages. (Arpit Agarwal)\n",
      "commitDate": "08/03/16 11:29 PM",
      "commitName": "2e040d31c7bba021576e6baf267d937da7ff814a",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-12903. IPC Server should allow suppressing exception logging by type, not log \u0027server too busy\u0027 messages. (Arpit Agarwal)\n",
          "commitDate": "08/03/16 11:29 PM",
          "commitName": "2e040d31c7bba021576e6baf267d937da7ff814a",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "26/10/15 6:57 PM",
          "commitNameOld": "ea6b183a1a649ad2874050ade8856286728c654c",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 134.23,
          "commitsBetweenForRepo": 893,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,3 @@\n-    void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n-\n-      // Make a copy of terseException for performing modification\n-      final HashSet\u003cString\u003e newSet \u003d new HashSet\u003cString\u003e(terseExceptions);\n-\n-      // Add all class names into the HashSet\n-      for (Class\u003c?\u003e name : exceptionClass) {\n-        newSet.add(name.toString());\n-      }\n-      // Replace terseException set\n-      terseExceptions \u003d Collections.unmodifiableSet(newSet);\n-    }\n\\ No newline at end of file\n+  public void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n+    exceptionsHandler.addTerseLoggingExceptions(exceptionClass);\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n    exceptionsHandler.addTerseLoggingExceptions(exceptionClass);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12903. IPC Server should allow suppressing exception logging by type, not log \u0027server too busy\u0027 messages. (Arpit Agarwal)\n",
          "commitDate": "08/03/16 11:29 PM",
          "commitName": "2e040d31c7bba021576e6baf267d937da7ff814a",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "26/10/15 6:57 PM",
          "commitNameOld": "ea6b183a1a649ad2874050ade8856286728c654c",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 134.23,
          "commitsBetweenForRepo": 893,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,3 @@\n-    void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n-\n-      // Make a copy of terseException for performing modification\n-      final HashSet\u003cString\u003e newSet \u003d new HashSet\u003cString\u003e(terseExceptions);\n-\n-      // Add all class names into the HashSet\n-      for (Class\u003c?\u003e name : exceptionClass) {\n-        newSet.add(name.toString());\n-      }\n-      // Replace terseException set\n-      terseExceptions \u003d Collections.unmodifiableSet(newSet);\n-    }\n\\ No newline at end of file\n+  public void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n+    exceptionsHandler.addTerseLoggingExceptions(exceptionClass);\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n    exceptionsHandler.addTerseLoggingExceptions(exceptionClass);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "e8477759ac7df7f30d0f74d3689458075cae0d9f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8711. IPC Server supports adding exceptions for which the message is printed and the stack trace is not printed to avoid chatter. Contributed by Brandon Li.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 2:01 PM",
      "commitName": "e8477759ac7df7f30d0f74d3689458075cae0d9f",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,12 @@\n+    void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n+\n+      // Make a copy of terseException for performing modification\n+      final HashSet\u003cString\u003e newSet \u003d new HashSet\u003cString\u003e(terseExceptions);\n+\n+      // Add all class names into the HashSet\n+      for (Class\u003c?\u003e name : exceptionClass) {\n+        newSet.add(name.toString());\n+      }\n+      // Replace terseException set\n+      terseExceptions \u003d Collections.unmodifiableSet(newSet);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void addTerseExceptions(Class\u003c?\u003e... exceptionClass) {\n\n      // Make a copy of terseException for performing modification\n      final HashSet\u003cString\u003e newSet \u003d new HashSet\u003cString\u003e(terseExceptions);\n\n      // Add all class names into the HashSet\n      for (Class\u003c?\u003e name : exceptionClass) {\n        newSet.add(name.toString());\n      }\n      // Replace terseException set\n      terseExceptions \u003d Collections.unmodifiableSet(newSet);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}