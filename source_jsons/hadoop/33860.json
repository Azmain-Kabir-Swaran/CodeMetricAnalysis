{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceHandlerModule.java",
  "functionName": "addHandlersFromConfiguredResourcePlugins",
  "functionId": "addHandlersFromConfiguredResourcePlugins___handlerList-List__ResourceHandler____conf-Configuration__nmContext-Context",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
  "functionStartLine": 306,
  "functionEndLine": 333,
  "numCommitsSeen": 15,
  "timeTaken": 2717,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe": "Ybodychange",
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "10/12/18 11:12 AM",
      "commitNameOld": "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 95.17,
      "commitsBetweenForRepo": 722,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,28 @@\n   private static void addHandlersFromConfiguredResourcePlugins(\n       List\u003cResourceHandler\u003e handlerList, Configuration conf,\n       Context nmContext) throws ResourceHandlerException {\n     ResourcePluginManager pluginManager \u003d nmContext.getResourcePluginManager();\n \n     if (pluginManager \u003d\u003d null) {\n       LOG.warn(\"Plugin manager was null while trying to add \" +\n           \"ResourceHandlers from configuration!\");\n       return;\n     }\n \n     Map\u003cString, ResourcePlugin\u003e pluginMap \u003d pluginManager.getNameToPlugins();\n     if (pluginMap \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"List of plugins of ResourcePluginManager was empty \" +\n-            \"while trying to add ResourceHandlers from configuration!\");\n-      }\n+      LOG.debug(\"List of plugins of ResourcePluginManager was empty \" +\n+          \"while trying to add ResourceHandlers from configuration!\");\n       return;\n     } else {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"List of plugins of ResourcePluginManager: \" +\n-            pluginManager.getNameToPlugins());\n-      }\n+      LOG.debug(\"List of plugins of ResourcePluginManager: {}\",\n+          pluginManager.getNameToPlugins());\n     }\n \n     for (ResourcePlugin plugin : pluginMap.values()) {\n       addHandlerIfNotNull(handlerList,\n           plugin.createResourceHandler(nmContext,\n               getInitializedCGroupsHandler(conf),\n               PrivilegedOperationExecutor.getInstance(conf)));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addHandlersFromConfiguredResourcePlugins(\n      List\u003cResourceHandler\u003e handlerList, Configuration conf,\n      Context nmContext) throws ResourceHandlerException {\n    ResourcePluginManager pluginManager \u003d nmContext.getResourcePluginManager();\n\n    if (pluginManager \u003d\u003d null) {\n      LOG.warn(\"Plugin manager was null while trying to add \" +\n          \"ResourceHandlers from configuration!\");\n      return;\n    }\n\n    Map\u003cString, ResourcePlugin\u003e pluginMap \u003d pluginManager.getNameToPlugins();\n    if (pluginMap \u003d\u003d null) {\n      LOG.debug(\"List of plugins of ResourcePluginManager was empty \" +\n          \"while trying to add ResourceHandlers from configuration!\");\n      return;\n    } else {\n      LOG.debug(\"List of plugins of ResourcePluginManager: {}\",\n          pluginManager.getNameToPlugins());\n    }\n\n    for (ResourcePlugin plugin : pluginMap.values()) {\n      addHandlerIfNotNull(handlerList,\n          plugin.createResourceHandler(nmContext,\n              getInitializedCGroupsHandler(conf),\n              PrivilegedOperationExecutor.getInstance(conf)));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
      "extendedDetails": {}
    },
    "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9087. Improve logging for initialization of Resource plugins. (Contributed by Szilard Nemeth)\n",
      "commitDate": "10/12/18 11:12 AM",
      "commitName": "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "18/09/18 1:36 PM",
      "commitNameOld": "2df0a8dcb3dfde15d216481cc1296d97d2cb5d43",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 82.94,
      "commitsBetweenForRepo": 673,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,32 @@\n   private static void addHandlersFromConfiguredResourcePlugins(\n       List\u003cResourceHandler\u003e handlerList, Configuration conf,\n       Context nmContext) throws ResourceHandlerException {\n     ResourcePluginManager pluginManager \u003d nmContext.getResourcePluginManager();\n-    if (pluginManager !\u003d null) {\n-       Map\u003cString, ResourcePlugin\u003e pluginMap \u003d pluginManager.getNameToPlugins();\n-       if (pluginMap !\u003d null) {\n-        for (ResourcePlugin plugin : pluginMap.values()) {\n-          addHandlerIfNotNull(handlerList, plugin\n-              .createResourceHandler(nmContext,\n-                  getInitializedCGroupsHandler(conf),\n-                  PrivilegedOperationExecutor.getInstance(conf)));\n-        }\n+\n+    if (pluginManager \u003d\u003d null) {\n+      LOG.warn(\"Plugin manager was null while trying to add \" +\n+          \"ResourceHandlers from configuration!\");\n+      return;\n+    }\n+\n+    Map\u003cString, ResourcePlugin\u003e pluginMap \u003d pluginManager.getNameToPlugins();\n+    if (pluginMap \u003d\u003d null) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"List of plugins of ResourcePluginManager was empty \" +\n+            \"while trying to add ResourceHandlers from configuration!\");\n       }\n+      return;\n+    } else {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"List of plugins of ResourcePluginManager: \" +\n+            pluginManager.getNameToPlugins());\n+      }\n+    }\n+\n+    for (ResourcePlugin plugin : pluginMap.values()) {\n+      addHandlerIfNotNull(handlerList,\n+          plugin.createResourceHandler(nmContext,\n+              getInitializedCGroupsHandler(conf),\n+              PrivilegedOperationExecutor.getInstance(conf)));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addHandlersFromConfiguredResourcePlugins(\n      List\u003cResourceHandler\u003e handlerList, Configuration conf,\n      Context nmContext) throws ResourceHandlerException {\n    ResourcePluginManager pluginManager \u003d nmContext.getResourcePluginManager();\n\n    if (pluginManager \u003d\u003d null) {\n      LOG.warn(\"Plugin manager was null while trying to add \" +\n          \"ResourceHandlers from configuration!\");\n      return;\n    }\n\n    Map\u003cString, ResourcePlugin\u003e pluginMap \u003d pluginManager.getNameToPlugins();\n    if (pluginMap \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"List of plugins of ResourcePluginManager was empty \" +\n            \"while trying to add ResourceHandlers from configuration!\");\n      }\n      return;\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"List of plugins of ResourcePluginManager: \" +\n            pluginManager.getNameToPlugins());\n      }\n    }\n\n    for (ResourcePlugin plugin : pluginMap.values()) {\n      addHandlerIfNotNull(handlerList,\n          plugin.createResourceHandler(nmContext,\n              getInitializedCGroupsHandler(conf),\n              PrivilegedOperationExecutor.getInstance(conf)));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
      "extendedDetails": {}
    },
    "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6620. Add support in NodeManager to isolate GPU devices by using CGroups. Contributed by Wangda Tan.\n",
      "commitDate": "11/10/17 11:14 AM",
      "commitName": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,16 @@\n+  private static void addHandlersFromConfiguredResourcePlugins(\n+      List\u003cResourceHandler\u003e handlerList, Configuration conf,\n+      Context nmContext) throws ResourceHandlerException {\n+    ResourcePluginManager pluginManager \u003d nmContext.getResourcePluginManager();\n+    if (pluginManager !\u003d null) {\n+       Map\u003cString, ResourcePlugin\u003e pluginMap \u003d pluginManager.getNameToPlugins();\n+       if (pluginMap !\u003d null) {\n+        for (ResourcePlugin plugin : pluginMap.values()) {\n+          addHandlerIfNotNull(handlerList, plugin\n+              .createResourceHandler(nmContext,\n+                  getInitializedCGroupsHandler(conf),\n+                  PrivilegedOperationExecutor.getInstance(conf)));\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addHandlersFromConfiguredResourcePlugins(\n      List\u003cResourceHandler\u003e handlerList, Configuration conf,\n      Context nmContext) throws ResourceHandlerException {\n    ResourcePluginManager pluginManager \u003d nmContext.getResourcePluginManager();\n    if (pluginManager !\u003d null) {\n       Map\u003cString, ResourcePlugin\u003e pluginMap \u003d pluginManager.getNameToPlugins();\n       if (pluginMap !\u003d null) {\n        for (ResourcePlugin plugin : pluginMap.values()) {\n          addHandlerIfNotNull(handlerList, plugin\n              .createResourceHandler(nmContext,\n                  getInitializedCGroupsHandler(conf),\n                  PrivilegedOperationExecutor.getInstance(conf)));\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java"
    }
  }
}