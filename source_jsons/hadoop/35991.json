{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 172,
  "functionEndLine": 175,
  "numCommitsSeen": 96,
  "timeTaken": 10076,
  "changeHistory": [
    "7a241aee90f042672fc30ba402ed9dff912bc535",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "77e134d13fb87cd098f2e9c23212affe0a7be1be",
    "0928502029ef141759008997335ea2cd836a7154",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "48414b08277b86cdbc34ae36d7c4d204fd838294",
    "df654cca49c12ab3fa8ec1e626da1bb562bbb6c1",
    "d19cfe01642f9582e1fe5d567beb480399c37a01",
    "66137cf17cb4abccd6065819d97edc63c6510477",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "7a241aee90f042672fc30ba402ed9dff912bc535": "Ymodifierchange",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": "Ybodychange",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ymultichange(Ymodifierchange,Ybodychange)",
    "77e134d13fb87cd098f2e9c23212affe0a7be1be": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "48414b08277b86cdbc34ae36d7c4d204fd838294": "Ybodychange",
    "df654cca49c12ab3fa8ec1e626da1bb562bbb6c1": "Ybodychange",
    "d19cfe01642f9582e1fe5d567beb480399c37a01": "Ybodychange",
    "66137cf17cb4abccd6065819d97edc63c6510477": "Ybodychange",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7a241aee90f042672fc30ba402ed9dff912bc535": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1929. Fixed a deadlock in ResourceManager that occurs when failover happens right at the time of shutdown. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1591071 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/04/14 12:49 PM",
      "commitName": "7a241aee90f042672fc30ba402ed9dff912bc535",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/03/14 11:41 AM",
      "commitNameOld": "a60434368cdf0fd119d024c2ed10942abdb2e7f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 57.01,
      "commitsBetweenForRepo": 413,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-  protected synchronized void serviceStart() throws Exception {\n+  protected void serviceStart() throws Exception {\n     startServer();\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    startServer();\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldValue": "[protected, synchronized]",
        "newValue": "[protected]"
      }
    },
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 7:13 AM",
      "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "02/12/13 2:18 PM",
      "commitNameOld": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.7,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,4 @@\n   protected synchronized void serviceStart() throws Exception {\n-    if (haEnabled) {\n-      transitionToStandby(true);\n-    } else {\n-      transitionToActive();\n-    }\n     startServer();\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void serviceStart() throws Exception {\n    startServer();\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "29/10/13 2:03 PM",
          "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 34.05,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,9 @@\n-  protected void serviceStart() throws Exception {\n-    Configuration conf \u003d getConfig();\n-    YarnRPC rpc \u003d YarnRPC.create(conf);\n-    this.server \u003d\n-      rpc.getServer(ResourceManagerAdministrationProtocol.class, this, masterServiceAddress,\n-          conf, null,\n-          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n-              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n-    \n-    // Enable service authorization?\n-    if (conf.getBoolean(\n-        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n-        false)) {\n-      refreshServiceAcls(conf, new RMPolicyProvider());\n+  protected synchronized void serviceStart() throws Exception {\n+    if (haEnabled) {\n+      transitionToStandby(true);\n+    } else {\n+      transitionToActive();\n     }\n-\n-    this.server.start();\n-    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n-                           server.getListenerAddress());\n+    startServer();\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected synchronized void serviceStart() throws Exception {\n    if (haEnabled) {\n      transitionToStandby(true);\n    } else {\n      transitionToActive();\n    }\n    startServer();\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[protected, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "29/10/13 2:03 PM",
          "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 34.05,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,9 @@\n-  protected void serviceStart() throws Exception {\n-    Configuration conf \u003d getConfig();\n-    YarnRPC rpc \u003d YarnRPC.create(conf);\n-    this.server \u003d\n-      rpc.getServer(ResourceManagerAdministrationProtocol.class, this, masterServiceAddress,\n-          conf, null,\n-          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n-              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n-    \n-    // Enable service authorization?\n-    if (conf.getBoolean(\n-        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n-        false)) {\n-      refreshServiceAcls(conf, new RMPolicyProvider());\n+  protected synchronized void serviceStart() throws Exception {\n+    if (haEnabled) {\n+      transitionToStandby(true);\n+    } else {\n+      transitionToActive();\n     }\n-\n-    this.server.start();\n-    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n-                           server.getListenerAddress());\n+    startServer();\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected synchronized void serviceStart() throws Exception {\n    if (haEnabled) {\n      transitionToStandby(true);\n    } else {\n      transitionToActive();\n    }\n    startServer();\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "77e134d13fb87cd098f2e9c23212affe0a7be1be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-387. Renamed YARN protocols for consistency. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493623 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 7:27 PM",
      "commitName": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/06/13 8:54 AM",
      "commitNameOld": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.44,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n-      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n+      rpc.getServer(ResourceManagerAdministrationProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n         false)) {\n       refreshServiceAcls(conf, new RMPolicyProvider());\n     }\n \n     this.server.start();\n     conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                            server.getListenerAddress());\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(ResourceManagerAdministrationProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                           server.getListenerAddress());\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n         false)) {\n       refreshServiceAcls(conf, new RMPolicyProvider());\n     }\n \n     this.server.start();\n     conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                            server.getListenerAddress());\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                           server.getListenerAddress());\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "start",
            "newValue": "serviceStart"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n         false)) {\n       refreshServiceAcls(conf, new RMPolicyProvider());\n     }\n \n     this.server.start();\n     conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                            server.getListenerAddress());\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                           server.getListenerAddress());\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n         false)) {\n       refreshServiceAcls(conf, new RMPolicyProvider());\n     }\n \n     this.server.start();\n     conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                            server.getListenerAddress());\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                           server.getListenerAddress());\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n         false)) {\n       refreshServiceAcls(conf, new RMPolicyProvider());\n     }\n \n     this.server.start();\n     conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                            server.getListenerAddress());\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                           server.getListenerAddress());\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                           server.getListenerAddress());\n    super.start();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
      }
    },
    "48414b08277b86cdbc34ae36d7c4d204fd838294": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4163. consistently set the bind address (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1333579 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/12 11:35 AM",
      "commitName": "48414b08277b86cdbc34ae36d7c4d204fd838294",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "19/04/12 1:33 PM",
      "commitNameOld": "df654cca49c12ab3fa8ec1e626da1bb562bbb6c1",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 13.92,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n   public void start() {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n         false)) {\n       refreshServiceAcls(conf, new RMPolicyProvider());\n     }\n \n     this.server.start();\n-    if (getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n-      String resolvedAddress \u003d\n-        this.server.getListenerAddress().getHostName() + \":\" + this.server.getListenerAddress().getPort();\n-      conf.set(YarnConfiguration.RM_ADMIN_ADDRESS, resolvedAddress);\n-    }\n+    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n+                           server.getListenerAddress());\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    conf.updateConnectAddr(YarnConfiguration.RM_ADMIN_ADDRESS,\n                           server.getListenerAddress());\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "df654cca49c12ab3fa8ec1e626da1bb562bbb6c1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3867. MiniMRYarn/MiniYarn uses fixed ports (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1328109 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/04/12 1:33 PM",
      "commitName": "df654cca49c12ab3fa8ec1e626da1bb562bbb6c1",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/04/12 11:46 AM",
      "commitNameOld": "32d511065a2612d37591f09e53eed8ec1488587d",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,24 @@\n   public void start() {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     \n     // Enable service authorization?\n     if (conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n         false)) {\n       refreshServiceAcls(conf, new RMPolicyProvider());\n     }\n \n     this.server.start();\n+    if (getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n+      String resolvedAddress \u003d\n+        this.server.getListenerAddress().getHostName() + \":\" + this.server.getListenerAddress().getPort();\n+      conf.set(YarnConfiguration.RM_ADMIN_ADDRESS, resolvedAddress);\n+    }\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    if (getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      String resolvedAddress \u003d\n        this.server.getListenerAddress().getHostName() + \":\" + this.server.getListenerAddress().getPort();\n      conf.set(YarnConfiguration.RM_ADMIN_ADDRESS, resolvedAddress);\n    }\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "d19cfe01642f9582e1fe5d567beb480399c37a01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2746. Yarn servers can\u0027t communicate with each other with hadoop.security.authorization set to true (acmurthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188522 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 11:07 PM",
      "commitName": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "21/10/11 2:36 PM",
      "commitNameOld": "4186121c08cb3d86f775d333c637459a4fb19d1b",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 3.35,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,19 @@\n   public void start() {\n     Configuration conf \u003d getConfig();\n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           conf, null,\n           conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n+    \n+    // Enable service authorization?\n+    if (conf.getBoolean(\n+        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n+        false)) {\n+      refreshServiceAcls(conf, new RMPolicyProvider());\n+    }\n+\n     this.server.start();\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    \n    // Enable service authorization?\n    if (conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n        false)) {\n      refreshServiceAcls(conf, new RMPolicyProvider());\n    }\n\n    this.server.start();\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "66137cf17cb4abccd6065819d97edc63c6510477": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3013. Removed YarnConfiguration.YARN_SECURITY_INFO and its usage as it doesn\u0027t affect security any more. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 4:43 AM",
      "commitName": "66137cf17cb4abccd6065819d97edc63c6510477",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/09/11 1:37 PM",
      "commitNameOld": "32f28e6994dc62b3165e501fd7b528b1fa9036d5",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 13.63,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,11 @@\n   public void start() {\n-    YarnRPC rpc \u003d YarnRPC.create(getConfig());\n-    Configuration serverConf \u003d new Configuration(getConfig());\n-    serverConf.setClass(\n-        YarnConfiguration.YARN_SECURITY_INFO,\n-        SchedulerSecurityInfo.class, SecurityInfo.class);\n+    Configuration conf \u003d getConfig();\n+    YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n-          serverConf, null,\n-          serverConf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n+          conf, null,\n+          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n               YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     this.server.start();\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    Configuration conf \u003d getConfig();\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          conf, null,\n          conf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    this.server.start();\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "06/09/11 6:24 PM",
      "commitNameOld": "cdfabf5ae289836968b3d296668593b9500b6f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.01,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void start() {\n     YarnRPC rpc \u003d YarnRPC.create(getConfig());\n     Configuration serverConf \u003d new Configuration(getConfig());\n     serverConf.setClass(\n         YarnConfiguration.YARN_SECURITY_INFO,\n         SchedulerSecurityInfo.class, SecurityInfo.class);\n     this.server \u003d\n       rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n           serverConf, null,\n-          serverConf.getInt(RMConfig.RM_ADMIN_THREADS, \n-              RMConfig.DEFAULT_RM_ADMIN_THREADS));\n+          serverConf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n+              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n     this.server.start();\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    YarnRPC rpc \u003d YarnRPC.create(getConfig());\n    Configuration serverConf \u003d new Configuration(getConfig());\n    serverConf.setClass(\n        YarnConfiguration.YARN_SECURITY_INFO,\n        SchedulerSecurityInfo.class, SecurityInfo.class);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          serverConf, null,\n          serverConf.getInt(YarnConfiguration.RM_ADMIN_CLIENT_THREAD_COUNT, \n              YarnConfiguration.DEFAULT_RM_ADMIN_CLIENT_THREAD_COUNT));\n    this.server.start();\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n    YarnRPC rpc \u003d YarnRPC.create(getConfig());\n    Configuration serverConf \u003d new Configuration(getConfig());\n    serverConf.setClass(\n        YarnConfiguration.YARN_SECURITY_INFO,\n        SchedulerSecurityInfo.class, SecurityInfo.class);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          serverConf, null,\n          serverConf.getInt(RMConfig.RM_ADMIN_THREADS, \n              RMConfig.DEFAULT_RM_ADMIN_THREADS));\n    this.server.start();\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+  public void start() {\n+    YarnRPC rpc \u003d YarnRPC.create(getConfig());\n+    Configuration serverConf \u003d new Configuration(getConfig());\n+    serverConf.setClass(\n+        YarnConfiguration.YARN_SECURITY_INFO,\n+        SchedulerSecurityInfo.class, SecurityInfo.class);\n+    this.server \u003d\n+      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n+          serverConf, null,\n+          serverConf.getInt(RMConfig.RM_ADMIN_THREADS, \n+              RMConfig.DEFAULT_RM_ADMIN_THREADS));\n+    this.server.start();\n+    super.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    YarnRPC rpc \u003d YarnRPC.create(getConfig());\n    Configuration serverConf \u003d new Configuration(getConfig());\n    serverConf.setClass(\n        YarnConfiguration.YARN_SECURITY_INFO,\n        SchedulerSecurityInfo.class, SecurityInfo.class);\n    this.server \u003d\n      rpc.getServer(RMAdminProtocol.class, this, masterServiceAddress,\n          serverConf, null,\n          serverConf.getInt(RMConfig.RM_ADMIN_THREADS, \n              RMConfig.DEFAULT_RM_ADMIN_THREADS));\n    this.server.start();\n    super.start();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}