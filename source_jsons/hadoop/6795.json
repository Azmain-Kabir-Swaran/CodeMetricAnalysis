{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageSerialization.java",
  "functionName": "writeINodeFile",
  "functionId": "writeINodeFile___file-INodeFile__out-DataOutput__writeUnderConstruction-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
  "functionStartLine": 193,
  "functionEndLine": 217,
  "numCommitsSeen": 62,
  "timeTaken": 2829,
  "changeHistory": [
    "49d5cff49011cc0878665204e22b5c832bc914ce",
    "4d0bc724f29b646e252f53d1c654a23e8526a4bf",
    "d0d75a833907f6cf723a42a007ca04e0004a8e52",
    "97f58955a6045b373ab73653bf26ab5922b00cf3"
  ],
  "changeHistoryShort": {
    "49d5cff49011cc0878665204e22b5c832bc914ce": "Ybodychange",
    "4d0bc724f29b646e252f53d1c654a23e8526a4bf": "Ybodychange",
    "d0d75a833907f6cf723a42a007ca04e0004a8e52": "Ybodychange",
    "97f58955a6045b373ab73653bf26ab5922b00cf3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49d5cff49011cc0878665204e22b5c832bc914ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8559. Erasure Coding: fix non-protobuf fsimage for striped blocks. (Jing Zhao via yliu)\n",
      "commitDate": "14/06/15 12:39 AM",
      "commitName": "49d5cff49011cc0878665204e22b5c832bc914ce",
      "commitAuthor": "yliu",
      "commitDateOld": "26/05/15 12:02 PM",
      "commitNameOld": "c9103e9cacc67a614940e32fa87c5dbc3daa60de",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 18.53,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   public static void writeINodeFile(INodeFile file, DataOutput out,\n       boolean writeUnderConstruction) throws IOException {\n     writeLocalName(file, out);\n     out.writeLong(file.getId());\n     out.writeShort(file.getFileReplication());\n     out.writeLong(file.getModificationTime());\n     out.writeLong(file.getAccessTime());\n     out.writeLong(file.getPreferredBlockSize());\n-    // whether the file has striped blocks\n-    out.writeBoolean(file.isStriped());\n+\n     writeBlocks(file.getBlocks(), out);\n     SnapshotFSImageFormat.saveFileDiffList(file, out);\n \n     if (writeUnderConstruction) {\n       if (file.isUnderConstruction()) {\n         out.writeBoolean(true);\n         final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n         writeString(uc.getClientName(), out);\n         writeString(uc.getClientMachine(), out);\n       } else {\n         out.writeBoolean(false);\n       }\n     }\n \n     writePermissionStatus(file, out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeINodeFile(INodeFile file, DataOutput out,\n      boolean writeUnderConstruction) throws IOException {\n    writeLocalName(file, out);\n    out.writeLong(file.getId());\n    out.writeShort(file.getFileReplication());\n    out.writeLong(file.getModificationTime());\n    out.writeLong(file.getAccessTime());\n    out.writeLong(file.getPreferredBlockSize());\n\n    writeBlocks(file.getBlocks(), out);\n    SnapshotFSImageFormat.saveFileDiffList(file, out);\n\n    if (writeUnderConstruction) {\n      if (file.isUnderConstruction()) {\n        out.writeBoolean(true);\n        final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n        writeString(uc.getClientName(), out);\n        writeString(uc.getClientMachine(), out);\n      } else {\n        out.writeBoolean(false);\n      }\n    }\n\n    writePermissionStatus(file, out);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "4d0bc724f29b646e252f53d1c654a23e8526a4bf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8077. Erasure coding: fix bugs in EC zone and symlinks. Contributed by Jing Zhao and Zhe Zhang.\n",
      "commitDate": "26/05/15 11:58 AM",
      "commitName": "4d0bc724f29b646e252f53d1c654a23e8526a4bf",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/05/15 11:43 AM",
      "commitNameOld": "d0d75a833907f6cf723a42a007ca04e0004a8e52",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public static void writeINodeFile(INodeFile file, DataOutput out,\n       boolean writeUnderConstruction) throws IOException {\n     writeLocalName(file, out);\n     out.writeLong(file.getId());\n     out.writeShort(file.getFileReplication());\n     out.writeLong(file.getModificationTime());\n     out.writeLong(file.getAccessTime());\n     out.writeLong(file.getPreferredBlockSize());\n     // whether the file has striped blocks\n-    out.writeBoolean(file.isWithStripedBlocks());\n+    out.writeBoolean(file.isStriped());\n     writeBlocks(file.getBlocks(), out);\n     SnapshotFSImageFormat.saveFileDiffList(file, out);\n \n     if (writeUnderConstruction) {\n       if (file.isUnderConstruction()) {\n         out.writeBoolean(true);\n         final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n         writeString(uc.getClientName(), out);\n         writeString(uc.getClientMachine(), out);\n       } else {\n         out.writeBoolean(false);\n       }\n     }\n \n     writePermissionStatus(file, out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeINodeFile(INodeFile file, DataOutput out,\n      boolean writeUnderConstruction) throws IOException {\n    writeLocalName(file, out);\n    out.writeLong(file.getId());\n    out.writeShort(file.getFileReplication());\n    out.writeLong(file.getModificationTime());\n    out.writeLong(file.getAccessTime());\n    out.writeLong(file.getPreferredBlockSize());\n    // whether the file has striped blocks\n    out.writeBoolean(file.isStriped());\n    writeBlocks(file.getBlocks(), out);\n    SnapshotFSImageFormat.saveFileDiffList(file, out);\n\n    if (writeUnderConstruction) {\n      if (file.isUnderConstruction()) {\n        out.writeBoolean(true);\n        final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n        writeString(uc.getClientName(), out);\n        writeString(uc.getClientMachine(), out);\n      } else {\n        out.writeBoolean(false);\n      }\n    }\n\n    writePermissionStatus(file, out);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "d0d75a833907f6cf723a42a007ca04e0004a8e52": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7827. Erasure Coding: support striped blocks in non-protobuf fsimage. Contributed by Hui Zheng.\n",
      "commitDate": "26/05/15 11:43 AM",
      "commitName": "d0d75a833907f6cf723a42a007ca04e0004a8e52",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "13/02/15 9:01 PM",
      "commitNameOld": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 101.57,
      "commitsBetweenForRepo": 959,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public static void writeINodeFile(INodeFile file, DataOutput out,\n       boolean writeUnderConstruction) throws IOException {\n     writeLocalName(file, out);\n     out.writeLong(file.getId());\n     out.writeShort(file.getFileReplication());\n     out.writeLong(file.getModificationTime());\n     out.writeLong(file.getAccessTime());\n     out.writeLong(file.getPreferredBlockSize());\n-\n+    // whether the file has striped blocks\n+    out.writeBoolean(file.isWithStripedBlocks());\n     writeBlocks(file.getBlocks(), out);\n     SnapshotFSImageFormat.saveFileDiffList(file, out);\n \n     if (writeUnderConstruction) {\n       if (file.isUnderConstruction()) {\n         out.writeBoolean(true);\n         final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n         writeString(uc.getClientName(), out);\n         writeString(uc.getClientMachine(), out);\n       } else {\n         out.writeBoolean(false);\n       }\n     }\n \n     writePermissionStatus(file, out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeINodeFile(INodeFile file, DataOutput out,\n      boolean writeUnderConstruction) throws IOException {\n    writeLocalName(file, out);\n    out.writeLong(file.getId());\n    out.writeShort(file.getFileReplication());\n    out.writeLong(file.getModificationTime());\n    out.writeLong(file.getAccessTime());\n    out.writeLong(file.getPreferredBlockSize());\n    // whether the file has striped blocks\n    out.writeBoolean(file.isWithStripedBlocks());\n    writeBlocks(file.getBlocks(), out);\n    SnapshotFSImageFormat.saveFileDiffList(file, out);\n\n    if (writeUnderConstruction) {\n      if (file.isUnderConstruction()) {\n        out.writeBoolean(true);\n        final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n        writeString(uc.getClientName(), out);\n        writeString(uc.getClientMachine(), out);\n      } else {\n        out.writeBoolean(false);\n      }\n    }\n\n    writePermissionStatus(file, out);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
      "extendedDetails": {}
    },
    "97f58955a6045b373ab73653bf26ab5922b00cf3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6293. Issues with OIV processing PB-based fsimages. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 6:15 PM",
      "commitName": "97f58955a6045b373ab73653bf26ab5922b00cf3",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,25 @@\n+  public static void writeINodeFile(INodeFile file, DataOutput out,\n+      boolean writeUnderConstruction) throws IOException {\n+    writeLocalName(file, out);\n+    out.writeLong(file.getId());\n+    out.writeShort(file.getFileReplication());\n+    out.writeLong(file.getModificationTime());\n+    out.writeLong(file.getAccessTime());\n+    out.writeLong(file.getPreferredBlockSize());\n+\n+    writeBlocks(file.getBlocks(), out);\n+    SnapshotFSImageFormat.saveFileDiffList(file, out);\n+\n+    if (writeUnderConstruction) {\n+      if (file.isUnderConstruction()) {\n+        out.writeBoolean(true);\n+        final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n+        writeString(uc.getClientName(), out);\n+        writeString(uc.getClientMachine(), out);\n+      } else {\n+        out.writeBoolean(false);\n+      }\n+    }\n+\n+    writePermissionStatus(file, out);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeINodeFile(INodeFile file, DataOutput out,\n      boolean writeUnderConstruction) throws IOException {\n    writeLocalName(file, out);\n    out.writeLong(file.getId());\n    out.writeShort(file.getFileReplication());\n    out.writeLong(file.getModificationTime());\n    out.writeLong(file.getAccessTime());\n    out.writeLong(file.getPreferredBlockSize());\n\n    writeBlocks(file.getBlocks(), out);\n    SnapshotFSImageFormat.saveFileDiffList(file, out);\n\n    if (writeUnderConstruction) {\n      if (file.isUnderConstruction()) {\n        out.writeBoolean(true);\n        final FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n        writeString(uc.getClientName(), out);\n        writeString(uc.getClientMachine(), out);\n      } else {\n        out.writeBoolean(false);\n      }\n    }\n\n    writePermissionStatus(file, out);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java"
    }
  }
}