{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "create",
  "functionId": "create___f-Path__permission-FsPermission__overwrite-boolean__bufferSize-int__replication-short__blockSize-long__progress-Progressable",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 484,
  "functionEndLine": 491,
  "numCommitsSeen": 214,
  "timeTaken": 8430,
  "changeHistory": [
    "1c030c6e58dc83152f933323bb7743ad47f5af27",
    "8767e4cde172b6e6070e3fd45325ede617b99343",
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
    "83cf475050dba27e72b4e399491638c670621175",
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "1c030c6e58dc83152f933323bb7743ad47f5af27": "Yfilerename",
    "8767e4cde172b6e6070e3fd45325ede617b99343": "Yreturntypechange",
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7": "Ybodychange",
    "83cf475050dba27e72b4e399491638c670621175": "Ybodychange",
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1c030c6e58dc83152f933323bb7743ad47f5af27": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8740. Move DistributedFileSystem to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "27/09/15 10:54 AM",
      "commitName": "1c030c6e58dc83152f933323bb7743ad47f5af27",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/09/15 1:42 AM",
      "commitNameOld": "f0f984e4e63d0dbafe93062a122ee051330db301",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n      boolean overwrite, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    return this.create(f, permission,\n        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n            : EnumSet.of(CreateFlag.CREATE), bufferSize, replication,\n        blockSize, progress, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "8767e4cde172b6e6070e3fd45325ede617b99343": {
      "type": "Yreturntypechange",
      "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/13 2:31 PM",
      "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "13/06/13 11:11 AM",
      "commitNameOld": "7e1744ccf9a9b5b035afbb182aad123a1d1d357f",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 28.14,
      "commitsBetweenForRepo": 172,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  public HdfsDataOutputStream create(Path f, FsPermission permission,\n+  public FSDataOutputStream create(Path f, FsPermission permission,\n       boolean overwrite, int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n     return this.create(f, permission,\n         overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n             : EnumSet.of(CreateFlag.CREATE), bufferSize, replication,\n         blockSize, progress, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n      boolean overwrite, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    return this.create(f, permission,\n        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n            : EnumSet.of(CreateFlag.CREATE), bufferSize, replication,\n        blockSize, progress, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldValue": "HdfsDataOutputStream",
        "newValue": "FSDataOutputStream"
      }
    },
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8240. Add a new API to allow users to specify a checksum type on FileSystem.create(..).  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374696 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/12 10:46 PM",
      "commitName": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "17/08/12 9:52 AM",
      "commitNameOld": "fccace6116713c85cd59a808c565ea39fb5d6944",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 1.54,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public HdfsDataOutputStream create(Path f, FsPermission permission,\n       boolean overwrite, int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n-    return create(f, permission,\n+    return this.create(f, permission,\n         overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n             : EnumSet.of(CreateFlag.CREATE), bufferSize, replication,\n-        blockSize, progress);\n+        blockSize, progress, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsDataOutputStream create(Path f, FsPermission permission,\n      boolean overwrite, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    return this.create(f, permission,\n        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n            : EnumSet.of(CreateFlag.CREATE), bufferSize, replication,\n        blockSize, progress, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "83cf475050dba27e72b4e399491638c670621175": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-744. Support hsync in HDFS. Contributed by Lars Hofhans\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1344419 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/12 12:10 PM",
      "commitName": "83cf475050dba27e72b4e399491638c670621175",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "26/04/12 2:50 PM",
      "commitNameOld": "1a76c82a31958aeb549b544fe81960a59b2a9d0b",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 33.89,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,8 @@\n   public HdfsDataOutputStream create(Path f, FsPermission permission,\n-    boolean overwrite, int bufferSize, short replication, long blockSize,\n-    Progressable progress) throws IOException {\n-    statistics.incrementWriteOps(1);\n-    final EnumSet\u003cCreateFlag\u003e cflags \u003d overwrite?\n-        EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n-        : EnumSet.of(CreateFlag.CREATE);\n-    final DFSOutputStream out \u003d dfs.create(getPathName(f), permission, cflags,\n-        replication, blockSize, progress, bufferSize);\n-    return new HdfsDataOutputStream(out, statistics);\n+      boolean overwrite, int bufferSize, short replication, long blockSize,\n+      Progressable progress) throws IOException {\n+    return create(f, permission,\n+        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n+            : EnumSet.of(CreateFlag.CREATE), bufferSize, replication,\n+        blockSize, progress);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsDataOutputStream create(Path f, FsPermission permission,\n      boolean overwrite, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    return create(f, permission,\n        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n            : EnumSet.of(CreateFlag.CREATE), bufferSize, replication,\n        blockSize, progress);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-3298. Add HdfsDataOutputStream as a public API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330064 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/12 4:39 PM",
      "commitName": "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-3298. Add HdfsDataOutputStream as a public API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330064 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/04/12 4:39 PM",
          "commitName": "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/04/12 1:33 PM",
          "commitNameOld": "706e861a859a247661b027f4e473814995556c2e",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n-  public FSDataOutputStream create(Path f, FsPermission permission,\n+  public HdfsDataOutputStream create(Path f, FsPermission permission,\n     boolean overwrite, int bufferSize, short replication, long blockSize,\n     Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n-    return new FSDataOutputStream(dfs.create(getPathName(f), permission,\n-        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n-            : EnumSet.of(CreateFlag.CREATE), replication, blockSize, progress,\n-        bufferSize), statistics);\n+    final EnumSet\u003cCreateFlag\u003e cflags \u003d overwrite?\n+        EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n+        : EnumSet.of(CreateFlag.CREATE);\n+    final DFSOutputStream out \u003d dfs.create(getPathName(f), permission, cflags,\n+        replication, blockSize, progress, bufferSize);\n+    return new HdfsDataOutputStream(out, statistics);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HdfsDataOutputStream create(Path f, FsPermission permission,\n    boolean overwrite, int bufferSize, short replication, long blockSize,\n    Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n    final EnumSet\u003cCreateFlag\u003e cflags \u003d overwrite?\n        EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n        : EnumSet.of(CreateFlag.CREATE);\n    final DFSOutputStream out \u003d dfs.create(getPathName(f), permission, cflags,\n        replication, blockSize, progress, bufferSize);\n    return new HdfsDataOutputStream(out, statistics);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {
            "oldValue": "FSDataOutputStream",
            "newValue": "HdfsDataOutputStream"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3298. Add HdfsDataOutputStream as a public API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330064 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/04/12 4:39 PM",
          "commitName": "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/04/12 1:33 PM",
          "commitNameOld": "706e861a859a247661b027f4e473814995556c2e",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n-  public FSDataOutputStream create(Path f, FsPermission permission,\n+  public HdfsDataOutputStream create(Path f, FsPermission permission,\n     boolean overwrite, int bufferSize, short replication, long blockSize,\n     Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n-    return new FSDataOutputStream(dfs.create(getPathName(f), permission,\n-        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n-            : EnumSet.of(CreateFlag.CREATE), replication, blockSize, progress,\n-        bufferSize), statistics);\n+    final EnumSet\u003cCreateFlag\u003e cflags \u003d overwrite?\n+        EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n+        : EnumSet.of(CreateFlag.CREATE);\n+    final DFSOutputStream out \u003d dfs.create(getPathName(f), permission, cflags,\n+        replication, blockSize, progress, bufferSize);\n+    return new HdfsDataOutputStream(out, statistics);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HdfsDataOutputStream create(Path f, FsPermission permission,\n    boolean overwrite, int bufferSize, short replication, long blockSize,\n    Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n    final EnumSet\u003cCreateFlag\u003e cflags \u003d overwrite?\n        EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n        : EnumSet.of(CreateFlag.CREATE);\n    final DFSOutputStream out \u003d dfs.create(getPathName(f), permission, cflags,\n        replication, blockSize, progress, bufferSize);\n    return new HdfsDataOutputStream(out, statistics);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n    boolean overwrite, int bufferSize, short replication, long blockSize,\n    Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n    return new FSDataOutputStream(dfs.create(getPathName(f), permission,\n        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n            : EnumSet.of(CreateFlag.CREATE), replication, blockSize, progress,\n        bufferSize), statistics);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n    boolean overwrite, int bufferSize, short replication, long blockSize,\n    Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n    return new FSDataOutputStream(dfs.create(getPathName(f), permission,\n        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n            : EnumSet.of(CreateFlag.CREATE), replication, blockSize, progress,\n        bufferSize), statistics);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,9 @@\n+  public FSDataOutputStream create(Path f, FsPermission permission,\n+    boolean overwrite, int bufferSize, short replication, long blockSize,\n+    Progressable progress) throws IOException {\n+    statistics.incrementWriteOps(1);\n+    return new FSDataOutputStream(dfs.create(getPathName(f), permission,\n+        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n+            : EnumSet.of(CreateFlag.CREATE), replication, blockSize, progress,\n+        bufferSize), statistics);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n    boolean overwrite, int bufferSize, short replication, long blockSize,\n    Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n    return new FSDataOutputStream(dfs.create(getPathName(f), permission,\n        overwrite ? EnumSet.of(CreateFlag.CREATE, CreateFlag.OVERWRITE)\n            : EnumSet.of(CreateFlag.CREATE), replication, blockSize, progress,\n        bufferSize), statistics);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}