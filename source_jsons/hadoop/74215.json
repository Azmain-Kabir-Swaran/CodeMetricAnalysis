{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LdapGroupsMapping.java",
  "functionName": "getRelativeDistinguishedName",
  "functionId": "getRelativeDistinguishedName___distinguishedName-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
  "functionStartLine": 394,
  "functionEndLine": 408,
  "numCommitsSeen": 29,
  "timeTaken": 822,
  "changeHistory": [
    "182fc1986a984ed0be6bed297390a830c2305af1"
  ],
  "changeHistoryShort": {
    "182fc1986a984ed0be6bed297390a830c2305af1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "182fc1986a984ed0be6bed297390a830c2305af1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12782. Faster LDAP group name resolution with ActiveDirectory. Contributed by Wei-Chiu Chuang\n",
      "commitDate": "19/05/16 7:15 AM",
      "commitName": "182fc1986a984ed0be6bed297390a830c2305af1",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,15 @@\n+  private String getRelativeDistinguishedName(String distinguishedName)\n+      throws NamingException {\n+    LdapName ldn \u003d new LdapName(distinguishedName);\n+    List\u003cRdn\u003e rdns \u003d ldn.getRdns();\n+    if (rdns.isEmpty()) {\n+      throw new NamingException(\"DN is empty\");\n+    }\n+    Rdn rdn \u003d rdns.get(rdns.size()-1);\n+    if (rdn.getType().equalsIgnoreCase(groupNameAttr)) {\n+      String groupName \u003d (String)rdn.getValue();\n+      return groupName;\n+    }\n+    throw new NamingException(\"Unable to find RDN: The DN \" +\n+    distinguishedName + \" is malformed.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getRelativeDistinguishedName(String distinguishedName)\n      throws NamingException {\n    LdapName ldn \u003d new LdapName(distinguishedName);\n    List\u003cRdn\u003e rdns \u003d ldn.getRdns();\n    if (rdns.isEmpty()) {\n      throw new NamingException(\"DN is empty\");\n    }\n    Rdn rdn \u003d rdns.get(rdns.size()-1);\n    if (rdn.getType().equalsIgnoreCase(groupNameAttr)) {\n      String groupName \u003d (String)rdn.getValue();\n      return groupName;\n    }\n    throw new NamingException(\"Unable to find RDN: The DN \" +\n    distinguishedName + \" is malformed.\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java"
    }
  }
}