{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLog.java",
  "functionName": "createJournal",
  "functionId": "createJournal___uri-URI",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
  "functionStartLine": 1837,
  "functionEndLine": 1862,
  "numCommitsSeen": 141,
  "timeTaken": 4419,
  "changeHistory": [
    "d699022fce756d25956d33e022100111aa0dd22e",
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
    "7accbabdee0b7619ff83514c173e815d290b33bf",
    "f39aac60e0b0c2cd4c82607c02501dde43afe02c",
    "d18e5b38447273b95d975c703df25fe5f679e006"
  ],
  "changeHistoryShort": {
    "d699022fce756d25956d33e022100111aa0dd22e": "Ymodifierchange",
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": "Ybodychange",
    "7accbabdee0b7619ff83514c173e815d290b33bf": "Ybodychange",
    "f39aac60e0b0c2cd4c82607c02501dde43afe02c": "Yintroduced",
    "d18e5b38447273b95d975c703df25fe5f679e006": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d699022fce756d25956d33e022100111aa0dd22e": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-13977. Override shouldForceSync in QuorumOutputStream to allow for proper auto-sync behavior. Contributed by Erik Krogen.\n",
      "commitDate": "23/08/19 11:33 AM",
      "commitName": "d699022fce756d25956d33e022100111aa0dd22e",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "22/08/19 10:44 PM",
      "commitNameOld": "abc8fde4caea0e197568ee28392c46f1ce0d42e1",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.53,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n-  private JournalManager createJournal(URI uri) {\n+  JournalManager createJournal(URI uri) {\n     Class\u003c? extends JournalManager\u003e clazz\n       \u003d getJournalClass(conf, uri.getScheme());\n \n     try {\n       Constructor\u003c? extends JournalManager\u003e cons\n         \u003d clazz.getConstructor(Configuration.class, URI.class,\n             NamespaceInfo.class, String.class);\n       String nameServiceId \u003d conf.get(DFSConfigKeys.DFS_NAMESERVICE_ID);\n       return cons.newInstance(conf, uri, storage.getNamespaceInfo(),\n           nameServiceId);\n     } catch (NoSuchMethodException ne) {\n       try {\n         Constructor\u003c? extends JournalManager\u003e cons\n             \u003d clazz.getConstructor(Configuration.class, URI.class,\n             NamespaceInfo.class);\n         return cons.newInstance(conf, uri, storage.getNamespaceInfo());\n       } catch (Exception e) {\n         throw new IllegalArgumentException(\"Unable to construct journal, \"\n             + uri, e);\n       }\n     } catch (Exception e) {\n       throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                          + uri, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  JournalManager createJournal(URI uri) {\n    Class\u003c? extends JournalManager\u003e clazz\n      \u003d getJournalClass(conf, uri.getScheme());\n\n    try {\n      Constructor\u003c? extends JournalManager\u003e cons\n        \u003d clazz.getConstructor(Configuration.class, URI.class,\n            NamespaceInfo.class, String.class);\n      String nameServiceId \u003d conf.get(DFSConfigKeys.DFS_NAMESERVICE_ID);\n      return cons.newInstance(conf, uri, storage.getNamespaceInfo(),\n          nameServiceId);\n    } catch (NoSuchMethodException ne) {\n      try {\n        Constructor\u003c? extends JournalManager\u003e cons\n            \u003d clazz.getConstructor(Configuration.class, URI.class,\n            NamespaceInfo.class);\n        return cons.newInstance(conf, uri, storage.getNamespaceInfo());\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"Unable to construct journal, \"\n            + uri, e);\n      }\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                         + uri, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
      "commitDate": "13/10/17 2:22 PM",
      "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "09/10/17 5:53 PM",
      "commitNameOld": "82cd85d8680912b8d268c875bd51598b20f3313c",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.85,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,26 @@\n   private JournalManager createJournal(URI uri) {\n     Class\u003c? extends JournalManager\u003e clazz\n       \u003d getJournalClass(conf, uri.getScheme());\n \n     try {\n       Constructor\u003c? extends JournalManager\u003e cons\n         \u003d clazz.getConstructor(Configuration.class, URI.class,\n+            NamespaceInfo.class, String.class);\n+      String nameServiceId \u003d conf.get(DFSConfigKeys.DFS_NAMESERVICE_ID);\n+      return cons.newInstance(conf, uri, storage.getNamespaceInfo(),\n+          nameServiceId);\n+    } catch (NoSuchMethodException ne) {\n+      try {\n+        Constructor\u003c? extends JournalManager\u003e cons\n+            \u003d clazz.getConstructor(Configuration.class, URI.class,\n             NamespaceInfo.class);\n-      return cons.newInstance(conf, uri, storage.getNamespaceInfo());\n+        return cons.newInstance(conf, uri, storage.getNamespaceInfo());\n+      } catch (Exception e) {\n+        throw new IllegalArgumentException(\"Unable to construct journal, \"\n+            + uri, e);\n+      }\n     } catch (Exception e) {\n       throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                          + uri, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private JournalManager createJournal(URI uri) {\n    Class\u003c? extends JournalManager\u003e clazz\n      \u003d getJournalClass(conf, uri.getScheme());\n\n    try {\n      Constructor\u003c? extends JournalManager\u003e cons\n        \u003d clazz.getConstructor(Configuration.class, URI.class,\n            NamespaceInfo.class, String.class);\n      String nameServiceId \u003d conf.get(DFSConfigKeys.DFS_NAMESERVICE_ID);\n      return cons.newInstance(conf, uri, storage.getNamespaceInfo(),\n          nameServiceId);\n    } catch (NoSuchMethodException ne) {\n      try {\n        Constructor\u003c? extends JournalManager\u003e cons\n            \u003d clazz.getConstructor(Configuration.class, URI.class,\n            NamespaceInfo.class);\n        return cons.newInstance(conf, uri, storage.getNamespaceInfo());\n      } catch (Exception e) {\n        throw new IllegalArgumentException(\"Unable to construct journal, \"\n            + uri, e);\n      }\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                         + uri, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "7accbabdee0b7619ff83514c173e815d290b33bf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3573. Supply NamespaceInfo when instantiating JournalManagers. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1356388 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/12 11:21 AM",
      "commitName": "7accbabdee0b7619ff83514c173e815d290b33bf",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/12 9:15 PM",
      "commitNameOld": "9947d8054c035c93c775908a37489efc1ed36dbd",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 20.59,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   private JournalManager createJournal(URI uri) {\n     Class\u003c? extends JournalManager\u003e clazz\n       \u003d getJournalClass(conf, uri.getScheme());\n \n     try {\n       Constructor\u003c? extends JournalManager\u003e cons\n-        \u003d clazz.getConstructor(Configuration.class, URI.class);\n-      return cons.newInstance(conf, uri);\n+        \u003d clazz.getConstructor(Configuration.class, URI.class,\n+            NamespaceInfo.class);\n+      return cons.newInstance(conf, uri, storage.getNamespaceInfo());\n     } catch (Exception e) {\n       throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                          + uri, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private JournalManager createJournal(URI uri) {\n    Class\u003c? extends JournalManager\u003e clazz\n      \u003d getJournalClass(conf, uri.getScheme());\n\n    try {\n      Constructor\u003c? extends JournalManager\u003e cons\n        \u003d clazz.getConstructor(Configuration.class, URI.class,\n            NamespaceInfo.class);\n      return cons.newInstance(conf, uri, storage.getNamespaceInfo());\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                         + uri, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "f39aac60e0b0c2cd4c82607c02501dde43afe02c": {
      "type": "Yintroduced",
      "commitMessage": "Merge trunk into branch.\n\nResolved conflicts generated by commit of HDFS-1580 in trunk:\n- made EditLogInputStream.isInProgress public\n- fixed trivial conflict in DFSConfigKeys\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1210666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/11 2:10 PM",
      "commitName": "f39aac60e0b0c2cd4c82607c02501dde43afe02c",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  private JournalManager createJournal(URI uri) {\n+    Class\u003c? extends JournalManager\u003e clazz\n+      \u003d getJournalClass(conf, uri.getScheme());\n+\n+    try {\n+      Constructor\u003c? extends JournalManager\u003e cons\n+        \u003d clazz.getConstructor(Configuration.class, URI.class);\n+      return cons.newInstance(conf, uri);\n+    } catch (Exception e) {\n+      throw new IllegalArgumentException(\"Unable to construct journal, \"\n+                                         + uri, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private JournalManager createJournal(URI uri) {\n    Class\u003c? extends JournalManager\u003e clazz\n      \u003d getJournalClass(conf, uri.getScheme());\n\n    try {\n      Constructor\u003c? extends JournalManager\u003e cons\n        \u003d clazz.getConstructor(Configuration.class, URI.class);\n      return cons.newInstance(conf, uri);\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                         + uri, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
    },
    "d18e5b38447273b95d975c703df25fe5f679e006": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1580. Add interface for generic Write Ahead Logging mechanisms. Contributed by Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1210602 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/11 12:10 PM",
      "commitName": "d18e5b38447273b95d975c703df25fe5f679e006",
      "commitAuthor": "Jitendra Nath Pandey",
      "diff": "@@ -0,0 +1,13 @@\n+  private JournalManager createJournal(URI uri) {\n+    Class\u003c? extends JournalManager\u003e clazz\n+      \u003d getJournalClass(conf, uri.getScheme());\n+\n+    try {\n+      Constructor\u003c? extends JournalManager\u003e cons\n+        \u003d clazz.getConstructor(Configuration.class, URI.class);\n+      return cons.newInstance(conf, uri);\n+    } catch (Exception e) {\n+      throw new IllegalArgumentException(\"Unable to construct journal, \"\n+                                         + uri, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private JournalManager createJournal(URI uri) {\n    Class\u003c? extends JournalManager\u003e clazz\n      \u003d getJournalClass(conf, uri.getScheme());\n\n    try {\n      Constructor\u003c? extends JournalManager\u003e cons\n        \u003d clazz.getConstructor(Configuration.class, URI.class);\n      return cons.newInstance(conf, uri);\n    } catch (Exception e) {\n      throw new IllegalArgumentException(\"Unable to construct journal, \"\n                                         + uri, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
    }
  }
}