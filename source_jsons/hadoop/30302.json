{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NavBlock.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java",
  "functionStartLine": 31,
  "functionEndLine": 74,
  "numCommitsSeen": 7,
  "timeTaken": 3084,
  "changeHistory": [
    "839e077faf4019d6efdcd89d95930023cd0b0a08",
    "a4aa1cb40504299d3401008fdabc795eafb28713",
    "1a78c0ff016097930edf68e8278f826b637e918c",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "76afd28862c1f27011273659a82cd45903a77170",
    "eee9facbbae52cb62dfca01b8bbe676b8e289863",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": "Ybodychange",
    "a4aa1cb40504299d3401008fdabc795eafb28713": "Ybodychange",
    "1a78c0ff016097930edf68e8278f826b637e918c": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "76afd28862c1f27011273659a82cd45903a77170": "Ybodychange",
    "eee9facbbae52cb62dfca01b8bbe676b8e289863": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "07/08/17 2:56 AM",
      "commitName": "839e077faf4019d6efdcd89d95930023cd0b0a08",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 8:15 PM",
      "commitNameOld": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.28,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,44 @@\n   public void render(Block html) {\n     boolean addErrorsAndWarningsLink \u003d false;\n-    Log log \u003d LogFactory.getLog(NavBlock.class);\n-    if (log instanceof Log4JLogger) {\n+    if (isLog4jLogger(NavBlock.class)) {\n       Log4jWarningErrorMetricsAppender appender \u003d\n           Log4jWarningErrorMetricsAppender.findAppender();\n       if (appender !\u003d null) {\n         addErrorsAndWarningsLink \u003d true;\n       }\n     }\n     Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n         div(\"#nav\").\n             h3(\"Application History\").\n                 ul().\n                     li().a(url(\"about\"), \"About\").\n         __().\n                     li().a(url(\"apps\"), \"Applications\").\n                         ul().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FINISHED.toString()),\n                                 YarnApplicationState.FINISHED.toString()).\n         __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FAILED.toString()),\n                                 YarnApplicationState.FAILED.toString()).\n         __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.KILLED.toString()),\n                                 YarnApplicationState.KILLED.toString()).\n         __().\n         __().\n         __().\n         __();\n \n     Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n     tools.li().a(\"/conf\", \"Configuration\").__()\n         .li().a(\"/logs\", \"Local logs\").__()\n         .li().a(\"/stacks\", \"Server stacks\").__()\n         .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n \n     if (addErrorsAndWarningsLink) {\n       tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n     }\n     tools.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void render(Block html) {\n    boolean addErrorsAndWarningsLink \u003d false;\n    if (isLog4jLogger(NavBlock.class)) {\n      Log4jWarningErrorMetricsAppender appender \u003d\n          Log4jWarningErrorMetricsAppender.findAppender();\n      if (appender !\u003d null) {\n        addErrorsAndWarningsLink \u003d true;\n      }\n    }\n    Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n        div(\"#nav\").\n            h3(\"Application History\").\n                ul().\n                    li().a(url(\"about\"), \"About\").\n        __().\n                    li().a(url(\"apps\"), \"Applications\").\n                        ul().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FINISHED.toString()),\n                                YarnApplicationState.FINISHED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FAILED.toString()),\n                                YarnApplicationState.FAILED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.KILLED.toString()),\n                                YarnApplicationState.KILLED.toString()).\n        __().\n        __().\n        __().\n        __();\n\n    Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n    tools.li().a(\"/conf\", \"Configuration\").__()\n        .li().a(\"/logs\", \"Local logs\").__()\n        .li().a(\"/stacks\", \"Server stacks\").__()\n        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n\n    if (addErrorsAndWarningsLink) {\n      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n    }\n    tools.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "a4aa1cb40504299d3401008fdabc795eafb28713": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\"\n\nThis reverts commit 1a78c0ff016097930edf68e8278f826b637e918c.\n",
      "commitDate": "31/07/17 8:15 PM",
      "commitName": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 6:53 PM",
      "commitNameOld": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   public void render(Block html) {\n     boolean addErrorsAndWarningsLink \u003d false;\n-    Logger log \u003d LoggerFactory.getLogger(NavBlock.class);\n+    Log log \u003d LogFactory.getLog(NavBlock.class);\n     if (log instanceof Log4JLogger) {\n       Log4jWarningErrorMetricsAppender appender \u003d\n           Log4jWarningErrorMetricsAppender.findAppender();\n       if (appender !\u003d null) {\n         addErrorsAndWarningsLink \u003d true;\n       }\n     }\n     Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n         div(\"#nav\").\n             h3(\"Application History\").\n                 ul().\n                     li().a(url(\"about\"), \"About\").\n         __().\n                     li().a(url(\"apps\"), \"Applications\").\n                         ul().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FINISHED.toString()),\n                                 YarnApplicationState.FINISHED.toString()).\n         __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FAILED.toString()),\n                                 YarnApplicationState.FAILED.toString()).\n         __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.KILLED.toString()),\n                                 YarnApplicationState.KILLED.toString()).\n         __().\n         __().\n         __().\n         __();\n \n     Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n     tools.li().a(\"/conf\", \"Configuration\").__()\n         .li().a(\"/logs\", \"Local logs\").__()\n         .li().a(\"/stacks\", \"Server stacks\").__()\n         .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n \n     if (addErrorsAndWarningsLink) {\n       tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n     }\n     tools.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void render(Block html) {\n    boolean addErrorsAndWarningsLink \u003d false;\n    Log log \u003d LogFactory.getLog(NavBlock.class);\n    if (log instanceof Log4JLogger) {\n      Log4jWarningErrorMetricsAppender appender \u003d\n          Log4jWarningErrorMetricsAppender.findAppender();\n      if (appender !\u003d null) {\n        addErrorsAndWarningsLink \u003d true;\n      }\n    }\n    Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n        div(\"#nav\").\n            h3(\"Application History\").\n                ul().\n                    li().a(url(\"about\"), \"About\").\n        __().\n                    li().a(url(\"apps\"), \"Applications\").\n                        ul().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FINISHED.toString()),\n                                YarnApplicationState.FINISHED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FAILED.toString()),\n                                YarnApplicationState.FAILED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.KILLED.toString()),\n                                YarnApplicationState.KILLED.toString()).\n        __().\n        __().\n        __().\n        __();\n\n    Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n    tools.li().a(\"/conf\", \"Configuration\").__()\n        .li().a(\"/logs\", \"Local logs\").__()\n        .li().a(\"/stacks\", \"Server stacks\").__()\n        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n\n    if (addErrorsAndWarningsLink) {\n      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n    }\n    tools.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "1a78c0ff016097930edf68e8278f826b637e918c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "31/07/17 6:53 PM",
      "commitName": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 4.07,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   public void render(Block html) {\n     boolean addErrorsAndWarningsLink \u003d false;\n-    Log log \u003d LogFactory.getLog(NavBlock.class);\n+    Logger log \u003d LoggerFactory.getLogger(NavBlock.class);\n     if (log instanceof Log4JLogger) {\n       Log4jWarningErrorMetricsAppender appender \u003d\n           Log4jWarningErrorMetricsAppender.findAppender();\n       if (appender !\u003d null) {\n         addErrorsAndWarningsLink \u003d true;\n       }\n     }\n     Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n         div(\"#nav\").\n             h3(\"Application History\").\n                 ul().\n                     li().a(url(\"about\"), \"About\").\n         __().\n                     li().a(url(\"apps\"), \"Applications\").\n                         ul().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FINISHED.toString()),\n                                 YarnApplicationState.FINISHED.toString()).\n         __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FAILED.toString()),\n                                 YarnApplicationState.FAILED.toString()).\n         __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.KILLED.toString()),\n                                 YarnApplicationState.KILLED.toString()).\n         __().\n         __().\n         __().\n         __();\n \n     Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n     tools.li().a(\"/conf\", \"Configuration\").__()\n         .li().a(\"/logs\", \"Local logs\").__()\n         .li().a(\"/stacks\", \"Server stacks\").__()\n         .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n \n     if (addErrorsAndWarningsLink) {\n       tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n     }\n     tools.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void render(Block html) {\n    boolean addErrorsAndWarningsLink \u003d false;\n    Logger log \u003d LoggerFactory.getLogger(NavBlock.class);\n    if (log instanceof Log4JLogger) {\n      Log4jWarningErrorMetricsAppender appender \u003d\n          Log4jWarningErrorMetricsAppender.findAppender();\n      if (appender !\u003d null) {\n        addErrorsAndWarningsLink \u003d true;\n      }\n    }\n    Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n        div(\"#nav\").\n            h3(\"Application History\").\n                ul().\n                    li().a(url(\"about\"), \"About\").\n        __().\n                    li().a(url(\"apps\"), \"Applications\").\n                        ul().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FINISHED.toString()),\n                                YarnApplicationState.FINISHED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FAILED.toString()),\n                                YarnApplicationState.FAILED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.KILLED.toString()),\n                                YarnApplicationState.KILLED.toString()).\n        __().\n        __().\n        __().\n        __();\n\n    Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n    tools.li().a(\"/conf\", \"Configuration\").__()\n        .li().a(\"/logs\", \"Local logs\").__()\n        .li().a(\"/stacks\", \"Server stacks\").__()\n        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n\n    if (addErrorsAndWarningsLink) {\n      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n    }\n    tools.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "18/05/15 1:17 PM",
      "commitNameOld": "76afd28862c1f27011273659a82cd45903a77170",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 801.16,
      "commitsBetweenForRepo": 5345,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   public void render(Block html) {\n     boolean addErrorsAndWarningsLink \u003d false;\n     Log log \u003d LogFactory.getLog(NavBlock.class);\n     if (log instanceof Log4JLogger) {\n       Log4jWarningErrorMetricsAppender appender \u003d\n           Log4jWarningErrorMetricsAppender.findAppender();\n       if (appender !\u003d null) {\n         addErrorsAndWarningsLink \u003d true;\n       }\n     }\n     Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n         div(\"#nav\").\n             h3(\"Application History\").\n                 ul().\n                     li().a(url(\"about\"), \"About\").\n-                    _().\n+        __().\n                     li().a(url(\"apps\"), \"Applications\").\n                         ul().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FINISHED.toString()),\n                                 YarnApplicationState.FINISHED.toString()).\n-                            _().\n+        __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FAILED.toString()),\n                                 YarnApplicationState.FAILED.toString()).\n-                            _().\n+        __().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.KILLED.toString()),\n                                 YarnApplicationState.KILLED.toString()).\n-                            _().\n-                        _().\n-                    _().\n-                _();\n+        __().\n+        __().\n+        __().\n+        __();\n \n     Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n-    tools.li().a(\"/conf\", \"Configuration\")._()\n-        .li().a(\"/logs\", \"Local logs\")._()\n-        .li().a(\"/stacks\", \"Server stacks\")._()\n-        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._();\n+    tools.li().a(\"/conf\", \"Configuration\").__()\n+        .li().a(\"/logs\", \"Local logs\").__()\n+        .li().a(\"/stacks\", \"Server stacks\").__()\n+        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n \n     if (addErrorsAndWarningsLink) {\n-      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\")._();\n+      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n     }\n-    tools._()._();\n+    tools.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void render(Block html) {\n    boolean addErrorsAndWarningsLink \u003d false;\n    Log log \u003d LogFactory.getLog(NavBlock.class);\n    if (log instanceof Log4JLogger) {\n      Log4jWarningErrorMetricsAppender appender \u003d\n          Log4jWarningErrorMetricsAppender.findAppender();\n      if (appender !\u003d null) {\n        addErrorsAndWarningsLink \u003d true;\n      }\n    }\n    Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n        div(\"#nav\").\n            h3(\"Application History\").\n                ul().\n                    li().a(url(\"about\"), \"About\").\n        __().\n                    li().a(url(\"apps\"), \"Applications\").\n                        ul().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FINISHED.toString()),\n                                YarnApplicationState.FINISHED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FAILED.toString()),\n                                YarnApplicationState.FAILED.toString()).\n        __().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.KILLED.toString()),\n                                YarnApplicationState.KILLED.toString()).\n        __().\n        __().\n        __().\n        __();\n\n    Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n    tools.li().a(\"/conf\", \"Configuration\").__()\n        .li().a(\"/logs\", \"Local logs\").__()\n        .li().a(\"/stacks\", \"Server stacks\").__()\n        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\").__();\n\n    if (addErrorsAndWarningsLink) {\n      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\").__();\n    }\n    tools.__().__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "76afd28862c1f27011273659a82cd45903a77170": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3541. Add version info on timeline service / generic history web UI and REST API. Contributed by Zhijie Shen\n",
      "commitDate": "18/05/15 1:17 PM",
      "commitName": "76afd28862c1f27011273659a82cd45903a77170",
      "commitAuthor": "Xuan",
      "commitDateOld": "24/04/15 9:41 AM",
      "commitNameOld": "eee9facbbae52cb62dfca01b8bbe676b8e289863",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 24.15,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,45 @@\n   public void render(Block html) {\n     boolean addErrorsAndWarningsLink \u003d false;\n     Log log \u003d LogFactory.getLog(NavBlock.class);\n     if (log instanceof Log4JLogger) {\n       Log4jWarningErrorMetricsAppender appender \u003d\n           Log4jWarningErrorMetricsAppender.findAppender();\n       if (appender !\u003d null) {\n         addErrorsAndWarningsLink \u003d true;\n       }\n     }\n     Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n         div(\"#nav\").\n             h3(\"Application History\").\n                 ul().\n+                    li().a(url(\"about\"), \"About\").\n+                    _().\n                     li().a(url(\"apps\"), \"Applications\").\n                         ul().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FINISHED.toString()),\n                                 YarnApplicationState.FINISHED.toString()).\n                             _().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FAILED.toString()),\n                                 YarnApplicationState.FAILED.toString()).\n                             _().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.KILLED.toString()),\n                                 YarnApplicationState.KILLED.toString()).\n                             _().\n                         _().\n                     _().\n                 _();\n \n     Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n     tools.li().a(\"/conf\", \"Configuration\")._()\n         .li().a(\"/logs\", \"Local logs\")._()\n         .li().a(\"/stacks\", \"Server stacks\")._()\n         .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._();\n \n     if (addErrorsAndWarningsLink) {\n       tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\")._();\n     }\n     tools._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void render(Block html) {\n    boolean addErrorsAndWarningsLink \u003d false;\n    Log log \u003d LogFactory.getLog(NavBlock.class);\n    if (log instanceof Log4JLogger) {\n      Log4jWarningErrorMetricsAppender appender \u003d\n          Log4jWarningErrorMetricsAppender.findAppender();\n      if (appender !\u003d null) {\n        addErrorsAndWarningsLink \u003d true;\n      }\n    }\n    Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n        div(\"#nav\").\n            h3(\"Application History\").\n                ul().\n                    li().a(url(\"about\"), \"About\").\n                    _().\n                    li().a(url(\"apps\"), \"Applications\").\n                        ul().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FINISHED.toString()),\n                                YarnApplicationState.FINISHED.toString()).\n                            _().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FAILED.toString()),\n                                YarnApplicationState.FAILED.toString()).\n                            _().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.KILLED.toString()),\n                                YarnApplicationState.KILLED.toString()).\n                            _().\n                        _().\n                    _().\n                _();\n\n    Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n    tools.li().a(\"/conf\", \"Configuration\")._()\n        .li().a(\"/logs\", \"Local logs\")._()\n        .li().a(\"/stacks\", \"Server stacks\")._()\n        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._();\n\n    if (addErrorsAndWarningsLink) {\n      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\")._();\n    }\n    tools._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "eee9facbbae52cb62dfca01b8bbe676b8e289863": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3511. Add errors and warnings page to ATS. Contributed by Varun Vasudev\n",
      "commitDate": "24/04/15 9:41 AM",
      "commitName": "eee9facbbae52cb62dfca01b8bbe676b8e289863",
      "commitAuthor": "Xuan",
      "commitDateOld": "25/01/14 8:51 PM",
      "commitNameOld": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 453.49,
      "commitsBetweenForRepo": 3718,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,43 @@\n   public void render(Block html) {\n-    html.\n+    boolean addErrorsAndWarningsLink \u003d false;\n+    Log log \u003d LogFactory.getLog(NavBlock.class);\n+    if (log instanceof Log4JLogger) {\n+      Log4jWarningErrorMetricsAppender appender \u003d\n+          Log4jWarningErrorMetricsAppender.findAppender();\n+      if (appender !\u003d null) {\n+        addErrorsAndWarningsLink \u003d true;\n+      }\n+    }\n+    Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n         div(\"#nav\").\n             h3(\"Application History\").\n                 ul().\n                     li().a(url(\"apps\"), \"Applications\").\n                         ul().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FINISHED.toString()),\n                                 YarnApplicationState.FINISHED.toString()).\n                             _().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.FAILED.toString()),\n                                 YarnApplicationState.FAILED.toString()).\n                             _().\n                             li().a(url(\"apps\",\n                                 YarnApplicationState.KILLED.toString()),\n                                 YarnApplicationState.KILLED.toString()).\n                             _().\n                         _().\n                     _().\n-                _().\n-            _();\n+                _();\n+\n+    Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n+    tools.li().a(\"/conf\", \"Configuration\")._()\n+        .li().a(\"/logs\", \"Local logs\")._()\n+        .li().a(\"/stacks\", \"Server stacks\")._()\n+        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._();\n+\n+    if (addErrorsAndWarningsLink) {\n+      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\")._();\n+    }\n+    tools._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void render(Block html) {\n    boolean addErrorsAndWarningsLink \u003d false;\n    Log log \u003d LogFactory.getLog(NavBlock.class);\n    if (log instanceof Log4JLogger) {\n      Log4jWarningErrorMetricsAppender appender \u003d\n          Log4jWarningErrorMetricsAppender.findAppender();\n      if (appender !\u003d null) {\n        addErrorsAndWarningsLink \u003d true;\n      }\n    }\n    Hamlet.DIV\u003cHamlet\u003e nav \u003d html.\n        div(\"#nav\").\n            h3(\"Application History\").\n                ul().\n                    li().a(url(\"apps\"), \"Applications\").\n                        ul().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FINISHED.toString()),\n                                YarnApplicationState.FINISHED.toString()).\n                            _().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FAILED.toString()),\n                                YarnApplicationState.FAILED.toString()).\n                            _().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.KILLED.toString()),\n                                YarnApplicationState.KILLED.toString()).\n                            _().\n                        _().\n                    _().\n                _();\n\n    Hamlet.UL\u003cHamlet.DIV\u003cHamlet\u003e\u003e tools \u003d nav.h3(\"Tools\").ul();\n    tools.li().a(\"/conf\", \"Configuration\")._()\n        .li().a(\"/logs\", \"Local logs\")._()\n        .li().a(\"/stacks\", \"Server stacks\")._()\n        .li().a(\"/jmx?qry\u003dHadoop:*\", \"Server metrics\")._();\n\n    if (addErrorsAndWarningsLink) {\n      tools.li().a(url(\"errors-and-warnings\"), \"Errors/Warnings\")._();\n    }\n    tools._()._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+  public void render(Block html) {\n+    html.\n+        div(\"#nav\").\n+            h3(\"Application History\").\n+                ul().\n+                    li().a(url(\"apps\"), \"Applications\").\n+                        ul().\n+                            li().a(url(\"apps\",\n+                                YarnApplicationState.FINISHED.toString()),\n+                                YarnApplicationState.FINISHED.toString()).\n+                            _().\n+                            li().a(url(\"apps\",\n+                                YarnApplicationState.FAILED.toString()),\n+                                YarnApplicationState.FAILED.toString()).\n+                            _().\n+                            li().a(url(\"apps\",\n+                                YarnApplicationState.KILLED.toString()),\n+                                YarnApplicationState.KILLED.toString()).\n+                            _().\n+                        _().\n+                    _().\n+                _().\n+            _();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void render(Block html) {\n    html.\n        div(\"#nav\").\n            h3(\"Application History\").\n                ul().\n                    li().a(url(\"apps\"), \"Applications\").\n                        ul().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FINISHED.toString()),\n                                YarnApplicationState.FINISHED.toString()).\n                            _().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.FAILED.toString()),\n                                YarnApplicationState.FAILED.toString()).\n                            _().\n                            li().a(url(\"apps\",\n                                YarnApplicationState.KILLED.toString()),\n                                YarnApplicationState.KILLED.toString()).\n                            _().\n                        _().\n                    _().\n                _().\n            _();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/NavBlock.java"
    }
  }
}