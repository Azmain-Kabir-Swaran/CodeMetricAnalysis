{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "dumpSchedulerLogs",
  "functionId": "dumpSchedulerLogs___time-String(annotations-@FormParam(RMWSConsts.TIME))__hsr-HttpServletRequest(annotations-@Context)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 414,
  "functionEndLine": 436,
  "numCommitsSeen": 141,
  "timeTaken": 4570,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
    "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
    "d27e9241e8676a0edb2d35453cac5f9495fcd605"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": "Yparametermetachange",
    "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2": "Ymultichange(Yparameterchange,Ybodychange)",
    "d27e9241e8676a0edb2d35453cac5f9495fcd605": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,23 @@\n   public String dumpSchedulerLogs(@FormParam(RMWSConsts.TIME) String time,\n       @Context HttpServletRequest hsr) throws IOException {\n-    init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n-    ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n-    if (aclsManager.areACLsEnabled()) {\n-      if (callerUGI \u003d\u003d null || !aclsManager.isAdmin(callerUGI)) {\n-        String msg \u003d \"Only admins can carry out this operation.\";\n-        throw new ForbiddenException(msg);\n-      }\n-    }\n+    initForWritableEndpoints(callerUGI, true);\n+\n     ResourceScheduler rs \u003d rm.getResourceScheduler();\n     int period \u003d Integer.parseInt(time);\n     if (period \u003c\u003d 0) {\n       throw new BadRequestException(\"Period must be greater than 0\");\n     }\n     final String logHierarchy \u003d\n         \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n     String logfile \u003d \"yarn-scheduler-debug.log\";\n     if (rs instanceof CapacityScheduler) {\n       logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n     } else if (rs instanceof FairScheduler) {\n       logfile \u003d \"yarn-fair-scheduler-debug.log\";\n     }\n     AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n     // time period is sent to us in seconds\n     dumper.dumpLogs(\"DEBUG\", period * 1000);\n     return \"Capacity scheduler logs are being created.\";\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String dumpSchedulerLogs(@FormParam(RMWSConsts.TIME) String time,\n      @Context HttpServletRequest hsr) throws IOException {\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    initForWritableEndpoints(callerUGI, true);\n\n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    int period \u003d Integer.parseInt(time);\n    if (period \u003c\u003d 0) {\n      throw new BadRequestException(\"Period must be greater than 0\");\n    }\n    final String logHierarchy \u003d\n        \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n    String logfile \u003d \"yarn-scheduler-debug.log\";\n    if (rs instanceof CapacityScheduler) {\n      logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n    } else if (rs instanceof FairScheduler) {\n      logfile \u003d \"yarn-fair-scheduler-debug.log\";\n    }\n    AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n    // time period is sent to us in seconds\n    dumper.dumpLogs(\"DEBUG\", period * 1000);\n    return \"Capacity scheduler logs are being created.\";\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": {
      "type": "Yparametermetachange",
      "commitMessage": "YARN-6634. [API] Refactor ResourceManager WebServices to make API explicit. (Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "07/06/17 1:41 PM",
      "commitName": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "08/12/16 2:23 AM",
      "commitNameOld": "74d0066d3392169bec872f438a0818e2f5323010",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 181.43,
      "commitsBetweenForRepo": 954,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n-  public String dumpSchedulerLogs(@FormParam(\"time\") String time,\n+  public String dumpSchedulerLogs(@FormParam(RMWSConsts.TIME) String time,\n       @Context HttpServletRequest hsr) throws IOException {\n     init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n     ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n     if (aclsManager.areACLsEnabled()) {\n       if (callerUGI \u003d\u003d null || !aclsManager.isAdmin(callerUGI)) {\n         String msg \u003d \"Only admins can carry out this operation.\";\n         throw new ForbiddenException(msg);\n       }\n     }\n     ResourceScheduler rs \u003d rm.getResourceScheduler();\n     int period \u003d Integer.parseInt(time);\n     if (period \u003c\u003d 0) {\n       throw new BadRequestException(\"Period must be greater than 0\");\n     }\n     final String logHierarchy \u003d\n         \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n     String logfile \u003d \"yarn-scheduler-debug.log\";\n     if (rs instanceof CapacityScheduler) {\n       logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n     } else if (rs instanceof FairScheduler) {\n       logfile \u003d \"yarn-fair-scheduler-debug.log\";\n     }\n     AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n     // time period is sent to us in seconds\n     dumper.dumpLogs(\"DEBUG\", period * 1000);\n     return \"Capacity scheduler logs are being created.\";\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String dumpSchedulerLogs(@FormParam(RMWSConsts.TIME) String time,\n      @Context HttpServletRequest hsr) throws IOException {\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n    if (aclsManager.areACLsEnabled()) {\n      if (callerUGI \u003d\u003d null || !aclsManager.isAdmin(callerUGI)) {\n        String msg \u003d \"Only admins can carry out this operation.\";\n        throw new ForbiddenException(msg);\n      }\n    }\n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    int period \u003d Integer.parseInt(time);\n    if (period \u003c\u003d 0) {\n      throw new BadRequestException(\"Period must be greater than 0\");\n    }\n    final String logHierarchy \u003d\n        \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n    String logfile \u003d \"yarn-scheduler-debug.log\";\n    if (rs instanceof CapacityScheduler) {\n      logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n    } else if (rs instanceof FairScheduler) {\n      logfile \u003d \"yarn-fair-scheduler-debug.log\";\n    }\n    AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n    // time period is sent to us in seconds\n    dumper.dumpLogs(\"DEBUG\", period * 1000);\n    return \"Capacity scheduler logs are being created.\";\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldValue": "[time-String(annotations-@FormParam(\"time\")), hsr-HttpServletRequest(annotations-@Context)]",
        "newValue": "[time-String(annotations-@FormParam(RMWSConsts.TIME)), hsr-HttpServletRequest(annotations-@Context)]"
      }
    },
    "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3517. RM web ui for dumping scheduler logs should be for admins only (Varun Vasudev via tgraves)\n",
      "commitDate": "29/04/15 2:25 PM",
      "commitName": "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
      "commitAuthor": "tgraves",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3517. RM web ui for dumping scheduler logs should be for admins only (Varun Vasudev via tgraves)\n",
          "commitDate": "29/04/15 2:25 PM",
          "commitName": "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
          "commitAuthor": "tgraves",
          "commitDateOld": "27/04/15 4:24 PM",
          "commitNameOld": "db1b674b50ddecf2774f4092d677c412722bdcb1",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 1.92,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,29 @@\n-  public String dumpSchedulerLogs(@FormParam(\"time\") String time) throws IOException {\n+  public String dumpSchedulerLogs(@FormParam(\"time\") String time,\n+      @Context HttpServletRequest hsr) throws IOException {\n     init();\n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n+    ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n+    if (aclsManager.areACLsEnabled()) {\n+      if (callerUGI \u003d\u003d null || !aclsManager.isAdmin(callerUGI)) {\n+        String msg \u003d \"Only admins can carry out this operation.\";\n+        throw new ForbiddenException(msg);\n+      }\n+    }\n     ResourceScheduler rs \u003d rm.getResourceScheduler();\n     int period \u003d Integer.parseInt(time);\n     if (period \u003c\u003d 0) {\n       throw new BadRequestException(\"Period must be greater than 0\");\n     }\n     final String logHierarchy \u003d\n         \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n     String logfile \u003d \"yarn-scheduler-debug.log\";\n     if (rs instanceof CapacityScheduler) {\n       logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n     } else if (rs instanceof FairScheduler) {\n       logfile \u003d \"yarn-fair-scheduler-debug.log\";\n     }\n     AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n     // time period is sent to us in seconds\n     dumper.dumpLogs(\"DEBUG\", period * 1000);\n     return \"Capacity scheduler logs are being created.\";\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String dumpSchedulerLogs(@FormParam(\"time\") String time,\n      @Context HttpServletRequest hsr) throws IOException {\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n    if (aclsManager.areACLsEnabled()) {\n      if (callerUGI \u003d\u003d null || !aclsManager.isAdmin(callerUGI)) {\n        String msg \u003d \"Only admins can carry out this operation.\";\n        throw new ForbiddenException(msg);\n      }\n    }\n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    int period \u003d Integer.parseInt(time);\n    if (period \u003c\u003d 0) {\n      throw new BadRequestException(\"Period must be greater than 0\");\n    }\n    final String logHierarchy \u003d\n        \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n    String logfile \u003d \"yarn-scheduler-debug.log\";\n    if (rs instanceof CapacityScheduler) {\n      logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n    } else if (rs instanceof FairScheduler) {\n      logfile \u003d \"yarn-fair-scheduler-debug.log\";\n    }\n    AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n    // time period is sent to us in seconds\n    dumper.dumpLogs(\"DEBUG\", period * 1000);\n    return \"Capacity scheduler logs are being created.\";\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "[time-String(annotations-@FormParam(\"time\"))]",
            "newValue": "[time-String(annotations-@FormParam(\"time\")), hsr-HttpServletRequest(annotations-@Context)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3517. RM web ui for dumping scheduler logs should be for admins only (Varun Vasudev via tgraves)\n",
          "commitDate": "29/04/15 2:25 PM",
          "commitName": "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
          "commitAuthor": "tgraves",
          "commitDateOld": "27/04/15 4:24 PM",
          "commitNameOld": "db1b674b50ddecf2774f4092d677c412722bdcb1",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 1.92,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,29 @@\n-  public String dumpSchedulerLogs(@FormParam(\"time\") String time) throws IOException {\n+  public String dumpSchedulerLogs(@FormParam(\"time\") String time,\n+      @Context HttpServletRequest hsr) throws IOException {\n     init();\n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n+    ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n+    if (aclsManager.areACLsEnabled()) {\n+      if (callerUGI \u003d\u003d null || !aclsManager.isAdmin(callerUGI)) {\n+        String msg \u003d \"Only admins can carry out this operation.\";\n+        throw new ForbiddenException(msg);\n+      }\n+    }\n     ResourceScheduler rs \u003d rm.getResourceScheduler();\n     int period \u003d Integer.parseInt(time);\n     if (period \u003c\u003d 0) {\n       throw new BadRequestException(\"Period must be greater than 0\");\n     }\n     final String logHierarchy \u003d\n         \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n     String logfile \u003d \"yarn-scheduler-debug.log\";\n     if (rs instanceof CapacityScheduler) {\n       logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n     } else if (rs instanceof FairScheduler) {\n       logfile \u003d \"yarn-fair-scheduler-debug.log\";\n     }\n     AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n     // time period is sent to us in seconds\n     dumper.dumpLogs(\"DEBUG\", period * 1000);\n     return \"Capacity scheduler logs are being created.\";\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String dumpSchedulerLogs(@FormParam(\"time\") String time,\n      @Context HttpServletRequest hsr) throws IOException {\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    ApplicationACLsManager aclsManager \u003d rm.getApplicationACLsManager();\n    if (aclsManager.areACLsEnabled()) {\n      if (callerUGI \u003d\u003d null || !aclsManager.isAdmin(callerUGI)) {\n        String msg \u003d \"Only admins can carry out this operation.\";\n        throw new ForbiddenException(msg);\n      }\n    }\n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    int period \u003d Integer.parseInt(time);\n    if (period \u003c\u003d 0) {\n      throw new BadRequestException(\"Period must be greater than 0\");\n    }\n    final String logHierarchy \u003d\n        \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n    String logfile \u003d \"yarn-scheduler-debug.log\";\n    if (rs instanceof CapacityScheduler) {\n      logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n    } else if (rs instanceof FairScheduler) {\n      logfile \u003d \"yarn-fair-scheduler-debug.log\";\n    }\n    AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n    // time period is sent to us in seconds\n    dumper.dumpLogs(\"DEBUG\", period * 1000);\n    return \"Capacity scheduler logs are being created.\";\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "d27e9241e8676a0edb2d35453cac5f9495fcd605": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3294. Allow dumping of Capacity Scheduler debug logs via web UI for\na fixed time period. Contributed by Varun Vasudev\n",
      "commitDate": "07/04/15 9:52 AM",
      "commitName": "d27e9241e8676a0edb2d35453cac5f9495fcd605",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,20 @@\n+  public String dumpSchedulerLogs(@FormParam(\"time\") String time) throws IOException {\n+    init();\n+    ResourceScheduler rs \u003d rm.getResourceScheduler();\n+    int period \u003d Integer.parseInt(time);\n+    if (period \u003c\u003d 0) {\n+      throw new BadRequestException(\"Period must be greater than 0\");\n+    }\n+    final String logHierarchy \u003d\n+        \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n+    String logfile \u003d \"yarn-scheduler-debug.log\";\n+    if (rs instanceof CapacityScheduler) {\n+      logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n+    } else if (rs instanceof FairScheduler) {\n+      logfile \u003d \"yarn-fair-scheduler-debug.log\";\n+    }\n+    AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n+    // time period is sent to us in seconds\n+    dumper.dumpLogs(\"DEBUG\", period * 1000);\n+    return \"Capacity scheduler logs are being created.\";\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String dumpSchedulerLogs(@FormParam(\"time\") String time) throws IOException {\n    init();\n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    int period \u003d Integer.parseInt(time);\n    if (period \u003c\u003d 0) {\n      throw new BadRequestException(\"Period must be greater than 0\");\n    }\n    final String logHierarchy \u003d\n        \"org.apache.hadoop.yarn.server.resourcemanager.scheduler\";\n    String logfile \u003d \"yarn-scheduler-debug.log\";\n    if (rs instanceof CapacityScheduler) {\n      logfile \u003d \"yarn-capacity-scheduler-debug.log\";\n    } else if (rs instanceof FairScheduler) {\n      logfile \u003d \"yarn-fair-scheduler-debug.log\";\n    }\n    AdHocLogDumper dumper \u003d new AdHocLogDumper(logHierarchy, logfile);\n    // time period is sent to us in seconds\n    dumper.dumpLogs(\"DEBUG\", period * 1000);\n    return \"Capacity scheduler logs are being created.\";\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}