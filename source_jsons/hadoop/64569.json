{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "makeQualified",
  "functionId": "makeQualified___path-Path(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 1006,
  "functionEndLine": 1023,
  "numCommitsSeen": 141,
  "timeTaken": 972,
  "changeHistory": [
    "0a9b3c98b160f2cf825ea6e8422ce093a8ae7cb3"
  ],
  "changeHistoryShort": {
    "0a9b3c98b160f2cf825ea6e8422ce093a8ae7cb3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a9b3c98b160f2cf825ea6e8422ce093a8ae7cb3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15430. hadoop fs -mkdir -p path-ending-with-slash/ fails with s3guard (#1646)\n\n\r\nContributed by Steve Loughran\r\n\r\n* move qualify logic to S3AFileSystem.makeQualified()\r\n* make S3AFileSystem.qualify() a private redirect to that\r\n* ITestS3GuardFsShell turned off\r\n",
      "commitDate": "12/03/20 7:13 AM",
      "commitName": "0a9b3c98b160f2cf825ea6e8422ce093a8ae7cb3",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,18 @@\n+  public Path makeQualified(final Path path) {\n+    Path q \u003d super.makeQualified(path);\n+    if (!q.isRoot()) {\n+      String urlString \u003d q.toUri().toString();\n+      if (urlString.endsWith(Path.SEPARATOR)) {\n+        // this is a path which needs root stripping off to avoid\n+        // confusion, See HADOOP-15430\n+        LOG.debug(\"Stripping trailing \u0027/\u0027 from {}\", q);\n+        // deal with an empty \"/\" at the end by mapping to the parent and\n+        // creating a new path from it\n+        q \u003d new Path(urlString.substring(0, urlString.length() - 1));\n+      }\n+    }\n+    if (!q.isRoot() \u0026\u0026 q.getName().isEmpty()) {\n+      q \u003d q.getParent();\n+    }\n+    return q;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Path makeQualified(final Path path) {\n    Path q \u003d super.makeQualified(path);\n    if (!q.isRoot()) {\n      String urlString \u003d q.toUri().toString();\n      if (urlString.endsWith(Path.SEPARATOR)) {\n        // this is a path which needs root stripping off to avoid\n        // confusion, See HADOOP-15430\n        LOG.debug(\"Stripping trailing \u0027/\u0027 from {}\", q);\n        // deal with an empty \"/\" at the end by mapping to the parent and\n        // creating a new path from it\n        q \u003d new Path(urlString.substring(0, urlString.length() - 1));\n      }\n    }\n    if (!q.isRoot() \u0026\u0026 q.getName().isEmpty()) {\n      q \u003d q.getParent();\n    }\n    return q;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}