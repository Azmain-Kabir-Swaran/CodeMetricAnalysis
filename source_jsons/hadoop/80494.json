{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystem.java",
  "functionName": "closeAll",
  "functionId": "closeAll___onlyAutomatic-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
  "functionStartLine": 3526,
  "functionEndLine": 3558,
  "numCommitsSeen": 189,
  "timeTaken": 5382,
  "changeHistory": [
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
    "34117325b29f0f1bdbe21343e7fd07e9ad0af907",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": "Ybodychange",
    "34117325b29f0f1bdbe21343e7fd07e9ad0af907": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58": "Ymultichange(Yparameterchange,Ybodychange)",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
      "commitDate": "23/11/16 4:42 PM",
      "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "16/11/16 8:08 PM",
      "commitNameOld": "aab9737a058c0bdeeb17c173e530b7e571315a56",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 6.86,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n-      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n+      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003c\u003e();\n \n       // Make a copy of the keys in the map since we\u0027ll be modifying\n       // the map while iterating over it, which isn\u0027t safe.\n-      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n+      List\u003cKey\u003e keys \u003d new ArrayList\u003c\u003e();\n       keys.addAll(map.keySet());\n \n       for (Key key : keys) {\n         final FileSystem fs \u003d map.get(key);\n \n         if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n           continue;\n         }\n \n         //remove from cache\n         map.remove(key);\n         toAutoClose.remove(key);\n \n         if (fs !\u003d null) {\n           try {\n             fs.close();\n           }\n           catch(IOException ioe) {\n             exceptions.add(ioe);\n           }\n         }\n       }\n \n       if (!exceptions.isEmpty()) {\n         throw MultipleIOException.createIOException(exceptions);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003c\u003e();\n\n      // Make a copy of the keys in the map since we\u0027ll be modifying\n      // the map while iterating over it, which isn\u0027t safe.\n      List\u003cKey\u003e keys \u003d new ArrayList\u003c\u003e();\n      keys.addAll(map.keySet());\n\n      for (Key key : keys) {\n        final FileSystem fs \u003d map.get(key);\n\n        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n          continue;\n        }\n\n        //remove from cache\n        map.remove(key);\n        toAutoClose.remove(key);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "34117325b29f0f1bdbe21343e7fd07e9ad0af907": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11659. o.a.h.FileSystem.Cache#remove should use a single hash map lookup. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "17/03/15 11:43 PM",
      "commitName": "34117325b29f0f1bdbe21343e7fd07e9ad0af907",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n       List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n \n       // Make a copy of the keys in the map since we\u0027ll be modifying\n       // the map while iterating over it, which isn\u0027t safe.\n       List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n       keys.addAll(map.keySet());\n \n       for (Key key : keys) {\n         final FileSystem fs \u003d map.get(key);\n \n         if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n           continue;\n         }\n \n         //remove from cache\n-        remove(key, fs);\n+        map.remove(key);\n+        toAutoClose.remove(key);\n \n         if (fs !\u003d null) {\n           try {\n             fs.close();\n           }\n           catch(IOException ioe) {\n             exceptions.add(ioe);\n           }\n         }\n       }\n \n       if (!exceptions.isEmpty()) {\n         throw MultipleIOException.createIOException(exceptions);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n\n      // Make a copy of the keys in the map since we\u0027ll be modifying\n      // the map while iterating over it, which isn\u0027t safe.\n      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n      keys.addAll(map.keySet());\n\n      for (Key key : keys) {\n        final FileSystem fs \u003d map.get(key);\n\n        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n          continue;\n        }\n\n        //remove from cache\n        map.remove(key);\n        toAutoClose.remove(key);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n\n      // Make a copy of the keys in the map since we\u0027ll be modifying\n      // the map while iterating over it, which isn\u0027t safe.\n      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n      keys.addAll(map.keySet());\n\n      for (Key key : keys) {\n        final FileSystem fs \u003d map.get(key);\n\n        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n          continue;\n        }\n\n        //remove from cache\n        remove(key, fs);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n\n      // Make a copy of the keys in the map since we\u0027ll be modifying\n      // the map while iterating over it, which isn\u0027t safe.\n      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n      keys.addAll(map.keySet());\n\n      for (Key key : keys) {\n        final FileSystem fs \u003d map.get(key);\n\n        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n          continue;\n        }\n\n        //remove from cache\n        remove(key, fs);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n\n      // Make a copy of the keys in the map since we\u0027ll be modifying\n      // the map while iterating over it, which isn\u0027t safe.\n      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n      keys.addAll(map.keySet());\n\n      for (Key key : keys) {\n        final FileSystem fs \u003d map.get(key);\n\n        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n          continue;\n        }\n\n        //remove from cache\n        remove(key, fs);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
      "path": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Merged src/core, src/test/core, src/contrib/eclipse-plugin, and\nsrc/contrib/ec2 from trunk 776174:784663\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@784965 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/09 1:28 PM",
      "commitName": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthor": "Owen O\u0027Malley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Merged src/core, src/test/core, src/contrib/eclipse-plugin, and\nsrc/contrib/ec2 from trunk 776174:784663\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@784965 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/06/09 1:28 PM",
          "commitName": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
          "commitAuthor": "Owen O\u0027Malley",
          "commitDateOld": "18/05/09 9:20 PM",
          "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 27.67,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-    synchronized void closeAll() throws IOException {\n+    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n       List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n-      for(; !map.isEmpty(); ) {\n-        Map.Entry\u003cKey, FileSystem\u003e e \u003d map.entrySet().iterator().next();\n-        final Key key \u003d e.getKey();\n-        final FileSystem fs \u003d e.getValue();\n+\n+      // Make a copy of the keys in the map since we\u0027ll be modifying\n+      // the map while iterating over it, which isn\u0027t safe.\n+      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n+      keys.addAll(map.keySet());\n+\n+      for (Key key : keys) {\n+        final FileSystem fs \u003d map.get(key);\n+\n+        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n+          continue;\n+        }\n \n         //remove from cache\n         remove(key, fs);\n \n         if (fs !\u003d null) {\n           try {\n             fs.close();\n           }\n           catch(IOException ioe) {\n             exceptions.add(ioe);\n           }\n         }\n       }\n \n       if (!exceptions.isEmpty()) {\n         throw MultipleIOException.createIOException(exceptions);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n\n      // Make a copy of the keys in the map since we\u0027ll be modifying\n      // the map while iterating over it, which isn\u0027t safe.\n      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n      keys.addAll(map.keySet());\n\n      for (Key key : keys) {\n        final FileSystem fs \u003d map.get(key);\n\n        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n          continue;\n        }\n\n        //remove from cache\n        remove(key, fs);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
          "path": "src/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[onlyAutomatic-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Merged src/core, src/test/core, src/contrib/eclipse-plugin, and\nsrc/contrib/ec2 from trunk 776174:784663\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@784965 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/06/09 1:28 PM",
          "commitName": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
          "commitAuthor": "Owen O\u0027Malley",
          "commitDateOld": "18/05/09 9:20 PM",
          "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 27.67,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-    synchronized void closeAll() throws IOException {\n+    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n       List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n-      for(; !map.isEmpty(); ) {\n-        Map.Entry\u003cKey, FileSystem\u003e e \u003d map.entrySet().iterator().next();\n-        final Key key \u003d e.getKey();\n-        final FileSystem fs \u003d e.getValue();\n+\n+      // Make a copy of the keys in the map since we\u0027ll be modifying\n+      // the map while iterating over it, which isn\u0027t safe.\n+      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n+      keys.addAll(map.keySet());\n+\n+      for (Key key : keys) {\n+        final FileSystem fs \u003d map.get(key);\n+\n+        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n+          continue;\n+        }\n \n         //remove from cache\n         remove(key, fs);\n \n         if (fs !\u003d null) {\n           try {\n             fs.close();\n           }\n           catch(IOException ioe) {\n             exceptions.add(ioe);\n           }\n         }\n       }\n \n       if (!exceptions.isEmpty()) {\n         throw MultipleIOException.createIOException(exceptions);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized void closeAll(boolean onlyAutomatic) throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n\n      // Make a copy of the keys in the map since we\u0027ll be modifying\n      // the map while iterating over it, which isn\u0027t safe.\n      List\u003cKey\u003e keys \u003d new ArrayList\u003cKey\u003e();\n      keys.addAll(map.keySet());\n\n      for (Key key : keys) {\n        final FileSystem fs \u003d map.get(key);\n\n        if (onlyAutomatic \u0026\u0026 !toAutoClose.contains(key)) {\n          continue;\n        }\n\n        //remove from cache\n        remove(key, fs);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
          "path": "src/java/org/apache/hadoop/fs/FileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,24 @@\n+    synchronized void closeAll() throws IOException {\n+      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n+      for(; !map.isEmpty(); ) {\n+        Map.Entry\u003cKey, FileSystem\u003e e \u003d map.entrySet().iterator().next();\n+        final Key key \u003d e.getKey();\n+        final FileSystem fs \u003d e.getValue();\n+\n+        //remove from cache\n+        remove(key, fs);\n+\n+        if (fs !\u003d null) {\n+          try {\n+            fs.close();\n+          }\n+          catch(IOException ioe) {\n+            exceptions.add(ioe);\n+          }\n+        }\n+      }\n+\n+      if (!exceptions.isEmpty()) {\n+        throw MultipleIOException.createIOException(exceptions);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized void closeAll() throws IOException {\n      List\u003cIOException\u003e exceptions \u003d new ArrayList\u003cIOException\u003e();\n      for(; !map.isEmpty(); ) {\n        Map.Entry\u003cKey, FileSystem\u003e e \u003d map.entrySet().iterator().next();\n        final Key key \u003d e.getKey();\n        final FileSystem fs \u003d e.getValue();\n\n        //remove from cache\n        remove(key, fs);\n\n        if (fs !\u003d null) {\n          try {\n            fs.close();\n          }\n          catch(IOException ioe) {\n            exceptions.add(ioe);\n          }\n        }\n      }\n\n      if (!exceptions.isEmpty()) {\n        throw MultipleIOException.createIOException(exceptions);\n      }\n    }",
      "path": "src/java/org/apache/hadoop/fs/FileSystem.java"
    }
  }
}