{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BackupNode.java",
  "functionName": "registerWith",
  "functionId": "registerWith___nsInfo-NamespaceInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
  "functionStartLine": 368,
  "functionEndLine": 408,
  "numCommitsSeen": 57,
  "timeTaken": 5605,
  "changeHistory": [
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
    "5694c3404016b07d285c54e0f440317df5971391",
    "6df36b58e1a393d84d1f95387e2ebe45e66b1db7",
    "520d2502c52ec60f8ba66d6bd8b7c812e2941bba",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "6c0cb4d15179103d4f83fe5b2f8d8f6a05f3a789",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de": "Ybodychange",
    "5694c3404016b07d285c54e0f440317df5971391": "Ybodychange",
    "6df36b58e1a393d84d1f95387e2ebe45e66b1db7": "Ybodychange",
    "520d2502c52ec60f8ba66d6bd8b7c812e2941bba": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ybodychange",
    "6c0cb4d15179103d4f83fe5b2f8d8f6a05f3a789": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 12:01 PM",
      "commitName": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "06/12/13 10:01 AM",
      "commitNameOld": "045dc880e13271737b3cf316296e92fb95806663",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 50.08,
      "commitsBetweenForRepo": 229,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private void registerWith(NamespaceInfo nsInfo) throws IOException {\n     BackupImage bnImage \u003d (BackupImage)getFSImage();\n     NNStorage storage \u003d bnImage.getStorage();\n     // verify namespaceID\n     if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n       storage.setStorageInfo(nsInfo);\n       storage.setBlockPoolID(nsInfo.getBlockPoolID());\n       storage.setClusterID(nsInfo.getClusterID());\n     } else {\n       nsInfo.validateStorage(storage);\n     }\n-    bnImage.initEditLog();\n+    bnImage.initEditLog(StartupOption.REGULAR);\n     setRegistration();\n     NamenodeRegistration nnReg \u003d null;\n     while(!isStopRequested()) {\n       try {\n         nnReg \u003d namenode.registerSubordinateNamenode(getRegistration());\n         break;\n       } catch(SocketTimeoutException e) {  // name-node is busy\n         LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n         try {\n           Thread.sleep(1000);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"Encountered exception \", e);\n         }\n       }\n     }\n \n     String msg \u003d null;\n     if(nnReg \u003d\u003d null) // consider as a rejection\n       msg \u003d \"Registration rejected by \" + nnRpcAddress;\n     else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n       msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n     }\n     if(msg !\u003d null) {\n       msg +\u003d \". Shutting down.\";\n       LOG.error(msg);\n       throw new IOException(msg); // stop the node\n     }\n     nnRpcAddress \u003d nnReg.getAddress();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    NNStorage storage \u003d bnImage.getStorage();\n    // verify namespaceID\n    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n      storage.setStorageInfo(nsInfo);\n      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n      storage.setClusterID(nsInfo.getClusterID());\n    } else {\n      nsInfo.validateStorage(storage);\n    }\n    bnImage.initEditLog(StartupOption.REGULAR);\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.registerSubordinateNamenode(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"Encountered exception \", e);\n        }\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {}
    },
    "5694c3404016b07d285c54e0f440317df5971391": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4866. Protocol buffer support cannot compile under C. Contributed by Arpit Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493300 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/06/13 8:52 PM",
      "commitName": "5694c3404016b07d285c54e0f440317df5971391",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "02/12/12 3:17 PM",
      "commitNameOld": "cbed126eec1f1a1bccce6ad77005cbaa0bf816d4",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 194.19,
      "commitsBetweenForRepo": 1098,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private void registerWith(NamespaceInfo nsInfo) throws IOException {\n     BackupImage bnImage \u003d (BackupImage)getFSImage();\n     NNStorage storage \u003d bnImage.getStorage();\n     // verify namespaceID\n     if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n       storage.setStorageInfo(nsInfo);\n       storage.setBlockPoolID(nsInfo.getBlockPoolID());\n       storage.setClusterID(nsInfo.getClusterID());\n     } else {\n       nsInfo.validateStorage(storage);\n     }\n     bnImage.initEditLog();\n     setRegistration();\n     NamenodeRegistration nnReg \u003d null;\n     while(!isStopRequested()) {\n       try {\n-        nnReg \u003d namenode.register(getRegistration());\n+        nnReg \u003d namenode.registerSubordinateNamenode(getRegistration());\n         break;\n       } catch(SocketTimeoutException e) {  // name-node is busy\n         LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n         try {\n           Thread.sleep(1000);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"Encountered exception \", e);\n         }\n       }\n     }\n \n     String msg \u003d null;\n     if(nnReg \u003d\u003d null) // consider as a rejection\n       msg \u003d \"Registration rejected by \" + nnRpcAddress;\n     else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n       msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n     }\n     if(msg !\u003d null) {\n       msg +\u003d \". Shutting down.\";\n       LOG.error(msg);\n       throw new IOException(msg); // stop the node\n     }\n     nnRpcAddress \u003d nnReg.getAddress();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    NNStorage storage \u003d bnImage.getStorage();\n    // verify namespaceID\n    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n      storage.setStorageInfo(nsInfo);\n      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n      storage.setClusterID(nsInfo.getClusterID());\n    } else {\n      nsInfo.validateStorage(storage);\n    }\n    bnImage.initEditLog();\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.registerSubordinateNamenode(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"Encountered exception \", e);\n        }\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {}
    },
    "6df36b58e1a393d84d1f95387e2ebe45e66b1db7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3625. Fix TestBackupNode by properly initializing edit log during startup. Contributed by Junping Du.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362189 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 11:54 AM",
      "commitName": "6df36b58e1a393d84d1f95387e2ebe45e66b1db7",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "13/04/12 4:41 PM",
      "commitNameOld": "841fdc5628fbba341efe0bfc6763fe12e7fca7f4",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 93.8,
      "commitsBetweenForRepo": 518,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n   private void registerWith(NamespaceInfo nsInfo) throws IOException {\n     BackupImage bnImage \u003d (BackupImage)getFSImage();\n     NNStorage storage \u003d bnImage.getStorage();\n     // verify namespaceID\n     if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n       storage.setStorageInfo(nsInfo);\n       storage.setBlockPoolID(nsInfo.getBlockPoolID());\n       storage.setClusterID(nsInfo.getClusterID());\n     } else {\n       nsInfo.validateStorage(storage);\n     }\n+    bnImage.initEditLog();\n     setRegistration();\n     NamenodeRegistration nnReg \u003d null;\n     while(!isStopRequested()) {\n       try {\n         nnReg \u003d namenode.register(getRegistration());\n         break;\n       } catch(SocketTimeoutException e) {  // name-node is busy\n         LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n         try {\n           Thread.sleep(1000);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"Encountered exception \", e);\n         }\n       }\n     }\n \n     String msg \u003d null;\n     if(nnReg \u003d\u003d null) // consider as a rejection\n       msg \u003d \"Registration rejected by \" + nnRpcAddress;\n     else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n       msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n     }\n     if(msg !\u003d null) {\n       msg +\u003d \". Shutting down.\";\n       LOG.error(msg);\n       throw new IOException(msg); // stop the node\n     }\n     nnRpcAddress \u003d nnReg.getAddress();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    NNStorage storage \u003d bnImage.getStorage();\n    // verify namespaceID\n    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n      storage.setStorageInfo(nsInfo);\n      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n      storage.setClusterID(nsInfo.getClusterID());\n    } else {\n      nsInfo.validateStorage(storage);\n    }\n    bnImage.initEditLog();\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.register(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"Encountered exception \", e);\n        }\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {}
    },
    "520d2502c52ec60f8ba66d6bd8b7c812e2941bba": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2459. Separate datatypes for Journal Protocol. (suresh)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 9:31 AM",
      "commitName": "520d2502c52ec60f8ba66d6bd8b7c812e2941bba",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "28/09/11 3:58 PM",
      "commitNameOld": "e9dd78d9fede044101627786d991bec3265205a4",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 21.73,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,40 @@\n   private void registerWith(NamespaceInfo nsInfo) throws IOException {\n     BackupImage bnImage \u003d (BackupImage)getFSImage();\n     NNStorage storage \u003d bnImage.getStorage();\n     // verify namespaceID\n     if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n       storage.setStorageInfo(nsInfo);\n       storage.setBlockPoolID(nsInfo.getBlockPoolID());\n       storage.setClusterID(nsInfo.getClusterID());\n     } else {\n       nsInfo.validateStorage(storage);\n     }\n     setRegistration();\n     NamenodeRegistration nnReg \u003d null;\n     while(!isStopRequested()) {\n       try {\n         nnReg \u003d namenode.register(getRegistration());\n         break;\n       } catch(SocketTimeoutException e) {  // name-node is busy\n         LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n         try {\n           Thread.sleep(1000);\n-        } catch (InterruptedException ie) {}\n+        } catch (InterruptedException ie) {\n+          LOG.warn(\"Encountered exception \", e);\n+        }\n       }\n     }\n \n     String msg \u003d null;\n     if(nnReg \u003d\u003d null) // consider as a rejection\n       msg \u003d \"Registration rejected by \" + nnRpcAddress;\n     else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n       msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n     }\n     if(msg !\u003d null) {\n       msg +\u003d \". Shutting down.\";\n       LOG.error(msg);\n       throw new IOException(msg); // stop the node\n     }\n     nnRpcAddress \u003d nnReg.getAddress();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    NNStorage storage \u003d bnImage.getStorage();\n    // verify namespaceID\n    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n      storage.setStorageInfo(nsInfo);\n      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n      storage.setClusterID(nsInfo.getClusterID());\n    } else {\n      nsInfo.validateStorage(storage);\n    }\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.register(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"Encountered exception \", e);\n        }\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    NNStorage storage \u003d bnImage.getStorage();\n    // verify namespaceID\n    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n      storage.setStorageInfo(nsInfo);\n      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n      storage.setClusterID(nsInfo.getClusterID());\n    } else {\n      nsInfo.validateStorage(storage);\n    }\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.register(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {}\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    NNStorage storage \u003d bnImage.getStorage();\n    // verify namespaceID\n    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n      storage.setStorageInfo(nsInfo);\n      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n      storage.setClusterID(nsInfo.getClusterID());\n    } else {\n      nsInfo.validateStorage(storage);\n    }\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.register(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {}\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/07/11 5:04 PM",
      "commitNameOld": "01cd616d170d5d26a539e51e731e8e73b789b360",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 3.68,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   private void registerWith(NamespaceInfo nsInfo) throws IOException {\n     BackupImage bnImage \u003d (BackupImage)getFSImage();\n+    NNStorage storage \u003d bnImage.getStorage();\n     // verify namespaceID\n-    if(bnImage.getStorage().getNamespaceID() \u003d\u003d 0) // new backup storage\n-      bnImage.getStorage().setStorageInfo(nsInfo);\n-    else if(bnImage.getStorage().getNamespaceID() !\u003d nsInfo.getNamespaceID())\n-      throw new IOException(\"Incompatible namespaceIDs\"\n-          + \": active node namespaceID \u003d \" + nsInfo.getNamespaceID() \n-          + \"; backup node namespaceID \u003d \" + bnImage.getStorage().getNamespaceID());\n-\n+    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n+      storage.setStorageInfo(nsInfo);\n+      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n+      storage.setClusterID(nsInfo.getClusterID());\n+    } else {\n+      nsInfo.validateStorage(storage);\n+    }\n     setRegistration();\n     NamenodeRegistration nnReg \u003d null;\n     while(!isStopRequested()) {\n       try {\n         nnReg \u003d namenode.register(getRegistration());\n         break;\n       } catch(SocketTimeoutException e) {  // name-node is busy\n         LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n         try {\n           Thread.sleep(1000);\n         } catch (InterruptedException ie) {}\n       }\n     }\n \n     String msg \u003d null;\n     if(nnReg \u003d\u003d null) // consider as a rejection\n       msg \u003d \"Registration rejected by \" + nnRpcAddress;\n     else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n       msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n     }\n     if(msg !\u003d null) {\n       msg +\u003d \". Shutting down.\";\n       LOG.error(msg);\n       throw new IOException(msg); // stop the node\n     }\n     nnRpcAddress \u003d nnReg.getAddress();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    NNStorage storage \u003d bnImage.getStorage();\n    // verify namespaceID\n    if (storage.getNamespaceID() \u003d\u003d 0) { // new backup storage\n      storage.setStorageInfo(nsInfo);\n      storage.setBlockPoolID(nsInfo.getBlockPoolID());\n      storage.setClusterID(nsInfo.getClusterID());\n    } else {\n      nsInfo.validateStorage(storage);\n    }\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.register(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {}\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {}
    },
    "6c0cb4d15179103d4f83fe5b2f8d8f6a05f3a789": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2141. Remove NameNode roles Active and Standby (they become states of the namenode). Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1148125 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/11 6:32 PM",
      "commitName": "6c0cb4d15179103d4f83fe5b2f8d8f6a05f3a789",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 36.15,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private void registerWith(NamespaceInfo nsInfo) throws IOException {\n     BackupImage bnImage \u003d (BackupImage)getFSImage();\n     // verify namespaceID\n     if(bnImage.getStorage().getNamespaceID() \u003d\u003d 0) // new backup storage\n       bnImage.getStorage().setStorageInfo(nsInfo);\n     else if(bnImage.getStorage().getNamespaceID() !\u003d nsInfo.getNamespaceID())\n       throw new IOException(\"Incompatible namespaceIDs\"\n           + \": active node namespaceID \u003d \" + nsInfo.getNamespaceID() \n           + \"; backup node namespaceID \u003d \" + bnImage.getStorage().getNamespaceID());\n \n     setRegistration();\n     NamenodeRegistration nnReg \u003d null;\n     while(!isStopRequested()) {\n       try {\n         nnReg \u003d namenode.register(getRegistration());\n         break;\n       } catch(SocketTimeoutException e) {  // name-node is busy\n         LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n         try {\n           Thread.sleep(1000);\n         } catch (InterruptedException ie) {}\n       }\n     }\n \n     String msg \u003d null;\n     if(nnReg \u003d\u003d null) // consider as a rejection\n       msg \u003d \"Registration rejected by \" + nnRpcAddress;\n-    else if(!nnReg.isRole(NamenodeRole.ACTIVE)) {\n+    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n       msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n     }\n     if(msg !\u003d null) {\n       msg +\u003d \". Shutting down.\";\n       LOG.error(msg);\n       throw new IOException(msg); // stop the node\n     }\n     nnRpcAddress \u003d nnReg.getAddress();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    // verify namespaceID\n    if(bnImage.getStorage().getNamespaceID() \u003d\u003d 0) // new backup storage\n      bnImage.getStorage().setStorageInfo(nsInfo);\n    else if(bnImage.getStorage().getNamespaceID() !\u003d nsInfo.getNamespaceID())\n      throw new IOException(\"Incompatible namespaceIDs\"\n          + \": active node namespaceID \u003d \" + nsInfo.getNamespaceID() \n          + \"; backup node namespaceID \u003d \" + bnImage.getStorage().getNamespaceID());\n\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.register(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {}\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.NAMENODE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,37 @@\n+  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n+    BackupImage bnImage \u003d (BackupImage)getFSImage();\n+    // verify namespaceID\n+    if(bnImage.getStorage().getNamespaceID() \u003d\u003d 0) // new backup storage\n+      bnImage.getStorage().setStorageInfo(nsInfo);\n+    else if(bnImage.getStorage().getNamespaceID() !\u003d nsInfo.getNamespaceID())\n+      throw new IOException(\"Incompatible namespaceIDs\"\n+          + \": active node namespaceID \u003d \" + nsInfo.getNamespaceID() \n+          + \"; backup node namespaceID \u003d \" + bnImage.getStorage().getNamespaceID());\n+\n+    setRegistration();\n+    NamenodeRegistration nnReg \u003d null;\n+    while(!isStopRequested()) {\n+      try {\n+        nnReg \u003d namenode.register(getRegistration());\n+        break;\n+      } catch(SocketTimeoutException e) {  // name-node is busy\n+        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n+        try {\n+          Thread.sleep(1000);\n+        } catch (InterruptedException ie) {}\n+      }\n+    }\n+\n+    String msg \u003d null;\n+    if(nnReg \u003d\u003d null) // consider as a rejection\n+      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n+    else if(!nnReg.isRole(NamenodeRole.ACTIVE)) {\n+      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n+    }\n+    if(msg !\u003d null) {\n+      msg +\u003d \". Shutting down.\";\n+      LOG.error(msg);\n+      throw new IOException(msg); // stop the node\n+    }\n+    nnRpcAddress \u003d nnReg.getAddress();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerWith(NamespaceInfo nsInfo) throws IOException {\n    BackupImage bnImage \u003d (BackupImage)getFSImage();\n    // verify namespaceID\n    if(bnImage.getStorage().getNamespaceID() \u003d\u003d 0) // new backup storage\n      bnImage.getStorage().setStorageInfo(nsInfo);\n    else if(bnImage.getStorage().getNamespaceID() !\u003d nsInfo.getNamespaceID())\n      throw new IOException(\"Incompatible namespaceIDs\"\n          + \": active node namespaceID \u003d \" + nsInfo.getNamespaceID() \n          + \"; backup node namespaceID \u003d \" + bnImage.getStorage().getNamespaceID());\n\n    setRegistration();\n    NamenodeRegistration nnReg \u003d null;\n    while(!isStopRequested()) {\n      try {\n        nnReg \u003d namenode.register(getRegistration());\n        break;\n      } catch(SocketTimeoutException e) {  // name-node is busy\n        LOG.info(\"Problem connecting to name-node: \" + nnRpcAddress);\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {}\n      }\n    }\n\n    String msg \u003d null;\n    if(nnReg \u003d\u003d null) // consider as a rejection\n      msg \u003d \"Registration rejected by \" + nnRpcAddress;\n    else if(!nnReg.isRole(NamenodeRole.ACTIVE)) {\n      msg \u003d \"Name-node \" + nnRpcAddress + \" is not active\";\n    }\n    if(msg !\u003d null) {\n      msg +\u003d \". Shutting down.\";\n      LOG.error(msg);\n      throw new IOException(msg); // stop the node\n    }\n    nnRpcAddress \u003d nnReg.getAddress();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java"
    }
  }
}