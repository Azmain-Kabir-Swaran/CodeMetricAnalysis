{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSRunner.java",
  "functionName": "waitForNodesRunning",
  "functionId": "waitForNodesRunning",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
  "functionStartLine": 408,
  "functionEndLine": 426,
  "numCommitsSeen": 40,
  "timeTaken": 1323,
  "changeHistory": [
    "3369540653a41dd0194b65f5ef1d53225fb97ba8",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "3369540653a41dd0194b65f5ef1d53225fb97ba8": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3369540653a41dd0194b65f5ef1d53225fb97ba8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14296. Move logging APIs over to slf4j in hadoop-tools.\n",
      "commitDate": "19/06/17 9:18 PM",
      "commitName": "3369540653a41dd0194b65f5ef1d53225fb97ba8",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "06/06/17 5:19 PM",
      "commitNameOld": "b65100c14bf9134de2bd8248dc62735682bee26c",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 13.17,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n   private void waitForNodesRunning() throws InterruptedException {\n     long startTimeMS \u003d System.currentTimeMillis();\n     while (true) {\n       int numRunningNodes \u003d 0;\n       for (RMNode node : rm.getRMContext().getRMNodes().values()) {\n         if (node.getState() \u003d\u003d NodeState.RUNNING) {\n           numRunningNodes++;\n         }\n       }\n       if (numRunningNodes \u003d\u003d numNMs) {\n         break;\n       }\n-      LOG.info(MessageFormat.format(\n-          \"SLSRunner is waiting for all \"\n-              + \"nodes RUNNING. {0} of {1} NMs initialized.\",\n-          numRunningNodes, numNMs));\n+      LOG.info(\"SLSRunner is waiting for all nodes RUNNING.\"\n+          + \" {} of {} NMs initialized.\", numRunningNodes, numNMs);\n       Thread.sleep(1000);\n     }\n-    LOG.info(MessageFormat.format(\"SLSRunner takes {0} ms to launch all nodes.\",\n-        (System.currentTimeMillis() - startTimeMS)));\n+    LOG.info(\"SLSRunner takes {} ms to launch all nodes.\",\n+        System.currentTimeMillis() - startTimeMS);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void waitForNodesRunning() throws InterruptedException {\n    long startTimeMS \u003d System.currentTimeMillis();\n    while (true) {\n      int numRunningNodes \u003d 0;\n      for (RMNode node : rm.getRMContext().getRMNodes().values()) {\n        if (node.getState() \u003d\u003d NodeState.RUNNING) {\n          numRunningNodes++;\n        }\n      }\n      if (numRunningNodes \u003d\u003d numNMs) {\n        break;\n      }\n      LOG.info(\"SLSRunner is waiting for all nodes RUNNING.\"\n          + \" {} of {} NMs initialized.\", numRunningNodes, numNMs);\n      Thread.sleep(1000);\n    }\n    LOG.info(\"SLSRunner takes {} ms to launch all nodes.\",\n        System.currentTimeMillis() - startTimeMS);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,20 @@\n+  private void waitForNodesRunning() throws InterruptedException {\n+    long startTimeMS \u003d System.currentTimeMillis();\n+    while (true) {\n+      int numRunningNodes \u003d 0;\n+      for (RMNode node : rm.getRMContext().getRMNodes().values()) {\n+        if (node.getState() \u003d\u003d NodeState.RUNNING) {\n+          numRunningNodes ++;\n+        }\n+      }\n+      if (numRunningNodes \u003d\u003d numNMs) {\n+        break;\n+      }\n+      LOG.info(MessageFormat.format(\"SLSRunner is waiting for all \" +\n+              \"nodes RUNNING. {0} of {1} NMs initialized.\",\n+              numRunningNodes, numNMs));\n+      Thread.sleep(1000);\n+    }\n+    LOG.info(MessageFormat.format(\"SLSRunner takes {0} ms to launch all nodes.\",\n+            (System.currentTimeMillis() - startTimeMS)));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void waitForNodesRunning() throws InterruptedException {\n    long startTimeMS \u003d System.currentTimeMillis();\n    while (true) {\n      int numRunningNodes \u003d 0;\n      for (RMNode node : rm.getRMContext().getRMNodes().values()) {\n        if (node.getState() \u003d\u003d NodeState.RUNNING) {\n          numRunningNodes ++;\n        }\n      }\n      if (numRunningNodes \u003d\u003d numNMs) {\n        break;\n      }\n      LOG.info(MessageFormat.format(\"SLSRunner is waiting for all \" +\n              \"nodes RUNNING. {0} of {1} NMs initialized.\",\n              numRunningNodes, numNMs));\n      Thread.sleep(1000);\n    }\n    LOG.info(MessageFormat.format(\"SLSRunner takes {0} ms to launch all nodes.\",\n            (System.currentTimeMillis() - startTimeMS)));\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java"
    }
  }
}