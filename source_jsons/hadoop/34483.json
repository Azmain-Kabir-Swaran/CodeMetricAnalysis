{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerImpl.java",
  "functionName": "getNMContainerStatus",
  "functionId": "getNMContainerStatus",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
  "functionStartLine": 871,
  "functionEndLine": 888,
  "numCommitsSeen": 103,
  "timeTaken": 4485,
  "changeHistory": [
    "a5c1fc881e21ebf43da7ead5f3852808fce25492",
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4",
    "e285b98f0fe8637b574c52498035f7f11fb4e962",
    "23c325ad47e305989b7f2cf172bd709f73dd26d1"
  ],
  "changeHistoryShort": {
    "a5c1fc881e21ebf43da7ead5f3852808fce25492": "Ybodychange",
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392": "Ybodychange",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ybodychange",
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4": "Ybodychange",
    "e285b98f0fe8637b574c52498035f7f11fb4e962": "Ybodychange",
    "23c325ad47e305989b7f2cf172bd709f73dd26d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a5c1fc881e21ebf43da7ead5f3852808fce25492": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7696. Add container tags to ContainerTokenIdentifier, api.Container and NMContainerStatus to handle all recovery cases. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "a5c1fc881e21ebf43da7ead5f3852808fce25492",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "18/01/18 12:11 PM",
      "commitNameOld": "37f4696a9cc9284b242215f56a10990e1028d40c",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 12.55,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   public NMContainerStatus getNMContainerStatus() {\n     this.readLock.lock();\n     try {\n-      return NMContainerStatus.newInstance(this.containerId,\n-          this.version, getCurrentState(), getResource(),\n-          diagnostics.toString(), exitCode,\n-          containerTokenIdentifier.getPriority(),\n-          containerTokenIdentifier.getCreationTime(),\n-          containerTokenIdentifier.getNodeLabelExpression(),\n-          containerTokenIdentifier.getExecutionType(),\n-          containerTokenIdentifier.getAllocationRequestId());\n+      NMContainerStatus status \u003d\n+          NMContainerStatus.newInstance(this.containerId,\n+              this.version, getCurrentState(), getResource(),\n+              diagnostics.toString(), exitCode,\n+              containerTokenIdentifier.getPriority(),\n+              containerTokenIdentifier.getCreationTime(),\n+              containerTokenIdentifier.getNodeLabelExpression(),\n+              containerTokenIdentifier.getExecutionType(),\n+              containerTokenIdentifier.getAllocationRequestId());\n+      status.setAllocationTags(containerTokenIdentifier.getAllcationTags());\n+      return status;\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NMContainerStatus getNMContainerStatus() {\n    this.readLock.lock();\n    try {\n      NMContainerStatus status \u003d\n          NMContainerStatus.newInstance(this.containerId,\n              this.version, getCurrentState(), getResource(),\n              diagnostics.toString(), exitCode,\n              containerTokenIdentifier.getPriority(),\n              containerTokenIdentifier.getCreationTime(),\n              containerTokenIdentifier.getNodeLabelExpression(),\n              containerTokenIdentifier.getExecutionType(),\n              containerTokenIdentifier.getAllocationRequestId());\n      status.setAllocationTags(containerTokenIdentifier.getAllcationTags());\n      return status;\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7371. Added allocateRequestId in NMContainerStatus for recovery. Contributed by Chandni Singh\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
      "commitAuthor": "Jian He",
      "commitDateOld": "16/10/17 1:12 PM",
      "commitNameOld": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 21.05,
      "commitsBetweenForRepo": 237,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   public NMContainerStatus getNMContainerStatus() {\n     this.readLock.lock();\n     try {\n-      return NMContainerStatus.newInstance(this.containerId, this.version,\n-          getCurrentState(), getResource(), diagnostics.toString(), exitCode,\n+      return NMContainerStatus.newInstance(this.containerId,\n+          this.version, getCurrentState(), getResource(),\n+          diagnostics.toString(), exitCode,\n           containerTokenIdentifier.getPriority(),\n           containerTokenIdentifier.getCreationTime(),\n           containerTokenIdentifier.getNodeLabelExpression(),\n-          containerTokenIdentifier.getExecutionType());\n+          containerTokenIdentifier.getExecutionType(),\n+          containerTokenIdentifier.getAllocationRequestId());\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NMContainerStatus getNMContainerStatus() {\n    this.readLock.lock();\n    try {\n      return NMContainerStatus.newInstance(this.containerId,\n          this.version, getCurrentState(), getResource(),\n          diagnostics.toString(), exitCode,\n          containerTokenIdentifier.getPriority(),\n          containerTokenIdentifier.getCreationTime(),\n          containerTokenIdentifier.getNodeLabelExpression(),\n          containerTokenIdentifier.getExecutionType(),\n          containerTokenIdentifier.getAllocationRequestId());\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6849. NMContainerStatus should have the Container ExecutionType. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "08/09/17 9:24 AM",
      "commitName": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "07/09/17 2:13 PM",
      "commitNameOld": "f155ab7cfa64e822171708040cb49889338961ce",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public NMContainerStatus getNMContainerStatus() {\n     this.readLock.lock();\n     try {\n       return NMContainerStatus.newInstance(this.containerId, this.version,\n           getCurrentState(), getResource(), diagnostics.toString(), exitCode,\n           containerTokenIdentifier.getPriority(),\n           containerTokenIdentifier.getCreationTime(),\n-          containerTokenIdentifier.getNodeLabelExpression());\n+          containerTokenIdentifier.getNodeLabelExpression(),\n+          containerTokenIdentifier.getExecutionType());\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NMContainerStatus getNMContainerStatus() {\n    this.readLock.lock();\n    try {\n      return NMContainerStatus.newInstance(this.containerId, this.version,\n          getCurrentState(), getResource(), diagnostics.toString(), exitCode,\n          containerTokenIdentifier.getPriority(),\n          containerTokenIdentifier.getCreationTime(),\n          containerTokenIdentifier.getNodeLabelExpression(),\n          containerTokenIdentifier.getExecutionType());\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "26/08/16 4:00 AM",
      "commitNameOld": "bfb4d950596d6198e473045dac6eb36c685b0319",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 4.49,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public NMContainerStatus getNMContainerStatus() {\n     this.readLock.lock();\n     try {\n-      return NMContainerStatus.newInstance(this.containerId, getCurrentState(),\n-          getResource(), diagnostics.toString(), exitCode,\n+      return NMContainerStatus.newInstance(this.containerId, this.version,\n+          getCurrentState(), getResource(), diagnostics.toString(), exitCode,\n           containerTokenIdentifier.getPriority(),\n           containerTokenIdentifier.getCreationTime(),\n           containerTokenIdentifier.getNodeLabelExpression());\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NMContainerStatus getNMContainerStatus() {\n    this.readLock.lock();\n    try {\n      return NMContainerStatus.newInstance(this.containerId, this.version,\n          getCurrentState(), getResource(), diagnostics.toString(), exitCode,\n          containerTokenIdentifier.getPriority(),\n          containerTokenIdentifier.getCreationTime(),\n          containerTokenIdentifier.getNodeLabelExpression());\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3354. Add node label expression in ContainerTokenIdentifier to support RM recovery. Contributed by Wangda Tan\n",
      "commitDate": "15/04/15 1:57 PM",
      "commitName": "1b89a3e173f8e905074ed6714a7be5c003c0e2c4",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/04/15 12:07 AM",
      "commitNameOld": "6495940eae09418a939882a8955845f9241a6485",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 6.58,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   public NMContainerStatus getNMContainerStatus() {\n     this.readLock.lock();\n     try {\n       return NMContainerStatus.newInstance(this.containerId, getCurrentState(),\n-        getResource(), diagnostics.toString(), exitCode,\n-        containerTokenIdentifier.getPriority(),\n-        containerTokenIdentifier.getCreationTime());\n+          getResource(), diagnostics.toString(), exitCode,\n+          containerTokenIdentifier.getPriority(),\n+          containerTokenIdentifier.getCreationTime(),\n+          containerTokenIdentifier.getNodeLabelExpression());\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NMContainerStatus getNMContainerStatus() {\n    this.readLock.lock();\n    try {\n      return NMContainerStatus.newInstance(this.containerId, getCurrentState(),\n          getResource(), diagnostics.toString(), exitCode,\n          containerTokenIdentifier.getPriority(),\n          containerTokenIdentifier.getCreationTime(),\n          containerTokenIdentifier.getNodeLabelExpression());\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "e285b98f0fe8637b574c52498035f7f11fb4e962": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2152. Added missing information into ContainerTokenIdentifier so that NodeManagers can report the same to RM when RM restarts. Contributed Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 2:43 PM",
      "commitName": "e285b98f0fe8637b574c52498035f7f11fb4e962",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/06/14 1:08 PM",
      "commitNameOld": "ecfd43a2f1ffe56f39ebba98ad13538e63cef6fd",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 14.07,
      "commitsBetweenForRepo": 113,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n   public NMContainerStatus getNMContainerStatus() {\n     this.readLock.lock();\n     try {\n-      return NMContainerStatus.newInstance(this.containerId,\n-        getCurrentState(), getResource(), diagnostics.toString(), exitCode);\n+      return NMContainerStatus.newInstance(this.containerId, getCurrentState(),\n+        getResource(), diagnostics.toString(), exitCode,\n+        containerTokenIdentifier.getPriority(),\n+        containerTokenIdentifier.getCreationTime());\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NMContainerStatus getNMContainerStatus() {\n    this.readLock.lock();\n    try {\n      return NMContainerStatus.newInstance(this.containerId, getCurrentState(),\n        getResource(), diagnostics.toString(), exitCode,\n        containerTokenIdentifier.getPriority(),\n        containerTokenIdentifier.getCreationTime());\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "23c325ad47e305989b7f2cf172bd709f73dd26d1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2115. Replaced RegisterNodeManagerRequest\u0027s ContainerStatus with a new NMContainerStatus which has more information that is needed for work-preserving RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 5:20 PM",
      "commitName": "23c325ad47e305989b7f2cf172bd709f73dd26d1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+  public NMContainerStatus getNMContainerStatus() {\n+    this.readLock.lock();\n+    try {\n+      return NMContainerStatus.newInstance(this.containerId,\n+        getCurrentState(), getResource(), diagnostics.toString(), exitCode);\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public NMContainerStatus getNMContainerStatus() {\n    this.readLock.lock();\n    try {\n      return NMContainerStatus.newInstance(this.containerId,\n        getCurrentState(), getResource(), diagnostics.toString(), exitCode);\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java"
    }
  }
}