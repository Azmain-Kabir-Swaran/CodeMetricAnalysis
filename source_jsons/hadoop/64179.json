{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3ADelegationTokens.java",
  "functionName": "lookupToken",
  "functionId": "lookupToken___credentials-Credentials(modifiers-final)__service-Text(modifiers-final)__kind-Text(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/S3ADelegationTokens.java",
  "functionStartLine": 608,
  "functionEndLine": 636,
  "numCommitsSeen": 8,
  "timeTaken": 1456,
  "changeHistory": [
    "6d0bffe17eadedd60d4599427248b0db4a7c5502"
  ],
  "changeHistoryShort": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,29 @@\n+  public static Token\u003cAbstractS3ATokenIdentifier\u003e lookupToken(\n+      final Credentials credentials,\n+      final Text service,\n+      final Text kind)\n+      throws DelegationTokenIOException {\n+\n+    LOG.debug(\"Looking for token for service {} in credentials\", service);\n+    Token\u003c?\u003e token \u003d credentials.getToken(service);\n+    if (token !\u003d null) {\n+      Text tokenKind \u003d token.getKind();\n+      LOG.debug(\"Found token of kind {}\", tokenKind);\n+      if (kind.equals(tokenKind)) {\n+        // the Oauth implementation catches and logs here; this one\n+        // throws the failure up.\n+        return (Token\u003cAbstractS3ATokenIdentifier\u003e) token;\n+      } else {\n+\n+        // there\u0027s a token for this URI, but its not the right DT kind\n+        throw new DelegationTokenIOException(\n+            DelegationTokenIOException.TOKEN_MISMATCH + \": expected token\"\n+            + \" for \" + service\n+            + \" of type \" + kind\n+            + \" but got a token of type \" + tokenKind);\n+      }\n+    }\n+    // A token for the service was not found\n+    LOG.debug(\"No token for {} found\", service);\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Token\u003cAbstractS3ATokenIdentifier\u003e lookupToken(\n      final Credentials credentials,\n      final Text service,\n      final Text kind)\n      throws DelegationTokenIOException {\n\n    LOG.debug(\"Looking for token for service {} in credentials\", service);\n    Token\u003c?\u003e token \u003d credentials.getToken(service);\n    if (token !\u003d null) {\n      Text tokenKind \u003d token.getKind();\n      LOG.debug(\"Found token of kind {}\", tokenKind);\n      if (kind.equals(tokenKind)) {\n        // the Oauth implementation catches and logs here; this one\n        // throws the failure up.\n        return (Token\u003cAbstractS3ATokenIdentifier\u003e) token;\n      } else {\n\n        // there\u0027s a token for this URI, but its not the right DT kind\n        throw new DelegationTokenIOException(\n            DelegationTokenIOException.TOKEN_MISMATCH + \": expected token\"\n            + \" for \" + service\n            + \" of type \" + kind\n            + \" but got a token of type \" + tokenKind);\n      }\n    }\n    // A token for the service was not found\n    LOG.debug(\"No token for {} found\", service);\n    return null;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/S3ADelegationTokens.java"
    }
  }
}