{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "storeApplicationStateInternal",
  "functionId": "storeApplicationStateInternal___appId-ApplicationId__appStateDataPB-ApplicationStateData",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 835,
  "functionEndLine": 853,
  "numCommitsSeen": 102,
  "timeTaken": 4992,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
    "740204b2926f49ea70596c6059582ce409fbdd90",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": "Ybodychange",
    "740204b2926f49ea70596c6059582ce409fbdd90": "Ybodychange",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": "Ybodychange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": "Yparameterchange",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ymultichange(Yparameterchange,Ybodychange)",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": "Yrename",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,19 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n     String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n-    }\n+    LOG.debug(\"Storing info for app: {} at: {}\", appId, nodeCreatePath);\n \n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     if (appStateData.length \u003c\u003d zknodeLimit) {\n       zkManager.safeCreate(nodeCreatePath, appStateData, zkAcl,\n           CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n     } else {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Application state data size for \" + appId + \" is \"\n-            + appStateData.length);\n-      }\n+      LOG.debug(\"Application state data size for {} is {}\",\n+          appId, appStateData.length);\n+\n       throw new StoreLimitException(\"Application \" + appId\n           + \" exceeds the maximum allowed size for application data. \"\n           + \"See yarn.resourcemanager.zk-max-znode-size.bytes.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n\n    LOG.debug(\"Storing info for app: {} at: {}\", appId, nodeCreatePath);\n\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    if (appStateData.length \u003c\u003d zknodeLimit) {\n      zkManager.safeCreate(nodeCreatePath, appStateData, zkAcl,\n          CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n    } else {\n      LOG.debug(\"Application state data size for {} is {}\",\n          appId, appStateData.length);\n\n      throw new StoreLimitException(\"Application \" + appId\n          + \" exceeds the maximum allowed size for application data. \"\n          + \"See yarn.resourcemanager.zk-max-znode-size.bytes.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7053. Move curator transaction support to ZKCuratorManager. (Jonathan Hung via Subru).\n",
      "commitDate": "22/08/17 7:20 PM",
      "commitName": "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "15/08/17 4:53 PM",
      "commitNameOld": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 7.1,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n     String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n \n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     if (appStateData.length \u003c\u003d zknodeLimit) {\n-      safeCreate(nodeCreatePath, appStateData, zkAcl, CreateMode.PERSISTENT);\n+      zkManager.safeCreate(nodeCreatePath, appStateData, zkAcl,\n+          CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n     } else {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Application state data size for \" + appId + \" is \"\n             + appStateData.length);\n       }\n       throw new StoreLimitException(\"Application \" + appId\n           + \" exceeds the maximum allowed size for application data. \"\n           + \"See yarn.resourcemanager.zk-max-znode-size.bytes.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    if (appStateData.length \u003c\u003d zknodeLimit) {\n      zkManager.safeCreate(nodeCreatePath, appStateData, zkAcl,\n          CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Application state data size for \" + appId + \" is \"\n            + appStateData.length);\n      }\n      throw new StoreLimitException(\"Application \" + appId\n          + \" exceeds the maximum allowed size for application data. \"\n          + \"See yarn.resourcemanager.zk-max-znode-size.bytes.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "740204b2926f49ea70596c6059582ce409fbdd90": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5006. ResourceManager quit due to ApplicationStateData exceed the limit size of znode in zk. Contributed by Bibin A Chundatt.\n",
      "commitDate": "22/06/17 7:22 PM",
      "commitName": "740204b2926f49ea70596c6059582ce409fbdd90",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "12/06/17 5:37 AM",
      "commitNameOld": "d64c842743da0d9d91c46985a9fd7350ea14b204",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 10.57,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,21 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n     String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n \n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n-    safeCreate(nodeCreatePath, appStateData, zkAcl,\n-        CreateMode.PERSISTENT);\n+    if (appStateData.length \u003c\u003d zknodeLimit) {\n+      safeCreate(nodeCreatePath, appStateData, zkAcl, CreateMode.PERSISTENT);\n+    } else {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Application state data size for \" + appId + \" is \"\n+            + appStateData.length);\n+      }\n+      throw new StoreLimitException(\"Application \" + appId\n+          + \" exceeds the maximum allowed size for application data. \"\n+          + \"See yarn.resourcemanager.zk-max-znode-size.bytes.\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    if (appStateData.length \u003c\u003d zknodeLimit) {\n      safeCreate(nodeCreatePath, appStateData, zkAcl, CreateMode.PERSISTENT);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Application state data size for \" + appId + \" is \"\n            + appStateData.length);\n      }\n      throw new StoreLimitException(\"Application \" + appId\n          + \" exceeds the maximum allowed size for application data. \"\n          + \"See yarn.resourcemanager.zk-max-znode-size.bytes.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2962. ZKRMStateStore: Limit the number of znodes under a znode (Contributed by Varun Sexena via Daniel Templeton)\n",
      "commitDate": "28/04/17 1:30 PM",
      "commitName": "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "30/01/17 9:44 PM",
      "commitNameOld": "87852b6ef4b9d973b7b3999974d41c8860fb1495",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 87.62,
      "commitsBetweenForRepo": 498,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n-    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n+    String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n \n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     safeCreate(nodeCreatePath, appStateData, zkAcl,\n         CreateMode.PERSISTENT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getLeafAppIdNodePath(appId.toString(), true);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    safeCreate(nodeCreatePath, appStateData, zkAcl,\n        CreateMode.PERSISTENT);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateData appStateDataPB) throws Exception {\n     String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n-    createWithRetries(nodeCreatePath, appStateData, zkAcl,\n-      CreateMode.PERSISTENT);\n+    safeCreate(nodeCreatePath, appStateData, zkAcl,\n+        CreateMode.PERSISTENT);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    safeCreate(nodeCreatePath, appStateData, zkAcl,\n        CreateMode.PERSISTENT);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": {
      "type": "Yparameterchange",
      "commitMessage": "Augmented RMStateStore with state machine. Contributed by Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/06/14 12:44 PM",
      "commitName": "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/06/14 11:12 PM",
      "commitNameOld": "9958072d53e1abddbafedbc9bc62f6cb40c40fc3",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 2.56,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public synchronized void storeApplicationStateInternal(ApplicationId appId,\n-      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n+      ApplicationStateData appStateDataPB) throws Exception {\n     String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     createWithRetries(nodeCreatePath, appStateData, zkAcl,\n       CreateMode.PERSISTENT);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateData appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    createWithRetries(nodeCreatePath, appStateData, zkAcl,\n      CreateMode.PERSISTENT);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {
        "oldValue": "[appId-ApplicationId, appStateDataPB-ApplicationStateDataPBImpl]",
        "newValue": "[appId-ApplicationId, appStateDataPB-ApplicationStateData]"
      }
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/13 6:33 PM",
          "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 8:17 PM",
          "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.93,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-  public synchronized void storeApplicationStateInternal(String appId,\n+  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n-    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n+    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     createWithRetries(nodeCreatePath, appStateData, zkAcl,\n       CreateMode.PERSISTENT);\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    createWithRetries(nodeCreatePath, appStateData, zkAcl,\n      CreateMode.PERSISTENT);\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[appId-String, appStateDataPB-ApplicationStateDataPBImpl]",
            "newValue": "[appId-ApplicationId, appStateDataPB-ApplicationStateDataPBImpl]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/13 6:33 PM",
          "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 8:17 PM",
          "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.93,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-  public synchronized void storeApplicationStateInternal(String appId,\n+  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n       ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n-    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n+    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n     createWithRetries(nodeCreatePath, appStateData, zkAcl,\n       CreateMode.PERSISTENT);\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void storeApplicationStateInternal(ApplicationId appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId.toString());\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    createWithRetries(nodeCreatePath, appStateData, zkAcl,\n      CreateMode.PERSISTENT);\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": {
      "type": "Yrename",
      "commitMessage": "YARN-891. Modified ResourceManager state-store to remember completed applications so that clients can get information about them post RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/13 10:25 AM",
      "commitName": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/09/13 1:39 PM",
      "commitNameOld": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthorOld": "Hitesh Shah",
      "daysBetweenCommits": 41.87,
      "commitsBetweenForRepo": 291,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n-  public synchronized void storeApplicationState(\n-      String appId, ApplicationStateDataPBImpl appStateDataPB) throws\n-      Exception {\n+  public synchronized void storeApplicationStateInternal(String appId,\n+      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n     String nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n     }\n     byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n-    createWithRetries(\n-        nodeCreatePath, appStateData, zkAcl, CreateMode.PERSISTENT);\n+    createWithRetries(nodeCreatePath, appStateData, zkAcl,\n+      CreateMode.PERSISTENT);\n+\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationStateInternal(String appId,\n      ApplicationStateDataPBImpl appStateDataPB) throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    createWithRetries(nodeCreatePath, appStateData, zkAcl,\n      CreateMode.PERSISTENT);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {
        "oldValue": "storeApplicationState",
        "newValue": "storeApplicationStateInternal"
      }
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,12 @@\n+  public synchronized void storeApplicationState(\n+      String appId, ApplicationStateDataPBImpl appStateDataPB) throws\n+      Exception {\n+    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n+    }\n+    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n+    createWithRetries(\n+        nodeCreatePath, appStateData, zkAcl, CreateMode.PERSISTENT);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationState(\n      String appId, ApplicationStateDataPBImpl appStateDataPB) throws\n      Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, appId);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for app: \" + appId + \" at: \" + nodeCreatePath);\n    }\n    byte[] appStateData \u003d appStateDataPB.getProto().toByteArray();\n    createWithRetries(\n        nodeCreatePath, appStateData, zkAcl, CreateMode.PERSISTENT);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}