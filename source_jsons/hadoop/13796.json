{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "createLocatedBlock",
  "functionId": "createLocatedBlock___locatedBlocks-LocatedBlockBuilder__blk-BlockInfo(modifiers-final)__pos-long(modifiers-final)__mode-AccessMode(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 1374,
  "functionEndLine": 1382,
  "numCommitsSeen": 1506,
  "timeTaken": 21194,
  "changeHistory": [
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
    "4928f5473394981829e5ffd4b16ea0801baf5c45",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b",
    "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "2892f6d817d74e90ff50073cd3721ed4ec75ba92",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "371f4a59059322000a40eb4bdf5386b96b626ece",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": "Ymultichange(Yparameterchange,Ybodychange)",
    "4928f5473394981829e5ffd4b16ea0801baf5c45": "Yparameterchange",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": "Yparameterchange",
    "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e": "Yparameterchange",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": "Yparameterchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "2892f6d817d74e90ff50073cd3721ed4ec75ba92": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "371f4a59059322000a40eb4bdf5386b96b626ece": "Ymultichange(Yrename,Ymodifierchange,Ybodychange,Yparametermetachange)",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Ymultichange(Yfilerename,Ymodifierchange)",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Ymultichange(Yfilerename,Ymodifierchange)",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Ymultichange(Yfilerename,Ymodifierchange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11190. [READ] Namenode support for data stored in external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
      "commitAuthor": "Virajith Jalaparti",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11190. [READ] Namenode support for data stored in external stores.\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "05/12/17 8:48 PM",
          "commitNameOld": "56b1ff80dd9fbcde8d21a604eff0babb3a16418f",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 9.88,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n-    final AccessMode mode) throws IOException {\n-    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n+  private LocatedBlock createLocatedBlock(LocatedBlockBuilder locatedBlocks,\n+      final BlockInfo blk, final long pos, final AccessMode mode)\n+          throws IOException {\n+    final LocatedBlock lb \u003d createLocatedBlock(locatedBlocks, blk, pos);\n     if (mode !\u003d null) {\n       setBlockToken(lb, mode);\n     }\n     return lb;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocatedBlock createLocatedBlock(LocatedBlockBuilder locatedBlocks,\n      final BlockInfo blk, final long pos, final AccessMode mode)\n          throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(locatedBlocks, blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[blk-BlockInfo(modifiers-final), pos-long(modifiers-final), mode-AccessMode(modifiers-final)]",
            "newValue": "[locatedBlocks-LocatedBlockBuilder, blk-BlockInfo(modifiers-final), pos-long(modifiers-final), mode-AccessMode(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11190. [READ] Namenode support for data stored in external stores.\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "05/12/17 8:48 PM",
          "commitNameOld": "56b1ff80dd9fbcde8d21a604eff0babb3a16418f",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 9.88,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n-    final AccessMode mode) throws IOException {\n-    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n+  private LocatedBlock createLocatedBlock(LocatedBlockBuilder locatedBlocks,\n+      final BlockInfo blk, final long pos, final AccessMode mode)\n+          throws IOException {\n+    final LocatedBlock lb \u003d createLocatedBlock(locatedBlocks, blk, pos);\n     if (mode !\u003d null) {\n       setBlockToken(lb, mode);\n     }\n     return lb;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocatedBlock createLocatedBlock(LocatedBlockBuilder locatedBlocks,\n      final BlockInfo blk, final long pos, final AccessMode mode)\n          throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(locatedBlocks, blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "4928f5473394981829e5ffd4b16ea0801baf5c45": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "27/05/15 3:42 PM",
      "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "19/05/15 11:05 AM",
      "commitNameOld": "8860e352c394372e4eb3ebdf82ea899567f34e4e",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 8.19,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  private LocatedBlock createLocatedBlock(final BlockInfoContiguous blk, final long pos,\n+  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n     final AccessMode mode) throws IOException {\n     final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n     if (mode !\u003d null) {\n       setBlockToken(lb, mode);\n     }\n     return lb;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n    final AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldValue": "[blk-BlockInfoContiguous(modifiers-final), pos-long(modifiers-final), mode-AccessMode(modifiers-final)]",
        "newValue": "[blk-BlockInfo(modifiers-final), pos-long(modifiers-final), mode-AccessMode(modifiers-final)]"
      }
    },
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-7749. Erasure Coding: Add striped block support in INodeFile. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:07 AM",
      "commitName": "9f2f583f401189c3f4a2687795a9e3e0b288322b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/05/15 11:07 AM",
      "commitNameOld": "ba9371492036983a9899398907ab41fe548f29b3",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  private LocatedBlock createLocatedBlock(final BlockInfoContiguous blk, final long pos,\n+  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n     final AccessMode mode) throws IOException {\n     final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n     if (mode !\u003d null) {\n       setBlockToken(lb, mode);\n     }\n     return lb;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n    final AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldValue": "[blk-BlockInfoContiguous(modifiers-final), pos-long(modifiers-final), mode-AccessMode(modifiers-final)]",
        "newValue": "[blk-BlockInfo(modifiers-final), pos-long(modifiers-final), mode-AccessMode(modifiers-final)]"
      }
    },
    "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-8103. Move BlockTokenSecretManager.AccessMode into BlockTokenIdentifier. Contributed by Haohui Mai.\n",
      "commitDate": "10/04/15 4:36 PM",
      "commitName": "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/04/15 4:09 PM",
      "commitNameOld": "5a540c3d3107199f4632e2ad7ee8ff913b107a04",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 2.02,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   private LocatedBlock createLocatedBlock(final BlockInfoContiguous blk, final long pos,\n-    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+    final AccessMode mode) throws IOException {\n     final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n     if (mode !\u003d null) {\n       setBlockToken(lb, mode);\n     }\n     return lb;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfoContiguous blk, final long pos,\n    final AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldValue": "[blk-BlockInfoContiguous(modifiers-final), pos-long(modifiers-final), mode-BlockTokenSecretManager.AccessMode(modifiers-final)]",
        "newValue": "[blk-BlockInfoContiguous(modifiers-final), pos-long(modifiers-final), mode-AccessMode(modifiers-final)]"
      }
    },
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-7743. Code cleanup of BlockInfo and rename BlockInfo to BlockInfoContiguous. Contributed by Jing Zhao.\n",
      "commitDate": "08/02/15 11:51 AM",
      "commitName": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/02/15 11:31 AM",
      "commitNameOld": "9175105eeaecf0a1d60b57989b73ce45cee4689b",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 4.01,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n+  private LocatedBlock createLocatedBlock(final BlockInfoContiguous blk, final long pos,\n     final BlockTokenSecretManager.AccessMode mode) throws IOException {\n     final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n     if (mode !\u003d null) {\n       setBlockToken(lb, mode);\n     }\n     return lb;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfoContiguous blk, final long pos,\n    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldValue": "[blk-BlockInfo(modifiers-final), pos-long(modifiers-final), mode-BlockTokenSecretManager.AccessMode(modifiers-final)]",
        "newValue": "[blk-BlockInfoContiguous(modifiers-final), pos-long(modifiers-final), mode-BlockTokenSecretManager.AccessMode(modifiers-final)]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "2892f6d817d74e90ff50073cd3721ed4ec75ba92": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-2266.  Add Namesystem and SafeMode interfaces to avoid directly referring to FSNamesystem in BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160493 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/08/11 4:14 PM",
      "commitName": "2892f6d817d74e90ff50073cd3721ed4ec75ba92",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-2266.  Add Namesystem and SafeMode interfaces to avoid directly referring to FSNamesystem in BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160493 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/08/11 4:14 PM",
          "commitName": "2892f6d817d74e90ff50073cd3721ed4ec75ba92",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/08/11 3:28 PM",
          "commitNameOld": "513f17d115564e49124bb744cecf36d16a144ffc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,8 @@\n-  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n-      final long offset, final long length, final int nrBlocksToReturn\n-      ) throws IOException {\n-    int curBlk \u003d 0;\n-    long curPos \u003d 0, blkSize \u003d 0;\n-    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n-    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n-      blkSize \u003d blocks[curBlk].getNumBytes();\n-      assert blkSize \u003e 0 : \"Block of size 0\";\n-      if (curPos + blkSize \u003e offset) {\n-        break;\n-      }\n-      curPos +\u003d blkSize;\n+  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n+    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n+    if (mode !\u003d null) {\n+      setBlockToken(lb, mode);\n     }\n-\n-    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n-      return Collections.\u003cLocatedBlock\u003eemptyList();\n-\n-    long endOff \u003d offset + length;\n-    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n-    do {\n-      results.add(createLocatedBlock(blocks[curBlk], curPos));\n-      curPos +\u003d blocks[curBlk].getNumBytes();\n-      curBlk++;\n-    } while (curPos \u003c endOff \n-          \u0026\u0026 curBlk \u003c blocks.length\n-          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n-    return results;\n+    return lb;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
          "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "createLocatedBlockList",
            "newValue": "createLocatedBlock"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2266.  Add Namesystem and SafeMode interfaces to avoid directly referring to FSNamesystem in BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160493 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/08/11 4:14 PM",
          "commitName": "2892f6d817d74e90ff50073cd3721ed4ec75ba92",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/08/11 3:28 PM",
          "commitNameOld": "513f17d115564e49124bb744cecf36d16a144ffc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,8 @@\n-  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n-      final long offset, final long length, final int nrBlocksToReturn\n-      ) throws IOException {\n-    int curBlk \u003d 0;\n-    long curPos \u003d 0, blkSize \u003d 0;\n-    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n-    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n-      blkSize \u003d blocks[curBlk].getNumBytes();\n-      assert blkSize \u003e 0 : \"Block of size 0\";\n-      if (curPos + blkSize \u003e offset) {\n-        break;\n-      }\n-      curPos +\u003d blkSize;\n+  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n+    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n+    if (mode !\u003d null) {\n+      setBlockToken(lb, mode);\n     }\n-\n-    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n-      return Collections.\u003cLocatedBlock\u003eemptyList();\n-\n-    long endOff \u003d offset + length;\n-    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n-    do {\n-      results.add(createLocatedBlock(blocks[curBlk], curPos));\n-      curPos +\u003d blocks[curBlk].getNumBytes();\n-      curBlk++;\n-    } while (curPos \u003c endOff \n-          \u0026\u0026 curBlk \u003c blocks.length\n-          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n-    return results;\n+    return lb;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
          "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[blocks-BlockInfo[](modifiers-final), offset-long(modifiers-final), length-long(modifiers-final), nrBlocksToReturn-int(modifiers-final)]",
            "newValue": "[blk-BlockInfo(modifiers-final), pos-long(modifiers-final), mode-BlockTokenSecretManager.AccessMode(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2266.  Add Namesystem and SafeMode interfaces to avoid directly referring to FSNamesystem in BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160493 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/08/11 4:14 PM",
          "commitName": "2892f6d817d74e90ff50073cd3721ed4ec75ba92",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/08/11 3:28 PM",
          "commitNameOld": "513f17d115564e49124bb744cecf36d16a144ffc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,8 @@\n-  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n-      final long offset, final long length, final int nrBlocksToReturn\n-      ) throws IOException {\n-    int curBlk \u003d 0;\n-    long curPos \u003d 0, blkSize \u003d 0;\n-    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n-    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n-      blkSize \u003d blocks[curBlk].getNumBytes();\n-      assert blkSize \u003e 0 : \"Block of size 0\";\n-      if (curPos + blkSize \u003e offset) {\n-        break;\n-      }\n-      curPos +\u003d blkSize;\n+  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n+    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n+    if (mode !\u003d null) {\n+      setBlockToken(lb, mode);\n     }\n-\n-    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n-      return Collections.\u003cLocatedBlock\u003eemptyList();\n-\n-    long endOff \u003d offset + length;\n-    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n-    do {\n-      results.add(createLocatedBlock(blocks[curBlk], curPos));\n-      curPos +\u003d blocks[curBlk].getNumBytes();\n-      curBlk++;\n-    } while (curPos \u003c endOff \n-          \u0026\u0026 curBlk \u003c blocks.length\n-          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n-    return results;\n+    return lb;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
          "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "List\u003cLocatedBlock\u003e",
            "newValue": "LocatedBlock"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2266.  Add Namesystem and SafeMode interfaces to avoid directly referring to FSNamesystem in BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160493 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/08/11 4:14 PM",
          "commitName": "2892f6d817d74e90ff50073cd3721ed4ec75ba92",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/08/11 3:28 PM",
          "commitNameOld": "513f17d115564e49124bb744cecf36d16a144ffc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,8 @@\n-  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n-      final long offset, final long length, final int nrBlocksToReturn\n-      ) throws IOException {\n-    int curBlk \u003d 0;\n-    long curPos \u003d 0, blkSize \u003d 0;\n-    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n-    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n-      blkSize \u003d blocks[curBlk].getNumBytes();\n-      assert blkSize \u003e 0 : \"Block of size 0\";\n-      if (curPos + blkSize \u003e offset) {\n-        break;\n-      }\n-      curPos +\u003d blkSize;\n+  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n+    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n+    if (mode !\u003d null) {\n+      setBlockToken(lb, mode);\n     }\n-\n-    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n-      return Collections.\u003cLocatedBlock\u003eemptyList();\n-\n-    long endOff \u003d offset + length;\n-    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n-    do {\n-      results.add(createLocatedBlock(blocks[curBlk], curPos));\n-      curPos +\u003d blocks[curBlk].getNumBytes();\n-      curBlk++;\n-    } while (curPos \u003c endOff \n-          \u0026\u0026 curBlk \u003c blocks.length\n-          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n-    return results;\n+    return lb;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LocatedBlock createLocatedBlock(final BlockInfo blk, final long pos,\n    final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    final LocatedBlock lb \u003d createLocatedBlock(blk, pos);\n    if (mode !\u003d null) {\n      setBlockToken(lb, mode);\n    }\n    return lb;\n  }",
          "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n      final long offset, final long length, final int nrBlocksToReturn\n      ) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(createLocatedBlock(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "371f4a59059322000a40eb4bdf5386b96b626ece": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/11 3:06 AM",
      "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n-  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n-      long length, int nrBlocksToReturn) throws IOException {\n+  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n+      final long offset, final long length, final int nrBlocksToReturn\n+      ) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n-      results.add(getBlockLocation(blocks[curBlk], curPos));\n+      results.add(createLocatedBlock(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n      final long offset, final long length, final int nrBlocksToReturn\n      ) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(createLocatedBlock(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "getBlockLocations",
            "newValue": "createLocatedBlockList"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n-  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n-      long length, int nrBlocksToReturn) throws IOException {\n+  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n+      final long offset, final long length, final int nrBlocksToReturn\n+      ) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n-      results.add(getBlockLocation(blocks[curBlk], curPos));\n+      results.add(createLocatedBlock(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n      final long offset, final long length, final int nrBlocksToReturn\n      ) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(createLocatedBlock(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n-  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n-      long length, int nrBlocksToReturn) throws IOException {\n+  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n+      final long offset, final long length, final int nrBlocksToReturn\n+      ) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n-      results.add(getBlockLocation(blocks[curBlk], curPos));\n+      results.add(createLocatedBlock(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n      final long offset, final long length, final int nrBlocksToReturn\n      ) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(createLocatedBlock(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n-  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n-      long length, int nrBlocksToReturn) throws IOException {\n+  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n+      final long offset, final long length, final int nrBlocksToReturn\n+      ) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n-      results.add(getBlockLocation(blocks[curBlk], curPos));\n+      results.add(createLocatedBlock(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cLocatedBlock\u003e createLocatedBlockList(final BlockInfo[] blocks,\n      final long offset, final long length, final int nrBlocksToReturn\n      ) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(createLocatedBlock(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[blocks-BlockInfo[], offset-long, length-long, nrBlocksToReturn-int]",
            "newValue": "[blocks-BlockInfo[](modifiers-final), offset-long(modifiers-final), length-long(modifiers-final), nrBlocksToReturn-int(modifiers-final)]"
          }
        }
      ]
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 6:31 PM",
          "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 5:26 PM",
          "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n+  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n       long length, int nrBlocksToReturn) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n       results.add(getBlockLocation(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n      long length, int nrBlocksToReturn) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(getBlockLocation(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 6:31 PM",
          "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 5:26 PM",
          "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n+  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n       long length, int nrBlocksToReturn) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n       results.add(getBlockLocation(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n      long length, int nrBlocksToReturn) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(getBlockLocation(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        }
      ]
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 5:26 PM",
          "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 4:57 PM",
          "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n+  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n       long length, int nrBlocksToReturn) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n       results.add(getBlockLocation(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n      long length, int nrBlocksToReturn) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(getBlockLocation(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 5:26 PM",
          "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 4:57 PM",
          "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n+  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n       long length, int nrBlocksToReturn) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n       results.add(getBlockLocation(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n      long length, int nrBlocksToReturn) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(getBlockLocation(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        }
      ]
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 4:43 PM",
          "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 9:21 AM",
          "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n+  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n       long length, int nrBlocksToReturn) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n       results.add(getBlockLocation(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n      long length, int nrBlocksToReturn) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(getBlockLocation(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 4:43 PM",
          "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 9:21 AM",
          "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n+  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n       long length, int nrBlocksToReturn) throws IOException {\n     int curBlk \u003d 0;\n     long curPos \u003d 0, blkSize \u003d 0;\n     int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n     for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n       blkSize \u003d blocks[curBlk].getNumBytes();\n       assert blkSize \u003e 0 : \"Block of size 0\";\n       if (curPos + blkSize \u003e offset) {\n         break;\n       }\n       curPos +\u003d blkSize;\n     }\n \n     if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n       return Collections.\u003cLocatedBlock\u003eemptyList();\n \n     long endOff \u003d offset + length;\n     List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n     do {\n       results.add(getBlockLocation(blocks[curBlk], curPos));\n       curPos +\u003d blocks[curBlk].getNumBytes();\n       curBlk++;\n     } while (curPos \u003c endOff \n           \u0026\u0026 curBlk \u003c blocks.length\n           \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n     return results;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n      long length, int nrBlocksToReturn) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(getBlockLocation(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n+      long length, int nrBlocksToReturn) throws IOException {\n+    int curBlk \u003d 0;\n+    long curPos \u003d 0, blkSize \u003d 0;\n+    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n+    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n+      blkSize \u003d blocks[curBlk].getNumBytes();\n+      assert blkSize \u003e 0 : \"Block of size 0\";\n+      if (curPos + blkSize \u003e offset) {\n+        break;\n+      }\n+      curPos +\u003d blkSize;\n+    }\n+\n+    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n+      return Collections.\u003cLocatedBlock\u003eemptyList();\n+\n+    long endOff \u003d offset + length;\n+    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n+    do {\n+      results.add(getBlockLocation(blocks[curBlk], curPos));\n+      curPos +\u003d blocks[curBlk].getNumBytes();\n+      curBlk++;\n+    } while (curPos \u003c endOff \n+          \u0026\u0026 curBlk \u003c blocks.length\n+          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n+    return results;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cLocatedBlock\u003e getBlockLocations(BlockInfo[] blocks, long offset,\n      long length, int nrBlocksToReturn) throws IOException {\n    int curBlk \u003d 0;\n    long curPos \u003d 0, blkSize \u003d 0;\n    int nrBlocks \u003d (blocks[0].getNumBytes() \u003d\u003d 0) ? 0 : blocks.length;\n    for (curBlk \u003d 0; curBlk \u003c nrBlocks; curBlk++) {\n      blkSize \u003d blocks[curBlk].getNumBytes();\n      assert blkSize \u003e 0 : \"Block of size 0\";\n      if (curPos + blkSize \u003e offset) {\n        break;\n      }\n      curPos +\u003d blkSize;\n    }\n\n    if (nrBlocks \u003e 0 \u0026\u0026 curBlk \u003d\u003d nrBlocks)   // offset \u003e\u003d end of file\n      return Collections.\u003cLocatedBlock\u003eemptyList();\n\n    long endOff \u003d offset + length;\n    List\u003cLocatedBlock\u003e results \u003d new ArrayList\u003cLocatedBlock\u003e(blocks.length);\n    do {\n      results.add(getBlockLocation(blocks[curBlk], curPos));\n      curPos +\u003d blocks[curBlk].getNumBytes();\n      curBlk++;\n    } while (curPos \u003c endOff \n          \u0026\u0026 curBlk \u003c blocks.length\n          \u0026\u0026 results.size() \u003c nrBlocksToReturn);\n    return results;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java"
    }
  }
}