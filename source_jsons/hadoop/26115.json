{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppController.java",
  "functionName": "checkAccess",
  "functionId": "checkAccess___job-Job",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
  "functionStartLine": 394,
  "functionEndLine": 404,
  "numCommitsSeen": 37,
  "timeTaken": 9824,
  "changeHistory": [
    "3a8dade9b1bf01cf75fc68cecb351c23302cdee5",
    "172b23af33554b7d58fd41b022d983bcc2433da7",
    "81f5c5933d49661b98fd392262e37f4b8aec2cea",
    "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6",
    "68fa208b1cc991dec2577a07b3199a6935a71065",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "3a8dade9b1bf01cf75fc68cecb351c23302cdee5": "Ybodychange",
    "172b23af33554b7d58fd41b022d983bcc2433da7": "Ybodychange",
    "81f5c5933d49661b98fd392262e37f4b8aec2cea": "Ybodychange",
    "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6": "Ymultichange(Yreturntypechange,Ybodychange)",
    "68fa208b1cc991dec2577a07b3199a6935a71065": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8": "Ymodifierchange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3a8dade9b1bf01cf75fc68cecb351c23302cdee5": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-14077. Add ability to access jmx via proxy.  Contributed by Yuanbo Liu.\"\n\nThis reverts commit 172b23af33554b7d58fd41b022d983bcc2433da7.\n\n(cherry picked from commit d0d2d4c51e9534e08893ae14cf3fff7b2ee70b1d)\n",
      "commitDate": "09/03/18 10:46 PM",
      "commitName": "3a8dade9b1bf01cf75fc68cecb351c23302cdee5",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "02/10/17 8:14 PM",
      "commitNameOld": "453d48bdfbb67ed3e66c33c4aef239c3d7bdd3bc",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 158.15,
      "commitsBetweenForRepo": 1080,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n   boolean checkAccess(Job job) {\n     String remoteUser \u003d request().getRemoteUser();\n-    if (remoteUser \u003d\u003d null) {\n-      return false;\n+    UserGroupInformation callerUGI \u003d null;\n+    if (remoteUser !\u003d null) {\n+      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n     }\n-    UserGroupInformation callerUGI \u003d\n-        UserGroupInformation.createRemoteUser(remoteUser);\n     if (callerUGI !\u003d null \u0026\u0026 !job.checkAccess(callerUGI, JobACL.VIEW_JOB)) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkAccess(Job job) {\n    String remoteUser \u003d request().getRemoteUser();\n    UserGroupInformation callerUGI \u003d null;\n    if (remoteUser !\u003d null) {\n      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n    }\n    if (callerUGI !\u003d null \u0026\u0026 !job.checkAccess(callerUGI, JobACL.VIEW_JOB)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
      "extendedDetails": {}
    },
    "172b23af33554b7d58fd41b022d983bcc2433da7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14077. Add ability to access jmx via proxy.  Contributed by Yuanbo Liu.\n",
      "commitDate": "18/02/17 6:34 PM",
      "commitName": "172b23af33554b7d58fd41b022d983bcc2433da7",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "01/12/16 5:29 PM",
      "commitNameOld": "c87b3a448a00df97149a4e93a8c39d9ad0268bdb",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 79.04,
      "commitsBetweenForRepo": 386,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   boolean checkAccess(Job job) {\n     String remoteUser \u003d request().getRemoteUser();\n-    UserGroupInformation callerUGI \u003d null;\n-    if (remoteUser !\u003d null) {\n-      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n+    if (remoteUser \u003d\u003d null) {\n+      return false;\n     }\n+    UserGroupInformation callerUGI \u003d\n+        UserGroupInformation.createRemoteUser(remoteUser);\n     if (callerUGI !\u003d null \u0026\u0026 !job.checkAccess(callerUGI, JobACL.VIEW_JOB)) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkAccess(Job job) {\n    String remoteUser \u003d request().getRemoteUser();\n    if (remoteUser \u003d\u003d null) {\n      return false;\n    }\n    UserGroupInformation callerUGI \u003d\n        UserGroupInformation.createRemoteUser(remoteUser);\n    if (callerUGI !\u003d null \u0026\u0026 !job.checkAccess(callerUGI, JobACL.VIEW_JOB)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
      "extendedDetails": {}
    },
    "81f5c5933d49661b98fd392262e37f4b8aec2cea": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3878. Null user on filtered jobhistory job page (Jonathon Eagles via tgraves)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1292831 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/02/12 7:50 AM",
      "commitName": "81f5c5933d49661b98fd392262e37f4b8aec2cea",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "03/02/12 5:21 PM",
      "commitNameOld": "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.6,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,11 @@\n   boolean checkAccess(Job job) {\n-    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n-        request().getRemoteUser());\n-    return job.checkAccess(callerUgi, JobACL.VIEW_JOB);\n+    String remoteUser \u003d request().getRemoteUser();\n+    UserGroupInformation callerUGI \u003d null;\n+    if (remoteUser !\u003d null) {\n+      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n+    }\n+    if (callerUGI !\u003d null \u0026\u0026 !job.checkAccess(callerUGI, JobACL.VIEW_JOB)) {\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkAccess(Job job) {\n    String remoteUser \u003d request().getRemoteUser();\n    UserGroupInformation callerUGI \u003d null;\n    if (remoteUser !\u003d null) {\n      callerUGI \u003d UserGroupInformation.createRemoteUser(remoteUser);\n    }\n    if (callerUGI !\u003d null \u0026\u0026 !job.checkAccess(callerUGI, JobACL.VIEW_JOB)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
      "extendedDetails": {}
    },
    "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3417. Fixed job-access-controls to work with MR AM and JobHistoryServer web-apps. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240428 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/12 5:21 PM",
      "commitName": "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-3417. Fixed job-access-controls to work with MR AM and JobHistoryServer web-apps. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240428 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/02/12 5:21 PM",
          "commitName": "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "13/12/11 3:05 PM",
          "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 52.09,
          "commitsBetweenForRepo": 265,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,5 @@\n-  void checkAccess(Job job) {\n+  boolean checkAccess(Job job) {\n     UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n         request().getRemoteUser());\n-    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n-      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n-          \" permissions.\");\n-    }\n+    return job.checkAccess(callerUgi, JobACL.VIEW_JOB);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean checkAccess(Job job) {\n    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    return job.checkAccess(callerUgi, JobACL.VIEW_JOB);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3417. Fixed job-access-controls to work with MR AM and JobHistoryServer web-apps. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240428 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/02/12 5:21 PM",
          "commitName": "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "13/12/11 3:05 PM",
          "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 52.09,
          "commitsBetweenForRepo": 265,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,5 @@\n-  void checkAccess(Job job) {\n+  boolean checkAccess(Job job) {\n     UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n         request().getRemoteUser());\n-    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n-      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n-          \" permissions.\");\n-    }\n+    return job.checkAccess(callerUgi, JobACL.VIEW_JOB);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean checkAccess(Job job) {\n    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    return job.checkAccess(callerUgi, JobACL.VIEW_JOB);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
          "extendedDetails": {}
        }
      ]
    },
    "68fa208b1cc991dec2577a07b3199a6935a71065": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-3103. Implement Job ACLs for MRAppMaster. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195761 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 6:51 PM",
      "commitName": "68fa208b1cc991dec2577a07b3199a6935a71065",
      "commitAuthor": "Mahadev Konar",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-3103. Implement Job ACLs for MRAppMaster. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195761 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:51 PM",
          "commitName": "68fa208b1cc991dec2577a07b3199a6935a71065",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "31/10/11 6:50 PM",
          "commitNameOld": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,8 @@\n-    private void checkAccess(Job job, JobACL jobOperation) \n-      throws YarnRemoteException {\n-      if (!UserGroupInformation.isSecurityEnabled()) {\n-        return;\n-      }\n-      UserGroupInformation callerUGI;\n-      try {\n-        callerUGI \u003d UserGroupInformation.getCurrentUser();\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n-      }\n-      if(!job.checkAccess(callerUGI, jobOperation)) {\n-        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n-            + callerUGI.getShortUserName() + \" cannot perform operation \"\n-            + jobOperation.name() + \" on \" + job.getID()));\n-      }\n-    }\n\\ No newline at end of file\n+  void checkAccess(Job job) {\n+    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n+        request().getRemoteUser());\n+    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n+      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n+          \" permissions.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void checkAccess(Job job) {\n    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n          \" permissions.\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
            "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
            "oldMethodName": "checkAccess",
            "newMethodName": "checkAccess"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-3103. Implement Job ACLs for MRAppMaster. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195761 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:51 PM",
          "commitName": "68fa208b1cc991dec2577a07b3199a6935a71065",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "31/10/11 6:50 PM",
          "commitNameOld": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,8 @@\n-    private void checkAccess(Job job, JobACL jobOperation) \n-      throws YarnRemoteException {\n-      if (!UserGroupInformation.isSecurityEnabled()) {\n-        return;\n-      }\n-      UserGroupInformation callerUGI;\n-      try {\n-        callerUGI \u003d UserGroupInformation.getCurrentUser();\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n-      }\n-      if(!job.checkAccess(callerUGI, jobOperation)) {\n-        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n-            + callerUGI.getShortUserName() + \" cannot perform operation \"\n-            + jobOperation.name() + \" on \" + job.getID()));\n-      }\n-    }\n\\ No newline at end of file\n+  void checkAccess(Job job) {\n+    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n+        request().getRemoteUser());\n+    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n+      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n+          \" permissions.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void checkAccess(Job job) {\n    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n          \" permissions.\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-3103. Implement Job ACLs for MRAppMaster. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195761 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:51 PM",
          "commitName": "68fa208b1cc991dec2577a07b3199a6935a71065",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "31/10/11 6:50 PM",
          "commitNameOld": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,8 @@\n-    private void checkAccess(Job job, JobACL jobOperation) \n-      throws YarnRemoteException {\n-      if (!UserGroupInformation.isSecurityEnabled()) {\n-        return;\n-      }\n-      UserGroupInformation callerUGI;\n-      try {\n-        callerUGI \u003d UserGroupInformation.getCurrentUser();\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n-      }\n-      if(!job.checkAccess(callerUGI, jobOperation)) {\n-        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n-            + callerUGI.getShortUserName() + \" cannot perform operation \"\n-            + jobOperation.name() + \" on \" + job.getID()));\n-      }\n-    }\n\\ No newline at end of file\n+  void checkAccess(Job job) {\n+    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n+        request().getRemoteUser());\n+    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n+      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n+          \" permissions.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void checkAccess(Job job) {\n    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n          \" permissions.\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
          "extendedDetails": {
            "oldValue": "[YarnRemoteException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3103. Implement Job ACLs for MRAppMaster. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195761 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:51 PM",
          "commitName": "68fa208b1cc991dec2577a07b3199a6935a71065",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "31/10/11 6:50 PM",
          "commitNameOld": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,8 @@\n-    private void checkAccess(Job job, JobACL jobOperation) \n-      throws YarnRemoteException {\n-      if (!UserGroupInformation.isSecurityEnabled()) {\n-        return;\n-      }\n-      UserGroupInformation callerUGI;\n-      try {\n-        callerUGI \u003d UserGroupInformation.getCurrentUser();\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n-      }\n-      if(!job.checkAccess(callerUGI, jobOperation)) {\n-        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n-            + callerUGI.getShortUserName() + \" cannot perform operation \"\n-            + jobOperation.name() + \" on \" + job.getID()));\n-      }\n-    }\n\\ No newline at end of file\n+  void checkAccess(Job job) {\n+    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n+        request().getRemoteUser());\n+    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n+      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n+          \" permissions.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void checkAccess(Job job) {\n    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n          \" permissions.\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3103. Implement Job ACLs for MRAppMaster. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195761 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:51 PM",
          "commitName": "68fa208b1cc991dec2577a07b3199a6935a71065",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "31/10/11 6:50 PM",
          "commitNameOld": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,8 @@\n-    private void checkAccess(Job job, JobACL jobOperation) \n-      throws YarnRemoteException {\n-      if (!UserGroupInformation.isSecurityEnabled()) {\n-        return;\n-      }\n-      UserGroupInformation callerUGI;\n-      try {\n-        callerUGI \u003d UserGroupInformation.getCurrentUser();\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n-      }\n-      if(!job.checkAccess(callerUGI, jobOperation)) {\n-        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n-            + callerUGI.getShortUserName() + \" cannot perform operation \"\n-            + jobOperation.name() + \" on \" + job.getID()));\n-      }\n-    }\n\\ No newline at end of file\n+  void checkAccess(Job job) {\n+    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n+        request().getRemoteUser());\n+    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n+      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n+          \" permissions.\");\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void checkAccess(Job job) {\n    UserGroupInformation callerUgi \u003d UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    if (!job.checkAccess(callerUgi, JobACL.VIEW_JOB)) {\n      accessDenied(\"User \" + request().getRemoteUser() + \" does not have \" +\n          \" permissions.\");\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AppController.java",
          "extendedDetails": {
            "oldValue": "[job-Job, jobOperation-JobACL]",
            "newValue": "[job-Job]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void checkAccess(Job job, JobACL jobOperation) \n      throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if(!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation) \n+      throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if(!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation) \n      throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if(!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java",
            "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
            "oldMethodName": "checkAccess",
            "newMethodName": "checkAccess"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation) \n+      throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if(!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation) \n      throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if(!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation) \n+      throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if(!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation) \n      throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if(!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation) \n+      throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if(!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation) \n      throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if(!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[YarnRemoteException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation) \n+      throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if(!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation) \n      throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if(!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation) \n+      throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if(!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation) \n      throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if(!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/client/MRClientService.java",
          "extendedDetails": {
            "oldValue": "[callerUGI-UserGroupInformation, jobOperation-JobACL, jobOwner-String, jobACL-AccessControlList]",
            "newValue": "[job-Job, jobOperation-JobACL]"
          }
        }
      ]
    },
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-2837. Ported bug fixes from y-merge to prepare for MAPREDUCE-279 merge. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 2:00 PM",
      "commitName": "ded6f225a55517deedc2bd502f2b68f1ca2ddee8",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/07/11 11:03 PM",
      "commitNameOld": "f57eaf39898b36f4d0f711485003298b857de5f7",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 30.62,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  boolean checkAccess(UserGroupInformation callerUGI,\n+  public boolean checkAccess(UserGroupInformation callerUGI,\n       JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n     // Allow Job-owner for any operation on the job\n     if (user.equals(jobOwner)\n         || jobACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow Job-owner for any operation on the job\n    if (user.equals(jobOwner)\n        || jobACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,16 @@\n+  boolean checkAccess(UserGroupInformation callerUGI,\n+      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n+\n+    String user \u003d callerUGI.getShortUserName();\n+    if (!areACLsEnabled()) {\n+      return true;\n+    }\n+\n+    // Allow Job-owner for any operation on the job\n+    if (user.equals(jobOwner)\n+        || jobACL.isUserAllowed(callerUGI)) {\n+      return true;\n+    }\n+\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkAccess(UserGroupInformation callerUGI,\n      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow Job-owner for any operation on the job\n    if (user.equals(jobOwner)\n        || jobACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java"
    }
  }
}