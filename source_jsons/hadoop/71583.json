{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReverseZoneUtils.java",
  "functionName": "calculateIp",
  "functionId": "calculateIp___baseIp-String__range-int__index-int",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/ReverseZoneUtils.java",
  "functionStartLine": 117,
  "functionEndLine": 145,
  "numCommitsSeen": 3,
  "timeTaken": 1076,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "7d685f2fb3ca8fa23caed29ed813c1c979abf718"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "7d685f2fb3ca8fa23caed29ed813c1c979abf718": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static String calculateIp(String baseIp, int range, int index)\n      throws UnknownHostException {\n    long[] ipParts \u003d splitIp(baseIp);\n\n    long ipNum1 \u003d POW3 * ipParts[0];\n    long ipNum2 \u003d POW2 * ipParts[1];\n    long ipNum3 \u003d POW1 * ipParts[2];\n    long ipNum4 \u003d ipParts[3];\n    long ipNum \u003d ipNum1 + ipNum2 + ipNum3 + ipNum4;\n\n    ArrayList\u003cLong\u003e ipPartsOut \u003d new ArrayList\u003c\u003e();\n    // First octet\n    long temp \u003d ipNum + range * (long) index;\n    ipPartsOut.add(0, temp / POW3);\n\n    // Second octet\n    temp \u003d temp - ipPartsOut.get(0) * POW3;\n    ipPartsOut.add(1, temp / POW2);\n\n    // Third octet\n    temp \u003d temp - ipPartsOut.get(1) * POW2;\n    ipPartsOut.add(2, temp / POW1);\n\n    // Fourth octet\n    temp \u003d temp - ipPartsOut.get(2) * POW1;\n    ipPartsOut.add(3, temp);\n\n    return StringUtils.join(ipPartsOut, \u0027.\u0027);\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/ReverseZoneUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/ReverseZoneUtils.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/ReverseZoneUtils.java"
      }
    },
    "7d685f2fb3ca8fa23caed29ed813c1c979abf718": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4757. Add the ability to split reverse zone subnets. Contributed by Shane Kumpf.\n\n(cherry picked from commit 9bff70f1316d889c3109c68dd308c8f456229bf8)\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "7d685f2fb3ca8fa23caed29ed813c1c979abf718",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,29 @@\n+  private static String calculateIp(String baseIp, int range, int index)\n+      throws UnknownHostException {\n+    long[] ipParts \u003d splitIp(baseIp);\n+\n+    long ipNum1 \u003d POW3 * ipParts[0];\n+    long ipNum2 \u003d POW2 * ipParts[1];\n+    long ipNum3 \u003d POW1 * ipParts[2];\n+    long ipNum4 \u003d ipParts[3];\n+    long ipNum \u003d ipNum1 + ipNum2 + ipNum3 + ipNum4;\n+\n+    ArrayList\u003cLong\u003e ipPartsOut \u003d new ArrayList\u003c\u003e();\n+    // First octet\n+    long temp \u003d ipNum + range * (long) index;\n+    ipPartsOut.add(0, temp / POW3);\n+\n+    // Second octet\n+    temp \u003d temp - ipPartsOut.get(0) * POW3;\n+    ipPartsOut.add(1, temp / POW2);\n+\n+    // Third octet\n+    temp \u003d temp - ipPartsOut.get(1) * POW2;\n+    ipPartsOut.add(2, temp / POW1);\n+\n+    // Fourth octet\n+    temp \u003d temp - ipPartsOut.get(2) * POW1;\n+    ipPartsOut.add(3, temp);\n+\n+    return StringUtils.join(ipPartsOut, \u0027.\u0027);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String calculateIp(String baseIp, int range, int index)\n      throws UnknownHostException {\n    long[] ipParts \u003d splitIp(baseIp);\n\n    long ipNum1 \u003d POW3 * ipParts[0];\n    long ipNum2 \u003d POW2 * ipParts[1];\n    long ipNum3 \u003d POW1 * ipParts[2];\n    long ipNum4 \u003d ipParts[3];\n    long ipNum \u003d ipNum1 + ipNum2 + ipNum3 + ipNum4;\n\n    ArrayList\u003cLong\u003e ipPartsOut \u003d new ArrayList\u003c\u003e();\n    // First octet\n    long temp \u003d ipNum + range * (long) index;\n    ipPartsOut.add(0, temp / POW3);\n\n    // Second octet\n    temp \u003d temp - ipPartsOut.get(0) * POW3;\n    ipPartsOut.add(1, temp / POW2);\n\n    // Third octet\n    temp \u003d temp - ipPartsOut.get(1) * POW2;\n    ipPartsOut.add(2, temp / POW1);\n\n    // Fourth octet\n    temp \u003d temp - ipPartsOut.get(2) * POW1;\n    ipPartsOut.add(3, temp);\n\n    return StringUtils.join(ipPartsOut, \u0027.\u0027);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/ReverseZoneUtils.java"
    }
  }
}