{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMTimelinePublisher.java",
  "functionName": "publishContainerPausedEvent",
  "functionId": "publishContainerPausedEvent___event-ContainerEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
  "functionStartLine": 284,
  "functionEndLine": 306,
  "numCommitsSeen": 28,
  "timeTaken": 908,
  "changeHistory": [
    "30c6dd92e1d4075d143adc891dc8ec536dddc0d9",
    "27039a29ae403398182e615fa5c1d0cb91a54268"
  ],
  "changeHistoryShort": {
    "30c6dd92e1d4075d143adc891dc8ec536dddc0d9": "Ybodychange",
    "27039a29ae403398182e615fa5c1d0cb91a54268": "Yintroduced"
  },
  "changeHistoryDetails": {
    "30c6dd92e1d4075d143adc891dc8ec536dddc0d9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9452. Fix TestDistributedShell and TestTimelineAuthFilterForV2 failures. Contributed by Prabhu Joseph.\n",
      "commitDate": "30/05/19 10:02 AM",
      "commitName": "30c6dd92e1d4075d143adc891dc8ec536dddc0d9",
      "commitAuthor": "Sunil G",
      "commitDateOld": "05/04/19 12:02 PM",
      "commitNameOld": "27039a29ae403398182e615fa5c1d0cb91a54268",
      "commitAuthorOld": "Vrushali C",
      "daysBetweenCommits": 54.92,
      "commitsBetweenForRepo": 303,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,23 @@\n   private void publishContainerPausedEvent(\n       ContainerEvent event) {\n     if (publishNMContainerEvents) {\n       ContainerPauseEvent pauseEvent \u003d (ContainerPauseEvent) event;\n       ContainerId containerId \u003d pauseEvent.getContainerID();\n       ContainerEntity entity \u003d createContainerEntity(containerId);\n \n       Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n       entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n           pauseEvent.getDiagnostic());\n       entity.setInfo(entityInfo);\n \n       Container container \u003d context.getContainers().get(containerId);\n       if (container !\u003d null) {\n         TimelineEvent tEvent \u003d new TimelineEvent();\n         tEvent.setId(ContainerMetricsConstants.PAUSED_EVENT_TYPE);\n         tEvent.setTimestamp(event.getTimestamp());\n-\n-        long containerStartTime \u003d container.getContainerStartTime();\n         entity.addEvent(tEvent);\n-        entity\n-            .setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n         dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n             containerId.getApplicationAttemptId().getApplicationId()));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerPausedEvent(\n      ContainerEvent event) {\n    if (publishNMContainerEvents) {\n      ContainerPauseEvent pauseEvent \u003d (ContainerPauseEvent) event;\n      ContainerId containerId \u003d pauseEvent.getContainerID();\n      ContainerEntity entity \u003d createContainerEntity(containerId);\n\n      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n          pauseEvent.getDiagnostic());\n      entity.setInfo(entityInfo);\n\n      Container container \u003d context.getContainers().get(containerId);\n      if (container !\u003d null) {\n        TimelineEvent tEvent \u003d new TimelineEvent();\n        tEvent.setId(ContainerMetricsConstants.PAUSED_EVENT_TYPE);\n        tEvent.setTimestamp(event.getTimestamp());\n        entity.addEvent(tEvent);\n        dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n            containerId.getApplicationAttemptId().getApplicationId()));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "27039a29ae403398182e615fa5c1d0cb91a54268": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9382 Publish container killed, paused and resumed events to ATSv2. Contributed by Abhishesk Modi.\n",
      "commitDate": "05/04/19 12:02 PM",
      "commitName": "27039a29ae403398182e615fa5c1d0cb91a54268",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,27 @@\n+  private void publishContainerPausedEvent(\n+      ContainerEvent event) {\n+    if (publishNMContainerEvents) {\n+      ContainerPauseEvent pauseEvent \u003d (ContainerPauseEvent) event;\n+      ContainerId containerId \u003d pauseEvent.getContainerID();\n+      ContainerEntity entity \u003d createContainerEntity(containerId);\n+\n+      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n+          pauseEvent.getDiagnostic());\n+      entity.setInfo(entityInfo);\n+\n+      Container container \u003d context.getContainers().get(containerId);\n+      if (container !\u003d null) {\n+        TimelineEvent tEvent \u003d new TimelineEvent();\n+        tEvent.setId(ContainerMetricsConstants.PAUSED_EVENT_TYPE);\n+        tEvent.setTimestamp(event.getTimestamp());\n+\n+        long containerStartTime \u003d container.getContainerStartTime();\n+        entity.addEvent(tEvent);\n+        entity\n+            .setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n+        dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n+            containerId.getApplicationAttemptId().getApplicationId()));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerPausedEvent(\n      ContainerEvent event) {\n    if (publishNMContainerEvents) {\n      ContainerPauseEvent pauseEvent \u003d (ContainerPauseEvent) event;\n      ContainerId containerId \u003d pauseEvent.getContainerID();\n      ContainerEntity entity \u003d createContainerEntity(containerId);\n\n      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n          pauseEvent.getDiagnostic());\n      entity.setInfo(entityInfo);\n\n      Container container \u003d context.getContainers().get(containerId);\n      if (container !\u003d null) {\n        TimelineEvent tEvent \u003d new TimelineEvent();\n        tEvent.setId(ContainerMetricsConstants.PAUSED_EVENT_TYPE);\n        tEvent.setTimestamp(event.getTimestamp());\n\n        long containerStartTime \u003d container.getContainerStartTime();\n        entity.addEvent(tEvent);\n        entity\n            .setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n        dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n            containerId.getApplicationAttemptId().getApplicationId()));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java"
    }
  }
}