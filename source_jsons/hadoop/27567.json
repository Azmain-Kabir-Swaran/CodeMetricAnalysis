{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PerNodeTimelineCollectorsAuxService.java",
  "functionName": "launchServer",
  "functionId": "launchServer___args-String[]__collectorManager-NodeTimelineCollectorManager__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
  "functionStartLine": 237,
  "functionEndLine": 258,
  "numCommitsSeen": 30,
  "timeTaken": 4826,
  "changeHistory": [
    "879de51206ddef132c092ee21e8b6c6e5976a56e",
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1",
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "bf54d32750f8b27a170d7a0a8d8f022430327341",
    "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68"
  ],
  "changeHistoryShort": {
    "879de51206ddef132c092ee21e8b6c6e5976a56e": "Ybodychange",
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c": "Ybodychange",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8": "Yparameterchange",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
    "bf54d32750f8b27a170d7a0a8d8f022430327341": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
    "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5": "Ymodifierchange",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "879de51206ddef132c092ee21e8b6c6e5976a56e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5647. [ATSv2 Security] Collector side changes for loading auth filters and principals. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "879de51206ddef132c092ee21e8b6c6e5976a56e",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/08/17 7:58 AM",
      "commitNameOld": "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 20.63,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n       launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n       Configuration conf) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(\n         PerNodeTimelineCollectorsAuxService.class, args, LOG);\n     PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n       auxService \u003d collectorManager \u003d\u003d null ?\n-          new PerNodeTimelineCollectorsAuxService() :\n+          new PerNodeTimelineCollectorsAuxService(\n+              new NodeTimelineCollectorManager(false)) :\n           new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n       LOG.error(\"Error starting PerNodeTimelineCollectorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n      Configuration conf) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService(\n              new NodeTimelineCollectorManager(false)) :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.error(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6958. Moving logging APIs over to slf4j in hadoop-yarn-server-timelineservice. Contributed by Yeliang Cang.\n",
      "commitDate": "09/08/17 7:58 AM",
      "commitName": "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "09/05/17 9:37 PM",
      "commitNameOld": "ab2bb93a2ab1651b73ec9ba2d1deec4deafdecaf",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 91.43,
      "commitsBetweenForRepo": 521,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n       launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n       Configuration conf) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(\n         PerNodeTimelineCollectorsAuxService.class, args, LOG);\n     PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n       auxService \u003d collectorManager \u003d\u003d null ?\n           new PerNodeTimelineCollectorsAuxService() :\n           new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n+      LOG.error(\"Error starting PerNodeTimelineCollectorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n      Configuration conf) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.error(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {}
    },
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-      launchServer(String[] args, NodeTimelineCollectorManager collectorManager) {\n+      launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n+      Configuration conf) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(\n         PerNodeTimelineCollectorsAuxService.class, args, LOG);\n     PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n       auxService \u003d collectorManager \u003d\u003d null ?\n           new PerNodeTimelineCollectorsAuxService() :\n           new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n-      YarnConfiguration conf \u003d new YarnConfiguration();\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n      Configuration conf) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {
            "oldValue": "[args-String[], collectorManager-NodeTimelineCollectorManager]",
            "newValue": "[args-String[], collectorManager-NodeTimelineCollectorManager, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-      launchServer(String[] args, NodeTimelineCollectorManager collectorManager) {\n+      launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n+      Configuration conf) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(\n         PerNodeTimelineCollectorsAuxService.class, args, LOG);\n     PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n       auxService \u003d collectorManager \u003d\u003d null ?\n           new PerNodeTimelineCollectorsAuxService() :\n           new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n-      YarnConfiguration conf \u003d new YarnConfiguration();\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      launchServer(String[] args, NodeTimelineCollectorManager collectorManager,\n      Configuration conf) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {}
        }
      ]
    },
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-3390. Reuse TimelineCollectorManager for RM (Zhijie Shen via sjlee)\n\n(cherry picked from commit 58221188811e0f61d842dac89e1f4ad4fd8aa182)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n+      launchServer(String[] args, NodeTimelineCollectorManager collectorManager) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(\n         PerNodeTimelineCollectorsAuxService.class, args, LOG);\n     PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n       auxService \u003d collectorManager \u003d\u003d null ?\n           new PerNodeTimelineCollectorsAuxService() :\n           new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      launchServer(String[] args, NodeTimelineCollectorManager collectorManager) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
      "extendedDetails": {
        "oldValue": "[args-String[], collectorManager-TimelineCollectorManager]",
        "newValue": "[args-String[], collectorManager-NodeTimelineCollectorManager]"
      }
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n+      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n-    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n-        LOG);\n-    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n+    StringUtils.startupShutdownMessage(\n+        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n+    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n-      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n+      auxService \u003d collectorManager \u003d\u003d null ?\n+          new PerNodeTimelineCollectorsAuxService() :\n+          new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n-      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n+      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n+      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n+      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n-    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n-        LOG);\n-    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n+    StringUtils.startupShutdownMessage(\n+        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n+    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n-      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n+      auxService \u003d collectorManager \u003d\u003d null ?\n+          new PerNodeTimelineCollectorsAuxService() :\n+          new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n-      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n+      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n+      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {
            "oldValue": "PerNodeTimelineAggregatorsAuxService",
            "newValue": "PerNodeTimelineCollectorsAuxService"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n+      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n-    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n-        LOG);\n-    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n+    StringUtils.startupShutdownMessage(\n+        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n+    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n-      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n+      auxService \u003d collectorManager \u003d\u003d null ?\n+          new PerNodeTimelineCollectorsAuxService() :\n+          new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n-      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n+      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n+      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n+      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n-    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n-        LOG);\n-    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n+    StringUtils.startupShutdownMessage(\n+        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n+    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n     try {\n-      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n+      auxService \u003d collectorManager \u003d\u003d null ?\n+          new PerNodeTimelineCollectorsAuxService() :\n+          new PerNodeTimelineCollectorsAuxService(collectorManager);\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n       auxService.init(conf);\n       auxService.start();\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n-      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n+      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n+      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n     }\n     return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      launchServer(String[] args, TimelineCollectorManager collectorManager) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(\n        PerNodeTimelineCollectorsAuxService.class, args, LOG);\n    PerNodeTimelineCollectorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d collectorManager \u003d\u003d null ?\n          new PerNodeTimelineCollectorsAuxService() :\n          new PerNodeTimelineCollectorsAuxService(collectorManager);\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeTimelineCollectorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeTimelineCollectorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/PerNodeTimelineCollectorsAuxService.java",
          "extendedDetails": {
            "oldValue": "[args-String[]]",
            "newValue": "[args-String[], collectorManager-TimelineCollectorManager]"
          }
        }
      ]
    },
    "bf54d32750f8b27a170d7a0a8d8f022430327341": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  public static PerNodeAggregatorServer launchServer(String[] args) {\n+  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n-    StringUtils.startupShutdownMessage(PerNodeAggregatorServer.class, args,\n+    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n         LOG);\n-    PerNodeAggregatorServer server \u003d null;\n+    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n     try {\n-      server \u003d new PerNodeAggregatorServer();\n-      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(server),\n+      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n+      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n-      server.init(conf);\n-      server.start();\n+      auxService.init(conf);\n+      auxService.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n     }\n-    return server;\n+    return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n        LOG);\n    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeAggregatorServer.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
            "oldMethodName": "launchServer",
            "newMethodName": "launchServer"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  public static PerNodeAggregatorServer launchServer(String[] args) {\n+  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n-    StringUtils.startupShutdownMessage(PerNodeAggregatorServer.class, args,\n+    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n         LOG);\n-    PerNodeAggregatorServer server \u003d null;\n+    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n     try {\n-      server \u003d new PerNodeAggregatorServer();\n-      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(server),\n+      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n+      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n-      server.init(conf);\n-      server.start();\n+      auxService.init(conf);\n+      auxService.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n     }\n-    return server;\n+    return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n        LOG);\n    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
          "extendedDetails": {
            "oldValue": "PerNodeAggregatorServer",
            "newValue": "PerNodeTimelineAggregatorsAuxService"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  public static PerNodeAggregatorServer launchServer(String[] args) {\n+  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n-    StringUtils.startupShutdownMessage(PerNodeAggregatorServer.class, args,\n+    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n         LOG);\n-    PerNodeAggregatorServer server \u003d null;\n+    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n     try {\n-      server \u003d new PerNodeAggregatorServer();\n-      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(server),\n+      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n+      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n-      server.init(conf);\n-      server.start();\n+      auxService.init(conf);\n+      auxService.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n     }\n-    return server;\n+    return auxService;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static PerNodeTimelineAggregatorsAuxService launchServer(String[] args) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(PerNodeTimelineAggregatorsAuxService.class, args,\n        LOG);\n    PerNodeTimelineAggregatorsAuxService auxService \u003d null;\n    try {\n      auxService \u003d new PerNodeTimelineAggregatorsAuxService();\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(auxService),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      auxService.init(conf);\n      auxService.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n    }\n    return auxService;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeTimelineAggregatorsAuxService.java",
          "extendedDetails": {}
        }
      ]
    },
    "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-3240. Implement client API to put generic entities. Contributed by Zhijie Shen\n\n(cherry picked from commit 4487da249f448d5c67b712cd0aa723e764eed77d)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  static PerNodeAggregatorServer launchServer(String[] args) {\n+  public static PerNodeAggregatorServer launchServer(String[] args) {\n     Thread\n       .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(PerNodeAggregatorServer.class, args,\n         LOG);\n     PerNodeAggregatorServer server \u003d null;\n     try {\n       server \u003d new PerNodeAggregatorServer();\n       ShutdownHookManager.get().addShutdownHook(new ShutdownHook(server),\n           SHUTDOWN_HOOK_PRIORITY);\n       YarnConfiguration conf \u003d new YarnConfiguration();\n       server.init(conf);\n       server.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n       ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n     }\n     return server;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static PerNodeAggregatorServer launchServer(String[] args) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(PerNodeAggregatorServer.class, args,\n        LOG);\n    PerNodeAggregatorServer server \u003d null;\n    try {\n      server \u003d new PerNodeAggregatorServer();\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(server),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      server.init(conf);\n      server.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n    }\n    return server;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeAggregatorServer.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3030. Set up TS aggregator with basic request serving structure and lifecycle. Contributed by Sangjin Lee.\n\n(cherry picked from commit f26941b39028ac30c77547e2be2d657bb5bf044a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,19 @@\n+  static PerNodeAggregatorServer launchServer(String[] args) {\n+    Thread\n+      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n+    StringUtils.startupShutdownMessage(PerNodeAggregatorServer.class, args,\n+        LOG);\n+    PerNodeAggregatorServer server \u003d null;\n+    try {\n+      server \u003d new PerNodeAggregatorServer();\n+      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(server),\n+          SHUTDOWN_HOOK_PRIORITY);\n+      YarnConfiguration conf \u003d new YarnConfiguration();\n+      server.init(conf);\n+      server.start();\n+    } catch (Throwable t) {\n+      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n+      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n+    }\n+    return server;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static PerNodeAggregatorServer launchServer(String[] args) {\n    Thread\n      .setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(PerNodeAggregatorServer.class, args,\n        LOG);\n    PerNodeAggregatorServer server \u003d null;\n    try {\n      server \u003d new PerNodeAggregatorServer();\n      ShutdownHookManager.get().addShutdownHook(new ShutdownHook(server),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      server.init(conf);\n      server.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting PerNodeAggregatorServer\", t);\n      ExitUtil.terminate(-1, \"Error starting PerNodeAggregatorServer\");\n    }\n    return server;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/PerNodeAggregatorServer.java"
    }
  }
}