{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KDiag.java",
  "functionName": "printDefaultRealm",
  "functionId": "printDefaultRealm",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
  "functionStartLine": 486,
  "functionEndLine": 510,
  "numCommitsSeen": 11,
  "timeTaken": 759,
  "changeHistory": [
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4"
  ],
  "changeHistoryShort": {
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12426. Add Entry point for Kerberos health check. Contributed by Steve Loughran.\n",
      "commitDate": "05/02/16 3:47 PM",
      "commitName": "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,25 @@\n+  protected void printDefaultRealm() {\n+    try {\n+      String defaultRealm \u003d getDefaultRealm();\n+      println(\"Default Realm \u003d %s\", defaultRealm);\n+      if (defaultRealm \u003d\u003d null) {\n+        warn(CAT_KERBEROS, \"Host has no default realm\");\n+      }\n+    } catch (ClassNotFoundException\n+        | IllegalAccessException\n+        | NoSuchMethodException e) {\n+      throw new KerberosDiagsFailure(CAT_JVM, e,\n+          \"Failed to invoke krb5.Config.getDefaultRealm: %s: \" +e, e);\n+    } catch (InvocationTargetException e) {\n+      Throwable cause \u003d e.getCause() !\u003d null ? e.getCause() : e;\n+      if (cause.toString().contains(NO_DEFAULT_REALM)) {\n+        // exception raised if there is no default realm. This is not\n+        // always a problem, so downgrade to a message.\n+        warn(CAT_KERBEROS, \"Host has no default realm\");\n+        LOG.debug(cause.toString(), cause);\n+      } else {\n+        error(CAT_KERBEROS, \"Kerberos.getDefaultRealm() failed: %s\\n%s\",\n+            cause, StringUtils.stringifyException(cause));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void printDefaultRealm() {\n    try {\n      String defaultRealm \u003d getDefaultRealm();\n      println(\"Default Realm \u003d %s\", defaultRealm);\n      if (defaultRealm \u003d\u003d null) {\n        warn(CAT_KERBEROS, \"Host has no default realm\");\n      }\n    } catch (ClassNotFoundException\n        | IllegalAccessException\n        | NoSuchMethodException e) {\n      throw new KerberosDiagsFailure(CAT_JVM, e,\n          \"Failed to invoke krb5.Config.getDefaultRealm: %s: \" +e, e);\n    } catch (InvocationTargetException e) {\n      Throwable cause \u003d e.getCause() !\u003d null ? e.getCause() : e;\n      if (cause.toString().contains(NO_DEFAULT_REALM)) {\n        // exception raised if there is no default realm. This is not\n        // always a problem, so downgrade to a message.\n        warn(CAT_KERBEROS, \"Host has no default realm\");\n        LOG.debug(cause.toString(), cause);\n      } else {\n        error(CAT_KERBEROS, \"Kerberos.getDefaultRealm() failed: %s\\n%s\",\n            cause, StringUtils.stringifyException(cause));\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java"
    }
  }
}