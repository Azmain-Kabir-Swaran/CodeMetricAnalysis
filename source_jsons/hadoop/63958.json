{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PlacementConstraintParser.java",
  "functionName": "parse",
  "functionId": "parse",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/constraint/PlacementConstraintParser.java",
  "functionStartLine": 520,
  "functionEndLine": 562,
  "numCommitsSeen": 6,
  "timeTaken": 701,
  "changeHistory": [
    "a08c048832d68c203fbdfce8d9f0e7dcccb02a55"
  ],
  "changeHistoryShort": {
    "a08c048832d68c203fbdfce8d9f0e7dcccb02a55": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a08c048832d68c203fbdfce8d9f0e7dcccb02a55": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7838. Support AND/OR constraints in Distributed Shell. Contributed by Weiwei Yang.\n",
      "commitDate": "10/02/18 10:20 PM",
      "commitName": "a08c048832d68c203fbdfce8d9f0e7dcccb02a55",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,27 @@\n+    public AbstractConstraint parse() throws PlacementConstraintParseException {\n+      // do pre-process, validate input.\n+      validate();\n+      String op \u003d nextToken();\n+      shouldHaveNext();\n+      List\u003cAbstractConstraint\u003e constraints \u003d new ArrayList\u003c\u003e();\n+      while(hasMoreTokens()) {\n+        // each child expression can be any valid form of\n+        // constraint expressions.\n+        String constraintStr \u003d nextToken();\n+        AbstractConstraint constraint \u003d parseExpression(constraintStr);\n+        constraints.add(constraint);\n+      }\n+      if (AND.equalsIgnoreCase(op)) {\n+        return PlacementConstraints.and(\n+            constraints.toArray(\n+                new AbstractConstraint[constraints.size()]));\n+      } else if (OR.equalsIgnoreCase(op)) {\n+        return PlacementConstraints.or(\n+            constraints.toArray(\n+                new AbstractConstraint[constraints.size()]));\n+      } else {\n+        throw new PlacementConstraintParseException(\n+            \"Unexpected conjunction operator : \" + op\n+                + \", expecting \" + AND + \" or \" + OR);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public AbstractConstraint parse() throws PlacementConstraintParseException {\n      // do pre-process, validate input.\n      validate();\n      String op \u003d nextToken();\n      shouldHaveNext();\n      List\u003cAbstractConstraint\u003e constraints \u003d new ArrayList\u003c\u003e();\n      while(hasMoreTokens()) {\n        // each child expression can be any valid form of\n        // constraint expressions.\n        String constraintStr \u003d nextToken();\n        AbstractConstraint constraint \u003d parseExpression(constraintStr);\n        constraints.add(constraint);\n      }\n      if (AND.equalsIgnoreCase(op)) {\n        return PlacementConstraints.and(\n            constraints.toArray(\n                new AbstractConstraint[constraints.size()]));\n      } else if (OR.equalsIgnoreCase(op)) {\n        return PlacementConstraints.or(\n            constraints.toArray(\n                new AbstractConstraint[constraints.size()]));\n      } else {\n        throw new PlacementConstraintParseException(\n            \"Unexpected conjunction operator : \" + op\n                + \", expecting \" + AND + \" or \" + OR);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/constraint/PlacementConstraintParser.java"
    }
  }
}