{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WasbTokenRenewer.java",
  "functionName": "renew",
  "functionId": "renew___token-Token__?__(modifiers-final)__conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/security/WasbTokenRenewer.java",
  "functionStartLine": 67,
  "functionEndLine": 71,
  "numCommitsSeen": 5,
  "timeTaken": 1557,
  "changeHistory": [
    "38996fdcf0987d1da00ce46f8284d8fcdce57329",
    "8b5f2c372e70999f3ee0a0bd685a494e06bc3652",
    "8e15e240597f821968e14893eabfea39815de207"
  ],
  "changeHistoryShort": {
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": "Ybodychange",
    "8b5f2c372e70999f3ee0a0bd685a494e06bc3652": "Ybodychange",
    "8e15e240597f821968e14893eabfea39815de207": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14443. Azure: Support retry and client side failover for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak\n",
      "commitDate": "30/06/17 4:53 PM",
      "commitName": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "26/04/17 1:47 PM",
      "commitNameOld": "8b5f2c372e70999f3ee0a0bd685a494e06bc3652",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 65.13,
      "commitsBetweenForRepo": 346,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,5 @@\n   public long renew(final Token\u003c?\u003e token, Configuration conf)\n       throws IOException, InterruptedException {\n     LOG.debug(\"Renewing the delegation token\");\n-    final UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n-    UserGroupInformation connectUgi \u003d ugi.getRealUser();\n-    final UserGroupInformation proxyUser \u003d connectUgi;\n-    if (connectUgi \u003d\u003d null) {\n-      connectUgi \u003d ugi;\n-    }\n-    connectUgi.checkTGTAndReloginFromKeytab();\n-    final DelegationTokenAuthenticatedURL.Token authToken \u003d new DelegationTokenAuthenticatedURL.Token();\n-    authToken\n-        .setDelegationToken((Token\u003cAbstractDelegationTokenIdentifier\u003e) token);\n-    final String credServiceUrl \u003d conf.get(Constants.KEY_CRED_SERVICE_URL,\n-        String.format(\"http://%s:%s\",\n-            InetAddress.getLocalHost().getCanonicalHostName(),\n-            Constants.DEFAULT_CRED_SERVICE_PORT));\n-    DelegationTokenAuthenticator authenticator \u003d new KerberosDelegationTokenAuthenticator();\n-    final DelegationTokenAuthenticatedURL authURL \u003d new DelegationTokenAuthenticatedURL(\n-        authenticator);\n-\n-    return connectUgi.doAs(new PrivilegedExceptionAction\u003cLong\u003e() {\n-      @Override\n-      public Long run() throws Exception {\n-        return authURL.renewDelegationToken(new URL(credServiceUrl\n-                + Constants.DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT),\n-            authToken, (proxyUser !\u003d null) ? ugi.getShortUserName() : null);\n-      }\n-    });\n+    return getInstance(conf).renewDelegationToken(token);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public long renew(final Token\u003c?\u003e token, Configuration conf)\n      throws IOException, InterruptedException {\n    LOG.debug(\"Renewing the delegation token\");\n    return getInstance(conf).renewDelegationToken(token);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/security/WasbTokenRenewer.java",
      "extendedDetails": {}
    },
    "8b5f2c372e70999f3ee0a0bd685a494e06bc3652": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14351. Azure: RemoteWasbAuthorizerImpl and RemoteSASKeyGeneratorImpl should not use Kerberos interactive user cache. Contributed by Santhosh G Nayak\n",
      "commitDate": "26/04/17 1:47 PM",
      "commitName": "8b5f2c372e70999f3ee0a0bd685a494e06bc3652",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "20/03/17 4:31 PM",
      "commitNameOld": "8e15e240597f821968e14893eabfea39815de207",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 36.89,
      "commitsBetweenForRepo": 211,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,30 @@\n   public long renew(final Token\u003c?\u003e token, Configuration conf)\n       throws IOException, InterruptedException {\n     LOG.debug(\"Renewing the delegation token\");\n     final UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n     UserGroupInformation connectUgi \u003d ugi.getRealUser();\n     final UserGroupInformation proxyUser \u003d connectUgi;\n     if (connectUgi \u003d\u003d null) {\n       connectUgi \u003d ugi;\n     }\n-    if (!connectUgi.hasKerberosCredentials()) {\n-      connectUgi \u003d UserGroupInformation.getLoginUser();\n-    }\n     connectUgi.checkTGTAndReloginFromKeytab();\n     final DelegationTokenAuthenticatedURL.Token authToken \u003d new DelegationTokenAuthenticatedURL.Token();\n     authToken\n         .setDelegationToken((Token\u003cAbstractDelegationTokenIdentifier\u003e) token);\n     final String credServiceUrl \u003d conf.get(Constants.KEY_CRED_SERVICE_URL,\n         String.format(\"http://%s:%s\",\n             InetAddress.getLocalHost().getCanonicalHostName(),\n             Constants.DEFAULT_CRED_SERVICE_PORT));\n     DelegationTokenAuthenticator authenticator \u003d new KerberosDelegationTokenAuthenticator();\n     final DelegationTokenAuthenticatedURL authURL \u003d new DelegationTokenAuthenticatedURL(\n         authenticator);\n \n     return connectUgi.doAs(new PrivilegedExceptionAction\u003cLong\u003e() {\n       @Override\n       public Long run() throws Exception {\n         return authURL.renewDelegationToken(new URL(credServiceUrl\n                 + Constants.DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT),\n             authToken, (proxyUser !\u003d null) ? ugi.getShortUserName() : null);\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public long renew(final Token\u003c?\u003e token, Configuration conf)\n      throws IOException, InterruptedException {\n    LOG.debug(\"Renewing the delegation token\");\n    final UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n    UserGroupInformation connectUgi \u003d ugi.getRealUser();\n    final UserGroupInformation proxyUser \u003d connectUgi;\n    if (connectUgi \u003d\u003d null) {\n      connectUgi \u003d ugi;\n    }\n    connectUgi.checkTGTAndReloginFromKeytab();\n    final DelegationTokenAuthenticatedURL.Token authToken \u003d new DelegationTokenAuthenticatedURL.Token();\n    authToken\n        .setDelegationToken((Token\u003cAbstractDelegationTokenIdentifier\u003e) token);\n    final String credServiceUrl \u003d conf.get(Constants.KEY_CRED_SERVICE_URL,\n        String.format(\"http://%s:%s\",\n            InetAddress.getLocalHost().getCanonicalHostName(),\n            Constants.DEFAULT_CRED_SERVICE_PORT));\n    DelegationTokenAuthenticator authenticator \u003d new KerberosDelegationTokenAuthenticator();\n    final DelegationTokenAuthenticatedURL authURL \u003d new DelegationTokenAuthenticatedURL(\n        authenticator);\n\n    return connectUgi.doAs(new PrivilegedExceptionAction\u003cLong\u003e() {\n      @Override\n      public Long run() throws Exception {\n        return authURL.renewDelegationToken(new URL(credServiceUrl\n                + Constants.DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT),\n            authToken, (proxyUser !\u003d null) ? ugi.getShortUserName() : null);\n      }\n    });\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/security/WasbTokenRenewer.java",
      "extendedDetails": {}
    },
    "8e15e240597f821968e14893eabfea39815de207": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13945. Azure: Add Kerberos and Delegation token support to WASB client. Contributed by Santhosh G Nayak\n\nChange-Id: I39fb0a3b0491bf2160571366939a0502a0045429\n",
      "commitDate": "20/03/17 4:31 PM",
      "commitName": "8e15e240597f821968e14893eabfea39815de207",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,33 @@\n+  public long renew(final Token\u003c?\u003e token, Configuration conf)\n+      throws IOException, InterruptedException {\n+    LOG.debug(\"Renewing the delegation token\");\n+    final UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n+    UserGroupInformation connectUgi \u003d ugi.getRealUser();\n+    final UserGroupInformation proxyUser \u003d connectUgi;\n+    if (connectUgi \u003d\u003d null) {\n+      connectUgi \u003d ugi;\n+    }\n+    if (!connectUgi.hasKerberosCredentials()) {\n+      connectUgi \u003d UserGroupInformation.getLoginUser();\n+    }\n+    connectUgi.checkTGTAndReloginFromKeytab();\n+    final DelegationTokenAuthenticatedURL.Token authToken \u003d new DelegationTokenAuthenticatedURL.Token();\n+    authToken\n+        .setDelegationToken((Token\u003cAbstractDelegationTokenIdentifier\u003e) token);\n+    final String credServiceUrl \u003d conf.get(Constants.KEY_CRED_SERVICE_URL,\n+        String.format(\"http://%s:%s\",\n+            InetAddress.getLocalHost().getCanonicalHostName(),\n+            Constants.DEFAULT_CRED_SERVICE_PORT));\n+    DelegationTokenAuthenticator authenticator \u003d new KerberosDelegationTokenAuthenticator();\n+    final DelegationTokenAuthenticatedURL authURL \u003d new DelegationTokenAuthenticatedURL(\n+        authenticator);\n+\n+    return connectUgi.doAs(new PrivilegedExceptionAction\u003cLong\u003e() {\n+      @Override\n+      public Long run() throws Exception {\n+        return authURL.renewDelegationToken(new URL(credServiceUrl\n+                + Constants.DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT),\n+            authToken, (proxyUser !\u003d null) ? ugi.getShortUserName() : null);\n+      }\n+    });\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public long renew(final Token\u003c?\u003e token, Configuration conf)\n      throws IOException, InterruptedException {\n    LOG.debug(\"Renewing the delegation token\");\n    final UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n    UserGroupInformation connectUgi \u003d ugi.getRealUser();\n    final UserGroupInformation proxyUser \u003d connectUgi;\n    if (connectUgi \u003d\u003d null) {\n      connectUgi \u003d ugi;\n    }\n    if (!connectUgi.hasKerberosCredentials()) {\n      connectUgi \u003d UserGroupInformation.getLoginUser();\n    }\n    connectUgi.checkTGTAndReloginFromKeytab();\n    final DelegationTokenAuthenticatedURL.Token authToken \u003d new DelegationTokenAuthenticatedURL.Token();\n    authToken\n        .setDelegationToken((Token\u003cAbstractDelegationTokenIdentifier\u003e) token);\n    final String credServiceUrl \u003d conf.get(Constants.KEY_CRED_SERVICE_URL,\n        String.format(\"http://%s:%s\",\n            InetAddress.getLocalHost().getCanonicalHostName(),\n            Constants.DEFAULT_CRED_SERVICE_PORT));\n    DelegationTokenAuthenticator authenticator \u003d new KerberosDelegationTokenAuthenticator();\n    final DelegationTokenAuthenticatedURL authURL \u003d new DelegationTokenAuthenticatedURL(\n        authenticator);\n\n    return connectUgi.doAs(new PrivilegedExceptionAction\u003cLong\u003e() {\n      @Override\n      public Long run() throws Exception {\n        return authURL.renewDelegationToken(new URL(credServiceUrl\n                + Constants.DEFAULT_DELEGATION_TOKEN_MANAGER_ENDPOINT),\n            authToken, (proxyUser !\u003d null) ? ugi.getShortUserName() : null);\n      }\n    });\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/security/WasbTokenRenewer.java"
    }
  }
}