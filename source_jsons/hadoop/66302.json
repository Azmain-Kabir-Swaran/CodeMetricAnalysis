{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerMetrics.java",
  "functionName": "trackApp",
  "functionId": "trackApp___appId-ApplicationId(modifiers-final)__oldAppId-String",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
  "functionStartLine": 204,
  "functionEndLine": 233,
  "numCommitsSeen": 10,
  "timeTaken": 2424,
  "changeHistory": [
    "cc938e99ec0904824c8072184eff75619fcaf040",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "cc938e99ec0904824c8072184eff75619fcaf040": "Ymultichange(Yparameterchange,Ybodychange)",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc938e99ec0904824c8072184eff75619fcaf040": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6326. Shouldn\u0027t use AppAttemptIds to fetch applications while AM Simulator tracks app in SLS (yufeigu via rkanter)\n",
      "commitDate": "21/03/17 3:21 PM",
      "commitName": "cc938e99ec0904824c8072184eff75619fcaf040",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6326. Shouldn\u0027t use AppAttemptIds to fetch applications while AM Simulator tracks app in SLS (yufeigu via rkanter)\n",
          "commitDate": "21/03/17 3:21 PM",
          "commitName": "cc938e99ec0904824c8072184eff75619fcaf040",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "25/07/14 10:12 AM",
          "commitNameOld": "77363b9d839e47bef2325b8682eabe00d4c83354",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 970.21,
          "commitsBetweenForRepo": 7319,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,30 @@\n-  public void trackApp(final ApplicationAttemptId appAttemptId,\n-                       String oldAppId) {\n+  public void trackApp(final ApplicationId appId, String oldAppId) {\n     metrics.register(\"variable.app.\" + oldAppId + \".live.containers\",\n-      new Gauge\u003cInteger\u003e() {\n-        @Override\n-        public Integer getValue() {\n-          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n-          return app.getLiveContainers().size();\n+        new Gauge\u003cInteger\u003e() {\n+          @Override\n+          public Integer getValue() {\n+            SchedulerApplicationAttempt appAttempt \u003d\n+                getSchedulerAppAttempt(appId);\n+            if (appAttempt !\u003d null) {\n+              return appAttempt.getLiveContainers().size();\n+            } else {\n+              return 0;\n+            }\n+          }\n         }\n-      }\n     );\n     metrics.register(\"variable.app.\" + oldAppId + \".reserved.containers\",\n-      new Gauge\u003cInteger\u003e() {\n-        @Override\n-        public Integer getValue() {\n-          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n-          return app.getReservedContainers().size();\n+        new Gauge\u003cInteger\u003e() {\n+          @Override\n+          public Integer getValue() {\n+            SchedulerApplicationAttempt appAttempt \u003d\n+                getSchedulerAppAttempt(appId);\n+            if (appAttempt !\u003d null) {\n+              return appAttempt.getReservedContainers().size();\n+            } else {\n+              return 0;\n+            }\n+          }\n         }\n-      }\n     );\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void trackApp(final ApplicationId appId, String oldAppId) {\n    metrics.register(\"variable.app.\" + oldAppId + \".live.containers\",\n        new Gauge\u003cInteger\u003e() {\n          @Override\n          public Integer getValue() {\n            SchedulerApplicationAttempt appAttempt \u003d\n                getSchedulerAppAttempt(appId);\n            if (appAttempt !\u003d null) {\n              return appAttempt.getLiveContainers().size();\n            } else {\n              return 0;\n            }\n          }\n        }\n    );\n    metrics.register(\"variable.app.\" + oldAppId + \".reserved.containers\",\n        new Gauge\u003cInteger\u003e() {\n          @Override\n          public Integer getValue() {\n            SchedulerApplicationAttempt appAttempt \u003d\n                getSchedulerAppAttempt(appId);\n            if (appAttempt !\u003d null) {\n              return appAttempt.getReservedContainers().size();\n            } else {\n              return 0;\n            }\n          }\n        }\n    );\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {
            "oldValue": "[appAttemptId-ApplicationAttemptId(modifiers-final), oldAppId-String]",
            "newValue": "[appId-ApplicationId(modifiers-final), oldAppId-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6326. Shouldn\u0027t use AppAttemptIds to fetch applications while AM Simulator tracks app in SLS (yufeigu via rkanter)\n",
          "commitDate": "21/03/17 3:21 PM",
          "commitName": "cc938e99ec0904824c8072184eff75619fcaf040",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "25/07/14 10:12 AM",
          "commitNameOld": "77363b9d839e47bef2325b8682eabe00d4c83354",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 970.21,
          "commitsBetweenForRepo": 7319,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,30 @@\n-  public void trackApp(final ApplicationAttemptId appAttemptId,\n-                       String oldAppId) {\n+  public void trackApp(final ApplicationId appId, String oldAppId) {\n     metrics.register(\"variable.app.\" + oldAppId + \".live.containers\",\n-      new Gauge\u003cInteger\u003e() {\n-        @Override\n-        public Integer getValue() {\n-          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n-          return app.getLiveContainers().size();\n+        new Gauge\u003cInteger\u003e() {\n+          @Override\n+          public Integer getValue() {\n+            SchedulerApplicationAttempt appAttempt \u003d\n+                getSchedulerAppAttempt(appId);\n+            if (appAttempt !\u003d null) {\n+              return appAttempt.getLiveContainers().size();\n+            } else {\n+              return 0;\n+            }\n+          }\n         }\n-      }\n     );\n     metrics.register(\"variable.app.\" + oldAppId + \".reserved.containers\",\n-      new Gauge\u003cInteger\u003e() {\n-        @Override\n-        public Integer getValue() {\n-          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n-          return app.getReservedContainers().size();\n+        new Gauge\u003cInteger\u003e() {\n+          @Override\n+          public Integer getValue() {\n+            SchedulerApplicationAttempt appAttempt \u003d\n+                getSchedulerAppAttempt(appId);\n+            if (appAttempt !\u003d null) {\n+              return appAttempt.getReservedContainers().size();\n+            } else {\n+              return 0;\n+            }\n+          }\n         }\n-      }\n     );\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void trackApp(final ApplicationId appId, String oldAppId) {\n    metrics.register(\"variable.app.\" + oldAppId + \".live.containers\",\n        new Gauge\u003cInteger\u003e() {\n          @Override\n          public Integer getValue() {\n            SchedulerApplicationAttempt appAttempt \u003d\n                getSchedulerAppAttempt(appId);\n            if (appAttempt !\u003d null) {\n              return appAttempt.getLiveContainers().size();\n            } else {\n              return 0;\n            }\n          }\n        }\n    );\n    metrics.register(\"variable.app.\" + oldAppId + \".reserved.containers\",\n        new Gauge\u003cInteger\u003e() {\n          @Override\n          public Integer getValue() {\n            SchedulerApplicationAttempt appAttempt \u003d\n                getSchedulerAppAttempt(appId);\n            if (appAttempt !\u003d null) {\n              return appAttempt.getReservedContainers().size();\n            } else {\n              return 0;\n            }\n          }\n        }\n    );\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,21 @@\n+  public void trackApp(final ApplicationAttemptId appAttemptId,\n+                       String oldAppId) {\n+    metrics.register(\"variable.app.\" + oldAppId + \".live.containers\",\n+      new Gauge\u003cInteger\u003e() {\n+        @Override\n+        public Integer getValue() {\n+          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n+          return app.getLiveContainers().size();\n+        }\n+      }\n+    );\n+    metrics.register(\"variable.app.\" + oldAppId + \".reserved.containers\",\n+      new Gauge\u003cInteger\u003e() {\n+        @Override\n+        public Integer getValue() {\n+          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n+          return app.getReservedContainers().size();\n+        }\n+      }\n+    );\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void trackApp(final ApplicationAttemptId appAttemptId,\n                       String oldAppId) {\n    metrics.register(\"variable.app.\" + oldAppId + \".live.containers\",\n      new Gauge\u003cInteger\u003e() {\n        @Override\n        public Integer getValue() {\n          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n          return app.getLiveContainers().size();\n        }\n      }\n    );\n    metrics.register(\"variable.app.\" + oldAppId + \".reserved.containers\",\n      new Gauge\u003cInteger\u003e() {\n        @Override\n        public Integer getValue() {\n          SchedulerAppReport app \u003d scheduler.getSchedulerAppInfo(appAttemptId);\n          return app.getReservedContainers().size();\n        }\n      }\n    );\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java"
    }
  }
}