{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMTokenSecretManager.java",
  "functionName": "recover",
  "functionId": "recover___state-RMState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java",
  "functionStartLine": 313,
  "functionEndLine": 332,
  "numCommitsSeen": 9,
  "timeTaken": 1302,
  "changeHistory": [
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe"
  ],
  "changeHistoryShort": {
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2211. Persist AMRMToken master key in RMStateStore for RM recovery. Contributed by Xuan Gong\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613515 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 1:42 PM",
      "commitName": "d4fec3493351c619a0278929ae2d5c8cd67cbfbe",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+  public void recover(RMState state) {\n+    if (state.getAMRMTokenSecretManagerState() !\u003d null) {\n+      // recover the current master key\n+      MasterKey currentKey \u003d\n+          state.getAMRMTokenSecretManagerState().getCurrentMasterKey();\n+      this.currentMasterKey \u003d\n+          new MasterKeyData(currentKey, createSecretKey(currentKey.getBytes()\n+            .array()));\n+\n+      // recover the next master key if not null\n+      MasterKey nextKey \u003d\n+          state.getAMRMTokenSecretManagerState().getNextMasterKey();\n+      if (nextKey !\u003d null) {\n+        this.nextMasterKey \u003d\n+            new MasterKeyData(nextKey, createSecretKey(nextKey.getBytes()\n+              .array()));\n+        this.timer.schedule(new NextKeyActivator(), this.activationDelay);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    if (state.getAMRMTokenSecretManagerState() !\u003d null) {\n      // recover the current master key\n      MasterKey currentKey \u003d\n          state.getAMRMTokenSecretManagerState().getCurrentMasterKey();\n      this.currentMasterKey \u003d\n          new MasterKeyData(currentKey, createSecretKey(currentKey.getBytes()\n            .array()));\n\n      // recover the next master key if not null\n      MasterKey nextKey \u003d\n          state.getAMRMTokenSecretManagerState().getNextMasterKey();\n      if (nextKey !\u003d null) {\n        this.nextMasterKey \u003d\n            new MasterKeyData(nextKey, createSecretKey(nextKey.getBytes()\n              .array()));\n        this.timer.schedule(new NextKeyActivator(), this.activationDelay);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/AMRMTokenSecretManager.java"
    }
  }
}