{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPermissionChecker.java",
  "functionName": "checkNotSymlink",
  "functionId": "checkNotSymlink___inode-INode__components-byte[][]__i-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
  "functionStartLine": 739,
  "functionEndLine": 756,
  "numCommitsSeen": 51,
  "timeTaken": 2037,
  "changeHistory": [
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04"
  ],
  "changeHistoryShort": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,18 @@\n+  private static void checkNotSymlink(INode inode, byte[][] components, int i)\n+      throws UnresolvedPathException {\n+    if (inode !\u003d null \u0026\u0026 inode.isSymlink()) {\n+      final int last \u003d components.length - 1;\n+      final String path \u003d getPath(components, 0, last);\n+      final String preceding \u003d getPath(components, 0, i - 1);\n+      final String remainder \u003d getPath(components, i + 1, last);\n+      final String target \u003d inode.asSymlink().getSymlinkString();\n+      if (LOG.isDebugEnabled()) {\n+        final String link \u003d inode.getLocalName();\n+        LOG.debug(\"UnresolvedPathException \" +\n+            \" path: \" + path + \" preceding: \" + preceding +\n+            \" count: \" + i + \" link: \" + link + \" target: \" + target +\n+            \" remainder: \" + remainder);\n+      }\n+      throw new UnresolvedPathException(path, preceding, remainder, target);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkNotSymlink(INode inode, byte[][] components, int i)\n      throws UnresolvedPathException {\n    if (inode !\u003d null \u0026\u0026 inode.isSymlink()) {\n      final int last \u003d components.length - 1;\n      final String path \u003d getPath(components, 0, last);\n      final String preceding \u003d getPath(components, 0, i - 1);\n      final String remainder \u003d getPath(components, i + 1, last);\n      final String target \u003d inode.asSymlink().getSymlinkString();\n      if (LOG.isDebugEnabled()) {\n        final String link \u003d inode.getLocalName();\n        LOG.debug(\"UnresolvedPathException \" +\n            \" path: \" + path + \" preceding: \" + preceding +\n            \" count: \" + i + \" link: \" + link + \" target: \" + target +\n            \" remainder: \" + remainder);\n      }\n      throw new UnresolvedPathException(path, preceding, remainder, target);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java"
    }
  }
}