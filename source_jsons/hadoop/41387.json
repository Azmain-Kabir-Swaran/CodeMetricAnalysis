{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSLeafQueue.java",
  "functionName": "isStarved",
  "functionId": "isStarved",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
  "functionStartLine": 634,
  "functionEndLine": 636,
  "numCommitsSeen": 216,
  "timeTaken": 6282,
  "changeHistory": [
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "ac94ba3e185115b83351e35c610c2b8ff91b1ebc",
    "e7257acd8a7adb74d81cd1d009d4a99f023ed844",
    "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
    "a43c344eee888f2a2488c8c9dca7e25a2cce10bf",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c"
  ],
  "changeHistoryShort": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "ac94ba3e185115b83351e35c610c2b8ff91b1ebc": "Ybodychange",
    "e7257acd8a7adb74d81cd1d009d4a99f023ed844": "Ybodychange",
    "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": "Ybodychange",
    "a43c344eee888f2a2488c8c9dca7e25a2cce10bf": "Ybodychange",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": "Yparameterchange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 11:44 PM",
          "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 13.92,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,3 @@\n-  private boolean isStarved(Resource share) {\n-    Resource desiredShare \u003d Resources.min(policy.getResourceCalculator(),\n-            scheduler.getClusterResource(), share, getDemand());\n-    Resource resourceUsage \u003d getResourceUsage();\n-    return Resources.lessThan(policy.getResourceCalculator(),\n-            scheduler.getClusterResource(), resourceUsage, desiredShare);\n+  boolean isStarved() {\n+    return isStarvedForMinShare() || isStarvedForFairShare();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean isStarved() {\n    return isStarvedForMinShare() || isStarvedForFairShare();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[share-Resource]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 11:44 PM",
          "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 13.92,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,3 @@\n-  private boolean isStarved(Resource share) {\n-    Resource desiredShare \u003d Resources.min(policy.getResourceCalculator(),\n-            scheduler.getClusterResource(), share, getDemand());\n-    Resource resourceUsage \u003d getResourceUsage();\n-    return Resources.lessThan(policy.getResourceCalculator(),\n-            scheduler.getClusterResource(), resourceUsage, desiredShare);\n+  boolean isStarved() {\n+    return isStarvedForMinShare() || isStarvedForFairShare();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean isStarved() {\n    return isStarvedForMinShare() || isStarvedForFairShare();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "09/11/16 11:44 PM",
          "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 13.92,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,3 @@\n-  private boolean isStarved(Resource share) {\n-    Resource desiredShare \u003d Resources.min(policy.getResourceCalculator(),\n-            scheduler.getClusterResource(), share, getDemand());\n-    Resource resourceUsage \u003d getResourceUsage();\n-    return Resources.lessThan(policy.getResourceCalculator(),\n-            scheduler.getClusterResource(), resourceUsage, desiredShare);\n+  boolean isStarved() {\n+    return isStarvedForMinShare() || isStarvedForFairShare();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean isStarved() {\n    return isStarvedForMinShare() || isStarvedForFairShare();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "ac94ba3e185115b83351e35c610c2b8ff91b1ebc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3453. Ensure preemption logic in FairScheduler uses DominantResourceCalculator in DRF queues to prevent unnecessary thrashing. (asuresh)\n",
      "commitDate": "14/07/15 12:23 AM",
      "commitName": "ac94ba3e185115b83351e35c610c2b8ff91b1ebc",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "29/05/15 3:17 PM",
      "commitNameOld": "3ae2a625018bc8cf431aa19da5bf8fe4ef8c1ad4",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 45.38,
      "commitsBetweenForRepo": 294,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n   private boolean isStarved(Resource share) {\n-    Resource desiredShare \u003d Resources.min(scheduler.getResourceCalculator(),\n-        scheduler.getClusterResource(), share, getDemand());\n-    return Resources.lessThan(scheduler.getResourceCalculator(),\n-        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n+    Resource desiredShare \u003d Resources.min(policy.getResourceCalculator(),\n+            scheduler.getClusterResource(), share, getDemand());\n+    Resource resourceUsage \u003d getResourceUsage();\n+    return Resources.lessThan(policy.getResourceCalculator(),\n+            scheduler.getClusterResource(), resourceUsage, desiredShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isStarved(Resource share) {\n    Resource desiredShare \u003d Resources.min(policy.getResourceCalculator(),\n            scheduler.getClusterResource(), share, getDemand());\n    Resource resourceUsage \u003d getResourceUsage();\n    return Resources.lessThan(policy.getResourceCalculator(),\n            scheduler.getClusterResource(), resourceUsage, desiredShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "e7257acd8a7adb74d81cd1d009d4a99f023ed844": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2998. Abstract out scheduler independent PlanFollower components. (Anubhav Dhoot via kasha)\n",
      "commitDate": "30/12/14 7:55 PM",
      "commitName": "e7257acd8a7adb74d81cd1d009d4a99f023ed844",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "20/12/14 12:17 PM",
      "commitNameOld": "24ee9e3431d27811530ffa01d8d241133fd643fe",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 10.32,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private boolean isStarved(Resource share) {\n-    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n+    Resource desiredShare \u003d Resources.min(scheduler.getResourceCalculator(),\n         scheduler.getClusterResource(), share, getDemand());\n-    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n+    return Resources.lessThan(scheduler.getResourceCalculator(),\n         scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isStarved(Resource share) {\n    Resource desiredShare \u003d Resources.min(scheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), share, getDemand());\n    return Resources.lessThan(scheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
      "commitDate": "03/09/14 10:27 AM",
      "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
          "commitDate": "03/09/14 10:27 AM",
          "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "03/09/14 9:39 AM",
          "commitNameOld": "ce0462129fe09898fd9b169cae0564cb6d9bc419",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  boolean isStarvedForMinShare(FSLeafQueue sched) {\n-    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterResource,\n-      sched.getMinShare(), sched.getDemand());\n-    return Resources.lessThan(RESOURCE_CALCULATOR, clusterResource,\n-        sched.getResourceUsage(), desiredShare);\n+  private boolean isStarved(Resource share) {\n+    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), share, getDemand());\n+    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isStarved(Resource share) {\n    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), share, getDemand());\n    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
            "oldMethodName": "isStarvedForMinShare",
            "newMethodName": "isStarved"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
          "commitDate": "03/09/14 10:27 AM",
          "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "03/09/14 9:39 AM",
          "commitNameOld": "ce0462129fe09898fd9b169cae0564cb6d9bc419",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  boolean isStarvedForMinShare(FSLeafQueue sched) {\n-    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterResource,\n-      sched.getMinShare(), sched.getDemand());\n-    return Resources.lessThan(RESOURCE_CALCULATOR, clusterResource,\n-        sched.getResourceUsage(), desiredShare);\n+  private boolean isStarved(Resource share) {\n+    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), share, getDemand());\n+    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isStarved(Resource share) {\n    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), share, getDemand());\n    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
          "commitDate": "03/09/14 10:27 AM",
          "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "03/09/14 9:39 AM",
          "commitNameOld": "ce0462129fe09898fd9b169cae0564cb6d9bc419",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  boolean isStarvedForMinShare(FSLeafQueue sched) {\n-    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterResource,\n-      sched.getMinShare(), sched.getDemand());\n-    return Resources.lessThan(RESOURCE_CALCULATOR, clusterResource,\n-        sched.getResourceUsage(), desiredShare);\n+  private boolean isStarved(Resource share) {\n+    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), share, getDemand());\n+    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isStarved(Resource share) {\n    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), share, getDemand());\n    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
          "commitDate": "03/09/14 10:27 AM",
          "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "03/09/14 9:39 AM",
          "commitNameOld": "ce0462129fe09898fd9b169cae0564cb6d9bc419",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  boolean isStarvedForMinShare(FSLeafQueue sched) {\n-    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterResource,\n-      sched.getMinShare(), sched.getDemand());\n-    return Resources.lessThan(RESOURCE_CALCULATOR, clusterResource,\n-        sched.getResourceUsage(), desiredShare);\n+  private boolean isStarved(Resource share) {\n+    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), share, getDemand());\n+    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isStarved(Resource share) {\n    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), share, getDemand());\n    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "isStarvedForMinShare",
            "newValue": "isStarved"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
          "commitDate": "03/09/14 10:27 AM",
          "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "03/09/14 9:39 AM",
          "commitNameOld": "ce0462129fe09898fd9b169cae0564cb6d9bc419",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  boolean isStarvedForMinShare(FSLeafQueue sched) {\n-    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterResource,\n-      sched.getMinShare(), sched.getDemand());\n-    return Resources.lessThan(RESOURCE_CALCULATOR, clusterResource,\n-        sched.getResourceUsage(), desiredShare);\n+  private boolean isStarved(Resource share) {\n+    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), share, getDemand());\n+    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n+        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isStarved(Resource share) {\n    Resource desiredShare \u003d Resources.min(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), share, getDemand());\n    return Resources.lessThan(FairScheduler.getResourceCalculator(),\n        scheduler.getClusterResource(), getResourceUsage(), desiredShare);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[sched-FSLeafQueue]",
            "newValue": "[share-Resource]"
          }
        }
      ]
    },
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 10:32 PM",
      "commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "31/03/14 4:40 PM",
      "commitNameOld": "7bd62b8da03642612fae8349e967b9c0aa290843",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 51.24,
      "commitsBetweenForRepo": 299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   boolean isStarvedForMinShare(FSLeafQueue sched) {\n-    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterCapacity,\n+    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterResource,\n       sched.getMinShare(), sched.getDemand());\n-    return Resources.lessThan(RESOURCE_CALCULATOR, clusterCapacity,\n+    return Resources.lessThan(RESOURCE_CALCULATOR, clusterResource,\n         sched.getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isStarvedForMinShare(FSLeafQueue sched) {\n    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterResource,\n      sched.getMinShare(), sched.getDemand());\n    return Resources.lessThan(RESOURCE_CALCULATOR, clusterResource,\n        sched.getResourceUsage(), desiredShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "a43c344eee888f2a2488c8c9dca7e25a2cce10bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-595. Refactor fair scheduler to use common Resources. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1475670 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/13 1:33 AM",
      "commitName": "a43c344eee888f2a2488c8c9dca7e25a2cce10bf",
      "commitAuthor": "Thomas White",
      "commitDateOld": "18/04/13 11:11 AM",
      "commitNameOld": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 6.6,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,6 @@\n   boolean isStarvedForMinShare(FSLeafQueue sched) {\n-    Resource desiredShare \u003d Resources.min(sched.getMinShare(), sched.getDemand());\n-    return Resources.lessThan(sched.getResourceUsage(), desiredShare);\n+    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterCapacity,\n+        sched.getMinShare(), sched.getDemand());\n+    return Resources.lessThan(RESOURCE_CALCULATOR, clusterCapacity,\n+        sched.getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isStarvedForMinShare(FSLeafQueue sched) {\n    Resource desiredShare \u003d Resources.min(RESOURCE_CALCULATOR, clusterCapacity,\n        sched.getMinShare(), sched.getDemand());\n    return Resources.lessThan(RESOURCE_CALCULATOR, clusterCapacity,\n        sched.getResourceUsage(), desiredShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415592 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/12 4:03 AM",
      "commitName": "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
      "commitAuthor": "Thomas White",
      "commitDateOld": "28/11/12 5:56 PM",
      "commitNameOld": "1943fdbec613715f3cdc3ca60cbd273115f28299",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.42,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-  boolean isStarvedForMinShare(FSQueueSchedulable sched) {\n+  boolean isStarvedForMinShare(FSLeafQueue sched) {\n     Resource desiredShare \u003d Resources.min(sched.getMinShare(), sched.getDemand());\n     return Resources.lessThan(sched.getResourceUsage(), desiredShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isStarvedForMinShare(FSLeafQueue sched) {\n    Resource desiredShare \u003d Resources.min(sched.getMinShare(), sched.getDemand());\n    return Resources.lessThan(sched.getResourceUsage(), desiredShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {
        "oldValue": "[sched-FSQueueSchedulable]",
        "newValue": "[sched-FSLeafQueue]"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean isStarvedForMinShare(FSQueueSchedulable sched) {\n    Resource desiredShare \u003d Resources.min(sched.getMinShare(), sched.getDemand());\n    return Resources.lessThan(sched.getResourceUsage(), desiredShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
      }
    },
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361020 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 5:43 PM",
      "commitName": "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,4 @@\n+  boolean isStarvedForMinShare(FSQueueSchedulable sched) {\n+    Resource desiredShare \u003d Resources.min(sched.getMinShare(), sched.getDemand());\n+    return Resources.lessThan(sched.getResourceUsage(), desiredShare);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isStarvedForMinShare(FSQueueSchedulable sched) {\n    Resource desiredShare \u003d Resources.min(sched.getMinShare(), sched.getDemand());\n    return Resources.lessThan(sched.getResourceUsage(), desiredShare);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}