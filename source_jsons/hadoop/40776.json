{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueMetrics.java",
  "functionName": "updatePreemptedResources",
  "functionId": "updatePreemptedResources___res-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
  "functionStartLine": 909,
  "functionEndLine": 915,
  "numCommitsSeen": 39,
  "timeTaken": 1574,
  "changeHistory": [
    "6f2226a013daf30b00c6676a5f12160ac0b197b7"
  ],
  "changeHistoryShort": {
    "6f2226a013daf30b00c6676a5f12160ac0b197b7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f2226a013daf30b00c6676a5f12160ac0b197b7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9756: Create metric that sums total memory/vcores preempted per round. Contributed by  Manikandan R (manirajv06).\n",
      "commitDate": "28/08/19 1:40 PM",
      "commitName": "6f2226a013daf30b00c6676a5f12160ac0b197b7",
      "commitAuthor": "Eric E Payne",
      "diff": "@@ -0,0 +1,7 @@\n+  public void updatePreemptedResources(Resource res) {\n+    aggregateMemoryMBPreempted.incr(res.getMemorySize());\n+    aggregateVcoresPreempted.incr(res.getVirtualCores());\n+    if (parent !\u003d null) {\n+      parent.updatePreemptedResources(res);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updatePreemptedResources(Resource res) {\n    aggregateMemoryMBPreempted.incr(res.getMemorySize());\n    aggregateVcoresPreempted.incr(res.getVirtualCores());\n    if (parent !\u003d null) {\n      parent.updatePreemptedResources(res);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java"
    }
  }
}