{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "isMultiDestDirectory",
  "functionId": "isMultiDestDirectory___src-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 2173,
  "functionEndLine": 2192,
  "numCommitsSeen": 40,
  "timeTaken": 1799,
  "changeHistory": [
    "3deb5d345f439cbebcad5296c69689e8334f59ce",
    "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8"
  ],
  "changeHistoryShort": {
    "3deb5d345f439cbebcad5296c69689e8334f59ce": "Ybodychange",
    "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3deb5d345f439cbebcad5296c69689e8334f59ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14490. RBF: Remove unnecessary quota checks. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "3deb5d345f439cbebcad5296c69689e8334f59ce",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "62fa53a01dc7165d7965cdd4fddb444082f0602c",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   boolean isMultiDestDirectory(String src) throws IOException {\n     try {\n       if (rpcServer.isPathAll(src)) {\n         List\u003cRemoteLocation\u003e locations;\n-        locations \u003d rpcServer.getLocationsForPath(src, false);\n+        locations \u003d rpcServer.getLocationsForPath(src, false, false);\n         RemoteMethod method \u003d new RemoteMethod(\"getFileInfo\",\n             new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n         HdfsFileStatus fileStatus \u003d rpcClient.invokeSequential(locations,\n             method, HdfsFileStatus.class, null);\n         if (fileStatus !\u003d null) {\n           return fileStatus.isDirectory();\n         } else {\n           LOG.debug(\"The destination {} doesn\u0027t exist.\", src);\n         }\n       }\n     } catch (UnresolvedPathException e) {\n       LOG.debug(\"The destination {} is a symlink.\", src);\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isMultiDestDirectory(String src) throws IOException {\n    try {\n      if (rpcServer.isPathAll(src)) {\n        List\u003cRemoteLocation\u003e locations;\n        locations \u003d rpcServer.getLocationsForPath(src, false, false);\n        RemoteMethod method \u003d new RemoteMethod(\"getFileInfo\",\n            new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n        HdfsFileStatus fileStatus \u003d rpcClient.invokeSequential(locations,\n            method, HdfsFileStatus.class, null);\n        if (fileStatus !\u003d null) {\n          return fileStatus.isDirectory();\n        } else {\n          LOG.debug(\"The destination {} doesn\u0027t exist.\", src);\n        }\n      }\n    } catch (UnresolvedPathException e) {\n      LOG.debug(\"The destination {} is a symlink.\", src);\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {}
    },
    "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14343. RBF: Fix renaming folders spread across multiple subclusters. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "diff": "@@ -0,0 +1,20 @@\n+  boolean isMultiDestDirectory(String src) throws IOException {\n+    try {\n+      if (rpcServer.isPathAll(src)) {\n+        List\u003cRemoteLocation\u003e locations;\n+        locations \u003d rpcServer.getLocationsForPath(src, false);\n+        RemoteMethod method \u003d new RemoteMethod(\"getFileInfo\",\n+            new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n+        HdfsFileStatus fileStatus \u003d rpcClient.invokeSequential(locations,\n+            method, HdfsFileStatus.class, null);\n+        if (fileStatus !\u003d null) {\n+          return fileStatus.isDirectory();\n+        } else {\n+          LOG.debug(\"The destination {} doesn\u0027t exist.\", src);\n+        }\n+      }\n+    } catch (UnresolvedPathException e) {\n+      LOG.debug(\"The destination {} is a symlink.\", src);\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isMultiDestDirectory(String src) throws IOException {\n    try {\n      if (rpcServer.isPathAll(src)) {\n        List\u003cRemoteLocation\u003e locations;\n        locations \u003d rpcServer.getLocationsForPath(src, false);\n        RemoteMethod method \u003d new RemoteMethod(\"getFileInfo\",\n            new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n        HdfsFileStatus fileStatus \u003d rpcClient.invokeSequential(locations,\n            method, HdfsFileStatus.class, null);\n        if (fileStatus !\u003d null) {\n          return fileStatus.isDirectory();\n        } else {\n          LOG.debug(\"The destination {} doesn\u0027t exist.\", src);\n        }\n      }\n    } catch (UnresolvedPathException e) {\n      LOG.debug(\"The destination {} is a symlink.\", src);\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java"
    }
  }
}