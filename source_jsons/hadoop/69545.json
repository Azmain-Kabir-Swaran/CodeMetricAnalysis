{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IdentityTransformer.java",
  "functionName": "getShortName",
  "functionId": "getShortName___userName-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/IdentityTransformer.java",
  "functionStartLine": 295,
  "functionEndLine": 315,
  "numCommitsSeen": 5,
  "timeTaken": 842,
  "changeHistory": [
    "1f1655028eede24197705a594b6ef19e6737db35"
  ],
  "changeHistoryShort": {
    "1f1655028eede24197705a594b6ef19e6737db35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f1655028eede24197705a594b6ef19e6737db35": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15954. ABFS: Enable owner and group conversion for MSI and login user using OAuth.\n\nContributed by Da Zhou and Junhua Gu.\n",
      "commitDate": "07/02/19 1:58 PM",
      "commitName": "1f1655028eede24197705a594b6ef19e6737db35",
      "commitAuthor": "Da Zhou",
      "diff": "@@ -0,0 +1,21 @@\n+  private String getShortName(String userName) {\n+    if (userName \u003d\u003d null)    {\n+      return  null;\n+    }\n+\n+    if (isShortUserName(userName)) {\n+      return userName;\n+    }\n+\n+    String userNameBeforeAt \u003d userName.substring(0, userName.indexOf(AT));\n+    if (isSecure) {\n+      //In secure clusters we apply auth to local rules to lowercase all short localUser names (notice /L at the end),\n+      //E.G. : RULE:[1:$1@$0](.*@FOO.ONMICROSOFT.COM)s/@.*/// Ideally we should use the HadoopKerberosName class to get\n+      // new HadoopKerberosName(arg).getShortName. However,\n+      //1. ADLS can report the Realm in lower case while returning file owner names( ie. : Some.User@realm.onmicrosoft.com)\n+      //2. The RULE specification does not allow specifying character classes to do case insensitive matches\n+      //Due to this, we end up using a forced lowercase version of the manually shortened name\n+      return userNameBeforeAt.toLowerCase(Locale.ENGLISH);\n+    }\n+    return userNameBeforeAt;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getShortName(String userName) {\n    if (userName \u003d\u003d null)    {\n      return  null;\n    }\n\n    if (isShortUserName(userName)) {\n      return userName;\n    }\n\n    String userNameBeforeAt \u003d userName.substring(0, userName.indexOf(AT));\n    if (isSecure) {\n      //In secure clusters we apply auth to local rules to lowercase all short localUser names (notice /L at the end),\n      //E.G. : RULE:[1:$1@$0](.*@FOO.ONMICROSOFT.COM)s/@.*/// Ideally we should use the HadoopKerberosName class to get\n      // new HadoopKerberosName(arg).getShortName. However,\n      //1. ADLS can report the Realm in lower case while returning file owner names( ie. : Some.User@realm.onmicrosoft.com)\n      //2. The RULE specification does not allow specifying character classes to do case insensitive matches\n      //Due to this, we end up using a forced lowercase version of the manually shortened name\n      return userNameBeforeAt.toLowerCase(Locale.ENGLISH);\n    }\n    return userNameBeforeAt;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/oauth2/IdentityTransformer.java"
    }
  }
}