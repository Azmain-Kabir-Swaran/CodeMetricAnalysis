{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeUtil.java",
  "functionName": "createFileWithExistsCheck",
  "functionId": "createFileWithExistsCheck___volume-FsVolumeSpi__b-Block__f-File__fileIoProvider-FileIoProvider",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
  "functionStartLine": 59,
  "functionEndLine": 78,
  "numCommitsSeen": 35,
  "timeTaken": 7143,
  "changeHistory": [
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymultichange(Ymodifierchange,Ybodychange)",
    "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f": "Ymultichange(Ymovefromfile,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
      "commitDate": "14/12/16 11:18 AM",
      "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
          "commitDate": "14/12/16 11:18 AM",
          "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "01/03/16 1:04 PM",
          "commitNameOld": "2c8496ebf3b7b31c2e18fdf8d4cb2a0115f43112",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 287.93,
          "commitsBetweenForRepo": 2070,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  public static File createTmpFile(Block b, File f) throws IOException {\n-    if (f.exists()) {\n+  public static File createFileWithExistsCheck(\n+      FsVolumeSpi volume, Block b, File f,\n+      FileIoProvider fileIoProvider) throws IOException {\n+    if (fileIoProvider.exists(volume, f)) {\n       throw new IOException(\"Failed to create temporary file for \" + b\n           + \".  File \" + f + \" should not be present, but is.\");\n     }\n     // Create the zero-length temp file\n     final boolean fileCreated;\n     try {\n-      fileCreated \u003d f.createNewFile();\n+      fileCreated \u003d fileIoProvider.createFile(volume, f);\n     } catch (IOException ioe) {\n       throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n     }\n     if (!fileCreated) {\n       throw new IOException(\"Failed to create temporary file for \" + b\n           + \".  File \" + f + \" should be creatable, but is already present.\");\n     }\n     return f;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static File createFileWithExistsCheck(\n      FsVolumeSpi volume, Block b, File f,\n      FileIoProvider fileIoProvider) throws IOException {\n    if (fileIoProvider.exists(volume, f)) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    final boolean fileCreated;\n    try {\n      fileCreated \u003d fileIoProvider.createFile(volume, f);\n    } catch (IOException ioe) {\n      throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
          "extendedDetails": {
            "oldValue": "createTmpFile",
            "newValue": "createFileWithExistsCheck"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
          "commitDate": "14/12/16 11:18 AM",
          "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "01/03/16 1:04 PM",
          "commitNameOld": "2c8496ebf3b7b31c2e18fdf8d4cb2a0115f43112",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 287.93,
          "commitsBetweenForRepo": 2070,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  public static File createTmpFile(Block b, File f) throws IOException {\n-    if (f.exists()) {\n+  public static File createFileWithExistsCheck(\n+      FsVolumeSpi volume, Block b, File f,\n+      FileIoProvider fileIoProvider) throws IOException {\n+    if (fileIoProvider.exists(volume, f)) {\n       throw new IOException(\"Failed to create temporary file for \" + b\n           + \".  File \" + f + \" should not be present, but is.\");\n     }\n     // Create the zero-length temp file\n     final boolean fileCreated;\n     try {\n-      fileCreated \u003d f.createNewFile();\n+      fileCreated \u003d fileIoProvider.createFile(volume, f);\n     } catch (IOException ioe) {\n       throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n     }\n     if (!fileCreated) {\n       throw new IOException(\"Failed to create temporary file for \" + b\n           + \".  File \" + f + \" should be creatable, but is already present.\");\n     }\n     return f;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static File createFileWithExistsCheck(\n      FsVolumeSpi volume, Block b, File f,\n      FileIoProvider fileIoProvider) throws IOException {\n    if (fileIoProvider.exists(volume, f)) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    final boolean fileCreated;\n    try {\n      fileCreated \u003d fileIoProvider.createFile(volume, f);\n    } catch (IOException ioe) {\n      throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
          "extendedDetails": {
            "oldValue": "[b-Block, f-File]",
            "newValue": "[volume-FsVolumeSpi, b-Block, f-File, fileIoProvider-FileIoProvider]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
          "commitDate": "14/12/16 11:18 AM",
          "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "01/03/16 1:04 PM",
          "commitNameOld": "2c8496ebf3b7b31c2e18fdf8d4cb2a0115f43112",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 287.93,
          "commitsBetweenForRepo": 2070,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  public static File createTmpFile(Block b, File f) throws IOException {\n-    if (f.exists()) {\n+  public static File createFileWithExistsCheck(\n+      FsVolumeSpi volume, Block b, File f,\n+      FileIoProvider fileIoProvider) throws IOException {\n+    if (fileIoProvider.exists(volume, f)) {\n       throw new IOException(\"Failed to create temporary file for \" + b\n           + \".  File \" + f + \" should not be present, but is.\");\n     }\n     // Create the zero-length temp file\n     final boolean fileCreated;\n     try {\n-      fileCreated \u003d f.createNewFile();\n+      fileCreated \u003d fileIoProvider.createFile(volume, f);\n     } catch (IOException ioe) {\n       throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n     }\n     if (!fileCreated) {\n       throw new IOException(\"Failed to create temporary file for \" + b\n           + \".  File \" + f + \" should be creatable, but is already present.\");\n     }\n     return f;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static File createFileWithExistsCheck(\n      FsVolumeSpi volume, Block b, File f,\n      FileIoProvider fileIoProvider) throws IOException {\n    if (fileIoProvider.exists(volume, f)) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    final boolean fileCreated;\n    try {\n      fileCreated \u003d fileIoProvider.createFile(volume, f);\n    } catch (IOException ioe) {\n      throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/03/12 1:37 PM",
          "commitNameOld": "99a68a14237b4cd1936ba5e9468d25d35dad594c",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.88,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  static File createTmpFile(Block b, File f) throws IOException {\n+  public static File createTmpFile(Block b, File f) throws IOException {\n     if (f.exists()) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"\n-          + b + \".  File \" + f + \" should not be present, but is.\");\n+      throw new IOException(\"Failed to create temporary file for \" + b\n+          + \".  File \" + f + \" should not be present, but is.\");\n     }\n     // Create the zero-length temp file\n     final boolean fileCreated;\n     try {\n       fileCreated \u003d f.createNewFile();\n     } catch (IOException ioe) {\n-      throw (IOException)new IOException(DISK_ERROR + f).initCause(ioe);\n+      throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n     }\n     if (!fileCreated) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"\n-          + b + \".  File \" + f + \" should be creatable, but is already present.\");\n+      throw new IOException(\"Failed to create temporary file for \" + b\n+          + \".  File \" + f + \" should be creatable, but is already present.\");\n     }\n     return f;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static File createTmpFile(Block b, File f) throws IOException {\n    if (f.exists()) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    final boolean fileCreated;\n    try {\n      fileCreated \u003d f.createNewFile();\n    } catch (IOException ioe) {\n      throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/03/12 1:37 PM",
          "commitNameOld": "99a68a14237b4cd1936ba5e9468d25d35dad594c",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.88,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  static File createTmpFile(Block b, File f) throws IOException {\n+  public static File createTmpFile(Block b, File f) throws IOException {\n     if (f.exists()) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"\n-          + b + \".  File \" + f + \" should not be present, but is.\");\n+      throw new IOException(\"Failed to create temporary file for \" + b\n+          + \".  File \" + f + \" should not be present, but is.\");\n     }\n     // Create the zero-length temp file\n     final boolean fileCreated;\n     try {\n       fileCreated \u003d f.createNewFile();\n     } catch (IOException ioe) {\n-      throw (IOException)new IOException(DISK_ERROR + f).initCause(ioe);\n+      throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n     }\n     if (!fileCreated) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"\n-          + b + \".  File \" + f + \" should be creatable, but is already present.\");\n+      throw new IOException(\"Failed to create temporary file for \" + b\n+          + \".  File \" + f + \" should be creatable, but is already present.\");\n     }\n     return f;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static File createTmpFile(Block b, File f) throws IOException {\n    if (f.exists()) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    final boolean fileCreated;\n    try {\n      fileCreated \u003d f.createNewFile();\n    } catch (IOException ioe) {\n      throw new IOException(DISK_ERROR + \"Failed to create \" + f, ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Failed to create temporary file for \" + b\n          + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-2879. Change FSDataset to package private.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240020 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/02/12 11:26 PM",
      "commitName": "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2879. Change FSDataset to package private.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240020 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/02/12 11:26 PM",
          "commitName": "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "02/02/12 5:16 PM",
          "commitNameOld": "a5c46c91655acebccd1367706b05946eff90f744",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   static File createTmpFile(Block b, File f) throws IOException {\n     if (f.exists()) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n-                            b + \".  File \" + f + \" should not be present, but is.\");\n+      throw new IOException(\"Unexpected problem in creating temporary file for \"\n+          + b + \".  File \" + f + \" should not be present, but is.\");\n     }\n     // Create the zero-length temp file\n-    //\n-    boolean fileCreated \u003d false;\n+    final boolean fileCreated;\n     try {\n       fileCreated \u003d f.createNewFile();\n     } catch (IOException ioe) {\n-      throw (IOException)new IOException(DISK_ERROR +f).initCause(ioe);\n+      throw (IOException)new IOException(DISK_ERROR + f).initCause(ioe);\n     }\n     if (!fileCreated) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n-                            b + \".  File \" + f + \" should be creatable, but is already present.\");\n+      throw new IOException(\"Unexpected problem in creating temporary file for \"\n+          + b + \".  File \" + f + \" should be creatable, but is already present.\");\n     }\n     return f;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static File createTmpFile(Block b, File f) throws IOException {\n    if (f.exists()) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"\n          + b + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    final boolean fileCreated;\n    try {\n      fileCreated \u003d f.createNewFile();\n    } catch (IOException ioe) {\n      throw (IOException)new IOException(DISK_ERROR + f).initCause(ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"\n          + b + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
            "oldMethodName": "createTmpFile",
            "newMethodName": "createTmpFile"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2879. Change FSDataset to package private.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240020 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/02/12 11:26 PM",
          "commitName": "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "02/02/12 5:16 PM",
          "commitNameOld": "a5c46c91655acebccd1367706b05946eff90f744",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n   static File createTmpFile(Block b, File f) throws IOException {\n     if (f.exists()) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n-                            b + \".  File \" + f + \" should not be present, but is.\");\n+      throw new IOException(\"Unexpected problem in creating temporary file for \"\n+          + b + \".  File \" + f + \" should not be present, but is.\");\n     }\n     // Create the zero-length temp file\n-    //\n-    boolean fileCreated \u003d false;\n+    final boolean fileCreated;\n     try {\n       fileCreated \u003d f.createNewFile();\n     } catch (IOException ioe) {\n-      throw (IOException)new IOException(DISK_ERROR +f).initCause(ioe);\n+      throw (IOException)new IOException(DISK_ERROR + f).initCause(ioe);\n     }\n     if (!fileCreated) {\n-      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n-                            b + \".  File \" + f + \" should be creatable, but is already present.\");\n+      throw new IOException(\"Unexpected problem in creating temporary file for \"\n+          + b + \".  File \" + f + \" should be creatable, but is already present.\");\n     }\n     return f;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static File createTmpFile(Block b, File f) throws IOException {\n    if (f.exists()) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"\n          + b + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    final boolean fileCreated;\n    try {\n      fileCreated \u003d f.createNewFile();\n    } catch (IOException ioe) {\n      throw (IOException)new IOException(DISK_ERROR + f).initCause(ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"\n          + b + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static File createTmpFile(Block b, File f) throws IOException {\n    if (f.exists()) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n                            b + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    //\n    boolean fileCreated \u003d false;\n    try {\n      fileCreated \u003d f.createNewFile();\n    } catch (IOException ioe) {\n      throw (IOException)new IOException(DISK_ERROR +f).initCause(ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n                            b + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static File createTmpFile(Block b, File f) throws IOException {\n    if (f.exists()) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n                            b + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    //\n    boolean fileCreated \u003d false;\n    try {\n      fileCreated \u003d f.createNewFile();\n    } catch (IOException ioe) {\n      throw (IOException)new IOException(DISK_ERROR +f).initCause(ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n                            b + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  static File createTmpFile(Block b, File f) throws IOException {\n+    if (f.exists()) {\n+      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n+                            b + \".  File \" + f + \" should not be present, but is.\");\n+    }\n+    // Create the zero-length temp file\n+    //\n+    boolean fileCreated \u003d false;\n+    try {\n+      fileCreated \u003d f.createNewFile();\n+    } catch (IOException ioe) {\n+      throw (IOException)new IOException(DISK_ERROR +f).initCause(ioe);\n+    }\n+    if (!fileCreated) {\n+      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n+                            b + \".  File \" + f + \" should be creatable, but is already present.\");\n+    }\n+    return f;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static File createTmpFile(Block b, File f) throws IOException {\n    if (f.exists()) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n                            b + \".  File \" + f + \" should not be present, but is.\");\n    }\n    // Create the zero-length temp file\n    //\n    boolean fileCreated \u003d false;\n    try {\n      fileCreated \u003d f.createNewFile();\n    } catch (IOException ioe) {\n      throw (IOException)new IOException(DISK_ERROR +f).initCause(ioe);\n    }\n    if (!fileCreated) {\n      throw new IOException(\"Unexpected problem in creating temporary file for \"+\n                            b + \".  File \" + f + \" should be creatable, but is already present.\");\n    }\n    return f;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
    }
  }
}