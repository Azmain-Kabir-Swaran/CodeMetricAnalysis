{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "parseNumberOfContainers",
  "functionId": "parseNumberOfContainers___component-Component__newNumber-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 603,
  "functionEndLine": 621,
  "numCommitsSeen": 56,
  "timeTaken": 3349,
  "changeHistory": [
    "41b581012a83a17db785343362c718363e13e8f5",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "41b581012a83a17db785343362c718363e13e8f5": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "41b581012a83a17db785343362c718363e13e8f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7616. Map YARN application status to Service Status more accurately.  (Contributed by Gour Saha)\n",
      "commitDate": "19/12/17 4:14 PM",
      "commitName": "41b581012a83a17db785343362c718363e13e8f5",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/12/17 12:11 PM",
      "commitNameOld": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 15.17,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private long parseNumberOfContainers(Component component, String newNumber) {\n \n     long orig \u003d component.getNumberOfContainers();\n     if (newNumber.startsWith(\"+\")) {\n       return orig + Long.parseLong(newNumber.substring(1));\n     } else if (newNumber.startsWith(\"-\")) {\n       long ret \u003d orig - Long.parseLong(newNumber.substring(1));\n       if (ret \u003c 0) {\n         LOG.warn(MessageFormat.format(\n-            \"[COMPONENT {}]: component count goes to negative ({}{} \u003d {}), reset it to 0.\",\n+            \"[COMPONENT {0}]: component count goes to negative ({1}{2} \u003d {3}),\"\n+                + \" ignore and reset it to 0.\",\n             component.getName(), orig, newNumber, ret));\n         ret \u003d 0;\n       }\n       return ret;\n     } else {\n       return Long.parseLong(newNumber);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long parseNumberOfContainers(Component component, String newNumber) {\n\n    long orig \u003d component.getNumberOfContainers();\n    if (newNumber.startsWith(\"+\")) {\n      return orig + Long.parseLong(newNumber.substring(1));\n    } else if (newNumber.startsWith(\"-\")) {\n      long ret \u003d orig - Long.parseLong(newNumber.substring(1));\n      if (ret \u003c 0) {\n        LOG.warn(MessageFormat.format(\n            \"[COMPONENT {0}]: component count goes to negative ({1}{2} \u003d {3}),\"\n                + \" ignore and reset it to 0.\",\n            component.getName(), orig, newNumber, ret));\n        ret \u003d 0;\n      }\n      return ret;\n    } else {\n      return Long.parseLong(newNumber);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long parseNumberOfContainers(Component component, String newNumber) {\n\n    long orig \u003d component.getNumberOfContainers();\n    if (newNumber.startsWith(\"+\")) {\n      return orig + Long.parseLong(newNumber.substring(1));\n    } else if (newNumber.startsWith(\"-\")) {\n      long ret \u003d orig - Long.parseLong(newNumber.substring(1));\n      if (ret \u003c 0) {\n        LOG.warn(MessageFormat.format(\n            \"[COMPONENT {}]: component count goes to negative ({}{} \u003d {}), reset it to 0.\",\n            component.getName(), orig, newNumber, ret));\n        ret \u003d 0;\n      }\n      return ret;\n    } else {\n      return Long.parseLong(newNumber);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,18 @@\n+  private long parseNumberOfContainers(Component component, String newNumber) {\n+\n+    long orig \u003d component.getNumberOfContainers();\n+    if (newNumber.startsWith(\"+\")) {\n+      return orig + Long.parseLong(newNumber.substring(1));\n+    } else if (newNumber.startsWith(\"-\")) {\n+      long ret \u003d orig - Long.parseLong(newNumber.substring(1));\n+      if (ret \u003c 0) {\n+        LOG.warn(MessageFormat.format(\n+            \"[COMPONENT {}]: component count goes to negative ({}{} \u003d {}), reset it to 0.\",\n+            component.getName(), orig, newNumber, ret));\n+        ret \u003d 0;\n+      }\n+      return ret;\n+    } else {\n+      return Long.parseLong(newNumber);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long parseNumberOfContainers(Component component, String newNumber) {\n\n    long orig \u003d component.getNumberOfContainers();\n    if (newNumber.startsWith(\"+\")) {\n      return orig + Long.parseLong(newNumber.substring(1));\n    } else if (newNumber.startsWith(\"-\")) {\n      long ret \u003d orig - Long.parseLong(newNumber.substring(1));\n      if (ret \u003c 0) {\n        LOG.warn(MessageFormat.format(\n            \"[COMPONENT {}]: component count goes to negative ({}{} \u003d {}), reset it to 0.\",\n            component.getName(), orig, newNumber, ret));\n        ret \u003d 0;\n      }\n      return ret;\n    } else {\n      return Long.parseLong(newNumber);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}