{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientServiceDelegate.java",
  "functionName": "invoke",
  "functionId": "invoke___method-String__argClass-Class__args-Object",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
  "functionStartLine": 308,
  "functionEndLine": 369,
  "numCommitsSeen": 50,
  "timeTaken": 2380,
  "changeHistory": [
    "6d8b4f6c2791f861a55ac78c2950f783693e912a",
    "4170c99147b0cb6d561ff626cea140e0a061b314",
    "af78fd729c3b847c447d4a8edd758fb0c9b25b02",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "7359dc32d3781d5318efee4cf6185616c7c00c18",
    "92b7165a71656468f17ce8b760ce11e648932f0e",
    "97ae5b675ff675224fdc7dcf45cd06a26d79218d",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2",
    "2adc51c61863c613730a3b51538035fce5fa1fb4",
    "45b2bce8714ecbcb17c6b487208a48d26eed7824",
    "29552eeb36dd8a9246fb648d65b5cfb94ae46d77",
    "71e05154330c084310b6e32bfd6397c29b4e0534",
    "f2b91a8367a762091482074505618b570a520b19"
  ],
  "changeHistoryShort": {
    "6d8b4f6c2791f861a55ac78c2950f783693e912a": "Ybodychange",
    "4170c99147b0cb6d561ff626cea140e0a061b314": "Ybodychange",
    "af78fd729c3b847c447d4a8edd758fb0c9b25b02": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "7359dc32d3781d5318efee4cf6185616c7c00c18": "Ybodychange",
    "92b7165a71656468f17ce8b760ce11e648932f0e": "Ybodychange",
    "97ae5b675ff675224fdc7dcf45cd06a26d79218d": "Ymultichange(Yexceptionschange,Ybodychange)",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": "Ybodychange",
    "2adc51c61863c613730a3b51538035fce5fa1fb4": "Ybodychange",
    "45b2bce8714ecbcb17c6b487208a48d26eed7824": "Ybodychange",
    "29552eeb36dd8a9246fb648d65b5cfb94ae46d77": "Ybodychange",
    "71e05154330c084310b6e32bfd6397c29b4e0534": "Ybodychange",
    "f2b91a8367a762091482074505618b570a520b19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d8b4f6c2791f861a55ac78c2950f783693e912a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4395. Typo in comment in ClientServiceDelegate (Contributed by Alison Yu via Daniel Templeton)\n",
      "commitDate": "29/11/16 3:30 PM",
      "commitName": "6d8b4f6c2791f861a55ac78c2950f783693e912a",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "01/02/16 8:05 AM",
      "commitNameOld": "59a212b6e1265adfa9b55c71b65a22157dfccf77",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 302.31,
      "commitsBetweenForRepo": 2188,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,62 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnRuntimeException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnRuntimeException(\"Method name mismatch\", e);\n     }\n     maxClientRetry \u003d this.conf.getInt(\n         MRJobConfig.MR_CLIENT_MAX_RETRIES,\n         MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n     IOException lastException \u003d null;\n     while (maxClientRetry \u003e 0) {\n       MRClientProtocol MRClientProxy \u003d null;\n       try {\n         MRClientProxy \u003d getProxy();\n         return methodOb.invoke(MRClientProxy, args);\n       } catch (InvocationTargetException e) {\n         // Will not throw out YarnException anymore\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // HS/AMS shut down\n \n         if (e.getCause() instanceof AuthorizationException) {\n           throw new IOException(e.getTargetException());\n         }\n \n-        // if it\u0027s AM shut down, do not decrement maxClientRetry as we wait for\n-        // AM to be restarted.\n+        // if its AM shut down, do not decrement maxClientRetry while we wait\n+        // for its AM to be restarted.\n         if (!usingAMProxy.get()) {\n           maxClientRetry--;\n         }\n         usingAMProxy.set(false);\n         lastException \u003d new IOException(e.getTargetException());\n         try {\n           Thread.sleep(100);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n           throw new YarnRuntimeException(ie);\n         }\n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // RM shutdown\n         maxClientRetry--;\n         lastException \u003d new IOException(e.getMessage());\n         try {\n           Thread.sleep(100);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n           throw new YarnRuntimeException(ie);\n         }\n       }\n     }\n     throw lastException;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnRuntimeException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnRuntimeException(\"Method name mismatch\", e);\n    }\n    maxClientRetry \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxClientRetry \u003e 0) {\n      MRClientProtocol MRClientProxy \u003d null;\n      try {\n        MRClientProxy \u003d getProxy();\n        return methodOb.invoke(MRClientProxy, args);\n      } catch (InvocationTargetException e) {\n        // Will not throw out YarnException anymore\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n\n        if (e.getCause() instanceof AuthorizationException) {\n          throw new IOException(e.getTargetException());\n        }\n\n        // if its AM shut down, do not decrement maxClientRetry while we wait\n        // for its AM to be restarted.\n        if (!usingAMProxy.get()) {\n          maxClientRetry--;\n        }\n        usingAMProxy.set(false);\n        lastException \u003d new IOException(e.getTargetException());\n        try {\n          Thread.sleep(100);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n          throw new YarnRuntimeException(ie);\n        }\n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxClientRetry--;\n        lastException \u003d new IOException(e.getMessage());\n        try {\n          Thread.sleep(100);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n          throw new YarnRuntimeException(ie);\n        }\n      }\n    }\n    throw lastException;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "4170c99147b0cb6d561ff626cea140e0a061b314": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6285. ClientServiceDelegate should not retry upon AuthenticationException. Contributed by Jonathan Eagles.\n",
      "commitDate": "24/03/15 8:56 AM",
      "commitName": "4170c99147b0cb6d561ff626cea140e0a061b314",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "19/09/14 1:15 PM",
      "commitNameOld": "951847ba94442b8d928435decfbea9ea20882912",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 185.82,
      "commitsBetweenForRepo": 1537,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,62 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnRuntimeException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnRuntimeException(\"Method name mismatch\", e);\n     }\n     maxClientRetry \u003d this.conf.getInt(\n         MRJobConfig.MR_CLIENT_MAX_RETRIES,\n         MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n     IOException lastException \u003d null;\n     while (maxClientRetry \u003e 0) {\n       MRClientProtocol MRClientProxy \u003d null;\n       try {\n         MRClientProxy \u003d getProxy();\n         return methodOb.invoke(MRClientProxy, args);\n       } catch (InvocationTargetException e) {\n         // Will not throw out YarnException anymore\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // HS/AMS shut down\n+\n+        if (e.getCause() instanceof AuthorizationException) {\n+          throw new IOException(e.getTargetException());\n+        }\n+\n         // if it\u0027s AM shut down, do not decrement maxClientRetry as we wait for\n         // AM to be restarted.\n         if (!usingAMProxy.get()) {\n           maxClientRetry--;\n         }\n         usingAMProxy.set(false);\n         lastException \u003d new IOException(e.getTargetException());\n         try {\n           Thread.sleep(100);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n           throw new YarnRuntimeException(ie);\n         }\n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // RM shutdown\n         maxClientRetry--;\n         lastException \u003d new IOException(e.getMessage());\n         try {\n           Thread.sleep(100);\n         } catch (InterruptedException ie) {\n           LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n           throw new YarnRuntimeException(ie);\n         }\n       }\n     }\n     throw lastException;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnRuntimeException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnRuntimeException(\"Method name mismatch\", e);\n    }\n    maxClientRetry \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxClientRetry \u003e 0) {\n      MRClientProtocol MRClientProxy \u003d null;\n      try {\n        MRClientProxy \u003d getProxy();\n        return methodOb.invoke(MRClientProxy, args);\n      } catch (InvocationTargetException e) {\n        // Will not throw out YarnException anymore\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n\n        if (e.getCause() instanceof AuthorizationException) {\n          throw new IOException(e.getTargetException());\n        }\n\n        // if it\u0027s AM shut down, do not decrement maxClientRetry as we wait for\n        // AM to be restarted.\n        if (!usingAMProxy.get()) {\n          maxClientRetry--;\n        }\n        usingAMProxy.set(false);\n        lastException \u003d new IOException(e.getTargetException());\n        try {\n          Thread.sleep(100);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n          throw new YarnRuntimeException(ie);\n        }\n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxClientRetry--;\n        lastException \u003d new IOException(e.getMessage());\n        try {\n          Thread.sleep(100);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n          throw new YarnRuntimeException(ie);\n        }\n      }\n    }\n    throw lastException;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "af78fd729c3b847c447d4a8edd758fb0c9b25b02": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5488. Changed MR client to keep trying to reach the application when it sees that on attempt\u0027s AM is down. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524856 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 3:35 PM",
      "commitName": "af78fd729c3b847c447d4a8edd758fb0c9b25b02",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 10:47 PM",
      "commitNameOld": "acc0d3eb521e3c1d1b2f4be9b46c685ee921504b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 93.7,
      "commitsBetweenForRepo": 524,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,57 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnRuntimeException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnRuntimeException(\"Method name mismatch\", e);\n     }\n-    int maxRetries \u003d this.conf.getInt(\n+    maxClientRetry \u003d this.conf.getInt(\n         MRJobConfig.MR_CLIENT_MAX_RETRIES,\n         MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n     IOException lastException \u003d null;\n-    while (maxRetries \u003e 0) {\n+    while (maxClientRetry \u003e 0) {\n+      MRClientProtocol MRClientProxy \u003d null;\n       try {\n-        return methodOb.invoke(getProxy(), args);\n+        MRClientProxy \u003d getProxy();\n+        return methodOb.invoke(MRClientProxy, args);\n       } catch (InvocationTargetException e) {\n         // Will not throw out YarnException anymore\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // HS/AMS shut down\n-        maxRetries--;\n+        // if it\u0027s AM shut down, do not decrement maxClientRetry as we wait for\n+        // AM to be restarted.\n+        if (!usingAMProxy.get()) {\n+          maxClientRetry--;\n+        }\n+        usingAMProxy.set(false);\n         lastException \u003d new IOException(e.getTargetException());\n-        \n+        try {\n+          Thread.sleep(100);\n+        } catch (InterruptedException ie) {\n+          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n+          throw new YarnRuntimeException(ie);\n+        }\n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // RM shutdown\n-        maxRetries--;\n-        lastException \u003d new IOException(e.getMessage());     \n+        maxClientRetry--;\n+        lastException \u003d new IOException(e.getMessage());\n+        try {\n+          Thread.sleep(100);\n+        } catch (InterruptedException ie) {\n+          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n+          throw new YarnRuntimeException(ie);\n+        }\n       }\n     }\n     throw lastException;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnRuntimeException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnRuntimeException(\"Method name mismatch\", e);\n    }\n    maxClientRetry \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxClientRetry \u003e 0) {\n      MRClientProtocol MRClientProxy \u003d null;\n      try {\n        MRClientProxy \u003d getProxy();\n        return methodOb.invoke(MRClientProxy, args);\n      } catch (InvocationTargetException e) {\n        // Will not throw out YarnException anymore\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n        // if it\u0027s AM shut down, do not decrement maxClientRetry as we wait for\n        // AM to be restarted.\n        if (!usingAMProxy.get()) {\n          maxClientRetry--;\n        }\n        usingAMProxy.set(false);\n        lastException \u003d new IOException(e.getTargetException());\n        try {\n          Thread.sleep(100);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n          throw new YarnRuntimeException(ie);\n        }\n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxClientRetry--;\n        lastException \u003d new IOException(e.getMessage());\n        try {\n          Thread.sleep(100);\n        } catch (InterruptedException ie) {\n          LOG.warn(\"ClientServiceDelegate invoke call interrupted\", ie);\n          throw new YarnRuntimeException(ie);\n        }\n      }\n    }\n    throw lastException;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/06/13 2:43 PM",
      "commitNameOld": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n-      throw new YarnException(e);\n+      throw new YarnRuntimeException(e);\n     } catch (NoSuchMethodException e) {\n-      throw new YarnException(\"Method name mismatch\", e);\n+      throw new YarnRuntimeException(\"Method name mismatch\", e);\n     }\n     int maxRetries \u003d this.conf.getInt(\n         MRJobConfig.MR_CLIENT_MAX_RETRIES,\n         MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n     IOException lastException \u003d null;\n     while (maxRetries \u003e 0) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (InvocationTargetException e) {\n-        // Will not throw out YarnRemoteException anymore\n+        // Will not throw out YarnException anymore\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // HS/AMS shut down\n         maxRetries--;\n         lastException \u003d new IOException(e.getTargetException());\n         \n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // RM shutdown\n         maxRetries--;\n         lastException \u003d new IOException(e.getMessage());     \n       }\n     }\n     throw lastException;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnRuntimeException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnRuntimeException(\"Method name mismatch\", e);\n    }\n    int maxRetries \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxRetries \u003e 0) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (InvocationTargetException e) {\n        // Will not throw out YarnException anymore\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n        maxRetries--;\n        lastException \u003d new IOException(e.getTargetException());\n        \n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());     \n      }\n    }\n    throw lastException;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "7359dc32d3781d5318efee4cf6185616c7c00c18": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/05/13 8:34 PM",
      "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/05/13 3:53 PM",
      "commitNameOld": "0727ecaf50481fa7a529398bc2a12ce18c9a6b43",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.2,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,39 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n     int maxRetries \u003d this.conf.getInt(\n         MRJobConfig.MR_CLIENT_MAX_RETRIES,\n         MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n     IOException lastException \u003d null;\n     while (maxRetries \u003e 0) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n-      } catch (YarnRemoteException yre) {\n-        LOG.warn(\"Exception thrown by remote end.\", yre);\n-        throw new IOException(yre);\n       } catch (InvocationTargetException e) {\n-        if (e.getTargetException() instanceof YarnRemoteException) {\n-          LOG.warn(\"Error from remote end: \" + e\n-              .getTargetException().getLocalizedMessage());\n-          LOG.debug(\"Tracing remote error \", e.getTargetException());\n-          throw new IOException(e.getTargetException());\n-        }\n+        // Will not throw out YarnRemoteException anymore\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // HS/AMS shut down\n         maxRetries--;\n-        lastException \u003d new IOException(e.getMessage());\n+        lastException \u003d new IOException(e.getTargetException());\n         \n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // RM shutdown\n         maxRetries--;\n         lastException \u003d new IOException(e.getMessage());     \n       }\n     }\n     throw lastException;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    int maxRetries \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxRetries \u003e 0) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (InvocationTargetException e) {\n        // Will not throw out YarnRemoteException anymore\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n        maxRetries--;\n        lastException \u003d new IOException(e.getTargetException());\n        \n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());     \n      }\n    }\n    throw lastException;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "92b7165a71656468f17ce8b760ce11e648932f0e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-629. Make YarnRemoteException not be rooted at IOException. Contributed by Xuan Gong.\nMAPREDUCE-5204. Handling YarnRemoteException separately from IOException in MR app after YARN-629. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1479680 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/13 12:04 PM",
      "commitName": "92b7165a71656468f17ce8b760ce11e648932f0e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/04/13 1:25 PM",
      "commitNameOld": "9e650d36b76c530f171ee66ea3bca5c1765e642c",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 18.94,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,47 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n     int maxRetries \u003d this.conf.getInt(\n         MRJobConfig.MR_CLIENT_MAX_RETRIES,\n         MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n     IOException lastException \u003d null;\n     while (maxRetries \u003e 0) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n         LOG.warn(\"Exception thrown by remote end.\", yre);\n-        throw yre;\n+        throw new IOException(yre);\n       } catch (InvocationTargetException e) {\n         if (e.getTargetException() instanceof YarnRemoteException) {\n           LOG.warn(\"Error from remote end: \" + e\n               .getTargetException().getLocalizedMessage());\n           LOG.debug(\"Tracing remote error \", e.getTargetException());\n-          throw (YarnRemoteException) e.getTargetException();\n+          throw new IOException(e.getTargetException());\n         }\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // HS/AMS shut down\n         maxRetries--;\n         lastException \u003d new IOException(e.getMessage());\n         \n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n         // RM shutdown\n         maxRetries--;\n         lastException \u003d new IOException(e.getMessage());     \n       }\n     }\n     throw lastException;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    int maxRetries \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxRetries \u003e 0) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\", yre);\n        throw new IOException(yre);\n      } catch (InvocationTargetException e) {\n        if (e.getTargetException() instanceof YarnRemoteException) {\n          LOG.warn(\"Error from remote end: \" + e\n              .getTargetException().getLocalizedMessage());\n          LOG.debug(\"Tracing remote error \", e.getTargetException());\n          throw new IOException(e.getTargetException());\n        }\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());\n        \n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());     \n      }\n    }\n    throw lastException;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "97ae5b675ff675224fdc7dcf45cd06a26d79218d": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4074. Client continuously retries to RM When RM goes down before launching Application Master (xieguiming via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327972 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/04/12 7:44 AM",
      "commitName": "97ae5b675ff675224fdc7dcf45cd06a26d79218d",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-4074. Client continuously retries to RM When RM goes down before launching Application Master (xieguiming via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327972 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/04/12 7:44 AM",
          "commitName": "97ae5b675ff675224fdc7dcf45cd06a26d79218d",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "14/03/12 3:02 PM",
          "commitNameOld": "7609243e582da9a7d008fc71569897715ced80cb",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 35.7,
          "commitsBetweenForRepo": 286,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,47 @@\n   private synchronized Object invoke(String method, Class argClass,\n-      Object args) throws YarnRemoteException {\n+      Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n-    while (true) {\n+    int maxRetries \u003d this.conf.getInt(\n+        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n+        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n+    IOException lastException \u003d null;\n+    while (maxRetries \u003e 0) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n         LOG.warn(\"Exception thrown by remote end.\", yre);\n         throw yre;\n       } catch (InvocationTargetException e) {\n         if (e.getTargetException() instanceof YarnRemoteException) {\n           LOG.warn(\"Error from remote end: \" + e\n               .getTargetException().getLocalizedMessage());\n           LOG.debug(\"Tracing remote error \", e.getTargetException());\n           throw (YarnRemoteException) e.getTargetException();\n         }\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n+        // HS/AMS shut down\n+        maxRetries--;\n+        lastException \u003d new IOException(e.getMessage());\n+        \n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n+        // RM shutdown\n+        maxRetries--;\n+        lastException \u003d new IOException(e.getMessage());     \n       }\n     }\n+    throw lastException;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    int maxRetries \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxRetries \u003e 0) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\", yre);\n        throw yre;\n      } catch (InvocationTargetException e) {\n        if (e.getTargetException() instanceof YarnRemoteException) {\n          LOG.warn(\"Error from remote end: \" + e\n              .getTargetException().getLocalizedMessage());\n          LOG.debug(\"Tracing remote error \", e.getTargetException());\n          throw (YarnRemoteException) e.getTargetException();\n        }\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());\n        \n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());     \n      }\n    }\n    throw lastException;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
          "extendedDetails": {
            "oldValue": "[YarnRemoteException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4074. Client continuously retries to RM When RM goes down before launching Application Master (xieguiming via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327972 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/04/12 7:44 AM",
          "commitName": "97ae5b675ff675224fdc7dcf45cd06a26d79218d",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "14/03/12 3:02 PM",
          "commitNameOld": "7609243e582da9a7d008fc71569897715ced80cb",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 35.7,
          "commitsBetweenForRepo": 286,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,47 @@\n   private synchronized Object invoke(String method, Class argClass,\n-      Object args) throws YarnRemoteException {\n+      Object args) throws IOException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n-    while (true) {\n+    int maxRetries \u003d this.conf.getInt(\n+        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n+        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n+    IOException lastException \u003d null;\n+    while (maxRetries \u003e 0) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n         LOG.warn(\"Exception thrown by remote end.\", yre);\n         throw yre;\n       } catch (InvocationTargetException e) {\n         if (e.getTargetException() instanceof YarnRemoteException) {\n           LOG.warn(\"Error from remote end: \" + e\n               .getTargetException().getLocalizedMessage());\n           LOG.debug(\"Tracing remote error \", e.getTargetException());\n           throw (YarnRemoteException) e.getTargetException();\n         }\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n+        // HS/AMS shut down\n+        maxRetries--;\n+        lastException \u003d new IOException(e.getMessage());\n+        \n       } catch (Exception e) {\n         LOG.debug(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n+        // RM shutdown\n+        maxRetries--;\n+        lastException \u003d new IOException(e.getMessage());     \n       }\n     }\n+    throw lastException;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws IOException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    int maxRetries \u003d this.conf.getInt(\n        MRJobConfig.MR_CLIENT_MAX_RETRIES,\n        MRJobConfig.DEFAULT_MR_CLIENT_MAX_RETRIES);\n    IOException lastException \u003d null;\n    while (maxRetries \u003e 0) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\", yre);\n        throw yre;\n      } catch (InvocationTargetException e) {\n        if (e.getTargetException() instanceof YarnRemoteException) {\n          LOG.warn(\"Error from remote end: \" + e\n              .getTargetException().getLocalizedMessage());\n          LOG.debug(\"Tracing remote error \", e.getTargetException());\n          throw (YarnRemoteException) e.getTargetException();\n        }\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // HS/AMS shut down\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());\n        \n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n        // RM shutdown\n        maxRetries--;\n        lastException \u003d new IOException(e.getMessage());     \n      }\n    }\n    throw lastException;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
          "extendedDetails": {}
        }
      ]
    },
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3265. Removed debug logs during job submission to LOG.debug to cut down noise. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1205628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/11/11 2:04 PM",
      "commitName": "f17ed541c76ce08b43713f06ecafd1685e16dff2",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "30/10/11 11:42 PM",
      "commitNameOld": "47a381e306877750b5a3ce5d76e0a5ff652ec188",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.64,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,35 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws YarnRemoteException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n     while (true) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n         LOG.warn(\"Exception thrown by remote end.\", yre);\n         throw yre;\n       } catch (InvocationTargetException e) {\n         if (e.getTargetException() instanceof YarnRemoteException) {\n           LOG.warn(\"Error from remote end: \" + e\n               .getTargetException().getLocalizedMessage());\n           LOG.debug(\"Tracing remote error \", e.getTargetException());\n           throw (YarnRemoteException) e.getTargetException();\n         }\n-        LOG.info(\"Failed to contact AM/History for job \" + jobId + \n-            \" retrying..\");\n-        LOG.debug(\"Failed exception on AM/History contact\", \n-            e.getTargetException());\n+        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n+            \" retrying..\", e.getTargetException());\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n       } catch (Exception e) {\n-        LOG.info(\"Failed to contact AM/History for job \" + jobId\n-            + \"  Will retry..\");\n-        LOG.debug(\"Failing to contact application master\", e);\n+        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n+            + \"  Will retry..\", e);\n         // Force reconnection by setting the proxy to null.\n         realProxy \u003d null;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws YarnRemoteException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    while (true) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\", yre);\n        throw yre;\n      } catch (InvocationTargetException e) {\n        if (e.getTargetException() instanceof YarnRemoteException) {\n          LOG.warn(\"Error from remote end: \" + e\n              .getTargetException().getLocalizedMessage());\n          LOG.debug(\"Tracing remote error \", e.getTargetException());\n          throw (YarnRemoteException) e.getTargetException();\n        }\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\", e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n      } catch (Exception e) {\n        LOG.debug(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "2adc51c61863c613730a3b51538035fce5fa1fb4": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3250. When AM restarts, client keeps reconnecting to the new AM and prints a lots of logs. (vinodkv via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189023 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 9:31 PM",
      "commitName": "2adc51c61863c613730a3b51538035fce5fa1fb4",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "21/10/11 11:35 AM",
      "commitNameOld": "45b2bce8714ecbcb17c6b487208a48d26eed7824",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 4.41,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws YarnRemoteException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n     while (true) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n         LOG.warn(\"Exception thrown by remote end.\", yre);\n         throw yre;\n       } catch (InvocationTargetException e) {\n         if (e.getTargetException() instanceof YarnRemoteException) {\n           LOG.warn(\"Error from remote end: \" + e\n               .getTargetException().getLocalizedMessage());\n           LOG.debug(\"Tracing remote error \", e.getTargetException());\n           throw (YarnRemoteException) e.getTargetException();\n         }\n         LOG.info(\"Failed to contact AM/History for job \" + jobId + \n             \" retrying..\");\n         LOG.debug(\"Failed exception on AM/History contact\", \n             e.getTargetException());\n-        forceRefresh \u003d true;\n+        // Force reconnection by setting the proxy to null.\n+        realProxy \u003d null;\n       } catch (Exception e) {\n         LOG.info(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\");\n         LOG.debug(\"Failing to contact application master\", e);\n-        forceRefresh \u003d true;\n+        // Force reconnection by setting the proxy to null.\n+        realProxy \u003d null;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws YarnRemoteException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    while (true) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\", yre);\n        throw yre;\n      } catch (InvocationTargetException e) {\n        if (e.getTargetException() instanceof YarnRemoteException) {\n          LOG.warn(\"Error from remote end: \" + e\n              .getTargetException().getLocalizedMessage());\n          LOG.debug(\"Tracing remote error \", e.getTargetException());\n          throw (YarnRemoteException) e.getTargetException();\n        }\n        LOG.info(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\");\n        LOG.debug(\"Failed exception on AM/History contact\", \n            e.getTargetException());\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n      } catch (Exception e) {\n        LOG.info(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\");\n        LOG.debug(\"Failing to contact application master\", e);\n        // Force reconnection by setting the proxy to null.\n        realProxy \u003d null;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "45b2bce8714ecbcb17c6b487208a48d26eed7824": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3163. JobClient spews errors when killing MR2 job. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1187491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/11 11:35 AM",
      "commitName": "45b2bce8714ecbcb17c6b487208a48d26eed7824",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "05/10/11 4:43 AM",
      "commitNameOld": "66137cf17cb4abccd6065819d97edc63c6510477",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.29,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n   private synchronized Object invoke(String method, Class argClass,\n       Object args) throws YarnRemoteException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n     while (true) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n         LOG.warn(\"Exception thrown by remote end.\", yre);\n         throw yre;\n       } catch (InvocationTargetException e) {\n         if (e.getTargetException() instanceof YarnRemoteException) {\n-          LOG.warn(\"Exception thrown by remote end.\", e\n-              .getTargetException());\n+          LOG.warn(\"Error from remote end: \" + e\n+              .getTargetException().getLocalizedMessage());\n+          LOG.debug(\"Tracing remote error \", e.getTargetException());\n           throw (YarnRemoteException) e.getTargetException();\n         }\n-        LOG.info(\"Failed to contact AM/History for job \" + jobId\n-            + \"  Will retry..\", e.getTargetException());\n+        LOG.info(\"Failed to contact AM/History for job \" + jobId + \n+            \" retrying..\");\n+        LOG.debug(\"Failed exception on AM/History contact\", \n+            e.getTargetException());\n         forceRefresh \u003d true;\n       } catch (Exception e) {\n         LOG.info(\"Failed to contact AM/History for job \" + jobId\n-            + \"  Will retry..\", e);\n+            + \"  Will retry..\");\n         LOG.debug(\"Failing to contact application master\", e);\n         forceRefresh \u003d true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass,\n      Object args) throws YarnRemoteException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    while (true) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\", yre);\n        throw yre;\n      } catch (InvocationTargetException e) {\n        if (e.getTargetException() instanceof YarnRemoteException) {\n          LOG.warn(\"Error from remote end: \" + e\n              .getTargetException().getLocalizedMessage());\n          LOG.debug(\"Tracing remote error \", e.getTargetException());\n          throw (YarnRemoteException) e.getTargetException();\n        }\n        LOG.info(\"Failed to contact AM/History for job \" + jobId + \n            \" retrying..\");\n        LOG.debug(\"Failed exception on AM/History contact\", \n            e.getTargetException());\n        forceRefresh \u003d true;\n      } catch (Exception e) {\n        LOG.info(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\");\n        LOG.debug(\"Failing to contact application master\", e);\n        forceRefresh \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "29552eeb36dd8a9246fb648d65b5cfb94ae46d77": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2925. Fixed Yarn+MR client code to behave saner with completed jobs. Contributed by Devaraj K.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1172587 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/11 5:26 AM",
      "commitName": "29552eeb36dd8a9246fb648d65b5cfb94ae46d77",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 8:01 PM",
      "commitNameOld": "71e05154330c084310b6e32bfd6397c29b4e0534",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 10.39,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,33 @@\n   private synchronized Object invoke(String method, Class argClass, \n       Object args) throws YarnRemoteException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n     while (true) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n-        LOG.warn(\"Exception thrown by remote end.\");\n-        LOG.warn(RPCUtil.toString(yre));\n+        LOG.warn(\"Exception thrown by remote end.\", yre);\n         throw yre;\n       } catch (InvocationTargetException e) {\n-        //TODO Finite # of errors before giving up?\n+        if (e.getTargetException() instanceof YarnRemoteException) {\n+          LOG.warn(\"Exception thrown by remote end.\", e\n+              .getTargetException());\n+          throw (YarnRemoteException) e.getTargetException();\n+        }\n         LOG.info(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e.getTargetException());\n         forceRefresh \u003d true;\n       } catch (Exception e) {\n         LOG.info(\"Failed to contact AM/History for job \" + jobId\n             + \"  Will retry..\", e);\n         LOG.debug(\"Failing to contact application master\", e);\n         forceRefresh \u003d true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass, \n      Object args) throws YarnRemoteException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    while (true) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\", yre);\n        throw yre;\n      } catch (InvocationTargetException e) {\n        if (e.getTargetException() instanceof YarnRemoteException) {\n          LOG.warn(\"Exception thrown by remote end.\", e\n              .getTargetException());\n          throw (YarnRemoteException) e.getTargetException();\n        }\n        LOG.info(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e.getTargetException());\n        forceRefresh \u003d true;\n      } catch (Exception e) {\n        LOG.info(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        LOG.debug(\"Failing to contact application master\", e);\n        forceRefresh \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "71e05154330c084310b6e32bfd6397c29b4e0534": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2963. Fix hang in TestMRJobs. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 8:01 PM",
      "commitName": "71e05154330c084310b6e32bfd6397c29b4e0534",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 11:26 AM",
      "commitNameOld": "1f46b991da9b91585608a0babd3eda39485dce09",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.36,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,30 @@\n   private synchronized Object invoke(String method, Class argClass, \n       Object args) throws YarnRemoteException {\n     Method methodOb \u003d null;\n     try {\n       methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n     } catch (SecurityException e) {\n       throw new YarnException(e);\n     } catch (NoSuchMethodException e) {\n       throw new YarnException(\"Method name mismatch\", e);\n     }\n     while (true) {\n       try {\n         return methodOb.invoke(getProxy(), args);\n       } catch (YarnRemoteException yre) {\n         LOG.warn(\"Exception thrown by remote end.\");\n         LOG.warn(RPCUtil.toString(yre));\n         throw yre;\n+      } catch (InvocationTargetException e) {\n+        //TODO Finite # of errors before giving up?\n+        LOG.info(\"Failed to contact AM/History for job \" + jobId\n+            + \"  Will retry..\", e.getTargetException());\n+        forceRefresh \u003d true;\n       } catch (Exception e) {\n-        LOG.info(\"Failed to contact AM for job \" + jobId + \"  Will retry..\");\n+        LOG.info(\"Failed to contact AM/History for job \" + jobId\n+            + \"  Will retry..\", e);\n         LOG.debug(\"Failing to contact application master\", e);\n         forceRefresh \u003d true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass, \n      Object args) throws YarnRemoteException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    while (true) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\");\n        LOG.warn(RPCUtil.toString(yre));\n        throw yre;\n      } catch (InvocationTargetException e) {\n        //TODO Finite # of errors before giving up?\n        LOG.info(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e.getTargetException());\n        forceRefresh \u003d true;\n      } catch (Exception e) {\n        LOG.info(\"Failed to contact AM/History for job \" + jobId\n            + \"  Will retry..\", e);\n        LOG.debug(\"Failing to contact application master\", e);\n        forceRefresh \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "f2b91a8367a762091482074505618b570a520b19": {
      "type": "Yintroduced",
      "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 11:35 PM",
      "commitName": "f2b91a8367a762091482074505618b570a520b19",
      "commitAuthor": "Sharad Agarwal",
      "diff": "@@ -0,0 +1,24 @@\n+  private synchronized Object invoke(String method, Class argClass, \n+      Object args) throws YarnRemoteException {\n+    Method methodOb \u003d null;\n+    try {\n+      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n+    } catch (SecurityException e) {\n+      throw new YarnException(e);\n+    } catch (NoSuchMethodException e) {\n+      throw new YarnException(\"Method name mismatch\", e);\n+    }\n+    while (true) {\n+      try {\n+        return methodOb.invoke(getProxy(), args);\n+      } catch (YarnRemoteException yre) {\n+        LOG.warn(\"Exception thrown by remote end.\");\n+        LOG.warn(RPCUtil.toString(yre));\n+        throw yre;\n+      } catch (Exception e) {\n+        LOG.info(\"Failed to contact AM for job \" + jobId + \"  Will retry..\");\n+        LOG.debug(\"Failing to contact application master\", e);\n+        forceRefresh \u003d true;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Object invoke(String method, Class argClass, \n      Object args) throws YarnRemoteException {\n    Method methodOb \u003d null;\n    try {\n      methodOb \u003d MRClientProtocol.class.getMethod(method, argClass);\n    } catch (SecurityException e) {\n      throw new YarnException(e);\n    } catch (NoSuchMethodException e) {\n      throw new YarnException(\"Method name mismatch\", e);\n    }\n    while (true) {\n      try {\n        return methodOb.invoke(getProxy(), args);\n      } catch (YarnRemoteException yre) {\n        LOG.warn(\"Exception thrown by remote end.\");\n        LOG.warn(RPCUtil.toString(yre));\n        throw yre;\n      } catch (Exception e) {\n        LOG.info(\"Failed to contact AM for job \" + jobId + \"  Will retry..\");\n        LOG.debug(\"Failing to contact application master\", e);\n        forceRefresh \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java"
    }
  }
}