{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "addInternalServlet",
  "functionId": "addInternalServlet___name-String__pathSpec-String__clazz-Class__? extends HttpServlet____requireAuth-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 937,
  "functionEndLine": 963,
  "numCommitsSeen": 116,
  "timeTaken": 3442,
  "changeHistory": [
    "294695dd57cb75f2756a31a54264bdd37b32bb01",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "5dbbe0e0a5d31689d3425e490865f95057dc051c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "4b34109a727ab585574bea5fed61e25d4a25c077"
  ],
  "changeHistoryShort": {
    "294695dd57cb75f2756a31a54264bdd37b32bb01": "Ybodychange",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Yfilerename",
    "5dbbe0e0a5d31689d3425e490865f95057dc051c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "4b34109a727ab585574bea5fed61e25d4a25c077": "Yintroduced"
  },
  "changeHistoryDetails": {
    "294695dd57cb75f2756a31a54264bdd37b32bb01": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16314.  Make sure all web end points are covered by the same authentication filter.\n               Contributed by Prabhu Joseph\n",
      "commitDate": "05/06/19 3:55 PM",
      "commitName": "294695dd57cb75f2756a31a54264bdd37b32bb01",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/01/19 2:54 PM",
      "commitNameOld": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 152.0,
      "commitsBetweenForRepo": 1072,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,27 @@\n   public void addInternalServlet(String name, String pathSpec,\n       Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n     ServletHolder holder \u003d new ServletHolder(clazz);\n     if (name !\u003d null) {\n       holder.setName(name);\n     }\n     // Jetty doesn\u0027t like the same path spec mapping to different servlets, so\n     // if there\u0027s already a mapping for this pathSpec, remove it and assume that\n     // the newest one is the one we want\n     final ServletMapping[] servletMappings \u003d\n         webAppContext.getServletHandler().getServletMappings();\n     for (int i \u003d 0; i \u003c servletMappings.length; i++) {\n       if (servletMappings[i].containsPathSpec(pathSpec)) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Found existing \" + servletMappings[i].getServletName() +\n               \" servlet at path \" + pathSpec + \"; will replace mapping\" +\n               \" with \" + holder.getName() + \" servlet\");\n         }\n         ServletMapping[] newServletMappings \u003d\n             ArrayUtil.removeFromArray(servletMappings, servletMappings[i]);\n         webAppContext.getServletHandler()\n             .setServletMappings(newServletMappings);\n         break;\n       }\n     }\n     webAppContext.addServlet(holder, pathSpec);\n-\n-    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n-      LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n-      ServletHandler handler \u003d webAppContext.getServletHandler();\n-      FilterMapping fmap \u003d new FilterMapping();\n-      fmap.setPathSpec(pathSpec);\n-      fmap.setFilterName(SPNEGO_FILTER);\n-      fmap.setDispatches(FilterMapping.ALL);\n-      handler.addFilterMapping(fmap);\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec,\n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    // Jetty doesn\u0027t like the same path spec mapping to different servlets, so\n    // if there\u0027s already a mapping for this pathSpec, remove it and assume that\n    // the newest one is the one we want\n    final ServletMapping[] servletMappings \u003d\n        webAppContext.getServletHandler().getServletMappings();\n    for (int i \u003d 0; i \u003c servletMappings.length; i++) {\n      if (servletMappings[i].containsPathSpec(pathSpec)) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Found existing \" + servletMappings[i].getServletName() +\n              \" servlet at path \" + pathSpec + \"; will replace mapping\" +\n              \" with \" + holder.getName() + \" servlet\");\n        }\n        ServletMapping[] newServletMappings \u003d\n            ArrayUtil.removeFromArray(servletMappings, servletMappings[i]);\n        webAppContext.getServletHandler()\n            .setServletMappings(newServletMappings);\n        break;\n      }\n    }\n    webAppContext.addServlet(holder, pathSpec);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "19/08/16 9:22 AM",
      "commitNameOld": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 69.28,
      "commitsBetweenForRepo": 490,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,37 @@\n   public void addInternalServlet(String name, String pathSpec,\n       Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n     ServletHolder holder \u003d new ServletHolder(clazz);\n     if (name !\u003d null) {\n       holder.setName(name);\n     }\n+    // Jetty doesn\u0027t like the same path spec mapping to different servlets, so\n+    // if there\u0027s already a mapping for this pathSpec, remove it and assume that\n+    // the newest one is the one we want\n+    final ServletMapping[] servletMappings \u003d\n+        webAppContext.getServletHandler().getServletMappings();\n+    for (int i \u003d 0; i \u003c servletMappings.length; i++) {\n+      if (servletMappings[i].containsPathSpec(pathSpec)) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Found existing \" + servletMappings[i].getServletName() +\n+              \" servlet at path \" + pathSpec + \"; will replace mapping\" +\n+              \" with \" + holder.getName() + \" servlet\");\n+        }\n+        ServletMapping[] newServletMappings \u003d\n+            ArrayUtil.removeFromArray(servletMappings, servletMappings[i]);\n+        webAppContext.getServletHandler()\n+            .setServletMappings(newServletMappings);\n+        break;\n+      }\n+    }\n     webAppContext.addServlet(holder, pathSpec);\n \n     if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n-       LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n-       ServletHandler handler \u003d webAppContext.getServletHandler();\n-       FilterMapping fmap \u003d new FilterMapping();\n-       fmap.setPathSpec(pathSpec);\n-       fmap.setFilterName(SPNEGO_FILTER);\n-       fmap.setDispatches(Handler.ALL);\n-       handler.addFilterMapping(fmap);\n+      LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n+      ServletHandler handler \u003d webAppContext.getServletHandler();\n+      FilterMapping fmap \u003d new FilterMapping();\n+      fmap.setPathSpec(pathSpec);\n+      fmap.setFilterName(SPNEGO_FILTER);\n+      fmap.setDispatches(FilterMapping.ALL);\n+      handler.addFilterMapping(fmap);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec,\n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    // Jetty doesn\u0027t like the same path spec mapping to different servlets, so\n    // if there\u0027s already a mapping for this pathSpec, remove it and assume that\n    // the newest one is the one we want\n    final ServletMapping[] servletMappings \u003d\n        webAppContext.getServletHandler().getServletMappings();\n    for (int i \u003d 0; i \u003c servletMappings.length; i++) {\n      if (servletMappings[i].containsPathSpec(pathSpec)) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Found existing \" + servletMappings[i].getServletName() +\n              \" servlet at path \" + pathSpec + \"; will replace mapping\" +\n              \" with \" + holder.getName() + \" servlet\");\n        }\n        ServletMapping[] newServletMappings \u003d\n            ArrayUtil.removeFromArray(servletMappings, servletMappings[i]);\n        webAppContext.getServletHandler()\n            .setServletMappings(newServletMappings);\n        break;\n      }\n    }\n    webAppContext.addServlet(holder, pathSpec);\n\n    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n      LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n      ServletHandler handler \u003d webAppContext.getServletHandler();\n      FilterMapping fmap \u003d new FilterMapping();\n      fmap.setPathSpec(pathSpec);\n      fmap.setFilterName(SPNEGO_FILTER);\n      fmap.setDispatches(FilterMapping.ALL);\n      handler.addFilterMapping(fmap);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "27/01/14 10:41 PM",
      "commitNameOld": "87166f1ee81dbad579508c2bdbc7dda96b1ef809",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  public void addInternalServlet(String name, String pathSpec, \n+  public void addInternalServlet(String name, String pathSpec,\n       Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n     ServletHolder holder \u003d new ServletHolder(clazz);\n     if (name !\u003d null) {\n       holder.setName(name);\n     }\n     webAppContext.addServlet(holder, pathSpec);\n \n     if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n        LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n        ServletHandler handler \u003d webAppContext.getServletHandler();\n        FilterMapping fmap \u003d new FilterMapping();\n        fmap.setPathSpec(pathSpec);\n        fmap.setFilterName(SPNEGO_FILTER);\n        fmap.setDispatches(Handler.ALL);\n        handler.addFilterMapping(fmap);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec,\n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    webAppContext.addServlet(holder, pathSpec);\n\n    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n       ServletHandler handler \u003d webAppContext.getServletHandler();\n       FilterMapping fmap \u003d new FilterMapping();\n       fmap.setPathSpec(pathSpec);\n       fmap.setFilterName(SPNEGO_FILTER);\n       fmap.setDispatches(Handler.ALL);\n       handler.addFilterMapping(fmap);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
      }
    },
    "5dbbe0e0a5d31689d3425e490865f95057dc051c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2617. Replaced Kerberized SSL for image transfer and fsck with SPNEGO-based solution. Contributed by Jakob Homan, Alejandro Abdelnur, and Aaron T. Myers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1334216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/12 2:58 PM",
      "commitName": "5dbbe0e0a5d31689d3425e490865f95057dc051c",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "03/05/12 8:31 PM",
      "commitNameOld": "a70587f368a6519fceb0388c14befec4e97e8293",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 0.77,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void addInternalServlet(String name, String pathSpec, \n       Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n     ServletHolder holder \u003d new ServletHolder(clazz);\n     if (name !\u003d null) {\n       holder.setName(name);\n     }\n     webAppContext.addServlet(holder, pathSpec);\n     \n     if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n-       LOG.info(\"Adding Kerberos filter to \" + name);\n+       LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n        ServletHandler handler \u003d webAppContext.getServletHandler();\n        FilterMapping fmap \u003d new FilterMapping();\n        fmap.setPathSpec(pathSpec);\n-       fmap.setFilterName(\"krb5Filter\");\n+       fmap.setFilterName(SPNEGO_FILTER);\n        fmap.setDispatches(Handler.ALL);\n        handler.addFilterMapping(fmap);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec, \n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    webAppContext.addServlet(holder, pathSpec);\n    \n    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       LOG.info(\"Adding Kerberos (SPNEGO) filter to \" + name);\n       ServletHandler handler \u003d webAppContext.getServletHandler();\n       FilterMapping fmap \u003d new FilterMapping();\n       fmap.setPathSpec(pathSpec);\n       fmap.setFilterName(SPNEGO_FILTER);\n       fmap.setDispatches(Handler.ALL);\n       handler.addFilterMapping(fmap);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec, \n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    webAppContext.addServlet(holder, pathSpec);\n    \n    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       LOG.info(\"Adding Kerberos filter to \" + name);\n       ServletHandler handler \u003d webAppContext.getServletHandler();\n       FilterMapping fmap \u003d new FilterMapping();\n       fmap.setPathSpec(pathSpec);\n       fmap.setFilterName(\"krb5Filter\");\n       fmap.setDispatches(Handler.ALL);\n       handler.addFilterMapping(fmap);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec, \n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    webAppContext.addServlet(holder, pathSpec);\n    \n    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       LOG.info(\"Adding Kerberos filter to \" + name);\n       ServletHandler handler \u003d webAppContext.getServletHandler();\n       FilterMapping fmap \u003d new FilterMapping();\n       fmap.setPathSpec(pathSpec);\n       fmap.setFilterName(\"krb5Filter\");\n       fmap.setDispatches(Handler.ALL);\n       handler.addFilterMapping(fmap);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec, \n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    webAppContext.addServlet(holder, pathSpec);\n    \n    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       LOG.info(\"Adding Kerberos filter to \" + name);\n       ServletHandler handler \u003d webAppContext.getServletHandler();\n       FilterMapping fmap \u003d new FilterMapping();\n       fmap.setPathSpec(pathSpec);\n       fmap.setFilterName(\"krb5Filter\");\n       fmap.setDispatches(Handler.ALL);\n       handler.addFilterMapping(fmap);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/http/HttpServer.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "common/src/java/org/apache/hadoop/http/HttpServer.java"
      }
    },
    "4b34109a727ab585574bea5fed61e25d4a25c077": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6584. Provide Kerberized SSL encryption for webservices. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@960137 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/10 5:02 PM",
      "commitName": "4b34109a727ab585574bea5fed61e25d4a25c077",
      "commitAuthor": "Jakob Homan",
      "diff": "@@ -0,0 +1,18 @@\n+  public void addInternalServlet(String name, String pathSpec, \n+      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n+    ServletHolder holder \u003d new ServletHolder(clazz);\n+    if (name !\u003d null) {\n+      holder.setName(name);\n+    }\n+    webAppContext.addServlet(holder, pathSpec);\n+    \n+    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n+       LOG.info(\"Adding Kerberos filter to \" + name);\n+       ServletHandler handler \u003d webAppContext.getServletHandler();\n+       FilterMapping fmap \u003d new FilterMapping();\n+       fmap.setPathSpec(pathSpec);\n+       fmap.setFilterName(\"krb5Filter\");\n+       fmap.setDispatches(Handler.ALL);\n+       handler.addFilterMapping(fmap);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec, \n      Class\u003c? extends HttpServlet\u003e clazz, boolean requireAuth) {\n    ServletHolder holder \u003d new ServletHolder(clazz);\n    if (name !\u003d null) {\n      holder.setName(name);\n    }\n    webAppContext.addServlet(holder, pathSpec);\n    \n    if(requireAuth \u0026\u0026 UserGroupInformation.isSecurityEnabled()) {\n       LOG.info(\"Adding Kerberos filter to \" + name);\n       ServletHandler handler \u003d webAppContext.getServletHandler();\n       FilterMapping fmap \u003d new FilterMapping();\n       fmap.setPathSpec(pathSpec);\n       fmap.setFilterName(\"krb5Filter\");\n       fmap.setDispatches(Handler.ALL);\n       handler.addFilterMapping(fmap);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/http/HttpServer.java"
    }
  }
}