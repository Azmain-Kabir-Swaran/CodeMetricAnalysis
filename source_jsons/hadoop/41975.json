{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMasterService.java",
  "functionName": "addPlacementConstraintHandler",
  "functionId": "addPlacementConstraintHandler___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
  "functionStartLine": 127,
  "functionEndLine": 150,
  "numCommitsSeen": 100,
  "timeTaken": 1406,
  "changeHistory": [
    "0b489e564ce5a50324a530e29c18aa8a75276c50"
  ],
  "changeHistoryShort": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7920. Simplify configuration for PlacementConstraints. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 2:23 PM",
      "commitName": "0b489e564ce5a50324a530e29c18aa8a75276c50",
      "commitAuthor": "Konstantinos Karanasos",
      "diff": "@@ -0,0 +1,24 @@\n+  private void addPlacementConstraintHandler(Configuration conf) {\n+    String placementConstraintsHandler \u003d\n+        conf.get(YarnConfiguration.RM_PLACEMENT_CONSTRAINTS_HANDLER,\n+            YarnConfiguration.DISABLED_RM_PLACEMENT_CONSTRAINTS_HANDLER);\n+    if (placementConstraintsHandler\n+        .equals(YarnConfiguration.DISABLED_RM_PLACEMENT_CONSTRAINTS_HANDLER)) {\n+      LOG.info(YarnConfiguration.DISABLED_RM_PLACEMENT_CONSTRAINTS_HANDLER\n+          + \" placement handler will be used, all scheduling requests will \"\n+          + \"be rejected.\");\n+      amsProcessingChain.addProcessor(new DisabledPlacementProcessor());\n+    } else if (placementConstraintsHandler\n+        .equals(YarnConfiguration.PROCESSOR_RM_PLACEMENT_CONSTRAINTS_HANDLER)) {\n+      LOG.info(YarnConfiguration.PROCESSOR_RM_PLACEMENT_CONSTRAINTS_HANDLER\n+          + \" placement handler will be used. Scheduling requests will be \"\n+          + \"handled by the placement constraint processor\");\n+      amsProcessingChain.addProcessor(new PlacementConstraintProcessor());\n+    } else if (placementConstraintsHandler\n+        .equals(YarnConfiguration.SCHEDULER_RM_PLACEMENT_CONSTRAINTS_HANDLER)) {\n+      LOG.info(YarnConfiguration.SCHEDULER_RM_PLACEMENT_CONSTRAINTS_HANDLER\n+          + \" placement handler will be used. Scheduling requests will be \"\n+          + \"handled by the main scheduler.\");\n+      amsProcessingChain.addProcessor(new SchedulerPlacementProcessor());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addPlacementConstraintHandler(Configuration conf) {\n    String placementConstraintsHandler \u003d\n        conf.get(YarnConfiguration.RM_PLACEMENT_CONSTRAINTS_HANDLER,\n            YarnConfiguration.DISABLED_RM_PLACEMENT_CONSTRAINTS_HANDLER);\n    if (placementConstraintsHandler\n        .equals(YarnConfiguration.DISABLED_RM_PLACEMENT_CONSTRAINTS_HANDLER)) {\n      LOG.info(YarnConfiguration.DISABLED_RM_PLACEMENT_CONSTRAINTS_HANDLER\n          + \" placement handler will be used, all scheduling requests will \"\n          + \"be rejected.\");\n      amsProcessingChain.addProcessor(new DisabledPlacementProcessor());\n    } else if (placementConstraintsHandler\n        .equals(YarnConfiguration.PROCESSOR_RM_PLACEMENT_CONSTRAINTS_HANDLER)) {\n      LOG.info(YarnConfiguration.PROCESSOR_RM_PLACEMENT_CONSTRAINTS_HANDLER\n          + \" placement handler will be used. Scheduling requests will be \"\n          + \"handled by the placement constraint processor\");\n      amsProcessingChain.addProcessor(new PlacementConstraintProcessor());\n    } else if (placementConstraintsHandler\n        .equals(YarnConfiguration.SCHEDULER_RM_PLACEMENT_CONSTRAINTS_HANDLER)) {\n      LOG.info(YarnConfiguration.SCHEDULER_RM_PLACEMENT_CONSTRAINTS_HANDLER\n          + \" placement handler will be used. Scheduling requests will be \"\n          + \"handled by the main scheduler.\");\n      amsProcessingChain.addProcessor(new SchedulerPlacementProcessor());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java"
    }
  }
}