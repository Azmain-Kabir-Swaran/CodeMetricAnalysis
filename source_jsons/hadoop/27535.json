{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeTimelineCollectorManager.java",
  "functionName": "renewTokenForAppCollector",
  "functionId": "renewTokenForAppCollector___appCollector-AppLevelTimelineCollector",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/NodeTimelineCollectorManager.java",
  "functionStartLine": 178,
  "functionEndLine": 188,
  "numCommitsSeen": 15,
  "timeTaken": 738,
  "changeHistory": [
    "7fd6ae24798cd3fdd77dbb00089a922407026e02",
    "354be99dbf3b6effb45032b574210fd7161d83d4"
  ],
  "changeHistoryShort": {
    "7fd6ae24798cd3fdd77dbb00089a922407026e02": "Ybodychange",
    "354be99dbf3b6effb45032b574210fd7161d83d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7fd6ae24798cd3fdd77dbb00089a922407026e02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6134. [ATSv2 Security] Regenerate delegation token for app just before token expires if app collector is active. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "7fd6ae24798cd3fdd77dbb00089a922407026e02",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "354be99dbf3b6effb45032b574210fd7161d83d4",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n   public long renewTokenForAppCollector(\n       AppLevelTimelineCollector appCollector) throws IOException {\n     if (appCollector.getDelegationTokenForApp() !\u003d null) {\n-      TimelineDelegationTokenIdentifier identifier \u003d\n-          appCollector.getDelegationTokenForApp().decodeIdentifier();\n       return tokenMgrService.renewToken(appCollector.getDelegationTokenForApp(),\n-          identifier.getRenewer().toString());\n+          appCollector.getAppDelegationTokenRenewer());\n     } else {\n       LOG.info(\"Delegation token not available for renewal for app \" +\n           appCollector.getTimelineEntityContext().getAppId());\n       return -1;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public long renewTokenForAppCollector(\n      AppLevelTimelineCollector appCollector) throws IOException {\n    if (appCollector.getDelegationTokenForApp() !\u003d null) {\n      return tokenMgrService.renewToken(appCollector.getDelegationTokenForApp(),\n          appCollector.getAppDelegationTokenRenewer());\n    } else {\n      LOG.info(\"Delegation token not available for renewal for app \" +\n          appCollector.getTimelineEntityContext().getAppId());\n      return -1;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/NodeTimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "354be99dbf3b6effb45032b574210fd7161d83d4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6133. [ATSv2 Security] Renew delegation token for app automatically if an app collector is active. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "354be99dbf3b6effb45032b574210fd7161d83d4",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,13 @@\n+  public long renewTokenForAppCollector(\n+      AppLevelTimelineCollector appCollector) throws IOException {\n+    if (appCollector.getDelegationTokenForApp() !\u003d null) {\n+      TimelineDelegationTokenIdentifier identifier \u003d\n+          appCollector.getDelegationTokenForApp().decodeIdentifier();\n+      return tokenMgrService.renewToken(appCollector.getDelegationTokenForApp(),\n+          identifier.getRenewer().toString());\n+    } else {\n+      LOG.info(\"Delegation token not available for renewal for app \" +\n+          appCollector.getTimelineEntityContext().getAppId());\n+      return -1;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public long renewTokenForAppCollector(\n      AppLevelTimelineCollector appCollector) throws IOException {\n    if (appCollector.getDelegationTokenForApp() !\u003d null) {\n      TimelineDelegationTokenIdentifier identifier \u003d\n          appCollector.getDelegationTokenForApp().decodeIdentifier();\n      return tokenMgrService.renewToken(appCollector.getDelegationTokenForApp(),\n          identifier.getRenewer().toString());\n    } else {\n      LOG.info(\"Delegation token not available for renewal for app \" +\n          appCollector.getTimelineEntityContext().getAppId());\n      return -1;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/NodeTimelineCollectorManager.java"
    }
  }
}