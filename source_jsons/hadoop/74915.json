{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractDelegationTokenSecretManager.java",
  "functionName": "updateCurrentKey",
  "functionId": "updateCurrentKey",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
  "functionStartLine": 353,
  "functionEndLine": 369,
  "numCommitsSeen": 46,
  "timeTaken": 1869,
  "changeHistory": [
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
    "ef784a2e08c2452026a85ae382a956ff7deecbd0",
    "db890eef3208cc557476fa510f7a253ba22bc68a",
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b"
  ],
  "changeHistoryShort": {
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": "Ybodychange",
    "ef784a2e08c2452026a85ae382a956ff7deecbd0": "Ybodychange",
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Ybodychange",
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b": "Ymultichange(Ymodifierchange,Ybodychange)",
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)\n",
      "commitDate": "23/10/14 5:04 PM",
      "commitName": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/10/14 2:26 PM",
      "commitNameOld": "70719e5c62f32836914bea88e1ddd99c0ed009e1",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1.11,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   private void updateCurrentKey() throws IOException {\n     LOG.info(\"Updating the current master key for generating delegation tokens\");\n     /* Create a new currentKey with an estimated expiry date. */\n     int newCurrentId;\n     synchronized (this) {\n-      newCurrentId \u003d currentId+1;\n+      newCurrentId \u003d incrementCurrentKeyId();\n     }\n     DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n         .currentTimeMillis()\n         + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n     //Log must be invoked outside the lock on \u0027this\u0027\n     logUpdateMasterKey(newKey);\n     synchronized (this) {\n-      currentId \u003d newKey.getKeyId();\n       currentKey \u003d newKey;\n       storeDelegationKey(currentKey);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d incrementCurrentKeyId();\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    synchronized (this) {\n      currentKey \u003d newKey;\n      storeDelegationKey(currentKey);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "ef784a2e08c2452026a85ae382a956ff7deecbd0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11017. Addendum to fix RM HA. KMS delegation token secret manager should be able to use zookeeper as store. (Arun Suresh via kasha)\n",
      "commitDate": "23/09/14 5:07 PM",
      "commitName": "ef784a2e08c2452026a85ae382a956ff7deecbd0",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "20/09/14 8:21 AM",
      "commitNameOld": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 3.37,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   private void updateCurrentKey() throws IOException {\n     LOG.info(\"Updating the current master key for generating delegation tokens\");\n     /* Create a new currentKey with an estimated expiry date. */\n     int newCurrentId;\n     synchronized (this) {\n       newCurrentId \u003d currentId+1;\n     }\n     DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n         .currentTimeMillis()\n         + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n     //Log must be invoked outside the lock on \u0027this\u0027\n     logUpdateMasterKey(newKey);\n-    storeNewMasterKey(newKey);\n     synchronized (this) {\n       currentId \u003d newKey.getKeyId();\n       currentKey \u003d newKey;\n       storeDelegationKey(currentKey);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      storeDelegationKey(currentKey);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "02/05/14 11:38 AM",
      "commitNameOld": "bee448cacd142a4125e60c840022b65cc5fe9efa",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 140.86,
      "commitsBetweenForRepo": 1122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void updateCurrentKey() throws IOException {\n     LOG.info(\"Updating the current master key for generating delegation tokens\");\n     /* Create a new currentKey with an estimated expiry date. */\n     int newCurrentId;\n     synchronized (this) {\n       newCurrentId \u003d currentId+1;\n     }\n     DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n         .currentTimeMillis()\n         + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n     //Log must be invoked outside the lock on \u0027this\u0027\n     logUpdateMasterKey(newKey);\n     storeNewMasterKey(newKey);\n     synchronized (this) {\n       currentId \u003d newKey.getKeyId();\n       currentKey \u003d newKey;\n-      allKeys.put(currentKey.getKeyId(), currentKey);\n+      storeDelegationKey(currentKey);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    storeNewMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      storeDelegationKey(currentKey);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9574. Added new methods in AbstractDelegationTokenSecretManager for helping YARN ResourceManager to reuse code for RM restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 5:52 PM",
      "commitName": "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "12/04/13 8:18 AM",
      "commitNameOld": "f863543206a67ba295454609d618e16f91309b84",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 47.4,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private void updateCurrentKey() throws IOException {\n     LOG.info(\"Updating the current master key for generating delegation tokens\");\n     /* Create a new currentKey with an estimated expiry date. */\n     int newCurrentId;\n     synchronized (this) {\n       newCurrentId \u003d currentId+1;\n     }\n     DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n         .currentTimeMillis()\n         + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n     //Log must be invoked outside the lock on \u0027this\u0027\n     logUpdateMasterKey(newKey);\n+    storeNewMasterKey(newKey);\n     synchronized (this) {\n       currentId \u003d newKey.getKeyId();\n       currentKey \u003d newKey;\n       allKeys.put(currentKey.getKeyId(), currentKey);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    storeNewMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      allKeys.put(currentKey.getKeyId(), currentKey);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      allKeys.put(currentKey.getKeyId(), currentKey);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      allKeys.put(currentKey.getKeyId(), currentKey);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      allKeys.put(currentKey.getKeyId(), currentKey);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/10 1:43 PM",
      "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
      "commitAuthor": "Konstantin Shvachko",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:43 PM",
          "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
          "commitAuthor": "Konstantin Shvachko",
          "commitDateOld": "19/02/10 12:49 AM",
          "commitNameOld": "a417a8faeaa1a40e140c7f86463e699d92404454",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-  private synchronized void updateCurrentKey() throws IOException {\n+  private void updateCurrentKey() throws IOException {\n     LOG.info(\"Updating the current master key for generating delegation tokens\");\n     /* Create a new currentKey with an estimated expiry date. */\n-    currentId++;\n-    currentKey \u003d new DelegationKey(currentId, System.currentTimeMillis()\n+    int newCurrentId;\n+    synchronized (this) {\n+      newCurrentId \u003d currentId+1;\n+    }\n+    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n+        .currentTimeMillis()\n         + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n-    allKeys.put(currentKey.getKeyId(), currentKey);\n+    //Log must be invoked outside the lock on \u0027this\u0027\n+    logUpdateMasterKey(newKey);\n+    synchronized (this) {\n+      currentId \u003d newKey.getKeyId();\n+      currentKey \u003d newKey;\n+      allKeys.put(currentKey.getKeyId(), currentKey);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      allKeys.put(currentKey.getKeyId(), currentKey);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:43 PM",
          "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
          "commitAuthor": "Konstantin Shvachko",
          "commitDateOld": "19/02/10 12:49 AM",
          "commitNameOld": "a417a8faeaa1a40e140c7f86463e699d92404454",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-  private synchronized void updateCurrentKey() throws IOException {\n+  private void updateCurrentKey() throws IOException {\n     LOG.info(\"Updating the current master key for generating delegation tokens\");\n     /* Create a new currentKey with an estimated expiry date. */\n-    currentId++;\n-    currentKey \u003d new DelegationKey(currentId, System.currentTimeMillis()\n+    int newCurrentId;\n+    synchronized (this) {\n+      newCurrentId \u003d currentId+1;\n+    }\n+    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n+        .currentTimeMillis()\n         + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n-    allKeys.put(currentKey.getKeyId(), currentKey);\n+    //Log must be invoked outside the lock on \u0027this\u0027\n+    logUpdateMasterKey(newKey);\n+    synchronized (this) {\n+      currentId \u003d newKey.getKeyId();\n+      currentKey \u003d newKey;\n+      allKeys.put(currentKey.getKeyId(), currentKey);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    int newCurrentId;\n    synchronized (this) {\n      newCurrentId \u003d currentId+1;\n    }\n    DelegationKey newKey \u003d new DelegationKey(newCurrentId, System\n        .currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    //Log must be invoked outside the lock on \u0027this\u0027\n    logUpdateMasterKey(newKey);\n    synchronized (this) {\n      currentId \u003d newKey.getKeyId();\n      currentKey \u003d newKey;\n      allKeys.put(currentKey.getKeyId(), currentKey);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6547. Move DelegationToken into Common, so that it can be used by\nMapReduce also. (devaraj via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@907956 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/10 12:10 AM",
      "commitName": "38c59c0af7595897dbff8e5f13b7ff6978b9c08b",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,8 @@\n+  private synchronized void updateCurrentKey() throws IOException {\n+    LOG.info(\"Updating the current master key for generating delegation tokens\");\n+    /* Create a new currentKey with an estimated expiry date. */\n+    currentId++;\n+    currentKey \u003d new DelegationKey(currentId, System.currentTimeMillis()\n+        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n+    allKeys.put(currentKey.getKeyId(), currentKey);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void updateCurrentKey() throws IOException {\n    LOG.info(\"Updating the current master key for generating delegation tokens\");\n    /* Create a new currentKey with an estimated expiry date. */\n    currentId++;\n    currentKey \u003d new DelegationKey(currentId, System.currentTimeMillis()\n        + keyUpdateInterval + tokenMaxLifetime, generateSecret());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n  }",
      "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
    }
  }
}