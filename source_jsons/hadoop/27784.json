{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationStateStoreFacade.java",
  "functionName": "createRetryPolicy",
  "functionId": "createRetryPolicy___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/utils/FederationStateStoreFacade.java",
  "functionStartLine": 154,
  "functionEndLine": 171,
  "numCommitsSeen": 11,
  "timeTaken": 1451,
  "changeHistory": [
    "ad2a3506626728a6be47af0db3ca60610a568734",
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9",
    "5c843823972d030555e25729ae7b4b8fbafb59fd"
  ],
  "changeHistoryShort": {
    "ad2a3506626728a6be47af0db3ca60610a568734": "Ybodychange",
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": "Ybodychange",
    "5c843823972d030555e25729ae7b4b8fbafb59fd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ad2a3506626728a6be47af0db3ca60610a568734": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6970. Add PoolInitializationException as retriable exception in FederationFacade. (Giovanni Matteo Fumarola via Subru).\n",
      "commitDate": "08/08/17 4:48 PM",
      "commitName": "ad2a3506626728a6be47af0db3ca60610a568734",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "825108d08a9b49d7c19915624f9167101528cb95",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 6.97,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public static RetryPolicy createRetryPolicy(Configuration conf) {\n     // Retry settings for StateStore\n     RetryPolicy basePolicy \u003d RetryPolicies.exponentialBackoffRetry(\n         conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES, Integer.SIZE),\n         conf.getLong(YarnConfiguration.CLIENT_FAILOVER_SLEEPTIME_BASE_MS,\n             YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS),\n         TimeUnit.MILLISECONDS);\n     Map\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e exceptionToPolicyMap \u003d\n         new HashMap\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e();\n     exceptionToPolicyMap.put(FederationStateStoreRetriableException.class,\n         basePolicy);\n     exceptionToPolicyMap.put(CacheLoaderException.class, basePolicy);\n+    exceptionToPolicyMap.put(PoolInitializationException.class, basePolicy);\n \n     RetryPolicy retryPolicy \u003d RetryPolicies.retryByException(\n         RetryPolicies.TRY_ONCE_THEN_FAIL, exceptionToPolicyMap);\n     return retryPolicy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RetryPolicy createRetryPolicy(Configuration conf) {\n    // Retry settings for StateStore\n    RetryPolicy basePolicy \u003d RetryPolicies.exponentialBackoffRetry(\n        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES, Integer.SIZE),\n        conf.getLong(YarnConfiguration.CLIENT_FAILOVER_SLEEPTIME_BASE_MS,\n            YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS),\n        TimeUnit.MILLISECONDS);\n    Map\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e exceptionToPolicyMap \u003d\n        new HashMap\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e();\n    exceptionToPolicyMap.put(FederationStateStoreRetriableException.class,\n        basePolicy);\n    exceptionToPolicyMap.put(CacheLoaderException.class, basePolicy);\n    exceptionToPolicyMap.put(PoolInitializationException.class, basePolicy);\n\n    RetryPolicy retryPolicy \u003d RetryPolicies.retryByException(\n        RetryPolicies.TRY_ONCE_THEN_FAIL, exceptionToPolicyMap);\n    return retryPolicy;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/utils/FederationStateStoreFacade.java",
      "extendedDetails": {}
    },
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5602. Utils for Federation State and Policy Store. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 326a2e6bde1cf266ecc7d3b513cdaac6abcebbe4)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "86b2bec56e28a2d1ece53ab5a452860fd0444268",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,17 @@\n   public static RetryPolicy createRetryPolicy(Configuration conf) {\n     // Retry settings for StateStore\n-    RetryPolicy retryPolicy \u003d RetryPolicies.exponentialBackoffRetry(\n+    RetryPolicy basePolicy \u003d RetryPolicies.exponentialBackoffRetry(\n         conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES, Integer.SIZE),\n         conf.getLong(YarnConfiguration.CLIENT_FAILOVER_SLEEPTIME_BASE_MS,\n             YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS),\n         TimeUnit.MILLISECONDS);\n+    Map\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e exceptionToPolicyMap \u003d\n+        new HashMap\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e();\n+    exceptionToPolicyMap.put(FederationStateStoreRetriableException.class,\n+        basePolicy);\n+    exceptionToPolicyMap.put(CacheLoaderException.class, basePolicy);\n \n+    RetryPolicy retryPolicy \u003d RetryPolicies.retryByException(\n+        RetryPolicies.TRY_ONCE_THEN_FAIL, exceptionToPolicyMap);\n     return retryPolicy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RetryPolicy createRetryPolicy(Configuration conf) {\n    // Retry settings for StateStore\n    RetryPolicy basePolicy \u003d RetryPolicies.exponentialBackoffRetry(\n        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES, Integer.SIZE),\n        conf.getLong(YarnConfiguration.CLIENT_FAILOVER_SLEEPTIME_BASE_MS,\n            YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS),\n        TimeUnit.MILLISECONDS);\n    Map\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e exceptionToPolicyMap \u003d\n        new HashMap\u003cClass\u003c? extends Exception\u003e, RetryPolicy\u003e();\n    exceptionToPolicyMap.put(FederationStateStoreRetriableException.class,\n        basePolicy);\n    exceptionToPolicyMap.put(CacheLoaderException.class, basePolicy);\n\n    RetryPolicy retryPolicy \u003d RetryPolicies.retryByException(\n        RetryPolicies.TRY_ONCE_THEN_FAIL, exceptionToPolicyMap);\n    return retryPolicy;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/utils/FederationStateStoreFacade.java",
      "extendedDetails": {}
    },
    "5c843823972d030555e25729ae7b4b8fbafb59fd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3672. Create Facade for Federation State and Policy Store. Contributed by Subru Krishnan\n\n(cherry picked from commit 5e976cd2b90ccf1bccb6039edf14140677804c4e)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "5c843823972d030555e25729ae7b4b8fbafb59fd",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,10 @@\n+  public static RetryPolicy createRetryPolicy(Configuration conf) {\n+    // Retry settings for StateStore\n+    RetryPolicy retryPolicy \u003d RetryPolicies.exponentialBackoffRetry(\n+        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES, Integer.SIZE),\n+        conf.getLong(YarnConfiguration.CLIENT_FAILOVER_SLEEPTIME_BASE_MS,\n+            YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS),\n+        TimeUnit.MILLISECONDS);\n+\n+    return retryPolicy;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static RetryPolicy createRetryPolicy(Configuration conf) {\n    // Retry settings for StateStore\n    RetryPolicy retryPolicy \u003d RetryPolicies.exponentialBackoffRetry(\n        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES, Integer.SIZE),\n        conf.getLong(YarnConfiguration.CLIENT_FAILOVER_SLEEPTIME_BASE_MS,\n            YarnConfiguration.DEFAULT_RESOURCEMANAGER_CONNECT_RETRY_INTERVAL_MS),\n        TimeUnit.MILLISECONDS);\n\n    return retryPolicy;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/utils/FederationStateStoreFacade.java"
    }
  }
}