{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeSerialization.java",
  "functionName": "register",
  "functionId": "register___klass-String__serializer-Class__?__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/serde/NativeSerialization.java",
  "functionStartLine": 60,
  "functionEndLine": 80,
  "numCommitsSeen": 3,
  "timeTaken": 860,
  "changeHistory": [
    "683987be7c160e67ddb8534eeb3c464bbe2796dd",
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139"
  ],
  "changeHistoryShort": {
    "683987be7c160e67ddb8534eeb3c464bbe2796dd": "Ybodychange",
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": "Yintroduced"
  },
  "changeHistoryDetails": {
    "683987be7c160e67ddb8534eeb3c464bbe2796dd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6069. Lint/style fixes and removal of unused code. Contributed by Todd Lipcon.\n",
      "commitDate": "05/09/14 10:44 AM",
      "commitName": "683987be7c160e67ddb8534eeb3c464bbe2796dd",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "03/09/14 12:22 PM",
      "commitNameOld": "1081d9cee23aa661d7c9165bc9855865a38b528e",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public void register(String klass, Class\u003c?\u003e serializer) throws IOException {\n     if (null \u003d\u003d klass || null \u003d\u003d serializer) {\n       throw new IOException(\"invalid arguments, klass or serializer is null\");\n     }\n \n     if (!INativeSerializer.class.isAssignableFrom(serializer)) {\n       throw new IOException(\"Serializer is not assigable from INativeSerializer\");\n     }\n \n     final Class\u003c?\u003e storedSerializer \u003d map.get(klass);\n     if (null \u003d\u003d storedSerializer) {\n       map.put(klass, serializer);\n       return;\n     } else {\n       if (!storedSerializer.getName().equals(serializer.getName())) {\n-        throw new IOException(\"Error! Serializer already registered, exist: \" + storedSerializer.getName() + \", new: \"\n-            + serializer.getName());\n+        throw new IOException(\"Error! Serializer already registered, existing: \" +\n+                              storedSerializer.getName() + \", new: \" +\n+                              serializer.getName());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void register(String klass, Class\u003c?\u003e serializer) throws IOException {\n    if (null \u003d\u003d klass || null \u003d\u003d serializer) {\n      throw new IOException(\"invalid arguments, klass or serializer is null\");\n    }\n\n    if (!INativeSerializer.class.isAssignableFrom(serializer)) {\n      throw new IOException(\"Serializer is not assigable from INativeSerializer\");\n    }\n\n    final Class\u003c?\u003e storedSerializer \u003d map.get(klass);\n    if (null \u003d\u003d storedSerializer) {\n      map.put(klass, serializer);\n      return;\n    } else {\n      if (!storedSerializer.getName().equals(serializer.getName())) {\n        throw new IOException(\"Error! Serializer already registered, existing: \" +\n                              storedSerializer.getName() + \", new: \" +\n                              serializer.getName());\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/serde/NativeSerialization.java",
      "extendedDetails": {}
    },
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": {
      "type": "Yintroduced",
      "commitMessage": "Import initial code for MAPREDUCE-2841 (native output collector)\n\nContributed by:\n  Binglin Chang\n  Yang Dong\n  Sean Zhong\n  Manu Zhang\n  Zhongliang Zhu\n  Vincent Wang\n  Yan Dong\n  Cheng Lian\n  Xusen Yin\n  Fangqin Dai\n  Jiang Weihua\n  Gansha Wu\n  Avik Dey\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/MR-2841@1611413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 10:44 AM",
      "commitName": "b2551c06a09fb80a9e69adbc01c4c34b93ad0139",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  public void register(String klass, Class\u003c?\u003e serializer) throws IOException {\n+    if (null \u003d\u003d klass || null \u003d\u003d serializer) {\n+      throw new IOException(\"invalid arguments, klass or serializer is null\");\n+    }\n+\n+    if (!INativeSerializer.class.isAssignableFrom(serializer)) {\n+      throw new IOException(\"Serializer is not assigable from INativeSerializer\");\n+    }\n+\n+    final Class\u003c?\u003e storedSerializer \u003d map.get(klass);\n+    if (null \u003d\u003d storedSerializer) {\n+      map.put(klass, serializer);\n+      return;\n+    } else {\n+      if (!storedSerializer.getName().equals(serializer.getName())) {\n+        throw new IOException(\"Error! Serializer already registered, exist: \" + storedSerializer.getName() + \", new: \"\n+            + serializer.getName());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void register(String klass, Class\u003c?\u003e serializer) throws IOException {\n    if (null \u003d\u003d klass || null \u003d\u003d serializer) {\n      throw new IOException(\"invalid arguments, klass or serializer is null\");\n    }\n\n    if (!INativeSerializer.class.isAssignableFrom(serializer)) {\n      throw new IOException(\"Serializer is not assigable from INativeSerializer\");\n    }\n\n    final Class\u003c?\u003e storedSerializer \u003d map.get(klass);\n    if (null \u003d\u003d storedSerializer) {\n      map.put(klass, serializer);\n      return;\n    } else {\n      if (!storedSerializer.getName().equals(serializer.getName())) {\n        throw new IOException(\"Error! Serializer already registered, exist: \" + storedSerializer.getName() + \", new: \"\n            + serializer.getName());\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/serde/NativeSerialization.java"
    }
  }
}