{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "processPoolXml",
  "functionId": "processPoolXml___pool-Node",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 1122,
  "functionEndLine": 1160,
  "numCommitsSeen": 15,
  "timeTaken": 1546,
  "changeHistory": [
    "680716f31e120f4d3ee70b095e4db46c05b891d9",
    "700b0e4019cf483f7532609711812150b8c44742"
  ],
  "changeHistoryShort": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Yintroduced"
  },
  "changeHistoryDetails": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9951. Use string constants for XML tags in OfflineImageReconstructor (Lin Yiqun via cmccabe)\n",
      "commitDate": "21/03/16 11:40 AM",
      "commitName": "680716f31e120f4d3ee70b095e4db46c05b891d9",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "10/03/16 1:41 PM",
      "commitNameOld": "bd49354c6d6387620b0de2219eab1714ec2d64f8",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 10.87,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,39 @@\n     private void processPoolXml(Node pool) throws IOException {\n       CachePoolInfoProto.Builder bld \u003d CachePoolInfoProto.newBuilder();\n-      String poolName \u003d pool.removeChildStr(\"poolName\");\n+      String poolName \u003d\n+          pool.removeChildStr(CACHE_MANAGER_SECTION_POOL_NAME);\n       if (poolName \u003d\u003d null) {\n         throw new IOException(\"\u003cpool\u003e found without \u003cpoolName\u003e\");\n       }\n       bld.setPoolName(poolName);\n-      String ownerName \u003d pool.removeChildStr(\"ownerName\");\n+      String ownerName \u003d\n+          pool.removeChildStr(CACHE_MANAGER_SECTION_OWNER_NAME);\n       if (ownerName \u003d\u003d null) {\n         throw new IOException(\"\u003cpool\u003e found without \u003cownerName\u003e\");\n       }\n       bld.setOwnerName(ownerName);\n-      String groupName \u003d pool.removeChildStr(\"groupName\");\n+      String groupName \u003d\n+          pool.removeChildStr(CACHE_MANAGER_SECTION_GROUP_NAME);\n       if (groupName \u003d\u003d null) {\n         throw new IOException(\"\u003cpool\u003e found without \u003cgroupName\u003e\");\n       }\n       bld.setGroupName(groupName);\n-      Integer mode \u003d pool.removeChildInt(\"mode\");\n+      Integer mode \u003d pool.removeChildInt(CACHE_MANAGER_SECTION_MODE);\n       if (mode \u003d\u003d null) {\n         throw new IOException(\"\u003cpool\u003e found without \u003cmode\u003e\");\n       }\n       bld.setMode(mode);\n-      Long limit \u003d pool.removeChildLong(\"limit\");\n+      Long limit \u003d pool.removeChildLong(CACHE_MANAGER_SECTION_LIMIT);\n       if (limit \u003d\u003d null) {\n         throw new IOException(\"\u003cpool\u003e found without \u003climit\u003e\");\n       }\n       bld.setLimit(limit);\n-      Long maxRelativeExpiry \u003d pool.removeChildLong(\"maxRelativeExpiry\");\n+      Long maxRelativeExpiry \u003d\n+          pool.removeChildLong(CACHE_MANAGER_SECTION_MAX_RELATIVE_EXPIRY);\n       if (maxRelativeExpiry \u003d\u003d null) {\n         throw new IOException(\"\u003cpool\u003e found without \u003cmaxRelativeExpiry\u003e\");\n       }\n       bld.setMaxRelativeExpiry(maxRelativeExpiry);\n       pool.verifyNoRemainingKeys(\"pool\");\n       bld.build().writeDelimitedTo(out);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processPoolXml(Node pool) throws IOException {\n      CachePoolInfoProto.Builder bld \u003d CachePoolInfoProto.newBuilder();\n      String poolName \u003d\n          pool.removeChildStr(CACHE_MANAGER_SECTION_POOL_NAME);\n      if (poolName \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cpoolName\u003e\");\n      }\n      bld.setPoolName(poolName);\n      String ownerName \u003d\n          pool.removeChildStr(CACHE_MANAGER_SECTION_OWNER_NAME);\n      if (ownerName \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cownerName\u003e\");\n      }\n      bld.setOwnerName(ownerName);\n      String groupName \u003d\n          pool.removeChildStr(CACHE_MANAGER_SECTION_GROUP_NAME);\n      if (groupName \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cgroupName\u003e\");\n      }\n      bld.setGroupName(groupName);\n      Integer mode \u003d pool.removeChildInt(CACHE_MANAGER_SECTION_MODE);\n      if (mode \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cmode\u003e\");\n      }\n      bld.setMode(mode);\n      Long limit \u003d pool.removeChildLong(CACHE_MANAGER_SECTION_LIMIT);\n      if (limit \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003climit\u003e\");\n      }\n      bld.setLimit(limit);\n      Long maxRelativeExpiry \u003d\n          pool.removeChildLong(CACHE_MANAGER_SECTION_MAX_RELATIVE_EXPIRY);\n      if (maxRelativeExpiry \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cmaxRelativeExpiry\u003e\");\n      }\n      bld.setMaxRelativeExpiry(maxRelativeExpiry);\n      pool.verifyNoRemainingKeys(\"pool\");\n      bld.build().writeDelimitedTo(out);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,35 @@\n+    private void processPoolXml(Node pool) throws IOException {\n+      CachePoolInfoProto.Builder bld \u003d CachePoolInfoProto.newBuilder();\n+      String poolName \u003d pool.removeChildStr(\"poolName\");\n+      if (poolName \u003d\u003d null) {\n+        throw new IOException(\"\u003cpool\u003e found without \u003cpoolName\u003e\");\n+      }\n+      bld.setPoolName(poolName);\n+      String ownerName \u003d pool.removeChildStr(\"ownerName\");\n+      if (ownerName \u003d\u003d null) {\n+        throw new IOException(\"\u003cpool\u003e found without \u003cownerName\u003e\");\n+      }\n+      bld.setOwnerName(ownerName);\n+      String groupName \u003d pool.removeChildStr(\"groupName\");\n+      if (groupName \u003d\u003d null) {\n+        throw new IOException(\"\u003cpool\u003e found without \u003cgroupName\u003e\");\n+      }\n+      bld.setGroupName(groupName);\n+      Integer mode \u003d pool.removeChildInt(\"mode\");\n+      if (mode \u003d\u003d null) {\n+        throw new IOException(\"\u003cpool\u003e found without \u003cmode\u003e\");\n+      }\n+      bld.setMode(mode);\n+      Long limit \u003d pool.removeChildLong(\"limit\");\n+      if (limit \u003d\u003d null) {\n+        throw new IOException(\"\u003cpool\u003e found without \u003climit\u003e\");\n+      }\n+      bld.setLimit(limit);\n+      Long maxRelativeExpiry \u003d pool.removeChildLong(\"maxRelativeExpiry\");\n+      if (maxRelativeExpiry \u003d\u003d null) {\n+        throw new IOException(\"\u003cpool\u003e found without \u003cmaxRelativeExpiry\u003e\");\n+      }\n+      bld.setMaxRelativeExpiry(maxRelativeExpiry);\n+      pool.verifyNoRemainingKeys(\"pool\");\n+      bld.build().writeDelimitedTo(out);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processPoolXml(Node pool) throws IOException {\n      CachePoolInfoProto.Builder bld \u003d CachePoolInfoProto.newBuilder();\n      String poolName \u003d pool.removeChildStr(\"poolName\");\n      if (poolName \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cpoolName\u003e\");\n      }\n      bld.setPoolName(poolName);\n      String ownerName \u003d pool.removeChildStr(\"ownerName\");\n      if (ownerName \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cownerName\u003e\");\n      }\n      bld.setOwnerName(ownerName);\n      String groupName \u003d pool.removeChildStr(\"groupName\");\n      if (groupName \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cgroupName\u003e\");\n      }\n      bld.setGroupName(groupName);\n      Integer mode \u003d pool.removeChildInt(\"mode\");\n      if (mode \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cmode\u003e\");\n      }\n      bld.setMode(mode);\n      Long limit \u003d pool.removeChildLong(\"limit\");\n      if (limit \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003climit\u003e\");\n      }\n      bld.setLimit(limit);\n      Long maxRelativeExpiry \u003d pool.removeChildLong(\"maxRelativeExpiry\");\n      if (maxRelativeExpiry \u003d\u003d null) {\n        throw new IOException(\"\u003cpool\u003e found without \u003cmaxRelativeExpiry\u003e\");\n      }\n      bld.setMaxRelativeExpiry(maxRelativeExpiry);\n      pool.verifyNoRemainingKeys(\"pool\");\n      bld.build().writeDelimitedTo(out);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}