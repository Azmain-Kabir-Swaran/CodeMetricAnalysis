{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "processINodeXml",
  "functionId": "processINodeXml___node-Node",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 608,
  "functionEndLine": 640,
  "numCommitsSeen": 15,
  "timeTaken": 1535,
  "changeHistory": [
    "680716f31e120f4d3ee70b095e4db46c05b891d9",
    "700b0e4019cf483f7532609711812150b8c44742"
  ],
  "changeHistoryShort": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Yintroduced"
  },
  "changeHistoryDetails": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9951. Use string constants for XML tags in OfflineImageReconstructor (Lin Yiqun via cmccabe)\n",
      "commitDate": "21/03/16 11:40 AM",
      "commitName": "680716f31e120f4d3ee70b095e4db46c05b891d9",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "10/03/16 1:41 PM",
      "commitNameOld": "bd49354c6d6387620b0de2219eab1714ec2d64f8",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 10.87,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   private INodeSection.INode.Builder processINodeXml(Node node)\n       throws IOException {\n-    String type \u003d node.removeChildStr(\"type\");\n+    String type \u003d node.removeChildStr(INODE_SECTION_TYPE);\n     if (type \u003d\u003d null) {\n       throw new IOException(\"INode XML found with no \u003ctype\u003e tag.\");\n     }\n     INodeSection.INode.Builder inodeBld \u003d INodeSection.INode.newBuilder();\n-    Long id \u003d node.removeChildLong(\"id\");\n+    Long id \u003d node.removeChildLong(SECTION_ID);\n     if (id \u003d\u003d null) {\n       throw new IOException(\"\u003cinode\u003e found without \u003cid\u003e\");\n     }\n     inodeBld.setId(id);\n-    String name \u003d node.removeChildStr(\"name\");\n+    String name \u003d node.removeChildStr(SECTION_NAME);\n     if (name !\u003d null) {\n       inodeBld.setName(ByteString.copyFrom(name, \"UTF8\"));\n     }\n     switch (type) {\n     case \"FILE\":\n       processFileXml(node, inodeBld );\n       break;\n     case \"DIRECTORY\":\n       processDirectoryXml(node, inodeBld);\n       break;\n     case \"SYMLINK\":\n       processSymlinkXml(node, inodeBld);\n       break;\n     default:\n       throw new IOException(\"INode XML found with unknown \u003ctype\u003e \" +\n           \"tag \" + type);\n     }\n     node.verifyNoRemainingKeys(\"inode\");\n     return inodeBld;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private INodeSection.INode.Builder processINodeXml(Node node)\n      throws IOException {\n    String type \u003d node.removeChildStr(INODE_SECTION_TYPE);\n    if (type \u003d\u003d null) {\n      throw new IOException(\"INode XML found with no \u003ctype\u003e tag.\");\n    }\n    INodeSection.INode.Builder inodeBld \u003d INodeSection.INode.newBuilder();\n    Long id \u003d node.removeChildLong(SECTION_ID);\n    if (id \u003d\u003d null) {\n      throw new IOException(\"\u003cinode\u003e found without \u003cid\u003e\");\n    }\n    inodeBld.setId(id);\n    String name \u003d node.removeChildStr(SECTION_NAME);\n    if (name !\u003d null) {\n      inodeBld.setName(ByteString.copyFrom(name, \"UTF8\"));\n    }\n    switch (type) {\n    case \"FILE\":\n      processFileXml(node, inodeBld );\n      break;\n    case \"DIRECTORY\":\n      processDirectoryXml(node, inodeBld);\n      break;\n    case \"SYMLINK\":\n      processSymlinkXml(node, inodeBld);\n      break;\n    default:\n      throw new IOException(\"INode XML found with unknown \u003ctype\u003e \" +\n          \"tag \" + type);\n    }\n    node.verifyNoRemainingKeys(\"inode\");\n    return inodeBld;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,33 @@\n+  private INodeSection.INode.Builder processINodeXml(Node node)\n+      throws IOException {\n+    String type \u003d node.removeChildStr(\"type\");\n+    if (type \u003d\u003d null) {\n+      throw new IOException(\"INode XML found with no \u003ctype\u003e tag.\");\n+    }\n+    INodeSection.INode.Builder inodeBld \u003d INodeSection.INode.newBuilder();\n+    Long id \u003d node.removeChildLong(\"id\");\n+    if (id \u003d\u003d null) {\n+      throw new IOException(\"\u003cinode\u003e found without \u003cid\u003e\");\n+    }\n+    inodeBld.setId(id);\n+    String name \u003d node.removeChildStr(\"name\");\n+    if (name !\u003d null) {\n+      inodeBld.setName(ByteString.copyFrom(name, \"UTF8\"));\n+    }\n+    switch (type) {\n+    case \"FILE\":\n+      processFileXml(node, inodeBld );\n+      break;\n+    case \"DIRECTORY\":\n+      processDirectoryXml(node, inodeBld);\n+      break;\n+    case \"SYMLINK\":\n+      processSymlinkXml(node, inodeBld);\n+      break;\n+    default:\n+      throw new IOException(\"INode XML found with unknown \u003ctype\u003e \" +\n+          \"tag \" + type);\n+    }\n+    node.verifyNoRemainingKeys(\"inode\");\n+    return inodeBld;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private INodeSection.INode.Builder processINodeXml(Node node)\n      throws IOException {\n    String type \u003d node.removeChildStr(\"type\");\n    if (type \u003d\u003d null) {\n      throw new IOException(\"INode XML found with no \u003ctype\u003e tag.\");\n    }\n    INodeSection.INode.Builder inodeBld \u003d INodeSection.INode.newBuilder();\n    Long id \u003d node.removeChildLong(\"id\");\n    if (id \u003d\u003d null) {\n      throw new IOException(\"\u003cinode\u003e found without \u003cid\u003e\");\n    }\n    inodeBld.setId(id);\n    String name \u003d node.removeChildStr(\"name\");\n    if (name !\u003d null) {\n      inodeBld.setName(ByteString.copyFrom(name, \"UTF8\"));\n    }\n    switch (type) {\n    case \"FILE\":\n      processFileXml(node, inodeBld );\n      break;\n    case \"DIRECTORY\":\n      processDirectoryXml(node, inodeBld);\n      break;\n    case \"SYMLINK\":\n      processSymlinkXml(node, inodeBld);\n      break;\n    default:\n      throw new IOException(\"INode XML found with unknown \u003ctype\u003e \" +\n          \"tag \" + type);\n    }\n    node.verifyNoRemainingKeys(\"inode\");\n    return inodeBld;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}