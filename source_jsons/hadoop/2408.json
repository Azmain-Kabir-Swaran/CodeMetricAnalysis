{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___p-FsPermissionProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 1239,
  "functionEndLine": 1241,
  "numCommitsSeen": 233,
  "timeTaken": 7893,
  "changeHistory": [
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "e3803d002c660f18a5c2ecf32344fd6f3f491a5b",
    "65158e478f135ec051c1939bd5f371818365dffd",
    "48da033901d3471ef176a94104158546152353e9",
    "38a19bc293dec6221ae96e304fc6ab660d94e706",
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9"
  ],
  "changeHistoryShort": {
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ymovefromfile",
    "e3803d002c660f18a5c2ecf32344fd6f3f491a5b": "Ybodychange",
    "65158e478f135ec051c1939bd5f371818365dffd": "Ybodychange",
    "48da033901d3471ef176a94104158546152353e9": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "38a19bc293dec6221ae96e304fc6ab660d94e706": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yparameterchange)",
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6984. Serialize FileStatus via protobuf.\n",
      "commitDate": "02/08/17 12:12 PM",
      "commitName": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "29/06/17 6:38 AM",
      "commitNameOld": "16c8dbde574f49827fde5ee9add1861ee65d4645",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 34.23,
      "commitsBetweenForRepo": 222,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public static FsPermission convert(FsPermissionProto p) {\n-    return new FsPermissionExtension((short)p.getPerm());\n+    return new FsPermission((short)p.getPerm());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission convert(FsPermissionProto p) {\n    return new FsPermission((short)p.getPerm());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/09/15 5:51 PM",
      "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FsPermission convert(FsPermissionProto p) {\n    return new FsPermissionExtension((short)p.getPerm());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
        "oldMethodName": "convert",
        "newMethodName": "convert"
      }
    },
    "e3803d002c660f18a5c2ecf32344fd6f3f491a5b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6843. Create FileStatus isEncrypted() method (clamb via cmccabe)\n",
      "commitDate": "17/09/14 12:55 PM",
      "commitName": "e3803d002c660f18a5c2ecf32344fd6f3f491a5b",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "16/09/14 4:41 PM",
      "commitNameOld": "33ce887c20ec806ace02063e42599c3db76b536a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.84,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public static FsPermission convert(FsPermissionProto p) {\n-    return new FsAclPermission((short)p.getPerm());\n+    return new FsPermissionExtension((short)p.getPerm());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission convert(FsPermissionProto p) {\n    return new FsPermissionExtension((short)p.getPerm());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "65158e478f135ec051c1939bd5f371818365dffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6326. WebHdfs ACL compatibility is broken. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/05/14 3:35 PM",
      "commitName": "65158e478f135ec051c1939bd5f371818365dffd",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "04/05/14 8:38 PM",
      "commitNameOld": "9445859930b8653cb0b9a0e1abf38cc05dbe2658",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 9.79,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,3 @@\n   public static FsPermission convert(FsPermissionProto p) {\n-    if (p \u003d\u003d null) return null;\n-    return new FsPermission((short)p.getPerm());\n+    return new FsAclPermission((short)p.getPerm());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission convert(FsPermissionProto p) {\n    return new FsAclPermission((short)p.getPerm());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "48da033901d3471ef176a94104158546152353e9": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/11 9:36 PM",
      "commitName": "48da033901d3471ef176a94104158546152353e9",
      "commitAuthor": "Sanjay Radia",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/12/11 9:36 PM",
          "commitName": "48da033901d3471ef176a94104158546152353e9",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "11/12/11 10:53 AM",
          "commitNameOld": "2740112bb64e1cc8132a1dc450d9e461c2e4729e",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,4 @@\n-  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n-    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n-    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n-      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n-    }\n-    return builder.build();\n+  public static FsPermission convert(FsPermissionProto p) {\n+    if (p \u003d\u003d null) return null;\n+    return new FsPermission((short)p.getPerm());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FsPermission convert(FsPermissionProto p) {\n    if (p \u003d\u003d null) return null;\n    return new FsPermission((short)p.getPerm());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[datanodeInfos-DatanodeInfo[]]",
            "newValue": "[p-FsPermissionProto]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/12/11 9:36 PM",
          "commitName": "48da033901d3471ef176a94104158546152353e9",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "11/12/11 10:53 AM",
          "commitNameOld": "2740112bb64e1cc8132a1dc450d9e461c2e4729e",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,4 @@\n-  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n-    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n-    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n-      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n-    }\n-    return builder.build();\n+  public static FsPermission convert(FsPermissionProto p) {\n+    if (p \u003d\u003d null) return null;\n+    return new FsPermission((short)p.getPerm());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FsPermission convert(FsPermissionProto p) {\n    if (p \u003d\u003d null) return null;\n    return new FsPermission((short)p.getPerm());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "DatanodeInfosProto",
            "newValue": "FsPermission"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/12/11 9:36 PM",
          "commitName": "48da033901d3471ef176a94104158546152353e9",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "11/12/11 10:53 AM",
          "commitNameOld": "2740112bb64e1cc8132a1dc450d9e461c2e4729e",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.45,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,4 @@\n-  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n-    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n-    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n-      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n-    }\n-    return builder.build();\n+  public static FsPermission convert(FsPermissionProto p) {\n+    if (p \u003d\u003d null) return null;\n+    return new FsPermission((short)p.getPerm());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FsPermission convert(FsPermissionProto p) {\n    if (p \u003d\u003d null) return null;\n    return new FsPermission((short)p.getPerm());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "38a19bc293dec6221ae96e304fc6ab660d94e706": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/11 12:02 PM",
      "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
      "commitAuthor": "Jitendra Nath Pandey",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/12/11 12:02 PM",
          "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "09/12/11 11:28 AM",
          "commitNameOld": "66fce20802653ebed492024b01441644e028036a",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private NamespaceInfoProto convert(NamespaceInfo info) {\n-    return NamespaceInfoProto.newBuilder()\n-        .setBlockPoolID(info.getBlockPoolID())\n-        .setBuildVersion(info.getBuildVersion())\n-        .setDistUpgradeVersion(info.getDistributedUpgradeVersion())\n-        .setStorageInfo(PBHelper.convert(info)).build();\n+  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n+    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n+    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n+      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n+    }\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n    }\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/NamenodeProtocolServerSideTranslatorPB.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
            "oldMethodName": "convert",
            "newMethodName": "convert"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/12/11 12:02 PM",
          "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "09/12/11 11:28 AM",
          "commitNameOld": "66fce20802653ebed492024b01441644e028036a",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private NamespaceInfoProto convert(NamespaceInfo info) {\n-    return NamespaceInfoProto.newBuilder()\n-        .setBlockPoolID(info.getBlockPoolID())\n-        .setBuildVersion(info.getBuildVersion())\n-        .setDistUpgradeVersion(info.getDistributedUpgradeVersion())\n-        .setStorageInfo(PBHelper.convert(info)).build();\n+  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n+    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n+    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n+      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n+    }\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n    }\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "NamespaceInfoProto",
            "newValue": "DatanodeInfosProto"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/12/11 12:02 PM",
          "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "09/12/11 11:28 AM",
          "commitNameOld": "66fce20802653ebed492024b01441644e028036a",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private NamespaceInfoProto convert(NamespaceInfo info) {\n-    return NamespaceInfoProto.newBuilder()\n-        .setBlockPoolID(info.getBlockPoolID())\n-        .setBuildVersion(info.getBuildVersion())\n-        .setDistUpgradeVersion(info.getDistributedUpgradeVersion())\n-        .setStorageInfo(PBHelper.convert(info)).build();\n+  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n+    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n+    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n+      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n+    }\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n    }\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/12/11 12:02 PM",
          "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "09/12/11 11:28 AM",
          "commitNameOld": "66fce20802653ebed492024b01441644e028036a",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private NamespaceInfoProto convert(NamespaceInfo info) {\n-    return NamespaceInfoProto.newBuilder()\n-        .setBlockPoolID(info.getBlockPoolID())\n-        .setBuildVersion(info.getBuildVersion())\n-        .setDistUpgradeVersion(info.getDistributedUpgradeVersion())\n-        .setStorageInfo(PBHelper.convert(info)).build();\n+  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n+    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n+    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n+      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n+    }\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n    }\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/12/11 12:02 PM",
          "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "09/12/11 11:28 AM",
          "commitNameOld": "66fce20802653ebed492024b01441644e028036a",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private NamespaceInfoProto convert(NamespaceInfo info) {\n-    return NamespaceInfoProto.newBuilder()\n-        .setBlockPoolID(info.getBlockPoolID())\n-        .setBuildVersion(info.getBuildVersion())\n-        .setDistUpgradeVersion(info.getDistributedUpgradeVersion())\n-        .setStorageInfo(PBHelper.convert(info)).build();\n+  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n+    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n+    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n+      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n+    }\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static DatanodeInfosProto convert(DatanodeInfo[] datanodeInfos) {\n    DatanodeInfosProto.Builder builder \u003d DatanodeInfosProto.newBuilder();\n    for (int i \u003d 0; i \u003c datanodeInfos.length; i++) {\n      builder.addDatanodes(PBHelper.convert(datanodeInfos[i]));\n    }\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[info-NamespaceInfo]",
            "newValue": "[datanodeInfos-DatanodeInfo[]]"
          }
        }
      ]
    },
    "0a713035f2fb1a222291cfdb2cbde906814c2fd9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2618. Implement protobuf service for NamenodeProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1210719 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/11 4:25 PM",
      "commitName": "0a713035f2fb1a222291cfdb2cbde906814c2fd9",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,7 @@\n+  private NamespaceInfoProto convert(NamespaceInfo info) {\n+    return NamespaceInfoProto.newBuilder()\n+        .setBlockPoolID(info.getBlockPoolID())\n+        .setBuildVersion(info.getBuildVersion())\n+        .setDistUpgradeVersion(info.getDistributedUpgradeVersion())\n+        .setStorageInfo(PBHelper.convert(info)).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private NamespaceInfoProto convert(NamespaceInfo info) {\n    return NamespaceInfoProto.newBuilder()\n        .setBlockPoolID(info.getBlockPoolID())\n        .setBuildVersion(info.getBuildVersion())\n        .setDistUpgradeVersion(info.getDistributedUpgradeVersion())\n        .setStorageInfo(PBHelper.convert(info)).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/NamenodeProtocolServerSideTranslatorPB.java"
    }
  }
}