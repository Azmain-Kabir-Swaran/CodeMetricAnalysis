{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "fetchAllLogFiles",
  "functionId": "fetchAllLogFiles___logFiles-String[]__logFilesRegex-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 464,
  "functionEndLine": 489,
  "numCommitsSeen": 109,
  "timeTaken": 4073,
  "changeHistory": [
    "83a2ffec408fc3ebb89ab13ab4788d9f02fae33b",
    "e605d47df05619c6b1c18aca59f709899498da75",
    "429347289c7787364e654334cd84115ae40bb22d",
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
    "34ef1a092bcab369bb845481efffb8c47adef53a"
  ],
  "changeHistoryShort": {
    "83a2ffec408fc3ebb89ab13ab4788d9f02fae33b": "Ymultichange(Yparameterchange,Ybodychange)",
    "e605d47df05619c6b1c18aca59f709899498da75": "Ymultichange(Yparameterchange,Ybodychange)",
    "429347289c7787364e654334cd84115ae40bb22d": "Ybodychange",
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1": "Ybodychange",
    "34ef1a092bcab369bb845481efffb8c47adef53a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "83a2ffec408fc3ebb89ab13ab4788d9f02fae33b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5470. Addedum to differentiate exactly matching of log-files with regex in yarn log CLI. Contributed by Xuan Gong.\n",
      "commitDate": "08/08/16 2:28 PM",
      "commitName": "83a2ffec408fc3ebb89ab13ab4788d9f02fae33b",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5470. Addedum to differentiate exactly matching of log-files with regex in yarn log CLI. Contributed by Xuan Gong.\n",
          "commitDate": "08/08/16 2:28 PM",
          "commitName": "83a2ffec408fc3ebb89ab13ab4788d9f02fae33b",
          "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
          "commitDateOld": "05/08/16 10:55 AM",
          "commitNameOld": "e605d47df05619c6b1c18aca59f709899498da75",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 3.15,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,26 @@\n-  private boolean fetchAllLogFiles(String[] logFiles, boolean useRegex) {\n+  private boolean fetchAllLogFiles(String[] logFiles, String[] logFilesRegex) {\n \n-    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n+    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option\n+    // and PER_CONTAINER_LOG_FILES_REGEX_OPTION\n     // we will assume all logs.\n-    if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n+    if ((logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) \u0026\u0026 (\n+        logFilesRegex \u003d\u003d null || logFilesRegex.length \u003d\u003d 0)) {\n       return true;\n     }\n \n-    List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n-    if (logs.contains(\"ALL\") || logs.contains(\"*\")||\n-        (logs.contains(\".*\") \u0026\u0026 useRegex)) {\n-      return true;\n+    if (logFiles !\u003d null \u0026\u0026 logFiles.length \u003e 0) {\n+      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n+      if (logs.contains(\"ALL\") || logs.contains(\"*\")) {\n+        return true;\n+      }\n+    }\n+\n+    if (logFilesRegex !\u003d null \u0026\u0026 logFilesRegex.length \u003e 0) {\n+      List\u003cString\u003e logsRegex \u003d Arrays.asList(logFilesRegex);\n+      if (logsRegex.contains(\".*\")) {\n+        return true;\n+      }\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean fetchAllLogFiles(String[] logFiles, String[] logFilesRegex) {\n\n    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option\n    // and PER_CONTAINER_LOG_FILES_REGEX_OPTION\n    // we will assume all logs.\n    if ((logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) \u0026\u0026 (\n        logFilesRegex \u003d\u003d null || logFilesRegex.length \u003d\u003d 0)) {\n      return true;\n    }\n\n    if (logFiles !\u003d null \u0026\u0026 logFiles.length \u003e 0) {\n      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n      if (logs.contains(\"ALL\") || logs.contains(\"*\")) {\n        return true;\n      }\n    }\n\n    if (logFilesRegex !\u003d null \u0026\u0026 logFilesRegex.length \u003e 0) {\n      List\u003cString\u003e logsRegex \u003d Arrays.asList(logFilesRegex);\n      if (logsRegex.contains(\".*\")) {\n        return true;\n      }\n    }\n\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[logFiles-String[], useRegex-boolean]",
            "newValue": "[logFiles-String[], logFilesRegex-String[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5470. Addedum to differentiate exactly matching of log-files with regex in yarn log CLI. Contributed by Xuan Gong.\n",
          "commitDate": "08/08/16 2:28 PM",
          "commitName": "83a2ffec408fc3ebb89ab13ab4788d9f02fae33b",
          "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
          "commitDateOld": "05/08/16 10:55 AM",
          "commitNameOld": "e605d47df05619c6b1c18aca59f709899498da75",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 3.15,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,26 @@\n-  private boolean fetchAllLogFiles(String[] logFiles, boolean useRegex) {\n+  private boolean fetchAllLogFiles(String[] logFiles, String[] logFilesRegex) {\n \n-    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n+    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option\n+    // and PER_CONTAINER_LOG_FILES_REGEX_OPTION\n     // we will assume all logs.\n-    if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n+    if ((logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) \u0026\u0026 (\n+        logFilesRegex \u003d\u003d null || logFilesRegex.length \u003d\u003d 0)) {\n       return true;\n     }\n \n-    List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n-    if (logs.contains(\"ALL\") || logs.contains(\"*\")||\n-        (logs.contains(\".*\") \u0026\u0026 useRegex)) {\n-      return true;\n+    if (logFiles !\u003d null \u0026\u0026 logFiles.length \u003e 0) {\n+      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n+      if (logs.contains(\"ALL\") || logs.contains(\"*\")) {\n+        return true;\n+      }\n+    }\n+\n+    if (logFilesRegex !\u003d null \u0026\u0026 logFilesRegex.length \u003e 0) {\n+      List\u003cString\u003e logsRegex \u003d Arrays.asList(logFilesRegex);\n+      if (logsRegex.contains(\".*\")) {\n+        return true;\n+      }\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean fetchAllLogFiles(String[] logFiles, String[] logFilesRegex) {\n\n    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option\n    // and PER_CONTAINER_LOG_FILES_REGEX_OPTION\n    // we will assume all logs.\n    if ((logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) \u0026\u0026 (\n        logFilesRegex \u003d\u003d null || logFilesRegex.length \u003d\u003d 0)) {\n      return true;\n    }\n\n    if (logFiles !\u003d null \u0026\u0026 logFiles.length \u003e 0) {\n      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n      if (logs.contains(\"ALL\") || logs.contains(\"*\")) {\n        return true;\n      }\n    }\n\n    if (logFilesRegex !\u003d null \u0026\u0026 logFilesRegex.length \u003e 0) {\n      List\u003cString\u003e logsRegex \u003d Arrays.asList(logFilesRegex);\n      if (logsRegex.contains(\".*\")) {\n        return true;\n      }\n    }\n\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "e605d47df05619c6b1c18aca59f709899498da75": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5470. Differentiate exactly match with regex in yarn log CLI. Contributed by Xuan Gong.\n",
      "commitDate": "05/08/16 10:55 AM",
      "commitName": "e605d47df05619c6b1c18aca59f709899498da75",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5470. Differentiate exactly match with regex in yarn log CLI. Contributed by Xuan Gong.\n",
          "commitDate": "05/08/16 10:55 AM",
          "commitName": "e605d47df05619c6b1c18aca59f709899498da75",
          "commitAuthor": "Junping Du",
          "commitDateOld": "02/08/16 10:41 AM",
          "commitNameOld": "3818393297c7b337e380e8111a55f2ac4745cb83",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 3.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  private boolean fetchAllLogFiles(String[] logFiles) {\n+  private boolean fetchAllLogFiles(String[] logFiles, boolean useRegex) {\n \n     // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n     // we will assume all logs.\n     if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n       return true;\n     }\n \n     List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n-    if (logs.contains(\"ALL\") || logs.contains(\".*\")) {\n+    if (logs.contains(\"ALL\") || logs.contains(\"*\")||\n+        (logs.contains(\".*\") \u0026\u0026 useRegex)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean fetchAllLogFiles(String[] logFiles, boolean useRegex) {\n\n    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n    // we will assume all logs.\n    if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n      return true;\n    }\n\n    List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n    if (logs.contains(\"ALL\") || logs.contains(\"*\")||\n        (logs.contains(\".*\") \u0026\u0026 useRegex)) {\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[logFiles-String[]]",
            "newValue": "[logFiles-String[], useRegex-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5470. Differentiate exactly match with regex in yarn log CLI. Contributed by Xuan Gong.\n",
          "commitDate": "05/08/16 10:55 AM",
          "commitName": "e605d47df05619c6b1c18aca59f709899498da75",
          "commitAuthor": "Junping Du",
          "commitDateOld": "02/08/16 10:41 AM",
          "commitNameOld": "3818393297c7b337e380e8111a55f2ac4745cb83",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 3.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  private boolean fetchAllLogFiles(String[] logFiles) {\n+  private boolean fetchAllLogFiles(String[] logFiles, boolean useRegex) {\n \n     // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n     // we will assume all logs.\n     if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n       return true;\n     }\n \n     List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n-    if (logs.contains(\"ALL\") || logs.contains(\".*\")) {\n+    if (logs.contains(\"ALL\") || logs.contains(\"*\")||\n+        (logs.contains(\".*\") \u0026\u0026 useRegex)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean fetchAllLogFiles(String[] logFiles, boolean useRegex) {\n\n    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n    // we will assume all logs.\n    if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n      return true;\n    }\n\n    List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n    if (logs.contains(\"ALL\") || logs.contains(\"*\")||\n        (logs.contains(\".*\") \u0026\u0026 useRegex)) {\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "429347289c7787364e654334cd84115ae40bb22d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5363. For AM containers, or for containers of running-apps, \"yarn logs\" incorrectly only (tries to) shows syslog file-type by default. (Contributed by Vinod Kumar Vavilapalli)\n",
      "commitDate": "14/07/16 10:20 AM",
      "commitName": "429347289c7787364e654334cd84115ae40bb22d",
      "commitAuthor": "Xuan",
      "commitDateOld": "13/07/16 2:52 PM",
      "commitNameOld": "d18050522c5c6bd9e32eb9a1be4ffe2288624c40",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.81,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,15 @@\n   private boolean fetchAllLogFiles(String[] logFiles) {\n-    if(logFiles !\u003d null) {\n-      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n-      if(logs.contains(\"ALL\") || logs.contains(\".*\")) {\n-        return true;\n-      }\n+\n+    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n+    // we will assume all logs.\n+    if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n+      return true;\n     }\n+\n+    List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n+    if (logs.contains(\"ALL\") || logs.contains(\".*\")) {\n+      return true;\n+    }\n+\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean fetchAllLogFiles(String[] logFiles) {\n\n    // If no value is specified for the PER_CONTAINER_LOG_FILES_OPTION option,\n    // we will assume all logs.\n    if (logFiles \u003d\u003d null || logFiles.length \u003d\u003d 0) {\n      return true;\n    }\n\n    List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n    if (logs.contains(\"ALL\") || logs.contains(\".*\")) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5089. Improve \"yarn log\" command-line \"logFiles\" option to support\nregex. Contributed by Xuan Gong\n",
      "commitDate": "26/05/16 11:49 PM",
      "commitName": "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
      "commitAuthor": "Xuan",
      "commitDateOld": "18/05/16 10:14 AM",
      "commitNameOld": "ef1757790d89cc72f88f5330761b1c8901c59e94",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 8.57,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   private boolean fetchAllLogFiles(String[] logFiles) {\n     if(logFiles !\u003d null) {\n       List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n-      if(logs.contains(\"ALL\")) {\n+      if(logs.contains(\"ALL\") || logs.contains(\".*\")) {\n         return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean fetchAllLogFiles(String[] logFiles) {\n    if(logFiles !\u003d null) {\n      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n      if(logs.contains(\"ALL\") || logs.contains(\".*\")) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "34ef1a092bcab369bb845481efffb8c47adef53a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4149. yarn logs -am should provide an option to fetch all the log\nfiles. Contributed by Varun Vasudev\n",
      "commitDate": "15/09/15 2:36 PM",
      "commitName": "34ef1a092bcab369bb845481efffb8c47adef53a",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,9 @@\n+  private boolean fetchAllLogFiles(String[] logFiles) {\n+    if(logFiles !\u003d null) {\n+      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n+      if(logs.contains(\"ALL\")) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean fetchAllLogFiles(String[] logFiles) {\n    if(logFiles !\u003d null) {\n      List\u003cString\u003e logs \u003d Arrays.asList(logFiles);\n      if(logs.contains(\"ALL\")) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}