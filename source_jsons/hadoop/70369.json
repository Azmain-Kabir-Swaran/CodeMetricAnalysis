{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "isStickyBitCheckViolated",
  "functionId": "isStickyBitCheckViolated___metaData-FileMetadata__parentMetadata-FileMetadata",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 2583,
  "functionEndLine": 2614,
  "numCommitsSeen": 66,
  "timeTaken": 1872,
  "changeHistory": [
    "45d9568aaaf532a6da11bd7c1844ff81bf66bab1",
    "a530e7ab3b3f5bd71143a91266b46787962ac532"
  ],
  "changeHistoryShort": {
    "45d9568aaaf532a6da11bd7c1844ff81bf66bab1": "Ybodychange",
    "a530e7ab3b3f5bd71143a91266b46787962ac532": "Yintroduced"
  },
  "changeHistoryDetails": {
    "45d9568aaaf532a6da11bd7c1844ff81bf66bab1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15547/ WASB: improve listStatus performance.\nContributed by Thomas Marquardt.\n\n(cherry picked from commit 749fff577ed9afb4ef8a54b8948f74be083cc620)\n",
      "commitDate": "19/07/18 12:31 PM",
      "commitName": "45d9568aaaf532a6da11bd7c1844ff81bf66bab1",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 21.58,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n    private boolean isStickyBitCheckViolated(FileMetadata metaData,\n     FileMetadata parentMetadata) throws IOException {\n \n     // In case stickybit check should not be performed,\n     // return value should indicate stickybit check is not violated.\n     if (!this.azureAuthorization) {\n       return false;\n     }\n \n     // This should never happen when the sticky bit check is invoked.\n     if (parentMetadata \u003d\u003d null) {\n       throw new FileNotFoundException(\n         String.format(\"Parent metadata for \u0027%s\u0027 not found!\", metaData.getKey()));\n     }\n \n     // stickybit is not set on parent and hence cannot be violated\n-    if (!parentMetadata.getPermissionStatus().getPermission().getStickyBit()) {\n+    if (!parentMetadata.getPermission().getStickyBit()) {\n       return false;\n     }\n \n     String currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n-    String parentDirectoryOwner \u003d parentMetadata.getPermissionStatus().getUserName();\n-    String currentFileOwner \u003d metaData.getPermissionStatus().getUserName();\n+    String parentDirectoryOwner \u003d parentMetadata.getOwner();\n+    String currentFileOwner \u003d metaData.getOwner();\n \n     // Files/Folders with no owner set will not pass stickybit check\n     if ((parentDirectoryOwner.equalsIgnoreCase(currentUser))\n       || currentFileOwner.equalsIgnoreCase(currentUser)) {\n \n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "   private boolean isStickyBitCheckViolated(FileMetadata metaData,\n    FileMetadata parentMetadata) throws IOException {\n\n    // In case stickybit check should not be performed,\n    // return value should indicate stickybit check is not violated.\n    if (!this.azureAuthorization) {\n      return false;\n    }\n\n    // This should never happen when the sticky bit check is invoked.\n    if (parentMetadata \u003d\u003d null) {\n      throw new FileNotFoundException(\n        String.format(\"Parent metadata for \u0027%s\u0027 not found!\", metaData.getKey()));\n    }\n\n    // stickybit is not set on parent and hence cannot be violated\n    if (!parentMetadata.getPermission().getStickyBit()) {\n      return false;\n    }\n\n    String currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    String parentDirectoryOwner \u003d parentMetadata.getOwner();\n    String currentFileOwner \u003d metaData.getOwner();\n\n    // Files/Folders with no owner set will not pass stickybit check\n    if ((parentDirectoryOwner.equalsIgnoreCase(currentUser))\n      || currentFileOwner.equalsIgnoreCase(currentUser)) {\n\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "a530e7ab3b3f5bd71143a91266b46787962ac532": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14768. Honoring sticky bit during Deletion when authorization is enabled in WASB\nContributed by Varada Hemeswari\n",
      "commitDate": "28/09/17 11:52 AM",
      "commitName": "a530e7ab3b3f5bd71143a91266b46787962ac532",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,32 @@\n+   private boolean isStickyBitCheckViolated(FileMetadata metaData,\n+    FileMetadata parentMetadata) throws IOException {\n+\n+    // In case stickybit check should not be performed,\n+    // return value should indicate stickybit check is not violated.\n+    if (!this.azureAuthorization) {\n+      return false;\n+    }\n+\n+    // This should never happen when the sticky bit check is invoked.\n+    if (parentMetadata \u003d\u003d null) {\n+      throw new FileNotFoundException(\n+        String.format(\"Parent metadata for \u0027%s\u0027 not found!\", metaData.getKey()));\n+    }\n+\n+    // stickybit is not set on parent and hence cannot be violated\n+    if (!parentMetadata.getPermissionStatus().getPermission().getStickyBit()) {\n+      return false;\n+    }\n+\n+    String currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n+    String parentDirectoryOwner \u003d parentMetadata.getPermissionStatus().getUserName();\n+    String currentFileOwner \u003d metaData.getPermissionStatus().getUserName();\n+\n+    // Files/Folders with no owner set will not pass stickybit check\n+    if ((parentDirectoryOwner.equalsIgnoreCase(currentUser))\n+      || currentFileOwner.equalsIgnoreCase(currentUser)) {\n+\n+      return false;\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "   private boolean isStickyBitCheckViolated(FileMetadata metaData,\n    FileMetadata parentMetadata) throws IOException {\n\n    // In case stickybit check should not be performed,\n    // return value should indicate stickybit check is not violated.\n    if (!this.azureAuthorization) {\n      return false;\n    }\n\n    // This should never happen when the sticky bit check is invoked.\n    if (parentMetadata \u003d\u003d null) {\n      throw new FileNotFoundException(\n        String.format(\"Parent metadata for \u0027%s\u0027 not found!\", metaData.getKey()));\n    }\n\n    // stickybit is not set on parent and hence cannot be violated\n    if (!parentMetadata.getPermissionStatus().getPermission().getStickyBit()) {\n      return false;\n    }\n\n    String currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    String parentDirectoryOwner \u003d parentMetadata.getPermissionStatus().getUserName();\n    String currentFileOwner \u003d metaData.getPermissionStatus().getUserName();\n\n    // Files/Folders with no owner set will not pass stickybit check\n    if ((parentDirectoryOwner.equalsIgnoreCase(currentUser))\n      || currentFileOwner.equalsIgnoreCase(currentUser)) {\n\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}