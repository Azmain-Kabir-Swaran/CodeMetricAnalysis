{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerExecutor.java",
  "functionName": "getRunCommandForOther",
  "functionId": "getRunCommandForOther___command-String__config-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
  "functionStartLine": 688,
  "functionEndLine": 711,
  "numCommitsSeen": 87,
  "timeTaken": 2281,
  "changeHistory": [
    "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
    "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9"
  ],
  "changeHistoryShort": {
    "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0": "Ymultichange(Yparameterchange,Ybodychange)",
    "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5383. Fix findbugs and checkstyle issues in ContainerExecutor. (Vrushali C via Varun Saxena)\n",
      "commitDate": "15/07/16 10:47 AM",
      "commitName": "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5383. Fix findbugs and checkstyle issues in ContainerExecutor. (Vrushali C via Varun Saxena)\n",
          "commitDate": "15/07/16 10:47 AM",
          "commitName": "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "14/07/16 6:58 AM",
          "commitNameOld": "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n   protected String[] getRunCommandForOther(String command,\n-      Configuration conf) {\n+      Configuration config) {\n     List\u003cString\u003e retCommand \u003d new ArrayList\u003c\u003e();\n     boolean containerSchedPriorityIsSet \u003d false;\n     int containerSchedPriorityAdjustment \u003d\n         YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n \n-    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n+    if (config.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n         null) {\n       containerSchedPriorityIsSet \u003d true;\n-      containerSchedPriorityAdjustment \u003d conf\n+      containerSchedPriorityAdjustment \u003d config\n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n           YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n \n     if (containerSchedPriorityIsSet) {\n       retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n           Integer.toString(containerSchedPriorityAdjustment)));\n     }\n \n     retCommand.addAll(Arrays.asList(\"bash\", command));\n \n     return retCommand.toArray(new String[retCommand.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String[] getRunCommandForOther(String command,\n      Configuration config) {\n    List\u003cString\u003e retCommand \u003d new ArrayList\u003c\u003e();\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d\n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (config.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d config\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n\n    if (containerSchedPriorityIsSet) {\n      retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n          Integer.toString(containerSchedPriorityAdjustment)));\n    }\n\n    retCommand.addAll(Arrays.asList(\"bash\", command));\n\n    return retCommand.toArray(new String[retCommand.size()]);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[command-String, conf-Configuration]",
            "newValue": "[command-String, config-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5383. Fix findbugs and checkstyle issues in ContainerExecutor. (Vrushali C via Varun Saxena)\n",
          "commitDate": "15/07/16 10:47 AM",
          "commitName": "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "14/07/16 6:58 AM",
          "commitNameOld": "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n   protected String[] getRunCommandForOther(String command,\n-      Configuration conf) {\n+      Configuration config) {\n     List\u003cString\u003e retCommand \u003d new ArrayList\u003c\u003e();\n     boolean containerSchedPriorityIsSet \u003d false;\n     int containerSchedPriorityAdjustment \u003d\n         YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n \n-    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n+    if (config.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n         null) {\n       containerSchedPriorityIsSet \u003d true;\n-      containerSchedPriorityAdjustment \u003d conf\n+      containerSchedPriorityAdjustment \u003d config\n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n           YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n \n     if (containerSchedPriorityIsSet) {\n       retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n           Integer.toString(containerSchedPriorityAdjustment)));\n     }\n \n     retCommand.addAll(Arrays.asList(\"bash\", command));\n \n     return retCommand.toArray(new String[retCommand.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String[] getRunCommandForOther(String command,\n      Configuration config) {\n    List\u003cString\u003e retCommand \u003d new ArrayList\u003c\u003e();\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d\n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (config.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d config\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n\n    if (containerSchedPriorityIsSet) {\n      retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n          Integer.toString(containerSchedPriorityAdjustment)));\n    }\n\n    retCommand.addAll(Arrays.asList(\"bash\", command));\n\n    return retCommand.toArray(new String[retCommand.size()]);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5303. Clean up ContainerExecutor JavaDoc. Contributed by Daniel Templeton.\n",
      "commitDate": "14/07/16 6:58 AM",
      "commitName": "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,24 @@\n+  protected String[] getRunCommandForOther(String command,\n+      Configuration conf) {\n+    List\u003cString\u003e retCommand \u003d new ArrayList\u003c\u003e();\n+    boolean containerSchedPriorityIsSet \u003d false;\n+    int containerSchedPriorityAdjustment \u003d\n+        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n+\n+    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n+        null) {\n+      containerSchedPriorityIsSet \u003d true;\n+      containerSchedPriorityAdjustment \u003d conf\n+          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n+          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n+    }\n+\n+    if (containerSchedPriorityIsSet) {\n+      retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n+          Integer.toString(containerSchedPriorityAdjustment)));\n+    }\n+\n+    retCommand.addAll(Arrays.asList(\"bash\", command));\n+\n+    return retCommand.toArray(new String[retCommand.size()]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected String[] getRunCommandForOther(String command,\n      Configuration conf) {\n    List\u003cString\u003e retCommand \u003d new ArrayList\u003c\u003e();\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d\n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d\n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n\n    if (containerSchedPriorityIsSet) {\n      retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n          Integer.toString(containerSchedPriorityAdjustment)));\n    }\n\n    retCommand.addAll(Arrays.asList(\"bash\", command));\n\n    return retCommand.toArray(new String[retCommand.size()]);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java"
    }
  }
}