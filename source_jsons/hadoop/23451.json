{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HSAdmin.java",
  "functionName": "printHelp",
  "functionId": "printHelp___cmd-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/client/HSAdmin.java",
  "functionStartLine": 105,
  "functionEndLine": 165,
  "numCommitsSeen": 6,
  "timeTaken": 885,
  "changeHistory": [
    "8bb035509ea195ec03b8295a7abd11ce675a4d85",
    "8fa3ebd13451a243510eed5c2f3dd43cdf605a77",
    "a42e459b9eba8c79652036e44dceb34d717b665e",
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b"
  ],
  "changeHistoryShort": {
    "8bb035509ea195ec03b8295a7abd11ce675a4d85": "Ybodychange",
    "8fa3ebd13451a243510eed5c2f3dd43cdf605a77": "Ybodychange",
    "a42e459b9eba8c79652036e44dceb34d717b665e": "Ybodychange",
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8bb035509ea195ec03b8295a7abd11ce675a4d85": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5411. Refresh size of loaded job cache on history server. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508220 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/13 3:33 PM",
      "commitName": "8bb035509ea195ec03b8295a7abd11ce675a4d85",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "25/07/13 2:27 PM",
      "commitNameOld": "8fa3ebd13451a243510eed5c2f3dd43cdf605a77",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 4.05,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,61 @@\n   private static void printHelp(String cmd) {\n     String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n         + \"The full syntax is: \\n\\n\"\n         + \"mapred hsadmin\"\n         + \" [-refreshUserToGroupsMappings]\"\n         + \" [-refreshSuperUserGroupsConfiguration]\"\n         + \" [-refreshAdminAcls]\"\n+        + \" [-refreshLoadedJobCache]\"\n         + \" [-refreshLogRetentionSettings]\"\n         + \" [-refreshJobRetentionSettings]\"\n         + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n \n     String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n \n     String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n \n     String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n \n+    String refreshLoadedJobCache \u003d \"-refreshLoadedJobCache: Refresh loaded job cache of Job history server\\n\";\n+\n     String refreshJobRetentionSettings \u003d \"-refreshJobRetentionSettings:\" + \n         \"Refresh job history period,job cleaner settings\\n\";\n \n     String refreshLogRetentionSettings \u003d \"-refreshLogRetentionSettings:\" + \n         \"Refresh log retention period and log retention check interval\\n\";\n     \n-\n     String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n \n     String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n         + \"\\t\\tis specified.\\n\";\n \n     if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n       System.out.println(refreshUserToGroupsMappings);\n     } else if (\"help\".equals(cmd)) {\n       System.out.println(help);\n     } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.out.println(refreshSuperUserGroupsConfiguration);\n     } else if (\"refreshAdminAcls\".equals(cmd)) {\n       System.out.println(refreshAdminAcls);\n+    } else if (\"refreshLoadedJobCache\".equals(cmd)) {\n+      System.out.println(refreshLoadedJobCache);\n     } else if (\"refreshJobRetentionSettings\".equals(cmd)) {\n       System.out.println(refreshJobRetentionSettings);\n     } else if (\"refreshLogRetentionSettings\".equals(cmd)) {\n       System.out.println(refreshLogRetentionSettings);\n     } else if (\"getGroups\".equals(cmd)) {\n       System.out.println(getGroups);\n     } else {\n       System.out.println(summary);\n       System.out.println(refreshUserToGroupsMappings);\n       System.out.println(refreshSuperUserGroupsConfiguration);\n       System.out.println(refreshAdminAcls);\n+      System.out.println(refreshLoadedJobCache);\n       System.out.println(refreshJobRetentionSettings);\n       System.out.println(refreshLogRetentionSettings);\n       System.out.println(getGroups);\n       System.out.println(help);\n       System.out.println();\n       ToolRunner.printGenericCommandUsage(System.out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n        + \"The full syntax is: \\n\\n\"\n        + \"mapred hsadmin\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-refreshLoadedJobCache]\"\n        + \" [-refreshLogRetentionSettings]\"\n        + \" [-refreshJobRetentionSettings]\"\n        + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n\n    String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n\n    String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n\n    String refreshLoadedJobCache \u003d \"-refreshLoadedJobCache: Refresh loaded job cache of Job history server\\n\";\n\n    String refreshJobRetentionSettings \u003d \"-refreshJobRetentionSettings:\" + \n        \"Refresh job history period,job cleaner settings\\n\";\n\n    String refreshLogRetentionSettings \u003d \"-refreshLogRetentionSettings:\" + \n        \"Refresh log retention period and log retention check interval\\n\";\n    \n    String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n        + \"\\t\\tis specified.\\n\";\n\n    if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshLoadedJobCache\".equals(cmd)) {\n      System.out.println(refreshLoadedJobCache);\n    } else if (\"refreshJobRetentionSettings\".equals(cmd)) {\n      System.out.println(refreshJobRetentionSettings);\n    } else if (\"refreshLogRetentionSettings\".equals(cmd)) {\n      System.out.println(refreshLogRetentionSettings);\n    } else if (\"getGroups\".equals(cmd)) {\n      System.out.println(getGroups);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshLoadedJobCache);\n      System.out.println(refreshJobRetentionSettings);\n      System.out.println(refreshLogRetentionSettings);\n      System.out.println(getGroups);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/client/HSAdmin.java",
      "extendedDetails": {}
    },
    "8fa3ebd13451a243510eed5c2f3dd43cdf605a77": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5386. Ability to refresh history server job retention and job cleaner settings. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507135 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/13 2:27 PM",
      "commitName": "8fa3ebd13451a243510eed5c2f3dd43cdf605a77",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "23/07/13 12:20 PM",
      "commitNameOld": "a42e459b9eba8c79652036e44dceb34d717b665e",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 2.09,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,56 @@\n   private static void printHelp(String cmd) {\n     String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n         + \"The full syntax is: \\n\\n\"\n         + \"mapred hsadmin\"\n         + \" [-refreshUserToGroupsMappings]\"\n         + \" [-refreshSuperUserGroupsConfiguration]\"\n         + \" [-refreshAdminAcls]\"\n+        + \" [-refreshLogRetentionSettings]\"\n+        + \" [-refreshJobRetentionSettings]\"\n         + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n \n     String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n \n     String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n \n     String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n \n-    String refreshLogRetentionSettings \u003d \"-refreshLogRetentionSettings: Refresh \u0027log retention time\u0027 and \u0027log retention check interval\u0027 \\n\";\n+    String refreshJobRetentionSettings \u003d \"-refreshJobRetentionSettings:\" + \n+        \"Refresh job history period,job cleaner settings\\n\";\n+\n+    String refreshLogRetentionSettings \u003d \"-refreshLogRetentionSettings:\" + \n+        \"Refresh log retention period and log retention check interval\\n\";\n     \n+\n     String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n \n     String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n         + \"\\t\\tis specified.\\n\";\n \n     if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n       System.out.println(refreshUserToGroupsMappings);\n     } else if (\"help\".equals(cmd)) {\n       System.out.println(help);\n     } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.out.println(refreshSuperUserGroupsConfiguration);\n     } else if (\"refreshAdminAcls\".equals(cmd)) {\n       System.out.println(refreshAdminAcls);\n+    } else if (\"refreshJobRetentionSettings\".equals(cmd)) {\n+      System.out.println(refreshJobRetentionSettings);\n     } else if (\"refreshLogRetentionSettings\".equals(cmd)) {\n       System.out.println(refreshLogRetentionSettings);\n     } else if (\"getGroups\".equals(cmd)) {\n       System.out.println(getGroups);\n     } else {\n       System.out.println(summary);\n       System.out.println(refreshUserToGroupsMappings);\n       System.out.println(refreshSuperUserGroupsConfiguration);\n       System.out.println(refreshAdminAcls);\n+      System.out.println(refreshJobRetentionSettings);\n       System.out.println(refreshLogRetentionSettings);\n       System.out.println(getGroups);\n       System.out.println(help);\n       System.out.println();\n       ToolRunner.printGenericCommandUsage(System.out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n        + \"The full syntax is: \\n\\n\"\n        + \"mapred hsadmin\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-refreshLogRetentionSettings]\"\n        + \" [-refreshJobRetentionSettings]\"\n        + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n\n    String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n\n    String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n\n    String refreshJobRetentionSettings \u003d \"-refreshJobRetentionSettings:\" + \n        \"Refresh job history period,job cleaner settings\\n\";\n\n    String refreshLogRetentionSettings \u003d \"-refreshLogRetentionSettings:\" + \n        \"Refresh log retention period and log retention check interval\\n\";\n    \n\n    String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n        + \"\\t\\tis specified.\\n\";\n\n    if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshJobRetentionSettings\".equals(cmd)) {\n      System.out.println(refreshJobRetentionSettings);\n    } else if (\"refreshLogRetentionSettings\".equals(cmd)) {\n      System.out.println(refreshLogRetentionSettings);\n    } else if (\"getGroups\".equals(cmd)) {\n      System.out.println(getGroups);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshJobRetentionSettings);\n      System.out.println(refreshLogRetentionSettings);\n      System.out.println(getGroups);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/client/HSAdmin.java",
      "extendedDetails": {}
    },
    "a42e459b9eba8c79652036e44dceb34d717b665e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5356. Ability to refresh aggregated log retention period and check interval. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506226 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 12:20 PM",
      "commitName": "a42e459b9eba8c79652036e44dceb34d717b665e",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "18/07/13 1:41 PM",
      "commitNameOld": "cc536fe4da7b462d40f36ca7fc5109d297b08a2b",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 4.94,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,46 @@\n   private static void printHelp(String cmd) {\n     String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n         + \"The full syntax is: \\n\\n\"\n         + \"mapred hsadmin\"\n         + \" [-refreshUserToGroupsMappings]\"\n         + \" [-refreshSuperUserGroupsConfiguration]\"\n         + \" [-refreshAdminAcls]\"\n         + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n \n     String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n \n     String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n \n     String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n \n+    String refreshLogRetentionSettings \u003d \"-refreshLogRetentionSettings: Refresh \u0027log retention time\u0027 and \u0027log retention check interval\u0027 \\n\";\n+    \n     String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n \n     String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n         + \"\\t\\tis specified.\\n\";\n \n     if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n       System.out.println(refreshUserToGroupsMappings);\n     } else if (\"help\".equals(cmd)) {\n       System.out.println(help);\n     } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.out.println(refreshSuperUserGroupsConfiguration);\n     } else if (\"refreshAdminAcls\".equals(cmd)) {\n       System.out.println(refreshAdminAcls);\n+    } else if (\"refreshLogRetentionSettings\".equals(cmd)) {\n+      System.out.println(refreshLogRetentionSettings);\n     } else if (\"getGroups\".equals(cmd)) {\n       System.out.println(getGroups);\n     } else {\n       System.out.println(summary);\n       System.out.println(refreshUserToGroupsMappings);\n       System.out.println(refreshSuperUserGroupsConfiguration);\n       System.out.println(refreshAdminAcls);\n+      System.out.println(refreshLogRetentionSettings);\n       System.out.println(getGroups);\n       System.out.println(help);\n       System.out.println();\n       ToolRunner.printGenericCommandUsage(System.out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n        + \"The full syntax is: \\n\\n\"\n        + \"mapred hsadmin\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n\n    String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n\n    String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n\n    String refreshLogRetentionSettings \u003d \"-refreshLogRetentionSettings: Refresh \u0027log retention time\u0027 and \u0027log retention check interval\u0027 \\n\";\n    \n    String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n        + \"\\t\\tis specified.\\n\";\n\n    if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshLogRetentionSettings\".equals(cmd)) {\n      System.out.println(refreshLogRetentionSettings);\n    } else if (\"getGroups\".equals(cmd)) {\n      System.out.println(getGroups);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshLogRetentionSettings);\n      System.out.println(getGroups);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/client/HSAdmin.java",
      "extendedDetails": {}
    },
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5265. History server admin service to refresh user and superuser group mappings. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504645 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/13 1:41 PM",
      "commitName": "cc536fe4da7b462d40f36ca7fc5109d297b08a2b",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,41 @@\n+  private static void printHelp(String cmd) {\n+    String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n+        + \"The full syntax is: \\n\\n\"\n+        + \"mapred hsadmin\"\n+        + \" [-refreshUserToGroupsMappings]\"\n+        + \" [-refreshSuperUserGroupsConfiguration]\"\n+        + \" [-refreshAdminAcls]\"\n+        + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n+\n+    String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n+\n+    String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n+\n+    String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n+\n+    String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n+\n+    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n+        + \"\\t\\tis specified.\\n\";\n+\n+    if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n+      System.out.println(refreshUserToGroupsMappings);\n+    } else if (\"help\".equals(cmd)) {\n+      System.out.println(help);\n+    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n+      System.out.println(refreshSuperUserGroupsConfiguration);\n+    } else if (\"refreshAdminAcls\".equals(cmd)) {\n+      System.out.println(refreshAdminAcls);\n+    } else if (\"getGroups\".equals(cmd)) {\n+      System.out.println(getGroups);\n+    } else {\n+      System.out.println(summary);\n+      System.out.println(refreshUserToGroupsMappings);\n+      System.out.println(refreshSuperUserGroupsConfiguration);\n+      System.out.println(refreshAdminAcls);\n+      System.out.println(getGroups);\n+      System.out.println(help);\n+      System.out.println();\n+      ToolRunner.printGenericCommandUsage(System.out);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"hsadmin is the command to execute Job History server administrative commands.\\n\"\n        + \"The full syntax is: \\n\\n\"\n        + \"mapred hsadmin\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-getGroups [username]]\" + \" [-help [cmd]]\\n\";\n\n    String refreshUserToGroupsMappings \u003d \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n\n    String refreshSuperUserGroupsConfiguration \u003d \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d \"-refreshAdminAcls: Refresh acls for administration of Job history server\\n\";\n\n    String getGroups \u003d \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\"\n        + \"\\t\\tis specified.\\n\";\n\n    if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"getGroups\".equals(cmd)) {\n      System.out.println(getGroups);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(getGroups);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/client/HSAdmin.java"
    }
  }
}