{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LinuxContainerExecutor.java",
  "functionName": "setConf",
  "functionId": "setConf___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
  "functionStartLine": 193,
  "functionEndLine": 219,
  "numCommitsSeen": 95,
  "timeTaken": 9284,
  "changeHistory": [
    "f7df55f4a89ed2d75d874b32209647ef4f448875",
    "95694b70cd38dfc591dc4f0e9413809cf3c91dbe",
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
    "8d5929308998869933982bd425102c3a9488ee8f",
    "7e75226e68715c3eca9d346c8eaf2f265aa70d23",
    "80c5bffc4b6bd2aa54ed8d49a32fd2c2cb77bfcc",
    "5f2c518c95b2186b784877a5f41c7b71f8abc2f6",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": "Ybodychange",
    "95694b70cd38dfc591dc4f0e9413809cf3c91dbe": "Ybodychange",
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4": "Ybodychange",
    "8d5929308998869933982bd425102c3a9488ee8f": "Ybodychange",
    "7e75226e68715c3eca9d346c8eaf2f265aa70d23": "Ybodychange",
    "80c5bffc4b6bd2aa54ed8d49a32fd2c2cb77bfcc": "Ybodychange",
    "5f2c518c95b2186b784877a5f41c7b71f8abc2f6": "Ybodychange",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9602. Use logger format in Container Executor. Contributed by Abhishek Modi.\n",
      "commitDate": "11/06/19 9:59 AM",
      "commitName": "f7df55f4a89ed2d75d874b32209647ef4f448875",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 87.73,
      "commitsBetweenForRepo": 542,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n \n     resourcesHandler \u003d getResourcesHandler(conf);\n \n     containerSchedPriorityIsSet \u003d false;\n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n         !\u003d null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf\n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n               YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n     nonsecureLocalUser \u003d conf.get(\n         YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n     nonsecureLocalUserPattern \u003d Pattern.compile(\n         conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n             YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n     containerLimitUsers \u003d conf.getBoolean(\n         YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n     if (!containerLimitUsers) {\n-      LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n-          \": impersonation without authentication enabled\");\n+      LOG.warn(\"{}: impersonation without authentication enabled\",\n+          YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n\n    resourcesHandler \u003d getResourcesHandler(conf);\n\n    containerSchedPriorityIsSet \u003d false;\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n        !\u003d null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n              YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n    nonsecureLocalUser \u003d conf.get(\n        YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n    nonsecureLocalUserPattern \u003d Pattern.compile(\n        conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n    containerLimitUsers \u003d conf.getBoolean(\n        YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n    if (!containerLimitUsers) {\n      LOG.warn(\"{}: impersonation without authentication enabled\",\n          YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "95694b70cd38dfc591dc4f0e9413809cf3c91dbe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5444. Fix failing unit tests in TestLinuxContainerExecutorWithMocks. Contributed by Yufei Gu.\n",
      "commitDate": "01/08/16 3:38 AM",
      "commitName": "95694b70cd38dfc591dc4f0e9413809cf3c91dbe",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "14/07/16 6:58 AM",
      "commitNameOld": "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 17.86,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n \n     resourcesHandler \u003d getResourcesHandler(conf);\n \n+    containerSchedPriorityIsSet \u003d false;\n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n         !\u003d null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf\n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n               YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n     nonsecureLocalUser \u003d conf.get(\n         YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n     nonsecureLocalUserPattern \u003d Pattern.compile(\n         conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n             YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n     containerLimitUsers \u003d conf.getBoolean(\n         YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n     if (!containerLimitUsers) {\n       LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n           \": impersonation without authentication enabled\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n\n    resourcesHandler \u003d getResourcesHandler(conf);\n\n    containerSchedPriorityIsSet \u003d false;\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n        !\u003d null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n              YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n    nonsecureLocalUser \u003d conf.get(\n        YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n    nonsecureLocalUserPattern \u003d Pattern.compile(\n        conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n    containerLimitUsers \u003d conf.getBoolean(\n        YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n    if (!containerLimitUsers) {\n      LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n          \": impersonation without authentication enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3542. Refactored existing CPU cgroups support to use the newer and integrated ResourceHandler mechanism, and also deprecated the old LCEResourceHandler inteface hierarchy. Contributed by Varun Vasudev.\n",
      "commitDate": "25/01/16 4:19 PM",
      "commitName": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "22/01/16 1:13 AM",
      "commitNameOld": "b41a7e89d1eb8650975ac7092532ed9563ac60f2",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 3.63,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,26 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n \n-    resourcesHandler \u003d ReflectionUtils.newInstance(\n-        conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n-            DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n-    resourcesHandler.setConf(conf);\n+    resourcesHandler \u003d getResourcesHandler(conf);\n \n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n         !\u003d null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf\n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n               YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n     nonsecureLocalUser \u003d conf.get(\n         YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n     nonsecureLocalUserPattern \u003d Pattern.compile(\n         conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n             YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n     containerLimitUsers \u003d conf.getBoolean(\n         YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n     if (!containerLimitUsers) {\n       LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n           \": impersonation without authentication enabled\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n\n    resourcesHandler \u003d getResourcesHandler(conf);\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n        !\u003d null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n              YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n    nonsecureLocalUser \u003d conf.get(\n        YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n    nonsecureLocalUserPattern \u003d Pattern.compile(\n        conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n    containerLimitUsers \u003d conf.getBoolean(\n        YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n    if (!containerLimitUsers) {\n      LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n          \": impersonation without authentication enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "8d5929308998869933982bd425102c3a9488ee8f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4253. Standardize on using PrivilegedOperationExecutor for all invocations of container-executor in LinuxContainerExecutor. Contributed by Sidharta Seethana.\n",
      "commitDate": "14/10/15 2:28 AM",
      "commitName": "8d5929308998869933982bd425102c3a9488ee8f",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "11/09/15 2:07 AM",
      "commitNameOld": "486d5cb803efec7b4db445ee65a3df83392940a3",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 33.01,
      "commitsBetweenForRepo": 251,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n-    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n-    \n+\n     resourcesHandler \u003d ReflectionUtils.newInstance(\n-            conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n-              DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n+        conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n+            DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n     resourcesHandler.setConf(conf);\n \n-    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d null) {\n-     containerSchedPriorityIsSet \u003d true;\n-     containerSchedPriorityAdjustment \u003d conf\n-         .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n-             YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n+    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n+        !\u003d null) {\n+      containerSchedPriorityIsSet \u003d true;\n+      containerSchedPriorityAdjustment \u003d conf\n+          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n+              YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n     nonsecureLocalUser \u003d conf.get(\n         YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n     nonsecureLocalUserPattern \u003d Pattern.compile(\n         conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n-            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));        \n+            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n     containerLimitUsers \u003d conf.getBoolean(\n-      YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n-      YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n+        YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n+        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n     if (!containerLimitUsers) {\n       LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n           \": impersonation without authentication enabled\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n\n    resourcesHandler \u003d ReflectionUtils.newInstance(\n        conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n            DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n    resourcesHandler.setConf(conf);\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY)\n        !\u003d null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY,\n              YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n    nonsecureLocalUser \u003d conf.get(\n        YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n    nonsecureLocalUserPattern \u003d Pattern.compile(\n        conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));\n    containerLimitUsers \u003d conf.getBoolean(\n        YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n    if (!containerLimitUsers) {\n      LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n          \": impersonation without authentication enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "7e75226e68715c3eca9d346c8eaf2f265aa70d23": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2424. LCE should support non-cgroups, non-secure mode (Chris Douglas via aw)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619421 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/14 7:57 AM",
      "commitName": "7e75226e68715c3eca9d346c8eaf2f265aa70d23",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "12/08/14 3:56 AM",
      "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 9.17,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,29 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n     containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n     \n     resourcesHandler \u003d ReflectionUtils.newInstance(\n             conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n               DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n     resourcesHandler.setConf(conf);\n \n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf\n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n           YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n     nonsecureLocalUser \u003d conf.get(\n         YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n         YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n     nonsecureLocalUserPattern \u003d Pattern.compile(\n         conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n             YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));        \n+    containerLimitUsers \u003d conf.getBoolean(\n+      YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n+      YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n+    if (!containerLimitUsers) {\n+      LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n+          \": impersonation without authentication enabled\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n    \n    resourcesHandler \u003d ReflectionUtils.newInstance(\n            conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n              DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n    resourcesHandler.setConf(conf);\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n    nonsecureLocalUser \u003d conf.get(\n        YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n    nonsecureLocalUserPattern \u003d Pattern.compile(\n        conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));        \n    containerLimitUsers \u003d conf.getBoolean(\n      YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS,\n      YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LIMIT_USERS);\n    if (!containerLimitUsers) {\n      LOG.warn(YarnConfiguration.NM_NONSECURE_MODE_LIMIT_USERS +\n          \": impersonation without authentication enabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "80c5bffc4b6bd2aa54ed8d49a32fd2c2cb77bfcc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1253. Changes to LinuxContainerExecutor to run containers as a single dedicated user in non-secure mode. (rvs via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529325 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/10/13 2:59 PM",
      "commitName": "80c5bffc4b6bd2aa54ed8d49a32fd2c2cb77bfcc",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/07/13 5:28 PM",
      "commitNameOld": "7a29bccd7aaf2eb33adac937379ba6be43a1031d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 77.9,
      "commitsBetweenForRepo": 467,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n     containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n     \n     resourcesHandler \u003d ReflectionUtils.newInstance(\n             conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n               DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n     resourcesHandler.setConf(conf);\n \n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf\n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n           YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n+    nonsecureLocalUser \u003d conf.get(\n+        YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n+        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n+    nonsecureLocalUserPattern \u003d Pattern.compile(\n+        conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n+            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));        \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n    \n    resourcesHandler \u003d ReflectionUtils.newInstance(\n            conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n              DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n    resourcesHandler.setConf(conf);\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n    nonsecureLocalUser \u003d conf.get(\n        YarnConfiguration.NM_NONSECURE_MODE_LOCAL_USER_KEY,\n        YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER);\n    nonsecureLocalUserPattern \u003d Pattern.compile(\n        conf.get(YarnConfiguration.NM_NONSECURE_MODE_USER_PATTERN_KEY,\n            YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_USER_PATTERN));        \n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "5f2c518c95b2186b784877a5f41c7b71f8abc2f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-443. allow OS scheduling priority of NM to be different than the containers it launches (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454411 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/03/13 6:46 AM",
      "commitName": "5f2c518c95b2186b784877a5f41c7b71f8abc2f6",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "18/12/12 2:58 PM",
      "commitNameOld": "5032a694ed250f65ade8c2b62c97b89ab45f53ea",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 79.66,
      "commitsBetweenForRepo": 346,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,16 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n     containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n     \n     resourcesHandler \u003d ReflectionUtils.newInstance(\n             conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n               DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n     resourcesHandler.setConf(conf);\n+\n+    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d null) {\n+      containerSchedPriorityIsSet \u003d true;\n+      containerSchedPriorityAdjustment \u003d conf\n+          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n+          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n    \n    resourcesHandler \u003d ReflectionUtils.newInstance(\n            conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n              DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n    resourcesHandler.setConf(conf);\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf\n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3. Add support for CPU isolation/monitoring of containers. (adferguson via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 2:58 PM",
      "commitName": "5032a694ed250f65ade8c2b62c97b89ab45f53ea",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "25/09/12 4:37 PM",
      "commitNameOld": "8912aac81e37a8f49fc21e0e367cd8cb96eea583",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 83.97,
      "commitsBetweenForRepo": 423,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,9 @@\n   public void setConf(Configuration conf) {\n     super.setConf(conf);\n     containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n+    \n+    resourcesHandler \u003d ReflectionUtils.newInstance(\n+            conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n+              DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n+    resourcesHandler.setConf(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n    \n    resourcesHandler \u003d ReflectionUtils.newInstance(\n            conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n              DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n    resourcesHandler.setConf(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,4 @@\n+  public void setConf(Configuration conf) {\n+    super.setConf(conf);\n+    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    containerExecutorExe \u003d getContainerExecutorExecutablePath(conf);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java"
    }
  }
}