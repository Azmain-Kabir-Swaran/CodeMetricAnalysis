{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollectorManager.java",
  "functionName": "remove",
  "functionId": "remove___appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
  "functionStartLine": 182,
  "functionEndLine": 195,
  "numCommitsSeen": 29,
  "timeTaken": 3889,
  "changeHistory": [
    "354be99dbf3b6effb45032b574210fd7161d83d4",
    "22e7ae57715cedb1dcba736e357e8daaf5133e5c",
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "bf54d32750f8b27a170d7a0a8d8f022430327341",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68"
  ],
  "changeHistoryShort": {
    "354be99dbf3b6effb45032b574210fd7161d83d4": "Ybodychange",
    "22e7ae57715cedb1dcba736e357e8daaf5133e5c": "Ybodychange",
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8": "Ymultichange(Yparameterchange,Ybodychange)",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ymultichange(Yfilerename,Ybodychange)",
    "bf54d32750f8b27a170d7a0a8d8f022430327341": "Ymultichange(Ymovefromfile,Ybodychange,Yrename,Yparameterchange)",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "354be99dbf3b6effb45032b574210fd7161d83d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6133. [ATSv2 Security] Renew delegation token for app automatically if an app collector is active. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "354be99dbf3b6effb45032b574210fd7161d83d4",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "879de51206ddef132c092ee21e8b6c6e5976a56e",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n   public boolean remove(ApplicationId appId) {\n     TimelineCollector collector \u003d collectors.remove(appId);\n     if (collector \u003d\u003d null) {\n       LOG.error(\"the collector for \" + appId + \" does not exist!\");\n     } else {\n-      postRemove(appId, collector);\n-      // stop the service to do clean up\n-      collector.stop();\n+      synchronized (collector) {\n+        postRemove(appId, collector);\n+        // stop the service to do clean up\n+        collector.stop();\n+      }\n       LOG.info(\"The collector service for \" + appId + \" was removed\");\n     }\n     return collector !\u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean remove(ApplicationId appId) {\n    TimelineCollector collector \u003d collectors.remove(appId);\n    if (collector \u003d\u003d null) {\n      LOG.error(\"the collector for \" + appId + \" does not exist!\");\n    } else {\n      synchronized (collector) {\n        postRemove(appId, collector);\n        // stop the service to do clean up\n        collector.stop();\n      }\n      LOG.info(\"The collector service for \" + appId + \" was removed\");\n    }\n    return collector !\u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "22e7ae57715cedb1dcba736e357e8daaf5133e5c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3792. Test case failures in TestDistributedShell and some issue fixes related to ATSV2 (Naganarasimha G R via sjlee)\n\n(cherry picked from commit 84f37f1c7eefec6d139cbf091c50d6c06f734323)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "22e7ae57715cedb1dcba736e357e8daaf5133e5c",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public boolean remove(ApplicationId appId) {\n     TimelineCollector collector \u003d collectors.remove(appId);\n     if (collector \u003d\u003d null) {\n       LOG.error(\"the collector for \" + appId + \" does not exist!\");\n     } else {\n       postRemove(appId, collector);\n       // stop the service to do clean up\n       collector.stop();\n-      LOG.info(\"the collector service for \" + appId + \" was removed\");\n+      LOG.info(\"The collector service for \" + appId + \" was removed\");\n     }\n     return collector !\u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean remove(ApplicationId appId) {\n    TimelineCollector collector \u003d collectors.remove(appId);\n    if (collector \u003d\u003d null) {\n      LOG.error(\"the collector for \" + appId + \" does not exist!\");\n    } else {\n      postRemove(appId, collector);\n      // stop the service to do clean up\n      collector.stop();\n      LOG.info(\"The collector service for \" + appId + \" was removed\");\n    }\n    return collector !\u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3390. Reuse TimelineCollectorManager for RM (Zhijie Shen via sjlee)\n\n(cherry picked from commit 58221188811e0f61d842dac89e1f4ad4fd8aa182)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3390. Reuse TimelineCollectorManager for RM (Zhijie Shen via sjlee)\n\n(cherry picked from commit 58221188811e0f61d842dac89e1f4ad4fd8aa182)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,12 @@\n-  public boolean remove(String id) {\n-    synchronized (collectors) {\n-      TimelineCollector collector \u003d collectors.remove(id);\n-      if (collector \u003d\u003d null) {\n-        String msg \u003d \"the collector for \" + id + \" does not exist!\";\n-        LOG.error(msg);\n-        return false;\n-      } else {\n-        // stop the service to do clean up\n-        collector.stop();\n-        LOG.info(\"the collector service for \" + id + \" was removed\");\n-        return true;\n-      }\n+  public boolean remove(ApplicationId appId) {\n+    TimelineCollector collector \u003d collectors.remove(appId);\n+    if (collector \u003d\u003d null) {\n+      LOG.error(\"the collector for \" + appId + \" does not exist!\");\n+    } else {\n+      postRemove(appId, collector);\n+      // stop the service to do clean up\n+      collector.stop();\n+      LOG.info(\"the collector service for \" + appId + \" was removed\");\n     }\n+    return collector !\u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(ApplicationId appId) {\n    TimelineCollector collector \u003d collectors.remove(appId);\n    if (collector \u003d\u003d null) {\n      LOG.error(\"the collector for \" + appId + \" does not exist!\");\n    } else {\n      postRemove(appId, collector);\n      // stop the service to do clean up\n      collector.stop();\n      LOG.info(\"the collector service for \" + appId + \" was removed\");\n    }\n    return collector !\u003d null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
          "extendedDetails": {
            "oldValue": "[id-String]",
            "newValue": "[appId-ApplicationId]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3390. Reuse TimelineCollectorManager for RM (Zhijie Shen via sjlee)\n\n(cherry picked from commit 58221188811e0f61d842dac89e1f4ad4fd8aa182)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,12 @@\n-  public boolean remove(String id) {\n-    synchronized (collectors) {\n-      TimelineCollector collector \u003d collectors.remove(id);\n-      if (collector \u003d\u003d null) {\n-        String msg \u003d \"the collector for \" + id + \" does not exist!\";\n-        LOG.error(msg);\n-        return false;\n-      } else {\n-        // stop the service to do clean up\n-        collector.stop();\n-        LOG.info(\"the collector service for \" + id + \" was removed\");\n-        return true;\n-      }\n+  public boolean remove(ApplicationId appId) {\n+    TimelineCollector collector \u003d collectors.remove(appId);\n+    if (collector \u003d\u003d null) {\n+      LOG.error(\"the collector for \" + appId + \" does not exist!\");\n+    } else {\n+      postRemove(appId, collector);\n+      // stop the service to do clean up\n+      collector.stop();\n+      LOG.info(\"the collector service for \" + appId + \" was removed\");\n     }\n+    return collector !\u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(ApplicationId appId) {\n    TimelineCollector collector \u003d collectors.remove(appId);\n    if (collector \u003d\u003d null) {\n      LOG.error(\"the collector for \" + appId + \" does not exist!\");\n    } else {\n      postRemove(appId, collector);\n      // stop the service to do clean up\n      collector.stop();\n      LOG.info(\"the collector service for \" + appId + \" was removed\");\n    }\n    return collector !\u003d null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public boolean remove(String id) {\n-    synchronized (aggregators) {\n-      TimelineAggregator aggregator \u003d aggregators.remove(id);\n-      if (aggregator \u003d\u003d null) {\n-        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n+    synchronized (collectors) {\n+      TimelineCollector collector \u003d collectors.remove(id);\n+      if (collector \u003d\u003d null) {\n+        String msg \u003d \"the collector for \" + id + \" does not exist!\";\n         LOG.error(msg);\n         return false;\n       } else {\n         // stop the service to do clean up\n-        aggregator.stop();\n-        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n+        collector.stop();\n+        LOG.info(\"the collector service for \" + id + \" was removed\");\n         return true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(String id) {\n    synchronized (collectors) {\n      TimelineCollector collector \u003d collectors.remove(id);\n      if (collector \u003d\u003d null) {\n        String msg \u003d \"the collector for \" + id + \" does not exist!\";\n        LOG.error(msg);\n        return false;\n      } else {\n        // stop the service to do clean up\n        collector.stop();\n        LOG.info(\"the collector service for \" + id + \" was removed\");\n        return true;\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregatorsCollection.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public boolean remove(String id) {\n-    synchronized (aggregators) {\n-      TimelineAggregator aggregator \u003d aggregators.remove(id);\n-      if (aggregator \u003d\u003d null) {\n-        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n+    synchronized (collectors) {\n+      TimelineCollector collector \u003d collectors.remove(id);\n+      if (collector \u003d\u003d null) {\n+        String msg \u003d \"the collector for \" + id + \" does not exist!\";\n         LOG.error(msg);\n         return false;\n       } else {\n         // stop the service to do clean up\n-        aggregator.stop();\n-        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n+        collector.stop();\n+        LOG.info(\"the collector service for \" + id + \" was removed\");\n         return true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(String id) {\n    synchronized (collectors) {\n      TimelineCollector collector \u003d collectors.remove(id);\n      if (collector \u003d\u003d null) {\n        String msg \u003d \"the collector for \" + id + \" does not exist!\";\n        LOG.error(msg);\n        return false;\n      } else {\n        // stop the service to do clean up\n        collector.stop();\n        LOG.info(\"the collector service for \" + id + \" was removed\");\n        return true;\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf54d32750f8b27a170d7a0a8d8f022430327341": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-  public boolean removeService(String appId) {\n-    synchronized (services) {\n-      AppLevelAggregatorService service \u003d services.remove(appId);\n-      if (service \u003d\u003d null) {\n-        String msg \u003d \"the application aggregator service for \" + appId +\n-            \" does not exist!\";\n+  public boolean remove(String id) {\n+    synchronized (aggregators) {\n+      TimelineAggregator aggregator \u003d aggregators.remove(id);\n+      if (aggregator \u003d\u003d null) {\n+        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n         LOG.error(msg);\n         return false;\n       } else {\n         // stop the service to do clean up\n-        service.stop();\n-        LOG.info(\"the application aggregator service for \" + appId +\n-            \" was removed\");\n+        aggregator.stop();\n+        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n         return true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(String id) {\n    synchronized (aggregators) {\n      TimelineAggregator aggregator \u003d aggregators.remove(id);\n      if (aggregator \u003d\u003d null) {\n        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n        LOG.error(msg);\n        return false;\n      } else {\n        // stop the service to do clean up\n        aggregator.stop();\n        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n        return true;\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregatorsCollection.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/AppLevelServiceManager.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregatorsCollection.java",
            "oldMethodName": "removeService",
            "newMethodName": "remove"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-  public boolean removeService(String appId) {\n-    synchronized (services) {\n-      AppLevelAggregatorService service \u003d services.remove(appId);\n-      if (service \u003d\u003d null) {\n-        String msg \u003d \"the application aggregator service for \" + appId +\n-            \" does not exist!\";\n+  public boolean remove(String id) {\n+    synchronized (aggregators) {\n+      TimelineAggregator aggregator \u003d aggregators.remove(id);\n+      if (aggregator \u003d\u003d null) {\n+        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n         LOG.error(msg);\n         return false;\n       } else {\n         // stop the service to do clean up\n-        service.stop();\n-        LOG.info(\"the application aggregator service for \" + appId +\n-            \" was removed\");\n+        aggregator.stop();\n+        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n         return true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(String id) {\n    synchronized (aggregators) {\n      TimelineAggregator aggregator \u003d aggregators.remove(id);\n      if (aggregator \u003d\u003d null) {\n        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n        LOG.error(msg);\n        return false;\n      } else {\n        // stop the service to do clean up\n        aggregator.stop();\n        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n        return true;\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregatorsCollection.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-  public boolean removeService(String appId) {\n-    synchronized (services) {\n-      AppLevelAggregatorService service \u003d services.remove(appId);\n-      if (service \u003d\u003d null) {\n-        String msg \u003d \"the application aggregator service for \" + appId +\n-            \" does not exist!\";\n+  public boolean remove(String id) {\n+    synchronized (aggregators) {\n+      TimelineAggregator aggregator \u003d aggregators.remove(id);\n+      if (aggregator \u003d\u003d null) {\n+        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n         LOG.error(msg);\n         return false;\n       } else {\n         // stop the service to do clean up\n-        service.stop();\n-        LOG.info(\"the application aggregator service for \" + appId +\n-            \" was removed\");\n+        aggregator.stop();\n+        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n         return true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(String id) {\n    synchronized (aggregators) {\n      TimelineAggregator aggregator \u003d aggregators.remove(id);\n      if (aggregator \u003d\u003d null) {\n        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n        LOG.error(msg);\n        return false;\n      } else {\n        // stop the service to do clean up\n        aggregator.stop();\n        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n        return true;\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregatorsCollection.java",
          "extendedDetails": {
            "oldValue": "removeService",
            "newValue": "remove"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-  public boolean removeService(String appId) {\n-    synchronized (services) {\n-      AppLevelAggregatorService service \u003d services.remove(appId);\n-      if (service \u003d\u003d null) {\n-        String msg \u003d \"the application aggregator service for \" + appId +\n-            \" does not exist!\";\n+  public boolean remove(String id) {\n+    synchronized (aggregators) {\n+      TimelineAggregator aggregator \u003d aggregators.remove(id);\n+      if (aggregator \u003d\u003d null) {\n+        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n         LOG.error(msg);\n         return false;\n       } else {\n         // stop the service to do clean up\n-        service.stop();\n-        LOG.info(\"the application aggregator service for \" + appId +\n-            \" was removed\");\n+        aggregator.stop();\n+        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n         return true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean remove(String id) {\n    synchronized (aggregators) {\n      TimelineAggregator aggregator \u003d aggregators.remove(id);\n      if (aggregator \u003d\u003d null) {\n        String msg \u003d \"the aggregator for \" + id + \" does not exist!\";\n        LOG.error(msg);\n        return false;\n      } else {\n        // stop the service to do clean up\n        aggregator.stop();\n        LOG.info(\"the aggregator service for \" + id + \" was removed\");\n        return true;\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregatorsCollection.java",
          "extendedDetails": {
            "oldValue": "[appId-String]",
            "newValue": "[id-String]"
          }
        }
      ]
    },
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3030. Set up TS aggregator with basic request serving structure and lifecycle. Contributed by Sangjin Lee.\n\n(cherry picked from commit f26941b39028ac30c77547e2be2d657bb5bf044a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,17 @@\n+  public boolean removeService(String appId) {\n+    synchronized (services) {\n+      AppLevelAggregatorService service \u003d services.remove(appId);\n+      if (service \u003d\u003d null) {\n+        String msg \u003d \"the application aggregator service for \" + appId +\n+            \" does not exist!\";\n+        LOG.error(msg);\n+        return false;\n+      } else {\n+        // stop the service to do clean up\n+        service.stop();\n+        LOG.info(\"the application aggregator service for \" + appId +\n+            \" was removed\");\n+        return true;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean removeService(String appId) {\n    synchronized (services) {\n      AppLevelAggregatorService service \u003d services.remove(appId);\n      if (service \u003d\u003d null) {\n        String msg \u003d \"the application aggregator service for \" + appId +\n            \" does not exist!\";\n        LOG.error(msg);\n        return false;\n      } else {\n        // stop the service to do clean up\n        service.stop();\n        LOG.info(\"the application aggregator service for \" + appId +\n            \" was removed\");\n        return true;\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/AppLevelServiceManager.java"
    }
  }
}