{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpExceptionUtils.java",
  "functionName": "createServletExceptionResponse",
  "functionId": "createServletExceptionResponse___response-HttpServletResponse__status-int__ex-Throwable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HttpExceptionUtils.java",
  "functionStartLine": 65,
  "functionEndLine": 79,
  "numCommitsSeen": 6,
  "timeTaken": 1630,
  "changeHistory": [
    "7a3c6e9c3cd9ffdc71946fd12f5c3d59718c4939",
    "e1b32e0959dea5f5a40055157476f9320519a618",
    "70b218748badf079c859c3af2b468a0b7b49c333"
  ],
  "changeHistoryShort": {
    "7a3c6e9c3cd9ffdc71946fd12f5c3d59718c4939": "Ybodychange",
    "e1b32e0959dea5f5a40055157476f9320519a618": "Ybodychange",
    "70b218748badf079c859c3af2b468a0b7b49c333": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7a3c6e9c3cd9ffdc71946fd12f5c3d59718c4939": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15550. Avoid static initialization of ObjectMappers\n",
      "commitDate": "25/06/18 3:36 PM",
      "commitName": "7a3c6e9c3cd9ffdc71946fd12f5c3d59718c4939",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "22/09/17 3:45 PM",
      "commitNameOld": "e1b32e0959dea5f5a40055157476f9320519a618",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 275.99,
      "commitsBetweenForRepo": 2526,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public static void createServletExceptionResponse(\n       HttpServletResponse response, int status, Throwable ex)\n       throws IOException {\n     response.setStatus(status);\n     response.setContentType(APPLICATION_JSON_MIME);\n     Map\u003cString, Object\u003e json \u003d new LinkedHashMap\u003cString, Object\u003e();\n     json.put(ERROR_MESSAGE_JSON, getOneLineMessage(ex));\n     json.put(ERROR_EXCEPTION_JSON, ex.getClass().getSimpleName());\n     json.put(ERROR_CLASSNAME_JSON, ex.getClass().getName());\n     Map\u003cString, Object\u003e jsonResponse \u003d new LinkedHashMap\u003cString, Object\u003e();\n     jsonResponse.put(ERROR_JSON, json);\n     Writer writer \u003d response.getWriter();\n-    WRITER.writeValue(writer, jsonResponse);\n+    JsonSerialization.writer().writeValue(writer, jsonResponse);\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createServletExceptionResponse(\n      HttpServletResponse response, int status, Throwable ex)\n      throws IOException {\n    response.setStatus(status);\n    response.setContentType(APPLICATION_JSON_MIME);\n    Map\u003cString, Object\u003e json \u003d new LinkedHashMap\u003cString, Object\u003e();\n    json.put(ERROR_MESSAGE_JSON, getOneLineMessage(ex));\n    json.put(ERROR_EXCEPTION_JSON, ex.getClass().getSimpleName());\n    json.put(ERROR_CLASSNAME_JSON, ex.getClass().getName());\n    Map\u003cString, Object\u003e jsonResponse \u003d new LinkedHashMap\u003cString, Object\u003e();\n    jsonResponse.put(ERROR_JSON, json);\n    Writer writer \u003d response.getWriter();\n    JsonSerialization.writer().writeValue(writer, jsonResponse);\n    writer.flush();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HttpExceptionUtils.java",
      "extendedDetails": {}
    },
    "e1b32e0959dea5f5a40055157476f9320519a618": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14901. ReuseObjectMapper in Hadoop Common. Contributed by Hanisha Koneru.\n",
      "commitDate": "22/09/17 3:45 PM",
      "commitName": "e1b32e0959dea5f5a40055157476f9320519a618",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "28/11/16 9:07 PM",
      "commitNameOld": "67d9f2808efb34b9a7b0b824cb4033b95ad33474",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 297.73,
      "commitsBetweenForRepo": 1811,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public static void createServletExceptionResponse(\n       HttpServletResponse response, int status, Throwable ex)\n       throws IOException {\n     response.setStatus(status);\n     response.setContentType(APPLICATION_JSON_MIME);\n     Map\u003cString, Object\u003e json \u003d new LinkedHashMap\u003cString, Object\u003e();\n     json.put(ERROR_MESSAGE_JSON, getOneLineMessage(ex));\n     json.put(ERROR_EXCEPTION_JSON, ex.getClass().getSimpleName());\n     json.put(ERROR_CLASSNAME_JSON, ex.getClass().getName());\n     Map\u003cString, Object\u003e jsonResponse \u003d new LinkedHashMap\u003cString, Object\u003e();\n     jsonResponse.put(ERROR_JSON, json);\n-    ObjectMapper jsonMapper \u003d new ObjectMapper();\n     Writer writer \u003d response.getWriter();\n-    jsonMapper.writerWithDefaultPrettyPrinter().writeValue(writer, jsonResponse);\n+    WRITER.writeValue(writer, jsonResponse);\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createServletExceptionResponse(\n      HttpServletResponse response, int status, Throwable ex)\n      throws IOException {\n    response.setStatus(status);\n    response.setContentType(APPLICATION_JSON_MIME);\n    Map\u003cString, Object\u003e json \u003d new LinkedHashMap\u003cString, Object\u003e();\n    json.put(ERROR_MESSAGE_JSON, getOneLineMessage(ex));\n    json.put(ERROR_EXCEPTION_JSON, ex.getClass().getSimpleName());\n    json.put(ERROR_CLASSNAME_JSON, ex.getClass().getName());\n    Map\u003cString, Object\u003e jsonResponse \u003d new LinkedHashMap\u003cString, Object\u003e();\n    jsonResponse.put(ERROR_JSON, json);\n    Writer writer \u003d response.getWriter();\n    WRITER.writeValue(writer, jsonResponse);\n    writer.flush();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HttpExceptionUtils.java",
      "extendedDetails": {}
    },
    "70b218748badf079c859c3af2b468a0b7b49c333": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11015. Http server/client utils to propagate and recreate Exceptions from server to client. (tucu)\n",
      "commitDate": "04/09/14 9:11 AM",
      "commitName": "70b218748badf079c859c3af2b468a0b7b49c333",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,16 @@\n+  public static void createServletExceptionResponse(\n+      HttpServletResponse response, int status, Throwable ex)\n+      throws IOException {\n+    response.setStatus(status);\n+    response.setContentType(APPLICATION_JSON_MIME);\n+    Map\u003cString, Object\u003e json \u003d new LinkedHashMap\u003cString, Object\u003e();\n+    json.put(ERROR_MESSAGE_JSON, getOneLineMessage(ex));\n+    json.put(ERROR_EXCEPTION_JSON, ex.getClass().getSimpleName());\n+    json.put(ERROR_CLASSNAME_JSON, ex.getClass().getName());\n+    Map\u003cString, Object\u003e jsonResponse \u003d new LinkedHashMap\u003cString, Object\u003e();\n+    jsonResponse.put(ERROR_JSON, json);\n+    ObjectMapper jsonMapper \u003d new ObjectMapper();\n+    Writer writer \u003d response.getWriter();\n+    jsonMapper.writerWithDefaultPrettyPrinter().writeValue(writer, jsonResponse);\n+    writer.flush();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createServletExceptionResponse(\n      HttpServletResponse response, int status, Throwable ex)\n      throws IOException {\n    response.setStatus(status);\n    response.setContentType(APPLICATION_JSON_MIME);\n    Map\u003cString, Object\u003e json \u003d new LinkedHashMap\u003cString, Object\u003e();\n    json.put(ERROR_MESSAGE_JSON, getOneLineMessage(ex));\n    json.put(ERROR_EXCEPTION_JSON, ex.getClass().getSimpleName());\n    json.put(ERROR_CLASSNAME_JSON, ex.getClass().getName());\n    Map\u003cString, Object\u003e jsonResponse \u003d new LinkedHashMap\u003cString, Object\u003e();\n    jsonResponse.put(ERROR_JSON, json);\n    ObjectMapper jsonMapper \u003d new ObjectMapper();\n    Writer writer \u003d response.getWriter();\n    jsonMapper.writerWithDefaultPrettyPrinter().writeValue(writer, jsonResponse);\n    writer.flush();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HttpExceptionUtils.java"
    }
  }
}