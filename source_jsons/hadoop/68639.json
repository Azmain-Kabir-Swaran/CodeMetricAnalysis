{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JarBuilder.java",
  "functionName": "main",
  "functionId": "main___args-String[]",
  "sourceFilePath": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/JarBuilder.java",
  "functionStartLine": 177,
  "functionEndLine": 203,
  "numCommitsSeen": 4,
  "timeTaken": 4659,
  "changeHistory": [
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String args[]) {\n    // args \u003d new String[] { \"C:/Temp/merged.jar\", \"C:/jdk1.5.0/jre/lib/ext/dnsns.jar\",  \"/Temp/addtojar2.log\", \"C:/jdk1.5.0/jre/lib/ext/mtest.jar\", \"C:/Temp/base\"};\n    if (args.length \u003c 2) {\n      System.err.println(\"Usage: JarFiles merged.jar [src.jar | dir | file ]+\");\n    } else {\n      JarBuilder jarFiles \u003d new JarBuilder();\n      List names \u003d new ArrayList();\n      List unjar \u003d new ArrayList();\n      for (int i \u003d 1; i \u003c args.length; i++) {\n        String f \u003d args[i];\n        String ext \u003d jarFiles.fileExtension(f);\n        boolean expandAsJar \u003d ext.equals(\"jar\") || ext.equals(\"zip\");\n        if (expandAsJar) {\n          unjar.add(f);\n        } else {\n          names.add(f);\n        }\n      }\n      try {\n        jarFiles.merge(names, unjar, args[0]);\n        Date lastMod \u003d new Date(new File(args[0]).lastModified());\n        System.out.println(\"Merge done to \" + args[0] + \" \" + lastMod);\n      } catch (Exception ge) {\n        ge.printStackTrace(System.err);\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/JarBuilder.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java",
        "newPath": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/JarBuilder.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String args[]) {\n    // args \u003d new String[] { \"C:/Temp/merged.jar\", \"C:/jdk1.5.0/jre/lib/ext/dnsns.jar\",  \"/Temp/addtojar2.log\", \"C:/jdk1.5.0/jre/lib/ext/mtest.jar\", \"C:/Temp/base\"};\n    if (args.length \u003c 2) {\n      System.err.println(\"Usage: JarFiles merged.jar [src.jar | dir | file ]+\");\n    } else {\n      JarBuilder jarFiles \u003d new JarBuilder();\n      List names \u003d new ArrayList();\n      List unjar \u003d new ArrayList();\n      for (int i \u003d 1; i \u003c args.length; i++) {\n        String f \u003d args[i];\n        String ext \u003d jarFiles.fileExtension(f);\n        boolean expandAsJar \u003d ext.equals(\"jar\") || ext.equals(\"zip\");\n        if (expandAsJar) {\n          unjar.add(f);\n        } else {\n          names.add(f);\n        }\n      }\n      try {\n        jarFiles.merge(names, unjar, args[0]);\n        Date lastMod \u003d new Date(new File(args[0]).lastModified());\n        System.out.println(\"Merge done to \" + args[0] + \" \" + lastMod);\n      } catch (Exception ge) {\n        ge.printStackTrace(System.err);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String args[]) {\n    // args \u003d new String[] { \"C:/Temp/merged.jar\", \"C:/jdk1.5.0/jre/lib/ext/dnsns.jar\",  \"/Temp/addtojar2.log\", \"C:/jdk1.5.0/jre/lib/ext/mtest.jar\", \"C:/Temp/base\"};\n    if (args.length \u003c 2) {\n      System.err.println(\"Usage: JarFiles merged.jar [src.jar | dir | file ]+\");\n    } else {\n      JarBuilder jarFiles \u003d new JarBuilder();\n      List names \u003d new ArrayList();\n      List unjar \u003d new ArrayList();\n      for (int i \u003d 1; i \u003c args.length; i++) {\n        String f \u003d args[i];\n        String ext \u003d jarFiles.fileExtension(f);\n        boolean expandAsJar \u003d ext.equals(\"jar\") || ext.equals(\"zip\");\n        if (expandAsJar) {\n          unjar.add(f);\n        } else {\n          names.add(f);\n        }\n      }\n      try {\n        jarFiles.merge(names, unjar, args[0]);\n        Date lastMod \u003d new Date(new File(args[0]).lastModified());\n        System.out.println(\"Merge done to \" + args[0] + \" \" + lastMod);\n      } catch (Exception ge) {\n        ge.printStackTrace(System.err);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java",
        "newPath": "hadoop-mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,27 @@\n+  public static void main(String args[]) {\n+    // args \u003d new String[] { \"C:/Temp/merged.jar\", \"C:/jdk1.5.0/jre/lib/ext/dnsns.jar\",  \"/Temp/addtojar2.log\", \"C:/jdk1.5.0/jre/lib/ext/mtest.jar\", \"C:/Temp/base\"};\n+    if (args.length \u003c 2) {\n+      System.err.println(\"Usage: JarFiles merged.jar [src.jar | dir | file ]+\");\n+    } else {\n+      JarBuilder jarFiles \u003d new JarBuilder();\n+      List names \u003d new ArrayList();\n+      List unjar \u003d new ArrayList();\n+      for (int i \u003d 1; i \u003c args.length; i++) {\n+        String f \u003d args[i];\n+        String ext \u003d jarFiles.fileExtension(f);\n+        boolean expandAsJar \u003d ext.equals(\"jar\") || ext.equals(\"zip\");\n+        if (expandAsJar) {\n+          unjar.add(f);\n+        } else {\n+          names.add(f);\n+        }\n+      }\n+      try {\n+        jarFiles.merge(names, unjar, args[0]);\n+        Date lastMod \u003d new Date(new File(args[0]).lastModified());\n+        System.out.println(\"Merge done to \" + args[0] + \" \" + lastMod);\n+      } catch (Exception ge) {\n+        ge.printStackTrace(System.err);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String args[]) {\n    // args \u003d new String[] { \"C:/Temp/merged.jar\", \"C:/jdk1.5.0/jre/lib/ext/dnsns.jar\",  \"/Temp/addtojar2.log\", \"C:/jdk1.5.0/jre/lib/ext/mtest.jar\", \"C:/Temp/base\"};\n    if (args.length \u003c 2) {\n      System.err.println(\"Usage: JarFiles merged.jar [src.jar | dir | file ]+\");\n    } else {\n      JarBuilder jarFiles \u003d new JarBuilder();\n      List names \u003d new ArrayList();\n      List unjar \u003d new ArrayList();\n      for (int i \u003d 1; i \u003c args.length; i++) {\n        String f \u003d args[i];\n        String ext \u003d jarFiles.fileExtension(f);\n        boolean expandAsJar \u003d ext.equals(\"jar\") || ext.equals(\"zip\");\n        if (expandAsJar) {\n          unjar.add(f);\n        } else {\n          names.add(f);\n        }\n      }\n      try {\n        jarFiles.merge(names, unjar, args[0]);\n        Date lastMod \u003d new Date(new File(args[0]).lastModified());\n        System.out.println(\"Merge done to \" + args[0] + \" \" + lastMod);\n      } catch (Exception ge) {\n        ge.printStackTrace(System.err);\n      }\n    }\n  }",
      "path": "mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/JarBuilder.java"
    }
  }
}