{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StringUtils.java",
  "functionName": "formatTimeSortable",
  "functionId": "formatTimeSortable___timeDiff-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java",
  "functionStartLine": 309,
  "functionEndLine": 333,
  "numCommitsSeen": 44,
  "timeTaken": 1001,
  "changeHistory": [
    "a7f776ffdfc9f96d3091d99a2a87157b290cbfe0"
  ],
  "changeHistoryShort": {
    "a7f776ffdfc9f96d3091d99a2a87157b290cbfe0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a7f776ffdfc9f96d3091d99a2a87157b290cbfe0": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6499. Add elapsed time for retired job in JobHistoryServer WebUI. Contributed by Lin Yiqun.\n",
      "commitDate": "16/11/15 10:16 PM",
      "commitName": "a7f776ffdfc9f96d3091d99a2a87157b290cbfe0",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,25 @@\n+  public static String formatTimeSortable(long timeDiff) {\n+    StringBuilder buf \u003d new StringBuilder();\n+    long hours \u003d timeDiff / (60 * 60 * 1000);\n+    long rem \u003d (timeDiff % (60 * 60 * 1000));\n+    long minutes \u003d rem / (60 * 1000);\n+    rem \u003d rem % (60 * 1000);\n+    long seconds \u003d rem / 1000;\n+\n+    // if hours is more than 99 hours, it will be set a max value format\n+    if (hours \u003e 99) {\n+      hours \u003d 99;\n+      minutes \u003d 59;\n+      seconds \u003d 59;\n+    }\n+\n+    buf.append(String.format(\"%02d\", hours));\n+    buf.append(\"hrs, \");\n+\n+    buf.append(String.format(\"%02d\", minutes));\n+    buf.append(\"mins, \");\n+\n+    buf.append(String.format(\"%02d\", seconds));\n+    buf.append(\"sec\");\n+    return buf.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String formatTimeSortable(long timeDiff) {\n    StringBuilder buf \u003d new StringBuilder();\n    long hours \u003d timeDiff / (60 * 60 * 1000);\n    long rem \u003d (timeDiff % (60 * 60 * 1000));\n    long minutes \u003d rem / (60 * 1000);\n    rem \u003d rem % (60 * 1000);\n    long seconds \u003d rem / 1000;\n\n    // if hours is more than 99 hours, it will be set a max value format\n    if (hours \u003e 99) {\n      hours \u003d 99;\n      minutes \u003d 59;\n      seconds \u003d 59;\n    }\n\n    buf.append(String.format(\"%02d\", hours));\n    buf.append(\"hrs, \");\n\n    buf.append(String.format(\"%02d\", minutes));\n    buf.append(\"mins, \");\n\n    buf.append(String.format(\"%02d\", seconds));\n    buf.append(\"sec\");\n    return buf.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java"
    }
  }
}