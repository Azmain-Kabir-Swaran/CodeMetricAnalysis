{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupMappingPlacementRule.java",
  "functionName": "validateAndGetAutoCreatedQueueMapping",
  "functionId": "validateAndGetAutoCreatedQueueMapping___queueManager-CapacitySchedulerQueueManager__mapping-QueueMapping__queuePath-QueuePath",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
  "functionStartLine": 399,
  "functionEndLine": 427,
  "numCommitsSeen": 24,
  "timeTaken": 5510,
  "changeHistory": [
    "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095",
    "f8e36e03b4e65f173bf2330715dceafdb6111190",
    "30b93f914b7015d4567e199c51a2ebe727fee320",
    "f0699a740666fef907db80d5ce9d06e0a9fd0e08",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df"
  ],
  "changeHistoryShort": {
    "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095": "Ybodychange",
    "f8e36e03b4e65f173bf2330715dceafdb6111190": "Ybodychange",
    "30b93f914b7015d4567e199c51a2ebe727fee320": "Ybodychange",
    "f0699a740666fef907db80d5ce9d06e0a9fd0e08": "Ybodychange",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9970. Refactor TestUserGroupMappingPlacementRule#verifyQueueMapping. Contributed by Manikandan R\n",
      "commitDate": "15/01/20 12:55 AM",
      "commitName": "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "13/01/20 8:23 AM",
      "commitNameOld": "621c5eac38697755cf29aa8618869c09092b6a80",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 1.69,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,29 @@\n   private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n       CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n       QueuePath queuePath) throws IOException {\n     if (queuePath.hasParentQueue()\n         \u0026\u0026 (queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)\n             || queuePath.getParentQueue().equals(SECONDARY_GROUP_MAPPING))) {\n       // dynamic parent queue\n-      return new QueueMapping(mapping.getType(), mapping.getSource(),\n-          queuePath.getLeafQueue(), queuePath.getParentQueue());\n+      return QueueMappingBuilder.create()\n+          .type(mapping.getType())\n+          .source(mapping.getSource())\n+          .queue(queuePath.getLeafQueue())\n+          .parentQueue(queuePath.getParentQueue())\n+          .build();\n     } else if (queuePath.hasParentQueue()) {\n       //if parent queue is specified,\n       // then it should exist and be an instance of ManagedParentQueue\n       QueuePlacementRuleUtils.validateQueueMappingUnderParentQueue(\n               queueManager.getQueue(queuePath.getParentQueue()),\n           queuePath.getParentQueue(), queuePath.getLeafQueue());\n-      return new QueueMapping(mapping.getType(), mapping.getSource(),\n-          queuePath.getLeafQueue(), queuePath.getParentQueue());\n+      return QueueMappingBuilder.create()\n+          .type(mapping.getType())\n+          .source(mapping.getSource())\n+          .queue(queuePath.getLeafQueue())\n+          .parentQueue(queuePath.getParentQueue())\n+          .build();\n     }\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n      CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n      QueuePath queuePath) throws IOException {\n    if (queuePath.hasParentQueue()\n        \u0026\u0026 (queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)\n            || queuePath.getParentQueue().equals(SECONDARY_GROUP_MAPPING))) {\n      // dynamic parent queue\n      return QueueMappingBuilder.create()\n          .type(mapping.getType())\n          .source(mapping.getSource())\n          .queue(queuePath.getLeafQueue())\n          .parentQueue(queuePath.getParentQueue())\n          .build();\n    } else if (queuePath.hasParentQueue()) {\n      //if parent queue is specified,\n      // then it should exist and be an instance of ManagedParentQueue\n      QueuePlacementRuleUtils.validateQueueMappingUnderParentQueue(\n              queueManager.getQueue(queuePath.getParentQueue()),\n          queuePath.getParentQueue(), queuePath.getLeafQueue());\n      return QueueMappingBuilder.create()\n          .type(mapping.getType())\n          .source(mapping.getSource())\n          .queue(queuePath.getLeafQueue())\n          .parentQueue(queuePath.getParentQueue())\n          .build();\n    }\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "f8e36e03b4e65f173bf2330715dceafdb6111190": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9966. Code duplication in UserGroupMappingPlacementRule (#1709)\n\n",
      "commitDate": "24/11/19 10:28 PM",
      "commitName": "f8e36e03b4e65f173bf2330715dceafdb6111190",
      "commitAuthor": "HUAN-PING SU",
      "commitDateOld": "11/11/19 4:28 AM",
      "commitNameOld": "30b93f914b7015d4567e199c51a2ebe727fee320",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 13.75,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n       CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n       QueuePath queuePath) throws IOException {\n     if (queuePath.hasParentQueue()\n         \u0026\u0026 (queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)\n             || queuePath.getParentQueue().equals(SECONDARY_GROUP_MAPPING))) {\n       // dynamic parent queue\n       return new QueueMapping(mapping.getType(), mapping.getSource(),\n           queuePath.getLeafQueue(), queuePath.getParentQueue());\n     } else if (queuePath.hasParentQueue()) {\n       //if parent queue is specified,\n       // then it should exist and be an instance of ManagedParentQueue\n-      validateParentQueue(queueManager.getQueue(queuePath.getParentQueue()),\n+      QueuePlacementRuleUtils.validateQueueMappingUnderParentQueue(\n+              queueManager.getQueue(queuePath.getParentQueue()),\n           queuePath.getParentQueue(), queuePath.getLeafQueue());\n       return new QueueMapping(mapping.getType(), mapping.getSource(),\n           queuePath.getLeafQueue(), queuePath.getParentQueue());\n     }\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n      CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n      QueuePath queuePath) throws IOException {\n    if (queuePath.hasParentQueue()\n        \u0026\u0026 (queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)\n            || queuePath.getParentQueue().equals(SECONDARY_GROUP_MAPPING))) {\n      // dynamic parent queue\n      return new QueueMapping(mapping.getType(), mapping.getSource(),\n          queuePath.getLeafQueue(), queuePath.getParentQueue());\n    } else if (queuePath.hasParentQueue()) {\n      //if parent queue is specified,\n      // then it should exist and be an instance of ManagedParentQueue\n      QueuePlacementRuleUtils.validateQueueMappingUnderParentQueue(\n              queueManager.getQueue(queuePath.getParentQueue()),\n          queuePath.getParentQueue(), queuePath.getLeafQueue());\n      return new QueueMapping(mapping.getType(), mapping.getSource(),\n          queuePath.getLeafQueue(), queuePath.getParentQueue());\n    }\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "30b93f914b7015d4567e199c51a2ebe727fee320": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9865. Capacity scheduler: add support for combined %user + %secondary_group mapping. Contributed by Manikandan R\n",
      "commitDate": "11/11/19 4:28 AM",
      "commitName": "30b93f914b7015d4567e199c51a2ebe727fee320",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "18/10/19 2:19 AM",
      "commitNameOld": "f0699a740666fef907db80d5ce9d06e0a9fd0e08",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 24.13,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n       CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n       QueuePath queuePath) throws IOException {\n     if (queuePath.hasParentQueue()\n-        \u0026\u0026 queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)) {\n+        \u0026\u0026 (queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)\n+            || queuePath.getParentQueue().equals(SECONDARY_GROUP_MAPPING))) {\n       // dynamic parent queue\n       return new QueueMapping(mapping.getType(), mapping.getSource(),\n           queuePath.getLeafQueue(), queuePath.getParentQueue());\n     } else if (queuePath.hasParentQueue()) {\n       //if parent queue is specified,\n       // then it should exist and be an instance of ManagedParentQueue\n       validateParentQueue(queueManager.getQueue(queuePath.getParentQueue()),\n           queuePath.getParentQueue(), queuePath.getLeafQueue());\n       return new QueueMapping(mapping.getType(), mapping.getSource(),\n           queuePath.getLeafQueue(), queuePath.getParentQueue());\n     }\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n      CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n      QueuePath queuePath) throws IOException {\n    if (queuePath.hasParentQueue()\n        \u0026\u0026 (queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)\n            || queuePath.getParentQueue().equals(SECONDARY_GROUP_MAPPING))) {\n      // dynamic parent queue\n      return new QueueMapping(mapping.getType(), mapping.getSource(),\n          queuePath.getLeafQueue(), queuePath.getParentQueue());\n    } else if (queuePath.hasParentQueue()) {\n      //if parent queue is specified,\n      // then it should exist and be an instance of ManagedParentQueue\n      validateParentQueue(queueManager.getQueue(queuePath.getParentQueue()),\n          queuePath.getParentQueue(), queuePath.getLeafQueue());\n      return new QueueMapping(mapping.getType(), mapping.getSource(),\n          queuePath.getLeafQueue(), queuePath.getParentQueue());\n    }\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "f0699a740666fef907db80d5ce9d06e0a9fd0e08": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9841. Capacity scheduler: add support for combined %user + %primary_group mapping. Contributed by Manikandan R\n",
      "commitDate": "18/10/19 2:19 AM",
      "commitName": "f0699a740666fef907db80d5ce9d06e0a9fd0e08",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/10/19 8:22 AM",
      "commitNameOld": "a8ef03e96183fad0ecc53b89f1f58aaa83a92ad8",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 2.75,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n       CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n       QueuePath queuePath) throws IOException {\n-    if (queuePath.hasParentQueue()) {\n+    if (queuePath.hasParentQueue()\n+        \u0026\u0026 queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)) {\n+      // dynamic parent queue\n+      return new QueueMapping(mapping.getType(), mapping.getSource(),\n+          queuePath.getLeafQueue(), queuePath.getParentQueue());\n+    } else if (queuePath.hasParentQueue()) {\n       //if parent queue is specified,\n       // then it should exist and be an instance of ManagedParentQueue\n       validateParentQueue(queueManager.getQueue(queuePath.getParentQueue()),\n           queuePath.getParentQueue(), queuePath.getLeafQueue());\n       return new QueueMapping(mapping.getType(), mapping.getSource(),\n           queuePath.getLeafQueue(), queuePath.getParentQueue());\n     }\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n      CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n      QueuePath queuePath) throws IOException {\n    if (queuePath.hasParentQueue()\n        \u0026\u0026 queuePath.getParentQueue().equals(PRIMARY_GROUP_MAPPING)) {\n      // dynamic parent queue\n      return new QueueMapping(mapping.getType(), mapping.getSource(),\n          queuePath.getLeafQueue(), queuePath.getParentQueue());\n    } else if (queuePath.hasParentQueue()) {\n      //if parent queue is specified,\n      // then it should exist and be an instance of ManagedParentQueue\n      validateParentQueue(queueManager.getQueue(queuePath.getParentQueue()),\n          queuePath.getParentQueue(), queuePath.getLeafQueue());\n      return new QueueMapping(mapping.getType(), mapping.getSource(),\n          queuePath.getLeafQueue(), queuePath.getParentQueue());\n    }\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java",
      "extendedDetails": {}
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,14 @@\n+  private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n+      CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n+      QueuePath queuePath) throws IOException {\n+    if (queuePath.hasParentQueue()) {\n+      //if parent queue is specified,\n+      // then it should exist and be an instance of ManagedParentQueue\n+      validateParentQueue(queueManager.getQueue(queuePath.getParentQueue()),\n+          queuePath.getParentQueue(), queuePath.getLeafQueue());\n+      return new QueueMapping(mapping.getType(), mapping.getSource(),\n+          queuePath.getLeafQueue(), queuePath.getParentQueue());\n+    }\n+\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static QueueMapping validateAndGetAutoCreatedQueueMapping(\n      CapacitySchedulerQueueManager queueManager, QueueMapping mapping,\n      QueuePath queuePath) throws IOException {\n    if (queuePath.hasParentQueue()) {\n      //if parent queue is specified,\n      // then it should exist and be an instance of ManagedParentQueue\n      validateParentQueue(queueManager.getQueue(queuePath.getParentQueue()),\n          queuePath.getParentQueue(), queuePath.getLeafQueue());\n      return new QueueMapping(mapping.getType(), mapping.getSource(),\n          queuePath.getLeafQueue(), queuePath.getParentQueue());\n    }\n\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserGroupMappingPlacementRule.java"
    }
  }
}