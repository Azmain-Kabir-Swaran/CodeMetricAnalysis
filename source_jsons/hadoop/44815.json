{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueCLI.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
  "functionStartLine": 56,
  "functionEndLine": 87,
  "numCommitsSeen": 12,
  "timeTaken": 1268,
  "changeHistory": [
    "7dc272199ffea28c8597151e17d4606928a7f9f3",
    "a71e9302a9dbbb702c8c50a4fdaa508f912561d6",
    "61effcbebc819ee1bd3d60f5444c39c972494a32"
  ],
  "changeHistoryShort": {
    "7dc272199ffea28c8597151e17d4606928a7f9f3": "Ybodychange",
    "a71e9302a9dbbb702c8c50a4fdaa508f912561d6": "Ybodychange",
    "61effcbebc819ee1bd3d60f5444c39c972494a32": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7dc272199ffea28c8597151e17d4606928a7f9f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9034. ApplicationCLI should have option to take clusterId. Contributed by Rohith Sharma K S.\n",
      "commitDate": "28/11/18 12:42 AM",
      "commitName": "7dc272199ffea28c8597151e17d4606928a7f9f3",
      "commitAuthor": "Suma Shivaprasad",
      "commitDateOld": "19/02/18 12:06 PM",
      "commitNameOld": "949721508467968d5f46170353716ad04349cd6f",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 281.52,
      "commitsBetweenForRepo": 2812,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public int run(String[] args) throws Exception {\n     Options opts \u003d new Options();\n \n     opts.addOption(STATUS_CMD, true,\n         \"List queue information about given queue.\");\n     opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n     opts.getOption(STATUS_CMD).setArgName(\"Queue Name\");\n \n     CommandLine cliParser \u003d null;\n     try {\n       cliParser \u003d new GnuParser().parse(opts, args);\n     } catch (MissingArgumentException ex) {\n       sysout.println(\"Missing argument for options\");\n       printUsage(opts);\n       return -1;\n     }\n-\n+    createAndStartYarnClient();\n     if (cliParser.hasOption(STATUS_CMD)) {\n       if (args.length !\u003d 2) {\n         printUsage(opts);\n         return -1;\n       }\n       return listQueue(cliParser.getOptionValue(STATUS_CMD));\n     } else if (cliParser.hasOption(HELP_CMD)) {\n       printUsage(opts);\n       return 0;\n     } else {\n       syserr.println(\"Invalid Command Usage : \");\n       printUsage(opts);\n       return -1;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    Options opts \u003d new Options();\n\n    opts.addOption(STATUS_CMD, true,\n        \"List queue information about given queue.\");\n    opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n    opts.getOption(STATUS_CMD).setArgName(\"Queue Name\");\n\n    CommandLine cliParser \u003d null;\n    try {\n      cliParser \u003d new GnuParser().parse(opts, args);\n    } catch (MissingArgumentException ex) {\n      sysout.println(\"Missing argument for options\");\n      printUsage(opts);\n      return -1;\n    }\n    createAndStartYarnClient();\n    if (cliParser.hasOption(STATUS_CMD)) {\n      if (args.length !\u003d 2) {\n        printUsage(opts);\n        return -1;\n      }\n      return listQueue(cliParser.getOptionValue(STATUS_CMD));\n    } else if (cliParser.hasOption(HELP_CMD)) {\n      printUsage(opts);\n      return 0;\n    } else {\n      syserr.println(\"Invalid Command Usage : \");\n      printUsage(opts);\n      return -1;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "a71e9302a9dbbb702c8c50a4fdaa508f912561d6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2827. Fixed bugs in \"yarn queue\" CLI. Contributed by Wangda Tan.\n",
      "commitDate": "07/11/14 11:56 AM",
      "commitName": "a71e9302a9dbbb702c8c50a4fdaa508f912561d6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/11/14 8:48 PM",
      "commitNameOld": "61effcbebc819ee1bd3d60f5444c39c972494a32",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.63,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,32 @@\n   public int run(String[] args) throws Exception {\n     Options opts \u003d new Options();\n-    int exitCode \u003d -1;\n-    if (args.length \u003e 0) {\n-      opts.addOption(STATUS_CMD, true,\n-          \"List queue information about given queue.\");\n-      opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n-      opts.getOption(STATUS_CMD).setArgName(\"Queue Name\");\n-    } else {\n-      syserr.println(\"Invalid Command usage. Command must start with \u0027queue\u0027\");\n-      return exitCode;\n-    }\n+\n+    opts.addOption(STATUS_CMD, true,\n+        \"List queue information about given queue.\");\n+    opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n+    opts.getOption(STATUS_CMD).setArgName(\"Queue Name\");\n \n     CommandLine cliParser \u003d null;\n     try {\n       cliParser \u003d new GnuParser().parse(opts, args);\n     } catch (MissingArgumentException ex) {\n       sysout.println(\"Missing argument for options\");\n       printUsage(opts);\n-      return exitCode;\n+      return -1;\n     }\n \n     if (cliParser.hasOption(STATUS_CMD)) {\n-      if (args.length !\u003d 3) {\n+      if (args.length !\u003d 2) {\n         printUsage(opts);\n-        return exitCode;\n+        return -1;\n       }\n-      listQueue(cliParser.getOptionValue(STATUS_CMD));\n+      return listQueue(cliParser.getOptionValue(STATUS_CMD));\n     } else if (cliParser.hasOption(HELP_CMD)) {\n       printUsage(opts);\n       return 0;\n     } else {\n       syserr.println(\"Invalid Command Usage : \");\n       printUsage(opts);\n+      return -1;\n     }\n-    return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    Options opts \u003d new Options();\n\n    opts.addOption(STATUS_CMD, true,\n        \"List queue information about given queue.\");\n    opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n    opts.getOption(STATUS_CMD).setArgName(\"Queue Name\");\n\n    CommandLine cliParser \u003d null;\n    try {\n      cliParser \u003d new GnuParser().parse(opts, args);\n    } catch (MissingArgumentException ex) {\n      sysout.println(\"Missing argument for options\");\n      printUsage(opts);\n      return -1;\n    }\n\n    if (cliParser.hasOption(STATUS_CMD)) {\n      if (args.length !\u003d 2) {\n        printUsage(opts);\n        return -1;\n      }\n      return listQueue(cliParser.getOptionValue(STATUS_CMD));\n    } else if (cliParser.hasOption(HELP_CMD)) {\n      printUsage(opts);\n      return 0;\n    } else {\n      syserr.println(\"Invalid Command Usage : \");\n      printUsage(opts);\n      return -1;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java",
      "extendedDetails": {}
    },
    "61effcbebc819ee1bd3d60f5444c39c972494a32": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2647. Added a queue CLI for getting queue information. Contributed by Sunil Govind.\n",
      "commitDate": "06/11/14 8:48 PM",
      "commitName": "61effcbebc819ee1bd3d60f5444c39c972494a32",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,37 @@\n+  public int run(String[] args) throws Exception {\n+    Options opts \u003d new Options();\n+    int exitCode \u003d -1;\n+    if (args.length \u003e 0) {\n+      opts.addOption(STATUS_CMD, true,\n+          \"List queue information about given queue.\");\n+      opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n+      opts.getOption(STATUS_CMD).setArgName(\"Queue Name\");\n+    } else {\n+      syserr.println(\"Invalid Command usage. Command must start with \u0027queue\u0027\");\n+      return exitCode;\n+    }\n+\n+    CommandLine cliParser \u003d null;\n+    try {\n+      cliParser \u003d new GnuParser().parse(opts, args);\n+    } catch (MissingArgumentException ex) {\n+      sysout.println(\"Missing argument for options\");\n+      printUsage(opts);\n+      return exitCode;\n+    }\n+\n+    if (cliParser.hasOption(STATUS_CMD)) {\n+      if (args.length !\u003d 3) {\n+        printUsage(opts);\n+        return exitCode;\n+      }\n+      listQueue(cliParser.getOptionValue(STATUS_CMD));\n+    } else if (cliParser.hasOption(HELP_CMD)) {\n+      printUsage(opts);\n+      return 0;\n+    } else {\n+      syserr.println(\"Invalid Command Usage : \");\n+      printUsage(opts);\n+    }\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    Options opts \u003d new Options();\n    int exitCode \u003d -1;\n    if (args.length \u003e 0) {\n      opts.addOption(STATUS_CMD, true,\n          \"List queue information about given queue.\");\n      opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n      opts.getOption(STATUS_CMD).setArgName(\"Queue Name\");\n    } else {\n      syserr.println(\"Invalid Command usage. Command must start with \u0027queue\u0027\");\n      return exitCode;\n    }\n\n    CommandLine cliParser \u003d null;\n    try {\n      cliParser \u003d new GnuParser().parse(opts, args);\n    } catch (MissingArgumentException ex) {\n      sysout.println(\"Missing argument for options\");\n      printUsage(opts);\n      return exitCode;\n    }\n\n    if (cliParser.hasOption(STATUS_CMD)) {\n      if (args.length !\u003d 3) {\n        printUsage(opts);\n        return exitCode;\n      }\n      listQueue(cliParser.getOptionValue(STATUS_CMD));\n    } else if (cliParser.hasOption(HELP_CMD)) {\n      printUsage(opts);\n      return 0;\n    } else {\n      syserr.println(\"Invalid Command Usage : \");\n      printUsage(opts);\n    }\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/QueueCLI.java"
    }
  }
}