{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "getActivedAppDiagnosticMessage",
  "functionId": "getActivedAppDiagnosticMessage___diagnosticMessage-StringBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 1011,
  "functionEndLine": 1049,
  "numCommitsSeen": 93,
  "timeTaken": 3320,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "d52627a7cbddfd981db973e223aefffde1ebf82d",
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "d52627a7cbddfd981db973e223aefffde1ebf82d": "Ybodychange",
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "01/11/18 2:22 PM",
      "commitNameOld": "2ab611d48b7669b31bd2c9b918f47251da77d0f6",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 115.93,
      "commitsBetweenForRepo": 799,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   protected void getActivedAppDiagnosticMessage(\n       StringBuilder diagnosticMessage) {\n     LeafQueue queue \u003d getCSLeafQueue();\n     QueueCapacities queueCapacities \u003d queue.getQueueCapacities();\n     QueueResourceQuotas queueResourceQuotas \u003d queue.getQueueResourceQuotas();\n-    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n-    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n-        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n-    diagnosticMessage.append(\" ; \");\n-    diagnosticMessage.append(\"Partition Resource \u003d \");\n-    diagnosticMessage.append(rmContext.getNodeLabelManager()\n-        .getResourceByLabel(appAMNodePartitionName, Resources.none()));\n-    diagnosticMessage.append(\" ; \");\n-    diagnosticMessage.append(\"Queue\u0027s Absolute capacity \u003d \");\n-    diagnosticMessage.append(\n-        queueCapacities.getAbsoluteCapacity(appAMNodePartitionName) * 100);\n-    diagnosticMessage.append(\" % ; \");\n-    diagnosticMessage.append(\"Queue\u0027s Absolute used capacity \u003d \");\n-    diagnosticMessage.append(\n-        queueCapacities.getAbsoluteUsedCapacity(appAMNodePartitionName) * 100);\n-    diagnosticMessage.append(\" % ; \");\n-    diagnosticMessage.append(\"Queue\u0027s Absolute max capacity \u003d \");\n-    diagnosticMessage.append(\n-        queueCapacities.getAbsoluteMaximumCapacity(appAMNodePartitionName)\n-            * 100);\n-    diagnosticMessage.append(\" % ; \");\n-    diagnosticMessage.append(\"Queue\u0027s capacity (absolute resource) \u003d \");\n-    diagnosticMessage.append(\n-        queueResourceQuotas.getEffectiveMinResource(appAMNodePartitionName));\n-    diagnosticMessage.append(\" ; \");\n-    diagnosticMessage.append(\"Queue\u0027s used capacity (absolute resource) \u003d \");\n-    diagnosticMessage\n-        .append(queue.getQueueResourceUsage().getUsed(appAMNodePartitionName));\n-    diagnosticMessage.append(\" ; \");\n-    diagnosticMessage.append(\"Queue\u0027s max capacity (absolute resource) \u003d \");\n-    diagnosticMessage.append(\n-        queueResourceQuotas.getEffectiveMaxResource(appAMNodePartitionName));\n-    diagnosticMessage.append(\" ; \");\n+    diagnosticMessage.append(\" Details : AM Partition \u003d \")\n+        .append(appAMNodePartitionName.isEmpty()\n+            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName)\n+        .append(\" ; \")\n+        .append(\"Partition Resource \u003d \")\n+        .append(rmContext.getNodeLabelManager()\n+            .getResourceByLabel(appAMNodePartitionName, Resources.none()))\n+        .append(\" ; \")\n+        .append(\"Queue\u0027s Absolute capacity \u003d \")\n+        .append(\n+            queueCapacities.getAbsoluteCapacity(appAMNodePartitionName) * 100)\n+        .append(\" % ; \")\n+        .append(\"Queue\u0027s Absolute used capacity \u003d \")\n+        .append(\n+            queueCapacities.getAbsoluteUsedCapacity(appAMNodePartitionName)\n+                * 100)\n+        .append(\" % ; \")\n+        .append(\"Queue\u0027s Absolute max capacity \u003d \")\n+        .append(\n+            queueCapacities.getAbsoluteMaximumCapacity(appAMNodePartitionName)\n+                * 100)\n+        .append(\" % ; \")\n+        .append(\"Queue\u0027s capacity (absolute resource) \u003d \")\n+        .append(\n+            queueResourceQuotas.getEffectiveMinResource(appAMNodePartitionName))\n+        .append(\" ; \")\n+        .append(\"Queue\u0027s used capacity (absolute resource) \u003d \")\n+        .append(queue.getQueueResourceUsage().getUsed(appAMNodePartitionName))\n+        .append(\" ; \")\n+        .append(\"Queue\u0027s max capacity (absolute resource) \u003d \")\n+        .append(\n+            queueResourceQuotas.getEffectiveMaxResource(appAMNodePartitionName))\n+        .append(\" ; \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void getActivedAppDiagnosticMessage(\n      StringBuilder diagnosticMessage) {\n    LeafQueue queue \u003d getCSLeafQueue();\n    QueueCapacities queueCapacities \u003d queue.getQueueCapacities();\n    QueueResourceQuotas queueResourceQuotas \u003d queue.getQueueResourceQuotas();\n    diagnosticMessage.append(\" Details : AM Partition \u003d \")\n        .append(appAMNodePartitionName.isEmpty()\n            ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName)\n        .append(\" ; \")\n        .append(\"Partition Resource \u003d \")\n        .append(rmContext.getNodeLabelManager()\n            .getResourceByLabel(appAMNodePartitionName, Resources.none()))\n        .append(\" ; \")\n        .append(\"Queue\u0027s Absolute capacity \u003d \")\n        .append(\n            queueCapacities.getAbsoluteCapacity(appAMNodePartitionName) * 100)\n        .append(\" % ; \")\n        .append(\"Queue\u0027s Absolute used capacity \u003d \")\n        .append(\n            queueCapacities.getAbsoluteUsedCapacity(appAMNodePartitionName)\n                * 100)\n        .append(\" % ; \")\n        .append(\"Queue\u0027s Absolute max capacity \u003d \")\n        .append(\n            queueCapacities.getAbsoluteMaximumCapacity(appAMNodePartitionName)\n                * 100)\n        .append(\" % ; \")\n        .append(\"Queue\u0027s capacity (absolute resource) \u003d \")\n        .append(\n            queueResourceQuotas.getEffectiveMinResource(appAMNodePartitionName))\n        .append(\" ; \")\n        .append(\"Queue\u0027s used capacity (absolute resource) \u003d \")\n        .append(queue.getQueueResourceUsage().getUsed(appAMNodePartitionName))\n        .append(\" ; \")\n        .append(\"Queue\u0027s max capacity (absolute resource) \u003d \")\n        .append(\n            queueResourceQuotas.getEffectiveMaxResource(appAMNodePartitionName))\n        .append(\" ; \");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "d52627a7cbddfd981db973e223aefffde1ebf82d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7254. UI and metrics changes related to absolute resource configuration. (Sunil G via wangda)\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "d52627a7cbddfd981db973e223aefffde1ebf82d",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "05/12/17 9:20 AM",
      "commitNameOld": "a957f1c60e1308d1d70a1803381994f59949c5f8",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 2.4,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,39 @@\n   protected void getActivedAppDiagnosticMessage(\n       StringBuilder diagnosticMessage) {\n     LeafQueue queue \u003d getCSLeafQueue();\n     QueueCapacities queueCapacities \u003d queue.getQueueCapacities();\n+    QueueResourceQuotas queueResourceQuotas \u003d queue.getQueueResourceQuotas();\n     diagnosticMessage.append(\" Details : AM Partition \u003d \");\n     diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n         ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n     diagnosticMessage.append(\" ; \");\n     diagnosticMessage.append(\"Partition Resource \u003d \");\n     diagnosticMessage.append(rmContext.getNodeLabelManager()\n         .getResourceByLabel(appAMNodePartitionName, Resources.none()));\n     diagnosticMessage.append(\" ; \");\n     diagnosticMessage.append(\"Queue\u0027s Absolute capacity \u003d \");\n     diagnosticMessage.append(\n         queueCapacities.getAbsoluteCapacity(appAMNodePartitionName) * 100);\n     diagnosticMessage.append(\" % ; \");\n     diagnosticMessage.append(\"Queue\u0027s Absolute used capacity \u003d \");\n     diagnosticMessage.append(\n         queueCapacities.getAbsoluteUsedCapacity(appAMNodePartitionName) * 100);\n     diagnosticMessage.append(\" % ; \");\n     diagnosticMessage.append(\"Queue\u0027s Absolute max capacity \u003d \");\n     diagnosticMessage.append(\n         queueCapacities.getAbsoluteMaximumCapacity(appAMNodePartitionName)\n             * 100);\n     diagnosticMessage.append(\" % ; \");\n+    diagnosticMessage.append(\"Queue\u0027s capacity (absolute resource) \u003d \");\n+    diagnosticMessage.append(\n+        queueResourceQuotas.getEffectiveMinResource(appAMNodePartitionName));\n+    diagnosticMessage.append(\" ; \");\n+    diagnosticMessage.append(\"Queue\u0027s used capacity (absolute resource) \u003d \");\n+    diagnosticMessage\n+        .append(queue.getQueueResourceUsage().getUsed(appAMNodePartitionName));\n+    diagnosticMessage.append(\" ; \");\n+    diagnosticMessage.append(\"Queue\u0027s max capacity (absolute resource) \u003d \");\n+    diagnosticMessage.append(\n+        queueResourceQuotas.getEffectiveMaxResource(appAMNodePartitionName));\n+    diagnosticMessage.append(\" ; \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void getActivedAppDiagnosticMessage(\n      StringBuilder diagnosticMessage) {\n    LeafQueue queue \u003d getCSLeafQueue();\n    QueueCapacities queueCapacities \u003d queue.getQueueCapacities();\n    QueueResourceQuotas queueResourceQuotas \u003d queue.getQueueResourceQuotas();\n    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n    diagnosticMessage.append(\" ; \");\n    diagnosticMessage.append(\"Partition Resource \u003d \");\n    diagnosticMessage.append(rmContext.getNodeLabelManager()\n        .getResourceByLabel(appAMNodePartitionName, Resources.none()));\n    diagnosticMessage.append(\" ; \");\n    diagnosticMessage.append(\"Queue\u0027s Absolute capacity \u003d \");\n    diagnosticMessage.append(\n        queueCapacities.getAbsoluteCapacity(appAMNodePartitionName) * 100);\n    diagnosticMessage.append(\" % ; \");\n    diagnosticMessage.append(\"Queue\u0027s Absolute used capacity \u003d \");\n    diagnosticMessage.append(\n        queueCapacities.getAbsoluteUsedCapacity(appAMNodePartitionName) * 100);\n    diagnosticMessage.append(\" % ; \");\n    diagnosticMessage.append(\"Queue\u0027s Absolute max capacity \u003d \");\n    diagnosticMessage.append(\n        queueCapacities.getAbsoluteMaximumCapacity(appAMNodePartitionName)\n            * 100);\n    diagnosticMessage.append(\" % ; \");\n    diagnosticMessage.append(\"Queue\u0027s capacity (absolute resource) \u003d \");\n    diagnosticMessage.append(\n        queueResourceQuotas.getEffectiveMinResource(appAMNodePartitionName));\n    diagnosticMessage.append(\" ; \");\n    diagnosticMessage.append(\"Queue\u0027s used capacity (absolute resource) \u003d \");\n    diagnosticMessage\n        .append(queue.getQueueResourceUsage().getUsed(appAMNodePartitionName));\n    diagnosticMessage.append(\" ; \");\n    diagnosticMessage.append(\"Queue\u0027s max capacity (absolute resource) \u003d \");\n    diagnosticMessage.append(\n        queueResourceQuotas.getEffectiveMaxResource(appAMNodePartitionName));\n    diagnosticMessage.append(\" ; \");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3946. Update exact reason as to why a submitted app is in ACCEPTED state to app\u0027s diagnostic message. (Naganarasimha G R via wangda)\n",
      "commitDate": "14/12/15 10:52 AM",
      "commitName": "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+  protected void getActivedAppDiagnosticMessage(\n+      StringBuilder diagnosticMessage) {\n+    LeafQueue queue \u003d getCSLeafQueue();\n+    QueueCapacities queueCapacities \u003d queue.getQueueCapacities();\n+    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n+    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n+        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n+    diagnosticMessage.append(\" ; \");\n+    diagnosticMessage.append(\"Partition Resource \u003d \");\n+    diagnosticMessage.append(rmContext.getNodeLabelManager()\n+        .getResourceByLabel(appAMNodePartitionName, Resources.none()));\n+    diagnosticMessage.append(\" ; \");\n+    diagnosticMessage.append(\"Queue\u0027s Absolute capacity \u003d \");\n+    diagnosticMessage.append(\n+        queueCapacities.getAbsoluteCapacity(appAMNodePartitionName) * 100);\n+    diagnosticMessage.append(\" % ; \");\n+    diagnosticMessage.append(\"Queue\u0027s Absolute used capacity \u003d \");\n+    diagnosticMessage.append(\n+        queueCapacities.getAbsoluteUsedCapacity(appAMNodePartitionName) * 100);\n+    diagnosticMessage.append(\" % ; \");\n+    diagnosticMessage.append(\"Queue\u0027s Absolute max capacity \u003d \");\n+    diagnosticMessage.append(\n+        queueCapacities.getAbsoluteMaximumCapacity(appAMNodePartitionName)\n+            * 100);\n+    diagnosticMessage.append(\" % ; \");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void getActivedAppDiagnosticMessage(\n      StringBuilder diagnosticMessage) {\n    LeafQueue queue \u003d getCSLeafQueue();\n    QueueCapacities queueCapacities \u003d queue.getQueueCapacities();\n    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n    diagnosticMessage.append(\" ; \");\n    diagnosticMessage.append(\"Partition Resource \u003d \");\n    diagnosticMessage.append(rmContext.getNodeLabelManager()\n        .getResourceByLabel(appAMNodePartitionName, Resources.none()));\n    diagnosticMessage.append(\" ; \");\n    diagnosticMessage.append(\"Queue\u0027s Absolute capacity \u003d \");\n    diagnosticMessage.append(\n        queueCapacities.getAbsoluteCapacity(appAMNodePartitionName) * 100);\n    diagnosticMessage.append(\" % ; \");\n    diagnosticMessage.append(\"Queue\u0027s Absolute used capacity \u003d \");\n    diagnosticMessage.append(\n        queueCapacities.getAbsoluteUsedCapacity(appAMNodePartitionName) * 100);\n    diagnosticMessage.append(\" % ; \");\n    diagnosticMessage.append(\"Queue\u0027s Absolute max capacity \u003d \");\n    diagnosticMessage.append(\n        queueCapacities.getAbsoluteMaximumCapacity(appAMNodePartitionName)\n            * 100);\n    diagnosticMessage.append(\" % ; \");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
    }
  }
}