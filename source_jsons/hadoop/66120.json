{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Invoker.java",
  "functionName": "maybeRetry",
  "functionId": "maybeRetry___doRetry-boolean__action-String__path-String(annotations-@Nullable)__idempotent-boolean__retrying-Retried__operation-Operation__T__",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Invoker.java",
  "functionStartLine": 334,
  "functionEndLine": 351,
  "numCommitsSeen": 12,
  "timeTaken": 1886,
  "changeHistory": [
    "a36274d69947648dbe82721220cc5240ec5d396d"
  ],
  "changeHistoryShort": {
    "a36274d69947648dbe82721220cc5240ec5d396d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "diff": "@@ -0,0 +1,18 @@\n+  public \u003cT\u003e T maybeRetry(\n+      boolean doRetry,\n+      String action,\n+      @Nullable String path,\n+      boolean idempotent,\n+      Retried retrying,\n+      Operation\u003cT\u003e operation)\n+      throws IOException {\n+    if (doRetry) {\n+      return retryUntranslated(\n+          toDescription(action, path),\n+          idempotent,\n+          retrying,\n+          () -\u003e once(action, path, operation));\n+    } else {\n+      return once(action, path, operation);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e T maybeRetry(\n      boolean doRetry,\n      String action,\n      @Nullable String path,\n      boolean idempotent,\n      Retried retrying,\n      Operation\u003cT\u003e operation)\n      throws IOException {\n    if (doRetry) {\n      return retryUntranslated(\n          toDescription(action, path),\n          idempotent,\n          retrying,\n          () -\u003e once(action, path, operation));\n    } else {\n      return once(action, path, operation);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Invoker.java"
    }
  }
}