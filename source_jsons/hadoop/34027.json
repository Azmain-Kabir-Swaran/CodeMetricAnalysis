{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NumaResourceAllocator.java",
  "functionName": "allocateNumaNodes",
  "functionId": "allocateNumaNodes___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/numa/NumaResourceAllocator.java",
  "functionStartLine": 216,
  "functionEndLine": 231,
  "numCommitsSeen": 3,
  "timeTaken": 800,
  "changeHistory": [
    "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd"
  ],
  "changeHistoryShort": {
    "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5764. NUMA awareness support for launching containers. Contributed by Devaraj K.\n",
      "commitDate": "13/03/18 12:36 PM",
      "commitName": "a82d4a2e3a6a5448e371cef0cb86d5dbe4871ccd",
      "commitAuthor": "Miklos Szegedi",
      "diff": "@@ -0,0 +1,16 @@\n+  public synchronized NumaResourceAllocation allocateNumaNodes(\n+      Container container) throws ResourceHandlerException {\n+    NumaResourceAllocation allocation \u003d allocate(container.getContainerId(),\n+        container.getResource());\n+    if (allocation !\u003d null) {\n+      try {\n+        // Update state store.\n+        context.getNMStateStore().storeAssignedResources(container,\n+            NUMA_RESOURCE_TYPE, Arrays.asList(allocation));\n+      } catch (IOException e) {\n+        releaseNumaResource(container.getContainerId());\n+        throw new ResourceHandlerException(e);\n+      }\n+    }\n+    return allocation;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized NumaResourceAllocation allocateNumaNodes(\n      Container container) throws ResourceHandlerException {\n    NumaResourceAllocation allocation \u003d allocate(container.getContainerId(),\n        container.getResource());\n    if (allocation !\u003d null) {\n      try {\n        // Update state store.\n        context.getNMStateStore().storeAssignedResources(container,\n            NUMA_RESOURCE_TYPE, Arrays.asList(allocation));\n      } catch (IOException e) {\n        releaseNumaResource(container.getContainerId());\n        throw new ResourceHandlerException(e);\n      }\n    }\n    return allocation;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/numa/NumaResourceAllocator.java"
    }
  }
}