{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CountersStrings.java",
  "functionName": "toEscapedCompactString",
  "functionId": "toEscapedCompactString___counters-T",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
  "functionStartLine": 153,
  "functionEndLine": 161,
  "numCommitsSeen": 5,
  "timeTaken": 1537,
  "changeHistory": [
    "3ba18362f2a4b83635b89aa0adc5ebaf27d9ca83",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "24676e8c2ef48e67265d33c053badb31aecad616"
  ],
  "changeHistoryShort": {
    "3ba18362f2a4b83635b89aa0adc5ebaf27d9ca83": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "24676e8c2ef48e67265d33c053badb31aecad616": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ba18362f2a4b83635b89aa0adc5ebaf27d9ca83": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5905. CountersStrings.toEscapedCompactStrings outputs unnecessary null strings. Contributed by Akira AJISAKA.\n",
      "commitDate": "03/05/15 11:02 PM",
      "commitName": "3ba18362f2a4b83635b89aa0adc5ebaf27d9ca83",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "23/10/12 1:57 PM",
      "commitNameOld": "def0b949d442ecd27ff1a9623405624db691ecfe",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 922.38,
      "commitsBetweenForRepo": 6487,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,9 @@\n   String toEscapedCompactString(T counters) {\n-    String[] groupsArray;\n-    int length \u003d 0;\n+    StringBuilder builder \u003d new StringBuilder();\n     synchronized(counters) {\n-      groupsArray \u003d new String[counters.countCounters()];\n-      int i \u003d 0;\n-      // First up, obtain the escaped string for each group so that we can\n-      // determine the buffer length apriori.\n       for (G group : counters) {\n-        String escapedString \u003d toEscapedCompactString(group);\n-        groupsArray[i++] \u003d escapedString;\n-        length +\u003d escapedString.length();\n+        builder.append(toEscapedCompactString(group));\n       }\n     }\n-\n-    // Now construct the buffer\n-    StringBuilder builder \u003d new StringBuilder(length);\n-    for (String group : groupsArray) {\n-      builder.append(group);\n-    }\n     return builder.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String toEscapedCompactString(T counters) {\n    StringBuilder builder \u003d new StringBuilder();\n    synchronized(counters) {\n      for (G group : counters) {\n        builder.append(toEscapedCompactString(group));\n      }\n    }\n    return builder.toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  String toEscapedCompactString(T counters) {\n    String[] groupsArray;\n    int length \u003d 0;\n    synchronized(counters) {\n      groupsArray \u003d new String[counters.countCounters()];\n      int i \u003d 0;\n      // First up, obtain the escaped string for each group so that we can\n      // determine the buffer length apriori.\n      for (G group : counters) {\n        String escapedString \u003d toEscapedCompactString(group);\n        groupsArray[i++] \u003d escapedString;\n        length +\u003d escapedString.length();\n      }\n    }\n\n    // Now construct the buffer\n    StringBuilder builder \u003d new StringBuilder(length);\n    for (String group : groupsArray) {\n      builder.append(group);\n    }\n    return builder.toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  String toEscapedCompactString(T counters) {\n    String[] groupsArray;\n    int length \u003d 0;\n    synchronized(counters) {\n      groupsArray \u003d new String[counters.countCounters()];\n      int i \u003d 0;\n      // First up, obtain the escaped string for each group so that we can\n      // determine the buffer length apriori.\n      for (G group : counters) {\n        String escapedString \u003d toEscapedCompactString(group);\n        groupsArray[i++] \u003d escapedString;\n        length +\u003d escapedString.length();\n      }\n    }\n\n    // Now construct the buffer\n    StringBuilder builder \u003d new StringBuilder(length);\n    for (String group : groupsArray) {\n      builder.append(group);\n    }\n    return builder.toString();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java"
      }
    },
    "24676e8c2ef48e67265d33c053badb31aecad616": {
      "type": "Yintroduced",
      "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 4:25 PM",
      "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,22 @@\n+  String toEscapedCompactString(T counters) {\n+    String[] groupsArray;\n+    int length \u003d 0;\n+    synchronized(counters) {\n+      groupsArray \u003d new String[counters.countCounters()];\n+      int i \u003d 0;\n+      // First up, obtain the escaped string for each group so that we can\n+      // determine the buffer length apriori.\n+      for (G group : counters) {\n+        String escapedString \u003d toEscapedCompactString(group);\n+        groupsArray[i++] \u003d escapedString;\n+        length +\u003d escapedString.length();\n+      }\n+    }\n+\n+    // Now construct the buffer\n+    StringBuilder builder \u003d new StringBuilder(length);\n+    for (String group : groupsArray) {\n+      builder.append(group);\n+    }\n+    return builder.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  String toEscapedCompactString(T counters) {\n    String[] groupsArray;\n    int length \u003d 0;\n    synchronized(counters) {\n      groupsArray \u003d new String[counters.countCounters()];\n      int i \u003d 0;\n      // First up, obtain the escaped string for each group so that we can\n      // determine the buffer length apriori.\n      for (G group : counters) {\n        String escapedString \u003d toEscapedCompactString(group);\n        groupsArray[i++] \u003d escapedString;\n        length +\u003d escapedString.length();\n      }\n    }\n\n    // Now construct the buffer\n    StringBuilder builder \u003d new StringBuilder(length);\n    for (String group : groupsArray) {\n      builder.append(group);\n    }\n    return builder.toString();\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/CountersStrings.java"
    }
  }
}