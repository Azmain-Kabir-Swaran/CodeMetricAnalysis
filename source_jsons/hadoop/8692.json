{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLogLoader.java",
  "functionName": "scanEditLog",
  "functionId": "scanEditLog___in-EditLogInputStream__maxTxIdToScan-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
  "functionStartLine": 1272,
  "functionEndLine": 1308,
  "numCommitsSeen": 352,
  "timeTaken": 4830,
  "changeHistory": [
    "35e0a01d7bc3149bf8b941fd85d7807d9906d27b",
    "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
    "9dab514b22f49322738935cfd915c2b4eba50b88"
  ],
  "changeHistoryShort": {
    "35e0a01d7bc3149bf8b941fd85d7807d9906d27b": "Ybodychange",
    "53bad4eb008ec553dcdbe01e7ae975dcecde6590": "Ymultichange(Yparameterchange,Ybodychange)",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": "Ybodychange",
    "9dab514b22f49322738935cfd915c2b4eba50b88": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35e0a01d7bc3149bf8b941fd85d7807d9906d27b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14557. JournalNode error: Can\u0027t scan a pre-transactional edit log. Contributed by Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "06/08/19 7:57 AM",
      "commitName": "35e0a01d7bc3149bf8b941fd85d7807d9906d27b",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "11/01/19 10:54 AM",
      "commitNameOld": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 206.84,
      "commitsBetweenForRepo": 1523,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,37 @@\n   static EditLogValidation scanEditLog(EditLogInputStream in,\n       long maxTxIdToScan) {\n     long lastPos;\n     long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n     long numValid \u003d 0;\n     while (true) {\n       long txid;\n       lastPos \u003d in.getPosition();\n       try {\n         if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n           break;\n         }\n       } catch (Throwable t) {\n         FSImage.LOG.warn(\"Caught exception after scanning through \"\n             + numValid + \" ops from \" + in\n             + \" while determining its valid length. Position was \"\n             + lastPos, t);\n         in.resync();\n         FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n+        if (in.getPosition() \u003c\u003d lastPos) {\n+          FSImage.LOG.warn(\"After resync, the position, {} is not greater \" +\n+              \"than the previous position {}. Skipping remainder of this log.\",\n+              in.getPosition(), lastPos);\n+          break;\n+        }\n         continue;\n       }\n       if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n         lastTxId \u003d txid;\n       }\n       if (lastTxId \u003e\u003d maxTxIdToScan) {\n         break;\n       }\n       numValid++;\n     }\n     return new EditLogValidation(lastPos, lastTxId, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static EditLogValidation scanEditLog(EditLogInputStream in,\n      long maxTxIdToScan) {\n    long lastPos;\n    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n    long numValid \u003d 0;\n    while (true) {\n      long txid;\n      lastPos \u003d in.getPosition();\n      try {\n        if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n          break;\n        }\n      } catch (Throwable t) {\n        FSImage.LOG.warn(\"Caught exception after scanning through \"\n            + numValid + \" ops from \" + in\n            + \" while determining its valid length. Position was \"\n            + lastPos, t);\n        in.resync();\n        FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n        if (in.getPosition() \u003c\u003d lastPos) {\n          FSImage.LOG.warn(\"After resync, the position, {} is not greater \" +\n              \"than the previous position {}. Skipping remainder of this log.\",\n              in.getPosition(), lastPos);\n          break;\n        }\n        continue;\n      }\n      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n        lastTxId \u003d txid;\n      }\n      if (lastTxId \u003e\u003d maxTxIdToScan) {\n        break;\n      }\n      numValid++;\n    }\n    return new EditLogValidation(lastPos, lastTxId, false);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
      "extendedDetails": {}
    },
    "53bad4eb008ec553dcdbe01e7ae975dcecde6590": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8996. Consolidate validateLog and scanLog in FJM#EditLogFile (Zhe Zhang via Colin P. McCabe)\n",
      "commitDate": "14/09/15 3:22 PM",
      "commitName": "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8996. Consolidate validateLog and scanLog in FJM#EditLogFile (Zhe Zhang via Colin P. McCabe)\n",
          "commitDate": "14/09/15 3:22 PM",
          "commitName": "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "03/09/15 11:22 AM",
          "commitNameOld": "53c38cc89ab979ec47557dcfa7affbad20578c0a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 11.17,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  static EditLogValidation scanEditLog(EditLogInputStream in) {\n-    long lastPos \u003d 0;\n+  static EditLogValidation scanEditLog(EditLogInputStream in,\n+      long maxTxIdToScan) {\n+    long lastPos;\n     long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n     long numValid \u003d 0;\n-    FSEditLogOp op \u003d null;\n     while (true) {\n+      long txid;\n       lastPos \u003d in.getPosition();\n       try {\n-        if ((op \u003d in.readOp()) \u003d\u003d null) { // TODO\n+        if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n           break;\n         }\n       } catch (Throwable t) {\n-        FSImage.LOG.warn(\"Caught exception after reading \" + numValid +\n-            \" ops from \" + in + \" while determining its valid length.\" +\n-            \"Position was \" + lastPos, t);\n+        FSImage.LOG.warn(\"Caught exception after scanning through \"\n+            + numValid + \" ops from \" + in\n+            + \" while determining its valid length. Position was \"\n+            + lastPos, t);\n         in.resync();\n         FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n         continue;\n       }\n-      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID\n-          || op.getTransactionId() \u003e lastTxId) {\n-        lastTxId \u003d op.getTransactionId();\n+      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n+        lastTxId \u003d txid;\n+      }\n+      if (lastTxId \u003e\u003d maxTxIdToScan) {\n+        break;\n       }\n       numValid++;\n     }\n     return new EditLogValidation(lastPos, lastTxId, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static EditLogValidation scanEditLog(EditLogInputStream in,\n      long maxTxIdToScan) {\n    long lastPos;\n    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n    long numValid \u003d 0;\n    while (true) {\n      long txid;\n      lastPos \u003d in.getPosition();\n      try {\n        if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n          break;\n        }\n      } catch (Throwable t) {\n        FSImage.LOG.warn(\"Caught exception after scanning through \"\n            + numValid + \" ops from \" + in\n            + \" while determining its valid length. Position was \"\n            + lastPos, t);\n        in.resync();\n        FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n        continue;\n      }\n      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n        lastTxId \u003d txid;\n      }\n      if (lastTxId \u003e\u003d maxTxIdToScan) {\n        break;\n      }\n      numValid++;\n    }\n    return new EditLogValidation(lastPos, lastTxId, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
          "extendedDetails": {
            "oldValue": "[in-EditLogInputStream]",
            "newValue": "[in-EditLogInputStream, maxTxIdToScan-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8996. Consolidate validateLog and scanLog in FJM#EditLogFile (Zhe Zhang via Colin P. McCabe)\n",
          "commitDate": "14/09/15 3:22 PM",
          "commitName": "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "03/09/15 11:22 AM",
          "commitNameOld": "53c38cc89ab979ec47557dcfa7affbad20578c0a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 11.17,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  static EditLogValidation scanEditLog(EditLogInputStream in) {\n-    long lastPos \u003d 0;\n+  static EditLogValidation scanEditLog(EditLogInputStream in,\n+      long maxTxIdToScan) {\n+    long lastPos;\n     long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n     long numValid \u003d 0;\n-    FSEditLogOp op \u003d null;\n     while (true) {\n+      long txid;\n       lastPos \u003d in.getPosition();\n       try {\n-        if ((op \u003d in.readOp()) \u003d\u003d null) { // TODO\n+        if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n           break;\n         }\n       } catch (Throwable t) {\n-        FSImage.LOG.warn(\"Caught exception after reading \" + numValid +\n-            \" ops from \" + in + \" while determining its valid length.\" +\n-            \"Position was \" + lastPos, t);\n+        FSImage.LOG.warn(\"Caught exception after scanning through \"\n+            + numValid + \" ops from \" + in\n+            + \" while determining its valid length. Position was \"\n+            + lastPos, t);\n         in.resync();\n         FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n         continue;\n       }\n-      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID\n-          || op.getTransactionId() \u003e lastTxId) {\n-        lastTxId \u003d op.getTransactionId();\n+      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n+        lastTxId \u003d txid;\n+      }\n+      if (lastTxId \u003e\u003d maxTxIdToScan) {\n+        break;\n       }\n       numValid++;\n     }\n     return new EditLogValidation(lastPos, lastTxId, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static EditLogValidation scanEditLog(EditLogInputStream in,\n      long maxTxIdToScan) {\n    long lastPos;\n    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n    long numValid \u003d 0;\n    while (true) {\n      long txid;\n      lastPos \u003d in.getPosition();\n      try {\n        if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n          break;\n        }\n      } catch (Throwable t) {\n        FSImage.LOG.warn(\"Caught exception after scanning through \"\n            + numValid + \" ops from \" + in\n            + \" while determining its valid length. Position was \"\n            + lastPos, t);\n        in.resync();\n        FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n        continue;\n      }\n      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n        lastTxId \u003d txid;\n      }\n      if (lastTxId \u003e\u003d maxTxIdToScan) {\n        break;\n      }\n      numValid++;\n    }\n    return new EditLogValidation(lastPos, lastTxId, false);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8249. Separate HdfsConstants into the client and the server side class. Contributed by Haohui Mai.\n",
      "commitDate": "02/05/15 10:03 AM",
      "commitName": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/04/15 1:41 PM",
      "commitNameOld": "c55d609053fe24b3a50fbe17dc1b47717b453ed6",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.85,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   static EditLogValidation scanEditLog(EditLogInputStream in) {\n     long lastPos \u003d 0;\n-    long lastTxId \u003d HdfsConstants.INVALID_TXID;\n+    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n     long numValid \u003d 0;\n     FSEditLogOp op \u003d null;\n     while (true) {\n       lastPos \u003d in.getPosition();\n       try {\n         if ((op \u003d in.readOp()) \u003d\u003d null) { // TODO\n           break;\n         }\n       } catch (Throwable t) {\n         FSImage.LOG.warn(\"Caught exception after reading \" + numValid +\n             \" ops from \" + in + \" while determining its valid length.\" +\n             \"Position was \" + lastPos, t);\n         in.resync();\n         FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n         continue;\n       }\n-      if (lastTxId \u003d\u003d HdfsConstants.INVALID_TXID\n+      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID\n           || op.getTransactionId() \u003e lastTxId) {\n         lastTxId \u003d op.getTransactionId();\n       }\n       numValid++;\n     }\n     return new EditLogValidation(lastPos, lastTxId, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static EditLogValidation scanEditLog(EditLogInputStream in) {\n    long lastPos \u003d 0;\n    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n    long numValid \u003d 0;\n    FSEditLogOp op \u003d null;\n    while (true) {\n      lastPos \u003d in.getPosition();\n      try {\n        if ((op \u003d in.readOp()) \u003d\u003d null) { // TODO\n          break;\n        }\n      } catch (Throwable t) {\n        FSImage.LOG.warn(\"Caught exception after reading \" + numValid +\n            \" ops from \" + in + \" while determining its valid length.\" +\n            \"Position was \" + lastPos, t);\n        in.resync();\n        FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n        continue;\n      }\n      if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID\n          || op.getTransactionId() \u003e lastTxId) {\n        lastTxId \u003d op.getTransactionId();\n      }\n      numValid++;\n    }\n    return new EditLogValidation(lastPos, lastTxId, false);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java",
      "extendedDetails": {}
    },
    "9dab514b22f49322738935cfd915c2b4eba50b88": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 4:06 PM",
      "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,27 @@\n+  static EditLogValidation scanEditLog(EditLogInputStream in) {\n+    long lastPos \u003d 0;\n+    long lastTxId \u003d HdfsConstants.INVALID_TXID;\n+    long numValid \u003d 0;\n+    FSEditLogOp op \u003d null;\n+    while (true) {\n+      lastPos \u003d in.getPosition();\n+      try {\n+        if ((op \u003d in.readOp()) \u003d\u003d null) { // TODO\n+          break;\n+        }\n+      } catch (Throwable t) {\n+        FSImage.LOG.warn(\"Caught exception after reading \" + numValid +\n+            \" ops from \" + in + \" while determining its valid length.\" +\n+            \"Position was \" + lastPos, t);\n+        in.resync();\n+        FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n+        continue;\n+      }\n+      if (lastTxId \u003d\u003d HdfsConstants.INVALID_TXID\n+          || op.getTransactionId() \u003e lastTxId) {\n+        lastTxId \u003d op.getTransactionId();\n+      }\n+      numValid++;\n+    }\n+    return new EditLogValidation(lastPos, lastTxId, false);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static EditLogValidation scanEditLog(EditLogInputStream in) {\n    long lastPos \u003d 0;\n    long lastTxId \u003d HdfsConstants.INVALID_TXID;\n    long numValid \u003d 0;\n    FSEditLogOp op \u003d null;\n    while (true) {\n      lastPos \u003d in.getPosition();\n      try {\n        if ((op \u003d in.readOp()) \u003d\u003d null) { // TODO\n          break;\n        }\n      } catch (Throwable t) {\n        FSImage.LOG.warn(\"Caught exception after reading \" + numValid +\n            \" ops from \" + in + \" while determining its valid length.\" +\n            \"Position was \" + lastPos, t);\n        in.resync();\n        FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n        continue;\n      }\n      if (lastTxId \u003d\u003d HdfsConstants.INVALID_TXID\n          || op.getTransactionId() \u003e lastTxId) {\n        lastTxId \u003d op.getTransactionId();\n      }\n      numValid++;\n    }\n    return new EditLogValidation(lastPos, lastTxId, false);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java"
    }
  }
}