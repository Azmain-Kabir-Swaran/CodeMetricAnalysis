{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeProtocolClientSideTranslatorPB.java",
  "functionName": "registerDatanode",
  "functionId": "registerDatanode___registration-DatanodeRegistration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolClientSideTranslatorPB.java",
  "functionStartLine": 121,
  "functionEndLine": 132,
  "numCommitsSeen": 74,
  "timeTaken": 3028,
  "changeHistory": [
    "9e108e61fb28244326d7cf4bb31d175eb75d2636",
    "28eadb7cd71e99d563fb5c41aec563ab11e293e5",
    "38a19bc293dec6221ae96e304fc6ab660d94e706"
  ],
  "changeHistoryShort": {
    "9e108e61fb28244326d7cf4bb31d175eb75d2636": "Ymultichange(Yparameterchange,Ybodychange)",
    "28eadb7cd71e99d563fb5c41aec563ab11e293e5": "Ymultichange(Yparameterchange,Ybodychange)",
    "38a19bc293dec6221ae96e304fc6ab660d94e706": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e108e61fb28244326d7cf4bb31d175eb75d2636": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3086. Change Datanode not to send storage list in registration.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303318 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/12 2:07 AM",
      "commitName": "9e108e61fb28244326d7cf4bb31d175eb75d2636",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3086. Change Datanode not to send storage list in registration.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303318 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/03/12 2:07 AM",
          "commitName": "9e108e61fb28244326d7cf4bb31d175eb75d2636",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "19/03/12 3:09 PM",
          "commitNameOld": "6326605acb5a5bf48d994278c9d3a39733679e81",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 1.46,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,12 @@\n-  public DatanodeRegistration registerDatanode(DatanodeRegistration registration,\n-      DatanodeStorage[] storages) throws IOException {\n+  public DatanodeRegistration registerDatanode(DatanodeRegistration registration\n+      ) throws IOException {\n     RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n         .newBuilder().setRegistration(PBHelper.convert(registration));\n-    for (DatanodeStorage s : storages) {\n-      builder.addStorages(PBHelper.convert(s));\n-    }\n-    \n     RegisterDatanodeResponseProto resp;\n     try {\n       resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n     } catch (ServiceException se) {\n       throw ProtobufHelper.getRemoteException(se);\n     }\n     return PBHelper.convert(resp.getRegistration());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DatanodeRegistration registerDatanode(DatanodeRegistration registration\n      ) throws IOException {\n    RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n        .newBuilder().setRegistration(PBHelper.convert(registration));\n    RegisterDatanodeResponseProto resp;\n    try {\n      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n    } catch (ServiceException se) {\n      throw ProtobufHelper.getRemoteException(se);\n    }\n    return PBHelper.convert(resp.getRegistration());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolClientSideTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[registration-DatanodeRegistration, storages-DatanodeStorage[]]",
            "newValue": "[registration-DatanodeRegistration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3086. Change Datanode not to send storage list in registration.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303318 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/03/12 2:07 AM",
          "commitName": "9e108e61fb28244326d7cf4bb31d175eb75d2636",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "19/03/12 3:09 PM",
          "commitNameOld": "6326605acb5a5bf48d994278c9d3a39733679e81",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 1.46,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,12 @@\n-  public DatanodeRegistration registerDatanode(DatanodeRegistration registration,\n-      DatanodeStorage[] storages) throws IOException {\n+  public DatanodeRegistration registerDatanode(DatanodeRegistration registration\n+      ) throws IOException {\n     RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n         .newBuilder().setRegistration(PBHelper.convert(registration));\n-    for (DatanodeStorage s : storages) {\n-      builder.addStorages(PBHelper.convert(s));\n-    }\n-    \n     RegisterDatanodeResponseProto resp;\n     try {\n       resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n     } catch (ServiceException se) {\n       throw ProtobufHelper.getRemoteException(se);\n     }\n     return PBHelper.convert(resp.getRegistration());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DatanodeRegistration registerDatanode(DatanodeRegistration registration\n      ) throws IOException {\n    RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n        .newBuilder().setRegistration(PBHelper.convert(registration));\n    RegisterDatanodeResponseProto resp;\n    try {\n      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n    } catch (ServiceException se) {\n      throw ProtobufHelper.getRemoteException(se);\n    }\n    return PBHelper.convert(resp.getRegistration());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolClientSideTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "28eadb7cd71e99d563fb5c41aec563ab11e293e5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241519 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/12 8:59 AM",
      "commitName": "28eadb7cd71e99d563fb5c41aec563ab11e293e5",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241519 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/02/12 8:59 AM",
          "commitName": "28eadb7cd71e99d563fb5c41aec563ab11e293e5",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "06/02/12 5:33 AM",
          "commitNameOld": "2a9e430ff9327ad311db7954400ff664ae66ec45",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.14,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,16 @@\n-  public DatanodeRegistration registerDatanode(DatanodeRegistration registration)\n-      throws IOException {\n-    RegisterDatanodeRequestProto req \u003d RegisterDatanodeRequestProto\n-        .newBuilder().setRegistration(PBHelper.convert(registration)).build();\n+  public DatanodeRegistration registerDatanode(DatanodeRegistration registration,\n+      DatanodeStorage[] storages) throws IOException {\n+    RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n+        .newBuilder().setRegistration(PBHelper.convert(registration));\n+    for (DatanodeStorage s : storages) {\n+      builder.addStorages(PBHelper.convert(s));\n+    }\n+    \n     RegisterDatanodeResponseProto resp;\n     try {\n-      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, req);\n+      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n     } catch (ServiceException se) {\n       throw ProtobufHelper.getRemoteException(se);\n     }\n     return PBHelper.convert(resp.getRegistration());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DatanodeRegistration registerDatanode(DatanodeRegistration registration,\n      DatanodeStorage[] storages) throws IOException {\n    RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n        .newBuilder().setRegistration(PBHelper.convert(registration));\n    for (DatanodeStorage s : storages) {\n      builder.addStorages(PBHelper.convert(s));\n    }\n    \n    RegisterDatanodeResponseProto resp;\n    try {\n      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n    } catch (ServiceException se) {\n      throw ProtobufHelper.getRemoteException(se);\n    }\n    return PBHelper.convert(resp.getRegistration());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolClientSideTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[registration-DatanodeRegistration]",
            "newValue": "[registration-DatanodeRegistration, storages-DatanodeStorage[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241519 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/02/12 8:59 AM",
          "commitName": "28eadb7cd71e99d563fb5c41aec563ab11e293e5",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "06/02/12 5:33 AM",
          "commitNameOld": "2a9e430ff9327ad311db7954400ff664ae66ec45",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.14,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,16 @@\n-  public DatanodeRegistration registerDatanode(DatanodeRegistration registration)\n-      throws IOException {\n-    RegisterDatanodeRequestProto req \u003d RegisterDatanodeRequestProto\n-        .newBuilder().setRegistration(PBHelper.convert(registration)).build();\n+  public DatanodeRegistration registerDatanode(DatanodeRegistration registration,\n+      DatanodeStorage[] storages) throws IOException {\n+    RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n+        .newBuilder().setRegistration(PBHelper.convert(registration));\n+    for (DatanodeStorage s : storages) {\n+      builder.addStorages(PBHelper.convert(s));\n+    }\n+    \n     RegisterDatanodeResponseProto resp;\n     try {\n-      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, req);\n+      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n     } catch (ServiceException se) {\n       throw ProtobufHelper.getRemoteException(se);\n     }\n     return PBHelper.convert(resp.getRegistration());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DatanodeRegistration registerDatanode(DatanodeRegistration registration,\n      DatanodeStorage[] storages) throws IOException {\n    RegisterDatanodeRequestProto.Builder builder \u003d RegisterDatanodeRequestProto\n        .newBuilder().setRegistration(PBHelper.convert(registration));\n    for (DatanodeStorage s : storages) {\n      builder.addStorages(PBHelper.convert(s));\n    }\n    \n    RegisterDatanodeResponseProto resp;\n    try {\n      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, builder.build());\n    } catch (ServiceException se) {\n      throw ProtobufHelper.getRemoteException(se);\n    }\n    return PBHelper.convert(resp.getRegistration());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolClientSideTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "38a19bc293dec6221ae96e304fc6ab660d94e706": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/11 12:02 PM",
      "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
      "commitAuthor": "Jitendra Nath Pandey",
      "diff": "@@ -0,0 +1,12 @@\n+  public DatanodeRegistration registerDatanode(DatanodeRegistration registration)\n+      throws IOException {\n+    RegisterDatanodeRequestProto req \u003d RegisterDatanodeRequestProto\n+        .newBuilder().setRegistration(PBHelper.convert(registration)).build();\n+    RegisterDatanodeResponseProto resp;\n+    try {\n+      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, req);\n+    } catch (ServiceException se) {\n+      throw ProtobufHelper.getRemoteException(se);\n+    }\n+    return PBHelper.convert(resp.getRegistration());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public DatanodeRegistration registerDatanode(DatanodeRegistration registration)\n      throws IOException {\n    RegisterDatanodeRequestProto req \u003d RegisterDatanodeRequestProto\n        .newBuilder().setRegistration(PBHelper.convert(registration)).build();\n    RegisterDatanodeResponseProto resp;\n    try {\n      resp \u003d rpcProxy.registerDatanode(NULL_CONTROLLER, req);\n    } catch (ServiceException se) {\n      throw ProtobufHelper.getRemoteException(se);\n    }\n    return PBHelper.convert(resp.getRegistration());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolClientSideTranslatorPB.java"
    }
  }
}