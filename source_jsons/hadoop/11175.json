{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataNodeUGIProvider.java",
  "functionName": "nonTokenUGI",
  "functionId": "nonTokenUGI___usernameFromQuery-String__doAsUserFromQuery-String__remoteUser-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/DataNodeUGIProvider.java",
  "functionStartLine": 137,
  "functionEndLine": 148,
  "numCommitsSeen": 6,
  "timeTaken": 889,
  "changeHistory": [
    "fe5624b85d71720ae9da90a01cad9a3d1ea41160"
  ],
  "changeHistoryShort": {
    "fe5624b85d71720ae9da90a01cad9a3d1ea41160": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fe5624b85d71720ae9da90a01cad9a3d1ea41160": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8855. Webhdfs client leaks active NameNode connections. Contributed by Xiaobing Zhou.\n",
      "commitDate": "24/11/15 12:47 PM",
      "commitName": "fe5624b85d71720ae9da90a01cad9a3d1ea41160",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,12 @@\n+  private UserGroupInformation nonTokenUGI(String usernameFromQuery,\n+      String doAsUserFromQuery, String remoteUser) throws IOException {\n+\n+    UserGroupInformation ugi \u003d UserGroupInformation\n+        .createRemoteUser(remoteUser);\n+    JspHelper.checkUsername(ugi.getShortUserName(), usernameFromQuery);\n+    if (doAsUserFromQuery !\u003d null) {\n+      // create and attempt to authorize a proxy user\n+      ugi \u003d UserGroupInformation.createProxyUser(doAsUserFromQuery, ugi);\n+    }\n+    return ugi;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation nonTokenUGI(String usernameFromQuery,\n      String doAsUserFromQuery, String remoteUser) throws IOException {\n\n    UserGroupInformation ugi \u003d UserGroupInformation\n        .createRemoteUser(remoteUser);\n    JspHelper.checkUsername(ugi.getShortUserName(), usernameFromQuery);\n    if (doAsUserFromQuery !\u003d null) {\n      // create and attempt to authorize a proxy user\n      ugi \u003d UserGroupInformation.createProxyUser(doAsUserFromQuery, ugi);\n    }\n    return ugi;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/DataNodeUGIProvider.java"
    }
  }
}