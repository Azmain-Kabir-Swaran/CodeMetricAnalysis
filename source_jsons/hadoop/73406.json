{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProxyCombiner.java",
  "functionName": "combine",
  "functionId": "combine___combinedProxyInterface-Class__T____proxies-Object",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProxyCombiner.java",
  "functionStartLine": 63,
  "functionEndLine": 83,
  "numCommitsSeen": 2,
  "timeTaken": 1154,
  "changeHistory": [
    "c174d50b30abc08a4642614fb35165e79792608b",
    "64f28f9efa2ef3cd9dd54a6c5009029721e030ed"
  ],
  "changeHistoryShort": {
    "c174d50b30abc08a4642614fb35165e79792608b": "Ybodychange",
    "64f28f9efa2ef3cd9dd54a6c5009029721e030ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c174d50b30abc08a4642614fb35165e79792608b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15032. Properly handle InvocationTargetExceptions in the proxy created by ProxyCombiner. This fixes a bug encountered by the HDFS balancer when used with Observer Nodes. Contributed by Erik Krogen.\n",
      "commitDate": "11/12/19 9:39 AM",
      "commitName": "c174d50b30abc08a4642614fb35165e79792608b",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "14/02/19 11:22 AM",
      "commitNameOld": "64f28f9efa2ef3cd9dd54a6c5009029721e030ed",
      "commitAuthorOld": "Erik Krogen",
      "daysBetweenCommits": 299.93,
      "commitsBetweenForRepo": 2129,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public static \u003cT\u003e T combine(Class\u003cT\u003e combinedProxyInterface,\n       Object... proxies) {\n     methodLoop:\n     for (Method m : combinedProxyInterface.getMethods()) {\n       for (Object proxy : proxies) {\n         try {\n           proxy.getClass().getMethod(m.getName(), m.getParameterTypes());\n           continue methodLoop; // go to the next method\n         } catch (NoSuchMethodException nsme) {\n           // Continue to try the next proxy\n         }\n       }\n       throw new IllegalStateException(\"The proxies specified for \"\n           + combinedProxyInterface + \" do not cover method \" + m);\n     }\n \n-    InvocationHandler handler \u003d new CombinedProxyInvocationHandler(proxies);\n+    InvocationHandler handler \u003d\n+        new CombinedProxyInvocationHandler(combinedProxyInterface, proxies);\n     return (T) Proxy.newProxyInstance(combinedProxyInterface.getClassLoader(),\n         new Class[] {combinedProxyInterface}, handler);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T combine(Class\u003cT\u003e combinedProxyInterface,\n      Object... proxies) {\n    methodLoop:\n    for (Method m : combinedProxyInterface.getMethods()) {\n      for (Object proxy : proxies) {\n        try {\n          proxy.getClass().getMethod(m.getName(), m.getParameterTypes());\n          continue methodLoop; // go to the next method\n        } catch (NoSuchMethodException nsme) {\n          // Continue to try the next proxy\n        }\n      }\n      throw new IllegalStateException(\"The proxies specified for \"\n          + combinedProxyInterface + \" do not cover method \" + m);\n    }\n\n    InvocationHandler handler \u003d\n        new CombinedProxyInvocationHandler(combinedProxyInterface, proxies);\n    return (T) Proxy.newProxyInstance(combinedProxyInterface.getClassLoader(),\n        new Class[] {combinedProxyInterface}, handler);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProxyCombiner.java",
      "extendedDetails": {}
    },
    "64f28f9efa2ef3cd9dd54a6c5009029721e030ed": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14162. [SBN read] Allow Balancer to work with Observer node. Add a new ProxyCombiner allowing for multiple related protocols to be combined. Allow AlignmentContext to be passed in NameNodeProxyFactory. Contributed by Erik Krogen.\n",
      "commitDate": "14/02/19 11:22 AM",
      "commitName": "64f28f9efa2ef3cd9dd54a6c5009029721e030ed",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,20 @@\n+  public static \u003cT\u003e T combine(Class\u003cT\u003e combinedProxyInterface,\n+      Object... proxies) {\n+    methodLoop:\n+    for (Method m : combinedProxyInterface.getMethods()) {\n+      for (Object proxy : proxies) {\n+        try {\n+          proxy.getClass().getMethod(m.getName(), m.getParameterTypes());\n+          continue methodLoop; // go to the next method\n+        } catch (NoSuchMethodException nsme) {\n+          // Continue to try the next proxy\n+        }\n+      }\n+      throw new IllegalStateException(\"The proxies specified for \"\n+          + combinedProxyInterface + \" do not cover method \" + m);\n+    }\n+\n+    InvocationHandler handler \u003d new CombinedProxyInvocationHandler(proxies);\n+    return (T) Proxy.newProxyInstance(combinedProxyInterface.getClassLoader(),\n+        new Class[] {combinedProxyInterface}, handler);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T combine(Class\u003cT\u003e combinedProxyInterface,\n      Object... proxies) {\n    methodLoop:\n    for (Method m : combinedProxyInterface.getMethods()) {\n      for (Object proxy : proxies) {\n        try {\n          proxy.getClass().getMethod(m.getName(), m.getParameterTypes());\n          continue methodLoop; // go to the next method\n        } catch (NoSuchMethodException nsme) {\n          // Continue to try the next proxy\n        }\n      }\n      throw new IllegalStateException(\"The proxies specified for \"\n          + combinedProxyInterface + \" do not cover method \" + m);\n    }\n\n    InvocationHandler handler \u003d new CombinedProxyInvocationHandler(proxies);\n    return (T) Proxy.newProxyInstance(combinedProxyInterface.getClassLoader(),\n        new Class[] {combinedProxyInterface}, handler);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProxyCombiner.java"
    }
  }
}