{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeAdminDefaultMonitor.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminDefaultMonitor.java",
  "functionStartLine": 141,
  "functionEndLine": 169,
  "numCommitsSeen": 50,
  "timeTaken": 8797,
  "changeHistory": [
    "c93cb6790e0f1c64efd03d859f907a0522010894",
    "5747f6cff54f79de0e6439d6c77c2ed437989f10",
    "eccc9a40deda212cb367627f6f4cc35f5c619941",
    "79df1e750ef558afed6d166ce225a23061b36aed",
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
    "332a61fd74fd2a9874319232c583ab5d2c53ff03",
    "6ee0d32b98bc3aa5ed42859f1325d5a14fd1722a",
    "9692cfc9ae2ac86c9a2d2b3ac9ca8f8b3bfc7c42",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "b9189f7b158f9c50566a1b591e25e3d76c3b0917",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "c93cb6790e0f1c64efd03d859f907a0522010894": "Ymovefromfile",
    "5747f6cff54f79de0e6439d6c77c2ed437989f10": "Ybodychange",
    "eccc9a40deda212cb367627f6f4cc35f5c619941": "Ybodychange",
    "79df1e750ef558afed6d166ce225a23061b36aed": "Ymultichange(Yfilerename,Ybodychange)",
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": "Ybodychange",
    "332a61fd74fd2a9874319232c583ab5d2c53ff03": "Ybodychange",
    "6ee0d32b98bc3aa5ed42859f1325d5a14fd1722a": "Ybodychange",
    "9692cfc9ae2ac86c9a2d2b3ac9ca8f8b3bfc7c42": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "b9189f7b158f9c50566a1b591e25e3d76c3b0917": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c93cb6790e0f1c64efd03d859f907a0522010894": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-14854. Create improved decommission monitor implementation. Contributed by Stephen O\u0027Donnell.\n\nReviewed-by: Inigo Goiri \u003cinigoiri@apache.org\u003e\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "10/12/19 5:16 PM",
      "commitName": "c93cb6790e0f1c64efd03d859f907a0522010894",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "10/12/19 6:51 AM",
      "commitNameOld": "875a3e97dd4a26fe224a1858c54d1b4512db6be3",
      "commitAuthorOld": "Gabor Bota",
      "daysBetweenCommits": 0.43,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n-    public void run() {\n-      LOG.debug(\"DatanodeAdminMonitor is running.\");\n-      if (!namesystem.isRunning()) {\n-        LOG.info(\"Namesystem is not running, skipping \" +\n-            \"decommissioning/maintenance checks.\");\n-        return;\n-      }\n-      // Reset the checked count at beginning of each iteration\n-      numBlocksChecked \u003d 0;\n-      numBlocksCheckedPerLock \u003d 0;\n-      numNodesChecked \u003d 0;\n-      // Check decommission or maintenance progress.\n-      namesystem.writeLock();\n-      try {\n-        processPendingNodes();\n-        check();\n-      } catch (Exception e) {\n-        LOG.warn(\"DatanodeAdminMonitor caught exception when processing node.\",\n-            e);\n-      } finally {\n-        namesystem.writeUnlock();\n-      }\n-      if (numBlocksChecked + numNodesChecked \u003e 0) {\n-        LOG.info(\"Checked {} blocks and {} nodes this tick. {} nodes are now \" +\n-            \"in maintenance or transitioning state. {} nodes pending.\",\n-            numBlocksChecked, numNodesChecked, outOfServiceNodeBlocks.size(),\n-            pendingNodes.size());\n-      }\n-    }\n\\ No newline at end of file\n+  public void run() {\n+    LOG.debug(\"DatanodeAdminMonitor is running.\");\n+    if (!namesystem.isRunning()) {\n+      LOG.info(\"Namesystem is not running, skipping \" +\n+          \"decommissioning/maintenance checks.\");\n+      return;\n+    }\n+    // Reset the checked count at beginning of each iteration\n+    numBlocksChecked \u003d 0;\n+    numBlocksCheckedPerLock \u003d 0;\n+    numNodesChecked \u003d 0;\n+    // Check decommission or maintenance progress.\n+    namesystem.writeLock();\n+    try {\n+      processPendingNodes();\n+      check();\n+    } catch (Exception e) {\n+      LOG.warn(\"DatanodeAdminMonitor caught exception when processing node.\",\n+          e);\n+    } finally {\n+      namesystem.writeUnlock();\n+    }\n+    if (numBlocksChecked + numNodesChecked \u003e 0) {\n+      LOG.info(\"Checked {} blocks and {} nodes this tick. {} nodes are now \" +\n+              \"in maintenance or transitioning state. {} nodes pending.\",\n+          numBlocksChecked, numNodesChecked, outOfServiceNodeBlocks.size(),\n+          pendingNodes.size());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    LOG.debug(\"DatanodeAdminMonitor is running.\");\n    if (!namesystem.isRunning()) {\n      LOG.info(\"Namesystem is not running, skipping \" +\n          \"decommissioning/maintenance checks.\");\n      return;\n    }\n    // Reset the checked count at beginning of each iteration\n    numBlocksChecked \u003d 0;\n    numBlocksCheckedPerLock \u003d 0;\n    numNodesChecked \u003d 0;\n    // Check decommission or maintenance progress.\n    namesystem.writeLock();\n    try {\n      processPendingNodes();\n      check();\n    } catch (Exception e) {\n      LOG.warn(\"DatanodeAdminMonitor caught exception when processing node.\",\n          e);\n    } finally {\n      namesystem.writeUnlock();\n    }\n    if (numBlocksChecked + numNodesChecked \u003e 0) {\n      LOG.info(\"Checked {} blocks and {} nodes this tick. {} nodes are now \" +\n              \"in maintenance or transitioning state. {} nodes pending.\",\n          numBlocksChecked, numNodesChecked, outOfServiceNodeBlocks.size(),\n          pendingNodes.size());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminDefaultMonitor.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminDefaultMonitor.java",
        "oldMethodName": "run",
        "newMethodName": "run"
      }
    },
    "5747f6cff54f79de0e6439d6c77c2ed437989f10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14624. When decommissioning a node, log remaining blocks to replicate periodically. Contributed by Stephen O\u0027Donnell.\n",
      "commitDate": "11/07/19 8:55 AM",
      "commitName": "5747f6cff54f79de0e6439d6c77c2ed437989f10",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "10/07/19 11:11 AM",
      "commitNameOld": "eccc9a40deda212cb367627f6f4cc35f5c619941",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n     public void run() {\n       LOG.debug(\"DatanodeAdminMonitor is running.\");\n       if (!namesystem.isRunning()) {\n         LOG.info(\"Namesystem is not running, skipping \" +\n             \"decommissioning/maintenance checks.\");\n         return;\n       }\n       // Reset the checked count at beginning of each iteration\n       numBlocksChecked \u003d 0;\n       numBlocksCheckedPerLock \u003d 0;\n       numNodesChecked \u003d 0;\n       // Check decommission or maintenance progress.\n       namesystem.writeLock();\n       try {\n         processPendingNodes();\n         check();\n       } catch (Exception e) {\n         LOG.warn(\"DatanodeAdminMonitor caught exception when processing node.\",\n             e);\n       } finally {\n         namesystem.writeUnlock();\n       }\n       if (numBlocksChecked + numNodesChecked \u003e 0) {\n-        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n-            numNodesChecked);\n+        LOG.info(\"Checked {} blocks and {} nodes this tick. {} nodes are now \" +\n+            \"in maintenance or transitioning state. {} nodes pending.\",\n+            numBlocksChecked, numNodesChecked, outOfServiceNodeBlocks.size(),\n+            pendingNodes.size());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      LOG.debug(\"DatanodeAdminMonitor is running.\");\n      if (!namesystem.isRunning()) {\n        LOG.info(\"Namesystem is not running, skipping \" +\n            \"decommissioning/maintenance checks.\");\n        return;\n      }\n      // Reset the checked count at beginning of each iteration\n      numBlocksChecked \u003d 0;\n      numBlocksCheckedPerLock \u003d 0;\n      numNodesChecked \u003d 0;\n      // Check decommission or maintenance progress.\n      namesystem.writeLock();\n      try {\n        processPendingNodes();\n        check();\n      } catch (Exception e) {\n        LOG.warn(\"DatanodeAdminMonitor caught exception when processing node.\",\n            e);\n      } finally {\n        namesystem.writeUnlock();\n      }\n      if (numBlocksChecked + numNodesChecked \u003e 0) {\n        LOG.info(\"Checked {} blocks and {} nodes this tick. {} nodes are now \" +\n            \"in maintenance or transitioning state. {} nodes pending.\",\n            numBlocksChecked, numNodesChecked, outOfServiceNodeBlocks.size(),\n            pendingNodes.size());\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminManager.java",
      "extendedDetails": {}
    },
    "eccc9a40deda212cb367627f6f4cc35f5c619941": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12703. Exceptions are fatal to decommissioning monitor. Contributed by He Xiaoqiao.\n",
      "commitDate": "10/07/19 11:11 AM",
      "commitName": "eccc9a40deda212cb367627f6f4cc35f5c619941",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "17/06/19 3:18 PM",
      "commitNameOld": "f9a7b442fdd7855e3c7b28e19a12580df48d92bf",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 22.83,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n     public void run() {\n+      LOG.debug(\"DatanodeAdminMonitor is running.\");\n       if (!namesystem.isRunning()) {\n         LOG.info(\"Namesystem is not running, skipping \" +\n             \"decommissioning/maintenance checks.\");\n         return;\n       }\n       // Reset the checked count at beginning of each iteration\n       numBlocksChecked \u003d 0;\n       numBlocksCheckedPerLock \u003d 0;\n       numNodesChecked \u003d 0;\n       // Check decommission or maintenance progress.\n       namesystem.writeLock();\n       try {\n         processPendingNodes();\n         check();\n+      } catch (Exception e) {\n+        LOG.warn(\"DatanodeAdminMonitor caught exception when processing node.\",\n+            e);\n       } finally {\n         namesystem.writeUnlock();\n       }\n       if (numBlocksChecked + numNodesChecked \u003e 0) {\n         LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n             numNodesChecked);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      LOG.debug(\"DatanodeAdminMonitor is running.\");\n      if (!namesystem.isRunning()) {\n        LOG.info(\"Namesystem is not running, skipping \" +\n            \"decommissioning/maintenance checks.\");\n        return;\n      }\n      // Reset the checked count at beginning of each iteration\n      numBlocksChecked \u003d 0;\n      numBlocksCheckedPerLock \u003d 0;\n      numNodesChecked \u003d 0;\n      // Check decommission or maintenance progress.\n      namesystem.writeLock();\n      try {\n        processPendingNodes();\n        check();\n      } catch (Exception e) {\n        LOG.warn(\"DatanodeAdminMonitor caught exception when processing node.\",\n            e);\n      } finally {\n        namesystem.writeUnlock();\n      }\n      if (numBlocksChecked + numNodesChecked \u003e 0) {\n        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n            numNodesChecked);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminManager.java",
      "extendedDetails": {}
    },
    "79df1e750ef558afed6d166ce225a23061b36aed": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-9388. Decommission related code to support Maintenance State for datanodes.\n",
      "commitDate": "02/08/17 2:22 PM",
      "commitName": "79df1e750ef558afed6d166ce225a23061b36aed",
      "commitAuthor": "Manoj Govindassamy",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-9388. Decommission related code to support Maintenance State for datanodes.\n",
          "commitDate": "02/08/17 2:22 PM",
          "commitName": "79df1e750ef558afed6d166ce225a23061b36aed",
          "commitAuthor": "Manoj Govindassamy",
          "commitDateOld": "02/08/17 12:12 PM",
          "commitNameOld": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n     public void run() {\n       if (!namesystem.isRunning()) {\n-        LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n-            + \".\");\n+        LOG.info(\"Namesystem is not running, skipping \" +\n+            \"decommissioning/maintenance checks.\");\n         return;\n       }\n       // Reset the checked count at beginning of each iteration\n       numBlocksChecked \u003d 0;\n       numBlocksCheckedPerLock \u003d 0;\n       numNodesChecked \u003d 0;\n       // Check decommission or maintenance progress.\n       namesystem.writeLock();\n       try {\n         processPendingNodes();\n         check();\n       } finally {\n         namesystem.writeUnlock();\n       }\n       if (numBlocksChecked + numNodesChecked \u003e 0) {\n         LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n             numNodesChecked);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      if (!namesystem.isRunning()) {\n        LOG.info(\"Namesystem is not running, skipping \" +\n            \"decommissioning/maintenance checks.\");\n        return;\n      }\n      // Reset the checked count at beginning of each iteration\n      numBlocksChecked \u003d 0;\n      numBlocksCheckedPerLock \u003d 0;\n      numNodesChecked \u003d 0;\n      // Check decommission or maintenance progress.\n      namesystem.writeLock();\n      try {\n        processPendingNodes();\n        check();\n      } finally {\n        namesystem.writeUnlock();\n      }\n      if (numBlocksChecked + numNodesChecked \u003e 0) {\n        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n            numNodesChecked);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminManager.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9388. Decommission related code to support Maintenance State for datanodes.\n",
          "commitDate": "02/08/17 2:22 PM",
          "commitName": "79df1e750ef558afed6d166ce225a23061b36aed",
          "commitAuthor": "Manoj Govindassamy",
          "commitDateOld": "02/08/17 12:12 PM",
          "commitNameOld": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n     public void run() {\n       if (!namesystem.isRunning()) {\n-        LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n-            + \".\");\n+        LOG.info(\"Namesystem is not running, skipping \" +\n+            \"decommissioning/maintenance checks.\");\n         return;\n       }\n       // Reset the checked count at beginning of each iteration\n       numBlocksChecked \u003d 0;\n       numBlocksCheckedPerLock \u003d 0;\n       numNodesChecked \u003d 0;\n       // Check decommission or maintenance progress.\n       namesystem.writeLock();\n       try {\n         processPendingNodes();\n         check();\n       } finally {\n         namesystem.writeUnlock();\n       }\n       if (numBlocksChecked + numNodesChecked \u003e 0) {\n         LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n             numNodesChecked);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      if (!namesystem.isRunning()) {\n        LOG.info(\"Namesystem is not running, skipping \" +\n            \"decommissioning/maintenance checks.\");\n        return;\n      }\n      // Reset the checked count at beginning of each iteration\n      numBlocksChecked \u003d 0;\n      numBlocksCheckedPerLock \u003d 0;\n      numNodesChecked \u003d 0;\n      // Check decommission or maintenance progress.\n      namesystem.writeLock();\n      try {\n        processPendingNodes();\n        check();\n      } finally {\n        namesystem.writeUnlock();\n      }\n      if (numBlocksChecked + numNodesChecked \u003e 0) {\n        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n            numNodesChecked);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9390. Block management for maintenance states.\n",
      "commitDate": "17/10/16 5:45 PM",
      "commitName": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "13/10/16 11:52 AM",
      "commitNameOld": "332a61fd74fd2a9874319232c583ab5d2c53ff03",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 4.25,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void run() {\n       if (!namesystem.isRunning()) {\n         LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n             + \".\");\n         return;\n       }\n       // Reset the checked count at beginning of each iteration\n       numBlocksChecked \u003d 0;\n       numBlocksCheckedPerLock \u003d 0;\n       numNodesChecked \u003d 0;\n-      // Check decom progress\n+      // Check decommission or maintenance progress.\n       namesystem.writeLock();\n       try {\n         processPendingNodes();\n         check();\n       } finally {\n         namesystem.writeUnlock();\n       }\n       if (numBlocksChecked + numNodesChecked \u003e 0) {\n         LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n             numNodesChecked);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (!namesystem.isRunning()) {\n        LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n            + \".\");\n        return;\n      }\n      // Reset the checked count at beginning of each iteration\n      numBlocksChecked \u003d 0;\n      numBlocksCheckedPerLock \u003d 0;\n      numNodesChecked \u003d 0;\n      // Check decommission or maintenance progress.\n      namesystem.writeLock();\n      try {\n        processPendingNodes();\n        check();\n      } finally {\n        namesystem.writeUnlock();\n      }\n      if (numBlocksChecked + numNodesChecked \u003e 0) {\n        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n            numNodesChecked);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "extendedDetails": {}
    },
    "332a61fd74fd2a9874319232c583ab5d2c53ff03": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10987. Make Decommission less expensive when lot of blocks present. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/10/16 11:52 AM",
      "commitName": "332a61fd74fd2a9874319232c583ab5d2c53ff03",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/09/16 10:38 AM",
      "commitNameOld": "d37dc5d1b8e022a7085118a2e7066623483c293f",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 37.05,
      "commitsBetweenForRepo": 251,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n     public void run() {\n       if (!namesystem.isRunning()) {\n         LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n             + \".\");\n         return;\n       }\n       // Reset the checked count at beginning of each iteration\n       numBlocksChecked \u003d 0;\n+      numBlocksCheckedPerLock \u003d 0;\n       numNodesChecked \u003d 0;\n       // Check decom progress\n       namesystem.writeLock();\n       try {\n         processPendingNodes();\n         check();\n       } finally {\n         namesystem.writeUnlock();\n       }\n       if (numBlocksChecked + numNodesChecked \u003e 0) {\n         LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n             numNodesChecked);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (!namesystem.isRunning()) {\n        LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n            + \".\");\n        return;\n      }\n      // Reset the checked count at beginning of each iteration\n      numBlocksChecked \u003d 0;\n      numBlocksCheckedPerLock \u003d 0;\n      numNodesChecked \u003d 0;\n      // Check decom progress\n      namesystem.writeLock();\n      try {\n        processPendingNodes();\n        check();\n      } finally {\n        namesystem.writeUnlock();\n      }\n      if (numBlocksChecked + numNodesChecked \u003e 0) {\n        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n            numNodesChecked);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "extendedDetails": {}
    },
    "6ee0d32b98bc3aa5ed42859f1325d5a14fd1722a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7411. Change decommission logic to throttle by blocks rather\nthan nodes in each interval. Contributed by Andrew Wang\n",
      "commitDate": "08/03/15 6:31 PM",
      "commitName": "6ee0d32b98bc3aa5ed42859f1325d5a14fd1722a",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "28/10/11 11:28 AM",
      "commitNameOld": "9692cfc9ae2ac86c9a2d2b3ac9ca8f8b3bfc7c42",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1227.29,
      "commitsBetweenForRepo": 8325,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n     public void run() {\n-      for(; namesystem.isRunning(); ) {\n-        namesystem.writeLock();\n-        try {\n-          check();\n-        } finally {\n-          namesystem.writeUnlock();\n-        }\n-  \n-        try {\n-          Thread.sleep(recheckInterval);\n-        } catch (InterruptedException ie) {\n-          LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n-        }\n+      if (!namesystem.isRunning()) {\n+        LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n+            + \".\");\n+        return;\n+      }\n+      // Reset the checked count at beginning of each iteration\n+      numBlocksChecked \u003d 0;\n+      numNodesChecked \u003d 0;\n+      // Check decom progress\n+      namesystem.writeLock();\n+      try {\n+        processPendingNodes();\n+        check();\n+      } finally {\n+        namesystem.writeUnlock();\n+      }\n+      if (numBlocksChecked + numNodesChecked \u003e 0) {\n+        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n+            numNodesChecked);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (!namesystem.isRunning()) {\n        LOG.info(\"Namesystem is not running, skipping decommissioning checks\"\n            + \".\");\n        return;\n      }\n      // Reset the checked count at beginning of each iteration\n      numBlocksChecked \u003d 0;\n      numNodesChecked \u003d 0;\n      // Check decom progress\n      namesystem.writeLock();\n      try {\n        processPendingNodes();\n        check();\n      } finally {\n        namesystem.writeUnlock();\n      }\n      if (numBlocksChecked + numNodesChecked \u003e 0) {\n        LOG.info(\"Checked {} blocks and {} nodes this tick\", numBlocksChecked,\n            numNodesChecked);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "extendedDetails": {}
    },
    "9692cfc9ae2ac86c9a2d2b3ac9ca8f8b3bfc7c42": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2493. Remove reference to FSNamesystem in blockmanagement classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/10/11 11:28 AM",
      "commitName": "9692cfc9ae2ac86c9a2d2b3ac9ca8f8b3bfc7c42",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 64.76,
      "commitsBetweenForRepo": 485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     public void run() {\n-      for(; fsnamesystem.isRunning(); ) {\n-        fsnamesystem.writeLock();\n+      for(; namesystem.isRunning(); ) {\n+        namesystem.writeLock();\n         try {\n           check();\n         } finally {\n-          fsnamesystem.writeUnlock();\n+          namesystem.writeUnlock();\n         }\n   \n         try {\n           Thread.sleep(recheckInterval);\n         } catch (InterruptedException ie) {\n           LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      for(; namesystem.isRunning(); ) {\n        namesystem.writeLock();\n        try {\n          check();\n        } finally {\n          namesystem.writeUnlock();\n        }\n  \n        try {\n          Thread.sleep(recheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      for(; fsnamesystem.isRunning(); ) {\n        fsnamesystem.writeLock();\n        try {\n          check();\n        } finally {\n          fsnamesystem.writeUnlock();\n        }\n  \n        try {\n          Thread.sleep(recheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      for(; fsnamesystem.isRunning(); ) {\n        fsnamesystem.writeLock();\n        try {\n          check();\n        } finally {\n          fsnamesystem.writeUnlock();\n        }\n  \n        try {\n          Thread.sleep(recheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n        }\n      }\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java"
      }
    },
    "b9189f7b158f9c50566a1b591e25e3d76c3b0917": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2134. Move DecommissionManager to the blockmanagement package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145393 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/11 4:06 PM",
      "commitName": "b9189f7b158f9c50566a1b591e25e3d76c3b0917",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "10/07/11 6:28 AM",
      "commitNameOld": "e8eed98feb5aa482abf9cec156e5b87022769604",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.4,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      for(; fsnamesystem.isRunning(); ) {\n        fsnamesystem.writeLock();\n        try {\n          check();\n        } finally {\n          fsnamesystem.writeUnlock();\n        }\n  \n        try {\n          Thread.sleep(recheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n        }\n      }\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/DecommissionManager.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,16 @@\n+    public void run() {\n+      for(; fsnamesystem.isRunning(); ) {\n+        fsnamesystem.writeLock();\n+        try {\n+          check();\n+        } finally {\n+          fsnamesystem.writeUnlock();\n+        }\n+  \n+        try {\n+          Thread.sleep(recheckInterval);\n+        } catch (InterruptedException ie) {\n+          LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      for(; fsnamesystem.isRunning(); ) {\n        fsnamesystem.writeLock();\n        try {\n          check();\n        } finally {\n          fsnamesystem.writeUnlock();\n        }\n  \n        try {\n          Thread.sleep(recheckInterval);\n        } catch (InterruptedException ie) {\n          LOG.warn(this.getClass().getSimpleName() + \" interrupted: \" + ie);\n        }\n      }\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/DecommissionManager.java"
    }
  }
}