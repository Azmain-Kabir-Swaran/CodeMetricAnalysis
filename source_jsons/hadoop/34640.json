{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerManagerImpl.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
  "functionStartLine": 304,
  "functionEndLine": 329,
  "numCommitsSeen": 185,
  "timeTaken": 4932,
  "changeHistory": [
    "4b540bbfcf02d828052999215c6135603d98f5db",
    "55ae1439233e8585d624b2872e1e4753ef63eebb",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
    "a04143039e7fe310d807f40584633096181cfada",
    "66598697a6e777615334ebde5ba7738135da83ae",
    "d3841bd4997a77855ab2abd9cc294eae7d795a5b",
    "0928502029ef141759008997335ea2cd836a7154",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e"
  ],
  "changeHistoryShort": {
    "4b540bbfcf02d828052999215c6135603d98f5db": "Ybodychange",
    "55ae1439233e8585d624b2872e1e4753ef63eebb": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Ybodychange",
    "a04143039e7fe310d807f40584633096181cfada": "Ybodychange",
    "66598697a6e777615334ebde5ba7738135da83ae": "Ybodychange",
    "d3841bd4997a77855ab2abd9cc294eae7d795a5b": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4b540bbfcf02d828052999215c6135603d98f5db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8418. App local logs could leaked if log aggregation fails to initialize for the app. (Bibin A Chundatt via wangda)\n\nChange-Id: I29a23ca4b219b48c92e7975cd44cddb8b0e04104\n",
      "commitDate": "31/07/18 12:08 PM",
      "commitName": "4b540bbfcf02d828052999215c6135603d98f5db",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "24/07/18 12:39 AM",
      "commitNameOld": "84612788339392fcda1aef0e27c43f5c6b2a19e5",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 7.48,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void serviceInit(Configuration conf) throws Exception {\n \n-    LogHandler logHandler \u003d\n+    logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n     // add the shared cache upload service (it will do nothing if the shared\n     // cache is disabled)\n     SharedCacheUploadService sharedCacheUploader \u003d\n         createSharedCacheUploaderService();\n     addService(sharedCacheUploader);\n     dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n \n     createAMRMProxyService(conf);\n \n     waitForContainersOnShutdownMillis \u003d\n         conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n             YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n         conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n             YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n         SHUTDOWN_CLEANUP_SLOP_MS;\n \n     super.serviceInit(conf);\n     recover();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n\n    logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    // add the shared cache upload service (it will do nothing if the shared\n    // cache is disabled)\n    SharedCacheUploadService sharedCacheUploader \u003d\n        createSharedCacheUploaderService();\n    addService(sharedCacheUploader);\n    dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n\n    createAMRMProxyService(conf);\n\n    waitForContainersOnShutdownMillis \u003d\n        conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n            YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n        conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n            YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n        SHUTDOWN_CLEANUP_SLOP_MS;\n\n    super.serviceInit(conf);\n    recover();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "55ae1439233e8585d624b2872e1e4753ef63eebb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4117. End to end unit test with mini YARN cluster for AMRMProxy Service. Contributed by Giovanni Matteo Fumarola\n",
      "commitDate": "27/03/16 8:22 PM",
      "commitName": "55ae1439233e8585d624b2872e1e4753ef63eebb",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/02/16 12:49 PM",
      "commitNameOld": "d284e187b8db43056236032ebc2114ee462c27f6",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 33.27,
      "commitsBetweenForRepo": 187,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,25 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n     // add the shared cache upload service (it will do nothing if the shared\n     // cache is disabled)\n     SharedCacheUploadService sharedCacheUploader \u003d\n         createSharedCacheUploaderService();\n     addService(sharedCacheUploader);\n     dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n \n-    amrmProxyEnabled \u003d\n-        conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,\n-            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED);\n-\n-    if (amrmProxyEnabled) {\n-      LOG.info(\"AMRMProxyService is enabled. \"\n-          + \"All the AM-\u003eRM requests will be intercepted by the proxy\");\n-      this.amrmProxyService \u003d\n-          new AMRMProxyService(this.context, this.dispatcher);\n-      addService(this.amrmProxyService);\n-    } else {\n-      LOG.info(\"AMRMProxyService is disabled\");\n-    }\n+    createAMRMProxyService(conf);\n \n     waitForContainersOnShutdownMillis \u003d\n         conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n             YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n         conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n             YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n         SHUTDOWN_CLEANUP_SLOP_MS;\n \n     super.serviceInit(conf);\n     recover();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    // add the shared cache upload service (it will do nothing if the shared\n    // cache is disabled)\n    SharedCacheUploadService sharedCacheUploader \u003d\n        createSharedCacheUploaderService();\n    addService(sharedCacheUploader);\n    dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n\n    createAMRMProxyService(conf);\n\n    waitForContainersOnShutdownMillis \u003d\n        conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n            YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n        conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n            YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n        SHUTDOWN_CLEANUP_SLOP_MS;\n\n    super.serviceInit(conf);\n    recover();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/09/15 1:43 AM",
      "commitNameOld": "095ab9ab5fa5f415fba41fee81b6008cf0455af8",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,37 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n     // add the shared cache upload service (it will do nothing if the shared\n     // cache is disabled)\n     SharedCacheUploadService sharedCacheUploader \u003d\n         createSharedCacheUploaderService();\n     addService(sharedCacheUploader);\n     dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n \n+    amrmProxyEnabled \u003d\n+        conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,\n+            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED);\n+\n+    if (amrmProxyEnabled) {\n+      LOG.info(\"AMRMProxyService is enabled. \"\n+          + \"All the AM-\u003eRM requests will be intercepted by the proxy\");\n+      this.amrmProxyService \u003d\n+          new AMRMProxyService(this.context, this.dispatcher);\n+      addService(this.amrmProxyService);\n+    } else {\n+      LOG.info(\"AMRMProxyService is disabled\");\n+    }\n+\n     waitForContainersOnShutdownMillis \u003d\n         conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n             YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n         conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n             YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n         SHUTDOWN_CLEANUP_SLOP_MS;\n \n     super.serviceInit(conf);\n     recover();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    // add the shared cache upload service (it will do nothing if the shared\n    // cache is disabled)\n    SharedCacheUploadService sharedCacheUploader \u003d\n        createSharedCacheUploaderService();\n    addService(sharedCacheUploader);\n    dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n\n    amrmProxyEnabled \u003d\n        conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED);\n\n    if (amrmProxyEnabled) {\n      LOG.info(\"AMRMProxyService is enabled. \"\n          + \"All the AM-\u003eRM requests will be intercepted by the proxy\");\n      this.amrmProxyService \u003d\n          new AMRMProxyService(this.context, this.dispatcher);\n      addService(this.amrmProxyService);\n    } else {\n      LOG.info(\"AMRMProxyService is disabled\");\n    }\n\n    waitForContainersOnShutdownMillis \u003d\n        conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n            YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n        conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n            YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n        SHUTDOWN_CLEANUP_SLOP_MS;\n\n    super.serviceInit(conf);\n    recover();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "a04143039e7fe310d807f40584633096181cfada": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2236. [YARN-1492] Shared Cache uploader service on the Node Manager. (Chris Trezzo and Sanjin Lee via kasha)\n",
      "commitDate": "12/11/14 9:31 AM",
      "commitName": "a04143039e7fe310d807f40584633096181cfada",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "27/10/14 3:49 PM",
      "commitNameOld": "a16d022ca4313a41425c8e97841c841a2d6f2f54",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 15.78,
      "commitsBetweenForRepo": 177,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,23 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n+    // add the shared cache upload service (it will do nothing if the shared\n+    // cache is disabled)\n+    SharedCacheUploadService sharedCacheUploader \u003d\n+        createSharedCacheUploaderService();\n+    addService(sharedCacheUploader);\n+    dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n+\n     waitForContainersOnShutdownMillis \u003d\n         conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n             YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n         conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n             YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n         SHUTDOWN_CLEANUP_SLOP_MS;\n \n     super.serviceInit(conf);\n     recover();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    // add the shared cache upload service (it will do nothing if the shared\n    // cache is disabled)\n    SharedCacheUploadService sharedCacheUploader \u003d\n        createSharedCacheUploaderService();\n    addService(sharedCacheUploader);\n    dispatcher.register(SharedCacheUploadEventType.class, sharedCacheUploader);\n\n    waitForContainersOnShutdownMillis \u003d\n        conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n            YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n        conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n            YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n        SHUTDOWN_CLEANUP_SLOP_MS;\n\n    super.serviceInit(conf);\n    recover();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "commitDateOld": "18/11/13 9:17 PM",
      "commitNameOld": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 192.43,
      "commitsBetweenForRepo": 1294,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n     waitForContainersOnShutdownMillis \u003d\n         conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n             YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n         conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n             YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n         SHUTDOWN_CLEANUP_SLOP_MS;\n \n     super.serviceInit(conf);\n+    recover();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    waitForContainersOnShutdownMillis \u003d\n        conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n            YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n        conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n            YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n        SHUTDOWN_CLEANUP_SLOP_MS;\n\n    super.serviceInit(conf);\n    recover();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "d3841bd4997a77855ab2abd9cc294eae7d795a5b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1149. NM throws InvalidStateTransitonException: Invalid event: APPLICATION_LOG_HANDLING_FINISHED at RUNNING. Contributed by Xuan Gong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529043 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/10/13 5:43 PM",
      "commitName": "d3841bd4997a77855ab2abd9cc294eae7d795a5b",
      "commitAuthor": "Hitesh Shah",
      "commitDateOld": "03/10/13 5:23 PM",
      "commitNameOld": "8ebf37f3691dee523f7d800bc82c7423c3e262e9",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,15 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n+    waitForContainersOnShutdownMillis \u003d\n+        conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n+            YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n+        conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n+            YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n+        SHUTDOWN_CLEANUP_SLOP_MS;\n+\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    waitForContainersOnShutdownMillis \u003d\n        conf.getLong(YarnConfiguration.NM_SLEEP_DELAY_BEFORE_SIGKILL_MS,\n            YarnConfiguration.DEFAULT_NM_SLEEP_DELAY_BEFORE_SIGKILL_MS) +\n        conf.getLong(YarnConfiguration.NM_PROCESS_KILL_WAIT_MS,\n            YarnConfiguration.DEFAULT_NM_PROCESS_KILL_WAIT_MS) +\n        SHUTDOWN_CLEANUP_SLOP_MS;\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "11/06/13 11:47 AM",
          "commitNameOld": "c6c41abf683be17c3917a7f94953b55347aaa69f",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 1.88,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public void init(Configuration conf) {\n+  public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "init",
            "newValue": "serviceInit"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "11/06/13 11:47 AM",
          "commitNameOld": "c6c41abf683be17c3917a7f94953b55347aaa69f",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 1.88,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public void init(Configuration conf) {\n+  public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "11/06/13 11:47 AM",
          "commitNameOld": "c6c41abf683be17c3917a7f94953b55347aaa69f",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 1.88,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public void init(Configuration conf) {\n+  public void serviceInit(Configuration conf) throws Exception {\n     LogHandler logHandler \u003d\n       createLogHandler(conf, this.context, this.deletionService);\n     addIfService(logHandler);\n     dispatcher.register(LogHandlerEventType.class, logHandler);\n     \n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void init(Configuration conf) {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
      }
    },
    "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2696. Fixed NodeManager to cleanup logs in a thread when logs\u0027 aggregation is not enabled. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195383 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 2:55 AM",
      "commitName": "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,8 @@\n+  public void init(Configuration conf) {\n+    LogHandler logHandler \u003d\n+      createLogHandler(conf, this.context, this.deletionService);\n+    addIfService(logHandler);\n+    dispatcher.register(LogHandlerEventType.class, logHandler);\n+    \n+    super.init(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf) {\n    LogHandler logHandler \u003d\n      createLogHandler(conf, this.context, this.deletionService);\n    addIfService(logHandler);\n    dispatcher.register(LogHandlerEventType.class, logHandler);\n    \n    super.init(conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
    }
  }
}