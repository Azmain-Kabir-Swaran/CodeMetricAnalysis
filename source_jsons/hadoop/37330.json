{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractReservationSystem.java",
  "functionName": "loadPlan",
  "functionId": "loadPlan___planName-String__reservations-Map__ReservationId,ReservationAllocationStateProto__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
  "functionStartLine": 180,
  "functionEndLine": 194,
  "numCommitsSeen": 15,
  "timeTaken": 1213,
  "changeHistory": [
    "2798723a5443d04455b9d79c48d61f435ab52267"
  ],
  "changeHistoryShort": {
    "2798723a5443d04455b9d79c48d61f435ab52267": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2798723a5443d04455b9d79c48d61f435ab52267": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3739. Add reservation system recovery to RM recovery process. Contributed by  Subru Krishnan.\n",
      "commitDate": "22/10/15 6:51 AM",
      "commitName": "2798723a5443d04455b9d79c48d61f435ab52267",
      "commitAuthor": "Anubhav Dhoot",
      "diff": "@@ -0,0 +1,15 @@\n+  private void loadPlan(String planName,\n+      Map\u003cReservationId, ReservationAllocationStateProto\u003e reservations)\n+          throws PlanningException {\n+    Plan plan \u003d plans.get(planName);\n+    Resource minAllocation \u003d getMinAllocation();\n+    ResourceCalculator rescCalculator \u003d getResourceCalculator();\n+    for (Entry\u003cReservationId, ReservationAllocationStateProto\u003e currentReservation : reservations\n+        .entrySet()) {\n+      plan.addReservation(ReservationSystemUtil.toInMemoryAllocation(planName,\n+          currentReservation.getKey(), currentReservation.getValue(),\n+          minAllocation, rescCalculator), true);\n+      resQMap.put(currentReservation.getKey(), planName);\n+    }\n+    LOG.info(\"Recovered reservations for Plan: {}\", planName);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadPlan(String planName,\n      Map\u003cReservationId, ReservationAllocationStateProto\u003e reservations)\n          throws PlanningException {\n    Plan plan \u003d plans.get(planName);\n    Resource minAllocation \u003d getMinAllocation();\n    ResourceCalculator rescCalculator \u003d getResourceCalculator();\n    for (Entry\u003cReservationId, ReservationAllocationStateProto\u003e currentReservation : reservations\n        .entrySet()) {\n      plan.addReservation(ReservationSystemUtil.toInMemoryAllocation(planName,\n          currentReservation.getKey(), currentReservation.getValue(),\n          minAllocation, rescCalculator), true);\n      resQMap.put(currentReservation.getKey(), planName);\n    }\n    LOG.info(\"Recovered reservations for Plan: {}\", planName);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java"
    }
  }
}