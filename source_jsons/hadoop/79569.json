{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalDirAllocator.java",
  "functionName": "ifExists",
  "functionId": "ifExists___pathStr-String__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
  "functionStartLine": 245,
  "functionEndLine": 248,
  "numCommitsSeen": 26,
  "timeTaken": 1665,
  "changeHistory": [
    "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10048. LocalDirAllocator should avoid holding locks while accessing the filesystem. Contributed by Jason Lowe.\n",
      "commitDate": "07/06/16 9:18 AM",
      "commitName": "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10048. LocalDirAllocator should avoid holding locks while accessing the filesystem. Contributed by Jason Lowe.\n",
          "commitDate": "07/06/16 9:18 AM",
          "commitName": "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
          "commitAuthor": "Junping Du",
          "commitDateOld": "01/10/15 11:56 AM",
          "commitNameOld": "fd026f535cc09e99a7d4d5d2a8c13eabe8865315",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 249.89,
          "commitsBetweenForRepo": 1655,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n-    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n+    public boolean ifExists(String pathStr, Configuration conf) {\n+      Context ctx \u003d currentContext.get();\n       try {\n-        int numDirs \u003d localDirs.length;\n+        int numDirs \u003d ctx.localDirs.length;\n         int numDirsSearched \u003d 0;\n         //remove the leading slash from the path (to make sure that the uri\n         //resolution results in a valid path on the dir being checked)\n         if (pathStr.startsWith(\"/\")) {\n           pathStr \u003d pathStr.substring(1);\n         }\n         while (numDirsSearched \u003c numDirs) {\n-          Path file \u003d new Path(localDirs[numDirsSearched], pathStr);\n-          if (localFS.exists(file)) {\n+          Path file \u003d new Path(ctx.localDirs[numDirsSearched], pathStr);\n+          if (ctx.localFS.exists(file)) {\n             return true;\n           }\n           numDirsSearched++;\n         }\n       } catch (IOException e) {\n         // IGNORE and try again\n       }\n       return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean ifExists(String pathStr, Configuration conf) {\n      Context ctx \u003d currentContext.get();\n      try {\n        int numDirs \u003d ctx.localDirs.length;\n        int numDirsSearched \u003d 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr \u003d pathStr.substring(1);\n        }\n        while (numDirsSearched \u003c numDirs) {\n          Path file \u003d new Path(ctx.localDirs[numDirsSearched], pathStr);\n          if (ctx.localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10048. LocalDirAllocator should avoid holding locks while accessing the filesystem. Contributed by Jason Lowe.\n",
          "commitDate": "07/06/16 9:18 AM",
          "commitName": "c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b",
          "commitAuthor": "Junping Du",
          "commitDateOld": "01/10/15 11:56 AM",
          "commitNameOld": "fd026f535cc09e99a7d4d5d2a8c13eabe8865315",
          "commitAuthorOld": "Zhihai Xu",
          "daysBetweenCommits": 249.89,
          "commitsBetweenForRepo": 1655,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n-    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n+    public boolean ifExists(String pathStr, Configuration conf) {\n+      Context ctx \u003d currentContext.get();\n       try {\n-        int numDirs \u003d localDirs.length;\n+        int numDirs \u003d ctx.localDirs.length;\n         int numDirsSearched \u003d 0;\n         //remove the leading slash from the path (to make sure that the uri\n         //resolution results in a valid path on the dir being checked)\n         if (pathStr.startsWith(\"/\")) {\n           pathStr \u003d pathStr.substring(1);\n         }\n         while (numDirsSearched \u003c numDirs) {\n-          Path file \u003d new Path(localDirs[numDirsSearched], pathStr);\n-          if (localFS.exists(file)) {\n+          Path file \u003d new Path(ctx.localDirs[numDirsSearched], pathStr);\n+          if (ctx.localFS.exists(file)) {\n             return true;\n           }\n           numDirsSearched++;\n         }\n       } catch (IOException e) {\n         // IGNORE and try again\n       }\n       return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean ifExists(String pathStr, Configuration conf) {\n      Context ctx \u003d currentContext.get();\n      try {\n        int numDirs \u003d ctx.localDirs.length;\n        int numDirsSearched \u003d 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr \u003d pathStr.substring(1);\n        }\n        while (numDirsSearched \u003c numDirs) {\n          Path file \u003d new Path(ctx.localDirs[numDirsSearched], pathStr);\n          if (ctx.localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n      try {\n        int numDirs \u003d localDirs.length;\n        int numDirsSearched \u003d 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr \u003d pathStr.substring(1);\n        }\n        while (numDirsSearched \u003c numDirs) {\n          Path file \u003d new Path(localDirs[numDirsSearched], pathStr);\n          if (localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n      try {\n        int numDirs \u003d localDirs.length;\n        int numDirsSearched \u003d 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr \u003d pathStr.substring(1);\n        }\n        while (numDirsSearched \u003c numDirs) {\n          Path file \u003d new Path(localDirs[numDirsSearched], pathStr);\n          if (localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/LocalDirAllocator.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n      try {\n        int numDirs \u003d localDirs.length;\n        int numDirsSearched \u003d 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr \u003d pathStr.substring(1);\n        }\n        while (numDirsSearched \u003c numDirs) {\n          Path file \u003d new Path(localDirs[numDirsSearched], pathStr);\n          if (localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }",
      "path": "common/src/java/org/apache/hadoop/fs/LocalDirAllocator.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/LocalDirAllocator.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/LocalDirAllocator.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,21 @@\n+    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n+      try {\n+        int numDirs \u003d localDirs.length;\n+        int numDirsSearched \u003d 0;\n+        //remove the leading slash from the path (to make sure that the uri\n+        //resolution results in a valid path on the dir being checked)\n+        if (pathStr.startsWith(\"/\")) {\n+          pathStr \u003d pathStr.substring(1);\n+        }\n+        while (numDirsSearched \u003c numDirs) {\n+          Path file \u003d new Path(localDirs[numDirsSearched], pathStr);\n+          if (localFS.exists(file)) {\n+            return true;\n+          }\n+          numDirsSearched++;\n+        }\n+      } catch (IOException e) {\n+        // IGNORE and try again\n+      }\n+      return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n      try {\n        int numDirs \u003d localDirs.length;\n        int numDirsSearched \u003d 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr \u003d pathStr.substring(1);\n        }\n        while (numDirsSearched \u003c numDirs) {\n          Path file \u003d new Path(localDirs[numDirsSearched], pathStr);\n          if (localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }",
      "path": "src/java/org/apache/hadoop/fs/LocalDirAllocator.java"
    }
  }
}