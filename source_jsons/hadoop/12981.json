{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeDescriptor.java",
  "functionName": "injectStorage",
  "functionId": "injectStorage___s-DatanodeStorageInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java",
  "functionStartLine": 496,
  "functionEndLine": 517,
  "numCommitsSeen": 118,
  "timeTaken": 2308,
  "changeHistory": [
    "d6a9a8997339939b59ce36246225f7cc45b21da5",
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925"
  ],
  "changeHistoryShort": {
    "d6a9a8997339939b59ce36246225f7cc45b21da5": "Ybodychange",
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6a9a8997339939b59ce36246225f7cc45b21da5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12605. [READ] TestNameNodeProvidedImplementation#testProvidedDatanodeFailures fails after rebase\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "d6a9a8997339939b59ce36246225f7cc45b21da5",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,22 @@\n   void injectStorage(DatanodeStorageInfo s) {\n     synchronized (storageMap) {\n       DatanodeStorageInfo storage \u003d storageMap.get(s.getStorageID());\n       if (null \u003d\u003d storage) {\n+        LOG.info(\"Adding new storage ID {} for DN {}\", s.getStorageID(),\n+            getXferAddr());\n+        DFSTopologyNodeImpl parent \u003d null;\n+        if (getParent() instanceof DFSTopologyNodeImpl) {\n+          parent \u003d (DFSTopologyNodeImpl) getParent();\n+        }\n+        StorageType type \u003d s.getStorageType();\n+        if (!hasStorageType(type) \u0026\u0026 parent !\u003d null) {\n+          // we are about to add a type this node currently does not have,\n+          // inform the parent that a new type is added to this datanode\n+          parent.childAddStorage(getName(), type);\n+        }\n         storageMap.put(s.getStorageID(), s);\n       } else {\n         assert storage \u003d\u003d s : \"found \" + storage + \" expected \" + s;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void injectStorage(DatanodeStorageInfo s) {\n    synchronized (storageMap) {\n      DatanodeStorageInfo storage \u003d storageMap.get(s.getStorageID());\n      if (null \u003d\u003d storage) {\n        LOG.info(\"Adding new storage ID {} for DN {}\", s.getStorageID(),\n            getXferAddr());\n        DFSTopologyNodeImpl parent \u003d null;\n        if (getParent() instanceof DFSTopologyNodeImpl) {\n          parent \u003d (DFSTopologyNodeImpl) getParent();\n        }\n        StorageType type \u003d s.getStorageType();\n        if (!hasStorageType(type) \u0026\u0026 parent !\u003d null) {\n          // we are about to add a type this node currently does not have,\n          // inform the parent that a new type is added to this datanode\n          parent.childAddStorage(getName(), type);\n        }\n        storageMap.put(s.getStorageID(), s);\n      } else {\n        assert storage \u003d\u003d s : \"found \" + storage + \" expected \" + s;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java",
      "extendedDetails": {}
    },
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11190. [READ] Namenode support for data stored in external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,10 @@\n+  void injectStorage(DatanodeStorageInfo s) {\n+    synchronized (storageMap) {\n+      DatanodeStorageInfo storage \u003d storageMap.get(s.getStorageID());\n+      if (null \u003d\u003d storage) {\n+        storageMap.put(s.getStorageID(), s);\n+      } else {\n+        assert storage \u003d\u003d s : \"found \" + storage + \" expected \" + s;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void injectStorage(DatanodeStorageInfo s) {\n    synchronized (storageMap) {\n      DatanodeStorageInfo storage \u003d storageMap.get(s.getStorageID());\n      if (null \u003d\u003d storage) {\n        storageMap.put(s.getStorageID(), s);\n      } else {\n        assert storage \u003d\u003d s : \"found \" + storage + \" expected \" + s;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java"
    }
  }
}