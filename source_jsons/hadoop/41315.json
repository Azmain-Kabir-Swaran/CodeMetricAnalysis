{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "clearReservation",
  "functionId": "clearReservation___node-SchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 795,
  "functionEndLine": 808,
  "numCommitsSeen": 76,
  "timeTaken": 3500,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
    "7e2837f830382835838c82398db6fc9823d612a7"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": "Ymultichange(Ymodifierchange,Ybodychange)",
    "7e2837f830382835838c82398db6fc9823d612a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void clearReservation(SchedulerNode node) {\n     String rackName \u003d\n         node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n \n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n       if (rackReservations !\u003d null) {\n         rackReservations.remove(node.getNodeName());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void clearReservation(SchedulerNode node) {\n    String rackName \u003d\n        node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n\n    writeLock.lock();\n    try {\n      Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n      if (rackReservations !\u003d null) {\n        rackReservations.remove(node.getNodeName());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "19/09/16 2:08 AM",
      "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/16 10:43 AM",
          "commitNameOld": "3f100d76ff5df020dbb8ecd4f5b4f9736a0a8270",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 44.64,
          "commitsBetweenForRepo": 264,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,14 @@\n-  private synchronized void clearReservation(SchedulerNode node) {\n-    String rackName \u003d node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n-    Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n-    if (rackReservations !\u003d null) {\n-      rackReservations.remove(node.getNodeName());\n+  private void clearReservation(SchedulerNode node) {\n+    String rackName \u003d\n+        node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n+\n+    try {\n+      writeLock.lock();\n+      Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n+      if (rackReservations !\u003d null) {\n+        rackReservations.remove(node.getNodeName());\n+      }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void clearReservation(SchedulerNode node) {\n    String rackName \u003d\n        node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n\n    try {\n      writeLock.lock();\n      Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n      if (rackReservations !\u003d null) {\n        rackReservations.remove(node.getNodeName());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/16 10:43 AM",
          "commitNameOld": "3f100d76ff5df020dbb8ecd4f5b4f9736a0a8270",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 44.64,
          "commitsBetweenForRepo": 264,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,14 @@\n-  private synchronized void clearReservation(SchedulerNode node) {\n-    String rackName \u003d node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n-    Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n-    if (rackReservations !\u003d null) {\n-      rackReservations.remove(node.getNodeName());\n+  private void clearReservation(SchedulerNode node) {\n+    String rackName \u003d\n+        node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n+\n+    try {\n+      writeLock.lock();\n+      Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n+      if (rackReservations !\u003d null) {\n+        rackReservations.remove(node.getNodeName());\n+      }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void clearReservation(SchedulerNode node) {\n    String rackName \u003d\n        node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n\n    try {\n      writeLock.lock();\n      Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n      if (rackReservations !\u003d null) {\n        rackReservations.remove(node.getNodeName());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "7e2837f830382835838c82398db6fc9823d612a7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4270. Limit application resource reservation on nodes for non-node/rack specific requests (asuresh)\n",
      "commitDate": "19/10/15 8:00 PM",
      "commitName": "7e2837f830382835838c82398db6fc9823d612a7",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,7 @@\n+  private synchronized void clearReservation(SchedulerNode node) {\n+    String rackName \u003d node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n+    Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n+    if (rackReservations !\u003d null) {\n+      rackReservations.remove(node.getNodeName());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void clearReservation(SchedulerNode node) {\n    String rackName \u003d node.getRackName() \u003d\u003d null ? \"NULL\" : node.getRackName();\n    Set\u003cString\u003e rackReservations \u003d reservations.get(rackName);\n    if (rackReservations !\u003d null) {\n      rackReservations.remove(node.getNodeName());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}