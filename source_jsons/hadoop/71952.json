{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuthenticatedURL.java",
  "functionName": "setAuthCookie",
  "functionId": "setAuthCookie___cookie-HttpCookie",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
  "functionStartLine": 125,
  "functionEndLine": 157,
  "numCommitsSeen": 11,
  "timeTaken": 639,
  "changeHistory": [
    "c3793102121767c46091805eae65ef3919a5f368"
  ],
  "changeHistoryShort": {
    "c3793102121767c46091805eae65ef3919a5f368": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c3793102121767c46091805eae65ef3919a5f368": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14687. AuthenticatedURL will reuse bad/expired session cookies. Contributed by Daryn Sharp\n",
      "commitDate": "22/08/17 2:50 PM",
      "commitName": "c3793102121767c46091805eae65ef3919a5f368",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,33 @@\n+    private synchronized void setAuthCookie(HttpCookie cookie) {\n+      final HttpCookie oldCookie \u003d authCookie;\n+      // will redefine if new cookie is valid.\n+      authCookie \u003d null;\n+      cookieHeaders \u003d Collections.emptyMap();\n+      boolean valid \u003d cookie !\u003d null \u0026\u0026 !cookie.getValue().isEmpty() \u0026\u0026\n+          !cookie.hasExpired();\n+      if (valid) {\n+        // decrease lifetime to avoid using a cookie soon to expire.\n+        // allows authenticators to pre-emptively reauthenticate to\n+        // prevent clients unnecessarily receiving a 401.\n+        long maxAge \u003d cookie.getMaxAge();\n+        if (maxAge !\u003d -1) {\n+          cookie.setMaxAge(maxAge * 9/10);\n+          valid \u003d !cookie.hasExpired();\n+        }\n+      }\n+      if (valid) {\n+        // v0 cookies value aren\u0027t quoted by default but tomcat demands\n+        // quoting.\n+        if (cookie.getVersion() \u003d\u003d 0) {\n+          String value \u003d cookie.getValue();\n+          if (!value.startsWith(\"\\\"\")) {\n+            value \u003d \"\\\"\" + value + \"\\\"\";\n+            cookie.setValue(value);\n+          }\n+        }\n+        authCookie \u003d cookie;\n+        cookieHeaders \u003d new HashMap\u003c\u003e();\n+        cookieHeaders.put(\"Cookie\", Arrays.asList(cookie.toString()));\n+      }\n+      LOG.trace(\"Setting token value to {} ({})\", authCookie, oldCookie);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized void setAuthCookie(HttpCookie cookie) {\n      final HttpCookie oldCookie \u003d authCookie;\n      // will redefine if new cookie is valid.\n      authCookie \u003d null;\n      cookieHeaders \u003d Collections.emptyMap();\n      boolean valid \u003d cookie !\u003d null \u0026\u0026 !cookie.getValue().isEmpty() \u0026\u0026\n          !cookie.hasExpired();\n      if (valid) {\n        // decrease lifetime to avoid using a cookie soon to expire.\n        // allows authenticators to pre-emptively reauthenticate to\n        // prevent clients unnecessarily receiving a 401.\n        long maxAge \u003d cookie.getMaxAge();\n        if (maxAge !\u003d -1) {\n          cookie.setMaxAge(maxAge * 9/10);\n          valid \u003d !cookie.hasExpired();\n        }\n      }\n      if (valid) {\n        // v0 cookies value aren\u0027t quoted by default but tomcat demands\n        // quoting.\n        if (cookie.getVersion() \u003d\u003d 0) {\n          String value \u003d cookie.getValue();\n          if (!value.startsWith(\"\\\"\")) {\n            value \u003d \"\\\"\" + value + \"\\\"\";\n            cookie.setValue(value);\n          }\n        }\n        authCookie \u003d cookie;\n        cookieHeaders \u003d new HashMap\u003c\u003e();\n        cookieHeaders.put(\"Cookie\", Arrays.asList(cookie.toString()));\n      }\n      LOG.trace(\"Setting token value to {} ({})\", authCookie, oldCookie);\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java"
    }
  }
}