{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerLogsUtils.java",
  "functionName": "openLogFileForRead",
  "functionId": "openLogFileForRead___containerIdStr-String__logFile-File__context-Context",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
  "functionStartLine": 160,
  "functionEndLine": 185,
  "numCommitsSeen": 6,
  "timeTaken": 1272,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "a759abcd898224c3481c55aa7e424bc286f60b15"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "a759abcd898224c3481c55aa7e424bc286f60b15": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/06/15 8:47 AM",
      "commitNameOld": "40b256949ad6f6e0dbdd248f2d257b05899f4332",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 354.26,
      "commitsBetweenForRepo": 2334,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public static FileInputStream openLogFileForRead(String containerIdStr, File logFile,\n       Context context) throws IOException {\n-    ContainerId containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n+    ContainerId containerId \u003d ContainerId.fromString(containerIdStr);\n     ApplicationId applicationId \u003d containerId.getApplicationAttemptId()\n         .getApplicationId();\n     String user \u003d context.getApplications().get(\n         applicationId).getUser();\n     \n     try {\n       return SecureIOUtils.openForRead(logFile, user, null);\n     } catch (IOException e) {\n       if (e.getMessage().contains(\n         \"did not match expected owner \u0027\" + user\n             + \"\u0027\")) {\n         LOG.error(\n             \"Exception reading log file \" + logFile.getAbsolutePath(), e);\n         throw new IOException(\"Exception reading log file. Application submitted by \u0027\"\n             + user\n             + \"\u0027 doesn\u0027t own requested log file : \"\n             + logFile.getName(), e);\n       } else {\n         throw new IOException(\"Exception reading log file. It might be because log \"\n             + \"file was aggregated : \" + logFile.getName(), e);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileInputStream openLogFileForRead(String containerIdStr, File logFile,\n      Context context) throws IOException {\n    ContainerId containerId \u003d ContainerId.fromString(containerIdStr);\n    ApplicationId applicationId \u003d containerId.getApplicationAttemptId()\n        .getApplicationId();\n    String user \u003d context.getApplications().get(\n        applicationId).getUser();\n    \n    try {\n      return SecureIOUtils.openForRead(logFile, user, null);\n    } catch (IOException e) {\n      if (e.getMessage().contains(\n        \"did not match expected owner \u0027\" + user\n            + \"\u0027\")) {\n        LOG.error(\n            \"Exception reading log file \" + logFile.getAbsolutePath(), e);\n        throw new IOException(\"Exception reading log file. Application submitted by \u0027\"\n            + user\n            + \"\u0027 doesn\u0027t own requested log file : \"\n            + logFile.getName(), e);\n      } else {\n        throw new IOException(\"Exception reading log file. It might be because log \"\n            + \"file was aggregated : \" + logFile.getName(), e);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
      "extendedDetails": {}
    },
    "a759abcd898224c3481c55aa7e424bc286f60b15": {
      "type": "Yintroduced",
      "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/09/13 5:09 PM",
      "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,26 @@\n+  public static FileInputStream openLogFileForRead(String containerIdStr, File logFile,\n+      Context context) throws IOException {\n+    ContainerId containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n+    ApplicationId applicationId \u003d containerId.getApplicationAttemptId()\n+        .getApplicationId();\n+    String user \u003d context.getApplications().get(\n+        applicationId).getUser();\n+    \n+    try {\n+      return SecureIOUtils.openForRead(logFile, user, null);\n+    } catch (IOException e) {\n+      if (e.getMessage().contains(\n+        \"did not match expected owner \u0027\" + user\n+            + \"\u0027\")) {\n+        LOG.error(\n+            \"Exception reading log file \" + logFile.getAbsolutePath(), e);\n+        throw new IOException(\"Exception reading log file. Application submitted by \u0027\"\n+            + user\n+            + \"\u0027 doesn\u0027t own requested log file : \"\n+            + logFile.getName(), e);\n+      } else {\n+        throw new IOException(\"Exception reading log file. It might be because log \"\n+            + \"file was aggregated : \" + logFile.getName(), e);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileInputStream openLogFileForRead(String containerIdStr, File logFile,\n      Context context) throws IOException {\n    ContainerId containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n    ApplicationId applicationId \u003d containerId.getApplicationAttemptId()\n        .getApplicationId();\n    String user \u003d context.getApplications().get(\n        applicationId).getUser();\n    \n    try {\n      return SecureIOUtils.openForRead(logFile, user, null);\n    } catch (IOException e) {\n      if (e.getMessage().contains(\n        \"did not match expected owner \u0027\" + user\n            + \"\u0027\")) {\n        LOG.error(\n            \"Exception reading log file \" + logFile.getAbsolutePath(), e);\n        throw new IOException(\"Exception reading log file. Application submitted by \u0027\"\n            + user\n            + \"\u0027 doesn\u0027t own requested log file : \"\n            + logFile.getName(), e);\n      } else {\n        throw new IOException(\"Exception reading log file. It might be because log \"\n            + \"file was aggregated : \" + logFile.getName(), e);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java"
    }
  }
}