{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecurityUtil.java",
  "functionName": "getByExactName",
  "functionId": "getByExactName___host-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SecurityUtil.java",
  "functionStartLine": 653,
  "functionEndLine": 670,
  "numCommitsSeen": 52,
  "timeTaken": 1467,
  "changeHistory": [
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6",
    "4bb572d3366c478924fa95e513858e8a8c793774"
  ],
  "changeHistoryShort": {
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6": "Ymovefromfile",
    "4bb572d3366c478924fa95e513858e8a8c793774": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-7964. Deadlock in NetUtils and SecurityUtil class initialization. Contributed by Daryn Sharp.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1230249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/01/12 1:02 PM",
      "commitName": "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "11/01/12 11:37 AM",
      "commitNameOld": "c4c6d8ece316a1655dd3dbff242559535ad09707",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    InetAddress getByExactName(String host) {\n      InetAddress addr \u003d null;\n      // InetAddress will use the search list unless the host is rooted\n      // with a trailing dot.  The trailing dot will disable any use of the\n      // search path in a lower level resolver.  See RFC 1535.\n      String fqHost \u003d host;\n      if (!fqHost.endsWith(\".\")) fqHost +\u003d \".\";\n      try {\n        addr \u003d getInetAddressByName(fqHost);\n        // can\u0027t leave the hostname as rooted or other parts of the system\n        // malfunction, ex. kerberos principals are lacking proper host\n        // equivalence for rooted/non-rooted hostnames\n        addr \u003d InetAddress.getByAddress(host, addr.getAddress());\n      } catch (UnknownHostException e) {\n        // ignore, caller will throw if necessary\n      }\n      return addr;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SecurityUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SecurityUtil.java",
        "oldMethodName": "getByExactName",
        "newMethodName": "getByExactName"
      }
    },
    "4bb572d3366c478924fa95e513858e8a8c793774": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7808. Port HADOOP-7510 - Add configurable option to use original hostname in token instead of IP to allow server IP change. Contributed by Daryn Sharp.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227737 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 10:41 AM",
      "commitName": "4bb572d3366c478924fa95e513858e8a8c793774",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,18 @@\n+    InetAddress getByExactName(String host) {\n+      InetAddress addr \u003d null;\n+      // InetAddress will use the search list unless the host is rooted\n+      // with a trailing dot.  The trailing dot will disable any use of the\n+      // search path in a lower level resolver.  See RFC 1535.\n+      String fqHost \u003d host;\n+      if (!fqHost.endsWith(\".\")) fqHost +\u003d \".\";\n+      try {\n+        addr \u003d getInetAddressByName(fqHost);\n+        // can\u0027t leave the hostname as rooted or other parts of the system\n+        // malfunction, ex. kerberos principals are lacking proper host\n+        // equivalence for rooted/non-rooted hostnames\n+        addr \u003d InetAddress.getByAddress(host, addr.getAddress());\n+      } catch (UnknownHostException e) {\n+        // ignore, caller will throw if necessary\n+      }\n+      return addr;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    InetAddress getByExactName(String host) {\n      InetAddress addr \u003d null;\n      // InetAddress will use the search list unless the host is rooted\n      // with a trailing dot.  The trailing dot will disable any use of the\n      // search path in a lower level resolver.  See RFC 1535.\n      String fqHost \u003d host;\n      if (!fqHost.endsWith(\".\")) fqHost +\u003d \".\";\n      try {\n        addr \u003d getInetAddressByName(fqHost);\n        // can\u0027t leave the hostname as rooted or other parts of the system\n        // malfunction, ex. kerberos principals are lacking proper host\n        // equivalence for rooted/non-rooted hostnames\n        addr \u003d InetAddress.getByAddress(host, addr.getAddress());\n      } catch (UnknownHostException e) {\n        // ignore, caller will throw if necessary\n      }\n      return addr;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java"
    }
  }
}