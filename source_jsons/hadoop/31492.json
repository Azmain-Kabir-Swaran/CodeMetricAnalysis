{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenericEntityReader.java",
  "functionName": "updateFilterForConfsAndMetricsToRetrieve",
  "functionId": "updateFilterForConfsAndMetricsToRetrieve___listBasedOnFields-FilterList__cfsInFields-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
  "functionStartLine": 352,
  "functionEndLine": 377,
  "numCommitsSeen": 20,
  "timeTaken": 3438,
  "changeHistory": [
    "29acea5000337a7f529bb1810a2af2b0af4d5f1d",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1"
  ],
  "changeHistoryShort": {
    "29acea5000337a7f529bb1810a2af2b0af4d5f1d": "Ymultichange(Yparameterchange,Ybodychange)",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29acea5000337a7f529bb1810a2af2b0af4d5f1d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7581. HBase filters are not constructed correctly in ATSv2. Contributed by Habio Chen.\n",
      "commitDate": "20/03/18 7:41 PM",
      "commitName": "29acea5000337a7f529bb1810a2af2b0af4d5f1d",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7581. HBase filters are not constructed correctly in ATSv2. Contributed by Habio Chen.\n",
          "commitDate": "20/03/18 7:41 PM",
          "commitName": "29acea5000337a7f529bb1810a2af2b0af4d5f1d",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 7:00 AM",
          "commitNameOld": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 31.49,
          "commitsBetweenForRepo": 209,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,26 @@\n   private void updateFilterForConfsAndMetricsToRetrieve(\n-      FilterList listBasedOnFields) throws IOException {\n+      FilterList listBasedOnFields, Set\u003cString\u003e cfsInFields)\n+      throws IOException {\n     TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n     // Please note that if confsToRetrieve is specified, we would have added\n     // CONFS to fields to retrieve in augmentParams() even if not specified.\n     if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n       // Create a filter list for configs.\n       listBasedOnFields.addFilter(TimelineFilterUtils\n           .createFilterForConfsOrMetricsToRetrieve(\n               dataToRetrieve.getConfsToRetrieve(), EntityColumnFamily.CONFIGS,\n               EntityColumnPrefix.CONFIG));\n+      cfsInFields.add(Bytes.toString(EntityColumnFamily.CONFIGS.getBytes()));\n     }\n \n     // Please note that if metricsToRetrieve is specified, we would have added\n     // METRICS to fields to retrieve in augmentParams() even if not specified.\n     if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n       // Create a filter list for metrics.\n       listBasedOnFields.addFilter(TimelineFilterUtils\n           .createFilterForConfsOrMetricsToRetrieve(\n               dataToRetrieve.getMetricsToRetrieve(),\n               EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n+      cfsInFields.add(Bytes.toString(EntityColumnFamily.METRICS.getBytes()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateFilterForConfsAndMetricsToRetrieve(\n      FilterList listBasedOnFields, Set\u003cString\u003e cfsInFields)\n      throws IOException {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Please note that if confsToRetrieve is specified, we would have added\n    // CONFS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n      // Create a filter list for configs.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getConfsToRetrieve(), EntityColumnFamily.CONFIGS,\n              EntityColumnPrefix.CONFIG));\n      cfsInFields.add(Bytes.toString(EntityColumnFamily.CONFIGS.getBytes()));\n    }\n\n    // Please note that if metricsToRetrieve is specified, we would have added\n    // METRICS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n      // Create a filter list for metrics.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getMetricsToRetrieve(),\n              EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n      cfsInFields.add(Bytes.toString(EntityColumnFamily.METRICS.getBytes()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
          "extendedDetails": {
            "oldValue": "[listBasedOnFields-FilterList]",
            "newValue": "[listBasedOnFields-FilterList, cfsInFields-Set\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7581. HBase filters are not constructed correctly in ATSv2. Contributed by Habio Chen.\n",
          "commitDate": "20/03/18 7:41 PM",
          "commitName": "29acea5000337a7f529bb1810a2af2b0af4d5f1d",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 7:00 AM",
          "commitNameOld": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 31.49,
          "commitsBetweenForRepo": 209,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,26 @@\n   private void updateFilterForConfsAndMetricsToRetrieve(\n-      FilterList listBasedOnFields) throws IOException {\n+      FilterList listBasedOnFields, Set\u003cString\u003e cfsInFields)\n+      throws IOException {\n     TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n     // Please note that if confsToRetrieve is specified, we would have added\n     // CONFS to fields to retrieve in augmentParams() even if not specified.\n     if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n       // Create a filter list for configs.\n       listBasedOnFields.addFilter(TimelineFilterUtils\n           .createFilterForConfsOrMetricsToRetrieve(\n               dataToRetrieve.getConfsToRetrieve(), EntityColumnFamily.CONFIGS,\n               EntityColumnPrefix.CONFIG));\n+      cfsInFields.add(Bytes.toString(EntityColumnFamily.CONFIGS.getBytes()));\n     }\n \n     // Please note that if metricsToRetrieve is specified, we would have added\n     // METRICS to fields to retrieve in augmentParams() even if not specified.\n     if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n       // Create a filter list for metrics.\n       listBasedOnFields.addFilter(TimelineFilterUtils\n           .createFilterForConfsOrMetricsToRetrieve(\n               dataToRetrieve.getMetricsToRetrieve(),\n               EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n+      cfsInFields.add(Bytes.toString(EntityColumnFamily.METRICS.getBytes()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateFilterForConfsAndMetricsToRetrieve(\n      FilterList listBasedOnFields, Set\u003cString\u003e cfsInFields)\n      throws IOException {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Please note that if confsToRetrieve is specified, we would have added\n    // CONFS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n      // Create a filter list for configs.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getConfsToRetrieve(), EntityColumnFamily.CONFIGS,\n              EntityColumnPrefix.CONFIG));\n      cfsInFields.add(Bytes.toString(EntityColumnFamily.CONFIGS.getBytes()));\n    }\n\n    // Please note that if metricsToRetrieve is specified, we would have added\n    // METRICS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n      // Create a filter list for metrics.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getMetricsToRetrieve(),\n              EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n      cfsInFields.add(Bytes.toString(EntityColumnFamily.METRICS.getBytes()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
          "extendedDetails": {}
        }
      ]
    },
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateFilterForConfsAndMetricsToRetrieve(\n      FilterList listBasedOnFields) throws IOException {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Please note that if confsToRetrieve is specified, we would have added\n    // CONFS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n      // Create a filter list for configs.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getConfsToRetrieve(), EntityColumnFamily.CONFIGS,\n              EntityColumnPrefix.CONFIG));\n    }\n\n    // Please note that if metricsToRetrieve is specified, we would have added\n    // METRICS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n      // Create a filter list for metrics.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getMetricsToRetrieve(),\n              EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateFilterForConfsAndMetricsToRetrieve(\n      FilterList listBasedOnFields) throws IOException {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Please note that if confsToRetrieve is specified, we would have added\n    // CONFS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n      // Create a filter list for configs.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getConfsToRetrieve(), EntityColumnFamily.CONFIGS,\n              EntityColumnPrefix.CONFIG));\n    }\n\n    // Please note that if metricsToRetrieve is specified, we would have added\n    // METRICS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n      // Create a filter list for metrics.\n      listBasedOnFields.addFilter(TimelineFilterUtils\n          .createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getMetricsToRetrieve(),\n              EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java"
      }
    },
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,23 @@\n+  private void updateFilterForConfsAndMetricsToRetrieve(\n+      FilterList listBasedOnFields) throws IOException {\n+    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n+    // Please note that if confsToRetrieve is specified, we would have added\n+    // CONFS to fields to retrieve in augmentParams() even if not specified.\n+    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n+      // Create a filter list for configs.\n+      listBasedOnFields.addFilter(TimelineFilterUtils.\n+          createFilterForConfsOrMetricsToRetrieve(\n+              dataToRetrieve.getConfsToRetrieve(),\n+              EntityColumnFamily.CONFIGS, EntityColumnPrefix.CONFIG));\n+    }\n+\n+    // Please note that if metricsToRetrieve is specified, we would have added\n+    // METRICS to fields to retrieve in augmentParams() even if not specified.\n+    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n+      // Create a filter list for metrics.\n+      listBasedOnFields.addFilter(TimelineFilterUtils.\n+          createFilterForConfsOrMetricsToRetrieve(\n+              dataToRetrieve.getMetricsToRetrieve(),\n+              EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateFilterForConfsAndMetricsToRetrieve(\n      FilterList listBasedOnFields) throws IOException {\n    TimelineDataToRetrieve dataToRetrieve \u003d getDataToRetrieve();\n    // Please note that if confsToRetrieve is specified, we would have added\n    // CONFS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.CONFIGS)) {\n      // Create a filter list for configs.\n      listBasedOnFields.addFilter(TimelineFilterUtils.\n          createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getConfsToRetrieve(),\n              EntityColumnFamily.CONFIGS, EntityColumnPrefix.CONFIG));\n    }\n\n    // Please note that if metricsToRetrieve is specified, we would have added\n    // METRICS to fields to retrieve in augmentParams() even if not specified.\n    if (dataToRetrieve.getFieldsToRetrieve().contains(Field.METRICS)) {\n      // Create a filter list for metrics.\n      listBasedOnFields.addFilter(TimelineFilterUtils.\n          createFilterForConfsOrMetricsToRetrieve(\n              dataToRetrieve.getMetricsToRetrieve(),\n              EntityColumnFamily.METRICS, EntityColumnPrefix.METRIC));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/GenericEntityReader.java"
    }
  }
}