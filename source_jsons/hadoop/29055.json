{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHeartbeatRequestPBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
  "functionStartLine": 103,
  "functionEndLine": 138,
  "numCommitsSeen": 22,
  "timeTaken": 8738,
  "changeHistory": [
    "d9d93e392508da2e8b88faefe002128e245fc8f3",
    "78b7e070d8009c78665a2baa64fe888788f53e69",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "9b5636408005676ae580f8d929f8e912c27828e7",
    "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59",
    "92431c961741747b5d6442f4025016d48d9a6863",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
    "45a8e8c5a46535287de97fd6609c0743eef888ee",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "d9d93e392508da2e8b88faefe002128e245fc8f3": "Ybodychange",
    "78b7e070d8009c78665a2baa64fe888788f53e69": "Ybodychange",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ybodychange",
    "9b5636408005676ae580f8d929f8e912c27828e7": "Ybodychange",
    "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59": "Ybodychange",
    "92431c961741747b5d6442f4025016d48d9a6863": "Ybodychange",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": "Ybodychange",
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": "Ybodychange",
    "45a8e8c5a46535287de97fd6609c0743eef888ee": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d9d93e392508da2e8b88faefe002128e245fc8f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7842. PB changes to carry node-attributes in NM heartbeat. Contributed by Weiwei Yang.\n",
      "commitDate": "12/09/18 3:30 AM",
      "commitName": "d9d93e392508da2e8b88faefe002128e245fc8f3",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "e276c75ec17634fc3b521fdb15b6ac141b001274",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 378.19,
      "commitsBetweenForRepo": 3349,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,36 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n     if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n       builder.setLastKnownContainerTokenMasterKey(\n           convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n     }\n     if (this.lastKnownNMTokenMasterKey !\u003d null) {\n       builder.setLastKnownNmTokenMasterKey(\n           convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n+    if (this.attributes !\u003d null) {\n+      builder.clearNodeAttributes();\n+      YarnServerCommonServiceProtos.NodeAttributesProto.Builder attBuilder \u003d\n+          YarnServerCommonServiceProtos.NodeAttributesProto.newBuilder();\n+      for (NodeAttribute attribute : attributes) {\n+        attBuilder.addNodeAttributes(convertToProtoFormat(attribute));\n+      }\n+      builder.setNodeAttributes(attBuilder.build());\n+    }\n     if (this.logAggregationReportsForApps !\u003d null) {\n       addLogAggregationStatusForAppsToProto();\n     }\n     if (this.registeringCollectors !\u003d null) {\n       addRegisteringCollectorsToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.attributes !\u003d null) {\n      builder.clearNodeAttributes();\n      YarnServerCommonServiceProtos.NodeAttributesProto.Builder attBuilder \u003d\n          YarnServerCommonServiceProtos.NodeAttributesProto.newBuilder();\n      for (NodeAttribute attribute : attributes) {\n        attBuilder.addNodeAttributes(convertToProtoFormat(attribute));\n      }\n      builder.setNodeAttributes(attBuilder.build());\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n    if (this.registeringCollectors !\u003d null) {\n      addRegisteringCollectorsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "78b7e070d8009c78665a2baa64fe888788f53e69": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5638. Introduce a collector timestamp to uniquely identify collectors creation order in collector discovery. Contributed by Li Lu.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "78b7e070d8009c78665a2baa64fe888788f53e69",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "6cf6ab7b780de2b0c2c9ea730e1f366965a0d682",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 415.59,
      "commitsBetweenForRepo": 2536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n     if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n       builder.setLastKnownContainerTokenMasterKey(\n           convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n     }\n     if (this.lastKnownNMTokenMasterKey !\u003d null) {\n       builder.setLastKnownNmTokenMasterKey(\n           convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n     if (this.logAggregationReportsForApps !\u003d null) {\n       addLogAggregationStatusForAppsToProto();\n     }\n-    if (this.registeredCollectors !\u003d null) {\n-      addRegisteredCollectorsToProto();\n+    if (this.registeringCollectors !\u003d null) {\n+      addRegisteringCollectorsToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n    if (this.registeringCollectors !\u003d null) {\n      addRegisteringCollectorsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n     if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n       builder.setLastKnownContainerTokenMasterKey(\n           convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n     }\n     if (this.lastKnownNMTokenMasterKey !\u003d null) {\n       builder.setLastKnownNmTokenMasterKey(\n           convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n     if (this.logAggregationReportsForApps !\u003d null) {\n       addLogAggregationStatusForAppsToProto();\n     }\n-    if (this.registeredAggregators !\u003d null) {\n-      addRegisteredAggregatorsToProto();\n+    if (this.registeredCollectors !\u003d null) {\n+      addRegisteredCollectorsToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n    if (this.registeredCollectors !\u003d null) {\n      addRegisteredCollectorsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "9b5636408005676ae580f8d929f8e912c27828e7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "19/05/15 4:34 PM",
      "commitNameOld": "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 417.67,
      "commitsBetweenForRepo": 2940,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n     if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n       builder.setLastKnownContainerTokenMasterKey(\n           convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n     }\n     if (this.lastKnownNMTokenMasterKey !\u003d null) {\n       builder.setLastKnownNmTokenMasterKey(\n           convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n     if (this.logAggregationReportsForApps !\u003d null) {\n       addLogAggregationStatusForAppsToProto();\n     }\n+    if (this.registeredAggregators !\u003d null) {\n+      addRegisteredAggregatorsToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n    if (this.registeredAggregators !\u003d null) {\n      addRegisteredAggregatorsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3565. NodeHeartbeatRequest/RegisterNodeManagerRequest should use NodeLabel object instead of String. (Naganarasimha G R via wangda)\n",
      "commitDate": "19/05/15 4:34 PM",
      "commitName": "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "14/05/15 10:58 AM",
      "commitNameOld": "15ccd967ee3e7046a50522089f67ba01f36ec76a",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 5.23,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n     if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n       builder.setLastKnownContainerTokenMasterKey(\n           convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n     }\n     if (this.lastKnownNMTokenMasterKey !\u003d null) {\n       builder.setLastKnownNmTokenMasterKey(\n           convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n-      builder.setNodeLabels(StringArrayProto.newBuilder()\n-          .addAllElements(this.labels).build());\n+      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n+      for (NodeLabel label : labels) {\n+        newBuilder.addNodeLabels(convertToProtoFormat(label));\n+      }\n+      builder.setNodeLabels(newBuilder.build());\n     }\n     if (this.logAggregationReportsForApps !\u003d null) {\n       addLogAggregationStatusForAppsToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "92431c961741747b5d6442f4025016d48d9a6863": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1376. NM need to notify the log aggregation status to RM through Node heartbeat. Contributed by Xuan Gong.\n",
      "commitDate": "10/04/15 8:56 AM",
      "commitName": "92431c961741747b5d6442f4025016d48d9a6863",
      "commitAuthor": "Junping Du",
      "commitDateOld": "30/03/15 12:05 PM",
      "commitNameOld": "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 10.87,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n     if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n       builder.setLastKnownContainerTokenMasterKey(\n           convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n     }\n     if (this.lastKnownNMTokenMasterKey !\u003d null) {\n       builder.setLastKnownNmTokenMasterKey(\n           convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       builder.setNodeLabels(StringArrayProto.newBuilder()\n           .addAllElements(this.labels).build());\n     }\n+    if (this.logAggregationReportsForApps !\u003d null) {\n+      addLogAggregationStatusForAppsToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      builder.setNodeLabels(StringArrayProto.newBuilder()\n          .addAllElements(this.labels).build());\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2495. Allow admin specify labels from each NM (Distributed configuration for node label). (Naganarasimha G R via wangda)\n",
      "commitDate": "30/03/15 12:05 PM",
      "commitName": "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "18/11/13 9:17 PM",
      "commitNameOld": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 496.58,
      "commitsBetweenForRepo": 3870,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,18 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n     if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n       builder.setLastKnownContainerTokenMasterKey(\n           convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n     }\n     if (this.lastKnownNMTokenMasterKey !\u003d null) {\n       builder.setLastKnownNmTokenMasterKey(\n           convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n+    if (this.labels !\u003d null) {\n+      builder.clearNodeLabels();\n+      builder.setNodeLabels(StringArrayProto.newBuilder()\n+          .addAllElements(this.labels).build());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      builder.setNodeLabels(StringArrayProto.newBuilder()\n          .addAllElements(this.labels).build());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-692. Creating NMToken master key on RM and sharing it with NM as a part of RM-NM heartbeat. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492907 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 5:06 PM",
      "commitName": "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/06/13 3:43 PM",
      "commitNameOld": "66de4ccf60107b83dd172b118b5a49969e61083e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.06,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n-    if (this.lastKnownMasterKey !\u003d null) {\n-      builder\n-        .setLastKnownMasterKey(convertToProtoFormat(this.lastKnownMasterKey));\n+    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n+      builder.setLastKnownContainerTokenMasterKey(\n+          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n+    }\n+    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n+      builder.setLastKnownNmTokenMasterKey(\n+          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownContainerTokenMasterKey !\u003d null) {\n      builder.setLastKnownContainerTokenMasterKey(\n          convertToProtoFormat(this.lastKnownContainerTokenMasterKey));\n    }\n    if (this.lastKnownNMTokenMasterKey !\u003d null) {\n      builder.setLastKnownNmTokenMasterKey(\n          convertToProtoFormat(this.lastKnownNMTokenMasterKey));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "45a8e8c5a46535287de97fd6609c0743eef888ee": {
      "type": "Ybodychange",
      "commitMessage": "YARN-60. Fixed a bug in ResourceManager which causes all NMs to get NPEs and thus causes all containers to be rejected. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1379550 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/12 12:11 PM",
      "commitName": "45a8e8c5a46535287de97fd6609c0743eef888ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 23.58,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,9 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeStatus !\u003d null) {\n       builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n     }\n+    if (this.lastKnownMasterKey !\u003d null) {\n+      builder\n+        .setLastKnownMasterKey(convertToProtoFormat(this.lastKnownMasterKey));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n    if (this.lastKnownMasterKey !\u003d null) {\n      builder\n        .setLastKnownMasterKey(convertToProtoFormat(this.lastKnownMasterKey));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,5 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.nodeStatus !\u003d null) {\n+      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeStatus !\u003d null) {\n      builder.setNodeStatus(convertToProtoFormat(this.nodeStatus));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java"
    }
  }
}