{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockTokenSecretManager.java",
  "functionName": "generateDataEncryptionKey",
  "functionId": "generateDataEncryptionKey",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
  "functionStartLine": 525,
  "functionEndLine": 536,
  "numCommitsSeen": 27,
  "timeTaken": 2422,
  "changeHistory": [
    "6a3fc685a98718742c351ed6625dc7a4dee55e77",
    "9b4a7900c7dfc0590316eedaa97144f938885651"
  ],
  "changeHistoryShort": {
    "6a3fc685a98718742c351ed6625dc7a4dee55e77": "Ybodychange",
    "9b4a7900c7dfc0590316eedaa97144f938885651": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a3fc685a98718742c351ed6625dc7a4dee55e77": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11741. Long running balancer may fail due to expired DataEncryptionKey. Contributed by Wei-Chiu Chuang and Xiao Chen.\n",
      "commitDate": "01/06/17 2:05 PM",
      "commitName": "6a3fc685a98718742c351ed6625dc7a4dee55e77",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "05/05/17 12:01 PM",
      "commitNameOld": "a3954ccab148bddc290cb96528e63ff19799bcc9",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 27.09,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public DataEncryptionKey generateDataEncryptionKey() {\n     byte[] nonce \u003d new byte[8];\n     nonceGenerator.nextBytes(nonce);\n     BlockKey key \u003d null;\n     synchronized (this) {\n       key \u003d currentKey;\n     }\n     byte[] encryptionKey \u003d createPassword(nonce, key.getKey());\n     return new DataEncryptionKey(key.getKeyId(), blockPoolId, nonce,\n-        encryptionKey, Time.now() + tokenLifetime,\n+        encryptionKey, timer.now() + tokenLifetime,\n         encryptionAlgorithm);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DataEncryptionKey generateDataEncryptionKey() {\n    byte[] nonce \u003d new byte[8];\n    nonceGenerator.nextBytes(nonce);\n    BlockKey key \u003d null;\n    synchronized (this) {\n      key \u003d currentKey;\n    }\n    byte[] encryptionKey \u003d createPassword(nonce, key.getKey());\n    return new DataEncryptionKey(key.getKeyId(), blockPoolId, nonce,\n        encryptionKey, timer.now() + tokenLifetime,\n        encryptionAlgorithm);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
      "extendedDetails": {}
    },
    "9b4a7900c7dfc0590316eedaa97144f938885651": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3637. Add support for encrypting the DataTransferProtocol. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 9:40 AM",
      "commitName": "9b4a7900c7dfc0590316eedaa97144f938885651",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,12 @@\n+  public DataEncryptionKey generateDataEncryptionKey() {\n+    byte[] nonce \u003d new byte[8];\n+    nonceGenerator.nextBytes(nonce);\n+    BlockKey key \u003d null;\n+    synchronized (this) {\n+      key \u003d currentKey;\n+    }\n+    byte[] encryptionKey \u003d createPassword(nonce, key.getKey());\n+    return new DataEncryptionKey(key.getKeyId(), blockPoolId, nonce,\n+        encryptionKey, Time.now() + tokenLifetime,\n+        encryptionAlgorithm);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public DataEncryptionKey generateDataEncryptionKey() {\n    byte[] nonce \u003d new byte[8];\n    nonceGenerator.nextBytes(nonce);\n    BlockKey key \u003d null;\n    synchronized (this) {\n      key \u003d currentKey;\n    }\n    byte[] encryptionKey \u003d createPassword(nonce, key.getKey());\n    return new DataEncryptionKey(key.getKeyId(), blockPoolId, nonce,\n        encryptionKey, Time.now() + tokenLifetime,\n        encryptionAlgorithm);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java"
    }
  }
}