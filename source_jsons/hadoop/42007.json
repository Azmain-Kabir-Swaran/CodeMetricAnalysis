{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "loadReservationSystemState",
  "functionId": "loadReservationSystemState___rmState-RMState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 535,
  "functionEndLine": 564,
  "numCommitsSeen": 77,
  "timeTaken": 2495,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
    "f271d377357ad680924d19f07e6c8315e7c89bae"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": "Ybodychange",
    "f271d377357ad680924d19f07e6c8315e7c89bae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,30 @@\n   private void loadReservationSystemState(RMState rmState) throws Exception {\n     List\u003cString\u003e planNodes \u003d getChildren(reservationRoot);\n \n     for (String planName : planNodes) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Loading plan from znode: \" + planName);\n-      }\n+      LOG.debug(\"Loading plan from znode: {}\", planName);\n \n       String planNodePath \u003d getNodePath(reservationRoot, planName);\n       List\u003cString\u003e reservationNodes \u003d getChildren(planNodePath);\n \n       for (String reservationNodeName : reservationNodes) {\n         String reservationNodePath \u003d\n             getNodePath(planNodePath, reservationNodeName);\n \n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Loading reservation from znode: \" + reservationNodePath);\n-        }\n+        LOG.debug(\"Loading reservation from znode: {}\", reservationNodePath);\n \n         byte[] reservationData \u003d getData(reservationNodePath);\n         ReservationAllocationStateProto allocationState \u003d\n             ReservationAllocationStateProto.parseFrom(reservationData);\n \n         if (!rmState.getReservationState().containsKey(planName)) {\n           rmState.getReservationState().put(planName, new HashMap\u003c\u003e());\n         }\n \n         ReservationId reservationId \u003d\n             ReservationId.parseReservationId(reservationNodeName);\n         rmState.getReservationState().get(planName).put(reservationId,\n             allocationState);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadReservationSystemState(RMState rmState) throws Exception {\n    List\u003cString\u003e planNodes \u003d getChildren(reservationRoot);\n\n    for (String planName : planNodes) {\n      LOG.debug(\"Loading plan from znode: {}\", planName);\n\n      String planNodePath \u003d getNodePath(reservationRoot, planName);\n      List\u003cString\u003e reservationNodes \u003d getChildren(planNodePath);\n\n      for (String reservationNodeName : reservationNodes) {\n        String reservationNodePath \u003d\n            getNodePath(planNodePath, reservationNodeName);\n\n        LOG.debug(\"Loading reservation from znode: {}\", reservationNodePath);\n\n        byte[] reservationData \u003d getData(reservationNodePath);\n        ReservationAllocationStateProto allocationState \u003d\n            ReservationAllocationStateProto.parseFrom(reservationData);\n\n        if (!rmState.getReservationState().containsKey(planName)) {\n          rmState.getReservationState().put(planName, new HashMap\u003c\u003e());\n        }\n\n        ReservationId reservationId \u003d\n            ReservationId.parseReservationId(reservationNodeName);\n        rmState.getReservationState().get(planName).put(reservationId,\n            allocationState);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5400. Light cleanup in ZKRMStateStore (templedf via rkanter)\n",
      "commitDate": "28/09/16 2:56 PM",
      "commitName": "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "25/09/16 11:00 PM",
      "commitNameOld": "14a696f369f7e3802587f57c8fff3aa51b5ab576",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,34 @@\n   private void loadReservationSystemState(RMState rmState) throws Exception {\n     List\u003cString\u003e planNodes \u003d getChildren(reservationRoot);\n+\n     for (String planName : planNodes) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Loading plan from znode: \" + planName);\n       }\n-      String planNodePath \u003d getNodePath(reservationRoot, planName);\n \n+      String planNodePath \u003d getNodePath(reservationRoot, planName);\n       List\u003cString\u003e reservationNodes \u003d getChildren(planNodePath);\n+\n       for (String reservationNodeName : reservationNodes) {\n-        String reservationNodePath \u003d getNodePath(planNodePath,\n-            reservationNodeName);\n+        String reservationNodePath \u003d\n+            getNodePath(planNodePath, reservationNodeName);\n+\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Loading reservation from znode: \" + reservationNodePath);\n         }\n+\n         byte[] reservationData \u003d getData(reservationNodePath);\n         ReservationAllocationStateProto allocationState \u003d\n             ReservationAllocationStateProto.parseFrom(reservationData);\n+\n         if (!rmState.getReservationState().containsKey(planName)) {\n-          rmState.getReservationState().put(planName,\n-              new HashMap\u003cReservationId, ReservationAllocationStateProto\u003e());\n+          rmState.getReservationState().put(planName, new HashMap\u003c\u003e());\n         }\n+\n         ReservationId reservationId \u003d\n             ReservationId.parseReservationId(reservationNodeName);\n         rmState.getReservationState().get(planName).put(reservationId,\n             allocationState);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadReservationSystemState(RMState rmState) throws Exception {\n    List\u003cString\u003e planNodes \u003d getChildren(reservationRoot);\n\n    for (String planName : planNodes) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Loading plan from znode: \" + planName);\n      }\n\n      String planNodePath \u003d getNodePath(reservationRoot, planName);\n      List\u003cString\u003e reservationNodes \u003d getChildren(planNodePath);\n\n      for (String reservationNodeName : reservationNodes) {\n        String reservationNodePath \u003d\n            getNodePath(planNodePath, reservationNodeName);\n\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Loading reservation from znode: \" + reservationNodePath);\n        }\n\n        byte[] reservationData \u003d getData(reservationNodePath);\n        ReservationAllocationStateProto allocationState \u003d\n            ReservationAllocationStateProto.parseFrom(reservationData);\n\n        if (!rmState.getReservationState().containsKey(planName)) {\n          rmState.getReservationState().put(planName, new HashMap\u003c\u003e());\n        }\n\n        ReservationId reservationId \u003d\n            ReservationId.parseReservationId(reservationNodeName);\n        rmState.getReservationState().get(planName).put(reservationId,\n            allocationState);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "f271d377357ad680924d19f07e6c8315e7c89bae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3736. Add RMStateStore apis to store and load accepted reservations for failover (adhoot via asuresh)\n",
      "commitDate": "05/08/15 12:57 PM",
      "commitName": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,29 @@\n+  private void loadReservationSystemState(RMState rmState) throws Exception {\n+    List\u003cString\u003e planNodes \u003d getChildren(reservationRoot);\n+    for (String planName : planNodes) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Loading plan from znode: \" + planName);\n+      }\n+      String planNodePath \u003d getNodePath(reservationRoot, planName);\n+\n+      List\u003cString\u003e reservationNodes \u003d getChildren(planNodePath);\n+      for (String reservationNodeName : reservationNodes) {\n+        String reservationNodePath \u003d getNodePath(planNodePath,\n+            reservationNodeName);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Loading reservation from znode: \" + reservationNodePath);\n+        }\n+        byte[] reservationData \u003d getData(reservationNodePath);\n+        ReservationAllocationStateProto allocationState \u003d\n+            ReservationAllocationStateProto.parseFrom(reservationData);\n+        if (!rmState.getReservationState().containsKey(planName)) {\n+          rmState.getReservationState().put(planName,\n+              new HashMap\u003cReservationId, ReservationAllocationStateProto\u003e());\n+        }\n+        ReservationId reservationId \u003d\n+            ReservationId.parseReservationId(reservationNodeName);\n+        rmState.getReservationState().get(planName).put(reservationId,\n+            allocationState);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadReservationSystemState(RMState rmState) throws Exception {\n    List\u003cString\u003e planNodes \u003d getChildren(reservationRoot);\n    for (String planName : planNodes) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Loading plan from znode: \" + planName);\n      }\n      String planNodePath \u003d getNodePath(reservationRoot, planName);\n\n      List\u003cString\u003e reservationNodes \u003d getChildren(planNodePath);\n      for (String reservationNodeName : reservationNodes) {\n        String reservationNodePath \u003d getNodePath(planNodePath,\n            reservationNodeName);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Loading reservation from znode: \" + reservationNodePath);\n        }\n        byte[] reservationData \u003d getData(reservationNodePath);\n        ReservationAllocationStateProto allocationState \u003d\n            ReservationAllocationStateProto.parseFrom(reservationData);\n        if (!rmState.getReservationState().containsKey(planName)) {\n          rmState.getReservationState().put(planName,\n              new HashMap\u003cReservationId, ReservationAllocationStateProto\u003e());\n        }\n        ReservationId reservationId \u003d\n            ReservationId.parseReservationId(reservationNodeName);\n        rmState.getReservationState().get(planName).put(reservationId,\n            allocationState);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}