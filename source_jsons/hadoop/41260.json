{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MaxRunningAppsEnforcer.java",
  "functionName": "next",
  "functionId": "next",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
  "functionStartLine": 355,
  "functionEndLine": 371,
  "numCommitsSeen": 11,
  "timeTaken": 1106,
  "changeHistory": [
    "486e718fc1f5befd231494e2ec06bb360484f191",
    "61b6ed73f8a5a75951c7b355c673459874eef7c3"
  ],
  "changeHistoryShort": {
    "486e718fc1f5befd231494e2ec06bb360484f191": "Ymultichange(Yreturntypechange,Ybodychange)",
    "61b6ed73f8a5a75951c7b355c673459874eef7c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "486e718fc1f5befd231494e2ec06bb360484f191": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 2:43 PM",
      "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/08/14 2:43 PM",
          "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "05/02/14 10:09 AM",
          "commitNameOld": "e6eccf20defcaf84a9566482371c7be196779c0d",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 188.15,
          "commitsBetweenForRepo": 1328,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public FSSchedulerApp next() {\n+    public FSAppAttempt next() {\n       IndexAndTime indexAndTime \u003d appListsByCurStartTime.remove();\n       int nextListIndex \u003d indexAndTime.index;\n-      AppSchedulable next \u003d appLists[nextListIndex]\n+      FSAppAttempt next \u003d appLists[nextListIndex]\n           .get(curPositionsInAppLists[nextListIndex]);\n       curPositionsInAppLists[nextListIndex]++;\n \n       if (curPositionsInAppLists[nextListIndex] \u003c appLists[nextListIndex].size()) {\n         indexAndTime.time \u003d appLists[nextListIndex]\n             .get(curPositionsInAppLists[nextListIndex]).getStartTime();\n       } else {\n         indexAndTime.time \u003d Long.MAX_VALUE;\n       }\n       appListsByCurStartTime.add(indexAndTime);\n \n-      return next.getApp();\n+      return next;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public FSAppAttempt next() {\n      IndexAndTime indexAndTime \u003d appListsByCurStartTime.remove();\n      int nextListIndex \u003d indexAndTime.index;\n      FSAppAttempt next \u003d appLists[nextListIndex]\n          .get(curPositionsInAppLists[nextListIndex]);\n      curPositionsInAppLists[nextListIndex]++;\n\n      if (curPositionsInAppLists[nextListIndex] \u003c appLists[nextListIndex].size()) {\n        indexAndTime.time \u003d appLists[nextListIndex]\n            .get(curPositionsInAppLists[nextListIndex]).getStartTime();\n      } else {\n        indexAndTime.time \u003d Long.MAX_VALUE;\n      }\n      appListsByCurStartTime.add(indexAndTime);\n\n      return next;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
          "extendedDetails": {
            "oldValue": "FSSchedulerApp",
            "newValue": "FSAppAttempt"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/08/14 2:43 PM",
          "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "05/02/14 10:09 AM",
          "commitNameOld": "e6eccf20defcaf84a9566482371c7be196779c0d",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 188.15,
          "commitsBetweenForRepo": 1328,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public FSSchedulerApp next() {\n+    public FSAppAttempt next() {\n       IndexAndTime indexAndTime \u003d appListsByCurStartTime.remove();\n       int nextListIndex \u003d indexAndTime.index;\n-      AppSchedulable next \u003d appLists[nextListIndex]\n+      FSAppAttempt next \u003d appLists[nextListIndex]\n           .get(curPositionsInAppLists[nextListIndex]);\n       curPositionsInAppLists[nextListIndex]++;\n \n       if (curPositionsInAppLists[nextListIndex] \u003c appLists[nextListIndex].size()) {\n         indexAndTime.time \u003d appLists[nextListIndex]\n             .get(curPositionsInAppLists[nextListIndex]).getStartTime();\n       } else {\n         indexAndTime.time \u003d Long.MAX_VALUE;\n       }\n       appListsByCurStartTime.add(indexAndTime);\n \n-      return next.getApp();\n+      return next;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public FSAppAttempt next() {\n      IndexAndTime indexAndTime \u003d appListsByCurStartTime.remove();\n      int nextListIndex \u003d indexAndTime.index;\n      FSAppAttempt next \u003d appLists[nextListIndex]\n          .get(curPositionsInAppLists[nextListIndex]);\n      curPositionsInAppLists[nextListIndex]++;\n\n      if (curPositionsInAppLists[nextListIndex] \u003c appLists[nextListIndex].size()) {\n        indexAndTime.time \u003d appLists[nextListIndex]\n            .get(curPositionsInAppLists[nextListIndex]).getStartTime();\n      } else {\n        indexAndTime.time \u003d Long.MAX_VALUE;\n      }\n      appListsByCurStartTime.add(indexAndTime);\n\n      return next;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
          "extendedDetails": {}
        }
      ]
    },
    "61b6ed73f8a5a75951c7b355c673459874eef7c3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1241: Include missing files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546625 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/13 11:08 AM",
      "commitName": "61b6ed73f8a5a75951c7b355c673459874eef7c3",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,17 @@\n+    public FSSchedulerApp next() {\n+      IndexAndTime indexAndTime \u003d appListsByCurStartTime.remove();\n+      int nextListIndex \u003d indexAndTime.index;\n+      AppSchedulable next \u003d appLists[nextListIndex]\n+          .get(curPositionsInAppLists[nextListIndex]);\n+      curPositionsInAppLists[nextListIndex]++;\n+\n+      if (curPositionsInAppLists[nextListIndex] \u003c appLists[nextListIndex].size()) {\n+        indexAndTime.time \u003d appLists[nextListIndex]\n+            .get(curPositionsInAppLists[nextListIndex]).getStartTime();\n+      } else {\n+        indexAndTime.time \u003d Long.MAX_VALUE;\n+      }\n+      appListsByCurStartTime.add(indexAndTime);\n+\n+      return next.getApp();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public FSSchedulerApp next() {\n      IndexAndTime indexAndTime \u003d appListsByCurStartTime.remove();\n      int nextListIndex \u003d indexAndTime.index;\n      AppSchedulable next \u003d appLists[nextListIndex]\n          .get(curPositionsInAppLists[nextListIndex]);\n      curPositionsInAppLists[nextListIndex]++;\n\n      if (curPositionsInAppLists[nextListIndex] \u003c appLists[nextListIndex].size()) {\n        indexAndTime.time \u003d appLists[nextListIndex]\n            .get(curPositionsInAppLists[nextListIndex]).getStartTime();\n      } else {\n        indexAndTime.time \u003d Long.MAX_VALUE;\n      }\n      appListsByCurStartTime.add(indexAndTime);\n\n      return next.getApp();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java"
    }
  }
}