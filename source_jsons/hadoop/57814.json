{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Router.java",
  "functionName": "isGoodMatch",
  "functionId": "isGoodMatch___dest-Dest__path-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
  "functionStartLine": 217,
  "functionEndLine": 229,
  "numCommitsSeen": 10,
  "timeTaken": 7144,
  "changeHistory": [
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static boolean isGoodMatch(Dest dest, String path) {\n    if (SLASH.countIn(dest.prefix) \u003e 1) {\n      return true;\n    }\n    // We want to match (/foo, :a) for /foo/bar/blah and (/, :a) for /123\n    // but NOT / for /foo or (/, :a) for /foo or /foo/ because default route\n    // (FooController#index) for /foo and /foo/ takes precedence.\n    if (dest.prefix.length() \u003d\u003d 1) {\n      return dest.pathParams.size() \u003e 0 \u0026\u0026 !maybeController(path);\n    }\n    return dest.pathParams.size() \u003e 0 || // /foo should match /foo/\n        (path.endsWith(\"/\") \u0026\u0026 SLASH.countIn(path) \u003d\u003d 2);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static boolean isGoodMatch(Dest dest, String path) {\n    if (SLASH.countIn(dest.prefix) \u003e 1) {\n      return true;\n    }\n    // We want to match (/foo, :a) for /foo/bar/blah and (/, :a) for /123\n    // but NOT / for /foo or (/, :a) for /foo or /foo/ because default route\n    // (FooController#index) for /foo and /foo/ takes precedence.\n    if (dest.prefix.length() \u003d\u003d 1) {\n      return dest.pathParams.size() \u003e 0 \u0026\u0026 !maybeController(path);\n    }\n    return dest.pathParams.size() \u003e 0 || // /foo should match /foo/\n        (path.endsWith(\"/\") \u0026\u0026 SLASH.countIn(path) \u003d\u003d 2);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  static boolean isGoodMatch(Dest dest, String path) {\n+    if (SLASH.countIn(dest.prefix) \u003e 1) {\n+      return true;\n+    }\n+    // We want to match (/foo, :a) for /foo/bar/blah and (/, :a) for /123\n+    // but NOT / for /foo or (/, :a) for /foo or /foo/ because default route\n+    // (FooController#index) for /foo and /foo/ takes precedence.\n+    if (dest.prefix.length() \u003d\u003d 1) {\n+      return dest.pathParams.size() \u003e 0 \u0026\u0026 !maybeController(path);\n+    }\n+    return dest.pathParams.size() \u003e 0 || // /foo should match /foo/\n+        (path.endsWith(\"/\") \u0026\u0026 SLASH.countIn(path) \u003d\u003d 2);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isGoodMatch(Dest dest, String path) {\n    if (SLASH.countIn(dest.prefix) \u003e 1) {\n      return true;\n    }\n    // We want to match (/foo, :a) for /foo/bar/blah and (/, :a) for /123\n    // but NOT / for /foo or (/, :a) for /foo or /foo/ because default route\n    // (FooController#index) for /foo and /foo/ takes precedence.\n    if (dest.prefix.length() \u003d\u003d 1) {\n      return dest.pathParams.size() \u003e 0 \u0026\u0026 !maybeController(path);\n    }\n    return dest.pathParams.size() \u003e 0 || // /foo should match /foo/\n        (path.endsWith(\"/\") \u0026\u0026 SLASH.countIn(path) \u003d\u003d 2);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
    }
  }
}