{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "setDeferredResponse",
  "functionId": "setDeferredResponse___response-Writable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 936,
  "functionEndLine": 937,
  "numCommitsSeen": 162,
  "timeTaken": 2392,
  "changeHistory": [
    "3d94da1e00fc6238fad458e415219f87920f1fc3"
  ],
  "changeHistoryShort": {
    "3d94da1e00fc6238fad458e415219f87920f1fc3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d94da1e00fc6238fad458e415219f87920f1fc3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11552. Allow handoff on the server side for RPC requests. Contributed by Siddharth Seth\n",
      "commitDate": "23/11/16 4:01 PM",
      "commitName": "3d94da1e00fc6238fad458e415219f87920f1fc3",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,18 @@\n+    public void setDeferredResponse(Writable response) {\n+      if (this.connection.getServer().running) {\n+        try {\n+          setupResponse(this, RpcStatusProto.SUCCESS, null, response,\n+              null, null);\n+        } catch (IOException e) {\n+          // For synchronous calls, application code is done once it has\n+          // returned from a method. It does not expect to receive an error.\n+          // This is equivalent to what happens in synchronous calls when the\n+          // response cannot be sent.\n+          LOG.error(\n+              \"Failed to setup deferred successful response. ThreadName\u003d\" +\n+                  Thread.currentThread().getName() + \", Call\u003d\" + this);\n+          return;\n+        }\n+        sendDeferedResponse();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void setDeferredResponse(Writable response) {\n      if (this.connection.getServer().running) {\n        try {\n          setupResponse(this, RpcStatusProto.SUCCESS, null, response,\n              null, null);\n        } catch (IOException e) {\n          // For synchronous calls, application code is done once it has\n          // returned from a method. It does not expect to receive an error.\n          // This is equivalent to what happens in synchronous calls when the\n          // response cannot be sent.\n          LOG.error(\n              \"Failed to setup deferred successful response. ThreadName\u003d\" +\n                  Thread.currentThread().getName() + \", Call\u003d\" + this);\n          return;\n        }\n        sendDeferedResponse();\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}