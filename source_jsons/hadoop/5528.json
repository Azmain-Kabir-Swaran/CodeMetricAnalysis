{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "INodeFile.java",
  "functionName": "checkBlockComplete",
  "functionId": "checkBlockComplete___blocks-BlockInfo[]__i-int__numCommittedAllowed-int__minReplication-short",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
  "functionStartLine": 370,
  "functionEndLine": 390,
  "numCommitsSeen": 163,
  "timeTaken": 2204,
  "changeHistory": [
    "bd909ed9f2d853f614f04a50e2230a7932732776"
  ],
  "changeHistoryShort": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
      "commitDate": "25/01/16 6:32 PM",
      "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,21 @@\n+  static String checkBlockComplete(BlockInfo[] blocks, int i,\n+      int numCommittedAllowed, short minReplication) {\n+    final BlockInfo b \u003d blocks[i];\n+    final BlockUCState state \u003d b.getBlockUCState();\n+    if (state \u003d\u003d BlockUCState.COMPLETE) {\n+      return null;\n+    }\n+    if (b.isStriped() || i \u003c blocks.length - numCommittedAllowed) {\n+      return b + \" is \" + state + \" but not COMPLETE\";\n+    }\n+    if (state !\u003d BlockUCState.COMMITTED) {\n+      return b + \" is \" + state + \" but neither COMPLETE nor COMMITTED\";\n+    }\n+    final int numExpectedLocations\n+        \u003d b.getUnderConstructionFeature().getNumExpectedLocations();\n+    if (numExpectedLocations \u003c\u003d minReplication) {\n+      return b + \" is \" + state + \" but numExpectedLocations \u003d \"\n+          + numExpectedLocations + \" \u003c\u003d minReplication \u003d \" + minReplication;\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static String checkBlockComplete(BlockInfo[] blocks, int i,\n      int numCommittedAllowed, short minReplication) {\n    final BlockInfo b \u003d blocks[i];\n    final BlockUCState state \u003d b.getBlockUCState();\n    if (state \u003d\u003d BlockUCState.COMPLETE) {\n      return null;\n    }\n    if (b.isStriped() || i \u003c blocks.length - numCommittedAllowed) {\n      return b + \" is \" + state + \" but not COMPLETE\";\n    }\n    if (state !\u003d BlockUCState.COMMITTED) {\n      return b + \" is \" + state + \" but neither COMPLETE nor COMMITTED\";\n    }\n    final int numExpectedLocations\n        \u003d b.getUnderConstructionFeature().getNumExpectedLocations();\n    if (numExpectedLocations \u003c\u003d minReplication) {\n      return b + \" is \" + state + \" but numExpectedLocations \u003d \"\n          + numExpectedLocations + \" \u003c\u003d minReplication \u003d \" + minReplication;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java"
    }
  }
}