{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Interns.java",
  "functionName": "add",
  "functionId": "add___k1-K1__k2-K2",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/Interns.java",
  "functionStartLine": 61,
  "functionEndLine": 84,
  "numCommitsSeen": 6,
  "timeTaken": 984,
  "changeHistory": [
    "27b131e79c5fa99de3ed4fb529d854dd5da55bde",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de"
  ],
  "changeHistoryShort": {
    "27b131e79c5fa99de3ed4fb529d854dd5da55bde": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "27b131e79c5fa99de3ed4fb529d854dd5da55bde": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12822. Change \"Metrics intern cache overflow\" log level from WARN to INFO. Contributed by Andras Bokor.\n",
      "commitDate": "13/04/16 6:55 PM",
      "commitName": "27b131e79c5fa99de3ed4fb529d854dd5da55bde",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1694.07,
      "commitsBetweenForRepo": 11898,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     synchronized V add(K1 k1, K2 k2) {\n       Map\u003cK2, V\u003e k2Map \u003d k1Map.get(k1);\n       if (k2Map \u003d\u003d null) {\n         k2Map \u003d new LinkedHashMap\u003cK2, V\u003e() {\n           private static final long serialVersionUID \u003d 1L;\n           private boolean gotOverflow \u003d false;\n           @Override protected boolean removeEldestEntry(Map.Entry\u003cK2, V\u003e e) {\n             boolean overflow \u003d expireKey2At(size());\n             if (overflow \u0026\u0026 !gotOverflow) {\n-              LOG.warn(\"Metrics intern cache overflow at \"+ size() +\" for \"+ e);\n+              LOG.info(\"Metrics intern cache overflow at {} for {}\", size(), e);\n               gotOverflow \u003d true;\n             }\n             return overflow;\n           }\n         };\n         k1Map.put(k1, k2Map);\n       }\n       V v \u003d k2Map.get(k2);\n       if (v \u003d\u003d null) {\n         v \u003d newValue(k1, k2);\n         k2Map.put(k2, v);\n       }\n       return v;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized V add(K1 k1, K2 k2) {\n      Map\u003cK2, V\u003e k2Map \u003d k1Map.get(k1);\n      if (k2Map \u003d\u003d null) {\n        k2Map \u003d new LinkedHashMap\u003cK2, V\u003e() {\n          private static final long serialVersionUID \u003d 1L;\n          private boolean gotOverflow \u003d false;\n          @Override protected boolean removeEldestEntry(Map.Entry\u003cK2, V\u003e e) {\n            boolean overflow \u003d expireKey2At(size());\n            if (overflow \u0026\u0026 !gotOverflow) {\n              LOG.info(\"Metrics intern cache overflow at {} for {}\", size(), e);\n              gotOverflow \u003d true;\n            }\n            return overflow;\n          }\n        };\n        k1Map.put(k1, k2Map);\n      }\n      V v \u003d k2Map.get(k2);\n      if (v \u003d\u003d null) {\n        v \u003d newValue(k1, k2);\n        k2Map.put(k2, v);\n      }\n      return v;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/Interns.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    synchronized V add(K1 k1, K2 k2) {\n      Map\u003cK2, V\u003e k2Map \u003d k1Map.get(k1);\n      if (k2Map \u003d\u003d null) {\n        k2Map \u003d new LinkedHashMap\u003cK2, V\u003e() {\n          private static final long serialVersionUID \u003d 1L;\n          private boolean gotOverflow \u003d false;\n          @Override protected boolean removeEldestEntry(Map.Entry\u003cK2, V\u003e e) {\n            boolean overflow \u003d expireKey2At(size());\n            if (overflow \u0026\u0026 !gotOverflow) {\n              LOG.warn(\"Metrics intern cache overflow at \"+ size() +\" for \"+ e);\n              gotOverflow \u003d true;\n            }\n            return overflow;\n          }\n        };\n        k1Map.put(k1, k2Map);\n      }\n      V v \u003d k2Map.get(k2);\n      if (v \u003d\u003d null) {\n        v \u003d newValue(k1, k2);\n        k2Map.put(k2, v);\n      }\n      return v;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/Interns.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/Interns.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/Interns.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    synchronized V add(K1 k1, K2 k2) {\n      Map\u003cK2, V\u003e k2Map \u003d k1Map.get(k1);\n      if (k2Map \u003d\u003d null) {\n        k2Map \u003d new LinkedHashMap\u003cK2, V\u003e() {\n          private static final long serialVersionUID \u003d 1L;\n          private boolean gotOverflow \u003d false;\n          @Override protected boolean removeEldestEntry(Map.Entry\u003cK2, V\u003e e) {\n            boolean overflow \u003d expireKey2At(size());\n            if (overflow \u0026\u0026 !gotOverflow) {\n              LOG.warn(\"Metrics intern cache overflow at \"+ size() +\" for \"+ e);\n              gotOverflow \u003d true;\n            }\n            return overflow;\n          }\n        };\n        k1Map.put(k1, k2Map);\n      }\n      V v \u003d k2Map.get(k2);\n      if (v \u003d\u003d null) {\n        v \u003d newValue(k1, k2);\n        k2Map.put(k2, v);\n      }\n      return v;\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/Interns.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/metrics2/lib/Interns.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/Interns.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    synchronized V add(K1 k1, K2 k2) {\n      Map\u003cK2, V\u003e k2Map \u003d k1Map.get(k1);\n      if (k2Map \u003d\u003d null) {\n        k2Map \u003d new LinkedHashMap\u003cK2, V\u003e() {\n          private static final long serialVersionUID \u003d 1L;\n          private boolean gotOverflow \u003d false;\n          @Override protected boolean removeEldestEntry(Map.Entry\u003cK2, V\u003e e) {\n            boolean overflow \u003d expireKey2At(size());\n            if (overflow \u0026\u0026 !gotOverflow) {\n              LOG.warn(\"Metrics intern cache overflow at \"+ size() +\" for \"+ e);\n              gotOverflow \u003d true;\n            }\n            return overflow;\n          }\n        };\n        k1Map.put(k1, k2Map);\n      }\n      V v \u003d k2Map.get(k2);\n      if (v \u003d\u003d null) {\n        v \u003d newValue(k1, k2);\n        k2Map.put(k2, v);\n      }\n      return v;\n    }",
      "path": "common/src/java/org/apache/hadoop/metrics2/lib/Interns.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/metrics2/lib/Interns.java",
        "newPath": "common/src/java/org/apache/hadoop/metrics2/lib/Interns.java"
      }
    },
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6919. New metrics2 framework. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1100113 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/11 12:28 AM",
      "commitName": "827401a9b1d85fe1f443d21ebe9d917ba23153de",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,24 @@\n+    synchronized V add(K1 k1, K2 k2) {\n+      Map\u003cK2, V\u003e k2Map \u003d k1Map.get(k1);\n+      if (k2Map \u003d\u003d null) {\n+        k2Map \u003d new LinkedHashMap\u003cK2, V\u003e() {\n+          private static final long serialVersionUID \u003d 1L;\n+          private boolean gotOverflow \u003d false;\n+          @Override protected boolean removeEldestEntry(Map.Entry\u003cK2, V\u003e e) {\n+            boolean overflow \u003d expireKey2At(size());\n+            if (overflow \u0026\u0026 !gotOverflow) {\n+              LOG.warn(\"Metrics intern cache overflow at \"+ size() +\" for \"+ e);\n+              gotOverflow \u003d true;\n+            }\n+            return overflow;\n+          }\n+        };\n+        k1Map.put(k1, k2Map);\n+      }\n+      V v \u003d k2Map.get(k2);\n+      if (v \u003d\u003d null) {\n+        v \u003d newValue(k1, k2);\n+        k2Map.put(k2, v);\n+      }\n+      return v;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized V add(K1 k1, K2 k2) {\n      Map\u003cK2, V\u003e k2Map \u003d k1Map.get(k1);\n      if (k2Map \u003d\u003d null) {\n        k2Map \u003d new LinkedHashMap\u003cK2, V\u003e() {\n          private static final long serialVersionUID \u003d 1L;\n          private boolean gotOverflow \u003d false;\n          @Override protected boolean removeEldestEntry(Map.Entry\u003cK2, V\u003e e) {\n            boolean overflow \u003d expireKey2At(size());\n            if (overflow \u0026\u0026 !gotOverflow) {\n              LOG.warn(\"Metrics intern cache overflow at \"+ size() +\" for \"+ e);\n              gotOverflow \u003d true;\n            }\n            return overflow;\n          }\n        };\n        k1Map.put(k1, k2Map);\n      }\n      V v \u003d k2Map.get(k2);\n      if (v \u003d\u003d null) {\n        v \u003d newValue(k1, k2);\n        k2Map.put(k2, v);\n      }\n      return v;\n    }",
      "path": "src/java/org/apache/hadoop/metrics2/lib/Interns.java"
    }
  }
}