{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractFSNodeStore.java",
  "functionName": "initFileSystem",
  "functionId": "initFileSystem___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
  "functionStartLine": 84,
  "functionEndLine": 92,
  "numCommitsSeen": 15,
  "timeTaken": 2899,
  "changeHistory": [
    "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
    "b733a6f86262522e535cebc972baecbe6a6eab50",
    "f5acf94ecafb301a0cc8e8f91f19c8bcbc8da701",
    "db7f1653198b950e89567c06898d64f6b930a0ee"
  ],
  "changeHistoryShort": {
    "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0": "Ymultichange(Ymovefromfile,Ymodifierchange,Yrename)",
    "b733a6f86262522e535cebc972baecbe6a6eab50": "Ybodychange",
    "f5acf94ecafb301a0cc8e8f91f19c8bcbc8da701": "Ymodifierchange",
    "db7f1653198b950e89567c06898d64f6b930a0ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yrename)",
      "commitMessage": "YARN-7988. Refactor FSNodeLabelStore code for Node Attributes store support. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7988. Refactor FSNodeLabelStore code for Node Attributes store support. Contributed by Bibin A Chundatt.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,9 @@\n-  void setFileSystem(Configuration conf) throws IOException {\n+  public void initFileSystem(Configuration conf) throws IOException {\n     Configuration confCopy \u003d new Configuration(conf);\n     fs \u003d fsWorkingPath.getFileSystem(confCopy);\n-\n     // if it\u0027s local file system, use RawLocalFileSystem instead of\n     // LocalFileSystem, the latter one doesn\u0027t support append.\n     if (fs.getScheme().equals(\"file\")) {\n-      fs \u003d ((LocalFileSystem)fs).getRaw();\n+      fs \u003d ((LocalFileSystem) fs).getRaw();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initFileSystem(Configuration conf) throws IOException {\n    Configuration confCopy \u003d new Configuration(conf);\n    fs \u003d fsWorkingPath.getFileSystem(confCopy);\n    // if it\u0027s local file system, use RawLocalFileSystem instead of\n    // LocalFileSystem, the latter one doesn\u0027t support append.\n    if (fs.getScheme().equals(\"file\")) {\n      fs \u003d ((LocalFileSystem) fs).getRaw();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
            "oldMethodName": "setFileSystem",
            "newMethodName": "initFileSystem"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7988. Refactor FSNodeLabelStore code for Node Attributes store support. Contributed by Bibin A Chundatt.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,9 @@\n-  void setFileSystem(Configuration conf) throws IOException {\n+  public void initFileSystem(Configuration conf) throws IOException {\n     Configuration confCopy \u003d new Configuration(conf);\n     fs \u003d fsWorkingPath.getFileSystem(confCopy);\n-\n     // if it\u0027s local file system, use RawLocalFileSystem instead of\n     // LocalFileSystem, the latter one doesn\u0027t support append.\n     if (fs.getScheme().equals(\"file\")) {\n-      fs \u003d ((LocalFileSystem)fs).getRaw();\n+      fs \u003d ((LocalFileSystem) fs).getRaw();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initFileSystem(Configuration conf) throws IOException {\n    Configuration confCopy \u003d new Configuration(conf);\n    fs \u003d fsWorkingPath.getFileSystem(confCopy);\n    // if it\u0027s local file system, use RawLocalFileSystem instead of\n    // LocalFileSystem, the latter one doesn\u0027t support append.\n    if (fs.getScheme().equals(\"file\")) {\n      fs \u003d ((LocalFileSystem) fs).getRaw();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-7988. Refactor FSNodeLabelStore code for Node Attributes store support. Contributed by Bibin A Chundatt.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,9 @@\n-  void setFileSystem(Configuration conf) throws IOException {\n+  public void initFileSystem(Configuration conf) throws IOException {\n     Configuration confCopy \u003d new Configuration(conf);\n     fs \u003d fsWorkingPath.getFileSystem(confCopy);\n-\n     // if it\u0027s local file system, use RawLocalFileSystem instead of\n     // LocalFileSystem, the latter one doesn\u0027t support append.\n     if (fs.getScheme().equals(\"file\")) {\n-      fs \u003d ((LocalFileSystem)fs).getRaw();\n+      fs \u003d ((LocalFileSystem) fs).getRaw();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initFileSystem(Configuration conf) throws IOException {\n    Configuration confCopy \u003d new Configuration(conf);\n    fs \u003d fsWorkingPath.getFileSystem(confCopy);\n    // if it\u0027s local file system, use RawLocalFileSystem instead of\n    // LocalFileSystem, the latter one doesn\u0027t support append.\n    if (fs.getScheme().equals(\"file\")) {\n      fs \u003d ((LocalFileSystem) fs).getRaw();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/store/AbstractFSNodeStore.java",
          "extendedDetails": {
            "oldValue": "setFileSystem",
            "newValue": "initFileSystem"
          }
        }
      ]
    },
    "b733a6f86262522e535cebc972baecbe6a6eab50": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5718. TimelineClient (and other places in YARN) shouldn\u0027t over-write HDFS client retry settings which could cause unexpected behavior. Contributed by Junping Du.\n",
      "commitDate": "18/10/16 11:06 AM",
      "commitName": "b733a6f86262522e535cebc972baecbe6a6eab50",
      "commitAuthor": "Xuan",
      "commitDateOld": "03/12/15 5:45 PM",
      "commitNameOld": "755dda8dd8bb23864abc752bad506f223fcac010",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 319.68,
      "commitsBetweenForRepo": 2181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,10 @@\n   void setFileSystem(Configuration conf) throws IOException {\n     Configuration confCopy \u003d new Configuration(conf);\n-    confCopy.setBoolean(\"dfs.client.retry.policy.enabled\", true);\n-    String retryPolicy \u003d\n-        confCopy.get(YarnConfiguration.FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC,\n-            YarnConfiguration.DEFAULT_FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC);\n-    confCopy.set(\"dfs.client.retry.policy.spec\", retryPolicy);\n     fs \u003d fsWorkingPath.getFileSystem(confCopy);\n-    \n+\n     // if it\u0027s local file system, use RawLocalFileSystem instead of\n     // LocalFileSystem, the latter one doesn\u0027t support append.\n     if (fs.getScheme().equals(\"file\")) {\n       fs \u003d ((LocalFileSystem)fs).getRaw();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setFileSystem(Configuration conf) throws IOException {\n    Configuration confCopy \u003d new Configuration(conf);\n    fs \u003d fsWorkingPath.getFileSystem(confCopy);\n\n    // if it\u0027s local file system, use RawLocalFileSystem instead of\n    // LocalFileSystem, the latter one doesn\u0027t support append.\n    if (fs.getScheme().equals(\"file\")) {\n      fs \u003d ((LocalFileSystem)fs).getRaw();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore.java",
      "extendedDetails": {}
    },
    "f5acf94ecafb301a0cc8e8f91f19c8bcbc8da701": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4365. FileSystemNodeLabelStore should check for root dir existence on startup. Contributed by Kuhu Shukla\n",
      "commitDate": "24/11/15 3:47 PM",
      "commitName": "f5acf94ecafb301a0cc8e8f91f19c8bcbc8da701",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "29/07/15 11:00 AM",
      "commitNameOld": "c020b62cf8de1f3baadc9d2f3410640ef7880543",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 118.24,
      "commitsBetweenForRepo": 837,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-  private void setFileSystem(Configuration conf) throws IOException {\n+  void setFileSystem(Configuration conf) throws IOException {\n     Configuration confCopy \u003d new Configuration(conf);\n     confCopy.setBoolean(\"dfs.client.retry.policy.enabled\", true);\n     String retryPolicy \u003d\n         confCopy.get(YarnConfiguration.FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC,\n             YarnConfiguration.DEFAULT_FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC);\n     confCopy.set(\"dfs.client.retry.policy.spec\", retryPolicy);\n     fs \u003d fsWorkingPath.getFileSystem(confCopy);\n     \n     // if it\u0027s local file system, use RawLocalFileSystem instead of\n     // LocalFileSystem, the latter one doesn\u0027t support append.\n     if (fs.getScheme().equals(\"file\")) {\n       fs \u003d ((LocalFileSystem)fs).getRaw();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setFileSystem(Configuration conf) throws IOException {\n    Configuration confCopy \u003d new Configuration(conf);\n    confCopy.setBoolean(\"dfs.client.retry.policy.enabled\", true);\n    String retryPolicy \u003d\n        confCopy.get(YarnConfiguration.FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC,\n            YarnConfiguration.DEFAULT_FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC);\n    confCopy.set(\"dfs.client.retry.policy.spec\", retryPolicy);\n    fs \u003d fsWorkingPath.getFileSystem(confCopy);\n    \n    // if it\u0027s local file system, use RawLocalFileSystem instead of\n    // LocalFileSystem, the latter one doesn\u0027t support append.\n    if (fs.getScheme().equals(\"file\")) {\n      fs \u003d ((LocalFileSystem)fs).getRaw();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "db7f1653198b950e89567c06898d64f6b930a0ee": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2494. Added NodeLabels Manager internal API and implementation. Contributed by Wangda Tan.\n",
      "commitDate": "10/10/14 11:44 AM",
      "commitName": "db7f1653198b950e89567c06898d64f6b930a0ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+  private void setFileSystem(Configuration conf) throws IOException {\n+    Configuration confCopy \u003d new Configuration(conf);\n+    confCopy.setBoolean(\"dfs.client.retry.policy.enabled\", true);\n+    String retryPolicy \u003d\n+        confCopy.get(YarnConfiguration.FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC,\n+            YarnConfiguration.DEFAULT_FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC);\n+    confCopy.set(\"dfs.client.retry.policy.spec\", retryPolicy);\n+    fs \u003d fsWorkingPath.getFileSystem(confCopy);\n+    \n+    // if it\u0027s local file system, use RawLocalFileSystem instead of\n+    // LocalFileSystem, the latter one doesn\u0027t support append.\n+    if (fs.getScheme().equals(\"file\")) {\n+      fs \u003d ((LocalFileSystem)fs).getRaw();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setFileSystem(Configuration conf) throws IOException {\n    Configuration confCopy \u003d new Configuration(conf);\n    confCopy.setBoolean(\"dfs.client.retry.policy.enabled\", true);\n    String retryPolicy \u003d\n        confCopy.get(YarnConfiguration.FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC,\n            YarnConfiguration.DEFAULT_FS_NODE_LABELS_STORE_RETRY_POLICY_SPEC);\n    confCopy.set(\"dfs.client.retry.policy.spec\", retryPolicy);\n    fs \u003d fsWorkingPath.getFileSystem(confCopy);\n    \n    // if it\u0027s local file system, use RawLocalFileSystem instead of\n    // LocalFileSystem, the latter one doesn\u0027t support append.\n    if (fs.getScheme().equals(\"file\")) {\n      fs \u003d ((LocalFileSystem)fs).getRaw();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/FileSystemNodeLabelsStore.java"
    }
  }
}