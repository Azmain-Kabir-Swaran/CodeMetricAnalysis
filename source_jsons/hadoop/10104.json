{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataNodeMetrics.java",
  "functionName": "create",
  "functionId": "create___conf-Configuration__dnName-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
  "functionStartLine": 241,
  "functionEndLine": 255,
  "numCommitsSeen": 34,
  "timeTaken": 5549,
  "changeHistory": [
    "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080",
    "af6c91a80c299f87af8c42fa685448b596b7615a",
    "c1ea9b4490e7d6d030eeaeeff2fad3767d2cfd4a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "710e5a960e8af1d4c73e386041096aacfee8b828",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080": "Ybodychange",
    "af6c91a80c299f87af8c42fa685448b596b7615a": "Ybodychange",
    "c1ea9b4490e7d6d030eeaeeff2fad3767d2cfd4a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "710e5a960e8af1d4c73e386041096aacfee8b828": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11970. Replace uses of ThreadLocal\u003cRandom\u003e with JDK7 ThreadLocalRandom (Sean Busbey via Colin P. McCabe)\n",
      "commitDate": "19/05/15 10:50 AM",
      "commitName": "470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "08/04/15 11:28 PM",
      "commitNameOld": "9d8952f97f638ede27e4336b9601507d7bb1de7b",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 40.47,
      "commitsBetweenForRepo": 423,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public static DataNodeMetrics create(Configuration conf, String dnName) {\n     String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n     MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n     JvmMetrics jm \u003d JvmMetrics.create(\"DataNode\", sessionId, ms);\n     String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n-        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() \n+        ? \"UndefinedDataNodeName\"+ ThreadLocalRandom.current().nextInt()\n             : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n \n     // Percentile measurement is off by default, by watching no intervals\n     int[] intervals \u003d \n         conf.getInts(DFSConfigKeys.DFS_METRICS_PERCENTILES_INTERVALS_KEY);\n     \n     return ms.register(name, null, new DataNodeMetrics(name, sessionId,\n         intervals, jm));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static DataNodeMetrics create(Configuration conf, String dnName) {\n    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n    JvmMetrics jm \u003d JvmMetrics.create(\"DataNode\", sessionId, ms);\n    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n        ? \"UndefinedDataNodeName\"+ ThreadLocalRandom.current().nextInt()\n            : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n\n    // Percentile measurement is off by default, by watching no intervals\n    int[] intervals \u003d \n        conf.getInts(DFSConfigKeys.DFS_METRICS_PERCENTILES_INTERVALS_KEY);\n    \n    return ms.register(name, null, new DataNodeMetrics(name, sessionId,\n        intervals, jm));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
      "extendedDetails": {}
    },
    "af6c91a80c299f87af8c42fa685448b596b7615a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6403. Add metrics for log warnings reported by JVM pauses. Contributed by Yongjun Zhang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604074 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 7:38 PM",
      "commitName": "af6c91a80c299f87af8c42fa685448b596b7615a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 87.13,
      "commitsBetweenForRepo": 522,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public static DataNodeMetrics create(Configuration conf, String dnName) {\n     String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n     MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n-    JvmMetrics.create(\"DataNode\", sessionId, ms);\n+    JvmMetrics jm \u003d JvmMetrics.create(\"DataNode\", sessionId, ms);\n     String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n         ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() \n             : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n \n     // Percentile measurement is off by default, by watching no intervals\n     int[] intervals \u003d \n         conf.getInts(DFSConfigKeys.DFS_METRICS_PERCENTILES_INTERVALS_KEY);\n     \n     return ms.register(name, null, new DataNodeMetrics(name, sessionId,\n-        intervals));\n+        intervals, jm));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static DataNodeMetrics create(Configuration conf, String dnName) {\n    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n    JvmMetrics jm \u003d JvmMetrics.create(\"DataNode\", sessionId, ms);\n    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() \n            : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n\n    // Percentile measurement is off by default, by watching no intervals\n    int[] intervals \u003d \n        conf.getInts(DFSConfigKeys.DFS_METRICS_PERCENTILES_INTERVALS_KEY);\n    \n    return ms.register(name, null, new DataNodeMetrics(name, sessionId,\n        intervals, jm));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
      "extendedDetails": {}
    },
    "c1ea9b4490e7d6d030eeaeeff2fad3767d2cfd4a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3650. Use MutableQuantiles to provide latency histograms for various operations. Contributed by Andrew Wang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1366246 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 5:26 PM",
      "commitName": "c1ea9b4490e7d6d030eeaeeff2fad3767d2cfd4a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "05/07/12 3:18 PM",
      "commitNameOld": "e0ef844280b98dc699ed3f9d948b83828bb8d297",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 21.09,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,15 @@\n   public static DataNodeMetrics create(Configuration conf, String dnName) {\n     String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n     MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n     JvmMetrics.create(\"DataNode\", sessionId, ms);\n     String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n-        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n-    return ms.register(name, null, new DataNodeMetrics(name, sessionId));\n+        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() \n+            : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n+\n+    // Percentile measurement is off by default, by watching no intervals\n+    int[] intervals \u003d \n+        conf.getInts(DFSConfigKeys.DFS_METRICS_PERCENTILES_INTERVALS_KEY);\n+    \n+    return ms.register(name, null, new DataNodeMetrics(name, sessionId,\n+        intervals));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static DataNodeMetrics create(Configuration conf, String dnName) {\n    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n    JvmMetrics.create(\"DataNode\", sessionId, ms);\n    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() \n            : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n\n    // Percentile measurement is off by default, by watching no intervals\n    int[] intervals \u003d \n        conf.getInts(DFSConfigKeys.DFS_METRICS_PERCENTILES_INTERVALS_KEY);\n    \n    return ms.register(name, null, new DataNodeMetrics(name, sessionId,\n        intervals));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static DataNodeMetrics create(Configuration conf, String dnName) {\n    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n    JvmMetrics.create(\"DataNode\", sessionId, ms);\n    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n    return ms.register(name, null, new DataNodeMetrics(name, sessionId));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static DataNodeMetrics create(Configuration conf, String dnName) {\n    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n    JvmMetrics.create(\"DataNode\", sessionId, ms);\n    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n    return ms.register(name, null, new DataNodeMetrics(name, sessionId));\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java"
      }
    },
    "710e5a960e8af1d4c73e386041096aacfee8b828": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2161. Move createNamenode(..), createClientDatanodeProtocolProxy(..) and Random object creation to DFSUtil; move DFSClient.stringifyToken(..) to DelegationTokenIdentifier.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1148348 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/11 7:23 AM",
      "commitName": "710e5a960e8af1d4c73e386041096aacfee8b828",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 36.68,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public static DataNodeMetrics create(Configuration conf, String dnName) {\n     String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n     MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n     JvmMetrics.create(\"DataNode\", sessionId, ms);\n     String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n-        ? \"UndefinedDataNodeName\"+ rng.nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n+        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n     return ms.register(name, null, new DataNodeMetrics(name, sessionId));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static DataNodeMetrics create(Configuration conf, String dnName) {\n    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n    JvmMetrics.create(\"DataNode\", sessionId, ms);\n    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n        ? \"UndefinedDataNodeName\"+ DFSUtil.getRandom().nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n    return ms.register(name, null, new DataNodeMetrics(name, sessionId));\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,8 @@\n+  public static DataNodeMetrics create(Configuration conf, String dnName) {\n+    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n+    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n+    JvmMetrics.create(\"DataNode\", sessionId, ms);\n+    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n+        ? \"UndefinedDataNodeName\"+ rng.nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n+    return ms.register(name, null, new DataNodeMetrics(name, sessionId));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static DataNodeMetrics create(Configuration conf, String dnName) {\n    String sessionId \u003d conf.get(DFSConfigKeys.DFS_METRICS_SESSION_ID_KEY);\n    MetricsSystem ms \u003d DefaultMetricsSystem.instance();\n    JvmMetrics.create(\"DataNode\", sessionId, ms);\n    String name \u003d \"DataNodeActivity-\"+ (dnName.isEmpty()\n        ? \"UndefinedDataNodeName\"+ rng.nextInt() : dnName.replace(\u0027:\u0027, \u0027-\u0027));\n    return ms.register(name, null, new DataNodeMetrics(name, sessionId));\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/metrics/DataNodeMetrics.java"
    }
  }
}