{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XMLUtils.java",
  "functionName": "mangleXmlString",
  "functionId": "mangleXmlString___str-String__createEntityRefs-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/XMLUtils.java",
  "functionStartLine": 137,
  "functionEndLine": 161,
  "numCommitsSeen": 12,
  "timeTaken": 1882,
  "changeHistory": [
    "c7f81dad30c391822eed7273278cf5885fa59264",
    "7e2d98da4080d40f3f772c87ef6619628c90a922"
  ],
  "changeHistoryShort": {
    "c7f81dad30c391822eed7273278cf5885fa59264": "Ymultichange(Yparameterchange,Ybodychange)",
    "7e2d98da4080d40f3f772c87ef6619628c90a922": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7f81dad30c391822eed7273278cf5885fa59264": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7309. XMLUtils.mangleXmlString doesn\u0027t seem to handle less than sign. (Colin Patrick McCabe via raviprak)\n",
      "commitDate": "31/10/14 11:22 AM",
      "commitName": "c7f81dad30c391822eed7273278cf5885fa59264",
      "commitAuthor": "Ravi Prakash",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7309. XMLUtils.mangleXmlString doesn\u0027t seem to handle less than sign. (Colin Patrick McCabe via raviprak)\n",
          "commitDate": "31/10/14 11:22 AM",
          "commitName": "c7f81dad30c391822eed7273278cf5885fa59264",
          "commitAuthor": "Ravi Prakash",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 220.78,
          "commitsBetweenForRepo": 1786,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,25 @@\n-  public static String mangleXmlString(String str) {\n+  public static String mangleXmlString(String str, boolean createEntityRefs) {\n     final StringBuilder bld \u003d new StringBuilder();\n     final int length \u003d str.length();\n     for (int offset \u003d 0; offset \u003c length; ) {\n        final int cp \u003d str.codePointAt(offset);\n        final int len \u003d Character.charCount(cp);\n        if (codePointMustBeMangled(cp)) {\n          bld.append(mangleCodePoint(cp));\n        } else {\n-         for (int i \u003d 0; i \u003c len; i++) {\n-           bld.append(str.charAt(offset + i));\n+         String entityRef \u003d null;\n+         if (createEntityRefs) {\n+           entityRef \u003d codePointToEntityRef(cp);\n+         }\n+         if (entityRef !\u003d null) {\n+           bld.append(entityRef);\n+         } else {\n+           for (int i \u003d 0; i \u003c len; i++) {\n+             bld.append(str.charAt(offset + i));\n+           }\n          }\n        }\n        offset +\u003d len;\n     }\n     return bld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String mangleXmlString(String str, boolean createEntityRefs) {\n    final StringBuilder bld \u003d new StringBuilder();\n    final int length \u003d str.length();\n    for (int offset \u003d 0; offset \u003c length; ) {\n       final int cp \u003d str.codePointAt(offset);\n       final int len \u003d Character.charCount(cp);\n       if (codePointMustBeMangled(cp)) {\n         bld.append(mangleCodePoint(cp));\n       } else {\n         String entityRef \u003d null;\n         if (createEntityRefs) {\n           entityRef \u003d codePointToEntityRef(cp);\n         }\n         if (entityRef !\u003d null) {\n           bld.append(entityRef);\n         } else {\n           for (int i \u003d 0; i \u003c len; i++) {\n             bld.append(str.charAt(offset + i));\n           }\n         }\n       }\n       offset +\u003d len;\n    }\n    return bld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/XMLUtils.java",
          "extendedDetails": {
            "oldValue": "[str-String]",
            "newValue": "[str-String, createEntityRefs-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7309. XMLUtils.mangleXmlString doesn\u0027t seem to handle less than sign. (Colin Patrick McCabe via raviprak)\n",
          "commitDate": "31/10/14 11:22 AM",
          "commitName": "c7f81dad30c391822eed7273278cf5885fa59264",
          "commitAuthor": "Ravi Prakash",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 220.78,
          "commitsBetweenForRepo": 1786,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,25 @@\n-  public static String mangleXmlString(String str) {\n+  public static String mangleXmlString(String str, boolean createEntityRefs) {\n     final StringBuilder bld \u003d new StringBuilder();\n     final int length \u003d str.length();\n     for (int offset \u003d 0; offset \u003c length; ) {\n        final int cp \u003d str.codePointAt(offset);\n        final int len \u003d Character.charCount(cp);\n        if (codePointMustBeMangled(cp)) {\n          bld.append(mangleCodePoint(cp));\n        } else {\n-         for (int i \u003d 0; i \u003c len; i++) {\n-           bld.append(str.charAt(offset + i));\n+         String entityRef \u003d null;\n+         if (createEntityRefs) {\n+           entityRef \u003d codePointToEntityRef(cp);\n+         }\n+         if (entityRef !\u003d null) {\n+           bld.append(entityRef);\n+         } else {\n+           for (int i \u003d 0; i \u003c len; i++) {\n+             bld.append(str.charAt(offset + i));\n+           }\n          }\n        }\n        offset +\u003d len;\n     }\n     return bld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String mangleXmlString(String str, boolean createEntityRefs) {\n    final StringBuilder bld \u003d new StringBuilder();\n    final int length \u003d str.length();\n    for (int offset \u003d 0; offset \u003c length; ) {\n       final int cp \u003d str.codePointAt(offset);\n       final int len \u003d Character.charCount(cp);\n       if (codePointMustBeMangled(cp)) {\n         bld.append(mangleCodePoint(cp));\n       } else {\n         String entityRef \u003d null;\n         if (createEntityRefs) {\n           entityRef \u003d codePointToEntityRef(cp);\n         }\n         if (entityRef !\u003d null) {\n           bld.append(entityRef);\n         } else {\n           for (int i \u003d 0; i \u003c len; i++) {\n             bld.append(str.charAt(offset + i));\n           }\n         }\n       }\n       offset +\u003d len;\n    }\n    return bld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/XMLUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "7e2d98da4080d40f3f772c87ef6619628c90a922": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4235. When outputting XML, OfflineEditsViewer can\u0027t handle some edits containing non-ASCII strings. Contributed by Colin Patrick McCabe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1449984 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/13 4:44 PM",
      "commitName": "7e2d98da4080d40f3f772c87ef6619628c90a922",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,17 @@\n+  public static String mangleXmlString(String str) {\n+    final StringBuilder bld \u003d new StringBuilder();\n+    final int length \u003d str.length();\n+    for (int offset \u003d 0; offset \u003c length; ) {\n+       final int cp \u003d str.codePointAt(offset);\n+       final int len \u003d Character.charCount(cp);\n+       if (codePointMustBeMangled(cp)) {\n+         bld.append(mangleCodePoint(cp));\n+       } else {\n+         for (int i \u003d 0; i \u003c len; i++) {\n+           bld.append(str.charAt(offset + i));\n+         }\n+       }\n+       offset +\u003d len;\n+    }\n+    return bld.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String mangleXmlString(String str) {\n    final StringBuilder bld \u003d new StringBuilder();\n    final int length \u003d str.length();\n    for (int offset \u003d 0; offset \u003c length; ) {\n       final int cp \u003d str.codePointAt(offset);\n       final int len \u003d Character.charCount(cp);\n       if (codePointMustBeMangled(cp)) {\n         bld.append(mangleCodePoint(cp));\n       } else {\n         for (int i \u003d 0; i \u003c len; i++) {\n           bld.append(str.charAt(offset + i));\n         }\n       }\n       offset +\u003d len;\n    }\n    return bld.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/XMLUtils.java"
    }
  }
}