{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VolumeImpl.java",
  "functionName": "createVolumeStateFactory",
  "functionId": "createVolumeStateFactory",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/lifecycle/VolumeImpl.java",
  "functionStartLine": 93,
  "functionEndLine": 123,
  "numCommitsSeen": 5,
  "timeTaken": 772,
  "changeHistory": [
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55"
  ],
  "changeHistoryShort": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8902. [CSI] Add volume manager that manages CSI volume lifecycle. Contributed by Weiwei Yang.\n",
      "commitDate": "11/11/18 10:27 PM",
      "commitName": "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,31 @@\n+      VolumeEventType, VolumeEvent\u003e createVolumeStateFactory() {\n+    return new StateMachineFactory\u003c\n+        VolumeImpl, VolumeState, VolumeEventType, VolumeEvent\u003e(VolumeState.NEW)\n+        .addTransition(\n+            VolumeState.NEW,\n+            EnumSet.of(VolumeState.VALIDATED, VolumeState.UNAVAILABLE),\n+            VolumeEventType.VALIDATE_VOLUME_EVENT,\n+            new ValidateVolumeTransition())\n+        .addTransition(VolumeState.VALIDATED, VolumeState.VALIDATED,\n+            VolumeEventType.VALIDATE_VOLUME_EVENT)\n+        .addTransition(\n+            VolumeState.VALIDATED,\n+            EnumSet.of(VolumeState.NODE_READY, VolumeState.UNAVAILABLE),\n+            VolumeEventType.CONTROLLER_PUBLISH_VOLUME_EVENT,\n+            new ControllerPublishVolumeTransition())\n+        .addTransition(\n+            VolumeState.UNAVAILABLE,\n+            EnumSet.of(VolumeState.UNAVAILABLE, VolumeState.VALIDATED),\n+            VolumeEventType.VALIDATE_VOLUME_EVENT,\n+            new ValidateVolumeTransition())\n+        .addTransition(\n+            VolumeState.UNAVAILABLE,\n+            VolumeState.UNAVAILABLE,\n+            EnumSet.of(VolumeEventType.CONTROLLER_PUBLISH_VOLUME_EVENT))\n+        .addTransition(\n+            VolumeState.NODE_READY,\n+            VolumeState.NODE_READY,\n+            EnumSet.of(VolumeEventType.CONTROLLER_PUBLISH_VOLUME_EVENT,\n+                VolumeEventType.VALIDATE_VOLUME_EVENT))\n+        .installTopology();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      VolumeEventType, VolumeEvent\u003e createVolumeStateFactory() {\n    return new StateMachineFactory\u003c\n        VolumeImpl, VolumeState, VolumeEventType, VolumeEvent\u003e(VolumeState.NEW)\n        .addTransition(\n            VolumeState.NEW,\n            EnumSet.of(VolumeState.VALIDATED, VolumeState.UNAVAILABLE),\n            VolumeEventType.VALIDATE_VOLUME_EVENT,\n            new ValidateVolumeTransition())\n        .addTransition(VolumeState.VALIDATED, VolumeState.VALIDATED,\n            VolumeEventType.VALIDATE_VOLUME_EVENT)\n        .addTransition(\n            VolumeState.VALIDATED,\n            EnumSet.of(VolumeState.NODE_READY, VolumeState.UNAVAILABLE),\n            VolumeEventType.CONTROLLER_PUBLISH_VOLUME_EVENT,\n            new ControllerPublishVolumeTransition())\n        .addTransition(\n            VolumeState.UNAVAILABLE,\n            EnumSet.of(VolumeState.UNAVAILABLE, VolumeState.VALIDATED),\n            VolumeEventType.VALIDATE_VOLUME_EVENT,\n            new ValidateVolumeTransition())\n        .addTransition(\n            VolumeState.UNAVAILABLE,\n            VolumeState.UNAVAILABLE,\n            EnumSet.of(VolumeEventType.CONTROLLER_PUBLISH_VOLUME_EVENT))\n        .addTransition(\n            VolumeState.NODE_READY,\n            VolumeState.NODE_READY,\n            EnumSet.of(VolumeEventType.CONTROLLER_PUBLISH_VOLUME_EVENT,\n                VolumeEventType.VALIDATE_VOLUME_EVENT))\n        .installTopology();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/lifecycle/VolumeImpl.java"
    }
  }
}