{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShutdownHookManager.java",
  "functionName": "executeShutdown",
  "functionId": "executeShutdown",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ShutdownHookManager.java",
  "functionStartLine": 119,
  "functionEndLine": 136,
  "numCommitsSeen": 10,
  "timeTaken": 1928,
  "changeHistory": [
    "b4466a3b0a772d53e948f3e440f3e8e285f12a26",
    "34577d2c21096046861d2deefdbb2638b411c687"
  ],
  "changeHistoryShort": {
    "b4466a3b0a772d53e948f3e440f3e8e285f12a26": "Ymultichange(Ymodifierchange,Ybodychange)",
    "34577d2c21096046861d2deefdbb2638b411c687": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b4466a3b0a772d53e948f3e440f3e8e285f12a26": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-16341. ShutDownHookManager: Regressed performance on Hook removals after HADOOP-15679\n\nContributed by Gopal V and Atilla Magyar.\n\nChange-Id: I066d5eece332a1673594de0f9b484443f95530ec\n",
      "commitDate": "17/07/19 5:50 AM",
      "commitName": "b4466a3b0a772d53e948f3e440f3e8e285f12a26",
      "commitAuthor": "Gopal V",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-16341. ShutDownHookManager: Regressed performance on Hook removals after HADOOP-15679\n\nContributed by Gopal V and Atilla Magyar.\n\nChange-Id: I066d5eece332a1673594de0f9b484443f95530ec\n",
          "commitDate": "17/07/19 5:50 AM",
          "commitName": "b4466a3b0a772d53e948f3e440f3e8e285f12a26",
          "commitAuthor": "Gopal V",
          "commitDateOld": "10/10/18 9:51 PM",
          "commitNameOld": "7b57f2f71fbaa5af4897309597cca70a95b04edd",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 279.33,
          "commitsBetweenForRepo": 2057,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  static int executeShutdown() {\n+  int executeShutdown() {\n     int timeouts \u003d 0;\n-    for (HookEntry entry: MGR.getShutdownHooksInOrder()) {\n+    for (HookEntry entry: getShutdownHooksInOrder()) {\n       Future\u003c?\u003e future \u003d EXECUTOR.submit(entry.getHook());\n       try {\n         future.get(entry.getTimeout(), entry.getTimeUnit());\n       } catch (TimeoutException ex) {\n         timeouts++;\n         future.cancel(true);\n         LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n             getSimpleName() + \"\u0027 timeout, \" + ex.toString(), ex);\n       } catch (Throwable ex) {\n         LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n             getSimpleName() + \"\u0027 failed, \" + ex.toString(), ex);\n       }\n     }\n     return timeouts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  int executeShutdown() {\n    int timeouts \u003d 0;\n    for (HookEntry entry: getShutdownHooksInOrder()) {\n      Future\u003c?\u003e future \u003d EXECUTOR.submit(entry.getHook());\n      try {\n        future.get(entry.getTimeout(), entry.getTimeUnit());\n      } catch (TimeoutException ex) {\n        timeouts++;\n        future.cancel(true);\n        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n            getSimpleName() + \"\u0027 timeout, \" + ex.toString(), ex);\n      } catch (Throwable ex) {\n        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n            getSimpleName() + \"\u0027 failed, \" + ex.toString(), ex);\n      }\n    }\n    return timeouts;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ShutdownHookManager.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16341. ShutDownHookManager: Regressed performance on Hook removals after HADOOP-15679\n\nContributed by Gopal V and Atilla Magyar.\n\nChange-Id: I066d5eece332a1673594de0f9b484443f95530ec\n",
          "commitDate": "17/07/19 5:50 AM",
          "commitName": "b4466a3b0a772d53e948f3e440f3e8e285f12a26",
          "commitAuthor": "Gopal V",
          "commitDateOld": "10/10/18 9:51 PM",
          "commitNameOld": "7b57f2f71fbaa5af4897309597cca70a95b04edd",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 279.33,
          "commitsBetweenForRepo": 2057,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  static int executeShutdown() {\n+  int executeShutdown() {\n     int timeouts \u003d 0;\n-    for (HookEntry entry: MGR.getShutdownHooksInOrder()) {\n+    for (HookEntry entry: getShutdownHooksInOrder()) {\n       Future\u003c?\u003e future \u003d EXECUTOR.submit(entry.getHook());\n       try {\n         future.get(entry.getTimeout(), entry.getTimeUnit());\n       } catch (TimeoutException ex) {\n         timeouts++;\n         future.cancel(true);\n         LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n             getSimpleName() + \"\u0027 timeout, \" + ex.toString(), ex);\n       } catch (Throwable ex) {\n         LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n             getSimpleName() + \"\u0027 failed, \" + ex.toString(), ex);\n       }\n     }\n     return timeouts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  int executeShutdown() {\n    int timeouts \u003d 0;\n    for (HookEntry entry: getShutdownHooksInOrder()) {\n      Future\u003c?\u003e future \u003d EXECUTOR.submit(entry.getHook());\n      try {\n        future.get(entry.getTimeout(), entry.getTimeUnit());\n      } catch (TimeoutException ex) {\n        timeouts++;\n        future.cancel(true);\n        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n            getSimpleName() + \"\u0027 timeout, \" + ex.toString(), ex);\n      } catch (Throwable ex) {\n        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n            getSimpleName() + \"\u0027 failed, \" + ex.toString(), ex);\n      }\n    }\n    return timeouts;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ShutdownHookManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "34577d2c21096046861d2deefdbb2638b411c687": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15679. ShutdownHookManager shutdown time needs to be configurable \u0026 extended.\nContributed by Steve Loughran.\n",
      "commitDate": "20/08/18 6:36 PM",
      "commitName": "34577d2c21096046861d2deefdbb2638b411c687",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,18 @@\n+  static int executeShutdown() {\n+    int timeouts \u003d 0;\n+    for (HookEntry entry: MGR.getShutdownHooksInOrder()) {\n+      Future\u003c?\u003e future \u003d EXECUTOR.submit(entry.getHook());\n+      try {\n+        future.get(entry.getTimeout(), entry.getTimeUnit());\n+      } catch (TimeoutException ex) {\n+        timeouts++;\n+        future.cancel(true);\n+        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n+            getSimpleName() + \"\u0027 timeout, \" + ex.toString(), ex);\n+      } catch (Throwable ex) {\n+        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n+            getSimpleName() + \"\u0027 failed, \" + ex.toString(), ex);\n+      }\n+    }\n+    return timeouts;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static int executeShutdown() {\n    int timeouts \u003d 0;\n    for (HookEntry entry: MGR.getShutdownHooksInOrder()) {\n      Future\u003c?\u003e future \u003d EXECUTOR.submit(entry.getHook());\n      try {\n        future.get(entry.getTimeout(), entry.getTimeUnit());\n      } catch (TimeoutException ex) {\n        timeouts++;\n        future.cancel(true);\n        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n            getSimpleName() + \"\u0027 timeout, \" + ex.toString(), ex);\n      } catch (Throwable ex) {\n        LOG.warn(\"ShutdownHook \u0027\" + entry.getHook().getClass().\n            getSimpleName() + \"\u0027 failed, \" + ex.toString(), ex);\n      }\n    }\n    return timeouts;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ShutdownHookManager.java"
    }
  }
}