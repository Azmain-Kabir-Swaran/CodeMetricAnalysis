{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReservationInvariantsChecker.java",
  "functionName": "editSchedule",
  "functionId": "editSchedule",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/invariants/ReservationInvariantsChecker.java",
  "functionStartLine": 39,
  "functionEndLine": 61,
  "numCommitsSeen": 1,
  "timeTaken": 517,
  "changeHistory": [
    "5cb6e3e082ed9edbdb7c46d27daa049a4712e82b"
  ],
  "changeHistoryShort": {
    "5cb6e3e082ed9edbdb7c46d27daa049a4712e82b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5cb6e3e082ed9edbdb7c46d27daa049a4712e82b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6473. Create ReservationInvariantChecker to validate ReservationSystem + Scheduler operations.\n",
      "commitDate": "10/05/17 2:49 PM",
      "commitName": "5cb6e3e082ed9edbdb7c46d27daa049a4712e82b",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,23 @@\n+  public void editSchedule() {\n+    Collection\u003cPlan\u003e plans \u003d\n+        getContext().getReservationSystem().getAllPlans().values();\n+\n+    try {\n+      for (Plan plan : plans) {\n+        long currReservations \u003d\n+            plan.getReservationsAtTime(clock.getTime()).size();\n+        long numberReservationQueues \u003d getContext().getScheduler()\n+            .getQueueInfo(plan.getQueueName(), true, false).getChildQueues()\n+            .size();\n+        if (currReservations !\u003d numberReservationQueues - 1) {\n+          logOrThrow(\"Number of reservations (\" + currReservations\n+              + \") does NOT match the number of reservationQueues (\"\n+              + (numberReservationQueues - 1) + \"), while it should.\");\n+        }\n+      }\n+    } catch (IOException io) {\n+      throw new InvariantViolationException(\"Issue during invariant check: \",\n+          io);\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void editSchedule() {\n    Collection\u003cPlan\u003e plans \u003d\n        getContext().getReservationSystem().getAllPlans().values();\n\n    try {\n      for (Plan plan : plans) {\n        long currReservations \u003d\n            plan.getReservationsAtTime(clock.getTime()).size();\n        long numberReservationQueues \u003d getContext().getScheduler()\n            .getQueueInfo(plan.getQueueName(), true, false).getChildQueues()\n            .size();\n        if (currReservations !\u003d numberReservationQueues - 1) {\n          logOrThrow(\"Number of reservations (\" + currReservations\n              + \") does NOT match the number of reservationQueues (\"\n              + (numberReservationQueues - 1) + \"), while it should.\");\n        }\n      }\n    } catch (IOException io) {\n      throw new InvariantViolationException(\"Issue during invariant check: \",\n          io);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/invariants/ReservationInvariantsChecker.java"
    }
  }
}