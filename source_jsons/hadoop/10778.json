{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPoolSliceStorage.java",
  "functionName": "clearTrash",
  "functionId": "clearTrash",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
  "functionStartLine": 809,
  "functionEndLine": 838,
  "numCommitsSeen": 72,
  "timeTaken": 3949,
  "changeHistory": [
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
    "a4f66655ec22ca8c960f971f2b0cdafbd3430ad7",
    "5b43db47a313decccdcca8f45c5708aab46396df",
    "1a495fbb489c9e9a23b341a52696d10e9e272b04",
    "f949f6b54825dac61511a5761837e2fd14437239",
    "dbf14320c093991d2ca97b3608efe1c3c0af9888",
    "5df82fa01d26c18685ad7617128dbc2913547cb3"
  ],
  "changeHistoryShort": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": "Ybodychange",
    "a4f66655ec22ca8c960f971f2b0cdafbd3430ad7": "Ybodychange",
    "5b43db47a313decccdcca8f45c5708aab46396df": "Ybodychange",
    "1a495fbb489c9e9a23b341a52696d10e9e272b04": "Ymultichange(Yrename,Ybodychange)",
    "f949f6b54825dac61511a5761837e2fd14437239": "Ybodychange",
    "dbf14320c093991d2ca97b3608efe1c3c0af9888": "Ymultichange(Yrename,Ybodychange)",
    "5df82fa01d26c18685ad7617128dbc2913547cb3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12997. Move logging to slf4j in BlockPoolSliceStorage and Storage. Contributed by Ajay Kumar.\n",
      "commitDate": "01/02/18 10:45 AM",
      "commitName": "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 47.7,
      "commitsBetweenForRepo": 240,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public void clearTrash() {\n     final List\u003cFile\u003e trashRoots \u003d new ArrayList\u003c\u003e();\n     for (StorageDirectory sd : getStorageDirs()) {\n       File trashRoot \u003d getTrashRootDir(sd);\n       if (trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()) {\n         LOG.error(\"Trash and PreviousDir shouldn\u0027t both exist for storage \"\n-            + \"directory \" + sd);\n+            + \"directory {}\", sd);\n         assert false;\n       } else {\n         trashRoots.add(trashRoot);\n       }\n     }\n \n     stopTrashCleaner();\n     trashCleaner \u003d new Daemon(new Runnable() {\n       @Override\n       public void run() {\n         for(File trashRoot : trashRoots){\n           FileUtil.fullyDelete(trashRoot);\n-          LOG.info(\"Cleared trash for storage directory \" + trashRoot);\n+          LOG.info(\"Cleared trash for storage directory {}\", trashRoot);\n         }\n       }\n \n       @Override\n       public String toString() {\n         return \"clearTrash() for \" + blockpoolID;\n       }\n     });\n     trashCleaner.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void clearTrash() {\n    final List\u003cFile\u003e trashRoots \u003d new ArrayList\u003c\u003e();\n    for (StorageDirectory sd : getStorageDirs()) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      if (trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()) {\n        LOG.error(\"Trash and PreviousDir shouldn\u0027t both exist for storage \"\n            + \"directory {}\", sd);\n        assert false;\n      } else {\n        trashRoots.add(trashRoot);\n      }\n    }\n\n    stopTrashCleaner();\n    trashCleaner \u003d new Daemon(new Runnable() {\n      @Override\n      public void run() {\n        for(File trashRoot : trashRoots){\n          FileUtil.fullyDelete(trashRoot);\n          LOG.info(\"Cleared trash for storage directory {}\", trashRoot);\n        }\n      }\n\n      @Override\n      public String toString() {\n        return \"clearTrash() for \" + blockpoolID;\n      }\n    });\n    trashCleaner.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "a4f66655ec22ca8c960f971f2b0cdafbd3430ad7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11267. Avoid redefinition of storageDirs in NNStorage and cleanup its accessors in Storage. (Manoj Govindassamy via lei)\n",
      "commitDate": "29/12/16 12:57 AM",
      "commitName": "a4f66655ec22ca8c960f971f2b0cdafbd3430ad7",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "28/12/16 11:11 PM",
      "commitNameOld": "e9f1396834174646a8d7aa8fc6c4a4f724ca5b28",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public void clearTrash() {\n     final List\u003cFile\u003e trashRoots \u003d new ArrayList\u003c\u003e();\n-    for (StorageDirectory sd : storageDirs) {\n+    for (StorageDirectory sd : getStorageDirs()) {\n       File trashRoot \u003d getTrashRootDir(sd);\n       if (trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()) {\n         LOG.error(\"Trash and PreviousDir shouldn\u0027t both exist for storage \"\n             + \"directory \" + sd);\n         assert false;\n       } else {\n         trashRoots.add(trashRoot);\n       }\n     }\n \n     stopTrashCleaner();\n     trashCleaner \u003d new Daemon(new Runnable() {\n       @Override\n       public void run() {\n         for(File trashRoot : trashRoots){\n           FileUtil.fullyDelete(trashRoot);\n           LOG.info(\"Cleared trash for storage directory \" + trashRoot);\n         }\n       }\n \n       @Override\n       public String toString() {\n         return \"clearTrash() for \" + blockpoolID;\n       }\n     });\n     trashCleaner.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void clearTrash() {\n    final List\u003cFile\u003e trashRoots \u003d new ArrayList\u003c\u003e();\n    for (StorageDirectory sd : getStorageDirs()) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      if (trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()) {\n        LOG.error(\"Trash and PreviousDir shouldn\u0027t both exist for storage \"\n            + \"directory \" + sd);\n        assert false;\n      } else {\n        trashRoots.add(trashRoot);\n      }\n    }\n\n    stopTrashCleaner();\n    trashCleaner \u003d new Daemon(new Runnable() {\n      @Override\n      public void run() {\n        for(File trashRoot : trashRoots){\n          FileUtil.fullyDelete(trashRoot);\n          LOG.info(\"Cleared trash for storage directory \" + trashRoot);\n        }\n      }\n\n      @Override\n      public String toString() {\n        return \"clearTrash() for \" + blockpoolID;\n      }\n    });\n    trashCleaner.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "5b43db47a313decccdcca8f45c5708aab46396df": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8676. Delayed rolling upgrade finalization can cause heartbeat expiration. Contributed by Walter Su.\n",
      "commitDate": "13/10/15 8:04 AM",
      "commitName": "5b43db47a313decccdcca8f45c5708aab46396df",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 163.92,
      "commitsBetweenForRepo": 1361,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,30 @@\n   public void clearTrash() {\n+    final List\u003cFile\u003e trashRoots \u003d new ArrayList\u003c\u003e();\n     for (StorageDirectory sd : storageDirs) {\n       File trashRoot \u003d getTrashRootDir(sd);\n-      Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n-      FileUtil.fullyDelete(trashRoot);\n-      LOG.info(\"Cleared trash for storage directory \" + sd);\n+      if (trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()) {\n+        LOG.error(\"Trash and PreviousDir shouldn\u0027t both exist for storage \"\n+            + \"directory \" + sd);\n+        assert false;\n+      } else {\n+        trashRoots.add(trashRoot);\n+      }\n     }\n+\n+    stopTrashCleaner();\n+    trashCleaner \u003d new Daemon(new Runnable() {\n+      @Override\n+      public void run() {\n+        for(File trashRoot : trashRoots){\n+          FileUtil.fullyDelete(trashRoot);\n+          LOG.info(\"Cleared trash for storage directory \" + trashRoot);\n+        }\n+      }\n+\n+      @Override\n+      public String toString() {\n+        return \"clearTrash() for \" + blockpoolID;\n+      }\n+    });\n+    trashCleaner.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void clearTrash() {\n    final List\u003cFile\u003e trashRoots \u003d new ArrayList\u003c\u003e();\n    for (StorageDirectory sd : storageDirs) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      if (trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()) {\n        LOG.error(\"Trash and PreviousDir shouldn\u0027t both exist for storage \"\n            + \"directory \" + sd);\n        assert false;\n      } else {\n        trashRoots.add(trashRoot);\n      }\n    }\n\n    stopTrashCleaner();\n    trashCleaner \u003d new Daemon(new Runnable() {\n      @Override\n      public void run() {\n        for(File trashRoot : trashRoots){\n          FileUtil.fullyDelete(trashRoot);\n          LOG.info(\"Cleared trash for storage directory \" + trashRoot);\n        }\n      }\n\n      @Override\n      public String toString() {\n        return \"clearTrash() for \" + blockpoolID;\n      }\n    });\n    trashCleaner.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "1a495fbb489c9e9a23b341a52696d10e9e272b04": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-7645. Rolling upgrade is restoring blocks from trash multiple times (Contributed by Vinayakumar B and Keisuke Ogiwara)\n",
      "commitDate": "30/03/15 3:25 PM",
      "commitName": "1a495fbb489c9e9a23b341a52696d10e9e272b04",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-7645. Rolling upgrade is restoring blocks from trash multiple times (Contributed by Vinayakumar B and Keisuke Ogiwara)\n",
          "commitDate": "30/03/15 3:25 PM",
          "commitName": "1a495fbb489c9e9a23b341a52696d10e9e272b04",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "04/02/15 12:10 PM",
          "commitNameOld": "40a415799b1ff3602fbb461765f8b36f1133bda2",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 54.09,
          "commitsBetweenForRepo": 529,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  public void restoreTrash() {\n+  public void clearTrash() {\n     for (StorageDirectory sd : storageDirs) {\n       File trashRoot \u003d getTrashRootDir(sd);\n-      try {\n-        Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n-        restoreBlockFilesFromTrash(trashRoot);\n-        FileUtil.fullyDelete(getTrashRootDir(sd));\n-      } catch (IOException ioe) {\n-        LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n-      }\n+      Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n+      FileUtil.fullyDelete(trashRoot);\n+      LOG.info(\"Cleared trash for storage directory \" + sd);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void clearTrash() {\n    for (StorageDirectory sd : storageDirs) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n      FileUtil.fullyDelete(trashRoot);\n      LOG.info(\"Cleared trash for storage directory \" + sd);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {
            "oldValue": "restoreTrash",
            "newValue": "clearTrash"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7645. Rolling upgrade is restoring blocks from trash multiple times (Contributed by Vinayakumar B and Keisuke Ogiwara)\n",
          "commitDate": "30/03/15 3:25 PM",
          "commitName": "1a495fbb489c9e9a23b341a52696d10e9e272b04",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "04/02/15 12:10 PM",
          "commitNameOld": "40a415799b1ff3602fbb461765f8b36f1133bda2",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 54.09,
          "commitsBetweenForRepo": 529,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,8 @@\n-  public void restoreTrash() {\n+  public void clearTrash() {\n     for (StorageDirectory sd : storageDirs) {\n       File trashRoot \u003d getTrashRootDir(sd);\n-      try {\n-        Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n-        restoreBlockFilesFromTrash(trashRoot);\n-        FileUtil.fullyDelete(getTrashRootDir(sd));\n-      } catch (IOException ioe) {\n-        LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n-      }\n+      Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n+      FileUtil.fullyDelete(trashRoot);\n+      LOG.info(\"Cleared trash for storage directory \" + sd);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void clearTrash() {\n    for (StorageDirectory sd : storageDirs) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n      FileUtil.fullyDelete(trashRoot);\n      LOG.info(\"Cleared trash for storage directory \" + sd);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "f949f6b54825dac61511a5761837e2fd14437239": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6981. Fix DN upgrade with layout version change. (Arpit Agarwal)\n",
      "commitDate": "08/09/14 9:20 PM",
      "commitName": "f949f6b54825dac61511a5761837e2fd14437239",
      "commitAuthor": "arp",
      "commitDateOld": "29/08/14 1:00 PM",
      "commitNameOld": "7eab2a29a5706ce10912c12fa225ef6b27a82cbe",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 10.35,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   public void restoreTrash() {\n     for (StorageDirectory sd : storageDirs) {\n       File trashRoot \u003d getTrashRootDir(sd);\n       try {\n+        Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n         restoreBlockFilesFromTrash(trashRoot);\n         FileUtil.fullyDelete(getTrashRootDir(sd));\n       } catch (IOException ioe) {\n         LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void restoreTrash() {\n    for (StorageDirectory sd : storageDirs) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      try {\n        Preconditions.checkState(!(trashRoot.exists() \u0026\u0026 sd.getPreviousDir().exists()));\n        restoreBlockFilesFromTrash(trashRoot);\n        FileUtil.fullyDelete(getTrashRootDir(sd));\n      } catch (IOException ioe) {\n        LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "dbf14320c093991d2ca97b3608efe1c3c0af9888": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-6005. Simplify Datanode rollback and downgrade. (Contributed by Suresh Srinivas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571431 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/14 12:46 PM",
      "commitName": "dbf14320c093991d2ca97b3608efe1c3c0af9888",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6005. Simplify Datanode rollback and downgrade. (Contributed by Suresh Srinivas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571431 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/02/14 12:46 PM",
          "commitName": "dbf14320c093991d2ca97b3608efe1c3c0af9888",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/02/14 2:40 PM",
          "commitNameOld": "3f7852bd27de4f87e242ad4eb73932b739922a5b",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 2.92,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,11 @@\n-  public void emptyTrash() {\n+  public void restoreTrash() {\n     for (StorageDirectory sd : storageDirs) {\n-      FileUtil.fullyDelete(getTrashRootDir(sd));\n+      File trashRoot \u003d getTrashRootDir(sd);\n+      try {\n+        restoreBlockFilesFromTrash(trashRoot);\n+        FileUtil.fullyDelete(getTrashRootDir(sd));\n+      } catch (IOException ioe) {\n+        LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void restoreTrash() {\n    for (StorageDirectory sd : storageDirs) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      try {\n        restoreBlockFilesFromTrash(trashRoot);\n        FileUtil.fullyDelete(getTrashRootDir(sd));\n      } catch (IOException ioe) {\n        LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {
            "oldValue": "emptyTrash",
            "newValue": "restoreTrash"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6005. Simplify Datanode rollback and downgrade. (Contributed by Suresh Srinivas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571431 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/02/14 12:46 PM",
          "commitName": "dbf14320c093991d2ca97b3608efe1c3c0af9888",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/02/14 2:40 PM",
          "commitNameOld": "3f7852bd27de4f87e242ad4eb73932b739922a5b",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 2.92,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,11 @@\n-  public void emptyTrash() {\n+  public void restoreTrash() {\n     for (StorageDirectory sd : storageDirs) {\n-      FileUtil.fullyDelete(getTrashRootDir(sd));\n+      File trashRoot \u003d getTrashRootDir(sd);\n+      try {\n+        restoreBlockFilesFromTrash(trashRoot);\n+        FileUtil.fullyDelete(getTrashRootDir(sd));\n+      } catch (IOException ioe) {\n+        LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void restoreTrash() {\n    for (StorageDirectory sd : storageDirs) {\n      File trashRoot \u003d getTrashRootDir(sd);\n      try {\n        restoreBlockFilesFromTrash(trashRoot);\n        FileUtil.fullyDelete(getTrashRootDir(sd));\n      } catch (IOException ioe) {\n        LOG.warn(\"Restoring trash failed for storage directory \" + sd);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "5df82fa01d26c18685ad7617128dbc2913547cb3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5907. BlockPoolSliceStorage trash to handle block deletions during rolling upgrade. (Arpit Agarwal)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1568346 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 8:37 AM",
      "commitName": "5df82fa01d26c18685ad7617128dbc2913547cb3",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,5 @@\n+  public void emptyTrash() {\n+    for (StorageDirectory sd : storageDirs) {\n+      FileUtil.fullyDelete(getTrashRootDir(sd));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void emptyTrash() {\n    for (StorageDirectory sd : storageDirs) {\n      FileUtil.fullyDelete(getTrashRootDir(sd));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java"
    }
  }
}