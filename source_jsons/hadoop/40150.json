{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerConfiguration.java",
  "functionName": "getAllUserWeightsForQueue",
  "functionId": "getAllUserWeightsForQueue___queuePath-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
  "functionStartLine": 1720,
  "functionEndLine": 1737,
  "numCommitsSeen": 90,
  "timeTaken": 2206,
  "changeHistory": [
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35"
  ],
  "changeHistoryShort": {
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5892. Support user-specific minimum user limit percentage in Capacity Scheduler. Contributed by Eric Payne.\n",
      "commitDate": "22/06/17 11:50 PM",
      "commitName": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,18 @@\n+  public Map\u003cString, Float\u003e getAllUserWeightsForQueue(String queuePath) {\n+    Map \u003cString, Float\u003e userWeights \u003d new HashMap \u003cString, Float\u003e();\n+    String qPathPlusPrefix \u003d\n+        getQueuePrefix(queuePath).replaceAll(\"\\\\.\", \"\\\\\\\\.\")\n+        + USER_SETTINGS + \"\\\\.\";\n+    String weightKeyRegex \u003d\n+        qPathPlusPrefix + \"\\\\w+\\\\.\" + USER_WEIGHT;\n+    Map\u003cString, String\u003e props \u003d getValByRegex(weightKeyRegex);\n+    for (Entry\u003cString, String\u003e e : props.entrySet()) {\n+      String userName \u003d\n+          e.getKey().replaceFirst(qPathPlusPrefix, \"\")\n+          .replaceFirst(\"\\\\.\" + USER_WEIGHT, \"\");\n+      if (userName !\u003d null \u0026\u0026 !userName.isEmpty()) {\n+        userWeights.put(userName, new Float(e.getValue()));\n+      }\n+    }\n+    return userWeights;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Float\u003e getAllUserWeightsForQueue(String queuePath) {\n    Map \u003cString, Float\u003e userWeights \u003d new HashMap \u003cString, Float\u003e();\n    String qPathPlusPrefix \u003d\n        getQueuePrefix(queuePath).replaceAll(\"\\\\.\", \"\\\\\\\\.\")\n        + USER_SETTINGS + \"\\\\.\";\n    String weightKeyRegex \u003d\n        qPathPlusPrefix + \"\\\\w+\\\\.\" + USER_WEIGHT;\n    Map\u003cString, String\u003e props \u003d getValByRegex(weightKeyRegex);\n    for (Entry\u003cString, String\u003e e : props.entrySet()) {\n      String userName \u003d\n          e.getKey().replaceFirst(qPathPlusPrefix, \"\")\n          .replaceFirst(\"\\\\.\" + USER_WEIGHT, \"\");\n      if (userName !\u003d null \u0026\u0026 !userName.isEmpty()) {\n        userWeights.put(userName, new Float(e.getValue()));\n      }\n    }\n    return userWeights;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java"
    }
  }
}