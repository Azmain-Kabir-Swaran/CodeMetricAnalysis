{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IOUtils.java",
  "functionName": "wrapException",
  "functionId": "wrapException___path-String(modifiers-final)__methodName-String(modifiers-final)__exception-IOException(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java",
  "functionStartLine": 479,
  "functionEndLine": 499,
  "numCommitsSeen": 25,
  "timeTaken": 696,
  "changeHistory": [
    "e5a1ad6e24807b166a40d1332c889c2c4cb4c733"
  ],
  "changeHistoryShort": {
    "e5a1ad6e24807b166a40d1332c889c2c4cb4c733": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5a1ad6e24807b166a40d1332c889c2c4cb4c733": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14788. Credentials readTokenStorageFile to stop wrapping IOEs in IOEs.\nContributed by Ajay Kumar.\n",
      "commitDate": "19/01/18 6:48 AM",
      "commitName": "e5a1ad6e24807b166a40d1332c889c2c4cb4c733",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,21 @@\n+  public static IOException wrapException(final String path,\n+      final String methodName, final IOException exception) {\n+\n+    if (exception instanceof InterruptedIOException\n+        || exception instanceof PathIOException) {\n+      return exception;\n+    } else {\n+      String msg \u003d String\n+          .format(\"Failed with %s while processing file/directory :[%s] in \"\n+                  + \"method:[%s]\",\n+              exception.getClass().getName(), path, methodName);\n+      try {\n+        return wrapWithMessage(exception, msg);\n+      } catch (Exception ex) {\n+        // For subclasses which have no (String) constructor throw IOException\n+        // with wrapped message\n+\n+        return new PathIOException(path, exception);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static IOException wrapException(final String path,\n      final String methodName, final IOException exception) {\n\n    if (exception instanceof InterruptedIOException\n        || exception instanceof PathIOException) {\n      return exception;\n    } else {\n      String msg \u003d String\n          .format(\"Failed with %s while processing file/directory :[%s] in \"\n                  + \"method:[%s]\",\n              exception.getClass().getName(), path, methodName);\n      try {\n        return wrapWithMessage(exception, msg);\n      } catch (Exception ex) {\n        // For subclasses which have no (String) constructor throw IOException\n        // with wrapped message\n\n        return new PathIOException(path, exception);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java"
    }
  }
}