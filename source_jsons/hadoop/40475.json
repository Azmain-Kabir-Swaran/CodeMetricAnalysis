{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SingleConstraintAppPlacementAllocator.java",
  "functionName": "updatePendingAsk",
  "functionId": "updatePendingAsk___requests-Collection__ResourceRequest____recoverPreemptedRequestForAContainer-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/SingleConstraintAppPlacementAllocator.java",
  "functionStartLine": 98,
  "functionEndLine": 113,
  "numCommitsSeen": 17,
  "timeTaken": 2552,
  "changeHistory": [
    "38af23796971193fa529c3d08ffde8fcd6e607b6"
  ],
  "changeHistoryShort": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,16 @@\n+  public PendingAskUpdateResult updatePendingAsk(\n+      Collection\u003cResourceRequest\u003e requests,\n+      boolean recoverPreemptedRequestForAContainer) {\n+    if (requests !\u003d null \u0026\u0026 !requests.isEmpty()) {\n+      throw new SchedulerInvalidResoureRequestException(\n+          this.getClass().getName()\n+              + \" not be able to handle ResourceRequest, there exists a \"\n+              + \"SchedulingRequest with the same scheduler key\u003d\"\n+              + SchedulerRequestKey.create(requests.iterator().next())\n+              + \", please send ResourceRequest with a different allocationId and \"\n+              + \"priority\");\n+    }\n+\n+    // Do nothing\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public PendingAskUpdateResult updatePendingAsk(\n      Collection\u003cResourceRequest\u003e requests,\n      boolean recoverPreemptedRequestForAContainer) {\n    if (requests !\u003d null \u0026\u0026 !requests.isEmpty()) {\n      throw new SchedulerInvalidResoureRequestException(\n          this.getClass().getName()\n              + \" not be able to handle ResourceRequest, there exists a \"\n              + \"SchedulingRequest with the same scheduler key\u003d\"\n              + SchedulerRequestKey.create(requests.iterator().next())\n              + \", please send ResourceRequest with a different allocationId and \"\n              + \"priority\");\n    }\n\n    // Do nothing\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/SingleConstraintAppPlacementAllocator.java"
    }
  }
}