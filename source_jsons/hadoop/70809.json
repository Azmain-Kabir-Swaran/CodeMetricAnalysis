{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlobOperationDescriptor.java",
  "functionName": "getOperationType",
  "functionId": "getOperationType___conn-HttpURLConnection",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/BlobOperationDescriptor.java",
  "functionStartLine": 94,
  "functionEndLine": 179,
  "numCommitsSeen": 1,
  "timeTaken": 696,
  "changeHistory": [
    "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da"
  ],
  "changeHistoryShort": {
    "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14660 wasb: improve throughput by 34% when account limit exceeded.\nContributed by Thomas Marquardt.\n",
      "commitDate": "01/08/17 1:36 PM",
      "commitName": "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,86 @@\n+  static OperationType getOperationType(HttpURLConnection conn) {\n+    OperationType operationType \u003d OperationType.Unknown;\n+    String method \u003d conn.getRequestMethod();\n+    String compValue \u003d getQueryParameter(conn.getURL(),\n+        \"comp\");\n+\n+    if (method.equalsIgnoreCase(\"PUT\")) {\n+      if (compValue !\u003d null) {\n+        switch (compValue) {\n+          case \"metadata\":\n+            operationType \u003d OperationType.SetMetadata;\n+            break;\n+          case \"properties\":\n+            operationType \u003d OperationType.SetProperties;\n+            break;\n+          case \"block\":\n+            operationType \u003d OperationType.PutBlock;\n+            break;\n+          case \"page\":\n+            String pageWrite \u003d conn.getRequestProperty(\"x-ms-page-write\");\n+            if (pageWrite !\u003d null \u0026\u0026 pageWrite.equalsIgnoreCase(\n+                \"UPDATE\")) {\n+              operationType \u003d OperationType.PutPage;\n+            }\n+            break;\n+          case \"appendblock\":\n+            operationType \u003d OperationType.AppendBlock;\n+            break;\n+          case \"blocklist\":\n+            operationType \u003d OperationType.PutBlockList;\n+            break;\n+          default:\n+            break;\n+        }\n+      } else {\n+        String blobType \u003d conn.getRequestProperty(\"x-ms-blob-type\");\n+        if (blobType !\u003d null\n+            \u0026\u0026 (blobType.equalsIgnoreCase(\"PageBlob\")\n+            || blobType.equalsIgnoreCase(\"BlockBlob\")\n+            || blobType.equalsIgnoreCase(\"AppendBlob\"))) {\n+          operationType \u003d OperationType.CreateBlob;\n+        } else if (blobType \u003d\u003d null) {\n+          String resType \u003d getQueryParameter(conn.getURL(),\n+              \"restype\");\n+          if (resType !\u003d null\n+              \u0026\u0026 resType.equalsIgnoreCase(\"container\")) {\n+            operationType \u003d operationType.CreateContainer;\n+          }\n+        }\n+      }\n+    } else if (method.equalsIgnoreCase(\"GET\")) {\n+      if (compValue !\u003d null) {\n+        switch (compValue) {\n+          case \"list\":\n+            operationType \u003d OperationType.ListBlobs;\n+            break;\n+\n+          case \"metadata\":\n+            operationType \u003d OperationType.GetMetadata;\n+            break;\n+          case \"blocklist\":\n+            operationType \u003d OperationType.GetBlockList;\n+            break;\n+          case \"pagelist\":\n+            operationType \u003d OperationType.GetPageList;\n+            break;\n+          default:\n+            break;\n+        }\n+      } else if (conn.getRequestProperty(\"x-ms-range\") !\u003d null) {\n+        operationType \u003d OperationType.GetBlob;\n+      }\n+    } else if (method.equalsIgnoreCase(\"HEAD\")) {\n+      operationType \u003d OperationType.GetProperties;\n+    } else if (method.equalsIgnoreCase(\"DELETE\")) {\n+      String resType \u003d getQueryParameter(conn.getURL(),\n+          \"restype\");\n+      if (resType !\u003d null\n+          \u0026\u0026 resType.equalsIgnoreCase(\"container\")) {\n+        operationType \u003d operationType.DeleteContainer;\n+      } else {\n+        operationType \u003d OperationType.DeleteBlob;\n+      }\n+    }\n+    return operationType;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static OperationType getOperationType(HttpURLConnection conn) {\n    OperationType operationType \u003d OperationType.Unknown;\n    String method \u003d conn.getRequestMethod();\n    String compValue \u003d getQueryParameter(conn.getURL(),\n        \"comp\");\n\n    if (method.equalsIgnoreCase(\"PUT\")) {\n      if (compValue !\u003d null) {\n        switch (compValue) {\n          case \"metadata\":\n            operationType \u003d OperationType.SetMetadata;\n            break;\n          case \"properties\":\n            operationType \u003d OperationType.SetProperties;\n            break;\n          case \"block\":\n            operationType \u003d OperationType.PutBlock;\n            break;\n          case \"page\":\n            String pageWrite \u003d conn.getRequestProperty(\"x-ms-page-write\");\n            if (pageWrite !\u003d null \u0026\u0026 pageWrite.equalsIgnoreCase(\n                \"UPDATE\")) {\n              operationType \u003d OperationType.PutPage;\n            }\n            break;\n          case \"appendblock\":\n            operationType \u003d OperationType.AppendBlock;\n            break;\n          case \"blocklist\":\n            operationType \u003d OperationType.PutBlockList;\n            break;\n          default:\n            break;\n        }\n      } else {\n        String blobType \u003d conn.getRequestProperty(\"x-ms-blob-type\");\n        if (blobType !\u003d null\n            \u0026\u0026 (blobType.equalsIgnoreCase(\"PageBlob\")\n            || blobType.equalsIgnoreCase(\"BlockBlob\")\n            || blobType.equalsIgnoreCase(\"AppendBlob\"))) {\n          operationType \u003d OperationType.CreateBlob;\n        } else if (blobType \u003d\u003d null) {\n          String resType \u003d getQueryParameter(conn.getURL(),\n              \"restype\");\n          if (resType !\u003d null\n              \u0026\u0026 resType.equalsIgnoreCase(\"container\")) {\n            operationType \u003d operationType.CreateContainer;\n          }\n        }\n      }\n    } else if (method.equalsIgnoreCase(\"GET\")) {\n      if (compValue !\u003d null) {\n        switch (compValue) {\n          case \"list\":\n            operationType \u003d OperationType.ListBlobs;\n            break;\n\n          case \"metadata\":\n            operationType \u003d OperationType.GetMetadata;\n            break;\n          case \"blocklist\":\n            operationType \u003d OperationType.GetBlockList;\n            break;\n          case \"pagelist\":\n            operationType \u003d OperationType.GetPageList;\n            break;\n          default:\n            break;\n        }\n      } else if (conn.getRequestProperty(\"x-ms-range\") !\u003d null) {\n        operationType \u003d OperationType.GetBlob;\n      }\n    } else if (method.equalsIgnoreCase(\"HEAD\")) {\n      operationType \u003d OperationType.GetProperties;\n    } else if (method.equalsIgnoreCase(\"DELETE\")) {\n      String resType \u003d getQueryParameter(conn.getURL(),\n          \"restype\");\n      if (resType !\u003d null\n          \u0026\u0026 resType.equalsIgnoreCase(\"container\")) {\n        operationType \u003d operationType.DeleteContainer;\n      } else {\n        operationType \u003d OperationType.DeleteBlob;\n      }\n    }\n    return operationType;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/BlobOperationDescriptor.java"
    }
  }
}