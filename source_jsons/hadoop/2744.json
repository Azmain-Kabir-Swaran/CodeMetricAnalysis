{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IPFailoverProxyProvider.java",
  "functionName": "getProxy",
  "functionId": "getProxy",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java",
  "functionStartLine": 55,
  "functionEndLine": 58,
  "numCommitsSeen": 7,
  "timeTaken": 2794,
  "changeHistory": [
    "a4121c71c29d13866a605d9c0d013e5de9c147c3",
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
    "9eee97508f350ed4629abb04e7781514ffa04070",
    "33ade356b35223654a077103ed7fbed89f3f2321"
  ],
  "changeHistoryShort": {
    "a4121c71c29d13866a605d9c0d013e5de9c147c3": "Ymultichange(Yreturntypechange,Ybodychange)",
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6": "Ymultichange(Yfilerename,Ybodychange)",
    "9eee97508f350ed4629abb04e7781514ffa04070": "Ybodychange",
    "33ade356b35223654a077103ed7fbed89f3f2321": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a4121c71c29d13866a605d9c0d013e5de9c147c3": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-13848. Refactor NameNode failover proxy providers. Contributed by Konstantin Shvachko.",
      "commitDate": "24/08/18 6:27 PM",
      "commitName": "a4121c71c29d13866a605d9c0d013e5de9c147c3",
      "commitAuthor": "Konstantin V Shvachko",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-13848. Refactor NameNode failover proxy providers. Contributed by Konstantin Shvachko.",
          "commitDate": "24/08/18 6:27 PM",
          "commitName": "a4121c71c29d13866a605d9c0d013e5de9c147c3",
          "commitAuthor": "Konstantin V Shvachko",
          "commitDateOld": "04/04/17 11:05 PM",
          "commitNameOld": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 506.81,
          "commitsBetweenForRepo": 4108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,4 @@\n-  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n+  public synchronized NNProxyInfo\u003cT\u003e getProxy() {\n     // Create a non-ha proxy if not already created.\n-    if (nnProxyInfo \u003d\u003d null) {\n-      try {\n-        // Create a proxy that is not wrapped in RetryProxy\n-        InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n-        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(factory.createProxy(conf, nnAddr, xface,\n-          UserGroupInformation.getCurrentUser(), false), nnAddr.toString());\n-      } catch (IOException ioe) {\n-        throw new RuntimeException(ioe);\n-      }\n-    }\n-    return nnProxyInfo;\n+    return createProxyIfNeeded(nnProxyInfo);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized NNProxyInfo\u003cT\u003e getProxy() {\n    // Create a non-ha proxy if not already created.\n    return createProxyIfNeeded(nnProxyInfo);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java",
          "extendedDetails": {
            "oldValue": "ProxyInfo\u003cT\u003e",
            "newValue": "NNProxyInfo\u003cT\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13848. Refactor NameNode failover proxy providers. Contributed by Konstantin Shvachko.",
          "commitDate": "24/08/18 6:27 PM",
          "commitName": "a4121c71c29d13866a605d9c0d013e5de9c147c3",
          "commitAuthor": "Konstantin V Shvachko",
          "commitDateOld": "04/04/17 11:05 PM",
          "commitNameOld": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 506.81,
          "commitsBetweenForRepo": 4108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,4 @@\n-  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n+  public synchronized NNProxyInfo\u003cT\u003e getProxy() {\n     // Create a non-ha proxy if not already created.\n-    if (nnProxyInfo \u003d\u003d null) {\n-      try {\n-        // Create a proxy that is not wrapped in RetryProxy\n-        InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n-        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(factory.createProxy(conf, nnAddr, xface,\n-          UserGroupInformation.getCurrentUser(), false), nnAddr.toString());\n-      } catch (IOException ioe) {\n-        throw new RuntimeException(ioe);\n-      }\n-    }\n-    return nnProxyInfo;\n+    return createProxyIfNeeded(nnProxyInfo);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized NNProxyInfo\u003cT\u003e getProxy() {\n    // Create a non-ha proxy if not already created.\n    return createProxyIfNeeded(nnProxyInfo);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-11538. Move ClientProtocol HA proxies into hadoop-hdfs-client. Contributed by Huafeng Wang.\n",
      "commitDate": "04/04/17 11:05 PM",
      "commitName": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-11538. Move ClientProtocol HA proxies into hadoop-hdfs-client. Contributed by Huafeng Wang.\n",
          "commitDate": "04/04/17 11:05 PM",
          "commitName": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "04/04/17 9:08 PM",
          "commitNameOld": "19b89c4c7be0236aafded560b7bcad7e39d1c4ed",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     // Create a non-ha proxy if not already created.\n     if (nnProxyInfo \u003d\u003d null) {\n       try {\n         // Create a proxy that is not wrapped in RetryProxy\n         InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n-        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(NameNodeProxies.createNonHAProxy(\n-            conf, nnAddr, xface, UserGroupInformation.getCurrentUser(), \n-            false).getProxy(), nnAddr.toString());\n+        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(factory.createProxy(conf, nnAddr, xface,\n+          UserGroupInformation.getCurrentUser(), false), nnAddr.toString());\n       } catch (IOException ioe) {\n         throw new RuntimeException(ioe);\n       }\n     }\n     return nnProxyInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    // Create a non-ha proxy if not already created.\n    if (nnProxyInfo \u003d\u003d null) {\n      try {\n        // Create a proxy that is not wrapped in RetryProxy\n        InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(factory.createProxy(conf, nnAddr, xface,\n          UserGroupInformation.getCurrentUser(), false), nnAddr.toString());\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n    return nnProxyInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11538. Move ClientProtocol HA proxies into hadoop-hdfs-client. Contributed by Huafeng Wang.\n",
          "commitDate": "04/04/17 11:05 PM",
          "commitName": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "04/04/17 9:08 PM",
          "commitNameOld": "19b89c4c7be0236aafded560b7bcad7e39d1c4ed",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     // Create a non-ha proxy if not already created.\n     if (nnProxyInfo \u003d\u003d null) {\n       try {\n         // Create a proxy that is not wrapped in RetryProxy\n         InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n-        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(NameNodeProxies.createNonHAProxy(\n-            conf, nnAddr, xface, UserGroupInformation.getCurrentUser(), \n-            false).getProxy(), nnAddr.toString());\n+        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(factory.createProxy(conf, nnAddr, xface,\n+          UserGroupInformation.getCurrentUser(), false), nnAddr.toString());\n       } catch (IOException ioe) {\n         throw new RuntimeException(ioe);\n       }\n     }\n     return nnProxyInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    // Create a non-ha proxy if not already created.\n    if (nnProxyInfo \u003d\u003d null) {\n      try {\n        // Create a proxy that is not wrapped in RetryProxy\n        InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(factory.createProxy(conf, nnAddr, xface,\n          UserGroupInformation.getCurrentUser(), false), nnAddr.toString());\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n    return nnProxyInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "9eee97508f350ed4629abb04e7781514ffa04070": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "17/09/15 2:18 PM",
      "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "10/04/15 7:38 PM",
      "commitNameOld": "60da0e49e7316892d63e9c7cdc3214057e68009a",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 159.78,
      "commitsBetweenForRepo": 1148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     // Create a non-ha proxy if not already created.\n     if (nnProxyInfo \u003d\u003d null) {\n       try {\n         // Create a proxy that is not wrapped in RetryProxy\n-        InetSocketAddress nnAddr \u003d NameNode.getAddress(nameNodeUri);\n+        InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n         nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(NameNodeProxies.createNonHAProxy(\n             conf, nnAddr, xface, UserGroupInformation.getCurrentUser(), \n             false).getProxy(), nnAddr.toString());\n       } catch (IOException ioe) {\n         throw new RuntimeException(ioe);\n       }\n     }\n     return nnProxyInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    // Create a non-ha proxy if not already created.\n    if (nnProxyInfo \u003d\u003d null) {\n      try {\n        // Create a proxy that is not wrapped in RetryProxy\n        InetSocketAddress nnAddr \u003d DFSUtilClient.getNNAddress(nameNodeUri);\n        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(NameNodeProxies.createNonHAProxy(\n            conf, nnAddr, xface, UserGroupInformation.getCurrentUser(), \n            false).getProxy(), nnAddr.toString());\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n    return nnProxyInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "33ade356b35223654a077103ed7fbed89f3f2321": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6334. Client failover proxy provider for IP failover based NN HA. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594263 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 9:19 AM",
      "commitName": "33ade356b35223654a077103ed7fbed89f3f2321",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,15 @@\n+  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n+    // Create a non-ha proxy if not already created.\n+    if (nnProxyInfo \u003d\u003d null) {\n+      try {\n+        // Create a proxy that is not wrapped in RetryProxy\n+        InetSocketAddress nnAddr \u003d NameNode.getAddress(nameNodeUri);\n+        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(NameNodeProxies.createNonHAProxy(\n+            conf, nnAddr, xface, UserGroupInformation.getCurrentUser(), \n+            false).getProxy(), nnAddr.toString());\n+      } catch (IOException ioe) {\n+        throw new RuntimeException(ioe);\n+      }\n+    }\n+    return nnProxyInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    // Create a non-ha proxy if not already created.\n    if (nnProxyInfo \u003d\u003d null) {\n      try {\n        // Create a proxy that is not wrapped in RetryProxy\n        InetSocketAddress nnAddr \u003d NameNode.getAddress(nameNodeUri);\n        nnProxyInfo \u003d new ProxyInfo\u003cT\u003e(NameNodeProxies.createNonHAProxy(\n            conf, nnAddr, xface, UserGroupInformation.getCurrentUser(), \n            false).getProxy(), nnAddr.toString());\n      } catch (IOException ioe) {\n        throw new RuntimeException(ioe);\n      }\n    }\n    return nnProxyInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/IPFailoverProxyProvider.java"
    }
  }
}