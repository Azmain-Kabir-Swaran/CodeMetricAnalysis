{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FpgaDevice.java",
  "functionName": "equals",
  "functionId": "equals___obj-Object",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/FpgaDevice.java",
  "functionStartLine": 84,
  "functionEndLine": 116,
  "numCommitsSeen": 6,
  "timeTaken": 2499,
  "changeHistory": [
    "31f172fd96e17c038fba2edbcaf340a323c6f7ff",
    "eeda6891e49bc13ae86d0193f94238b7109e291d",
    "7225ec0ceb49ae8f5588484297a20f07ec047420"
  ],
  "changeHistoryShort": {
    "31f172fd96e17c038fba2edbcaf340a323c6f7ff": "Ymovefromfile",
    "eeda6891e49bc13ae86d0193f94238b7109e291d": "Ybodychange",
    "7225ec0ceb49ae8f5588484297a20f07ec047420": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31f172fd96e17c038fba2edbcaf340a323c6f7ff": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-9677. Make FpgaDevice and GpuDevice classes more similar to each other. Contributed by kevin su\n",
      "commitDate": "09/11/19 5:04 AM",
      "commitName": "31f172fd96e17c038fba2edbcaf340a323c6f7ff",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "07/11/19 7:18 PM",
      "commitNameOld": "42fc8884ab9763e8778670f301896bf473ecf1d2",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 1.41,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n-    public boolean equals(Object obj) {\n-      if (this \u003d\u003d obj) {\n-        return true;\n-      }\n-      if (obj \u003d\u003d null) {\n-        return false;\n-      }\n-      if (getClass() !\u003d obj.getClass()) {\n-        return false;\n-      }\n-      FpgaDevice other \u003d (FpgaDevice) obj;\n-      if (aliasDevName \u003d\u003d null) {\n-        if (other.aliasDevName !\u003d null) {\n-          return false;\n-        }\n-      } else if (!aliasDevName.equals(other.aliasDevName)) {\n-        return false;\n-      }\n-      if (major !\u003d other.major) {\n-        return false;\n-      }\n-      if (minor !\u003d other.minor) {\n-        return false;\n-      }\n-      if (type \u003d\u003d null) {\n-        if (other.type !\u003d null) {\n-          return false;\n-        }\n-      } else if (!type.equals(other.type)) {\n-        return false;\n-      }\n+  public boolean equals(Object obj) {\n+    if (this \u003d\u003d obj) {\n       return true;\n-    }\n\\ No newline at end of file\n+    }\n+    if (obj \u003d\u003d null) {\n+      return false;\n+    }\n+    if (getClass() !\u003d obj.getClass()) {\n+      return false;\n+    }\n+    FpgaDevice other \u003d (FpgaDevice) obj;\n+    if (aliasDevName \u003d\u003d null) {\n+      if (other.aliasDevName !\u003d null) {\n+        return false;\n+      }\n+    } else if (!aliasDevName.equals(other.aliasDevName)) {\n+      return false;\n+    }\n+    if (major !\u003d other.major) {\n+      return false;\n+    }\n+    if (minor !\u003d other.minor) {\n+      return false;\n+    }\n+    if (type \u003d\u003d null) {\n+      if (other.type !\u003d null) {\n+        return false;\n+      }\n+    } else if (!type.equals(other.type)) {\n+      return false;\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj) {\n      return true;\n    }\n    if (obj \u003d\u003d null) {\n      return false;\n    }\n    if (getClass() !\u003d obj.getClass()) {\n      return false;\n    }\n    FpgaDevice other \u003d (FpgaDevice) obj;\n    if (aliasDevName \u003d\u003d null) {\n      if (other.aliasDevName !\u003d null) {\n        return false;\n      }\n    } else if (!aliasDevName.equals(other.aliasDevName)) {\n      return false;\n    }\n    if (major !\u003d other.major) {\n      return false;\n    }\n    if (minor !\u003d other.minor) {\n      return false;\n    }\n    if (type \u003d\u003d null) {\n      if (other.type !\u003d null) {\n        return false;\n      }\n    } else if (!type.equals(other.type)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/FpgaDevice.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceAllocator.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/FpgaDevice.java",
        "oldMethodName": "equals",
        "newMethodName": "equals"
      }
    },
    "eeda6891e49bc13ae86d0193f94238b7109e291d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9268. General improvements in FpgaDevice. Contributed by Peter Bacsko.\n",
      "commitDate": "25/03/19 1:22 PM",
      "commitName": "eeda6891e49bc13ae86d0193f94238b7109e291d",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "21/03/19 11:15 AM",
      "commitNameOld": "a99eb80659835107f4015c859b3319bf3a70c281",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 4.09,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,33 @@\n     public boolean equals(Object obj) {\n       if (this \u003d\u003d obj) {\n         return true;\n       }\n       if (obj \u003d\u003d null) {\n         return false;\n       }\n-      if (!(obj instanceof FpgaDevice)) {\n+      if (getClass() !\u003d obj.getClass()) {\n         return false;\n       }\n       FpgaDevice other \u003d (FpgaDevice) obj;\n-      if (other.getType().equals(this.type) \u0026\u0026\n-          other.getMajor().equals(this.major) \u0026\u0026\n-          other.getMinor().equals(this.minor)) {\n-        return true;\n+      if (aliasDevName \u003d\u003d null) {\n+        if (other.aliasDevName !\u003d null) {\n+          return false;\n+        }\n+      } else if (!aliasDevName.equals(other.aliasDevName)) {\n+        return false;\n       }\n-      return false;\n+      if (major !\u003d other.major) {\n+        return false;\n+      }\n+      if (minor !\u003d other.minor) {\n+        return false;\n+      }\n+      if (type \u003d\u003d null) {\n+        if (other.type !\u003d null) {\n+          return false;\n+        }\n+      } else if (!type.equals(other.type)) {\n+        return false;\n+      }\n+      return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean equals(Object obj) {\n      if (this \u003d\u003d obj) {\n        return true;\n      }\n      if (obj \u003d\u003d null) {\n        return false;\n      }\n      if (getClass() !\u003d obj.getClass()) {\n        return false;\n      }\n      FpgaDevice other \u003d (FpgaDevice) obj;\n      if (aliasDevName \u003d\u003d null) {\n        if (other.aliasDevName !\u003d null) {\n          return false;\n        }\n      } else if (!aliasDevName.equals(other.aliasDevName)) {\n        return false;\n      }\n      if (major !\u003d other.major) {\n        return false;\n      }\n      if (minor !\u003d other.minor) {\n        return false;\n      }\n      if (type \u003d\u003d null) {\n        if (other.type !\u003d null) {\n          return false;\n        }\n      } else if (!type.equals(other.type)) {\n        return false;\n      }\n      return true;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceAllocator.java",
      "extendedDetails": {}
    },
    "7225ec0ceb49ae8f5588484297a20f07ec047420": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6507. Add support in NodeManager to isolate FPGA devices with CGroups. (Zhankun Tang via wangda)\n\nChange-Id: Ic9afd841805f1035423915a0b0add5f3ba96cf9d\n",
      "commitDate": "01/12/17 10:50 AM",
      "commitName": "7225ec0ceb49ae8f5588484297a20f07ec047420",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,18 @@\n+    public boolean equals(Object obj) {\n+      if (this \u003d\u003d obj) {\n+        return true;\n+      }\n+      if (obj \u003d\u003d null) {\n+        return false;\n+      }\n+      if (!(obj instanceof FpgaDevice)) {\n+        return false;\n+      }\n+      FpgaDevice other \u003d (FpgaDevice) obj;\n+      if (other.getType().equals(this.type) \u0026\u0026\n+          other.getMajor().equals(this.major) \u0026\u0026\n+          other.getMinor().equals(this.minor)) {\n+        return true;\n+      }\n+      return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean equals(Object obj) {\n      if (this \u003d\u003d obj) {\n        return true;\n      }\n      if (obj \u003d\u003d null) {\n        return false;\n      }\n      if (!(obj instanceof FpgaDevice)) {\n        return false;\n      }\n      FpgaDevice other \u003d (FpgaDevice) obj;\n      if (other.getType().equals(this.type) \u0026\u0026\n          other.getMajor().equals(this.major) \u0026\u0026\n          other.getMinor().equals(this.minor)) {\n        return true;\n      }\n      return false;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceAllocator.java"
    }
  }
}