{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DynamoDBMetadataStoreTableManager.java",
  "functionName": "provisionTable",
  "functionId": "provisionTable___readCapacity-Long__writeCapacity-Long",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStoreTableManager.java",
  "functionStartLine": 690,
  "functionEndLine": 709,
  "numCommitsSeen": 38,
  "timeTaken": 3420,
  "changeHistory": [
    "4a700c20d553dc5336ee881719bcf189fc46bfbf",
    "4e38dafde4dce8cd8c368783a291e830f06e1def",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "4a700c20d553dc5336ee881719bcf189fc46bfbf": "Ymovefromfile",
    "4e38dafde4dce8cd8c368783a291e830f06e1def": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4a700c20d553dc5336ee881719bcf189fc46bfbf": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-16520. Race condition in DDB table init and waiting threads.  (#1576). Contributed by Gabor Bota.\n\nFixes HADOOP-16349. DynamoDBMetadataStore.getVersionMarkerItem() to log at info/warn on retry\r\n\r\nChange-Id: Ia83e92b9039ccb780090c99c41b4f71ef7539d35",
      "commitDate": "11/10/19 3:08 AM",
      "commitName": "4a700c20d553dc5336ee881719bcf189fc46bfbf",
      "commitAuthor": "Gabor Bota",
      "commitDateOld": "10/10/19 10:33 PM",
      "commitNameOld": "f267917ce3cf282b32166e39af871a8d1231d090",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 0.19,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void provisionTable(Long readCapacity, Long writeCapacity)\n      throws IOException {\n\n    if (readCapacity \u003d\u003d 0 || writeCapacity \u003d\u003d 0) {\n      // table is pay on demand\n      throw new IOException(E_ON_DEMAND_NO_SET_CAPACITY);\n    }\n    final ProvisionedThroughput toProvision \u003d new ProvisionedThroughput()\n        .withReadCapacityUnits(readCapacity)\n        .withWriteCapacityUnits(writeCapacity);\n    invoker.retry(\"ProvisionTable\", tableName, true,\n        () -\u003e {\n          final ProvisionedThroughputDescription p \u003d\n              table.updateTable(toProvision).getProvisionedThroughput();\n          LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n                  + \"writeCapacityUnits\u003d{}\",\n              tableName, region, p.getReadCapacityUnits(),\n              p.getWriteCapacityUnits());\n        });\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStoreTableManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
        "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStoreTableManager.java",
        "oldMethodName": "provisionTable",
        "newMethodName": "provisionTable"
      }
    },
    "4e38dafde4dce8cd8c368783a291e830f06e1def": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15563. S3Guard to support creating on-demand DDB tables.\n\nContributed by Steve Loughran\n\nChange-Id: I2262b5b9f52e42ded8ed6f50fd39756f96e77087\n",
      "commitDate": "07/06/19 10:26 AM",
      "commitName": "4e38dafde4dce8cd8c368783a291e830f06e1def",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/05/19 2:29 PM",
      "commitNameOld": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthorOld": "Ben Roling",
      "daysBetweenCommits": 18.83,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,20 @@\n   void provisionTable(Long readCapacity, Long writeCapacity)\n       throws IOException {\n+\n+    if (readCapacity \u003d\u003d 0 || writeCapacity \u003d\u003d 0) {\n+      // table is pay on demand\n+      throw new IOException(E_ON_DEMAND_NO_SET_CAPACITY);\n+    }\n     final ProvisionedThroughput toProvision \u003d new ProvisionedThroughput()\n         .withReadCapacityUnits(readCapacity)\n         .withWriteCapacityUnits(writeCapacity);\n     invoker.retry(\"ProvisionTable\", tableName, true,\n         () -\u003e {\n           final ProvisionedThroughputDescription p \u003d\n               table.updateTable(toProvision).getProvisionedThroughput();\n           LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n                   + \"writeCapacityUnits\u003d{}\",\n               tableName, region, p.getReadCapacityUnits(),\n               p.getWriteCapacityUnits());\n         });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void provisionTable(Long readCapacity, Long writeCapacity)\n      throws IOException {\n\n    if (readCapacity \u003d\u003d 0 || writeCapacity \u003d\u003d 0) {\n      // table is pay on demand\n      throw new IOException(E_ON_DEMAND_NO_SET_CAPACITY);\n    }\n    final ProvisionedThroughput toProvision \u003d new ProvisionedThroughput()\n        .withReadCapacityUnits(readCapacity)\n        .withWriteCapacityUnits(writeCapacity);\n    invoker.retry(\"ProvisionTable\", tableName, true,\n        () -\u003e {\n          final ProvisionedThroughputDescription p \u003d\n              table.updateTable(toProvision).getProvisionedThroughput();\n          LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n                  + \"writeCapacityUnits\u003d{}\",\n              tableName, region, p.getReadCapacityUnits(),\n              p.getWriteCapacityUnits());\n        });\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "25/09/17 3:59 PM",
      "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
      "commitAuthorOld": "Aaron Fabbri",
      "daysBetweenCommits": 57.69,
      "commitsBetweenForRepo": 477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   void provisionTable(Long readCapacity, Long writeCapacity)\n       throws IOException {\n     final ProvisionedThroughput toProvision \u003d new ProvisionedThroughput()\n         .withReadCapacityUnits(readCapacity)\n         .withWriteCapacityUnits(writeCapacity);\n-    try {\n-      final ProvisionedThroughputDescription p \u003d\n-          table.updateTable(toProvision).getProvisionedThroughput();\n-      LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n-              + \"writeCapacityUnits\u003d{}\",\n-          tableName, region, p.getReadCapacityUnits(),\n-          p.getWriteCapacityUnits());\n-    } catch (AmazonClientException e) {\n-      throw translateException(\"provisionTable\", (String) null, e);\n-    }\n+    invoker.retry(\"ProvisionTable\", tableName, true,\n+        () -\u003e {\n+          final ProvisionedThroughputDescription p \u003d\n+              table.updateTable(toProvision).getProvisionedThroughput();\n+          LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n+                  + \"writeCapacityUnits\u003d{}\",\n+              tableName, region, p.getReadCapacityUnits(),\n+              p.getWriteCapacityUnits());\n+        });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void provisionTable(Long readCapacity, Long writeCapacity)\n      throws IOException {\n    final ProvisionedThroughput toProvision \u003d new ProvisionedThroughput()\n        .withReadCapacityUnits(readCapacity)\n        .withWriteCapacityUnits(writeCapacity);\n    invoker.retry(\"ProvisionTable\", tableName, true,\n        () -\u003e {\n          final ProvisionedThroughputDescription p \u003d\n              table.updateTable(toProvision).getProvisionedThroughput();\n          LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n                  + \"writeCapacityUnits\u003d{}\",\n              tableName, region, p.getReadCapacityUnits(),\n              p.getWriteCapacityUnits());\n        });\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,16 @@\n+  void provisionTable(Long readCapacity, Long writeCapacity)\n+      throws IOException {\n+    final ProvisionedThroughput toProvision \u003d new ProvisionedThroughput()\n+        .withReadCapacityUnits(readCapacity)\n+        .withWriteCapacityUnits(writeCapacity);\n+    try {\n+      final ProvisionedThroughputDescription p \u003d\n+          table.updateTable(toProvision).getProvisionedThroughput();\n+      LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n+              + \"writeCapacityUnits\u003d{}\",\n+          tableName, region, p.getReadCapacityUnits(),\n+          p.getWriteCapacityUnits());\n+    } catch (AmazonClientException e) {\n+      throw translateException(\"provisionTable\", (String) null, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void provisionTable(Long readCapacity, Long writeCapacity)\n      throws IOException {\n    final ProvisionedThroughput toProvision \u003d new ProvisionedThroughput()\n        .withReadCapacityUnits(readCapacity)\n        .withWriteCapacityUnits(writeCapacity);\n    try {\n      final ProvisionedThroughputDescription p \u003d\n          table.updateTable(toProvision).getProvisionedThroughput();\n      LOG.info(\"Provision table {} in region {}: readCapacityUnits\u003d{}, \"\n              + \"writeCapacityUnits\u003d{}\",\n          tableName, region, p.getReadCapacityUnits(),\n          p.getWriteCapacityUnits());\n    } catch (AmazonClientException e) {\n      throw translateException(\"provisionTable\", (String) null, e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java"
    }
  }
}