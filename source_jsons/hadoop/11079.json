{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskBalancer.java",
  "functionName": "verifyPlanHash",
  "functionId": "verifyPlanHash___planID-String__plan-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
  "functionStartLine": 391,
  "functionEndLine": 415,
  "numCommitsSeen": 32,
  "timeTaken": 1664,
  "changeHistory": [
    "cb64e993c270a68cb0c056ff41ad522e9306c88b",
    "5628b36c0872d58c9b25f23da3dab4eafad9bca3",
    "2b1b2faf76a7ff148650a7836935a85439f60c49"
  ],
  "changeHistoryShort": {
    "cb64e993c270a68cb0c056ff41ad522e9306c88b": "Ybodychange",
    "5628b36c0872d58c9b25f23da3dab4eafad9bca3": "Ybodychange",
    "2b1b2faf76a7ff148650a7836935a85439f60c49": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cb64e993c270a68cb0c056ff41ad522e9306c88b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15347. Replace the deprecated method shaHex. Contributed by bianqi.\n",
      "commitDate": "09/05/20 11:41 AM",
      "commitName": "cb64e993c270a68cb0c056ff41ad522e9306c88b",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "27/06/19 10:00 AM",
      "commitNameOld": "4a212242d99071d028b40c2f5d40afb7f337e471",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 317.07,
      "commitsBetweenForRepo": 1599,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private NodePlan verifyPlanHash(String planID, String plan)\n       throws DiskBalancerException {\n     final long sha1Length \u003d 40;\n     if (plan \u003d\u003d null || plan.length() \u003d\u003d 0) {\n       LOG.error(\"Disk Balancer -  Invalid plan.\");\n       throw new DiskBalancerException(\"Invalid plan.\",\n           DiskBalancerException.Result.INVALID_PLAN);\n     }\n \n     if ((planID \u003d\u003d null) ||\n         (planID.length() !\u003d sha1Length) ||\n-        !DigestUtils.shaHex(plan.getBytes(Charset.forName(\"UTF-8\")))\n+        !DigestUtils.sha1Hex(plan.getBytes(Charset.forName(\"UTF-8\")))\n             .equalsIgnoreCase(planID)) {\n       LOG.error(\"Disk Balancer - Invalid plan hash.\");\n       throw new DiskBalancerException(\"Invalid or mis-matched hash.\",\n           DiskBalancerException.Result.INVALID_PLAN_HASH);\n     }\n \n     try {\n       return NodePlan.parseJson(plan);\n     } catch (IOException ex) {\n       throw new DiskBalancerException(\"Parsing plan failed.\", ex,\n           DiskBalancerException.Result.MALFORMED_PLAN);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodePlan verifyPlanHash(String planID, String plan)\n      throws DiskBalancerException {\n    final long sha1Length \u003d 40;\n    if (plan \u003d\u003d null || plan.length() \u003d\u003d 0) {\n      LOG.error(\"Disk Balancer -  Invalid plan.\");\n      throw new DiskBalancerException(\"Invalid plan.\",\n          DiskBalancerException.Result.INVALID_PLAN);\n    }\n\n    if ((planID \u003d\u003d null) ||\n        (planID.length() !\u003d sha1Length) ||\n        !DigestUtils.sha1Hex(plan.getBytes(Charset.forName(\"UTF-8\")))\n            .equalsIgnoreCase(planID)) {\n      LOG.error(\"Disk Balancer - Invalid plan hash.\");\n      throw new DiskBalancerException(\"Invalid or mis-matched hash.\",\n          DiskBalancerException.Result.INVALID_PLAN_HASH);\n    }\n\n    try {\n      return NodePlan.parseJson(plan);\n    } catch (IOException ex) {\n      throw new DiskBalancerException(\"Parsing plan failed.\", ex,\n          DiskBalancerException.Result.MALFORMED_PLAN);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
      "extendedDetails": {}
    },
    "5628b36c0872d58c9b25f23da3dab4eafad9bca3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10559. DiskBalancer: Use SHA1 for Plan ID. Contributed by Xiaobing Zhou.\n",
      "commitDate": "15/08/16 8:10 PM",
      "commitName": "5628b36c0872d58c9b25f23da3dab4eafad9bca3",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "09/08/16 3:59 PM",
      "commitNameOld": "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 6.17,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private NodePlan verifyPlanHash(String planID, String plan)\n       throws DiskBalancerException {\n-    final long sha512Length \u003d 128;\n+    final long sha1Length \u003d 40;\n     if (plan \u003d\u003d null || plan.length() \u003d\u003d 0) {\n       LOG.error(\"Disk Balancer -  Invalid plan.\");\n       throw new DiskBalancerException(\"Invalid plan.\",\n           DiskBalancerException.Result.INVALID_PLAN);\n     }\n \n     if ((planID \u003d\u003d null) ||\n-        (planID.length() !\u003d sha512Length) ||\n-        !DigestUtils.sha512Hex(plan.getBytes(Charset.forName(\"UTF-8\")))\n+        (planID.length() !\u003d sha1Length) ||\n+        !DigestUtils.shaHex(plan.getBytes(Charset.forName(\"UTF-8\")))\n             .equalsIgnoreCase(planID)) {\n       LOG.error(\"Disk Balancer - Invalid plan hash.\");\n       throw new DiskBalancerException(\"Invalid or mis-matched hash.\",\n           DiskBalancerException.Result.INVALID_PLAN_HASH);\n     }\n \n     try {\n       return NodePlan.parseJson(plan);\n     } catch (IOException ex) {\n       throw new DiskBalancerException(\"Parsing plan failed.\", ex,\n           DiskBalancerException.Result.MALFORMED_PLAN);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NodePlan verifyPlanHash(String planID, String plan)\n      throws DiskBalancerException {\n    final long sha1Length \u003d 40;\n    if (plan \u003d\u003d null || plan.length() \u003d\u003d 0) {\n      LOG.error(\"Disk Balancer -  Invalid plan.\");\n      throw new DiskBalancerException(\"Invalid plan.\",\n          DiskBalancerException.Result.INVALID_PLAN);\n    }\n\n    if ((planID \u003d\u003d null) ||\n        (planID.length() !\u003d sha1Length) ||\n        !DigestUtils.shaHex(plan.getBytes(Charset.forName(\"UTF-8\")))\n            .equalsIgnoreCase(planID)) {\n      LOG.error(\"Disk Balancer - Invalid plan hash.\");\n      throw new DiskBalancerException(\"Invalid or mis-matched hash.\",\n          DiskBalancerException.Result.INVALID_PLAN_HASH);\n    }\n\n    try {\n      return NodePlan.parseJson(plan);\n    } catch (IOException ex) {\n      throw new DiskBalancerException(\"Parsing plan failed.\", ex,\n          DiskBalancerException.Result.MALFORMED_PLAN);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
      "extendedDetails": {}
    },
    "2b1b2faf76a7ff148650a7836935a85439f60c49": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9671. DiskBalancer: SubmitPlan implementation. (Contributed by Anu Engineer)\n",
      "commitDate": "23/06/16 6:18 PM",
      "commitName": "2b1b2faf76a7ff148650a7836935a85439f60c49",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,25 @@\n+  private NodePlan verifyPlanHash(String planID, String plan)\n+      throws DiskBalancerException {\n+    final long sha512Length \u003d 128;\n+    if (plan \u003d\u003d null || plan.length() \u003d\u003d 0) {\n+      LOG.error(\"Disk Balancer -  Invalid plan.\");\n+      throw new DiskBalancerException(\"Invalid plan.\",\n+          DiskBalancerException.Result.INVALID_PLAN);\n+    }\n+\n+    if ((planID \u003d\u003d null) ||\n+        (planID.length() !\u003d sha512Length) ||\n+        !DigestUtils.sha512Hex(plan.getBytes(Charset.forName(\"UTF-8\")))\n+            .equalsIgnoreCase(planID)) {\n+      LOG.error(\"Disk Balancer - Invalid plan hash.\");\n+      throw new DiskBalancerException(\"Invalid or mis-matched hash.\",\n+          DiskBalancerException.Result.INVALID_PLAN_HASH);\n+    }\n+\n+    try {\n+      return NodePlan.parseJson(plan);\n+    } catch (IOException ex) {\n+      throw new DiskBalancerException(\"Parsing plan failed.\", ex,\n+          DiskBalancerException.Result.MALFORMED_PLAN);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private NodePlan verifyPlanHash(String planID, String plan)\n      throws DiskBalancerException {\n    final long sha512Length \u003d 128;\n    if (plan \u003d\u003d null || plan.length() \u003d\u003d 0) {\n      LOG.error(\"Disk Balancer -  Invalid plan.\");\n      throw new DiskBalancerException(\"Invalid plan.\",\n          DiskBalancerException.Result.INVALID_PLAN);\n    }\n\n    if ((planID \u003d\u003d null) ||\n        (planID.length() !\u003d sha512Length) ||\n        !DigestUtils.sha512Hex(plan.getBytes(Charset.forName(\"UTF-8\")))\n            .equalsIgnoreCase(planID)) {\n      LOG.error(\"Disk Balancer - Invalid plan hash.\");\n      throw new DiskBalancerException(\"Invalid or mis-matched hash.\",\n          DiskBalancerException.Result.INVALID_PLAN_HASH);\n    }\n\n    try {\n      return NodePlan.parseJson(plan);\n    } catch (IOException ex) {\n      throw new DiskBalancerException(\"Parsing plan failed.\", ex,\n          DiskBalancerException.Result.MALFORMED_PLAN);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java"
    }
  }
}