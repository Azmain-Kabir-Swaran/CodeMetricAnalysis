{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Check.java",
  "functionName": "validIdentifier",
  "functionId": "validIdentifier___value-String__maxLen-int__name-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/util/Check.java",
  "functionStartLine": 125,
  "functionEndLine": 136,
  "numCommitsSeen": 3,
  "timeTaken": 406,
  "changeHistory": [
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,12 @@\n+  public static String validIdentifier(String value, int maxLen, String name) {\n+    Check.notEmpty(value, name);\n+    if (value.length() \u003e maxLen) {\n+      throw new IllegalArgumentException(\n+        MessageFormat.format(\"[{0}] \u003d [{1}] exceeds max len [{2}]\", name, value, maxLen));\n+    }\n+    if (!IDENTIFIER_PATTERN.matcher(value).find()) {\n+      throw new IllegalArgumentException(\n+        MessageFormat.format(\"[{0}] \u003d [{1}] must be \u0027{2}\u0027\", name, value, IDENTIFIER_PATTERN_STR));\n+    }\n+    return value;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String validIdentifier(String value, int maxLen, String name) {\n    Check.notEmpty(value, name);\n    if (value.length() \u003e maxLen) {\n      throw new IllegalArgumentException(\n        MessageFormat.format(\"[{0}] \u003d [{1}] exceeds max len [{2}]\", name, value, maxLen));\n    }\n    if (!IDENTIFIER_PATTERN.matcher(value).find()) {\n      throw new IllegalArgumentException(\n        MessageFormat.format(\"[{0}] \u003d [{1}] must be \u0027{2}\u0027\", name, value, IDENTIFIER_PATTERN_STR));\n    }\n    return value;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/util/Check.java"
    }
  }
}