{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyService.java",
  "functionName": "handle",
  "functionId": "handle___event-ApplicationEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
  "functionStartLine": 806,
  "functionEndLine": 825,
  "numCommitsSeen": 17,
  "timeTaken": 2117,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "d6eed5acca222a281401c1d524824f0460ea7826",
    "310aa4686eb697f0700a71d33106514c404dab1b",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "d6eed5acca222a281401c1d524824f0460ea7826": "Ybodychange",
    "310aa4686eb697f0700a71d33106514c404dab1b": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "24/07/18 12:39 AM",
      "commitNameOld": "84612788339392fcda1aef0e27c43f5c6b2a19e5",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 234.65,
      "commitsBetweenForRepo": 1909,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     public void handle(ApplicationEvent event) {\n       Application app \u003d\n           AMRMProxyService.this.nmContext.getApplications().get(\n               event.getApplicationID());\n       if (app !\u003d null) {\n         switch (event.getType()) {\n         case APPLICATION_RESOURCES_CLEANEDUP:\n           LOG.info(\"Application stop event received for stopping AppId:\"\n               + event.getApplicationID().toString());\n           AMRMProxyService.this.stopApplication(event.getApplicationID());\n           break;\n         default:\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n-          }\n+          LOG.debug(\"AMRMProxy is ignoring event: {}\", event.getType());\n           break;\n         }\n       } else {\n         LOG.warn(\"Event \" + event + \" sent to absent application \"\n             + event.getApplicationID());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ApplicationEvent event) {\n      Application app \u003d\n          AMRMProxyService.this.nmContext.getApplications().get(\n              event.getApplicationID());\n      if (app !\u003d null) {\n        switch (event.getType()) {\n        case APPLICATION_RESOURCES_CLEANEDUP:\n          LOG.info(\"Application stop event received for stopping AppId:\"\n              + event.getApplicationID().toString());\n          AMRMProxyService.this.stopApplication(event.getApplicationID());\n          break;\n        default:\n          LOG.debug(\"AMRMProxy is ignoring event: {}\", event.getType());\n          break;\n        }\n      } else {\n        LOG.warn(\"Event \" + event + \" sent to absent application \"\n            + event.getApplicationID());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "d6eed5acca222a281401c1d524824f0460ea7826": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6565. Fix memory leak and finish app trigger in AMRMProxy. (Botong Huang via Subru).\n",
      "commitDate": "05/05/17 4:27 PM",
      "commitName": "d6eed5acca222a281401c1d524824f0460ea7826",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "17/01/17 2:48 PM",
      "commitNameOld": "4d1f3d9020b8a8bf1d2a81e4d6ad20418ed9bcc2",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 108.03,
      "commitsBetweenForRepo": 608,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public void handle(ApplicationEvent event) {\n       Application app \u003d\n           AMRMProxyService.this.nmContext.getApplications().get(\n               event.getApplicationID());\n       if (app !\u003d null) {\n         switch (event.getType()) {\n-        case FINISH_APPLICATION:\n+        case APPLICATION_RESOURCES_CLEANEDUP:\n           LOG.info(\"Application stop event received for stopping AppId:\"\n               + event.getApplicationID().toString());\n           AMRMProxyService.this.stopApplication(event.getApplicationID());\n           break;\n         default:\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n           }\n           break;\n         }\n       } else {\n         LOG.warn(\"Event \" + event + \" sent to absent application \"\n             + event.getApplicationID());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ApplicationEvent event) {\n      Application app \u003d\n          AMRMProxyService.this.nmContext.getApplications().get(\n              event.getApplicationID());\n      if (app !\u003d null) {\n        switch (event.getType()) {\n        case APPLICATION_RESOURCES_CLEANEDUP:\n          LOG.info(\"Application stop event received for stopping AppId:\"\n              + event.getApplicationID().toString());\n          AMRMProxyService.this.stopApplication(event.getApplicationID());\n          break;\n        default:\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n          }\n          break;\n        }\n      } else {\n        LOG.warn(\"Event \" + event + \" sent to absent application \"\n            + event.getApplicationID());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "310aa4686eb697f0700a71d33106514c404dab1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5805. Add isDebugEnabled check for debug logs in nodemanager (Bibin A Chundatt via Varun Saxena)\n",
      "commitDate": "01/11/16 2:21 AM",
      "commitName": "310aa4686eb697f0700a71d33106514c404dab1b",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "31/07/16 11:48 AM",
      "commitNameOld": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 92.61,
      "commitsBetweenForRepo": 671,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n     public void handle(ApplicationEvent event) {\n       Application app \u003d\n           AMRMProxyService.this.nmContext.getApplications().get(\n               event.getApplicationID());\n       if (app !\u003d null) {\n         switch (event.getType()) {\n         case FINISH_APPLICATION:\n           LOG.info(\"Application stop event received for stopping AppId:\"\n               + event.getApplicationID().toString());\n           AMRMProxyService.this.stopApplication(event.getApplicationID());\n           break;\n         default:\n-          LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n+          }\n           break;\n         }\n       } else {\n         LOG.warn(\"Event \" + event + \" sent to absent application \"\n             + event.getApplicationID());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ApplicationEvent event) {\n      Application app \u003d\n          AMRMProxyService.this.nmContext.getApplications().get(\n              event.getApplicationID());\n      if (app !\u003d null) {\n        switch (event.getType()) {\n        case FINISH_APPLICATION:\n          LOG.info(\"Application stop event received for stopping AppId:\"\n              + event.getApplicationID().toString());\n          AMRMProxyService.this.stopApplication(event.getApplicationID());\n          break;\n        default:\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n          }\n          break;\n        }\n      } else {\n        LOG.warn(\"Event \" + event + \" sent to absent application \"\n            + event.getApplicationID());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+    public void handle(ApplicationEvent event) {\n+      Application app \u003d\n+          AMRMProxyService.this.nmContext.getApplications().get(\n+              event.getApplicationID());\n+      if (app !\u003d null) {\n+        switch (event.getType()) {\n+        case FINISH_APPLICATION:\n+          LOG.info(\"Application stop event received for stopping AppId:\"\n+              + event.getApplicationID().toString());\n+          AMRMProxyService.this.stopApplication(event.getApplicationID());\n+          break;\n+        default:\n+          LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n+          break;\n+        }\n+      } else {\n+        LOG.warn(\"Event \" + event + \" sent to absent application \"\n+            + event.getApplicationID());\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ApplicationEvent event) {\n      Application app \u003d\n          AMRMProxyService.this.nmContext.getApplications().get(\n              event.getApplicationID());\n      if (app !\u003d null) {\n        switch (event.getType()) {\n        case FINISH_APPLICATION:\n          LOG.info(\"Application stop event received for stopping AppId:\"\n              + event.getApplicationID().toString());\n          AMRMProxyService.this.stopApplication(event.getApplicationID());\n          break;\n        default:\n          LOG.debug(\"AMRMProxy is ignoring event: \" + event.getType());\n          break;\n        }\n      } else {\n        LOG.warn(\"Event \" + event + \" sent to absent application \"\n            + event.getApplicationID());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java"
    }
  }
}