{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobEndNotifier.java",
  "functionName": "localRunnerNotification",
  "functionId": "localRunnerNotification___conf-JobConf__status-JobStatus",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobEndNotifier.java",
  "functionStartLine": 81,
  "functionEndLine": 109,
  "numCommitsSeen": 8,
  "timeTaken": 4341,
  "changeHistory": [
    "794f9bb3e4f26adaef80e9249d651560930062c3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "794f9bb3e4f26adaef80e9249d651560930062c3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "794f9bb3e4f26adaef80e9249d651560930062c3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5066. Added a timeout for the job.end.notification.url. Contributed by Ivan Mitic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1470216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/04/13 12:18 PM",
      "commitName": "794f9bb3e4f26adaef80e9249d651560930062c3",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "26/03/13 7:16 AM",
      "commitNameOld": "a0a844222dc1362cc46771841ab9036cd7373675",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 25.21,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public static void localRunnerNotification(JobConf conf, JobStatus status) {\n     JobEndStatusInfo notification \u003d createNotification(conf, status);\n     if (notification !\u003d null) {\n-      while (notification.configureForRetry()) {\n+      do {\n         try {\n-          int code \u003d httpNotification(notification.getUri());\n+          int code \u003d httpNotification(notification.getUri(),\n+              notification.getTimeout());\n           if (code !\u003d 200) {\n             throw new IOException(\"Invalid response status code: \" + code);\n           }\n           else {\n             break;\n           }\n         }\n         catch (IOException ioex) {\n           LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ioex);\n         }\n         catch (Exception ex) {\n           LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ex);\n         }\n         try {\n           Thread.sleep(notification.getRetryInterval());\n         }\n         catch (InterruptedException iex) {\n           LOG.error(\"Notification retry error [\" + notification + \"]\", iex);\n         }\n-      }\n+      } while (notification.configureForRetry());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void localRunnerNotification(JobConf conf, JobStatus status) {\n    JobEndStatusInfo notification \u003d createNotification(conf, status);\n    if (notification !\u003d null) {\n      do {\n        try {\n          int code \u003d httpNotification(notification.getUri(),\n              notification.getTimeout());\n          if (code !\u003d 200) {\n            throw new IOException(\"Invalid response status code: \" + code);\n          }\n          else {\n            break;\n          }\n        }\n        catch (IOException ioex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ioex);\n        }\n        catch (Exception ex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ex);\n        }\n        try {\n          Thread.sleep(notification.getRetryInterval());\n        }\n        catch (InterruptedException iex) {\n          LOG.error(\"Notification retry error [\" + notification + \"]\", iex);\n        }\n      } while (notification.configureForRetry());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobEndNotifier.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void localRunnerNotification(JobConf conf, JobStatus status) {\n    JobEndStatusInfo notification \u003d createNotification(conf, status);\n    if (notification !\u003d null) {\n      while (notification.configureForRetry()) {\n        try {\n          int code \u003d httpNotification(notification.getUri());\n          if (code !\u003d 200) {\n            throw new IOException(\"Invalid response status code: \" + code);\n          }\n          else {\n            break;\n          }\n        }\n        catch (IOException ioex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ioex);\n        }\n        catch (Exception ex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ex);\n        }\n        try {\n          Thread.sleep(notification.getRetryInterval());\n        }\n        catch (InterruptedException iex) {\n          LOG.error(\"Notification retry error [\" + notification + \"]\", iex);\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobEndNotifier.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobEndNotifier.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobEndNotifier.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void localRunnerNotification(JobConf conf, JobStatus status) {\n    JobEndStatusInfo notification \u003d createNotification(conf, status);\n    if (notification !\u003d null) {\n      while (notification.configureForRetry()) {\n        try {\n          int code \u003d httpNotification(notification.getUri());\n          if (code !\u003d 200) {\n            throw new IOException(\"Invalid response status code: \" + code);\n          }\n          else {\n            break;\n          }\n        }\n        catch (IOException ioex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ioex);\n        }\n        catch (Exception ex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ex);\n        }\n        try {\n          Thread.sleep(notification.getRetryInterval());\n        }\n        catch (InterruptedException iex) {\n          LOG.error(\"Notification retry error [\" + notification + \"]\", iex);\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobEndNotifier.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/JobEndNotifier.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobEndNotifier.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+  public static void localRunnerNotification(JobConf conf, JobStatus status) {\n+    JobEndStatusInfo notification \u003d createNotification(conf, status);\n+    if (notification !\u003d null) {\n+      while (notification.configureForRetry()) {\n+        try {\n+          int code \u003d httpNotification(notification.getUri());\n+          if (code !\u003d 200) {\n+            throw new IOException(\"Invalid response status code: \" + code);\n+          }\n+          else {\n+            break;\n+          }\n+        }\n+        catch (IOException ioex) {\n+          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ioex);\n+        }\n+        catch (Exception ex) {\n+          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ex);\n+        }\n+        try {\n+          Thread.sleep(notification.getRetryInterval());\n+        }\n+        catch (InterruptedException iex) {\n+          LOG.error(\"Notification retry error [\" + notification + \"]\", iex);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void localRunnerNotification(JobConf conf, JobStatus status) {\n    JobEndStatusInfo notification \u003d createNotification(conf, status);\n    if (notification !\u003d null) {\n      while (notification.configureForRetry()) {\n        try {\n          int code \u003d httpNotification(notification.getUri());\n          if (code !\u003d 200) {\n            throw new IOException(\"Invalid response status code: \" + code);\n          }\n          else {\n            break;\n          }\n        }\n        catch (IOException ioex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ioex);\n        }\n        catch (Exception ex) {\n          LOG.error(\"Notification error [\" + notification.getUri() + \"]\", ex);\n        }\n        try {\n          Thread.sleep(notification.getRetryInterval());\n        }\n        catch (InterruptedException iex) {\n          LOG.error(\"Notification retry error [\" + notification + \"]\", iex);\n        }\n      }\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobEndNotifier.java"
    }
  }
}