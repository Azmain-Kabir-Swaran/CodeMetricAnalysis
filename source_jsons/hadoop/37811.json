{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMServerUtils.java",
  "functionName": "validateIncreaseDecreaseRequest",
  "functionId": "validateIncreaseDecreaseRequest___rmContext-RMContext__request-UpdateContainerRequest__maximumAllocation-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
  "functionStartLine": 338,
  "functionEndLine": 354,
  "numCommitsSeen": 106,
  "timeTaken": 7258,
  "changeHistory": [
    "fd6be5898ad1a650e3bceacb8169a53520da57e5",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
    "ac16400e1fb85a4186e5bf5bbc9cf204735ae74f",
    "25f9872be63423ada6a18481eaad2888e731fdac",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "7f46636495e23693d588b0915f464fa7afd9102e",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434"
  ],
  "changeHistoryShort": {
    "fd6be5898ad1a650e3bceacb8169a53520da57e5": "Ybodychange",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": "Yparameterchange",
    "ac16400e1fb85a4186e5bf5bbc9cf204735ae74f": "Ybodychange",
    "25f9872be63423ada6a18481eaad2888e731fdac": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "7f46636495e23693d588b0915f464fa7afd9102e": "Ybodychange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fd6be5898ad1a650e3bceacb8169a53520da57e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8468. Enable the use of queue based maximum container allocation limit and implement it in FairScheduler. Contributed by Antal BÃ¡lint Steinbach.\n",
      "commitDate": "29/09/18 2:47 AM",
      "commitName": "fd6be5898ad1a650e3bceacb8169a53520da57e5",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "09/04/18 8:47 AM",
      "commitNameOld": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 172.75,
      "commitsBetweenForRepo": 1867,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n       UpdateContainerRequest request, Resource maximumAllocation) {\n     if (request.getCapability().getMemorySize() \u003c 0\n         || request.getCapability().getMemorySize() \u003e maximumAllocation\n         .getMemorySize()) {\n       return false;\n     }\n     if (request.getCapability().getVirtualCores() \u003c 0\n         || request.getCapability().getVirtualCores() \u003e maximumAllocation\n         .getVirtualCores()) {\n       return false;\n     }\n     ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-    request.setCapability(scheduler.getNormalizedResource(request.getCapability()));\n+    request.setCapability(scheduler\n+        .getNormalizedResource(request.getCapability(), maximumAllocation));\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    request.setCapability(scheduler\n        .getNormalizedResource(request.getCapability(), maximumAllocation));\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {}
    },
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-6216. Unify Container Resizing code paths with Container Updates making it scheduler agnostic. (Arun Suresh via wangda)\n",
      "commitDate": "28/02/17 10:35 AM",
      "commitName": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "15/02/17 1:18 AM",
      "commitNameOld": "b7613e0f406fb2b9bd5b1b3c79658e801f63c587",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 13.39,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n-      UpdateContainerRequest request, Resource maximumAllocation,\n-      boolean increase) {\n+      UpdateContainerRequest request, Resource maximumAllocation) {\n     if (request.getCapability().getMemorySize() \u003c 0\n         || request.getCapability().getMemorySize() \u003e maximumAllocation\n         .getMemorySize()) {\n       return false;\n     }\n     if (request.getCapability().getVirtualCores() \u003c 0\n         || request.getCapability().getVirtualCores() \u003e maximumAllocation\n         .getVirtualCores()) {\n       return false;\n     }\n     ResourceScheduler scheduler \u003d rmContext.getScheduler();\n     request.setCapability(scheduler.getNormalizedResource(request.getCapability()));\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    request.setCapability(scheduler.getNormalizedResource(request.getCapability()));\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {
        "oldValue": "[rmContext-RMContext, request-UpdateContainerRequest, maximumAllocation-Resource, increase-boolean]",
        "newValue": "[rmContext-RMContext, request-UpdateContainerRequest, maximumAllocation-Resource]"
      }
    },
    "ac16400e1fb85a4186e5bf5bbc9cf204735ae74f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6022. Revert changes of AbstractResourceRequest (Contributed by Wangda Tan via Daniel Templeton)\n",
      "commitDate": "07/01/17 8:24 AM",
      "commitName": "ac16400e1fb85a4186e5bf5bbc9cf204735ae74f",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "05/01/17 10:31 AM",
      "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 1.91,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n       UpdateContainerRequest request, Resource maximumAllocation,\n       boolean increase) {\n     if (request.getCapability().getMemorySize() \u003c 0\n         || request.getCapability().getMemorySize() \u003e maximumAllocation\n         .getMemorySize()) {\n       return false;\n     }\n     if (request.getCapability().getVirtualCores() \u003c 0\n         || request.getCapability().getVirtualCores() \u003e maximumAllocation\n         .getVirtualCores()) {\n       return false;\n     }\n     ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-    scheduler.normalizeRequest(request);\n+    request.setCapability(scheduler.getNormalizedResource(request.getCapability()));\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation,\n      boolean increase) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    request.setCapability(scheduler.getNormalizedResource(request.getCapability()));\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {}
    },
    "25f9872be63423ada6a18481eaad2888e731fdac": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5774. MR Job stuck in ACCEPTED status without any progress in Fair Scheduler\nif set yarn.scheduler.minimum-allocation-mb to 0. (Contributed by Yufei Gu via Daniel Templeton)\n",
      "commitDate": "29/11/16 9:40 AM",
      "commitName": "25f9872be63423ada6a18481eaad2888e731fdac",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "23/11/16 4:25 PM",
      "commitNameOld": "1f12867a69544a1642aa986d4f9a8249be495434",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 5.72,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,17 @@\n   private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n       UpdateContainerRequest request, Resource maximumAllocation,\n       boolean increase) {\n     if (request.getCapability().getMemorySize() \u003c 0\n         || request.getCapability().getMemorySize() \u003e maximumAllocation\n         .getMemorySize()) {\n       return false;\n     }\n     if (request.getCapability().getVirtualCores() \u003c 0\n         || request.getCapability().getVirtualCores() \u003e maximumAllocation\n         .getVirtualCores()) {\n       return false;\n     }\n     ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-        scheduler.getMinimumResourceCapability(),\n-        scheduler.getMaximumResourceCapability(),\n-        scheduler.getMinimumResourceCapability());\n-    // Update normalized target resource\n-    request.setCapability(targetResource);\n+    scheduler.normalizeRequest(request);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation,\n      boolean increase) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    scheduler.normalizeRequest(request);\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "18/08/16 7:27 AM",
          "commitNameOld": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 12.35,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,23 @@\n-  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n-      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n-      boolean increase)\n-      throws InvalidResourceRequestException {\n-    if (requests \u003d\u003d null) {\n-      return;\n+  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n+      UpdateContainerRequest request, Resource maximumAllocation,\n+      boolean increase) {\n+    if (request.getCapability().getMemorySize() \u003c 0\n+        || request.getCapability().getMemorySize() \u003e maximumAllocation\n+        .getMemorySize()) {\n+      return false;\n     }\n-    for (ContainerResourceChangeRequest request : requests) {\n-      if (request.getCapability().getMemorySize() \u003c 0\n-          || request.getCapability().getMemorySize() \u003e maximumAllocation\n-              .getMemorySize()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested memory \u003c 0\"\n-            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n-            + request.getCapability().getMemorySize() + \", maxMemory\u003d\"\n-            + maximumAllocation.getMemorySize());\n-      }\n-      if (request.getCapability().getVirtualCores() \u003c 0\n-          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n-              .getVirtualCores()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested virtual cores \u003c 0\"\n-            + \", or requested virtual cores \u003e max configured\"\n-            + \", requestedVirtualCores\u003d\"\n-            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n-            + maximumAllocation.getVirtualCores());\n-      }\n-      ContainerId containerId \u003d request.getContainerId();\n-      ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-      RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n-      if (null \u003d\u003d rmContainer) {\n-        String msg \u003d\n-            \"Failed to get rmContainer for \"\n-                + (increase ? \"increase\" : \"decrease\")\n-                + \" request, with container-id\u003d\" + containerId;\n-        throw new InvalidResourceRequestException(msg);\n-      }\n-      ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-      Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-          scheduler.getMinimumResourceCapability(),\n-          scheduler.getMaximumResourceCapability(),\n-          scheduler.getMinimumResourceCapability());\n-      // Update normalized target resource\n-      request.setCapability(targetResource);\n+    if (request.getCapability().getVirtualCores() \u003c 0\n+        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n+        .getVirtualCores()) {\n+      return false;\n     }\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n+    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n+        scheduler.getMinimumResourceCapability(),\n+        scheduler.getMaximumResourceCapability(),\n+        scheduler.getMinimumResourceCapability());\n+    // Update normalized target resource\n+    request.setCapability(targetResource);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation,\n      boolean increase) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n        scheduler.getMinimumResourceCapability(),\n        scheduler.getMaximumResourceCapability(),\n        scheduler.getMinimumResourceCapability());\n    // Update normalized target resource\n    request.setCapability(targetResource);\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "extendedDetails": {
            "oldValue": "[rmContext-RMContext, requests-List\u003cContainerResourceChangeRequest\u003e, maximumAllocation-Resource, increase-boolean]",
            "newValue": "[rmContext-RMContext, request-UpdateContainerRequest, maximumAllocation-Resource, increase-boolean]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "18/08/16 7:27 AM",
          "commitNameOld": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 12.35,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,23 @@\n-  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n-      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n-      boolean increase)\n-      throws InvalidResourceRequestException {\n-    if (requests \u003d\u003d null) {\n-      return;\n+  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n+      UpdateContainerRequest request, Resource maximumAllocation,\n+      boolean increase) {\n+    if (request.getCapability().getMemorySize() \u003c 0\n+        || request.getCapability().getMemorySize() \u003e maximumAllocation\n+        .getMemorySize()) {\n+      return false;\n     }\n-    for (ContainerResourceChangeRequest request : requests) {\n-      if (request.getCapability().getMemorySize() \u003c 0\n-          || request.getCapability().getMemorySize() \u003e maximumAllocation\n-              .getMemorySize()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested memory \u003c 0\"\n-            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n-            + request.getCapability().getMemorySize() + \", maxMemory\u003d\"\n-            + maximumAllocation.getMemorySize());\n-      }\n-      if (request.getCapability().getVirtualCores() \u003c 0\n-          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n-              .getVirtualCores()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested virtual cores \u003c 0\"\n-            + \", or requested virtual cores \u003e max configured\"\n-            + \", requestedVirtualCores\u003d\"\n-            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n-            + maximumAllocation.getVirtualCores());\n-      }\n-      ContainerId containerId \u003d request.getContainerId();\n-      ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-      RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n-      if (null \u003d\u003d rmContainer) {\n-        String msg \u003d\n-            \"Failed to get rmContainer for \"\n-                + (increase ? \"increase\" : \"decrease\")\n-                + \" request, with container-id\u003d\" + containerId;\n-        throw new InvalidResourceRequestException(msg);\n-      }\n-      ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-      Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-          scheduler.getMinimumResourceCapability(),\n-          scheduler.getMaximumResourceCapability(),\n-          scheduler.getMinimumResourceCapability());\n-      // Update normalized target resource\n-      request.setCapability(targetResource);\n+    if (request.getCapability().getVirtualCores() \u003c 0\n+        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n+        .getVirtualCores()) {\n+      return false;\n     }\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n+    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n+        scheduler.getMinimumResourceCapability(),\n+        scheduler.getMaximumResourceCapability(),\n+        scheduler.getMinimumResourceCapability());\n+    // Update normalized target resource\n+    request.setCapability(targetResource);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation,\n      boolean increase) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n        scheduler.getMinimumResourceCapability(),\n        scheduler.getMaximumResourceCapability(),\n        scheduler.getMinimumResourceCapability());\n    // Update normalized target resource\n    request.setCapability(targetResource);\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "18/08/16 7:27 AM",
          "commitNameOld": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 12.35,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,23 @@\n-  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n-      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n-      boolean increase)\n-      throws InvalidResourceRequestException {\n-    if (requests \u003d\u003d null) {\n-      return;\n+  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n+      UpdateContainerRequest request, Resource maximumAllocation,\n+      boolean increase) {\n+    if (request.getCapability().getMemorySize() \u003c 0\n+        || request.getCapability().getMemorySize() \u003e maximumAllocation\n+        .getMemorySize()) {\n+      return false;\n     }\n-    for (ContainerResourceChangeRequest request : requests) {\n-      if (request.getCapability().getMemorySize() \u003c 0\n-          || request.getCapability().getMemorySize() \u003e maximumAllocation\n-              .getMemorySize()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested memory \u003c 0\"\n-            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n-            + request.getCapability().getMemorySize() + \", maxMemory\u003d\"\n-            + maximumAllocation.getMemorySize());\n-      }\n-      if (request.getCapability().getVirtualCores() \u003c 0\n-          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n-              .getVirtualCores()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested virtual cores \u003c 0\"\n-            + \", or requested virtual cores \u003e max configured\"\n-            + \", requestedVirtualCores\u003d\"\n-            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n-            + maximumAllocation.getVirtualCores());\n-      }\n-      ContainerId containerId \u003d request.getContainerId();\n-      ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-      RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n-      if (null \u003d\u003d rmContainer) {\n-        String msg \u003d\n-            \"Failed to get rmContainer for \"\n-                + (increase ? \"increase\" : \"decrease\")\n-                + \" request, with container-id\u003d\" + containerId;\n-        throw new InvalidResourceRequestException(msg);\n-      }\n-      ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-      Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-          scheduler.getMinimumResourceCapability(),\n-          scheduler.getMaximumResourceCapability(),\n-          scheduler.getMinimumResourceCapability());\n-      // Update normalized target resource\n-      request.setCapability(targetResource);\n+    if (request.getCapability().getVirtualCores() \u003c 0\n+        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n+        .getVirtualCores()) {\n+      return false;\n     }\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n+    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n+        scheduler.getMinimumResourceCapability(),\n+        scheduler.getMaximumResourceCapability(),\n+        scheduler.getMinimumResourceCapability());\n+    // Update normalized target resource\n+    request.setCapability(targetResource);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation,\n      boolean increase) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n        scheduler.getMinimumResourceCapability(),\n        scheduler.getMaximumResourceCapability(),\n        scheduler.getMinimumResourceCapability());\n    // Update normalized target resource\n    request.setCapability(targetResource);\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "extendedDetails": {
            "oldValue": "[InvalidResourceRequestException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "18/08/16 7:27 AM",
          "commitNameOld": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 12.35,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,23 @@\n-  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n-      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n-      boolean increase)\n-      throws InvalidResourceRequestException {\n-    if (requests \u003d\u003d null) {\n-      return;\n+  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n+      UpdateContainerRequest request, Resource maximumAllocation,\n+      boolean increase) {\n+    if (request.getCapability().getMemorySize() \u003c 0\n+        || request.getCapability().getMemorySize() \u003e maximumAllocation\n+        .getMemorySize()) {\n+      return false;\n     }\n-    for (ContainerResourceChangeRequest request : requests) {\n-      if (request.getCapability().getMemorySize() \u003c 0\n-          || request.getCapability().getMemorySize() \u003e maximumAllocation\n-              .getMemorySize()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested memory \u003c 0\"\n-            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n-            + request.getCapability().getMemorySize() + \", maxMemory\u003d\"\n-            + maximumAllocation.getMemorySize());\n-      }\n-      if (request.getCapability().getVirtualCores() \u003c 0\n-          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n-              .getVirtualCores()) {\n-        throw new InvalidResourceRequestException(\"Invalid \"\n-            + (increase ? \"increase\" : \"decrease\") + \" request\"\n-            + \", requested virtual cores \u003c 0\"\n-            + \", or requested virtual cores \u003e max configured\"\n-            + \", requestedVirtualCores\u003d\"\n-            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n-            + maximumAllocation.getVirtualCores());\n-      }\n-      ContainerId containerId \u003d request.getContainerId();\n-      ResourceScheduler scheduler \u003d rmContext.getScheduler();\n-      RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n-      if (null \u003d\u003d rmContainer) {\n-        String msg \u003d\n-            \"Failed to get rmContainer for \"\n-                + (increase ? \"increase\" : \"decrease\")\n-                + \" request, with container-id\u003d\" + containerId;\n-        throw new InvalidResourceRequestException(msg);\n-      }\n-      ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n-      Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n-          scheduler.getMinimumResourceCapability(),\n-          scheduler.getMaximumResourceCapability(),\n-          scheduler.getMinimumResourceCapability());\n-      // Update normalized target resource\n-      request.setCapability(targetResource);\n+    if (request.getCapability().getVirtualCores() \u003c 0\n+        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n+        .getVirtualCores()) {\n+      return false;\n     }\n+    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n+    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n+        scheduler.getMinimumResourceCapability(),\n+        scheduler.getMaximumResourceCapability(),\n+        scheduler.getMinimumResourceCapability());\n+    // Update normalized target resource\n+    request.setCapability(targetResource);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean validateIncreaseDecreaseRequest(RMContext rmContext,\n      UpdateContainerRequest request, Resource maximumAllocation,\n      boolean increase) {\n    if (request.getCapability().getMemorySize() \u003c 0\n        || request.getCapability().getMemorySize() \u003e maximumAllocation\n        .getMemorySize()) {\n      return false;\n    }\n    if (request.getCapability().getVirtualCores() \u003c 0\n        || request.getCapability().getVirtualCores() \u003e maximumAllocation\n        .getVirtualCores()) {\n      return false;\n    }\n    ResourceScheduler scheduler \u003d rmContext.getScheduler();\n    ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n    Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n        scheduler.getMinimumResourceCapability(),\n        scheduler.getMaximumResourceCapability(),\n        scheduler.getMinimumResourceCapability());\n    // Update normalized target resource\n    request.setCapability(targetResource);\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "05/05/16 7:07 AM",
      "commitNameOld": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 24.07,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n       List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n       boolean increase)\n       throws InvalidResourceRequestException {\n     if (requests \u003d\u003d null) {\n       return;\n     }\n     for (ContainerResourceChangeRequest request : requests) {\n-      if (request.getCapability().getMemory() \u003c 0\n-          || request.getCapability().getMemory() \u003e maximumAllocation\n-              .getMemory()) {\n+      if (request.getCapability().getMemorySize() \u003c 0\n+          || request.getCapability().getMemorySize() \u003e maximumAllocation\n+              .getMemorySize()) {\n         throw new InvalidResourceRequestException(\"Invalid \"\n             + (increase ? \"increase\" : \"decrease\") + \" request\"\n             + \", requested memory \u003c 0\"\n             + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n-            + request.getCapability().getMemory() + \", maxMemory\u003d\"\n-            + maximumAllocation.getMemory());\n+            + request.getCapability().getMemorySize() + \", maxMemory\u003d\"\n+            + maximumAllocation.getMemorySize());\n       }\n       if (request.getCapability().getVirtualCores() \u003c 0\n           || request.getCapability().getVirtualCores() \u003e maximumAllocation\n               .getVirtualCores()) {\n         throw new InvalidResourceRequestException(\"Invalid \"\n             + (increase ? \"increase\" : \"decrease\") + \" request\"\n             + \", requested virtual cores \u003c 0\"\n             + \", or requested virtual cores \u003e max configured\"\n             + \", requestedVirtualCores\u003d\"\n             + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n             + maximumAllocation.getVirtualCores());\n       }\n       ContainerId containerId \u003d request.getContainerId();\n       ResourceScheduler scheduler \u003d rmContext.getScheduler();\n       RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n       if (null \u003d\u003d rmContainer) {\n         String msg \u003d\n             \"Failed to get rmContainer for \"\n                 + (increase ? \"increase\" : \"decrease\")\n                 + \" request, with container-id\u003d\" + containerId;\n         throw new InvalidResourceRequestException(msg);\n       }\n       ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n       Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n           scheduler.getMinimumResourceCapability(),\n           scheduler.getMaximumResourceCapability(),\n           scheduler.getMinimumResourceCapability());\n       // Update normalized target resource\n       request.setCapability(targetResource);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n      boolean increase)\n      throws InvalidResourceRequestException {\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    for (ContainerResourceChangeRequest request : requests) {\n      if (request.getCapability().getMemorySize() \u003c 0\n          || request.getCapability().getMemorySize() \u003e maximumAllocation\n              .getMemorySize()) {\n        throw new InvalidResourceRequestException(\"Invalid \"\n            + (increase ? \"increase\" : \"decrease\") + \" request\"\n            + \", requested memory \u003c 0\"\n            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n            + request.getCapability().getMemorySize() + \", maxMemory\u003d\"\n            + maximumAllocation.getMemorySize());\n      }\n      if (request.getCapability().getVirtualCores() \u003c 0\n          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n              .getVirtualCores()) {\n        throw new InvalidResourceRequestException(\"Invalid \"\n            + (increase ? \"increase\" : \"decrease\") + \" request\"\n            + \", requested virtual cores \u003c 0\"\n            + \", or requested virtual cores \u003e max configured\"\n            + \", requestedVirtualCores\u003d\"\n            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n            + maximumAllocation.getVirtualCores());\n      }\n      ContainerId containerId \u003d request.getContainerId();\n      ResourceScheduler scheduler \u003d rmContext.getScheduler();\n      RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n      if (null \u003d\u003d rmContainer) {\n        String msg \u003d\n            \"Failed to get rmContainer for \"\n                + (increase ? \"increase\" : \"decrease\")\n                + \" request, with container-id\u003d\" + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n      ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n      Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n          scheduler.getMinimumResourceCapability(),\n          scheduler.getMaximumResourceCapability(),\n          scheduler.getMinimumResourceCapability());\n      // Update normalized target resource\n      request.setCapability(targetResource);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {}
    },
    "7f46636495e23693d588b0915f464fa7afd9102e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4519. Potential deadlock of CapacityScheduler between decrease container and assign containers. Contributed by Meng Ding\n",
      "commitDate": "28/01/16 2:51 PM",
      "commitName": "7f46636495e23693d588b0915f464fa7afd9102e",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 127.1,
      "commitsBetweenForRepo": 880,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,48 @@\n   private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n       List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n       boolean increase)\n       throws InvalidResourceRequestException {\n     if (requests \u003d\u003d null) {\n       return;\n     }\n     for (ContainerResourceChangeRequest request : requests) {\n       if (request.getCapability().getMemory() \u003c 0\n           || request.getCapability().getMemory() \u003e maximumAllocation\n               .getMemory()) {\n         throw new InvalidResourceRequestException(\"Invalid \"\n             + (increase ? \"increase\" : \"decrease\") + \" request\"\n             + \", requested memory \u003c 0\"\n             + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n             + request.getCapability().getMemory() + \", maxMemory\u003d\"\n             + maximumAllocation.getMemory());\n       }\n       if (request.getCapability().getVirtualCores() \u003c 0\n           || request.getCapability().getVirtualCores() \u003e maximumAllocation\n               .getVirtualCores()) {\n         throw new InvalidResourceRequestException(\"Invalid \"\n             + (increase ? \"increase\" : \"decrease\") + \" request\"\n             + \", requested virtual cores \u003c 0\"\n             + \", or requested virtual cores \u003e max configured\"\n             + \", requestedVirtualCores\u003d\"\n             + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n             + maximumAllocation.getVirtualCores());\n       }\n-      \n-      checkAndNormalizeContainerChangeRequest(rmContext, request, increase);\n+      ContainerId containerId \u003d request.getContainerId();\n+      ResourceScheduler scheduler \u003d rmContext.getScheduler();\n+      RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n+      if (null \u003d\u003d rmContainer) {\n+        String msg \u003d\n+            \"Failed to get rmContainer for \"\n+                + (increase ? \"increase\" : \"decrease\")\n+                + \" request, with container-id\u003d\" + containerId;\n+        throw new InvalidResourceRequestException(msg);\n+      }\n+      ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n+      Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n+          scheduler.getMinimumResourceCapability(),\n+          scheduler.getMaximumResourceCapability(),\n+          scheduler.getMinimumResourceCapability());\n+      // Update normalized target resource\n+      request.setCapability(targetResource);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n      boolean increase)\n      throws InvalidResourceRequestException {\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    for (ContainerResourceChangeRequest request : requests) {\n      if (request.getCapability().getMemory() \u003c 0\n          || request.getCapability().getMemory() \u003e maximumAllocation\n              .getMemory()) {\n        throw new InvalidResourceRequestException(\"Invalid \"\n            + (increase ? \"increase\" : \"decrease\") + \" request\"\n            + \", requested memory \u003c 0\"\n            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n            + request.getCapability().getMemory() + \", maxMemory\u003d\"\n            + maximumAllocation.getMemory());\n      }\n      if (request.getCapability().getVirtualCores() \u003c 0\n          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n              .getVirtualCores()) {\n        throw new InvalidResourceRequestException(\"Invalid \"\n            + (increase ? \"increase\" : \"decrease\") + \" request\"\n            + \", requested virtual cores \u003c 0\"\n            + \", or requested virtual cores \u003e max configured\"\n            + \", requestedVirtualCores\u003d\"\n            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n            + maximumAllocation.getVirtualCores());\n      }\n      ContainerId containerId \u003d request.getContainerId();\n      ResourceScheduler scheduler \u003d rmContext.getScheduler();\n      RMContainer rmContainer \u003d scheduler.getRMContainer(containerId);\n      if (null \u003d\u003d rmContainer) {\n        String msg \u003d\n            \"Failed to get rmContainer for \"\n                + (increase ? \"increase\" : \"decrease\")\n                + \" request, with container-id\u003d\" + containerId;\n        throw new InvalidResourceRequestException(msg);\n      }\n      ResourceCalculator rc \u003d scheduler.getResourceCalculator();\n      Resource targetResource \u003d Resources.normalize(rc, request.getCapability(),\n          scheduler.getMinimumResourceCapability(),\n          scheduler.getMaximumResourceCapability(),\n          scheduler.getMinimumResourceCapability());\n      // Update normalized target resource\n      request.setCapability(targetResource);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java",
      "extendedDetails": {}
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,33 @@\n+  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n+      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n+      boolean increase)\n+      throws InvalidResourceRequestException {\n+    if (requests \u003d\u003d null) {\n+      return;\n+    }\n+    for (ContainerResourceChangeRequest request : requests) {\n+      if (request.getCapability().getMemory() \u003c 0\n+          || request.getCapability().getMemory() \u003e maximumAllocation\n+              .getMemory()) {\n+        throw new InvalidResourceRequestException(\"Invalid \"\n+            + (increase ? \"increase\" : \"decrease\") + \" request\"\n+            + \", requested memory \u003c 0\"\n+            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n+            + request.getCapability().getMemory() + \", maxMemory\u003d\"\n+            + maximumAllocation.getMemory());\n+      }\n+      if (request.getCapability().getVirtualCores() \u003c 0\n+          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n+              .getVirtualCores()) {\n+        throw new InvalidResourceRequestException(\"Invalid \"\n+            + (increase ? \"increase\" : \"decrease\") + \" request\"\n+            + \", requested virtual cores \u003c 0\"\n+            + \", or requested virtual cores \u003e max configured\"\n+            + \", requestedVirtualCores\u003d\"\n+            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n+            + maximumAllocation.getVirtualCores());\n+      }\n+      \n+      checkAndNormalizeContainerChangeRequest(rmContext, request, increase);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateIncreaseDecreaseRequest(RMContext rmContext,\n      List\u003cContainerResourceChangeRequest\u003e requests, Resource maximumAllocation,\n      boolean increase)\n      throws InvalidResourceRequestException {\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    for (ContainerResourceChangeRequest request : requests) {\n      if (request.getCapability().getMemory() \u003c 0\n          || request.getCapability().getMemory() \u003e maximumAllocation\n              .getMemory()) {\n        throw new InvalidResourceRequestException(\"Invalid \"\n            + (increase ? \"increase\" : \"decrease\") + \" request\"\n            + \", requested memory \u003c 0\"\n            + \", or requested memory \u003e max configured\" + \", requestedMemory\u003d\"\n            + request.getCapability().getMemory() + \", maxMemory\u003d\"\n            + maximumAllocation.getMemory());\n      }\n      if (request.getCapability().getVirtualCores() \u003c 0\n          || request.getCapability().getVirtualCores() \u003e maximumAllocation\n              .getVirtualCores()) {\n        throw new InvalidResourceRequestException(\"Invalid \"\n            + (increase ? \"increase\" : \"decrease\") + \" request\"\n            + \", requested virtual cores \u003c 0\"\n            + \", or requested virtual cores \u003e max configured\"\n            + \", requestedVirtualCores\u003d\"\n            + request.getCapability().getVirtualCores() + \", maxVirtualCores\u003d\"\n            + maximumAllocation.getVirtualCores());\n      }\n      \n      checkAndNormalizeContainerChangeRequest(rmContext, request, increase);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMServerUtils.java"
    }
  }
}