{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CgroupsLCEResourcesHandler.java",
  "functionName": "setupLimits",
  "functionId": "setupLimits___containerId-ContainerId__containerResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
  "functionStartLine": 322,
  "functionEndLine": 344,
  "numCommitsSeen": 22,
  "timeTaken": 1298,
  "changeHistory": [
    "500a1d9c76ec612b4e737888f4be79951c11591d",
    "9f6891d9ef7064d121305ca783eb62586c8aa018",
    "80eb92aff02cc9f899a6897e9cbc2bc69bd56136",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea"
  ],
  "changeHistoryShort": {
    "500a1d9c76ec612b4e737888f4be79951c11591d": "Ybodychange",
    "9f6891d9ef7064d121305ca783eb62586c8aa018": "Ybodychange",
    "80eb92aff02cc9f899a6897e9cbc2bc69bd56136": "Ybodychange",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "500a1d9c76ec612b4e737888f4be79951c11591d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-160. Enhanced NodeManager to automatically obtain cpu/memory values from underlying OS when configured to do so. Contributed by Varun Vasudev.\n",
      "commitDate": "26/05/15 11:38 AM",
      "commitName": "500a1d9c76ec612b4e737888f4be79951c11591d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "30/04/15 9:41 PM",
      "commitNameOld": "1b3b9e5c31c38388c1ce4208c65e8dd5f956da82",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 25.58,
      "commitsBetweenForRepo": 279,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,23 @@\n   private void setupLimits(ContainerId containerId,\n                            Resource containerResource) throws IOException {\n     String containerName \u003d containerId.toString();\n \n     if (isCpuWeightEnabled()) {\n       int containerVCores \u003d containerResource.getVirtualCores();\n       createCgroup(CONTROLLER_CPU, containerName);\n       int cpuShares \u003d CPU_DEFAULT_WEIGHT * containerVCores;\n       updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n           String.valueOf(cpuShares));\n       if (strictResourceUsageMode) {\n-        int nodeVCores \u003d\n-            conf.getInt(YarnConfiguration.NM_VCORES,\n-              YarnConfiguration.DEFAULT_NM_VCORES);\n         if (nodeVCores !\u003d containerVCores) {\n           float containerCPU \u003d\n               (containerVCores * yarnProcessors) / (float) nodeVCores;\n           int[] limits \u003d getOverallLimits(containerCPU);\n           updateCgroup(CONTROLLER_CPU, containerName, CPU_PERIOD_US,\n             String.valueOf(limits[0]));\n           updateCgroup(CONTROLLER_CPU, containerName, CPU_QUOTA_US,\n             String.valueOf(limits[1]));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupLimits(ContainerId containerId,\n                           Resource containerResource) throws IOException {\n    String containerName \u003d containerId.toString();\n\n    if (isCpuWeightEnabled()) {\n      int containerVCores \u003d containerResource.getVirtualCores();\n      createCgroup(CONTROLLER_CPU, containerName);\n      int cpuShares \u003d CPU_DEFAULT_WEIGHT * containerVCores;\n      updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n          String.valueOf(cpuShares));\n      if (strictResourceUsageMode) {\n        if (nodeVCores !\u003d containerVCores) {\n          float containerCPU \u003d\n              (containerVCores * yarnProcessors) / (float) nodeVCores;\n          int[] limits \u003d getOverallLimits(containerCPU);\n          updateCgroup(CONTROLLER_CPU, containerName, CPU_PERIOD_US,\n            String.valueOf(limits[0]));\n          updateCgroup(CONTROLLER_CPU, containerName, CPU_QUOTA_US,\n            String.valueOf(limits[1]));\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "9f6891d9ef7064d121305ca783eb62586c8aa018": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2531. Added a configuration for admins to be able to override app-configs and enforce/not-enforce strict control of per-container cpu usage. Contributed by Varun Vasudev.\n",
      "commitDate": "16/09/14 10:14 AM",
      "commitName": "9f6891d9ef7064d121305ca783eb62586c8aa018",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/09/14 7:22 PM",
      "commitNameOld": "4be95175cdb58ff12a27ab443d609d3b46da7bfa",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.62,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,26 @@\n   private void setupLimits(ContainerId containerId,\n                            Resource containerResource) throws IOException {\n     String containerName \u003d containerId.toString();\n \n     if (isCpuWeightEnabled()) {\n+      int containerVCores \u003d containerResource.getVirtualCores();\n       createCgroup(CONTROLLER_CPU, containerName);\n-      int cpuShares \u003d CPU_DEFAULT_WEIGHT * containerResource.getVirtualCores();\n+      int cpuShares \u003d CPU_DEFAULT_WEIGHT * containerVCores;\n       updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n           String.valueOf(cpuShares));\n+      if (strictResourceUsageMode) {\n+        int nodeVCores \u003d\n+            conf.getInt(YarnConfiguration.NM_VCORES,\n+              YarnConfiguration.DEFAULT_NM_VCORES);\n+        if (nodeVCores !\u003d containerVCores) {\n+          float containerCPU \u003d\n+              (containerVCores * yarnProcessors) / (float) nodeVCores;\n+          int[] limits \u003d getOverallLimits(containerCPU);\n+          updateCgroup(CONTROLLER_CPU, containerName, CPU_PERIOD_US,\n+            String.valueOf(limits[0]));\n+          updateCgroup(CONTROLLER_CPU, containerName, CPU_QUOTA_US,\n+            String.valueOf(limits[1]));\n+        }\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupLimits(ContainerId containerId,\n                           Resource containerResource) throws IOException {\n    String containerName \u003d containerId.toString();\n\n    if (isCpuWeightEnabled()) {\n      int containerVCores \u003d containerResource.getVirtualCores();\n      createCgroup(CONTROLLER_CPU, containerName);\n      int cpuShares \u003d CPU_DEFAULT_WEIGHT * containerVCores;\n      updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n          String.valueOf(cpuShares));\n      if (strictResourceUsageMode) {\n        int nodeVCores \u003d\n            conf.getInt(YarnConfiguration.NM_VCORES,\n              YarnConfiguration.DEFAULT_NM_VCORES);\n        if (nodeVCores !\u003d containerVCores) {\n          float containerCPU \u003d\n              (containerVCores * yarnProcessors) / (float) nodeVCores;\n          int[] limits \u003d getOverallLimits(containerCPU);\n          updateCgroup(CONTROLLER_CPU, containerName, CPU_PERIOD_US,\n            String.valueOf(limits[0]));\n          updateCgroup(CONTROLLER_CPU, containerName, CPU_QUOTA_US,\n            String.valueOf(limits[1]));\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "80eb92aff02cc9f899a6897e9cbc2bc69bd56136": {
      "type": "Ybodychange",
      "commitMessage": "YARN-600. Hook up cgroups CPU settings to the number of virtual cores allocated. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492365 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/13 11:57 AM",
      "commitName": "80eb92aff02cc9f899a6897e9cbc2bc69bd56136",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "29/04/13 4:09 PM",
      "commitNameOld": "27d4592771ddbeb793bf148c0efb951e640b7b19",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 43.83,
      "commitsBetweenForRepo": 261,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   private void setupLimits(ContainerId containerId,\n                            Resource containerResource) throws IOException {\n     String containerName \u003d containerId.toString();\n \n     if (isCpuWeightEnabled()) {\n       createCgroup(CONTROLLER_CPU, containerName);\n+      int cpuShares \u003d CPU_DEFAULT_WEIGHT * containerResource.getVirtualCores();\n       updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n-          String.valueOf(CPU_DEFAULT_WEIGHT));\n+          String.valueOf(cpuShares));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupLimits(ContainerId containerId,\n                           Resource containerResource) throws IOException {\n    String containerName \u003d containerId.toString();\n\n    if (isCpuWeightEnabled()) {\n      createCgroup(CONTROLLER_CPU, containerName);\n      int cpuShares \u003d CPU_DEFAULT_WEIGHT * containerResource.getVirtualCores();\n      updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n          String.valueOf(cpuShares));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3. Add support for CPU isolation/monitoring of containers. (adferguson via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 2:58 PM",
      "commitName": "5032a694ed250f65ade8c2b62c97b89ab45f53ea",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,10 @@\n+  private void setupLimits(ContainerId containerId,\n+                           Resource containerResource) throws IOException {\n+    String containerName \u003d containerId.toString();\n+    \n+    if (isCpuWeightEnabled()) {\n+      createCgroup(CONTROLLER_CPU, containerName);\n+      updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n+          String.valueOf(CPU_DEFAULT_WEIGHT));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupLimits(ContainerId containerId,\n                           Resource containerResource) throws IOException {\n    String containerName \u003d containerId.toString();\n    \n    if (isCpuWeightEnabled()) {\n      createCgroup(CONTROLLER_CPU, containerName);\n      updateCgroup(CONTROLLER_CPU, containerName, \"shares\",\n          String.valueOf(CPU_DEFAULT_WEIGHT));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java"
    }
  }
}