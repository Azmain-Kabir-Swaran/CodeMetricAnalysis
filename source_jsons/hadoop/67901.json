{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistCpSync.java",
  "functionName": "getRenameAndDeleteDiffsRdiff",
  "functionId": "getRenameAndDeleteDiffsRdiff___targetDir-Path",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
  "functionStartLine": 377,
  "functionEndLine": 417,
  "numCommitsSeen": 33,
  "timeTaken": 3656,
  "changeHistory": [
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926"
  ],
  "changeHistoryShort": {
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": "Ymultichange(Yrename,Ybodychange)",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": "Ymultichange(Yrename,Ybodychange)",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": "Ymultichange(Yrename,Ybodychange)",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/10/16 5:37 PM",
      "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
          "commitDate": "19/10/16 5:37 PM",
          "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "17/10/16 10:47 PM",
          "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.78,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,41 @@\n-  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n-    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n-    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n-          diff.getType()));\n-    }\n+  private DiffInfo[] getRenameAndDeleteDiffsRdiff(Path targetDir) {\n+    List\u003cDiffInfo\u003e renameDiffsList \u003d\n+        diffMap.get(SnapshotDiffReport.DiffType.RENAME);\n \n+    // Prepare a renameDiffArray for translating deleted items below.\n+    // Do a reversion here due to HDFS-10263.\n+    List\u003cDiffInfo\u003e renameDiffsListReversed \u003d\n+        new ArrayList\u003cDiffInfo\u003e(renameDiffsList.size());\n+    for (DiffInfo diff : renameDiffsList) {\n+      renameDiffsListReversed.add(new DiffInfo(diff.getTarget(),\n+          diff.getSource(), diff.getType()));\n+    }\n+    DiffInfo[] renameDiffArray \u003d\n+        renameDiffsListReversed.toArray(new DiffInfo[renameDiffsList.size()]);\n+\n+    Arrays.sort(renameDiffArray, DiffInfo.sourceComparator);\n+\n+    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n+    // Traverse DELETE list, which we need to delete them in sync process.\n+    // Use the renameDiffArray prepared to translate the path.\n+    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n+      DiffInfo renameItem \u003d getRenameItem(diff, renameDiffArray);\n+      Path source;\n+      if (renameItem !\u003d null) {\n+        source \u003d new Path(targetDir,\n+            translateRenamedPath(diff.getSource(), renameItem));\n+      } else {\n+        source \u003d new Path(targetDir, diff.getSource());\n+      }\n+      renameAndDeleteDiff.add(new DiffInfo(source, null,\n+          SnapshotDiffReport.DiffType.DELETE));\n+    }\n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      Path target \u003d new Path(targetDir, diff.target);\n+      // swap target and source here for Rdiff\n+      Path source \u003d new Path(targetDir, diff.getSource());\n+      Path target \u003d new Path(targetDir, diff.getTarget());\n       renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n     }\n-\n     return renameAndDeleteDiff.toArray(\n         new DiffInfo[renameAndDeleteDiff.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DiffInfo[] getRenameAndDeleteDiffsRdiff(Path targetDir) {\n    List\u003cDiffInfo\u003e renameDiffsList \u003d\n        diffMap.get(SnapshotDiffReport.DiffType.RENAME);\n\n    // Prepare a renameDiffArray for translating deleted items below.\n    // Do a reversion here due to HDFS-10263.\n    List\u003cDiffInfo\u003e renameDiffsListReversed \u003d\n        new ArrayList\u003cDiffInfo\u003e(renameDiffsList.size());\n    for (DiffInfo diff : renameDiffsList) {\n      renameDiffsListReversed.add(new DiffInfo(diff.getTarget(),\n          diff.getSource(), diff.getType()));\n    }\n    DiffInfo[] renameDiffArray \u003d\n        renameDiffsListReversed.toArray(new DiffInfo[renameDiffsList.size()]);\n\n    Arrays.sort(renameDiffArray, DiffInfo.sourceComparator);\n\n    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n    // Traverse DELETE list, which we need to delete them in sync process.\n    // Use the renameDiffArray prepared to translate the path.\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n      DiffInfo renameItem \u003d getRenameItem(diff, renameDiffArray);\n      Path source;\n      if (renameItem !\u003d null) {\n        source \u003d new Path(targetDir,\n            translateRenamedPath(diff.getSource(), renameItem));\n      } else {\n        source \u003d new Path(targetDir, diff.getSource());\n      }\n      renameAndDeleteDiff.add(new DiffInfo(source, null,\n          SnapshotDiffReport.DiffType.DELETE));\n    }\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n      // swap target and source here for Rdiff\n      Path source \u003d new Path(targetDir, diff.getSource());\n      Path target \u003d new Path(targetDir, diff.getTarget());\n      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n    }\n    return renameAndDeleteDiff.toArray(\n        new DiffInfo[renameAndDeleteDiff.size()]);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
          "extendedDetails": {
            "oldValue": "getRenameAndDeleteDiffs",
            "newValue": "getRenameAndDeleteDiffsRdiff"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
          "commitDate": "19/10/16 5:37 PM",
          "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "17/10/16 10:47 PM",
          "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.78,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,41 @@\n-  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n-    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n-    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n-          diff.getType()));\n-    }\n+  private DiffInfo[] getRenameAndDeleteDiffsRdiff(Path targetDir) {\n+    List\u003cDiffInfo\u003e renameDiffsList \u003d\n+        diffMap.get(SnapshotDiffReport.DiffType.RENAME);\n \n+    // Prepare a renameDiffArray for translating deleted items below.\n+    // Do a reversion here due to HDFS-10263.\n+    List\u003cDiffInfo\u003e renameDiffsListReversed \u003d\n+        new ArrayList\u003cDiffInfo\u003e(renameDiffsList.size());\n+    for (DiffInfo diff : renameDiffsList) {\n+      renameDiffsListReversed.add(new DiffInfo(diff.getTarget(),\n+          diff.getSource(), diff.getType()));\n+    }\n+    DiffInfo[] renameDiffArray \u003d\n+        renameDiffsListReversed.toArray(new DiffInfo[renameDiffsList.size()]);\n+\n+    Arrays.sort(renameDiffArray, DiffInfo.sourceComparator);\n+\n+    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n+    // Traverse DELETE list, which we need to delete them in sync process.\n+    // Use the renameDiffArray prepared to translate the path.\n+    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n+      DiffInfo renameItem \u003d getRenameItem(diff, renameDiffArray);\n+      Path source;\n+      if (renameItem !\u003d null) {\n+        source \u003d new Path(targetDir,\n+            translateRenamedPath(diff.getSource(), renameItem));\n+      } else {\n+        source \u003d new Path(targetDir, diff.getSource());\n+      }\n+      renameAndDeleteDiff.add(new DiffInfo(source, null,\n+          SnapshotDiffReport.DiffType.DELETE));\n+    }\n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      Path target \u003d new Path(targetDir, diff.target);\n+      // swap target and source here for Rdiff\n+      Path source \u003d new Path(targetDir, diff.getSource());\n+      Path target \u003d new Path(targetDir, diff.getTarget());\n       renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n     }\n-\n     return renameAndDeleteDiff.toArray(\n         new DiffInfo[renameAndDeleteDiff.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DiffInfo[] getRenameAndDeleteDiffsRdiff(Path targetDir) {\n    List\u003cDiffInfo\u003e renameDiffsList \u003d\n        diffMap.get(SnapshotDiffReport.DiffType.RENAME);\n\n    // Prepare a renameDiffArray for translating deleted items below.\n    // Do a reversion here due to HDFS-10263.\n    List\u003cDiffInfo\u003e renameDiffsListReversed \u003d\n        new ArrayList\u003cDiffInfo\u003e(renameDiffsList.size());\n    for (DiffInfo diff : renameDiffsList) {\n      renameDiffsListReversed.add(new DiffInfo(diff.getTarget(),\n          diff.getSource(), diff.getType()));\n    }\n    DiffInfo[] renameDiffArray \u003d\n        renameDiffsListReversed.toArray(new DiffInfo[renameDiffsList.size()]);\n\n    Arrays.sort(renameDiffArray, DiffInfo.sourceComparator);\n\n    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n    // Traverse DELETE list, which we need to delete them in sync process.\n    // Use the renameDiffArray prepared to translate the path.\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n      DiffInfo renameItem \u003d getRenameItem(diff, renameDiffArray);\n      Path source;\n      if (renameItem !\u003d null) {\n        source \u003d new Path(targetDir,\n            translateRenamedPath(diff.getSource(), renameItem));\n      } else {\n        source \u003d new Path(targetDir, diff.getSource());\n      }\n      renameAndDeleteDiff.add(new DiffInfo(source, null,\n          SnapshotDiffReport.DiffType.DELETE));\n    }\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n      // swap target and source here for Rdiff\n      Path source \u003d new Path(targetDir, diff.getSource());\n      Path target \u003d new Path(targetDir, diff.getTarget());\n      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n    }\n    return renameAndDeleteDiff.toArray(\n        new DiffInfo[renameAndDeleteDiff.size()]);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
          "extendedDetails": {}
        }
      ]
    },
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
      "commitDate": "17/10/16 10:47 PM",
      "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
          "commitDate": "17/10/16 10:47 PM",
          "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "17/10/16 11:04 AM",
          "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 0.49,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  private DiffInfo[] getRenameAndDeleteDiffsFdiff(Path targetDir) {\n+  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n     List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n-      Path source \u003d new Path(targetDir, diff.getSource());\n-      renameAndDeleteDiff.add(new DiffInfo(source, diff.getTarget(),\n+      Path source \u003d new Path(targetDir, diff.source);\n+      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n           diff.getType()));\n     }\n \n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n-      Path source \u003d new Path(targetDir, diff.getSource());\n-      Path target \u003d new Path(targetDir, diff.getTarget());\n+      Path source \u003d new Path(targetDir, diff.source);\n+      Path target \u003d new Path(targetDir, diff.target);\n       renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n     }\n \n     return renameAndDeleteDiff.toArray(\n         new DiffInfo[renameAndDeleteDiff.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n      Path source \u003d new Path(targetDir, diff.source);\n      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n          diff.getType()));\n    }\n\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n      Path source \u003d new Path(targetDir, diff.source);\n      Path target \u003d new Path(targetDir, diff.target);\n      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n    }\n\n    return renameAndDeleteDiff.toArray(\n        new DiffInfo[renameAndDeleteDiff.size()]);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
          "extendedDetails": {
            "oldValue": "getRenameAndDeleteDiffsFdiff",
            "newValue": "getRenameAndDeleteDiffs"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
          "commitDate": "17/10/16 10:47 PM",
          "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "17/10/16 11:04 AM",
          "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 0.49,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  private DiffInfo[] getRenameAndDeleteDiffsFdiff(Path targetDir) {\n+  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n     List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n-      Path source \u003d new Path(targetDir, diff.getSource());\n-      renameAndDeleteDiff.add(new DiffInfo(source, diff.getTarget(),\n+      Path source \u003d new Path(targetDir, diff.source);\n+      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n           diff.getType()));\n     }\n \n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n-      Path source \u003d new Path(targetDir, diff.getSource());\n-      Path target \u003d new Path(targetDir, diff.getTarget());\n+      Path source \u003d new Path(targetDir, diff.source);\n+      Path target \u003d new Path(targetDir, diff.target);\n       renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n     }\n \n     return renameAndDeleteDiff.toArray(\n         new DiffInfo[renameAndDeleteDiff.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n      Path source \u003d new Path(targetDir, diff.source);\n      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n          diff.getType()));\n    }\n\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n      Path source \u003d new Path(targetDir, diff.source);\n      Path target \u003d new Path(targetDir, diff.target);\n      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n    }\n\n    return renameAndDeleteDiff.toArray(\n        new DiffInfo[renameAndDeleteDiff.size()]);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
          "extendedDetails": {}
        }
      ]
    },
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/10/16 11:04 AM",
      "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
          "commitDate": "17/10/16 11:04 AM",
          "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "26/04/16 4:08 PM",
          "commitNameOld": "959a28dd1216dfac78d05b438828e8503108d963",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 173.79,
          "commitsBetweenForRepo": 1276,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n+  private DiffInfo[] getRenameAndDeleteDiffsFdiff(Path targetDir) {\n     List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n+      Path source \u003d new Path(targetDir, diff.getSource());\n+      renameAndDeleteDiff.add(new DiffInfo(source, diff.getTarget(),\n           diff.getType()));\n     }\n \n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      Path target \u003d new Path(targetDir, diff.target);\n+      Path source \u003d new Path(targetDir, diff.getSource());\n+      Path target \u003d new Path(targetDir, diff.getTarget());\n       renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n     }\n \n     return renameAndDeleteDiff.toArray(\n         new DiffInfo[renameAndDeleteDiff.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DiffInfo[] getRenameAndDeleteDiffsFdiff(Path targetDir) {\n    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n      Path source \u003d new Path(targetDir, diff.getSource());\n      renameAndDeleteDiff.add(new DiffInfo(source, diff.getTarget(),\n          diff.getType()));\n    }\n\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n      Path source \u003d new Path(targetDir, diff.getSource());\n      Path target \u003d new Path(targetDir, diff.getTarget());\n      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n    }\n\n    return renameAndDeleteDiff.toArray(\n        new DiffInfo[renameAndDeleteDiff.size()]);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
          "extendedDetails": {
            "oldValue": "getRenameAndDeleteDiffs",
            "newValue": "getRenameAndDeleteDiffsFdiff"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
          "commitDate": "17/10/16 11:04 AM",
          "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "26/04/16 4:08 PM",
          "commitNameOld": "959a28dd1216dfac78d05b438828e8503108d963",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 173.79,
          "commitsBetweenForRepo": 1276,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n+  private DiffInfo[] getRenameAndDeleteDiffsFdiff(Path targetDir) {\n     List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n+      Path source \u003d new Path(targetDir, diff.getSource());\n+      renameAndDeleteDiff.add(new DiffInfo(source, diff.getTarget(),\n           diff.getType()));\n     }\n \n     for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n-      Path source \u003d new Path(targetDir, diff.source);\n-      Path target \u003d new Path(targetDir, diff.target);\n+      Path source \u003d new Path(targetDir, diff.getSource());\n+      Path target \u003d new Path(targetDir, diff.getTarget());\n       renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n     }\n \n     return renameAndDeleteDiff.toArray(\n         new DiffInfo[renameAndDeleteDiff.size()]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DiffInfo[] getRenameAndDeleteDiffsFdiff(Path targetDir) {\n    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n      Path source \u003d new Path(targetDir, diff.getSource());\n      renameAndDeleteDiff.add(new DiffInfo(source, diff.getTarget(),\n          diff.getType()));\n    }\n\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n      Path source \u003d new Path(targetDir, diff.getSource());\n      Path target \u003d new Path(targetDir, diff.getTarget());\n      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n    }\n\n    return renameAndDeleteDiff.toArray(\n        new DiffInfo[renameAndDeleteDiff.size()]);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
          "extendedDetails": {}
        }
      ]
    },
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8828. Utilize Snapshot diff report to build diff copy list in distcp. (Yufei Gu via Yongjun Zhang)\n",
      "commitDate": "20/08/15 8:02 AM",
      "commitName": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthor": "Yongjun Zhang",
      "diff": "@@ -0,0 +1,17 @@\n+  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n+    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n+    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n+      Path source \u003d new Path(targetDir, diff.source);\n+      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n+          diff.getType()));\n+    }\n+\n+    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n+      Path source \u003d new Path(targetDir, diff.source);\n+      Path target \u003d new Path(targetDir, diff.target);\n+      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n+    }\n+\n+    return renameAndDeleteDiff.toArray(\n+        new DiffInfo[renameAndDeleteDiff.size()]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private DiffInfo[] getRenameAndDeleteDiffs(Path targetDir) {\n    List\u003cDiffInfo\u003e renameAndDeleteDiff \u003d new ArrayList\u003c\u003e();\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.DELETE)) {\n      Path source \u003d new Path(targetDir, diff.source);\n      renameAndDeleteDiff.add(new DiffInfo(source, diff.target,\n          diff.getType()));\n    }\n\n    for (DiffInfo diff : diffMap.get(SnapshotDiffReport.DiffType.RENAME)) {\n      Path source \u003d new Path(targetDir, diff.source);\n      Path target \u003d new Path(targetDir, diff.target);\n      renameAndDeleteDiff.add(new DiffInfo(source, target, diff.getType()));\n    }\n\n    return renameAndDeleteDiff.toArray(\n        new DiffInfo[renameAndDeleteDiff.size()]);\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java"
    }
  }
}