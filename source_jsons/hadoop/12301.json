{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VolumeScanner.java",
  "functionName": "handle",
  "functionId": "handle___block-ExtendedBlock__e-IOException",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
  "functionStartLine": 272,
  "functionEndLine": 298,
  "numCommitsSeen": 20,
  "timeTaken": 3589,
  "changeHistory": [
    "360a96f342f3c8cb8246f011abb9bcb0b6ef3eaa",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "5d1609ddf275e4907bd224bf618e2aad4b262888",
    "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
    "6e62a1a6728b1f782f64065424f92b292c3f163a"
  ],
  "changeHistoryShort": {
    "360a96f342f3c8cb8246f011abb9bcb0b6ef3eaa": "Ybodychange",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ybodychange",
    "5d1609ddf275e4907bd224bf618e2aad4b262888": "Ybodychange",
    "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7": "Ybodychange",
    "6e62a1a6728b1f782f64065424f92b292c3f163a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "360a96f342f3c8cb8246f011abb9bcb0b6ef3eaa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13709. Report bad block to NN when transfer block encounter EIO exception. Contributed by Chen Zhang.\n",
      "commitDate": "19/08/19 1:08 PM",
      "commitName": "360a96f342f3c8cb8246f011abb9bcb0b6ef3eaa",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "18/02/19 5:55 PM",
      "commitNameOld": "7587f97127d0cde21c39e98b7a33b60195112dc3",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 181.76,
      "commitsBetweenForRepo": 1401,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,27 @@\n     public void handle(ExtendedBlock block, IOException e) {\n       FsVolumeSpi volume \u003d scanner.volume;\n       if (e \u003d\u003d null) {\n         LOG.trace(\"Successfully scanned {} on {}\", block, volume);\n         return;\n       }\n       // If the block does not exist anymore, then it\u0027s not an error.\n       if (!volume.getDataset().contains(block)) {\n         LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n             volume, block);\n         return;\n       }\n       // If the block exists, the exception may due to a race with write:\n       // The BlockSender got an old block path in rbw. BlockReceiver removed\n       // the rbw block from rbw to finalized but BlockSender tried to open the\n       // file before BlockReceiver updated the VolumeMap. The state of the\n       // block can be changed again now, so ignore this error here. If there\n       // is a block really deleted by mistake, DirectoryScan should catch it.\n       if (e instanceof FileNotFoundException ) {\n         LOG.info(\"Volume {}: verification failed for {} because of \" +\n                 \"FileNotFoundException.  This may be due to a race with write.\",\n             volume, block);\n         return;\n       }\n       LOG.warn(\"Reporting bad {} on {}\", block, volume);\n-      try {\n-        scanner.datanode.reportBadBlocks(block, volume);\n-      } catch (IOException ie) {\n-        // This is bad, but not bad enough to shut down the scanner.\n-        LOG.warn(\"Cannot report bad block \" + block, ie);\n-      }\n+      scanner.datanode.handleBadBlock(block, e, true);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ExtendedBlock block, IOException e) {\n      FsVolumeSpi volume \u003d scanner.volume;\n      if (e \u003d\u003d null) {\n        LOG.trace(\"Successfully scanned {} on {}\", block, volume);\n        return;\n      }\n      // If the block does not exist anymore, then it\u0027s not an error.\n      if (!volume.getDataset().contains(block)) {\n        LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n            volume, block);\n        return;\n      }\n      // If the block exists, the exception may due to a race with write:\n      // The BlockSender got an old block path in rbw. BlockReceiver removed\n      // the rbw block from rbw to finalized but BlockSender tried to open the\n      // file before BlockReceiver updated the VolumeMap. The state of the\n      // block can be changed again now, so ignore this error here. If there\n      // is a block really deleted by mistake, DirectoryScan should catch it.\n      if (e instanceof FileNotFoundException ) {\n        LOG.info(\"Volume {}: verification failed for {} because of \" +\n                \"FileNotFoundException.  This may be due to a race with write.\",\n            volume, block);\n        return;\n      }\n      LOG.warn(\"Reporting bad {} on {}\", block, volume);\n      scanner.datanode.handleBadBlock(block, e, true);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "29/08/16 1:59 PM",
      "commitNameOld": "5d1609ddf275e4907bd224bf618e2aad4b262888",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 42.06,
      "commitsBetweenForRepo": 263,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,32 @@\n     public void handle(ExtendedBlock block, IOException e) {\n       FsVolumeSpi volume \u003d scanner.volume;\n       if (e \u003d\u003d null) {\n-        LOG.trace(\"Successfully scanned {} on {}\", block, volume.getBasePath());\n+        LOG.trace(\"Successfully scanned {} on {}\", block, volume);\n         return;\n       }\n       // If the block does not exist anymore, then it\u0027s not an error.\n       if (!volume.getDataset().contains(block)) {\n         LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n-            volume.getBasePath(), block);\n+            volume, block);\n         return;\n       }\n       // If the block exists, the exception may due to a race with write:\n       // The BlockSender got an old block path in rbw. BlockReceiver removed\n       // the rbw block from rbw to finalized but BlockSender tried to open the\n       // file before BlockReceiver updated the VolumeMap. The state of the\n       // block can be changed again now, so ignore this error here. If there\n       // is a block really deleted by mistake, DirectoryScan should catch it.\n       if (e instanceof FileNotFoundException ) {\n         LOG.info(\"Volume {}: verification failed for {} because of \" +\n                 \"FileNotFoundException.  This may be due to a race with write.\",\n-            volume.getBasePath(), block);\n+            volume, block);\n         return;\n       }\n-      LOG.warn(\"Reporting bad \" + block + \" with volume \"\n-          + volume.getBasePath(), e);\n+      LOG.warn(\"Reporting bad {} on {}\", block, volume);\n       try {\n         scanner.datanode.reportBadBlocks(block, volume);\n       } catch (IOException ie) {\n         // This is bad, but not bad enough to shut down the scanner.\n         LOG.warn(\"Cannot report bad block \" + block, ie);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ExtendedBlock block, IOException e) {\n      FsVolumeSpi volume \u003d scanner.volume;\n      if (e \u003d\u003d null) {\n        LOG.trace(\"Successfully scanned {} on {}\", block, volume);\n        return;\n      }\n      // If the block does not exist anymore, then it\u0027s not an error.\n      if (!volume.getDataset().contains(block)) {\n        LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n            volume, block);\n        return;\n      }\n      // If the block exists, the exception may due to a race with write:\n      // The BlockSender got an old block path in rbw. BlockReceiver removed\n      // the rbw block from rbw to finalized but BlockSender tried to open the\n      // file before BlockReceiver updated the VolumeMap. The state of the\n      // block can be changed again now, so ignore this error here. If there\n      // is a block really deleted by mistake, DirectoryScan should catch it.\n      if (e instanceof FileNotFoundException ) {\n        LOG.info(\"Volume {}: verification failed for {} because of \" +\n                \"FileNotFoundException.  This may be due to a race with write.\",\n            volume, block);\n        return;\n      }\n      LOG.warn(\"Reporting bad {} on {}\", block, volume);\n      try {\n        scanner.datanode.reportBadBlocks(block, volume);\n      } catch (IOException ie) {\n        // This is bad, but not bad enough to shut down the scanner.\n        LOG.warn(\"Cannot report bad block \" + block, ie);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "5d1609ddf275e4907bd224bf618e2aad4b262888": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10625. VolumeScanner to report why a block is found bad. Contributed by Rushabh S Shah and Yiqun Lin.\n",
      "commitDate": "29/08/16 1:59 PM",
      "commitName": "5d1609ddf275e4907bd224bf618e2aad4b262888",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "08/07/16 7:40 PM",
      "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 51.76,
      "commitsBetweenForRepo": 474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     public void handle(ExtendedBlock block, IOException e) {\n       FsVolumeSpi volume \u003d scanner.volume;\n       if (e \u003d\u003d null) {\n         LOG.trace(\"Successfully scanned {} on {}\", block, volume.getBasePath());\n         return;\n       }\n       // If the block does not exist anymore, then it\u0027s not an error.\n       if (!volume.getDataset().contains(block)) {\n         LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n             volume.getBasePath(), block);\n         return;\n       }\n       // If the block exists, the exception may due to a race with write:\n       // The BlockSender got an old block path in rbw. BlockReceiver removed\n       // the rbw block from rbw to finalized but BlockSender tried to open the\n       // file before BlockReceiver updated the VolumeMap. The state of the\n       // block can be changed again now, so ignore this error here. If there\n       // is a block really deleted by mistake, DirectoryScan should catch it.\n       if (e instanceof FileNotFoundException ) {\n         LOG.info(\"Volume {}: verification failed for {} because of \" +\n                 \"FileNotFoundException.  This may be due to a race with write.\",\n             volume.getBasePath(), block);\n         return;\n       }\n-      LOG.warn(\"Reporting bad {} on {}\", block, volume.getBasePath());\n+      LOG.warn(\"Reporting bad \" + block + \" with volume \"\n+          + volume.getBasePath(), e);\n       try {\n         scanner.datanode.reportBadBlocks(block, volume);\n       } catch (IOException ie) {\n         // This is bad, but not bad enough to shut down the scanner.\n-        LOG.warn(\"Cannot report bad \" + block.getBlockId(), e);\n+        LOG.warn(\"Cannot report bad block \" + block, ie);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ExtendedBlock block, IOException e) {\n      FsVolumeSpi volume \u003d scanner.volume;\n      if (e \u003d\u003d null) {\n        LOG.trace(\"Successfully scanned {} on {}\", block, volume.getBasePath());\n        return;\n      }\n      // If the block does not exist anymore, then it\u0027s not an error.\n      if (!volume.getDataset().contains(block)) {\n        LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n            volume.getBasePath(), block);\n        return;\n      }\n      // If the block exists, the exception may due to a race with write:\n      // The BlockSender got an old block path in rbw. BlockReceiver removed\n      // the rbw block from rbw to finalized but BlockSender tried to open the\n      // file before BlockReceiver updated the VolumeMap. The state of the\n      // block can be changed again now, so ignore this error here. If there\n      // is a block really deleted by mistake, DirectoryScan should catch it.\n      if (e instanceof FileNotFoundException ) {\n        LOG.info(\"Volume {}: verification failed for {} because of \" +\n                \"FileNotFoundException.  This may be due to a race with write.\",\n            volume.getBasePath(), block);\n        return;\n      }\n      LOG.warn(\"Reporting bad \" + block + \" with volume \"\n          + volume.getBasePath(), e);\n      try {\n        scanner.datanode.reportBadBlocks(block, volume);\n      } catch (IOException ie) {\n        // This is bad, but not bad enough to shut down the scanner.\n        LOG.warn(\"Cannot report bad block \" + block, ie);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10512. VolumeScanner may terminate due to NPE in DataNode.reportBadBlocks. Contributed by Wei-Chiu Chuang and Yiqun Lin.\n",
      "commitDate": "08/07/16 7:40 PM",
      "commitName": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "14/04/16 5:58 AM",
      "commitNameOld": "0d1c1152f1ce2706f92109bfbdff0d62e98e6797",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 85.57,
      "commitsBetweenForRepo": 568,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void handle(ExtendedBlock block, IOException e) {\n       FsVolumeSpi volume \u003d scanner.volume;\n       if (e \u003d\u003d null) {\n         LOG.trace(\"Successfully scanned {} on {}\", block, volume.getBasePath());\n         return;\n       }\n       // If the block does not exist anymore, then it\u0027s not an error.\n       if (!volume.getDataset().contains(block)) {\n         LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n             volume.getBasePath(), block);\n         return;\n       }\n       // If the block exists, the exception may due to a race with write:\n       // The BlockSender got an old block path in rbw. BlockReceiver removed\n       // the rbw block from rbw to finalized but BlockSender tried to open the\n       // file before BlockReceiver updated the VolumeMap. The state of the\n       // block can be changed again now, so ignore this error here. If there\n       // is a block really deleted by mistake, DirectoryScan should catch it.\n       if (e instanceof FileNotFoundException ) {\n         LOG.info(\"Volume {}: verification failed for {} because of \" +\n                 \"FileNotFoundException.  This may be due to a race with write.\",\n             volume.getBasePath(), block);\n         return;\n       }\n       LOG.warn(\"Reporting bad {} on {}\", block, volume.getBasePath());\n       try {\n-        scanner.datanode.reportBadBlocks(block);\n+        scanner.datanode.reportBadBlocks(block, volume);\n       } catch (IOException ie) {\n         // This is bad, but not bad enough to shut down the scanner.\n         LOG.warn(\"Cannot report bad \" + block.getBlockId(), e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ExtendedBlock block, IOException e) {\n      FsVolumeSpi volume \u003d scanner.volume;\n      if (e \u003d\u003d null) {\n        LOG.trace(\"Successfully scanned {} on {}\", block, volume.getBasePath());\n        return;\n      }\n      // If the block does not exist anymore, then it\u0027s not an error.\n      if (!volume.getDataset().contains(block)) {\n        LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n            volume.getBasePath(), block);\n        return;\n      }\n      // If the block exists, the exception may due to a race with write:\n      // The BlockSender got an old block path in rbw. BlockReceiver removed\n      // the rbw block from rbw to finalized but BlockSender tried to open the\n      // file before BlockReceiver updated the VolumeMap. The state of the\n      // block can be changed again now, so ignore this error here. If there\n      // is a block really deleted by mistake, DirectoryScan should catch it.\n      if (e instanceof FileNotFoundException ) {\n        LOG.info(\"Volume {}: verification failed for {} because of \" +\n                \"FileNotFoundException.  This may be due to a race with write.\",\n            volume.getBasePath(), block);\n        return;\n      }\n      LOG.warn(\"Reporting bad {} on {}\", block, volume.getBasePath());\n      try {\n        scanner.datanode.reportBadBlocks(block, volume);\n      } catch (IOException ie) {\n        // This is bad, but not bad enough to shut down the scanner.\n        LOG.warn(\"Cannot report bad \" + block.getBlockId(), e);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "6e62a1a6728b1f782f64065424f92b292c3f163a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7430. Refactor the BlockScanner to use O(1) memory and use multiple threads (cmccabe)\n",
      "commitDate": "21/01/15 7:00 PM",
      "commitName": "6e62a1a6728b1f782f64065424f92b292c3f163a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,32 @@\n+    public void handle(ExtendedBlock block, IOException e) {\n+      FsVolumeSpi volume \u003d scanner.volume;\n+      if (e \u003d\u003d null) {\n+        LOG.trace(\"Successfully scanned {} on {}\", block, volume.getBasePath());\n+        return;\n+      }\n+      // If the block does not exist anymore, then it\u0027s not an error.\n+      if (!volume.getDataset().contains(block)) {\n+        LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n+            volume.getBasePath(), block);\n+        return;\n+      }\n+      // If the block exists, the exception may due to a race with write:\n+      // The BlockSender got an old block path in rbw. BlockReceiver removed\n+      // the rbw block from rbw to finalized but BlockSender tried to open the\n+      // file before BlockReceiver updated the VolumeMap. The state of the\n+      // block can be changed again now, so ignore this error here. If there\n+      // is a block really deleted by mistake, DirectoryScan should catch it.\n+      if (e instanceof FileNotFoundException ) {\n+        LOG.info(\"Volume {}: verification failed for {} because of \" +\n+                \"FileNotFoundException.  This may be due to a race with write.\",\n+            volume.getBasePath(), block);\n+        return;\n+      }\n+      LOG.warn(\"Reporting bad {} on {}\", block, volume.getBasePath());\n+      try {\n+        scanner.datanode.reportBadBlocks(block);\n+      } catch (IOException ie) {\n+        // This is bad, but not bad enough to shut down the scanner.\n+        LOG.warn(\"Cannot report bad \" + block.getBlockId(), e);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void handle(ExtendedBlock block, IOException e) {\n      FsVolumeSpi volume \u003d scanner.volume;\n      if (e \u003d\u003d null) {\n        LOG.trace(\"Successfully scanned {} on {}\", block, volume.getBasePath());\n        return;\n      }\n      // If the block does not exist anymore, then it\u0027s not an error.\n      if (!volume.getDataset().contains(block)) {\n        LOG.debug(\"Volume {}: block {} is no longer in the dataset.\",\n            volume.getBasePath(), block);\n        return;\n      }\n      // If the block exists, the exception may due to a race with write:\n      // The BlockSender got an old block path in rbw. BlockReceiver removed\n      // the rbw block from rbw to finalized but BlockSender tried to open the\n      // file before BlockReceiver updated the VolumeMap. The state of the\n      // block can be changed again now, so ignore this error here. If there\n      // is a block really deleted by mistake, DirectoryScan should catch it.\n      if (e instanceof FileNotFoundException ) {\n        LOG.info(\"Volume {}: verification failed for {} because of \" +\n                \"FileNotFoundException.  This may be due to a race with write.\",\n            volume.getBasePath(), block);\n        return;\n      }\n      LOG.warn(\"Reporting bad {} on {}\", block, volume.getBasePath());\n      try {\n        scanner.datanode.reportBadBlocks(block);\n      } catch (IOException ie) {\n        // This is bad, but not bad enough to shut down the scanner.\n        LOG.warn(\"Cannot report bad \" + block.getBlockId(), e);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java"
    }
  }
}