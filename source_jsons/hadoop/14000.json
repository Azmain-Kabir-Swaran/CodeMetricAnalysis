{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockTokenSecretManager.java",
  "functionName": "updateKeys",
  "functionId": "updateKeys",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
  "functionStartLine": 253,
  "functionEndLine": 274,
  "numCommitsSeen": 30,
  "timeTaken": 5548,
  "changeHistory": [
    "225d877092168dd3a4e7008becfc280fd3db78a1",
    "6a3fc685a98718742c351ed6625dc7a4dee55e77",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e",
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "b0944651681337e81b41250f43bd1e8eebc78125",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "225d877092168dd3a4e7008becfc280fd3db78a1": "Ybodychange",
    "6a3fc685a98718742c351ed6625dc7a4dee55e77": "Ybodychange",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": "Ybodychange",
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "b0944651681337e81b41250f43bd1e8eebc78125": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "225d877092168dd3a4e7008becfc280fd3db78a1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13193. Various Improvements for BlockTokenSecretManager. Contributed by BELUGA BEHR.\n",
      "commitDate": "27/02/18 8:48 AM",
      "commitName": "225d877092168dd3a4e7008becfc280fd3db78a1",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "26/06/17 11:20 AM",
      "commitNameOld": "2c367b464c86a7d67a2b8dd82ae804d169957573",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 245.94,
      "commitsBetweenForRepo": 1755,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   synchronized boolean updateKeys() throws IOException {\n-    if (!isMaster)\n+    if (!isMaster) {\n       return false;\n+    }\n \n     LOG.info(\"Updating block keys\");\n     removeExpiredKeys();\n     // set final expiry date of retiring currentKey\n     allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n         timer.now() + keyUpdateInterval + tokenLifetime,\n         currentKey.getKey()));\n     // update the estimated expiry date of new currentKey\n     currentKey \u003d new BlockKey(nextKey.getKeyId(), timer.now()\n         + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n     allKeys.put(currentKey.getKeyId(), currentKey);\n     // generate a new nextKey\n     setSerialNo(serialNo + 1);\n     nextKey \u003d new BlockKey(serialNo, timer.now() + 3\n         * keyUpdateInterval + tokenLifetime, generateSecret());\n     allKeys.put(nextKey.getKeyId(), nextKey);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster) {\n      return false;\n    }\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        timer.now() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), timer.now()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    setSerialNo(serialNo + 1);\n    nextKey \u003d new BlockKey(serialNo, timer.now() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
      "extendedDetails": {}
    },
    "6a3fc685a98718742c351ed6625dc7a4dee55e77": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11741. Long running balancer may fail due to expired DataEncryptionKey. Contributed by Wei-Chiu Chuang and Xiao Chen.\n",
      "commitDate": "01/06/17 2:05 PM",
      "commitName": "6a3fc685a98718742c351ed6625dc7a4dee55e77",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "05/05/17 12:01 PM",
      "commitNameOld": "a3954ccab148bddc290cb96528e63ff19799bcc9",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 27.09,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   synchronized boolean updateKeys() throws IOException {\n     if (!isMaster)\n       return false;\n \n     LOG.info(\"Updating block keys\");\n     removeExpiredKeys();\n     // set final expiry date of retiring currentKey\n     allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n-        Time.now() + keyUpdateInterval + tokenLifetime,\n+        timer.now() + keyUpdateInterval + tokenLifetime,\n         currentKey.getKey()));\n     // update the estimated expiry date of new currentKey\n-    currentKey \u003d new BlockKey(nextKey.getKeyId(), Time.now()\n+    currentKey \u003d new BlockKey(nextKey.getKeyId(), timer.now()\n         + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n     allKeys.put(currentKey.getKeyId(), currentKey);\n     // generate a new nextKey\n     setSerialNo(serialNo + 1);\n-    nextKey \u003d new BlockKey(serialNo, Time.now() + 3\n+    nextKey \u003d new BlockKey(serialNo, timer.now() + 3\n         * keyUpdateInterval + tokenLifetime, generateSecret());\n     allKeys.put(nextKey.getKeyId(), nextKey);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        timer.now() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), timer.now()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    setSerialNo(serialNo + 1);\n    nextKey \u003d new BlockKey(serialNo, timer.now() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
      "extendedDetails": {}
    },
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3641. Move server Util time methods to common and use now instead of System#currentTimeMillis. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 12:01 PM",
      "commitName": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "11/07/12 9:09 AM",
      "commitNameOld": "664ca6b75e1e46af666183ad7d91e89c42e08805",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 1.12,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   synchronized boolean updateKeys() throws IOException {\n     if (!isMaster)\n       return false;\n \n     LOG.info(\"Updating block keys\");\n     removeExpiredKeys();\n     // set final expiry date of retiring currentKey\n     allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n-        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n+        Time.now() + keyUpdateInterval + tokenLifetime,\n         currentKey.getKey()));\n     // update the estimated expiry date of new currentKey\n-    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n+    currentKey \u003d new BlockKey(nextKey.getKeyId(), Time.now()\n         + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n     allKeys.put(currentKey.getKeyId(), currentKey);\n     // generate a new nextKey\n     setSerialNo(serialNo + 1);\n-    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n+    nextKey \u003d new BlockKey(serialNo, Time.now() + 3\n         * keyUpdateInterval + tokenLifetime, generateSecret());\n     allKeys.put(nextKey.getKeyId(), nextKey);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        Time.now() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), Time.now()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    setSerialNo(serialNo + 1);\n    nextKey \u003d new BlockKey(serialNo, Time.now() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
      "extendedDetails": {}
    },
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76": {
      "type": "Ybodychange",
      "commitMessage": "Fix issue with NN/DN re-registration.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1358347 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/07/12 11:59 AM",
      "commitName": "fb95fce24056c0b0aa5b77683c684fe1b68c4f76",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 316.78,
      "commitsBetweenForRepo": 2141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   synchronized boolean updateKeys() throws IOException {\n     if (!isMaster)\n       return false;\n \n     LOG.info(\"Updating block keys\");\n     removeExpiredKeys();\n     // set final expiry date of retiring currentKey\n     allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n         System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n         currentKey.getKey()));\n     // update the estimated expiry date of new currentKey\n     currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n         + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n     allKeys.put(currentKey.getKeyId(), currentKey);\n     // generate a new nextKey\n-    serialNo++;\n+    setSerialNo(serialNo + 1);\n     nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n         * keyUpdateInterval + tokenLifetime, generateSecret());\n     allKeys.put(nextKey.getKeyId(), nextKey);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    setSerialNo(serialNo + 1);\n    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    serialNo++;\n    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    serialNo++;\n    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java"
      }
    },
    "b0944651681337e81b41250f43bd1e8eebc78125": {
      "type": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-2265. Remove unnecessary BlockTokenSecretManager fields/methods from BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1158743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/11 7:34 AM",
      "commitName": "b0944651681337e81b41250f43bd1e8eebc78125",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2265. Remove unnecessary BlockTokenSecretManager fields/methods from BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1158743 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/08/11 7:34 AM",
          "commitName": "b0944651681337e81b41250f43bd1e8eebc78125",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 65.69,
          "commitsBetweenForRepo": 235,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public synchronized void updateKeys() throws IOException {\n+  synchronized boolean updateKeys() throws IOException {\n     if (!isMaster)\n-      return;\n+      return false;\n+\n     LOG.info(\"Updating block keys\");\n     removeExpiredKeys();\n     // set final expiry date of retiring currentKey\n     allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n         System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n         currentKey.getKey()));\n     // update the estimated expiry date of new currentKey\n     currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n         + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n     allKeys.put(currentKey.getKeyId(), currentKey);\n     // generate a new nextKey\n     serialNo++;\n     nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n         * keyUpdateInterval + tokenLifetime, generateSecret());\n     allKeys.put(nextKey.getKeyId(), nextKey);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    serialNo++;\n    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2265. Remove unnecessary BlockTokenSecretManager fields/methods from BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1158743 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/08/11 7:34 AM",
          "commitName": "b0944651681337e81b41250f43bd1e8eebc78125",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 65.69,
          "commitsBetweenForRepo": 235,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public synchronized void updateKeys() throws IOException {\n+  synchronized boolean updateKeys() throws IOException {\n     if (!isMaster)\n-      return;\n+      return false;\n+\n     LOG.info(\"Updating block keys\");\n     removeExpiredKeys();\n     // set final expiry date of retiring currentKey\n     allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n         System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n         currentKey.getKey()));\n     // update the estimated expiry date of new currentKey\n     currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n         + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n     allKeys.put(currentKey.getKeyId(), currentKey);\n     // generate a new nextKey\n     serialNo++;\n     nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n         * keyUpdateInterval + tokenLifetime, generateSecret());\n     allKeys.put(nextKey.getKeyId(), nextKey);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    serialNo++;\n    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2265. Remove unnecessary BlockTokenSecretManager fields/methods from BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1158743 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/08/11 7:34 AM",
          "commitName": "b0944651681337e81b41250f43bd1e8eebc78125",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "12/06/11 3:00 PM",
          "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 65.69,
          "commitsBetweenForRepo": 235,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public synchronized void updateKeys() throws IOException {\n+  synchronized boolean updateKeys() throws IOException {\n     if (!isMaster)\n-      return;\n+      return false;\n+\n     LOG.info(\"Updating block keys\");\n     removeExpiredKeys();\n     // set final expiry date of retiring currentKey\n     allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n         System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n         currentKey.getKey()));\n     // update the estimated expiry date of new currentKey\n     currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n         + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n     allKeys.put(currentKey.getKeyId(), currentKey);\n     // generate a new nextKey\n     serialNo++;\n     nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n         * keyUpdateInterval + tokenLifetime, generateSecret());\n     allKeys.put(nextKey.getKeyId(), nextKey);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized boolean updateKeys() throws IOException {\n    if (!isMaster)\n      return false;\n\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    serialNo++;\n    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n    return true;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  public synchronized void updateKeys() throws IOException {\n+    if (!isMaster)\n+      return;\n+    LOG.info(\"Updating block keys\");\n+    removeExpiredKeys();\n+    // set final expiry date of retiring currentKey\n+    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n+        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n+        currentKey.getKey()));\n+    // update the estimated expiry date of new currentKey\n+    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n+        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n+    allKeys.put(currentKey.getKeyId(), currentKey);\n+    // generate a new nextKey\n+    serialNo++;\n+    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n+        * keyUpdateInterval + tokenLifetime, generateSecret());\n+    allKeys.put(nextKey.getKeyId(), nextKey);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateKeys() throws IOException {\n    if (!isMaster)\n      return;\n    LOG.info(\"Updating block keys\");\n    removeExpiredKeys();\n    // set final expiry date of retiring currentKey\n    allKeys.put(currentKey.getKeyId(), new BlockKey(currentKey.getKeyId(),\n        System.currentTimeMillis() + keyUpdateInterval + tokenLifetime,\n        currentKey.getKey()));\n    // update the estimated expiry date of new currentKey\n    currentKey \u003d new BlockKey(nextKey.getKeyId(), System.currentTimeMillis()\n        + 2 * keyUpdateInterval + tokenLifetime, nextKey.getKey());\n    allKeys.put(currentKey.getKeyId(), currentKey);\n    // generate a new nextKey\n    serialNo++;\n    nextKey \u003d new BlockKey(serialNo, System.currentTimeMillis() + 3\n        * keyUpdateInterval + tokenLifetime, generateSecret());\n    allKeys.put(nextKey.getKeyId(), nextKey);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java"
    }
  }
}