{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "recoverResourceRequestForContainer",
  "functionId": "recoverResourceRequestForContainer___rmContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 640,
  "functionEndLine": 661,
  "numCommitsSeen": 115,
  "timeTaken": 6012,
  "changeHistory": [
    "a957f1c60e1308d1d70a1803381994f59949c5f8",
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
    "3fe57285635e8058c34aa40a103845b49ca7d6ff",
    "adf260a728df427eb729abe8fb9ad7248991ea54",
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
    "43589a8df70d4dbaf86609961e27cc4e23dda993"
  ],
  "changeHistoryShort": {
    "a957f1c60e1308d1d70a1803381994f59949c5f8": "Ybodychange",
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7": "Ymultichange(Ymodifierchange,Ybodychange)",
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e": "Ymultichange(Ymodifierchange,Ybodychange)",
    "3fe57285635e8058c34aa40a103845b49ca7d6ff": "Ymultichange(Ymodifierchange,Ybodychange)",
    "adf260a728df427eb729abe8fb9ad7248991ea54": "Ymultichange(Ymodifierchange,Ybodychange)",
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579": "Ymultichange(Ymodifierchange,Ybodychange)",
    "43589a8df70d4dbaf86609961e27cc4e23dda993": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a957f1c60e1308d1d70a1803381994f59949c5f8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7438. Additional changes to make SchedulingPlacementSet agnostic to ResourceRequest / placement algorithm. Contributed by Wangda Tan\n",
      "commitDate": "05/12/17 9:20 AM",
      "commitName": "a957f1c60e1308d1d70a1803381994f59949c5f8",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/11/17 3:57 PM",
      "commitNameOld": "a63d19d36520fa55bf523483f14329756f6eadd3",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 4.72,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n-    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n+    ContainerRequest containerRequest \u003d rmContainer.getContainerRequest();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n-    if (requests \u003d\u003d null) {\n+    if (containerRequest \u003d\u003d null) {\n       return;\n     }\n \n     // Add resource request back to Scheduler ApplicationAttempt.\n \n     // We lookup the application-attempt here again using\n     // getCurrentApplicationAttempt() because there is only one app-attempt at\n     // any point in the scheduler. But in corner cases, AMs can crash,\n     // corresponding containers get killed and recovered to the same-attempt,\n     // but because the app-attempt is extinguished right after, the recovered\n     // requests don\u0027t serve any purpose, but that\u0027s okay.\n     SchedulerApplicationAttempt schedulerAttempt \u003d\n         getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n+      schedulerAttempt.recoverResourceRequestsForContainer(containerRequest);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    ContainerRequest containerRequest \u003d rmContainer.getContainerRequest();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (containerRequest \u003d\u003d null) {\n      return;\n    }\n\n    // Add resource request back to Scheduler ApplicationAttempt.\n\n    // We lookup the application-attempt here again using\n    // getCurrentApplicationAttempt() because there is only one app-attempt at\n    // any point in the scheduler. But in corner cases, AMs can crash,\n    // corresponding containers get killed and recovered to the same-attempt,\n    // but because the app-attempt is extinguished right after, the recovered\n    // requests don\u0027t serve any purpose, but that\u0027s okay.\n    SchedulerApplicationAttempt schedulerAttempt \u003d\n        getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequestsForContainer(containerRequest);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
      "commitDate": "18/01/16 5:30 PM",
      "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "18/01/16 5:30 PM",
          "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 5:27 PM",
          "commitNameOld": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-    // Add resource request back to Scheduler.\n-    SchedulerApplicationAttempt schedulerAttempt \n-        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n+\n+    // Add resource request back to Scheduler ApplicationAttempt.\n+\n+    // We lookup the application-attempt here again using\n+    // getCurrentApplicationAttempt() because there is only one app-attempt at\n+    // any point in the scheduler. But in corner cases, AMs can crash,\n+    // corresponding containers get killed and recovered to the same-attempt,\n+    // but because the app-attempt is extinguished right after, the recovered\n+    // requests don\u0027t serve any purpose, but that\u0027s okay.\n+    SchedulerApplicationAttempt schedulerAttempt \u003d\n+        getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequests(requests);\n+      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n\n    // Add resource request back to Scheduler ApplicationAttempt.\n\n    // We lookup the application-attempt here again using\n    // getCurrentApplicationAttempt() because there is only one app-attempt at\n    // any point in the scheduler. But in corner cases, AMs can crash,\n    // corresponding containers get killed and recovered to the same-attempt,\n    // but because the app-attempt is extinguished right after, the recovered\n    // requests don\u0027t serve any purpose, but that\u0027s okay.\n    SchedulerApplicationAttempt schedulerAttempt \u003d\n        getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "18/01/16 5:30 PM",
          "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 5:27 PM",
          "commitNameOld": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-    // Add resource request back to Scheduler.\n-    SchedulerApplicationAttempt schedulerAttempt \n-        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n+\n+    // Add resource request back to Scheduler ApplicationAttempt.\n+\n+    // We lookup the application-attempt here again using\n+    // getCurrentApplicationAttempt() because there is only one app-attempt at\n+    // any point in the scheduler. But in corner cases, AMs can crash,\n+    // corresponding containers get killed and recovered to the same-attempt,\n+    // but because the app-attempt is extinguished right after, the recovered\n+    // requests don\u0027t serve any purpose, but that\u0027s okay.\n+    SchedulerApplicationAttempt schedulerAttempt \u003d\n+        getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequests(requests);\n+      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n\n    // Add resource request back to Scheduler ApplicationAttempt.\n\n    // We lookup the application-attempt here again using\n    // getCurrentApplicationAttempt() because there is only one app-attempt at\n    // any point in the scheduler. But in corner cases, AMs can crash,\n    // corresponding containers get killed and recovered to the same-attempt,\n    // but because the app-attempt is extinguished right after, the recovered\n    // requests don\u0027t serve any purpose, but that\u0027s okay.\n    SchedulerApplicationAttempt schedulerAttempt \u003d\n        getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.\n\nConflicts:\n\thadoop-yarn-project/CHANGES.txt\n",
      "commitDate": "18/01/16 5:27 PM",
      "commitName": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.\n\nConflicts:\n\thadoop-yarn-project/CHANGES.txt\n",
          "commitDate": "18/01/16 5:27 PM",
          "commitName": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 1:06 AM",
          "commitNameOld": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,14 @@\n-  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-\n-    // Add resource request back to Scheduler ApplicationAttempt.\n-\n-    // We lookup the application-attempt here again using\n-    // getCurrentApplicationAttempt() because there is only one app-attempt at\n-    // any point in the scheduler. But in corner cases, AMs can crash,\n-    // corresponding containers get killed and recovered to the same-attempt,\n-    // but because the app-attempt is extinguished right after, the recovered\n-    // requests don\u0027t serve any purpose, but that\u0027s okay.\n-    SchedulerApplicationAttempt schedulerAttempt \u003d\n-        getCurrentAttemptForContainer(rmContainer.getContainerId());\n+    // Add resource request back to Scheduler.\n+    SchedulerApplicationAttempt schedulerAttempt \n+        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n+      schedulerAttempt.recoverResourceRequests(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    // Add resource request back to Scheduler.\n    SchedulerApplicationAttempt schedulerAttempt \n        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequests(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.\n\nConflicts:\n\thadoop-yarn-project/CHANGES.txt\n",
          "commitDate": "18/01/16 5:27 PM",
          "commitName": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 1:06 AM",
          "commitNameOld": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,14 @@\n-  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-\n-    // Add resource request back to Scheduler ApplicationAttempt.\n-\n-    // We lookup the application-attempt here again using\n-    // getCurrentApplicationAttempt() because there is only one app-attempt at\n-    // any point in the scheduler. But in corner cases, AMs can crash,\n-    // corresponding containers get killed and recovered to the same-attempt,\n-    // but because the app-attempt is extinguished right after, the recovered\n-    // requests don\u0027t serve any purpose, but that\u0027s okay.\n-    SchedulerApplicationAttempt schedulerAttempt \u003d\n-        getCurrentAttemptForContainer(rmContainer.getContainerId());\n+    // Add resource request back to Scheduler.\n+    SchedulerApplicationAttempt schedulerAttempt \n+        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n+      schedulerAttempt.recoverResourceRequests(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    // Add resource request back to Scheduler.\n    SchedulerApplicationAttempt schedulerAttempt \n        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequests(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "3fe57285635e8058c34aa40a103845b49ca7d6ff": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n\n(cherry picked from commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579)\n",
      "commitDate": "18/01/16 1:06 AM",
      "commitName": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n\n(cherry picked from commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579)\n",
          "commitDate": "18/01/16 1:06 AM",
          "commitName": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 12:50 AM",
          "commitNameOld": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-    // Add resource request back to Scheduler.\n-    SchedulerApplicationAttempt schedulerAttempt \n-        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n+\n+    // Add resource request back to Scheduler ApplicationAttempt.\n+\n+    // We lookup the application-attempt here again using\n+    // getCurrentApplicationAttempt() because there is only one app-attempt at\n+    // any point in the scheduler. But in corner cases, AMs can crash,\n+    // corresponding containers get killed and recovered to the same-attempt,\n+    // but because the app-attempt is extinguished right after, the recovered\n+    // requests don\u0027t serve any purpose, but that\u0027s okay.\n+    SchedulerApplicationAttempt schedulerAttempt \u003d\n+        getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequests(requests);\n+      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n\n    // Add resource request back to Scheduler ApplicationAttempt.\n\n    // We lookup the application-attempt here again using\n    // getCurrentApplicationAttempt() because there is only one app-attempt at\n    // any point in the scheduler. But in corner cases, AMs can crash,\n    // corresponding containers get killed and recovered to the same-attempt,\n    // but because the app-attempt is extinguished right after, the recovered\n    // requests don\u0027t serve any purpose, but that\u0027s okay.\n    SchedulerApplicationAttempt schedulerAttempt \u003d\n        getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n\n(cherry picked from commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579)\n",
          "commitDate": "18/01/16 1:06 AM",
          "commitName": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "18/01/16 12:50 AM",
          "commitNameOld": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-    // Add resource request back to Scheduler.\n-    SchedulerApplicationAttempt schedulerAttempt \n-        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n+\n+    // Add resource request back to Scheduler ApplicationAttempt.\n+\n+    // We lookup the application-attempt here again using\n+    // getCurrentApplicationAttempt() because there is only one app-attempt at\n+    // any point in the scheduler. But in corner cases, AMs can crash,\n+    // corresponding containers get killed and recovered to the same-attempt,\n+    // but because the app-attempt is extinguished right after, the recovered\n+    // requests don\u0027t serve any purpose, but that\u0027s okay.\n+    SchedulerApplicationAttempt schedulerAttempt \u003d\n+        getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequests(requests);\n+      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n\n    // Add resource request back to Scheduler ApplicationAttempt.\n\n    // We lookup the application-attempt here again using\n    // getCurrentApplicationAttempt() because there is only one app-attempt at\n    // any point in the scheduler. But in corner cases, AMs can crash,\n    // corresponding containers get killed and recovered to the same-attempt,\n    // but because the app-attempt is extinguished right after, the recovered\n    // requests don\u0027t serve any purpose, but that\u0027s okay.\n    SchedulerApplicationAttempt schedulerAttempt \u003d\n        getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "adf260a728df427eb729abe8fb9ad7248991ea54": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579.\n",
      "commitDate": "18/01/16 12:50 AM",
      "commitName": "adf260a728df427eb729abe8fb9ad7248991ea54",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579.\n",
          "commitDate": "18/01/16 12:50 AM",
          "commitName": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "17/01/16 7:04 PM",
          "commitNameOld": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,14 @@\n-  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-\n-    // Add resource request back to Scheduler ApplicationAttempt.\n-\n-    // We lookup the application-attempt here again using\n-    // getCurrentApplicationAttempt() because there is only one app-attempt at\n-    // any point in the scheduler. But in corner cases, AMs can crash,\n-    // corresponding containers get killed and recovered to the same-attempt,\n-    // but because the app-attempt is extinguished right after, the recovered\n-    // requests don\u0027t serve any purpose, but that\u0027s okay.\n-    SchedulerApplicationAttempt schedulerAttempt \u003d\n-        getCurrentAttemptForContainer(rmContainer.getContainerId());\n+    // Add resource request back to Scheduler.\n+    SchedulerApplicationAttempt schedulerAttempt \n+        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n+      schedulerAttempt.recoverResourceRequests(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    // Add resource request back to Scheduler.\n    SchedulerApplicationAttempt schedulerAttempt \n        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequests(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579.\n",
          "commitDate": "18/01/16 12:50 AM",
          "commitName": "adf260a728df427eb729abe8fb9ad7248991ea54",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "17/01/16 7:04 PM",
          "commitNameOld": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,14 @@\n-  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-\n-    // Add resource request back to Scheduler ApplicationAttempt.\n-\n-    // We lookup the application-attempt here again using\n-    // getCurrentApplicationAttempt() because there is only one app-attempt at\n-    // any point in the scheduler. But in corner cases, AMs can crash,\n-    // corresponding containers get killed and recovered to the same-attempt,\n-    // but because the app-attempt is extinguished right after, the recovered\n-    // requests don\u0027t serve any purpose, but that\u0027s okay.\n-    SchedulerApplicationAttempt schedulerAttempt \u003d\n-        getCurrentAttemptForContainer(rmContainer.getContainerId());\n+    // Add resource request back to Scheduler.\n+    SchedulerApplicationAttempt schedulerAttempt \n+        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n+      schedulerAttempt.recoverResourceRequests(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    // Add resource request back to Scheduler.\n    SchedulerApplicationAttempt schedulerAttempt \n        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequests(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
      "commitDate": "17/01/16 7:04 PM",
      "commitName": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "17/01/16 7:04 PM",
          "commitName": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "14/01/16 8:33 AM",
          "commitNameOld": "9d04f26d4c42170ee3dab2f6fb09a94bbf72fc65",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 3.44,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-    // Add resource request back to Scheduler.\n-    SchedulerApplicationAttempt schedulerAttempt \n-        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n+\n+    // Add resource request back to Scheduler ApplicationAttempt.\n+\n+    // We lookup the application-attempt here again using\n+    // getCurrentApplicationAttempt() because there is only one app-attempt at\n+    // any point in the scheduler. But in corner cases, AMs can crash,\n+    // corresponding containers get killed and recovered to the same-attempt,\n+    // but because the app-attempt is extinguished right after, the recovered\n+    // requests don\u0027t serve any purpose, but that\u0027s okay.\n+    SchedulerApplicationAttempt schedulerAttempt \u003d\n+        getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequests(requests);\n+      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n\n    // Add resource request back to Scheduler ApplicationAttempt.\n\n    // We lookup the application-attempt here again using\n    // getCurrentApplicationAttempt() because there is only one app-attempt at\n    // any point in the scheduler. But in corner cases, AMs can crash,\n    // corresponding containers get killed and recovered to the same-attempt,\n    // but because the app-attempt is extinguished right after, the recovered\n    // requests don\u0027t serve any purpose, but that\u0027s okay.\n    SchedulerApplicationAttempt schedulerAttempt \u003d\n        getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
          "commitDate": "17/01/16 7:04 PM",
          "commitName": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "14/01/16 8:33 AM",
          "commitNameOld": "9d04f26d4c42170ee3dab2f6fb09a94bbf72fc65",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 3.44,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n     List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n \n     // If container state is moved to ACQUIRED, request will be empty.\n     if (requests \u003d\u003d null) {\n       return;\n     }\n-    // Add resource request back to Scheduler.\n-    SchedulerApplicationAttempt schedulerAttempt \n-        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n+\n+    // Add resource request back to Scheduler ApplicationAttempt.\n+\n+    // We lookup the application-attempt here again using\n+    // getCurrentApplicationAttempt() because there is only one app-attempt at\n+    // any point in the scheduler. But in corner cases, AMs can crash,\n+    // corresponding containers get killed and recovered to the same-attempt,\n+    // but because the app-attempt is extinguished right after, the recovered\n+    // requests don\u0027t serve any purpose, but that\u0027s okay.\n+    SchedulerApplicationAttempt schedulerAttempt \u003d\n+        getCurrentAttemptForContainer(rmContainer.getContainerId());\n     if (schedulerAttempt !\u003d null) {\n-      schedulerAttempt.recoverResourceRequests(requests);\n+      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n\n    // Add resource request back to Scheduler ApplicationAttempt.\n\n    // We lookup the application-attempt here again using\n    // getCurrentApplicationAttempt() because there is only one app-attempt at\n    // any point in the scheduler. But in corner cases, AMs can crash,\n    // corresponding containers get killed and recovered to the same-attempt,\n    // but because the app-attempt is extinguished right after, the recovered\n    // requests don\u0027t serve any purpose, but that\u0027s okay.\n    SchedulerApplicationAttempt schedulerAttempt \u003d\n        getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequestsForContainer(requests);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "43589a8df70d4dbaf86609961e27cc4e23dda993": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1408 Preemption caused Invalid State Event: ACQUIRED at KILLED and caused a task timeout for 30mins. (Sunil G via mayank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610860 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 2:48 PM",
      "commitName": "43589a8df70d4dbaf86609961e27cc4e23dda993",
      "commitAuthor": "Mayank Bansal",
      "diff": "@@ -0,0 +1,14 @@\n+  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n+    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n+\n+    // If container state is moved to ACQUIRED, request will be empty.\n+    if (requests \u003d\u003d null) {\n+      return;\n+    }\n+    // Add resource request back to Scheduler.\n+    SchedulerApplicationAttempt schedulerAttempt \n+        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n+    if (schedulerAttempt !\u003d null) {\n+      schedulerAttempt.recoverResourceRequests(requests);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void recoverResourceRequestForContainer(RMContainer rmContainer) {\n    List\u003cResourceRequest\u003e requests \u003d rmContainer.getResourceRequests();\n\n    // If container state is moved to ACQUIRED, request will be empty.\n    if (requests \u003d\u003d null) {\n      return;\n    }\n    // Add resource request back to Scheduler.\n    SchedulerApplicationAttempt schedulerAttempt \n        \u003d getCurrentAttemptForContainer(rmContainer.getContainerId());\n    if (schedulerAttempt !\u003d null) {\n      schedulerAttempt.recoverResourceRequests(requests);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java"
    }
  }
}