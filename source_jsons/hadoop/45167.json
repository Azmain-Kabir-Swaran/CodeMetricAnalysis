{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnClientImpl.java",
  "functionName": "getTimelineDelegationToken",
  "functionId": "getTimelineDelegationToken",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
  "functionStartLine": 410,
  "functionEndLine": 445,
  "numCommitsSeen": 70,
  "timeTaken": 3888,
  "changeHistory": [
    "7ff5a40218241ad2380595175a493794129a7402",
    "64f68cb0b8c0b93d37699893b812b37c4b05c939",
    "5d339c46f5b16b951afd82afd9e907b9aa2ded9a",
    "37b4acf7cee1f05599a84bbb1ebf07979a71f82f",
    "6f10434a5ad965d50352602ce31a9fce353cb90c",
    "71fbb474f531f60c5d908cf724f18f90dfd5fa9f",
    "1b4be918664b09272b120bc42de3e5fc02d79047",
    "eb92cc67dfaa51212fc5315b8db99effd046a154"
  ],
  "changeHistoryShort": {
    "7ff5a40218241ad2380595175a493794129a7402": "Ybodychange",
    "64f68cb0b8c0b93d37699893b812b37c4b05c939": "Ybodychange",
    "5d339c46f5b16b951afd82afd9e907b9aa2ded9a": "Ybodychange",
    "37b4acf7cee1f05599a84bbb1ebf07979a71f82f": "Ybodychange",
    "6f10434a5ad965d50352602ce31a9fce353cb90c": "Ybodychange",
    "71fbb474f531f60c5d908cf724f18f90dfd5fa9f": "Ybodychange",
    "1b4be918664b09272b120bc42de3e5fc02d79047": "Ybodychange",
    "eb92cc67dfaa51212fc5315b8db99effd046a154": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ff5a40218241ad2380595175a493794129a7402": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8316.  Improved diagnostic message for ATS unavailability for YARN Service.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "24/05/18 1:26 PM",
      "commitName": "7ff5a40218241ad2380595175a493794129a7402",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "15/01/18 6:28 PM",
      "commitNameOld": "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 128.75,
      "commitsBetweenForRepo": 1533,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n       getTimelineDelegationToken() throws IOException, YarnException {\n     try {\n       // Only reachable when both security and timeline service are enabled.\n       if (timelineClient \u003d\u003d null) {\n         synchronized (this) {\n           if (timelineClient \u003d\u003d null) {\n             TimelineClient tlClient \u003d createTimelineClient();\n             tlClient.init(getConfig());\n             tlClient.start();\n             // Assign value to timeline client variable only\n             // when it is fully initiated. In order to avoid\n             // other threads to see partially initialized object.\n             this.timelineClient \u003d tlClient;\n           }\n         }\n       }\n       return timelineClient.getDelegationToken(timelineDTRenewer);\n     } catch (Exception e) {\n       if (timelineServiceBestEffort) {\n         LOG.warn(\"Failed to get delegation token from the timeline server: \"\n             + e.getMessage());\n         return null;\n       }\n-      throw e;\n+      throw new IOException(e);\n     } catch (NoClassDefFoundError e) {\n       NoClassDefFoundError wrappedError \u003d new NoClassDefFoundError(\n           e.getMessage() + \". It appears that the timeline client \"\n               + \"failed to initiate because an incompatible dependency \"\n               + \"in classpath. If timeline service is optional to this \"\n               + \"client, try to work around by setting \"\n               + YarnConfiguration.TIMELINE_SERVICE_ENABLED\n               + \" to false in client configuration.\");\n       wrappedError.setStackTrace(e.getStackTrace());\n       throw wrappedError;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n    try {\n      // Only reachable when both security and timeline service are enabled.\n      if (timelineClient \u003d\u003d null) {\n        synchronized (this) {\n          if (timelineClient \u003d\u003d null) {\n            TimelineClient tlClient \u003d createTimelineClient();\n            tlClient.init(getConfig());\n            tlClient.start();\n            // Assign value to timeline client variable only\n            // when it is fully initiated. In order to avoid\n            // other threads to see partially initialized object.\n            this.timelineClient \u003d tlClient;\n          }\n        }\n      }\n      return timelineClient.getDelegationToken(timelineDTRenewer);\n    } catch (Exception e) {\n      if (timelineServiceBestEffort) {\n        LOG.warn(\"Failed to get delegation token from the timeline server: \"\n            + e.getMessage());\n        return null;\n      }\n      throw new IOException(e);\n    } catch (NoClassDefFoundError e) {\n      NoClassDefFoundError wrappedError \u003d new NoClassDefFoundError(\n          e.getMessage() + \". It appears that the timeline client \"\n              + \"failed to initiate because an incompatible dependency \"\n              + \"in classpath. If timeline service is optional to this \"\n              + \"client, try to work around by setting \"\n              + YarnConfiguration.TIMELINE_SERVICE_ENABLED\n              + \" to false in client configuration.\");\n      wrappedError.setStackTrace(e.getStackTrace());\n      throw wrappedError;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "64f68cb0b8c0b93d37699893b812b37c4b05c939": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6520. Fix warnings from Spotbugs in hadoop-yarn-client. Contributed by Weiwei Yang.\n",
      "commitDate": "01/05/17 6:08 AM",
      "commitName": "64f68cb0b8c0b93d37699893b812b37c4b05c939",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "22/02/17 11:17 AM",
      "commitNameOld": "1a6ca75f3872587fb34c995a4b372b8cd6366d7d",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 67.74,
      "commitsBetweenForRepo": 398,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,36 @@\n       getTimelineDelegationToken() throws IOException, YarnException {\n     try {\n       // Only reachable when both security and timeline service are enabled.\n       if (timelineClient \u003d\u003d null) {\n         synchronized (this) {\n           if (timelineClient \u003d\u003d null) {\n-            timelineClient \u003d createTimelineClient();\n-            timelineClient.init(getConfig());\n-            timelineClient.start();\n+            TimelineClient tlClient \u003d createTimelineClient();\n+            tlClient.init(getConfig());\n+            tlClient.start();\n+            // Assign value to timeline client variable only\n+            // when it is fully initiated. In order to avoid\n+            // other threads to see partially initialized object.\n+            this.timelineClient \u003d tlClient;\n           }\n         }\n       }\n       return timelineClient.getDelegationToken(timelineDTRenewer);\n     } catch (Exception e) {\n       if (timelineServiceBestEffort) {\n         LOG.warn(\"Failed to get delegation token from the timeline server: \"\n             + e.getMessage());\n         return null;\n       }\n       throw e;\n     } catch (NoClassDefFoundError e) {\n       NoClassDefFoundError wrappedError \u003d new NoClassDefFoundError(\n           e.getMessage() + \". It appears that the timeline client \"\n               + \"failed to initiate because an incompatible dependency \"\n               + \"in classpath. If timeline service is optional to this \"\n               + \"client, try to work around by setting \"\n               + YarnConfiguration.TIMELINE_SERVICE_ENABLED\n               + \" to false in client configuration.\");\n       wrappedError.setStackTrace(e.getStackTrace());\n       throw wrappedError;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n    try {\n      // Only reachable when both security and timeline service are enabled.\n      if (timelineClient \u003d\u003d null) {\n        synchronized (this) {\n          if (timelineClient \u003d\u003d null) {\n            TimelineClient tlClient \u003d createTimelineClient();\n            tlClient.init(getConfig());\n            tlClient.start();\n            // Assign value to timeline client variable only\n            // when it is fully initiated. In order to avoid\n            // other threads to see partially initialized object.\n            this.timelineClient \u003d tlClient;\n          }\n        }\n      }\n      return timelineClient.getDelegationToken(timelineDTRenewer);\n    } catch (Exception e) {\n      if (timelineServiceBestEffort) {\n        LOG.warn(\"Failed to get delegation token from the timeline server: \"\n            + e.getMessage());\n        return null;\n      }\n      throw e;\n    } catch (NoClassDefFoundError e) {\n      NoClassDefFoundError wrappedError \u003d new NoClassDefFoundError(\n          e.getMessage() + \". It appears that the timeline client \"\n              + \"failed to initiate because an incompatible dependency \"\n              + \"in classpath. If timeline service is optional to this \"\n              + \"client, try to work around by setting \"\n              + YarnConfiguration.TIMELINE_SERVICE_ENABLED\n              + \" to false in client configuration.\");\n      wrappedError.setStackTrace(e.getStackTrace());\n      throw wrappedError;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "5d339c46f5b16b951afd82afd9e907b9aa2ded9a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6177. Yarn client should exit with an informative error message if an incompatible Jersey library is used at client. Contributed by Weiwei Yang.\n",
      "commitDate": "16/02/17 1:41 PM",
      "commitName": "5d339c46f5b16b951afd82afd9e907b9aa2ded9a",
      "commitAuthor": "Li Lu",
      "commitDateOld": "16/02/17 11:41 AM",
      "commitNameOld": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,32 @@\n       getTimelineDelegationToken() throws IOException, YarnException {\n     try {\n       // Only reachable when both security and timeline service are enabled.\n       if (timelineClient \u003d\u003d null) {\n         synchronized (this) {\n           if (timelineClient \u003d\u003d null) {\n             timelineClient \u003d createTimelineClient();\n             timelineClient.init(getConfig());\n             timelineClient.start();\n           }\n         }\n       }\n       return timelineClient.getDelegationToken(timelineDTRenewer);\n     } catch (Exception e) {\n       if (timelineServiceBestEffort) {\n         LOG.warn(\"Failed to get delegation token from the timeline server: \"\n             + e.getMessage());\n         return null;\n       }\n       throw e;\n+    } catch (NoClassDefFoundError e) {\n+      NoClassDefFoundError wrappedError \u003d new NoClassDefFoundError(\n+          e.getMessage() + \". It appears that the timeline client \"\n+              + \"failed to initiate because an incompatible dependency \"\n+              + \"in classpath. If timeline service is optional to this \"\n+              + \"client, try to work around by setting \"\n+              + YarnConfiguration.TIMELINE_SERVICE_ENABLED\n+              + \" to false in client configuration.\");\n+      wrappedError.setStackTrace(e.getStackTrace());\n+      throw wrappedError;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n    try {\n      // Only reachable when both security and timeline service are enabled.\n      if (timelineClient \u003d\u003d null) {\n        synchronized (this) {\n          if (timelineClient \u003d\u003d null) {\n            timelineClient \u003d createTimelineClient();\n            timelineClient.init(getConfig());\n            timelineClient.start();\n          }\n        }\n      }\n      return timelineClient.getDelegationToken(timelineDTRenewer);\n    } catch (Exception e) {\n      if (timelineServiceBestEffort) {\n        LOG.warn(\"Failed to get delegation token from the timeline server: \"\n            + e.getMessage());\n        return null;\n      }\n      throw e;\n    } catch (NoClassDefFoundError e) {\n      NoClassDefFoundError wrappedError \u003d new NoClassDefFoundError(\n          e.getMessage() + \". It appears that the timeline client \"\n              + \"failed to initiate because an incompatible dependency \"\n              + \"in classpath. If timeline service is optional to this \"\n              + \"client, try to work around by setting \"\n              + YarnConfiguration.TIMELINE_SERVICE_ENABLED\n              + \" to false in client configuration.\");\n      wrappedError.setStackTrace(e.getStackTrace());\n      throw wrappedError;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "37b4acf7cee1f05599a84bbb1ebf07979a71f82f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6137. Yarn client implicitly invoke ATS client which accesses HDFS. Contributed by Li Lu\n",
      "commitDate": "08/02/17 12:59 PM",
      "commitName": "37b4acf7cee1f05599a84bbb1ebf07979a71f82f",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "05/12/16 11:39 AM",
      "commitNameOld": "43ebff2e354142bddcb42755766a965ae8a503a6",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 65.06,
      "commitsBetweenForRepo": 310,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,22 @@\n       getTimelineDelegationToken() throws IOException, YarnException {\n-        try {\n-          return timelineClient.getDelegationToken(timelineDTRenewer);\n-        } catch (Exception e ) {\n-          if (timelineServiceBestEffort) {\n-            LOG.warn(\"Failed to get delegation token from the timeline server: \"\n-                + e.getMessage());\n-            return null;\n+    try {\n+      // Only reachable when both security and timeline service are enabled.\n+      if (timelineClient \u003d\u003d null) {\n+        synchronized (this) {\n+          if (timelineClient \u003d\u003d null) {\n+            timelineClient \u003d createTimelineClient();\n+            timelineClient.init(getConfig());\n+            timelineClient.start();\n           }\n-          throw e;\n         }\n+      }\n+      return timelineClient.getDelegationToken(timelineDTRenewer);\n+    } catch (Exception e) {\n+      if (timelineServiceBestEffort) {\n+        LOG.warn(\"Failed to get delegation token from the timeline server: \"\n+            + e.getMessage());\n+        return null;\n+      }\n+      throw e;\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n    try {\n      // Only reachable when both security and timeline service are enabled.\n      if (timelineClient \u003d\u003d null) {\n        synchronized (this) {\n          if (timelineClient \u003d\u003d null) {\n            timelineClient \u003d createTimelineClient();\n            timelineClient.init(getConfig());\n            timelineClient.start();\n          }\n        }\n      }\n      return timelineClient.getDelegationToken(timelineDTRenewer);\n    } catch (Exception e) {\n      if (timelineServiceBestEffort) {\n        LOG.warn(\"Failed to get delegation token from the timeline server: \"\n            + e.getMessage());\n        return null;\n      }\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "6f10434a5ad965d50352602ce31a9fce353cb90c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3144. Configuration for making delegation token failures to timeline server not-fatal. Contributed by Jonathan Eagles\n",
      "commitDate": "06/02/15 12:55 PM",
      "commitName": "6f10434a5ad965d50352602ce31a9fce353cb90c",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "04/02/15 4:02 PM",
      "commitNameOld": "30510cff75d3bf4c030c215318b5611600a5b4ee",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 1.87,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,12 @@\n       getTimelineDelegationToken() throws IOException, YarnException {\n-    return timelineClient.getDelegationToken(timelineDTRenewer);\n+        try {\n+          return timelineClient.getDelegationToken(timelineDTRenewer);\n+        } catch (Exception e ) {\n+          if (timelineServiceBestEffort) {\n+            LOG.warn(\"Failed to get delegation token from the timeline server: \"\n+                + e.getMessage());\n+            return null;\n+          }\n+          throw e;\n+        }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n        try {\n          return timelineClient.getDelegationToken(timelineDTRenewer);\n        } catch (Exception e ) {\n          if (timelineServiceBestEffort) {\n            LOG.warn(\"Failed to get delegation token from the timeline server: \"\n                + e.getMessage());\n            return null;\n          }\n          throw e;\n        }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "71fbb474f531f60c5d908cf724f18f90dfd5fa9f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2798. Fixed YarnClient to populate the renewer correctly for Timeline delegation tokens. Contributed by Zhijie Shen.\n",
      "commitDate": "03/11/14 12:49 PM",
      "commitName": "71fbb474f531f60c5d908cf724f18f90dfd5fa9f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "31/10/14 1:16 PM",
      "commitNameOld": "1b4be918664b09272b120bc42de3e5fc02d79047",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 3.02,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,3 @@\n       getTimelineDelegationToken() throws IOException, YarnException {\n-    // Parse the RM daemon user if it exists in the config\n-    String rmPrincipal \u003d getConfig().get(YarnConfiguration.RM_PRINCIPAL);\n-    String renewer \u003d null;\n-    if (rmPrincipal !\u003d null \u0026\u0026 rmPrincipal.length() \u003e 0) {\n-      HadoopKerberosName renewerKrbName \u003d new HadoopKerberosName(rmPrincipal);\n-      renewer \u003d renewerKrbName.getShortName();\n-    }\n-    return timelineClient.getDelegationToken(renewer);\n+    return timelineClient.getDelegationToken(timelineDTRenewer);\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n    return timelineClient.getDelegationToken(timelineDTRenewer);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "1b4be918664b09272b120bc42de3e5fc02d79047": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2770. Added functionality to renew/cancel TimeLineDelegationToken. Contributed by Zhijie Shen\n",
      "commitDate": "31/10/14 1:16 PM",
      "commitName": "1b4be918664b09272b120bc42de3e5fc02d79047",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/10/14 10:59 PM",
      "commitNameOld": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.6,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,10 @@\n       getTimelineDelegationToken() throws IOException, YarnException {\n-    return timelineClient.getDelegationToken(\n-            UserGroupInformation.getCurrentUser().getUserName());\n+    // Parse the RM daemon user if it exists in the config\n+    String rmPrincipal \u003d getConfig().get(YarnConfiguration.RM_PRINCIPAL);\n+    String renewer \u003d null;\n+    if (rmPrincipal !\u003d null \u0026\u0026 rmPrincipal.length() \u003e 0) {\n+      HadoopKerberosName renewerKrbName \u003d new HadoopKerberosName(rmPrincipal);\n+      renewer \u003d renewerKrbName.getShortName();\n+    }\n+    return timelineClient.getDelegationToken(renewer);\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n    // Parse the RM daemon user if it exists in the config\n    String rmPrincipal \u003d getConfig().get(YarnConfiguration.RM_PRINCIPAL);\n    String renewer \u003d null;\n    if (rmPrincipal !\u003d null \u0026\u0026 rmPrincipal.length() \u003e 0) {\n      HadoopKerberosName renewerKrbName \u003d new HadoopKerberosName(rmPrincipal);\n      renewer \u003d renewerKrbName.getShortName();\n    }\n    return timelineClient.getDelegationToken(renewer);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "eb92cc67dfaa51212fc5315b8db99effd046a154": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2563. Fixed YarnClient to call getTimeLineDelegationToken only if the Token is not present. Contributed by Zhijie Shen\n",
      "commitDate": "18/09/14 2:40 PM",
      "commitName": "eb92cc67dfaa51212fc5315b8db99effd046a154",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,4 @@\n+      getTimelineDelegationToken() throws IOException, YarnException {\n+    return timelineClient.getDelegationToken(\n+            UserGroupInformation.getCurrentUser().getUserName());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      getTimelineDelegationToken() throws IOException, YarnException {\n    return timelineClient.getDelegationToken(\n            UserGroupInformation.getCurrentUser().getUserName());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java"
    }
  }
}