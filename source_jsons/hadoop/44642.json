{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeAttributesCLI.java",
  "functionName": "buildOptions",
  "functionId": "buildOptions",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.java",
  "functionStartLine": 448,
  "functionEndLine": 489,
  "numCommitsSeen": 4,
  "timeTaken": 1139,
  "changeHistory": [
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1"
  ],
  "changeHistoryShort": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthor": "Naganarasimha",
      "diff": "@@ -0,0 +1,47 @@\n+    public Options buildOptions() {\n+      Options adminOptions \u003d new Options();\n+      Option replace \u003d new Option(REPLACE, true,\n+          \"Replace the node to attributes mapping information at the\"\n+              + \" ResourceManager with the new mapping. Currently\"\n+              + \" supported attribute type. And string is the default\"\n+              + \" type too. Attribute value if not specified for string\"\n+              + \" type value will be considered as empty string.\"\n+              + \" Replaced node-attributes should not violate the\"\n+              + \" existing attribute to attribute type mapping.\");\n+      replace.setArgName(\"\\\"node1:attribute[(type)][\u003dvalue],attribute1[\u003dvalue],\"\n+          + \"attribute2  node2:attribute2[\u003dvalue],attribute3\\\"\");\n+      replace.setArgs(1);\n+      adminOptions.addOption(replace);\n+\n+      Option add \u003d new Option(ADD, true,\n+          \"Adds or updates the node to attributes mapping information\"\n+              + \" at the ResourceManager. Currently supported attribute\"\n+              + \" type is string. And string is the default type too.\"\n+              + \" Attribute value if not specified for string type\"\n+              + \" value will be considered as empty string. Added or\"\n+              + \" updated node-attributes should not violate the\"\n+              + \" existing attribute to attribute type mapping.\");\n+      add.setArgName(\"\\\"node1:attribute[(type)][\u003dvalue],attribute1[\u003dvalue],\"\n+          + \"attribute2  node2:attribute2[\u003dvalue],attribute3\\\"\");\n+      add.setArgs(1);\n+      adminOptions.addOption(add);\n+\n+      Option remove \u003d new Option(REMOVE, true,\n+          \"Removes the specified node to attributes mapping\"\n+              + \" information at the ResourceManager\");\n+      remove.setArgName(\"\\\"node1:attribute,attribute1 node2:attribute2\\\"\");\n+      remove.setArgs(1);\n+      adminOptions.addOption(remove);\n+\n+      adminOptions.addOption(new Option(FAILUNKNOWNNODES, false,\n+          \"Can be used optionally along with [add,remove,replace] options. \"\n+              + \"When set, command will fail if specified nodes are unknown.\"));\n+\n+      // DEFINE ORDER\n+      addOrder(REPLACE);\n+      addOrder(ADD);\n+      addOrder(REMOVE);\n+      addOrder(FAILUNKNOWNNODES);\n+\n+      return adminOptions;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public Options buildOptions() {\n      Options adminOptions \u003d new Options();\n      Option replace \u003d new Option(REPLACE, true,\n          \"Replace the node to attributes mapping information at the\"\n              + \" ResourceManager with the new mapping. Currently\"\n              + \" supported attribute type. And string is the default\"\n              + \" type too. Attribute value if not specified for string\"\n              + \" type value will be considered as empty string.\"\n              + \" Replaced node-attributes should not violate the\"\n              + \" existing attribute to attribute type mapping.\");\n      replace.setArgName(\"\\\"node1:attribute[(type)][\u003dvalue],attribute1[\u003dvalue],\"\n          + \"attribute2  node2:attribute2[\u003dvalue],attribute3\\\"\");\n      replace.setArgs(1);\n      adminOptions.addOption(replace);\n\n      Option add \u003d new Option(ADD, true,\n          \"Adds or updates the node to attributes mapping information\"\n              + \" at the ResourceManager. Currently supported attribute\"\n              + \" type is string. And string is the default type too.\"\n              + \" Attribute value if not specified for string type\"\n              + \" value will be considered as empty string. Added or\"\n              + \" updated node-attributes should not violate the\"\n              + \" existing attribute to attribute type mapping.\");\n      add.setArgName(\"\\\"node1:attribute[(type)][\u003dvalue],attribute1[\u003dvalue],\"\n          + \"attribute2  node2:attribute2[\u003dvalue],attribute3\\\"\");\n      add.setArgs(1);\n      adminOptions.addOption(add);\n\n      Option remove \u003d new Option(REMOVE, true,\n          \"Removes the specified node to attributes mapping\"\n              + \" information at the ResourceManager\");\n      remove.setArgName(\"\\\"node1:attribute,attribute1 node2:attribute2\\\"\");\n      remove.setArgs(1);\n      adminOptions.addOption(remove);\n\n      adminOptions.addOption(new Option(FAILUNKNOWNNODES, false,\n          \"Can be used optionally along with [add,remove,replace] options. \"\n              + \"When set, command will fail if specified nodes are unknown.\"));\n\n      // DEFINE ORDER\n      addOrder(REPLACE);\n      addOrder(ADD);\n      addOrder(REMOVE);\n      addOrder(FAILUNKNOWNNODES);\n\n      return adminOptions;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.java"
    }
  }
}