{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbRMStateStore.java",
  "functionName": "loadRMApps",
  "functionId": "loadRMApps___state-RMState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
  "functionStartLine": 375,
  "functionEndLine": 401,
  "numCommitsSeen": 19,
  "timeTaken": 1643,
  "changeHistory": [
    "76900b4f5b7ad8d11baf505abc43f7b24d364071",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f"
  ],
  "changeHistoryShort": {
    "76900b4f5b7ad8d11baf505abc43f7b24d364071": "Ybodychange",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76900b4f5b7ad8d11baf505abc43f7b24d364071": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10189. Code cleanup in LeveldbRMStateStore. Contributed by Benjamin Teke\n",
      "commitDate": "18/04/20 12:57 AM",
      "commitName": "76900b4f5b7ad8d11baf505abc43f7b24d364071",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 399.36,
      "commitsBetweenForRepo": 2266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,27 @@\n   private void loadRMApps(RMState state) throws IOException {\n     int numApps \u003d 0;\n     int numAppAttempts \u003d 0;\n-    LeveldbIterator iter \u003d null;\n-    try {\n-      iter \u003d new LeveldbIterator(db);\n+    try (LeveldbIterator iter \u003d new LeveldbIterator(db)) {\n       iter.seek(bytes(RM_APP_KEY_PREFIX));\n       while (iter.hasNext()) {\n         Entry\u003cbyte[],byte[]\u003e entry \u003d iter.next();\n         String key \u003d asString(entry.getKey());\n         if (!key.startsWith(RM_APP_KEY_PREFIX)) {\n           break;\n         }\n \n         String appIdStr \u003d key.substring(RM_APP_ROOT.length() + 1);\n         if (appIdStr.contains(SEPARATOR)) {\n           LOG.warn(\"Skipping extraneous data \" + key);\n           continue;\n         }\n \n         numAppAttempts +\u003d loadRMApp(state, iter, appIdStr, entry.getValue());\n         ++numApps;\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n-    } finally {\n-      if (iter !\u003d null) {\n-        iter.close();\n-      }\n     }\n     LOG.info(\"Recovered \" + numApps + \" applications and \" + numAppAttempts\n         + \" application attempts\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadRMApps(RMState state) throws IOException {\n    int numApps \u003d 0;\n    int numAppAttempts \u003d 0;\n    try (LeveldbIterator iter \u003d new LeveldbIterator(db)) {\n      iter.seek(bytes(RM_APP_KEY_PREFIX));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.next();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(RM_APP_KEY_PREFIX)) {\n          break;\n        }\n\n        String appIdStr \u003d key.substring(RM_APP_ROOT.length() + 1);\n        if (appIdStr.contains(SEPARATOR)) {\n          LOG.warn(\"Skipping extraneous data \" + key);\n          continue;\n        }\n\n        numAppAttempts +\u003d loadRMApp(state, iter, appIdStr, entry.getValue());\n        ++numApps;\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n    LOG.info(\"Recovered \" + numApps + \" applications and \" + numAppAttempts\n        + \" application attempts\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
      "extendedDetails": {}
    },
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2765. Added leveldb-based implementation for RMStateStore. Contributed by Jason Lowe\n",
      "commitDate": "01/12/14 4:38 PM",
      "commitName": "a7fba0bc28764e0fb36c335ea60cc58079fe007f",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,33 @@\n+  private void loadRMApps(RMState state) throws IOException {\n+    int numApps \u003d 0;\n+    int numAppAttempts \u003d 0;\n+    LeveldbIterator iter \u003d null;\n+    try {\n+      iter \u003d new LeveldbIterator(db);\n+      iter.seek(bytes(RM_APP_KEY_PREFIX));\n+      while (iter.hasNext()) {\n+        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.next();\n+        String key \u003d asString(entry.getKey());\n+        if (!key.startsWith(RM_APP_KEY_PREFIX)) {\n+          break;\n+        }\n+\n+        String appIdStr \u003d key.substring(RM_APP_ROOT.length() + 1);\n+        if (appIdStr.contains(SEPARATOR)) {\n+          LOG.warn(\"Skipping extraneous data \" + key);\n+          continue;\n+        }\n+\n+        numAppAttempts +\u003d loadRMApp(state, iter, appIdStr, entry.getValue());\n+        ++numApps;\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    } finally {\n+      if (iter !\u003d null) {\n+        iter.close();\n+      }\n+    }\n+    LOG.info(\"Recovered \" + numApps + \" applications and \" + numAppAttempts\n+        + \" application attempts\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadRMApps(RMState state) throws IOException {\n    int numApps \u003d 0;\n    int numAppAttempts \u003d 0;\n    LeveldbIterator iter \u003d null;\n    try {\n      iter \u003d new LeveldbIterator(db);\n      iter.seek(bytes(RM_APP_KEY_PREFIX));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.next();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(RM_APP_KEY_PREFIX)) {\n          break;\n        }\n\n        String appIdStr \u003d key.substring(RM_APP_ROOT.length() + 1);\n        if (appIdStr.contains(SEPARATOR)) {\n          LOG.warn(\"Skipping extraneous data \" + key);\n          continue;\n        }\n\n        numAppAttempts +\u003d loadRMApp(state, iter, appIdStr, entry.getValue());\n        ++numApps;\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      if (iter !\u003d null) {\n        iter.close();\n      }\n    }\n    LOG.info(\"Recovered \" + numApps + \" applications and \" + numAppAttempts\n        + \" application attempts\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java"
    }
  }
}