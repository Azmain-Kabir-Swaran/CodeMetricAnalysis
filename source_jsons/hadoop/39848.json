{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSSchedulerConfigurationStore.java",
  "functionName": "getConfigurationFromFileSystem",
  "functionId": "getConfigurationFromFileSystem",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/FSSchedulerConfigurationStore.java",
  "functionStartLine": 213,
  "functionEndLine": 234,
  "numCommitsSeen": 10,
  "timeTaken": 1003,
  "changeHistory": [
    "1606dad133de0dbee59175509a22994ec570ea41"
  ],
  "changeHistoryShort": {
    "1606dad133de0dbee59175509a22994ec570ea41": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1606dad133de0dbee59175509a22994ec570ea41": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7497. Add file system based scheduler configuration store. Contributed by Jiandan Yang.\n",
      "commitDate": "30/03/18 6:41 AM",
      "commitName": "1606dad133de0dbee59175509a22994ec570ea41",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,22 @@\n+  private Configuration getConfigurationFromFileSystem() throws IOException {\n+    long start \u003d Time.monotonicNow();\n+\n+    Configuration conf \u003d new Configuration(false);\n+    InputStream configInputStream \u003d getConfigFileInputStream();\n+    if (configInputStream \u003d\u003d null) {\n+      throw new IOException(\n+          \"no capacity scheduler file in \" + this.schedulerConfDir);\n+    }\n+\n+    conf.addResource(configInputStream);\n+    Configuration result \u003d new Configuration(false);\n+    for (Map.Entry\u003cString, String\u003e entry : conf) {\n+      result.set(entry.getKey(), entry.getValue());\n+    }\n+    LOG.info(\"upload conf from fileSystem took \"\n+            + (Time.monotonicNow() - start) + \" ms\");\n+\n+    //for ha transition, local schedConf may be old one.\n+    this.schedConf \u003d result;\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Configuration getConfigurationFromFileSystem() throws IOException {\n    long start \u003d Time.monotonicNow();\n\n    Configuration conf \u003d new Configuration(false);\n    InputStream configInputStream \u003d getConfigFileInputStream();\n    if (configInputStream \u003d\u003d null) {\n      throw new IOException(\n          \"no capacity scheduler file in \" + this.schedulerConfDir);\n    }\n\n    conf.addResource(configInputStream);\n    Configuration result \u003d new Configuration(false);\n    for (Map.Entry\u003cString, String\u003e entry : conf) {\n      result.set(entry.getKey(), entry.getValue());\n    }\n    LOG.info(\"upload conf from fileSystem took \"\n            + (Time.monotonicNow() - start) + \" ms\");\n\n    //for ha transition, local schedConf may be old one.\n    this.schedConf \u003d result;\n    return result;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/FSSchedulerConfigurationStore.java"
    }
  }
}