{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupInformation.java",
  "functionName": "getUGIFromSubject",
  "functionId": "getUGIFromSubject___subject-Subject",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
  "functionStartLine": 629,
  "functionEndLine": 642,
  "numCommitsSeen": 104,
  "timeTaken": 2741,
  "changeHistory": [
    "59cf7588779145ad5850ad63426743dfe03d8347",
    "2e853be6577a5b98fd860e6d64f89ca6d160514a",
    "943d3f641cd7256ee6c9c0fe72314aee7ce15e91"
  ],
  "changeHistoryShort": {
    "59cf7588779145ad5850ad63426743dfe03d8347": "Ybodychange",
    "2e853be6577a5b98fd860e6d64f89ca6d160514a": "Ybodychange",
    "943d3f641cd7256ee6c9c0fe72314aee7ce15e91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "59cf7588779145ad5850ad63426743dfe03d8347": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
      "commitDate": "23/02/18 11:10 AM",
      "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "27/12/17 11:17 PM",
      "commitNameOld": "d31c9d8c495794a803fb20729b5ed6b374e23eb4",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 57.5,
      "commitsBetweenForRepo": 327,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,14 @@\n   public static UserGroupInformation getUGIFromSubject(Subject subject)\n       throws IOException {\n     if (subject \u003d\u003d null) {\n       throw new KerberosAuthException(SUBJECT_MUST_NOT_BE_NULL);\n     }\n \n     if (subject.getPrincipals(KerberosPrincipal.class).isEmpty()) {\n       throw new KerberosAuthException(SUBJECT_MUST_CONTAIN_PRINCIPAL);\n     }\n \n-    KerberosPrincipal principal \u003d\n-        subject.getPrincipals(KerberosPrincipal.class).iterator().next();\n-\n-    User ugiUser \u003d new User(principal.getName(),\n-        AuthenticationMethod.KERBEROS, null);\n-    subject.getPrincipals().add(ugiUser);\n-    UserGroupInformation ugi \u003d new UserGroupInformation(subject);\n-    ugi.setLogin(null);\n-    ugi.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n-    return ugi;\n+    // null params indicate external subject login.  no login context will\n+    // be attached.\n+    return doSubjectLogin(subject, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static UserGroupInformation getUGIFromSubject(Subject subject)\n      throws IOException {\n    if (subject \u003d\u003d null) {\n      throw new KerberosAuthException(SUBJECT_MUST_NOT_BE_NULL);\n    }\n\n    if (subject.getPrincipals(KerberosPrincipal.class).isEmpty()) {\n      throw new KerberosAuthException(SUBJECT_MUST_CONTAIN_PRINCIPAL);\n    }\n\n    // null params indicate external subject login.  no login context will\n    // be attached.\n    return doSubjectLogin(subject, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "2e853be6577a5b98fd860e6d64f89ca6d160514a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13627. Have an explicit KerberosAuthException for UGI to throw, text from public constants. Contributed by Xiao Chen.\n",
      "commitDate": "07/10/16 1:46 PM",
      "commitName": "2e853be6577a5b98fd860e6d64f89ca6d160514a",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "05/10/16 5:36 PM",
      "commitNameOld": "c5ca2169151a5eec57152775789b6f53664e102c",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 1.84,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public static UserGroupInformation getUGIFromSubject(Subject subject)\n       throws IOException {\n     if (subject \u003d\u003d null) {\n-      throw new IOException(\"Subject must not be null\");\n+      throw new KerberosAuthException(SUBJECT_MUST_NOT_BE_NULL);\n     }\n \n     if (subject.getPrincipals(KerberosPrincipal.class).isEmpty()) {\n-      throw new IOException(\"Provided Subject must contain a KerberosPrincipal\");\n+      throw new KerberosAuthException(SUBJECT_MUST_CONTAIN_PRINCIPAL);\n     }\n \n     KerberosPrincipal principal \u003d\n         subject.getPrincipals(KerberosPrincipal.class).iterator().next();\n \n     User ugiUser \u003d new User(principal.getName(),\n         AuthenticationMethod.KERBEROS, null);\n     subject.getPrincipals().add(ugiUser);\n     UserGroupInformation ugi \u003d new UserGroupInformation(subject);\n     ugi.setLogin(null);\n     ugi.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n     return ugi;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static UserGroupInformation getUGIFromSubject(Subject subject)\n      throws IOException {\n    if (subject \u003d\u003d null) {\n      throw new KerberosAuthException(SUBJECT_MUST_NOT_BE_NULL);\n    }\n\n    if (subject.getPrincipals(KerberosPrincipal.class).isEmpty()) {\n      throw new KerberosAuthException(SUBJECT_MUST_CONTAIN_PRINCIPAL);\n    }\n\n    KerberosPrincipal principal \u003d\n        subject.getPrincipals(KerberosPrincipal.class).iterator().next();\n\n    User ugiUser \u003d new User(principal.getName(),\n        AuthenticationMethod.KERBEROS, null);\n    subject.getPrincipals().add(ugiUser);\n    UserGroupInformation ugi \u003d new UserGroupInformation(subject);\n    ugi.setLogin(null);\n    ugi.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n    return ugi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "943d3f641cd7256ee6c9c0fe72314aee7ce15e91": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10342. Add a new method to UGI to use a Kerberos login subject to\nbuild a new UGI. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 1:25 PM",
      "commitName": "943d3f641cd7256ee6c9c0fe72314aee7ce15e91",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,21 @@\n+  public static UserGroupInformation getUGIFromSubject(Subject subject)\n+      throws IOException {\n+    if (subject \u003d\u003d null) {\n+      throw new IOException(\"Subject must not be null\");\n+    }\n+\n+    if (subject.getPrincipals(KerberosPrincipal.class).isEmpty()) {\n+      throw new IOException(\"Provided Subject must contain a KerberosPrincipal\");\n+    }\n+\n+    KerberosPrincipal principal \u003d\n+        subject.getPrincipals(KerberosPrincipal.class).iterator().next();\n+\n+    User ugiUser \u003d new User(principal.getName(),\n+        AuthenticationMethod.KERBEROS, null);\n+    subject.getPrincipals().add(ugiUser);\n+    UserGroupInformation ugi \u003d new UserGroupInformation(subject);\n+    ugi.setLogin(null);\n+    ugi.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n+    return ugi;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static UserGroupInformation getUGIFromSubject(Subject subject)\n      throws IOException {\n    if (subject \u003d\u003d null) {\n      throw new IOException(\"Subject must not be null\");\n    }\n\n    if (subject.getPrincipals(KerberosPrincipal.class).isEmpty()) {\n      throw new IOException(\"Provided Subject must contain a KerberosPrincipal\");\n    }\n\n    KerberosPrincipal principal \u003d\n        subject.getPrincipals(KerberosPrincipal.class).iterator().next();\n\n    User ugiUser \u003d new User(principal.getName(),\n        AuthenticationMethod.KERBEROS, null);\n    subject.getPrincipals().add(ugiUser);\n    UserGroupInformation ugi \u003d new UserGroupInformation(subject);\n    ugi.setLogin(null);\n    ugi.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n    return ugi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
    }
  }
}