{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataChecksum.java",
  "functionName": "calculateChunkedSums",
  "functionId": "calculateChunkedSums___data-byte[]__dataOffset-int__dataLength-int__sums-byte[]__sumsOffset-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
  "functionStartLine": 529,
  "functionEndLine": 553,
  "numCommitsSeen": 28,
  "timeTaken": 1643,
  "changeHistory": [
    "ab638e77b811d9592470f7d342cd11a66efbbf0d",
    "e446497cd1e9b892659e9cfb79d37f33a4e39de0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "22fa0e43e37478707963a86f66e95d2a6dddf812"
  ],
  "changeHistoryShort": {
    "ab638e77b811d9592470f7d342cd11a66efbbf0d": "Ybodychange",
    "e446497cd1e9b892659e9cfb79d37f33a4e39de0": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "22fa0e43e37478707963a86f66e95d2a6dddf812": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab638e77b811d9592470f7d342cd11a66efbbf0d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6865. Byte array native checksumming on client side. Contributed by James Thomas.\n",
      "commitDate": "28/08/14 4:44 PM",
      "commitName": "ab638e77b811d9592470f7d342cd11a66efbbf0d",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "18/08/14 11:02 AM",
      "commitNameOld": "e446497cd1e9b892659e9cfb79d37f33a4e39de0",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 10.24,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public void calculateChunkedSums(\n       byte[] data, int dataOffset, int dataLength,\n       byte[] sums, int sumsOffset) {\n+    if (type.size \u003d\u003d 0) return;\n \n     if (NativeCrc32.isAvailable()) {\n       NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum, type.id,\n           sums, sumsOffset, data, dataOffset, dataLength);\n       return;\n     }\n \n     int remaining \u003d dataLength;\n     while (remaining \u003e 0) {\n       int n \u003d Math.min(remaining, bytesPerChecksum);\n       summer.reset();\n       summer.update(data, dataOffset, n);\n       dataOffset +\u003d n;\n       remaining -\u003d n;\n       long calculated \u003d summer.getValue();\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n       sums[sumsOffset++] \u003d (byte) (calculated);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void calculateChunkedSums(\n      byte[] data, int dataOffset, int dataLength,\n      byte[] sums, int sumsOffset) {\n    if (type.size \u003d\u003d 0) return;\n\n    if (NativeCrc32.isAvailable()) {\n      NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum, type.id,\n          sums, sumsOffset, data, dataOffset, dataLength);\n      return;\n    }\n\n    int remaining \u003d dataLength;\n    while (remaining \u003e 0) {\n      int n \u003d Math.min(remaining, bytesPerChecksum);\n      summer.reset();\n      summer.update(data, dataOffset, n);\n      dataOffset +\u003d n;\n      remaining -\u003d n;\n      long calculated \u003d summer.getValue();\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n      sums[sumsOffset++] \u003d (byte) (calculated);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
      "extendedDetails": {}
    },
    "e446497cd1e9b892659e9cfb79d37f33a4e39de0": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-6561. org.apache.hadoop.util.DataChecksum should support native checksumming (James Thomas via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618680 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/14 11:02 AM",
      "commitName": "e446497cd1e9b892659e9cfb79d37f33a4e39de0",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6561. org.apache.hadoop.util.DataChecksum should support native checksumming (James Thomas via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618680 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/14 11:02 AM",
          "commitName": "e446497cd1e9b892659e9cfb79d37f33a4e39de0",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "13/08/14 9:29 PM",
          "commitNameOld": "bd79a4b9263726f4642c94bff689dbc109592a70",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 4.56,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,24 @@\n-  private void calculateChunkedSums(\n+  public void calculateChunkedSums(\n       byte[] data, int dataOffset, int dataLength,\n       byte[] sums, int sumsOffset) {\n \n+    if (NativeCrc32.isAvailable()) {\n+      NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum, type.id,\n+          sums, sumsOffset, data, dataOffset, dataLength);\n+      return;\n+    }\n+\n     int remaining \u003d dataLength;\n     while (remaining \u003e 0) {\n       int n \u003d Math.min(remaining, bytesPerChecksum);\n       summer.reset();\n       summer.update(data, dataOffset, n);\n       dataOffset +\u003d n;\n       remaining -\u003d n;\n       long calculated \u003d summer.getValue();\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n       sums[sumsOffset++] \u003d (byte) (calculated);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void calculateChunkedSums(\n      byte[] data, int dataOffset, int dataLength,\n      byte[] sums, int sumsOffset) {\n\n    if (NativeCrc32.isAvailable()) {\n      NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum, type.id,\n          sums, sumsOffset, data, dataOffset, dataLength);\n      return;\n    }\n\n    int remaining \u003d dataLength;\n    while (remaining \u003e 0) {\n      int n \u003d Math.min(remaining, bytesPerChecksum);\n      summer.reset();\n      summer.update(data, dataOffset, n);\n      dataOffset +\u003d n;\n      remaining -\u003d n;\n      long calculated \u003d summer.getValue();\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n      sums[sumsOffset++] \u003d (byte) (calculated);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6561. org.apache.hadoop.util.DataChecksum should support native checksumming (James Thomas via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618680 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/14 11:02 AM",
          "commitName": "e446497cd1e9b892659e9cfb79d37f33a4e39de0",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "13/08/14 9:29 PM",
          "commitNameOld": "bd79a4b9263726f4642c94bff689dbc109592a70",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 4.56,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,24 @@\n-  private void calculateChunkedSums(\n+  public void calculateChunkedSums(\n       byte[] data, int dataOffset, int dataLength,\n       byte[] sums, int sumsOffset) {\n \n+    if (NativeCrc32.isAvailable()) {\n+      NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum, type.id,\n+          sums, sumsOffset, data, dataOffset, dataLength);\n+      return;\n+    }\n+\n     int remaining \u003d dataLength;\n     while (remaining \u003e 0) {\n       int n \u003d Math.min(remaining, bytesPerChecksum);\n       summer.reset();\n       summer.update(data, dataOffset, n);\n       dataOffset +\u003d n;\n       remaining -\u003d n;\n       long calculated \u003d summer.getValue();\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n       sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n       sums[sumsOffset++] \u003d (byte) (calculated);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void calculateChunkedSums(\n      byte[] data, int dataOffset, int dataLength,\n      byte[] sums, int sumsOffset) {\n\n    if (NativeCrc32.isAvailable()) {\n      NativeCrc32.calculateChunkedSumsByteArray(bytesPerChecksum, type.id,\n          sums, sumsOffset, data, dataOffset, dataLength);\n      return;\n    }\n\n    int remaining \u003d dataLength;\n    while (remaining \u003e 0) {\n      int n \u003d Math.min(remaining, bytesPerChecksum);\n      summer.reset();\n      summer.update(data, dataOffset, n);\n      dataOffset +\u003d n;\n      remaining -\u003d n;\n      long calculated \u003d summer.getValue();\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n      sums[sumsOffset++] \u003d (byte) (calculated);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void calculateChunkedSums(\n      byte[] data, int dataOffset, int dataLength,\n      byte[] sums, int sumsOffset) {\n\n    int remaining \u003d dataLength;\n    while (remaining \u003e 0) {\n      int n \u003d Math.min(remaining, bytesPerChecksum);\n      summer.reset();\n      summer.update(data, dataOffset, n);\n      dataOffset +\u003d n;\n      remaining -\u003d n;\n      long calculated \u003d summer.getValue();\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n      sums[sumsOffset++] \u003d (byte) (calculated);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void calculateChunkedSums(\n      byte[] data, int dataOffset, int dataLength,\n      byte[] sums, int sumsOffset) {\n\n    int remaining \u003d dataLength;\n    while (remaining \u003e 0) {\n      int n \u003d Math.min(remaining, bytesPerChecksum);\n      summer.reset();\n      summer.update(data, dataOffset, n);\n      dataOffset +\u003d n;\n      remaining -\u003d n;\n      long calculated \u003d summer.getValue();\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n      sums[sumsOffset++] \u003d (byte) (calculated);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/DataChecksum.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DataChecksum.java"
      }
    },
    "22fa0e43e37478707963a86f66e95d2a6dddf812": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7444. Add Checksum API to verify and calculate checksums \"in bulk\". Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1146111 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/07/11 9:12 AM",
      "commitName": "22fa0e43e37478707963a86f66e95d2a6dddf812",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  private void calculateChunkedSums(\n+      byte[] data, int dataOffset, int dataLength,\n+      byte[] sums, int sumsOffset) {\n+\n+    int remaining \u003d dataLength;\n+    while (remaining \u003e 0) {\n+      int n \u003d Math.min(remaining, bytesPerChecksum);\n+      summer.reset();\n+      summer.update(data, dataOffset, n);\n+      dataOffset +\u003d n;\n+      remaining -\u003d n;\n+      long calculated \u003d summer.getValue();\n+      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n+      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n+      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n+      sums[sumsOffset++] \u003d (byte) (calculated);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void calculateChunkedSums(\n      byte[] data, int dataOffset, int dataLength,\n      byte[] sums, int sumsOffset) {\n\n    int remaining \u003d dataLength;\n    while (remaining \u003e 0) {\n      int n \u003d Math.min(remaining, bytesPerChecksum);\n      summer.reset();\n      summer.update(data, dataOffset, n);\n      dataOffset +\u003d n;\n      remaining -\u003d n;\n      long calculated \u003d summer.getValue();\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 24);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 16);\n      sums[sumsOffset++] \u003d (byte) (calculated \u003e\u003e 8);\n      sums[sumsOffset++] \u003d (byte) (calculated);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/util/DataChecksum.java"
    }
  }
}