{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FailoverController.java",
  "functionName": "failover",
  "functionId": "failover___fromSvc-HAServiceTarget__toSvc-HAServiceTarget__forceFence-boolean__forceActive-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
  "functionStartLine": 198,
  "functionEndLine": 260,
  "numCommitsSeen": 50,
  "timeTaken": 2182,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "ccaf036662e22da14583942054898c99fa51dae5",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
    "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
    "578f413778a6f005a35d18d7f015df128aeded5b",
    "840df19ceecca1be26c572da2afe2f4d5f958b24",
    "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
    "90ea037d21be08821fc9c95b80bec1e1078d79cc",
    "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
    "68843484448fcf45e2c48bed2426d9844ee8128c",
    "72207596be4b293a44607003fa68c4e413e1baaf",
    "fb9cdcfa60cb641faded2d3843c81e969ac33147"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "ccaf036662e22da14583942054898c99fa51dae5": "Ybodychange",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": "Ybodychange",
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529": "Ymultichange(Ymodifierchange,Ybodychange)",
    "978404d1a83ecaee0ebed3a8ce16601dcfe4c076": "Ybodychange",
    "578f413778a6f005a35d18d7f015df128aeded5b": "Ybodychange",
    "840df19ceecca1be26c572da2afe2f4d5f958b24": "Ymultichange(Yparameterchange,Ybodychange)",
    "39775dca68643b37a3b9a5ae7bc8eea1418f60d1": "Ymultichange(Yparameterchange,Ybodychange)",
    "90ea037d21be08821fc9c95b80bec1e1078d79cc": "Ymultichange(Yparameterchange,Ybodychange)",
    "4324e1bcd78a98e2fb92c81ee959e25b4193da4f": "Ymultichange(Yparameterchange,Ybodychange)",
    "68843484448fcf45e2c48bed2426d9844ee8128c": "Ymultichange(Yparameterchange,Ybodychange)",
    "72207596be4b293a44607003fa68c4e413e1baaf": "Ybodychange",
    "fb9cdcfa60cb641faded2d3843c81e969ac33147": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,63 @@\n   public void failover(HAServiceTarget fromSvc,\n                        HAServiceTarget toSvc,\n                        boolean forceFence,\n                        boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n         \"failover requires a fencer\");\n     preFailoverChecks(fromSvc, toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     \n     if (tryGracefulFence(fromSvc)) {\n       tryFence \u003d forceFence;\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(\n           toSvc.getProxy(conf, rpcTimeoutToNewActive),\n           createReqInfo());\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n-          sfe.getMessage() + \"). Failing back.\");\n+      LOG.error(\"Unable to make {} active ({}). Failing back.\",\n+          toSvc, sfe.getMessage());\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n-      LOG.error(\"Unable to make \" + toSvc +\n-          \" active (unable to connect). Failing back.\", ioe);\n+      LOG.error(\"Unable to make {} active (unable to connect). Failing back.\",\n+          toSvc, ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n           failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.error(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void failover(HAServiceTarget fromSvc,\n                       HAServiceTarget toSvc,\n                       boolean forceFence,\n                       boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(fromSvc, toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    \n    if (tryGracefulFence(fromSvc)) {\n      tryFence \u003d forceFence;\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(\n          toSvc.getProxy(conf, rpcTimeoutToNewActive),\n          createReqInfo());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make {} active ({}). Failing back.\",\n          toSvc, sfe.getMessage());\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make {} active (unable to connect). Failing back.\",\n          toSvc, ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.error(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "ccaf036662e22da14583942054898c99fa51dae5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14539. Move commons logging APIs over to slf4j in hadoop-common. Contributed by Wenxin He.\n",
      "commitDate": "17/07/17 9:32 PM",
      "commitName": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "22/08/12 11:54 AM",
      "commitNameOld": "d66223fd999fbadab02c2d664f74c8843291d8aa",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 1790.4,
      "commitsBetweenForRepo": 12387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,63 @@\n   public void failover(HAServiceTarget fromSvc,\n                        HAServiceTarget toSvc,\n                        boolean forceFence,\n                        boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n         \"failover requires a fencer\");\n     preFailoverChecks(fromSvc, toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     \n     if (tryGracefulFence(fromSvc)) {\n       tryFence \u003d forceFence;\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(\n           toSvc.getProxy(conf, rpcTimeoutToNewActive),\n           createReqInfo());\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n           failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n-          LOG.fatal(msg);\n+          LOG.error(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void failover(HAServiceTarget fromSvc,\n                       HAServiceTarget toSvc,\n                       boolean forceFence,\n                       boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(fromSvc, toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    \n    if (tryGracefulFence(fromSvc)) {\n      tryFence \u003d forceFence;\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(\n          toSvc.getProxy(conf, rpcTimeoutToNewActive),\n          createReqInfo());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.error(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8247. Add a config to enable auto-HA, which disables manual FailoverController. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1324566 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 10:40 PM",
      "commitName": "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "03/04/12 1:41 PM",
      "commitNameOld": "84ff2d6d066ee7d854dfcb93bb85df7b98a3d761",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 7.37,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,63 @@\n   public void failover(HAServiceTarget fromSvc,\n                        HAServiceTarget toSvc,\n                        boolean forceFence,\n                        boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n         \"failover requires a fencer\");\n     preFailoverChecks(fromSvc, toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     \n     if (tryGracefulFence(fromSvc)) {\n       tryFence \u003d forceFence;\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(\n-          toSvc.getProxy(conf, rpcTimeoutToNewActive));\n+          toSvc.getProxy(conf, rpcTimeoutToNewActive),\n+          createReqInfo());\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n           failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void failover(HAServiceTarget fromSvc,\n                       HAServiceTarget toSvc,\n                       boolean forceFence,\n                       boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(fromSvc, toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    \n    if (tryGracefulFence(fromSvc)) {\n      tryFence \u003d forceFence;\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(\n          toSvc.getProxy(conf, rpcTimeoutToNewActive),\n          createReqInfo());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "a4ccb8f504e79802f1b3c69acbcbb00b2343c529": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-8236. haadmin should have configurable timeouts for failover commands. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308235 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/12 8:48 PM",
      "commitName": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-8236. haadmin should have configurable timeouts for failover commands. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308235 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/04/12 8:48 PM",
          "commitName": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/03/12 8:48 AM",
          "commitNameOld": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 3.5,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,61 +1,62 @@\n-  public static void failover(HAServiceTarget fromSvc,\n-                              HAServiceTarget toSvc,\n-                              boolean forceFence,\n-                              boolean forceActive)\n+  public void failover(HAServiceTarget fromSvc,\n+                       HAServiceTarget toSvc,\n+                       boolean forceFence,\n+                       boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n         \"failover requires a fencer\");\n     preFailoverChecks(fromSvc, toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     \n-    if (tryGracefulFence(new Configuration(), fromSvc)) {\n+    if (tryGracefulFence(fromSvc)) {\n       tryFence \u003d forceFence;\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n+      HAServiceProtocolHelper.transitionToActive(\n+          toSvc.getProxy(conf, rpcTimeoutToNewActive));\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n           failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void failover(HAServiceTarget fromSvc,\n                       HAServiceTarget toSvc,\n                       boolean forceFence,\n                       boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(fromSvc, toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    \n    if (tryGracefulFence(fromSvc)) {\n      tryFence \u003d forceFence;\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(\n          toSvc.getProxy(conf, rpcTimeoutToNewActive));\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8236. haadmin should have configurable timeouts for failover commands. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308235 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/04/12 8:48 PM",
          "commitName": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "29/03/12 8:48 AM",
          "commitNameOld": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 3.5,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,61 +1,62 @@\n-  public static void failover(HAServiceTarget fromSvc,\n-                              HAServiceTarget toSvc,\n-                              boolean forceFence,\n-                              boolean forceActive)\n+  public void failover(HAServiceTarget fromSvc,\n+                       HAServiceTarget toSvc,\n+                       boolean forceFence,\n+                       boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n         \"failover requires a fencer\");\n     preFailoverChecks(fromSvc, toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     \n-    if (tryGracefulFence(new Configuration(), fromSvc)) {\n+    if (tryGracefulFence(fromSvc)) {\n       tryFence \u003d forceFence;\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n+      HAServiceProtocolHelper.transitionToActive(\n+          toSvc.getProxy(conf, rpcTimeoutToNewActive));\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n           failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void failover(HAServiceTarget fromSvc,\n                       HAServiceTarget toSvc,\n                       boolean forceFence,\n                       boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(fromSvc, toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    \n    if (tryGracefulFence(fromSvc)) {\n      tryFence \u003d forceFence;\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(\n          toSvc.getProxy(conf, rpcTimeoutToNewActive));\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "978404d1a83ecaee0ebed3a8ce16601dcfe4c076": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8208. Disallow self failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1306935 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/03/12 8:48 AM",
      "commitName": "978404d1a83ecaee0ebed3a8ce16601dcfe4c076",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "26/03/12 4:37 PM",
      "commitNameOld": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 2.67,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,61 +1,61 @@\n   public static void failover(HAServiceTarget fromSvc,\n                               HAServiceTarget toSvc,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n         \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, forceActive);\n+    preFailoverChecks(fromSvc, toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     \n     if (tryGracefulFence(new Configuration(), fromSvc)) {\n       tryFence \u003d forceFence;\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n           failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void failover(HAServiceTarget fromSvc,\n                              HAServiceTarget toSvc,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(fromSvc, toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    \n    if (tryGracefulFence(new Configuration(), fromSvc)) {\n      tryFence \u003d forceFence;\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "578f413778a6f005a35d18d7f015df128aeded5b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 4:37 PM",
      "commitName": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/03/12 6:54 PM",
      "commitNameOld": "840df19ceecca1be26c572da2afe2f4d5f958b24",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,68 +1,61 @@\n   public static void failover(HAServiceTarget fromSvc,\n                               HAServiceTarget toSvc,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n         \"failover requires a fencer\");\n     preFailoverChecks(toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n-    try {\n-      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n-      // We should try to fence if we failed or it was forced\n-      tryFence \u003d forceFence ? true : false;\n-    } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n-          sfe.getMessage() + \")\");\n-    } catch (IOException ioe) {\n-      LOG.warn(\"Unable to make \" + fromSvc +\n-          \" standby (unable to connect)\", ioe);\n+    \n+    if (tryGracefulFence(new Configuration(), fromSvc)) {\n+      tryFence \u003d forceFence;\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n           failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void failover(HAServiceTarget fromSvc,\n                              HAServiceTarget toSvc,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    \n    if (tryGracefulFence(new Configuration(), fromSvc)) {\n      tryFence \u003d forceFence;\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "840df19ceecca1be26c572da2afe2f4d5f958b24": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305195 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/12 6:54 PM",
      "commitName": "840df19ceecca1be26c572da2afe2f4d5f958b24",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305195 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 6:54 PM",
          "commitName": "840df19ceecca1be26c572da2afe2f4d5f958b24",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/03/12 2:38 PM",
          "commitNameOld": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.18,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,70 +1,68 @@\n-  public static void failover(HAServiceProtocol fromSvc,\n-                              InetSocketAddress fromSvcAddr,\n-                              HAServiceProtocol toSvc,\n-                              InetSocketAddress toSvcAddr,\n-                              NodeFencer fencer,\n+  public static void failover(HAServiceTarget fromSvc,\n+                              HAServiceTarget toSvc,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n-    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n+    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n+        \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n-      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n+      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr +\n+      LOG.warn(\"Unable to make \" + fromSvc +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n-      if (!fencer.fence(fromSvcAddr)) {\n+      if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n-            fromSvcAddr + \". Fencing failed.\");\n+            fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc);\n+      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n+      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr +\n+      LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n+      String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n-          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n+          failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n-          msg +\u003d \". Failback to \" + fromSvcAddr +\n+          msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceTarget fromSvc,\n                              HAServiceTarget toSvc,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvc +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[fromSvc-HAServiceProtocol, fromSvcAddr-InetSocketAddress, toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, fencer-NodeFencer, forceFence-boolean, forceActive-boolean]",
            "newValue": "[fromSvc-HAServiceTarget, toSvc-HAServiceTarget, forceFence-boolean, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305195 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 6:54 PM",
          "commitName": "840df19ceecca1be26c572da2afe2f4d5f958b24",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "25/03/12 2:38 PM",
          "commitNameOld": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.18,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,70 +1,68 @@\n-  public static void failover(HAServiceProtocol fromSvc,\n-                              InetSocketAddress fromSvcAddr,\n-                              HAServiceProtocol toSvc,\n-                              InetSocketAddress toSvcAddr,\n-                              NodeFencer fencer,\n+  public static void failover(HAServiceTarget fromSvc,\n+                              HAServiceTarget toSvc,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n-    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n+    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n+        \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n-      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n+      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr +\n+      LOG.warn(\"Unable to make \" + fromSvc +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n-      if (!fencer.fence(fromSvcAddr)) {\n+      if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n-            fromSvcAddr + \". Fencing failed.\");\n+            fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc);\n+      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n+      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr +\n+      LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n+      String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n-          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n+          failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n-          msg +\u003d \". Failback to \" + fromSvcAddr +\n+          msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceTarget fromSvc,\n                              HAServiceTarget toSvc,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvc +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "39775dca68643b37a3b9a5ae7bc8eea1418f60d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Revert HADOOP-8193 from r1304967. Patch introduced some NPEs in a test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305152 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/12 2:38 PM",
      "commitName": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert HADOOP-8193 from r1304967. Patch introduced some NPEs in a test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305152 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 2:38 PM",
          "commitName": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "24/03/12 4:48 PM",
          "commitNameOld": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,68 +1,70 @@\n-  public static void failover(HAServiceTarget fromSvc,\n-                              HAServiceTarget toSvc,\n+  public static void failover(HAServiceProtocol fromSvc,\n+                              InetSocketAddress fromSvcAddr,\n+                              HAServiceProtocol toSvc,\n+                              InetSocketAddress toSvcAddr,\n+                              NodeFencer fencer,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n-    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n-        \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, forceActive);\n+    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n-      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n+      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n-      LOG.warn(\"Unable to make \" + fromSvc +\n+      LOG.warn(\"Unable to make \" + fromSvcAddr +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n-      if (!fromSvc.getFencer().fence(fromSvc)) {\n+      if (!fencer.fence(fromSvcAddr)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n-            fromSvc + \". Fencing failed.\");\n+            fromSvcAddr + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n+      HAServiceProtocolHelper.transitionToActive(toSvc);\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n+      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n-      LOG.error(\"Unable to make \" + toSvc +\n+      LOG.error(\"Unable to make \" + toSvcAddr +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvc;\n+      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n-          failover(toSvc, fromSvc, true, true);\n+          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n         } catch (FailoverFailedException ffe) {\n-          msg +\u003d \". Failback to \" + fromSvc +\n+          msg +\u003d \". Failback to \" + fromSvcAddr +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceProtocol fromSvc,\n                              InetSocketAddress fromSvcAddr,\n                              HAServiceProtocol toSvc,\n                              InetSocketAddress toSvcAddr,\n                              NodeFencer fencer,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fencer.fence(fromSvcAddr)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvcAddr + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvcAddr +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvcAddr +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[fromSvc-HAServiceTarget, toSvc-HAServiceTarget, forceFence-boolean, forceActive-boolean]",
            "newValue": "[fromSvc-HAServiceProtocol, fromSvcAddr-InetSocketAddress, toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, fencer-NodeFencer, forceFence-boolean, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert HADOOP-8193 from r1304967. Patch introduced some NPEs in a test case.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305152 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/03/12 2:38 PM",
          "commitName": "39775dca68643b37a3b9a5ae7bc8eea1418f60d1",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "24/03/12 4:48 PM",
          "commitNameOld": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.91,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,68 +1,70 @@\n-  public static void failover(HAServiceTarget fromSvc,\n-                              HAServiceTarget toSvc,\n+  public static void failover(HAServiceProtocol fromSvc,\n+                              InetSocketAddress fromSvcAddr,\n+                              HAServiceProtocol toSvc,\n+                              InetSocketAddress toSvcAddr,\n+                              NodeFencer fencer,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n-    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n-        \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, forceActive);\n+    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n-      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n+      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n-      LOG.warn(\"Unable to make \" + fromSvc +\n+      LOG.warn(\"Unable to make \" + fromSvcAddr +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n-      if (!fromSvc.getFencer().fence(fromSvc)) {\n+      if (!fencer.fence(fromSvcAddr)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n-            fromSvc + \". Fencing failed.\");\n+            fromSvcAddr + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n+      HAServiceProtocolHelper.transitionToActive(toSvc);\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n+      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n-      LOG.error(\"Unable to make \" + toSvc +\n+      LOG.error(\"Unable to make \" + toSvcAddr +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvc;\n+      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n-          failover(toSvc, fromSvc, true, true);\n+          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n         } catch (FailoverFailedException ffe) {\n-          msg +\u003d \". Failback to \" + fromSvc +\n+          msg +\u003d \". Failback to \" + fromSvcAddr +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceProtocol fromSvc,\n                              InetSocketAddress fromSvcAddr,\n                              HAServiceProtocol toSvc,\n                              InetSocketAddress toSvcAddr,\n                              NodeFencer fencer,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fencer.fence(fromSvcAddr)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvcAddr + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvcAddr +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvcAddr +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "90ea037d21be08821fc9c95b80bec1e1078d79cc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304967 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/12 4:48 PM",
      "commitName": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304967 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/12 4:48 PM",
          "commitName": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "22/03/12 11:29 PM",
          "commitNameOld": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.72,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,70 +1,68 @@\n-  public static void failover(HAServiceProtocol fromSvc,\n-                              InetSocketAddress fromSvcAddr,\n-                              HAServiceProtocol toSvc,\n-                              InetSocketAddress toSvcAddr,\n-                              NodeFencer fencer,\n+  public static void failover(HAServiceTarget fromSvc,\n+                              HAServiceTarget toSvc,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n-    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n+    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n+        \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n-      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n+      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr +\n+      LOG.warn(\"Unable to make \" + fromSvc +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n-      if (!fencer.fence(fromSvcAddr)) {\n+      if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n-            fromSvcAddr + \". Fencing failed.\");\n+            fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc);\n+      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n+      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr +\n+      LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n+      String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n-          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n+          failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n-          msg +\u003d \". Failback to \" + fromSvcAddr +\n+          msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceTarget fromSvc,\n                              HAServiceTarget toSvc,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvc +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[fromSvc-HAServiceProtocol, fromSvcAddr-InetSocketAddress, toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, fencer-NodeFencer, forceFence-boolean, forceActive-boolean]",
            "newValue": "[fromSvc-HAServiceTarget, toSvc-HAServiceTarget, forceFence-boolean, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8193. Refactor FailoverController/HAAdmin code to add an abstract class for \"target\" services. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304967 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/12 4:48 PM",
          "commitName": "90ea037d21be08821fc9c95b80bec1e1078d79cc",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "22/03/12 11:29 PM",
          "commitNameOld": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.72,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,70 +1,68 @@\n-  public static void failover(HAServiceProtocol fromSvc,\n-                              InetSocketAddress fromSvcAddr,\n-                              HAServiceProtocol toSvc,\n-                              InetSocketAddress toSvcAddr,\n-                              NodeFencer fencer,\n+  public static void failover(HAServiceTarget fromSvc,\n+                              HAServiceTarget toSvc,\n                               boolean forceFence,\n                               boolean forceActive)\n       throws FailoverFailedException {\n-    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n+    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n+        \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n-      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n+      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n-      LOG.warn(\"Unable to make \" + fromSvcAddr +\n+      LOG.warn(\"Unable to make \" + fromSvc +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n-      if (!fencer.fence(fromSvcAddr)) {\n+      if (!fromSvc.getFencer().fence(fromSvc)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n-            fromSvcAddr + \". Fencing failed.\");\n+            fromSvc + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      HAServiceProtocolHelper.transitionToActive(toSvc);\n+      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n+      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n-      LOG.error(\"Unable to make \" + toSvcAddr +\n+      LOG.error(\"Unable to make \" + toSvc +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n+      String msg \u003d \"Unable to failover to \" + toSvc;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n           // Unconditionally force fromSvc to become active since it\n           // was previously active when we initiated failover.\n-          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n+          failover(toSvc, fromSvc, true, true);\n         } catch (FailoverFailedException ffe) {\n-          msg +\u003d \". Failback to \" + fromSvcAddr +\n+          msg +\u003d \". Failback to \" + fromSvc +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceTarget fromSvc,\n                              HAServiceTarget toSvc,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fromSvc.getFencer() !\u003d null,\n        \"failover requires a fencer\");\n    preFailoverChecks(toSvc, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc.getProxy());\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvc + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvc +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fromSvc.getFencer().fence(fromSvc)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvc + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc.getProxy());\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvc + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvc +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvc;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, fromSvc, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvc +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "4324e1bcd78a98e2fb92c81ee959e25b4193da4f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7991. HA: the FailoverController should check the standby is ready before failing over. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1239774 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/02/12 11:20 AM",
      "commitName": "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7991. HA: the FailoverController should check the standby is ready before failing over. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1239774 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/02/12 11:20 AM",
          "commitName": "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "30/01/12 2:42 PM",
          "commitNameOld": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 2.86,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,66 +1,70 @@\n   public static void failover(HAServiceProtocol fromSvc,\n                               InetSocketAddress fromSvcAddr,\n                               HAServiceProtocol toSvc,\n                               InetSocketAddress toSvcAddr,\n-                              NodeFencer fencer, boolean forceFence)\n+                              NodeFencer fencer,\n+                              boolean forceFence,\n+                              boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, toSvcAddr);\n+    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n       HAServiceProtocolHelper.transitionToStandby(fromSvc);\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n       LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n       LOG.warn(\"Unable to make \" + fromSvcAddr +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fencer.fence(fromSvcAddr)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvcAddr + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(toSvc);\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvcAddr +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvcAddr;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n-          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true);\n+          // Unconditionally force fromSvc to become active since it\n+          // was previously active when we initiated failover.\n+          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvcAddr +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceProtocol fromSvc,\n                              InetSocketAddress fromSvcAddr,\n                              HAServiceProtocol toSvc,\n                              InetSocketAddress toSvcAddr,\n                              NodeFencer fencer,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fencer.fence(fromSvcAddr)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvcAddr + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvcAddr +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvcAddr +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[fromSvc-HAServiceProtocol, fromSvcAddr-InetSocketAddress, toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, fencer-NodeFencer, forceFence-boolean]",
            "newValue": "[fromSvc-HAServiceProtocol, fromSvcAddr-InetSocketAddress, toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, fencer-NodeFencer, forceFence-boolean, forceActive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7991. HA: the FailoverController should check the standby is ready before failing over. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1239774 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/02/12 11:20 AM",
          "commitName": "4324e1bcd78a98e2fb92c81ee959e25b4193da4f",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "30/01/12 2:42 PM",
          "commitNameOld": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 2.86,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,66 +1,70 @@\n   public static void failover(HAServiceProtocol fromSvc,\n                               InetSocketAddress fromSvcAddr,\n                               HAServiceProtocol toSvc,\n                               InetSocketAddress toSvcAddr,\n-                              NodeFencer fencer, boolean forceFence)\n+                              NodeFencer fencer,\n+                              boolean forceFence,\n+                              boolean forceActive)\n       throws FailoverFailedException {\n     Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n-    preFailoverChecks(toSvc, toSvcAddr);\n+    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n \n     // Try to make fromSvc standby\n     boolean tryFence \u003d true;\n     try {\n       HAServiceProtocolHelper.transitionToStandby(fromSvc);\n       // We should try to fence if we failed or it was forced\n       tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n       LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (IOException ioe) {\n       LOG.warn(\"Unable to make \" + fromSvcAddr +\n           \" standby (unable to connect)\", ioe);\n     }\n \n     // Fence fromSvc if it\u0027s required or forced by the user\n     if (tryFence) {\n       if (!fencer.fence(fromSvcAddr)) {\n         throw new FailoverFailedException(\"Unable to fence \" +\n             fromSvcAddr + \". Fencing failed.\");\n       }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(toSvc);\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n           sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (IOException ioe) {\n       LOG.error(\"Unable to make \" + toSvcAddr +\n           \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n       cause \u003d ioe;\n     }\n \n     // We failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvcAddr;\n       // Only try to failback if we didn\u0027t fence fromSvc\n       if (!tryFence) {\n         try {\n           // Unconditionally fence toSvc in case it is still trying to\n           // become active, eg we timed out waiting for its response.\n-          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true);\n+          // Unconditionally force fromSvc to become active since it\n+          // was previously active when we initiated failover.\n+          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n         } catch (FailoverFailedException ffe) {\n           msg +\u003d \". Failback to \" + fromSvcAddr +\n             \" failed (\" + ffe.getMessage() + \")\";\n           LOG.fatal(msg);\n         }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceProtocol fromSvc,\n                              InetSocketAddress fromSvcAddr,\n                              HAServiceProtocol toSvc,\n                              InetSocketAddress toSvcAddr,\n                              NodeFencer fencer,\n                              boolean forceFence,\n                              boolean forceActive)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n    preFailoverChecks(toSvc, toSvcAddr, forceActive);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fencer.fence(fromSvcAddr)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvcAddr + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvcAddr +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          // Unconditionally force fromSvc to become active since it\n          // was previously active when we initiated failover.\n          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvcAddr +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "68843484448fcf45e2c48bed2426d9844ee8128c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7938. HA: the FailoverController should optionally fence the active during failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1238058 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/12 2:42 PM",
      "commitName": "68843484448fcf45e2c48bed2426d9844ee8128c",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7938. HA: the FailoverController should optionally fence the active during failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1238058 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/12 2:42 PM",
          "commitName": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "12/01/12 6:30 PM",
          "commitNameOld": "72207596be4b293a44607003fa68c4e413e1baaf",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 17.84,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,66 @@\n-  public static void failover(HAServiceProtocol fromSvc, String fromSvcName,\n-                              HAServiceProtocol toSvc, String toSvcName)\n+  public static void failover(HAServiceProtocol fromSvc,\n+                              InetSocketAddress fromSvcAddr,\n+                              HAServiceProtocol toSvc,\n+                              InetSocketAddress toSvcAddr,\n+                              NodeFencer fencer, boolean forceFence)\n       throws FailoverFailedException {\n-    preFailoverChecks(toSvc, toSvcName);\n+    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, toSvcAddr);\n \n     // Try to make fromSvc standby\n+    boolean tryFence \u003d true;\n     try {\n       HAServiceProtocolHelper.transitionToStandby(fromSvc);\n+      // We should try to fence if we failed or it was forced\n+      tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvcName + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n           sfe.getMessage() + \")\");\n-    } catch (Exception e) {\n-      LOG.warn(\"Unable to make \" + fromSvcName +\n-          \" standby (unable to connect)\", e);\n-      // TODO(HA): fence fromSvc and unfence on failback\n+    } catch (IOException ioe) {\n+      LOG.warn(\"Unable to make \" + fromSvcAddr +\n+          \" standby (unable to connect)\", ioe);\n+    }\n+\n+    // Fence fromSvc if it\u0027s required or forced by the user\n+    if (tryFence) {\n+      if (!fencer.fence(fromSvcAddr)) {\n+        throw new FailoverFailedException(\"Unable to fence \" +\n+            fromSvcAddr + \". Fencing failed.\");\n+      }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(toSvc);\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvcName + \" active (\" +\n-          sfe.getMessage() + \"). Failing back\");\n+      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n+          sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n-    } catch (Exception e) {\n-      LOG.error(\"Unable to make \" + toSvcName +\n-          \" active (unable to connect). Failing back\", e);\n+    } catch (IOException ioe) {\n+      LOG.error(\"Unable to make \" + toSvcAddr +\n+          \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n-      cause \u003d e;\n+      cause \u003d ioe;\n     }\n \n-    // Try to failback if we failed to make toSvc active\n+    // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvcName;\n-      try {\n-        HAServiceProtocolHelper.transitionToActive(fromSvc);\n-      } catch (ServiceFailedException sfe) {\n-        msg \u003d \"Failback to \" + fromSvcName + \" failed (\" +\n-              sfe.getMessage() + \")\";\n-        LOG.fatal(msg);\n-      } catch (Exception e) {\n-        msg \u003d \"Failback to \" + fromSvcName + \" failed (unable to connect)\";\n-        LOG.fatal(msg);\n+      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n+      // Only try to failback if we didn\u0027t fence fromSvc\n+      if (!tryFence) {\n+        try {\n+          // Unconditionally fence toSvc in case it is still trying to\n+          // become active, eg we timed out waiting for its response.\n+          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true);\n+        } catch (FailoverFailedException ffe) {\n+          msg +\u003d \". Failback to \" + fromSvcAddr +\n+            \" failed (\" + ffe.getMessage() + \")\";\n+          LOG.fatal(msg);\n+        }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceProtocol fromSvc,\n                              InetSocketAddress fromSvcAddr,\n                              HAServiceProtocol toSvc,\n                              InetSocketAddress toSvcAddr,\n                              NodeFencer fencer, boolean forceFence)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n    preFailoverChecks(toSvc, toSvcAddr);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fencer.fence(fromSvcAddr)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvcAddr + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvcAddr +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvcAddr +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {
            "oldValue": "[fromSvc-HAServiceProtocol, fromSvcName-String, toSvc-HAServiceProtocol, toSvcName-String]",
            "newValue": "[fromSvc-HAServiceProtocol, fromSvcAddr-InetSocketAddress, toSvc-HAServiceProtocol, toSvcAddr-InetSocketAddress, fencer-NodeFencer, forceFence-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7938. HA: the FailoverController should optionally fence the active during failover. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1238058 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/12 2:42 PM",
          "commitName": "68843484448fcf45e2c48bed2426d9844ee8128c",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "12/01/12 6:30 PM",
          "commitNameOld": "72207596be4b293a44607003fa68c4e413e1baaf",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 17.84,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,66 @@\n-  public static void failover(HAServiceProtocol fromSvc, String fromSvcName,\n-                              HAServiceProtocol toSvc, String toSvcName)\n+  public static void failover(HAServiceProtocol fromSvc,\n+                              InetSocketAddress fromSvcAddr,\n+                              HAServiceProtocol toSvc,\n+                              InetSocketAddress toSvcAddr,\n+                              NodeFencer fencer, boolean forceFence)\n       throws FailoverFailedException {\n-    preFailoverChecks(toSvc, toSvcName);\n+    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n+    preFailoverChecks(toSvc, toSvcAddr);\n \n     // Try to make fromSvc standby\n+    boolean tryFence \u003d true;\n     try {\n       HAServiceProtocolHelper.transitionToStandby(fromSvc);\n+      // We should try to fence if we failed or it was forced\n+      tryFence \u003d forceFence ? true : false;\n     } catch (ServiceFailedException sfe) {\n-      LOG.warn(\"Unable to make \" + fromSvcName + \" standby (\" +\n+      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n           sfe.getMessage() + \")\");\n-    } catch (Exception e) {\n-      LOG.warn(\"Unable to make \" + fromSvcName +\n-          \" standby (unable to connect)\", e);\n-      // TODO(HA): fence fromSvc and unfence on failback\n+    } catch (IOException ioe) {\n+      LOG.warn(\"Unable to make \" + fromSvcAddr +\n+          \" standby (unable to connect)\", ioe);\n+    }\n+\n+    // Fence fromSvc if it\u0027s required or forced by the user\n+    if (tryFence) {\n+      if (!fencer.fence(fromSvcAddr)) {\n+        throw new FailoverFailedException(\"Unable to fence \" +\n+            fromSvcAddr + \". Fencing failed.\");\n+      }\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n       HAServiceProtocolHelper.transitionToActive(toSvc);\n     } catch (ServiceFailedException sfe) {\n-      LOG.error(\"Unable to make \" + toSvcName + \" active (\" +\n-          sfe.getMessage() + \"). Failing back\");\n+      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n+          sfe.getMessage() + \"). Failing back.\");\n       failed \u003d true;\n       cause \u003d sfe;\n-    } catch (Exception e) {\n-      LOG.error(\"Unable to make \" + toSvcName +\n-          \" active (unable to connect). Failing back\", e);\n+    } catch (IOException ioe) {\n+      LOG.error(\"Unable to make \" + toSvcAddr +\n+          \" active (unable to connect). Failing back.\", ioe);\n       failed \u003d true;\n-      cause \u003d e;\n+      cause \u003d ioe;\n     }\n \n-    // Try to failback if we failed to make toSvc active\n+    // We failed to make toSvc active\n     if (failed) {\n-      String msg \u003d \"Unable to failover to \" + toSvcName;\n-      try {\n-        HAServiceProtocolHelper.transitionToActive(fromSvc);\n-      } catch (ServiceFailedException sfe) {\n-        msg \u003d \"Failback to \" + fromSvcName + \" failed (\" +\n-              sfe.getMessage() + \")\";\n-        LOG.fatal(msg);\n-      } catch (Exception e) {\n-        msg \u003d \"Failback to \" + fromSvcName + \" failed (unable to connect)\";\n-        LOG.fatal(msg);\n+      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n+      // Only try to failback if we didn\u0027t fence fromSvc\n+      if (!tryFence) {\n+        try {\n+          // Unconditionally fence toSvc in case it is still trying to\n+          // become active, eg we timed out waiting for its response.\n+          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true);\n+        } catch (FailoverFailedException ffe) {\n+          msg +\u003d \". Failback to \" + fromSvcAddr +\n+            \" failed (\" + ffe.getMessage() + \")\";\n+          LOG.fatal(msg);\n+        }\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void failover(HAServiceProtocol fromSvc,\n                              InetSocketAddress fromSvcAddr,\n                              HAServiceProtocol toSvc,\n                              InetSocketAddress toSvcAddr,\n                              NodeFencer fencer, boolean forceFence)\n      throws FailoverFailedException {\n    Preconditions.checkArgument(fencer !\u003d null, \"failover requires a fencer\");\n    preFailoverChecks(toSvc, toSvcAddr);\n\n    // Try to make fromSvc standby\n    boolean tryFence \u003d true;\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n      // We should try to fence if we failed or it was forced\n      tryFence \u003d forceFence ? true : false;\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (IOException ioe) {\n      LOG.warn(\"Unable to make \" + fromSvcAddr +\n          \" standby (unable to connect)\", ioe);\n    }\n\n    // Fence fromSvc if it\u0027s required or forced by the user\n    if (tryFence) {\n      if (!fencer.fence(fromSvcAddr)) {\n        throw new FailoverFailedException(\"Unable to fence \" +\n            fromSvcAddr + \". Fencing failed.\");\n      }\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcAddr + \" active (\" +\n          sfe.getMessage() + \"). Failing back.\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (IOException ioe) {\n      LOG.error(\"Unable to make \" + toSvcAddr +\n          \" active (unable to connect). Failing back.\", ioe);\n      failed \u003d true;\n      cause \u003d ioe;\n    }\n\n    // We failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcAddr;\n      // Only try to failback if we didn\u0027t fence fromSvc\n      if (!tryFence) {\n        try {\n          // Unconditionally fence toSvc in case it is still trying to\n          // become active, eg we timed out waiting for its response.\n          failover(toSvc, toSvcAddr, fromSvc, fromSvcAddr, fencer, true);\n        } catch (FailoverFailedException ffe) {\n          msg +\u003d \". Failback to \" + fromSvcAddr +\n            \" failed (\" + ffe.getMessage() + \")\";\n          LOG.fatal(msg);\n        }\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
          "extendedDetails": {}
        }
      ]
    },
    "72207596be4b293a44607003fa68c4e413e1baaf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7972. HAServiceProtocol exceptions need to be unwrapped. Contributed by Hari Mankude.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1230861 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/01/12 6:30 PM",
      "commitName": "72207596be4b293a44607003fa68c4e413e1baaf",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "11/01/12 5:39 PM",
      "commitNameOld": "09e5af76f333f2924b5034bca8adfdcc99723a96",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.04,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n   public static void failover(HAServiceProtocol fromSvc, String fromSvcName,\n                               HAServiceProtocol toSvc, String toSvcName)\n       throws FailoverFailedException {\n     preFailoverChecks(toSvc, toSvcName);\n \n     // Try to make fromSvc standby\n     try {\n-      fromSvc.transitionToStandby();\n+      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n     } catch (ServiceFailedException sfe) {\n       LOG.warn(\"Unable to make \" + fromSvcName + \" standby (\" +\n           sfe.getMessage() + \")\");\n     } catch (Exception e) {\n       LOG.warn(\"Unable to make \" + fromSvcName +\n           \" standby (unable to connect)\", e);\n       // TODO(HA): fence fromSvc and unfence on failback\n     }\n \n     // Try to make toSvc active\n     boolean failed \u003d false;\n     Throwable cause \u003d null;\n     try {\n-      toSvc.transitionToActive();\n+      HAServiceProtocolHelper.transitionToActive(toSvc);\n     } catch (ServiceFailedException sfe) {\n       LOG.error(\"Unable to make \" + toSvcName + \" active (\" +\n           sfe.getMessage() + \"). Failing back\");\n       failed \u003d true;\n       cause \u003d sfe;\n     } catch (Exception e) {\n       LOG.error(\"Unable to make \" + toSvcName +\n           \" active (unable to connect). Failing back\", e);\n       failed \u003d true;\n       cause \u003d e;\n     }\n \n     // Try to failback if we failed to make toSvc active\n     if (failed) {\n       String msg \u003d \"Unable to failover to \" + toSvcName;\n       try {\n-        fromSvc.transitionToActive();\n+        HAServiceProtocolHelper.transitionToActive(fromSvc);\n       } catch (ServiceFailedException sfe) {\n         msg \u003d \"Failback to \" + fromSvcName + \" failed (\" +\n               sfe.getMessage() + \")\";\n         LOG.fatal(msg);\n       } catch (Exception e) {\n         msg \u003d \"Failback to \" + fromSvcName + \" failed (unable to connect)\";\n         LOG.fatal(msg);\n       }\n       throw new FailoverFailedException(msg, cause);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void failover(HAServiceProtocol fromSvc, String fromSvcName,\n                              HAServiceProtocol toSvc, String toSvcName)\n      throws FailoverFailedException {\n    preFailoverChecks(toSvc, toSvcName);\n\n    // Try to make fromSvc standby\n    try {\n      HAServiceProtocolHelper.transitionToStandby(fromSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcName + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (Exception e) {\n      LOG.warn(\"Unable to make \" + fromSvcName +\n          \" standby (unable to connect)\", e);\n      // TODO(HA): fence fromSvc and unfence on failback\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      HAServiceProtocolHelper.transitionToActive(toSvc);\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcName + \" active (\" +\n          sfe.getMessage() + \"). Failing back\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (Exception e) {\n      LOG.error(\"Unable to make \" + toSvcName +\n          \" active (unable to connect). Failing back\", e);\n      failed \u003d true;\n      cause \u003d e;\n    }\n\n    // Try to failback if we failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcName;\n      try {\n        HAServiceProtocolHelper.transitionToActive(fromSvc);\n      } catch (ServiceFailedException sfe) {\n        msg \u003d \"Failback to \" + fromSvcName + \" failed (\" +\n              sfe.getMessage() + \")\";\n        LOG.fatal(msg);\n      } catch (Exception e) {\n        msg \u003d \"Failback to \" + fromSvcName + \" failed (unable to connect)\";\n        LOG.fatal(msg);\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java",
      "extendedDetails": {}
    },
    "fb9cdcfa60cb641faded2d3843c81e969ac33147": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7924. \u2029FailoverController for client-based configuration. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1227836 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 1:02 PM",
      "commitName": "fb9cdcfa60cb641faded2d3843c81e969ac33147",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,50 @@\n+  public static void failover(HAServiceProtocol fromSvc, String fromSvcName,\n+                              HAServiceProtocol toSvc, String toSvcName)\n+      throws FailoverFailedException {\n+    preFailoverChecks(toSvc, toSvcName);\n+\n+    // Try to make fromSvc standby\n+    try {\n+      fromSvc.transitionToStandby();\n+    } catch (ServiceFailedException sfe) {\n+      LOG.warn(\"Unable to make \" + fromSvcName + \" standby (\" +\n+          sfe.getMessage() + \")\");\n+    } catch (Exception e) {\n+      LOG.warn(\"Unable to make \" + fromSvcName +\n+          \" standby (unable to connect)\", e);\n+      // TODO(HA): fence fromSvc and unfence on failback\n+    }\n+\n+    // Try to make toSvc active\n+    boolean failed \u003d false;\n+    Throwable cause \u003d null;\n+    try {\n+      toSvc.transitionToActive();\n+    } catch (ServiceFailedException sfe) {\n+      LOG.error(\"Unable to make \" + toSvcName + \" active (\" +\n+          sfe.getMessage() + \"). Failing back\");\n+      failed \u003d true;\n+      cause \u003d sfe;\n+    } catch (Exception e) {\n+      LOG.error(\"Unable to make \" + toSvcName +\n+          \" active (unable to connect). Failing back\", e);\n+      failed \u003d true;\n+      cause \u003d e;\n+    }\n+\n+    // Try to failback if we failed to make toSvc active\n+    if (failed) {\n+      String msg \u003d \"Unable to failover to \" + toSvcName;\n+      try {\n+        fromSvc.transitionToActive();\n+      } catch (ServiceFailedException sfe) {\n+        msg \u003d \"Failback to \" + fromSvcName + \" failed (\" +\n+              sfe.getMessage() + \")\";\n+        LOG.fatal(msg);\n+      } catch (Exception e) {\n+        msg \u003d \"Failback to \" + fromSvcName + \" failed (unable to connect)\";\n+        LOG.fatal(msg);\n+      }\n+      throw new FailoverFailedException(msg, cause);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void failover(HAServiceProtocol fromSvc, String fromSvcName,\n                              HAServiceProtocol toSvc, String toSvcName)\n      throws FailoverFailedException {\n    preFailoverChecks(toSvc, toSvcName);\n\n    // Try to make fromSvc standby\n    try {\n      fromSvc.transitionToStandby();\n    } catch (ServiceFailedException sfe) {\n      LOG.warn(\"Unable to make \" + fromSvcName + \" standby (\" +\n          sfe.getMessage() + \")\");\n    } catch (Exception e) {\n      LOG.warn(\"Unable to make \" + fromSvcName +\n          \" standby (unable to connect)\", e);\n      // TODO(HA): fence fromSvc and unfence on failback\n    }\n\n    // Try to make toSvc active\n    boolean failed \u003d false;\n    Throwable cause \u003d null;\n    try {\n      toSvc.transitionToActive();\n    } catch (ServiceFailedException sfe) {\n      LOG.error(\"Unable to make \" + toSvcName + \" active (\" +\n          sfe.getMessage() + \"). Failing back\");\n      failed \u003d true;\n      cause \u003d sfe;\n    } catch (Exception e) {\n      LOG.error(\"Unable to make \" + toSvcName +\n          \" active (unable to connect). Failing back\", e);\n      failed \u003d true;\n      cause \u003d e;\n    }\n\n    // Try to failback if we failed to make toSvc active\n    if (failed) {\n      String msg \u003d \"Unable to failover to \" + toSvcName;\n      try {\n        fromSvc.transitionToActive();\n      } catch (ServiceFailedException sfe) {\n        msg \u003d \"Failback to \" + fromSvcName + \" failed (\" +\n              sfe.getMessage() + \")\";\n        LOG.fatal(msg);\n      } catch (Exception e) {\n        msg \u003d \"Failback to \" + fromSvcName + \" failed (unable to connect)\";\n        LOG.fatal(msg);\n      }\n      throw new FailoverFailedException(msg, cause);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/FailoverController.java"
    }
  }
}