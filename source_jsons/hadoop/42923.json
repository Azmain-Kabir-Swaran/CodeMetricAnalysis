{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppLogAggregation.java",
  "functionName": "getLogAggregationReportsForApp",
  "functionId": "getLogAggregationReportsForApp___rmApp-RMAppImpl",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppLogAggregation.java",
  "functionStartLine": 92,
  "functionEndLine": 116,
  "numCommitsSeen": 1,
  "timeTaken": 722,
  "changeHistory": [
    "4456ea67b949553b85e101e866b4b3f4b335f1f0"
  ],
  "changeHistoryShort": {
    "4456ea67b949553b85e101e866b4b3f4b335f1f0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4456ea67b949553b85e101e866b4b3f4b335f1f0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8586. Extract log aggregation related fields and methods from RMAppImpl. Contributed by Peter Bacsko\n",
      "commitDate": "16/08/19 2:36 AM",
      "commitName": "4456ea67b949553b85e101e866b4b3f4b335f1f0",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,25 @@\n+  Map\u003cNodeId, LogAggregationReport\u003e getLogAggregationReportsForApp(\n+      RMAppImpl rmApp) {\n+    this.readLock.lock();\n+    try {\n+      if (!isLogAggregationFinished() \u0026\u0026 RMAppImpl.isAppInFinalState(rmApp) \u0026\u0026\n+          rmApp.getSystemClock().getTime() \u003e this.logAggregationStartTime\n+              + this.logAggregationStatusTimeout) {\n+        for (Map.Entry\u003cNodeId, LogAggregationReport\u003e output :\n+            logAggregationStatus.entrySet()) {\n+          if (!output.getValue().getLogAggregationStatus()\n+              .equals(LogAggregationStatus.TIME_OUT)\n+              \u0026\u0026 !output.getValue().getLogAggregationStatus()\n+              .equals(LogAggregationStatus.SUCCEEDED)\n+              \u0026\u0026 !output.getValue().getLogAggregationStatus()\n+              .equals(LogAggregationStatus.FAILED)) {\n+            output.getValue().setLogAggregationStatus(\n+                LogAggregationStatus.TIME_OUT);\n+          }\n+        }\n+      }\n+      return Collections.unmodifiableMap(logAggregationStatus);\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Map\u003cNodeId, LogAggregationReport\u003e getLogAggregationReportsForApp(\n      RMAppImpl rmApp) {\n    this.readLock.lock();\n    try {\n      if (!isLogAggregationFinished() \u0026\u0026 RMAppImpl.isAppInFinalState(rmApp) \u0026\u0026\n          rmApp.getSystemClock().getTime() \u003e this.logAggregationStartTime\n              + this.logAggregationStatusTimeout) {\n        for (Map.Entry\u003cNodeId, LogAggregationReport\u003e output :\n            logAggregationStatus.entrySet()) {\n          if (!output.getValue().getLogAggregationStatus()\n              .equals(LogAggregationStatus.TIME_OUT)\n              \u0026\u0026 !output.getValue().getLogAggregationStatus()\n              .equals(LogAggregationStatus.SUCCEEDED)\n              \u0026\u0026 !output.getValue().getLogAggregationStatus()\n              .equals(LogAggregationStatus.FAILED)) {\n            output.getValue().setLogAggregationStatus(\n                LogAggregationStatus.TIME_OUT);\n          }\n        }\n      }\n      return Collections.unmodifiableMap(logAggregationStatus);\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppLogAggregation.java"
    }
  }
}