{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExternalSPSBlockMoveTaskHandler.java",
  "functionName": "moveBlock",
  "functionId": "moveBlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
  "functionStartLine": 192,
  "functionEndLine": 213,
  "numCommitsSeen": 6,
  "timeTaken": 1189,
  "changeHistory": [
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10"
  ],
  "changeHistoryShort": {
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,22 @@\n+    private BlockMovementStatus moveBlock() {\n+      ExtendedBlock eb \u003d new ExtendedBlock(nnc.getBlockpoolID(),\n+          blkMovingInfo.getBlock());\n+\n+      final KeyManager km \u003d nnc.getKeyManager();\n+      Token\u003cBlockTokenIdentifier\u003e accessToken;\n+      try {\n+        accessToken \u003d km.getAccessToken(eb,\n+            new StorageType[]{blkMovingInfo.getTargetStorageType()},\n+            new String[0]);\n+      } catch (IOException e) {\n+        // TODO: handle failure retries\n+        LOG.warn(\n+            \"Failed to move block:{} from src:{} to destin:{} to satisfy \"\n+                + \"storageType:{}\",\n+            blkMovingInfo.getBlock(), blkMovingInfo.getSource(),\n+            blkMovingInfo.getTarget(), blkMovingInfo.getTargetStorageType(), e);\n+        return BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE;\n+      }\n+      return blkDispatcher.moveBlock(blkMovingInfo, saslClient, eb,\n+          new Socket(), km, accessToken);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private BlockMovementStatus moveBlock() {\n      ExtendedBlock eb \u003d new ExtendedBlock(nnc.getBlockpoolID(),\n          blkMovingInfo.getBlock());\n\n      final KeyManager km \u003d nnc.getKeyManager();\n      Token\u003cBlockTokenIdentifier\u003e accessToken;\n      try {\n        accessToken \u003d km.getAccessToken(eb,\n            new StorageType[]{blkMovingInfo.getTargetStorageType()},\n            new String[0]);\n      } catch (IOException e) {\n        // TODO: handle failure retries\n        LOG.warn(\n            \"Failed to move block:{} from src:{} to destin:{} to satisfy \"\n                + \"storageType:{}\",\n            blkMovingInfo.getBlock(), blkMovingInfo.getSource(),\n            blkMovingInfo.getTarget(), blkMovingInfo.getTargetStorageType(), e);\n        return BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE;\n      }\n      return blkDispatcher.moveBlock(blkMovingInfo, saslClient, eb,\n          new Socket(), km, accessToken);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java"
    }
  }
}