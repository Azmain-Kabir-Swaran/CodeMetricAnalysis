{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VisitedResourceRequestTracker.java",
  "functionName": "visit",
  "functionId": "visit___rr-ResourceRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/VisitedResourceRequestTracker.java",
  "functionStartLine": 59,
  "functionEndLine": 76,
  "numCommitsSeen": 2,
  "timeTaken": 942,
  "changeHistory": [
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c"
  ],
  "changeHistoryShort": {
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6163. FS Preemption is a trickle for severely starved applications. (kasha)\n",
      "commitDate": "15/02/17 11:16 PM",
      "commitName": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,18 @@\n+  boolean visit(ResourceRequest rr) {\n+    Priority priority \u003d rr.getPriority();\n+    Resource capability \u003d rr.getCapability();\n+\n+    Map\u003cResource, TrackerPerPriorityResource\u003e subMap \u003d map.get(priority);\n+    if (subMap \u003d\u003d null) {\n+      subMap \u003d new HashMap\u003c\u003e();\n+      map.put(priority, subMap);\n+    }\n+\n+    TrackerPerPriorityResource tracker \u003d subMap.get(capability);\n+    if (tracker \u003d\u003d null) {\n+      tracker \u003d new TrackerPerPriorityResource();\n+      subMap.put(capability, tracker);\n+    }\n+\n+    return tracker.visit(rr.getResourceName());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean visit(ResourceRequest rr) {\n    Priority priority \u003d rr.getPriority();\n    Resource capability \u003d rr.getCapability();\n\n    Map\u003cResource, TrackerPerPriorityResource\u003e subMap \u003d map.get(priority);\n    if (subMap \u003d\u003d null) {\n      subMap \u003d new HashMap\u003c\u003e();\n      map.put(priority, subMap);\n    }\n\n    TrackerPerPriorityResource tracker \u003d subMap.get(capability);\n    if (tracker \u003d\u003d null) {\n      tracker \u003d new TrackerPerPriorityResource();\n      subMap.put(capability, tracker);\n    }\n\n    return tracker.visit(rr.getResourceName());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/VisitedResourceRequestTracker.java"
    }
  }
}