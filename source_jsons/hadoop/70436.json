{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalSASKeyGeneratorImpl.java",
  "functionName": "getSASKeyBasedStorageAccountInstance",
  "functionId": "getSASKeyBasedStorageAccountInstance___accountName-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/LocalSASKeyGeneratorImpl.java",
  "functionStartLine": 120,
  "functionEndLine": 155,
  "numCommitsSeen": 3,
  "timeTaken": 1147,
  "changeHistory": [
    "a868f59d523e1391b719507a76c1aa9fd58278b5",
    "e92a77099b91620cee84513cc879089907468075"
  ],
  "changeHistoryShort": {
    "a868f59d523e1391b719507a76c1aa9fd58278b5": "Ybodychange",
    "e92a77099b91620cee84513cc879089907468075": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a868f59d523e1391b719507a76c1aa9fd58278b5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16105. WASB in secure mode does not set connectingUsingSAS.\n\nContributed by Steve Loughran.\n",
      "commitDate": "21/02/19 6:08 AM",
      "commitName": "a868f59d523e1391b719507a76c1aa9fd58278b5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/07/17 12:13 AM",
      "commitNameOld": "2843c688bcc21c65eb3538ffb3caeaffe440eda8",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 582.29,
      "commitsBetweenForRepo": 4996,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   private CloudStorageAccount getSASKeyBasedStorageAccountInstance(\n       String accountName) throws SASKeyGenerationException {\n-\n+    LOG.debug(\"Creating SAS key from account instance {}\", accountName);\n     try {\n \n       String accountNameWithoutDomain \u003d\n           getAccountNameWithoutDomain(accountName);\n \n       CloudStorageAccount account \u003d\n           getStorageAccountInstance(accountNameWithoutDomain,\n               AzureNativeFileSystemStore.getAccountKeyFromConfiguration(\n                   accountName, getConf()));\n \n       return new CloudStorageAccount(\n           new StorageCredentialsSharedAccessSignature(\n               account.generateSharedAccessSignature(\n                   getDefaultAccountAccessPolicy())), false,\n                   account.getEndpointSuffix(), accountNameWithoutDomain);\n \n     } catch (KeyProviderException keyProviderEx) {\n       throw new SASKeyGenerationException(\"Encountered KeyProviderException\"\n           + \" while retrieving Storage key from configuration for account \"\n           + accountName, keyProviderEx);\n     } catch (InvalidKeyException invalidKeyEx) {\n       throw new SASKeyGenerationException(\"Encoutered InvalidKeyException \"\n           + \"while generating Account level SAS key for account\" + accountName,\n           invalidKeyEx);\n     } catch(StorageException storeEx) {\n       throw new SASKeyGenerationException(\"Encoutered StorageException while \"\n           + \"generating Account level SAS key for account\" + accountName,\n             storeEx);\n     } catch(URISyntaxException uriSyntaxEx) {\n       throw new SASKeyGenerationException(\"Encountered URISyntaxException for\"\n           + \" account \" + accountName, uriSyntaxEx);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private CloudStorageAccount getSASKeyBasedStorageAccountInstance(\n      String accountName) throws SASKeyGenerationException {\n    LOG.debug(\"Creating SAS key from account instance {}\", accountName);\n    try {\n\n      String accountNameWithoutDomain \u003d\n          getAccountNameWithoutDomain(accountName);\n\n      CloudStorageAccount account \u003d\n          getStorageAccountInstance(accountNameWithoutDomain,\n              AzureNativeFileSystemStore.getAccountKeyFromConfiguration(\n                  accountName, getConf()));\n\n      return new CloudStorageAccount(\n          new StorageCredentialsSharedAccessSignature(\n              account.generateSharedAccessSignature(\n                  getDefaultAccountAccessPolicy())), false,\n                  account.getEndpointSuffix(), accountNameWithoutDomain);\n\n    } catch (KeyProviderException keyProviderEx) {\n      throw new SASKeyGenerationException(\"Encountered KeyProviderException\"\n          + \" while retrieving Storage key from configuration for account \"\n          + accountName, keyProviderEx);\n    } catch (InvalidKeyException invalidKeyEx) {\n      throw new SASKeyGenerationException(\"Encoutered InvalidKeyException \"\n          + \"while generating Account level SAS key for account\" + accountName,\n          invalidKeyEx);\n    } catch(StorageException storeEx) {\n      throw new SASKeyGenerationException(\"Encoutered StorageException while \"\n          + \"generating Account level SAS key for account\" + accountName,\n            storeEx);\n    } catch(URISyntaxException uriSyntaxEx) {\n      throw new SASKeyGenerationException(\"Encountered URISyntaxException for\"\n          + \" account \" + accountName, uriSyntaxEx);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/LocalSASKeyGeneratorImpl.java",
      "extendedDetails": {}
    },
    "e92a77099b91620cee84513cc879089907468075": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13863. Azure: Add a new SAS key mode for WASB. Contributed by Dushyanth\n",
      "commitDate": "22/12/16 8:15 PM",
      "commitName": "e92a77099b91620cee84513cc879089907468075",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,36 @@\n+  private CloudStorageAccount getSASKeyBasedStorageAccountInstance(\n+      String accountName) throws SASKeyGenerationException {\n+\n+    try {\n+\n+      String accountNameWithoutDomain \u003d\n+          getAccountNameWithoutDomain(accountName);\n+\n+      CloudStorageAccount account \u003d\n+          getStorageAccountInstance(accountNameWithoutDomain,\n+              AzureNativeFileSystemStore.getAccountKeyFromConfiguration(\n+                  accountName, getConf()));\n+\n+      return new CloudStorageAccount(\n+          new StorageCredentialsSharedAccessSignature(\n+              account.generateSharedAccessSignature(\n+                  getDefaultAccountAccessPolicy())), false,\n+                  account.getEndpointSuffix(), accountNameWithoutDomain);\n+\n+    } catch (KeyProviderException keyProviderEx) {\n+      throw new SASKeyGenerationException(\"Encountered KeyProviderException\"\n+          + \" while retrieving Storage key from configuration for account \"\n+          + accountName, keyProviderEx);\n+    } catch (InvalidKeyException invalidKeyEx) {\n+      throw new SASKeyGenerationException(\"Encoutered InvalidKeyException \"\n+          + \"while generating Account level SAS key for account\" + accountName,\n+          invalidKeyEx);\n+    } catch(StorageException storeEx) {\n+      throw new SASKeyGenerationException(\"Encoutered StorageException while \"\n+          + \"generating Account level SAS key for account\" + accountName,\n+            storeEx);\n+    } catch(URISyntaxException uriSyntaxEx) {\n+      throw new SASKeyGenerationException(\"Encountered URISyntaxException for\"\n+          + \" account \" + accountName, uriSyntaxEx);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private CloudStorageAccount getSASKeyBasedStorageAccountInstance(\n      String accountName) throws SASKeyGenerationException {\n\n    try {\n\n      String accountNameWithoutDomain \u003d\n          getAccountNameWithoutDomain(accountName);\n\n      CloudStorageAccount account \u003d\n          getStorageAccountInstance(accountNameWithoutDomain,\n              AzureNativeFileSystemStore.getAccountKeyFromConfiguration(\n                  accountName, getConf()));\n\n      return new CloudStorageAccount(\n          new StorageCredentialsSharedAccessSignature(\n              account.generateSharedAccessSignature(\n                  getDefaultAccountAccessPolicy())), false,\n                  account.getEndpointSuffix(), accountNameWithoutDomain);\n\n    } catch (KeyProviderException keyProviderEx) {\n      throw new SASKeyGenerationException(\"Encountered KeyProviderException\"\n          + \" while retrieving Storage key from configuration for account \"\n          + accountName, keyProviderEx);\n    } catch (InvalidKeyException invalidKeyEx) {\n      throw new SASKeyGenerationException(\"Encoutered InvalidKeyException \"\n          + \"while generating Account level SAS key for account\" + accountName,\n          invalidKeyEx);\n    } catch(StorageException storeEx) {\n      throw new SASKeyGenerationException(\"Encoutered StorageException while \"\n          + \"generating Account level SAS key for account\" + accountName,\n            storeEx);\n    } catch(URISyntaxException uriSyntaxEx) {\n      throw new SASKeyGenerationException(\"Encountered URISyntaxException for\"\n          + \" account \" + accountName, uriSyntaxEx);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/LocalSASKeyGeneratorImpl.java"
    }
  }
}