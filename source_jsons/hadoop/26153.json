{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMWebServices.java",
  "functionName": "getJobTasks",
  "functionId": "getJobTasks___hsr-HttpServletRequest(annotations-@Context)__jid-String(annotations-@PathParam(\"jobid\"))__type-String(annotations-@QueryParam(\"type\"))",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
  "functionStartLine": 331,
  "functionEndLine": 353,
  "numCommitsSeen": 12,
  "timeTaken": 1128,
  "changeHistory": [
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef",
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0",
    "0ea8570be578be60e2f32849900a1c50506d78d3"
  ],
  "changeHistoryShort": {
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": "Ybodychange",
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/04/12 2:13 PM",
      "commitNameOld": "e7583d816a69677bbaa4280deb58ea73dbc42cef",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 404.29,
      "commitsBetweenForRepo": 2282,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n       @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n \n     init();\n     Job job \u003d getJobFromJobIdString(jid, appCtx);\n     checkAccess(job, hsr);\n     TasksInfo allTasks \u003d new TasksInfo();\n     for (Task task : job.getTasks().values()) {\n       TaskType ttype \u003d null;\n       if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n         try {\n           ttype \u003d MRApps.taskType(type);\n-        } catch (YarnException e) {\n+        } catch (YarnRuntimeException e) {\n           throw new BadRequestException(\"tasktype must be either m or r\");\n         }\n       }\n       if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n         continue;\n       }\n       allTasks.add(new TaskInfo(task));\n     }\n     return allTasks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n      @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n\n    init();\n    Job job \u003d getJobFromJobIdString(jid, appCtx);\n    checkAccess(job, hsr);\n    TasksInfo allTasks \u003d new TasksInfo();\n    for (Task task : job.getTasks().values()) {\n      TaskType ttype \u003d null;\n      if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n        try {\n          ttype \u003d MRApps.taskType(type);\n        } catch (YarnRuntimeException e) {\n          throw new BadRequestException(\"tasktype must be either m or r\");\n        }\n      }\n      if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n        continue;\n      }\n      allTasks.add(new TaskInfo(task));\n    }\n    return allTasks;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
      "extendedDetails": {}
    },
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3613. web service calls header contains 2 content types (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/12 2:13 PM",
      "commitName": "e7583d816a69677bbaa4280deb58ea73dbc42cef",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/04/12 6:59 PM",
      "commitNameOld": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 7.8,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n       @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n \n+    init();\n     Job job \u003d getJobFromJobIdString(jid, appCtx);\n     checkAccess(job, hsr);\n     TasksInfo allTasks \u003d new TasksInfo();\n     for (Task task : job.getTasks().values()) {\n       TaskType ttype \u003d null;\n       if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n         try {\n           ttype \u003d MRApps.taskType(type);\n         } catch (YarnException e) {\n           throw new BadRequestException(\"tasktype must be either m or r\");\n         }\n       }\n       if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n         continue;\n       }\n       allTasks.add(new TaskInfo(task));\n     }\n     return allTasks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n      @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n\n    init();\n    Job job \u003d getJobFromJobIdString(jid, appCtx);\n    checkAccess(job, hsr);\n    TasksInfo allTasks \u003d new TasksInfo();\n    for (Task task : job.getTasks().values()) {\n      TaskType ttype \u003d null;\n      if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n        try {\n          ttype \u003d MRApps.taskType(type);\n        } catch (YarnException e) {\n          throw new BadRequestException(\"tasktype must be either m or r\");\n        }\n      }\n      if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n        continue;\n      }\n      allTasks.add(new TaskInfo(task));\n    }\n    return allTasks;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
      "extendedDetails": {}
    },
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3548. Added more unit tests for MR AM \u0026 JHS web-services. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227801 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 12:01 PM",
      "commitName": "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 22.87,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n       @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n-    Job job \u003d this.appCtx.getJob(MRApps.toJobID(jid));\n-    if (job \u003d\u003d null) {\n-      throw new NotFoundException(\"job, \" + jid + \", is not found\");\n-    }\n+\n+    Job job \u003d getJobFromJobIdString(jid, appCtx);\n     checkAccess(job, hsr);\n     TasksInfo allTasks \u003d new TasksInfo();\n     for (Task task : job.getTasks().values()) {\n       TaskType ttype \u003d null;\n       if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n         try {\n           ttype \u003d MRApps.taskType(type);\n         } catch (YarnException e) {\n-          throw new BadRequestException(\"tasktype must be either m or r\");        }\n+          throw new BadRequestException(\"tasktype must be either m or r\");\n+        }\n       }\n       if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n         continue;\n       }\n       allTasks.add(new TaskInfo(task));\n     }\n     return allTasks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n      @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n\n    Job job \u003d getJobFromJobIdString(jid, appCtx);\n    checkAccess(job, hsr);\n    TasksInfo allTasks \u003d new TasksInfo();\n    for (Task task : job.getTasks().values()) {\n      TaskType ttype \u003d null;\n      if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n        try {\n          ttype \u003d MRApps.taskType(type);\n        } catch (YarnException e) {\n          throw new BadRequestException(\"tasktype must be either m or r\");\n        }\n      }\n      if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n        continue;\n      }\n      allTasks.add(new TaskInfo(task));\n    }\n    return allTasks;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n+      @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n+    Job job \u003d this.appCtx.getJob(MRApps.toJobID(jid));\n+    if (job \u003d\u003d null) {\n+      throw new NotFoundException(\"job, \" + jid + \", is not found\");\n+    }\n+    checkAccess(job, hsr);\n+    TasksInfo allTasks \u003d new TasksInfo();\n+    for (Task task : job.getTasks().values()) {\n+      TaskType ttype \u003d null;\n+      if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n+        try {\n+          ttype \u003d MRApps.taskType(type);\n+        } catch (YarnException e) {\n+          throw new BadRequestException(\"tasktype must be either m or r\");        }\n+      }\n+      if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n+        continue;\n+      }\n+      allTasks.add(new TaskInfo(task));\n+    }\n+    return allTasks;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TasksInfo getJobTasks(@Context HttpServletRequest hsr,\n      @PathParam(\"jobid\") String jid, @QueryParam(\"type\") String type) {\n    Job job \u003d this.appCtx.getJob(MRApps.toJobID(jid));\n    if (job \u003d\u003d null) {\n      throw new NotFoundException(\"job, \" + jid + \", is not found\");\n    }\n    checkAccess(job, hsr);\n    TasksInfo allTasks \u003d new TasksInfo();\n    for (Task task : job.getTasks().values()) {\n      TaskType ttype \u003d null;\n      if (type !\u003d null \u0026\u0026 !type.isEmpty()) {\n        try {\n          ttype \u003d MRApps.taskType(type);\n        } catch (YarnException e) {\n          throw new BadRequestException(\"tasktype must be either m or r\");        }\n      }\n      if (ttype !\u003d null \u0026\u0026 task.getType() !\u003d ttype) {\n        continue;\n      }\n      allTasks.add(new TaskInfo(task));\n    }\n    return allTasks;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java"
    }
  }
}