{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerExecutor.java",
  "functionName": "getRunCommand",
  "functionId": "getRunCommand___command-String__groupId-String__userName-String__pidFile-Path__config-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
  "functionStartLine": 590,
  "functionEndLine": 593,
  "numCommitsSeen": 96,
  "timeTaken": 4416,
  "changeHistory": [
    "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
    "21101c01f242439ec8ec40fb3a9ab1991ae0adc7",
    "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
    "d8ea364d07f782f8693b1ac0c340d4bd8d471c32",
    "5f2c518c95b2186b784877a5f41c7b71f8abc2f6",
    "638801cce16fc1dc3259c541dc30a599faaddda1"
  ],
  "changeHistoryShort": {
    "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0": "Ymultichange(Yparameterchange,Ybodychange)",
    "21101c01f242439ec8ec40fb3a9ab1991ae0adc7": "Ybodychange",
    "ba7f31c2ee8d23ecb183f88920ef06053c0b9769": "Ymultichange(Yparameterchange,Ymodifierchange)",
    "d8ea364d07f782f8693b1ac0c340d4bd8d471c32": "Ybodychange",
    "5f2c518c95b2186b784877a5f41c7b71f8abc2f6": "Ymultichange(Yparameterchange,Ybodychange)",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5383. Fix findbugs and checkstyle issues in ContainerExecutor. (Vrushali C via Varun Saxena)\n",
      "commitDate": "15/07/16 10:47 AM",
      "commitName": "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5383. Fix findbugs and checkstyle issues in ContainerExecutor. (Vrushali C via Varun Saxena)\n",
          "commitDate": "15/07/16 10:47 AM",
          "commitName": "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "14/07/16 6:58 AM",
          "commitNameOld": "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n   protected String[] getRunCommand(String command, String groupId,\n-      String userName, Path pidFile, Configuration conf) {\n-    return getRunCommand(command, groupId, userName, pidFile, conf, null);\n+      String userName, Path pidFile, Configuration config) {\n+    return getRunCommand(command, groupId, userName, pidFile, config, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String[] getRunCommand(String command, String groupId,\n      String userName, Path pidFile, Configuration config) {\n    return getRunCommand(command, groupId, userName, pidFile, config, null);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[command-String, groupId-String, userName-String, pidFile-Path, conf-Configuration]",
            "newValue": "[command-String, groupId-String, userName-String, pidFile-Path, config-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5383. Fix findbugs and checkstyle issues in ContainerExecutor. (Vrushali C via Varun Saxena)\n",
          "commitDate": "15/07/16 10:47 AM",
          "commitName": "a72cb3825a11830be9ad35ae7ddbf42a3d2892b0",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "14/07/16 6:58 AM",
          "commitNameOld": "54bf14f80bcb2cafd1d30b77f2e02cd40b9515d9",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n   protected String[] getRunCommand(String command, String groupId,\n-      String userName, Path pidFile, Configuration conf) {\n-    return getRunCommand(command, groupId, userName, pidFile, conf, null);\n+      String userName, Path pidFile, Configuration config) {\n+    return getRunCommand(command, groupId, userName, pidFile, config, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String[] getRunCommand(String command, String groupId,\n      String userName, Path pidFile, Configuration config) {\n    return getRunCommand(command, groupId, userName, pidFile, config, null);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "21101c01f242439ec8ec40fb3a9ab1991ae0adc7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2190. Added CPU and memory limit options to the default container executor for Windows containers. Contributed by Chuan Liu\n",
      "commitDate": "06/03/15 2:18 PM",
      "commitName": "21101c01f242439ec8ec40fb3a9ab1991ae0adc7",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/12/14 8:32 PM",
      "commitNameOld": "41a548a916d4248164cb9495320f123ec215d70e",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 72.74,
      "commitsBetweenForRepo": 556,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,4 @@\n   protected String[] getRunCommand(String command, String groupId,\n       String userName, Path pidFile, Configuration conf) {\n-    boolean containerSchedPriorityIsSet \u003d false;\n-    int containerSchedPriorityAdjustment \u003d \n-        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n-\n-    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n-        null) {\n-      containerSchedPriorityIsSet \u003d true;\n-      containerSchedPriorityAdjustment \u003d conf \n-          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n-          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n-    }\n-  \n-    if (Shell.WINDOWS) {\n-      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n-          \"cmd /c \" + command };\n-    } else {\n-      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n-      if (containerSchedPriorityIsSet) {\n-        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n-            Integer.toString(containerSchedPriorityAdjustment)));\n-      }\n-      retCommand.addAll(Arrays.asList(\"bash\", command));\n-      return retCommand.toArray(new String[retCommand.size()]);\n-    }\n-\n+    return getRunCommand(command, groupId, userName, pidFile, conf, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected String[] getRunCommand(String command, String groupId,\n      String userName, Path pidFile, Configuration conf) {\n    return getRunCommand(command, groupId, userName, pidFile, conf, null);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
      "extendedDetails": {}
    },
    "ba7f31c2ee8d23ecb183f88920ef06053c0b9769": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange)",
      "commitMessage": "YARN-1972. Added a secure container-executor for Windows. Contributed by Remus Rusanu.\n",
      "commitDate": "01/10/14 10:14 AM",
      "commitName": "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1972. Added a secure container-executor for Windows. Contributed by Remus Rusanu.\n",
          "commitDate": "01/10/14 10:14 AM",
          "commitName": "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 50.26,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  protected static String[] getRunCommand(String command, String groupId,\n-                                          Configuration conf) {\n+  protected String[] getRunCommand(String command, String groupId,\n+      String userName, Path pidFile, Configuration conf) {\n     boolean containerSchedPriorityIsSet \u003d false;\n     int containerSchedPriorityAdjustment \u003d \n         YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n \n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n         null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf \n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n           YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n   \n     if (Shell.WINDOWS) {\n       return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n           \"cmd /c \" + command };\n     } else {\n       List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n       if (containerSchedPriorityIsSet) {\n         retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n             Integer.toString(containerSchedPriorityAdjustment)));\n       }\n       retCommand.addAll(Arrays.asList(\"bash\", command));\n       return retCommand.toArray(new String[retCommand.size()]);\n     }\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String[] getRunCommand(String command, String groupId,\n      String userName, Path pidFile, Configuration conf) {\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d \n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf \n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n  \n    if (Shell.WINDOWS) {\n      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n          \"cmd /c \" + command };\n    } else {\n      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n      if (containerSchedPriorityIsSet) {\n        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n            Integer.toString(containerSchedPriorityAdjustment)));\n      }\n      retCommand.addAll(Arrays.asList(\"bash\", command));\n      return retCommand.toArray(new String[retCommand.size()]);\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[command-String, groupId-String, conf-Configuration]",
            "newValue": "[command-String, groupId-String, userName-String, pidFile-Path, conf-Configuration]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1972. Added a secure container-executor for Windows. Contributed by Remus Rusanu.\n",
          "commitDate": "01/10/14 10:14 AM",
          "commitName": "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 50.26,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  protected static String[] getRunCommand(String command, String groupId,\n-                                          Configuration conf) {\n+  protected String[] getRunCommand(String command, String groupId,\n+      String userName, Path pidFile, Configuration conf) {\n     boolean containerSchedPriorityIsSet \u003d false;\n     int containerSchedPriorityAdjustment \u003d \n         YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n \n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n         null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf \n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n           YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n   \n     if (Shell.WINDOWS) {\n       return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n           \"cmd /c \" + command };\n     } else {\n       List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n       if (containerSchedPriorityIsSet) {\n         retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n             Integer.toString(containerSchedPriorityAdjustment)));\n       }\n       retCommand.addAll(Arrays.asList(\"bash\", command));\n       return retCommand.toArray(new String[retCommand.size()]);\n     }\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String[] getRunCommand(String command, String groupId,\n      String userName, Path pidFile, Configuration conf) {\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d \n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf \n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n  \n    if (Shell.WINDOWS) {\n      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n          \"cmd /c \" + command };\n    } else {\n      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n      if (containerSchedPriorityIsSet) {\n        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n            Integer.toString(containerSchedPriorityAdjustment)));\n      }\n      retCommand.addAll(Arrays.asList(\"bash\", command));\n      return retCommand.toArray(new String[retCommand.size()]);\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[protected, static]",
            "newValue": "[protected]"
          }
        }
      ]
    },
    "d8ea364d07f782f8693b1ac0c340d4bd8d471c32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1271. Text file busy errors launching containers again (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529058 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/10/13 6:30 PM",
      "commitName": "d8ea364d07f782f8693b1ac0c340d4bd8d471c32",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "18/07/13 5:28 PM",
      "commitNameOld": "7a29bccd7aaf2eb33adac937379ba6be43a1031d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 77.04,
      "commitsBetweenForRepo": 459,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   protected static String[] getRunCommand(String command, String groupId,\n                                           Configuration conf) {\n     boolean containerSchedPriorityIsSet \u003d false;\n     int containerSchedPriorityAdjustment \u003d \n         YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n \n     if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n         null) {\n       containerSchedPriorityIsSet \u003d true;\n       containerSchedPriorityAdjustment \u003d conf \n           .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n           YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n     }\n   \n     if (Shell.WINDOWS) {\n       return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n           \"cmd /c \" + command };\n     } else {\n       List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n       if (containerSchedPriorityIsSet) {\n         retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n             Integer.toString(containerSchedPriorityAdjustment)));\n       }\n-      retCommand.addAll(Arrays.asList(\"bash\", \"-c\", command));\n+      retCommand.addAll(Arrays.asList(\"bash\", command));\n       return retCommand.toArray(new String[retCommand.size()]);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected static String[] getRunCommand(String command, String groupId,\n                                          Configuration conf) {\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d \n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf \n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n  \n    if (Shell.WINDOWS) {\n      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n          \"cmd /c \" + command };\n    } else {\n      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n      if (containerSchedPriorityIsSet) {\n        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n            Integer.toString(containerSchedPriorityAdjustment)));\n      }\n      retCommand.addAll(Arrays.asList(\"bash\", command));\n      return retCommand.toArray(new String[retCommand.size()]);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
      "extendedDetails": {}
    },
    "5f2c518c95b2186b784877a5f41c7b71f8abc2f6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-443. allow OS scheduling priority of NM to be different than the containers it launches (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454411 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/03/13 6:46 AM",
      "commitName": "5f2c518c95b2186b784877a5f41c7b71f8abc2f6",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-443. allow OS scheduling priority of NM to be different than the containers it launches (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454411 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/03/13 6:46 AM",
          "commitName": "5f2c518c95b2186b784877a5f41c7b71f8abc2f6",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "06/03/13 11:15 AM",
          "commitNameOld": "638801cce16fc1dc3259c541dc30a599faaddda1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.81,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,28 @@\n-  protected static String[] getRunCommand(String command,\n-                                          String groupId) {\n+  protected static String[] getRunCommand(String command, String groupId,\n+                                          Configuration conf) {\n+    boolean containerSchedPriorityIsSet \u003d false;\n+    int containerSchedPriorityAdjustment \u003d \n+        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n+\n+    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n+        null) {\n+      containerSchedPriorityIsSet \u003d true;\n+      containerSchedPriorityAdjustment \u003d conf \n+          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n+          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n+    }\n+  \n     if (Shell.WINDOWS) {\n       return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n-        \"cmd /c \" + command };\n+          \"cmd /c \" + command };\n     } else {\n-      return new String[] { \"bash\", \"-c\", command };\n+      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n+      if (containerSchedPriorityIsSet) {\n+        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n+            Integer.toString(containerSchedPriorityAdjustment)));\n+      }\n+      retCommand.addAll(Arrays.asList(\"bash\", \"-c\", command));\n+      return retCommand.toArray(new String[retCommand.size()]);\n     }\n+\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static String[] getRunCommand(String command, String groupId,\n                                          Configuration conf) {\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d \n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf \n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n  \n    if (Shell.WINDOWS) {\n      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n          \"cmd /c \" + command };\n    } else {\n      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n      if (containerSchedPriorityIsSet) {\n        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n            Integer.toString(containerSchedPriorityAdjustment)));\n      }\n      retCommand.addAll(Arrays.asList(\"bash\", \"-c\", command));\n      return retCommand.toArray(new String[retCommand.size()]);\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[command-String, groupId-String]",
            "newValue": "[command-String, groupId-String, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-443. allow OS scheduling priority of NM to be different than the containers it launches (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454411 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/03/13 6:46 AM",
          "commitName": "5f2c518c95b2186b784877a5f41c7b71f8abc2f6",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "06/03/13 11:15 AM",
          "commitNameOld": "638801cce16fc1dc3259c541dc30a599faaddda1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.81,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,28 @@\n-  protected static String[] getRunCommand(String command,\n-                                          String groupId) {\n+  protected static String[] getRunCommand(String command, String groupId,\n+                                          Configuration conf) {\n+    boolean containerSchedPriorityIsSet \u003d false;\n+    int containerSchedPriorityAdjustment \u003d \n+        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n+\n+    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n+        null) {\n+      containerSchedPriorityIsSet \u003d true;\n+      containerSchedPriorityAdjustment \u003d conf \n+          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n+          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n+    }\n+  \n     if (Shell.WINDOWS) {\n       return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n-        \"cmd /c \" + command };\n+          \"cmd /c \" + command };\n     } else {\n-      return new String[] { \"bash\", \"-c\", command };\n+      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n+      if (containerSchedPriorityIsSet) {\n+        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n+            Integer.toString(containerSchedPriorityAdjustment)));\n+      }\n+      retCommand.addAll(Arrays.asList(\"bash\", \"-c\", command));\n+      return retCommand.toArray(new String[retCommand.size()]);\n     }\n+\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static String[] getRunCommand(String command, String groupId,\n                                          Configuration conf) {\n    boolean containerSchedPriorityIsSet \u003d false;\n    int containerSchedPriorityAdjustment \u003d \n        YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY;\n\n    if (conf.get(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY) !\u003d \n        null) {\n      containerSchedPriorityIsSet \u003d true;\n      containerSchedPriorityAdjustment \u003d conf \n          .getInt(YarnConfiguration.NM_CONTAINER_EXECUTOR_SCHED_PRIORITY, \n          YarnConfiguration.DEFAULT_NM_CONTAINER_EXECUTOR_SCHED_PRIORITY);\n    }\n  \n    if (Shell.WINDOWS) {\n      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n          \"cmd /c \" + command };\n    } else {\n      List\u003cString\u003e retCommand \u003d new ArrayList\u003cString\u003e();\n      if (containerSchedPriorityIsSet) {\n        retCommand.addAll(Arrays.asList(\"nice\", \"-n\",\n            Integer.toString(containerSchedPriorityAdjustment)));\n      }\n      retCommand.addAll(Arrays.asList(\"bash\", \"-c\", command));\n      return retCommand.toArray(new String[retCommand.size()]);\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,9 @@\n+  protected static String[] getRunCommand(String command,\n+                                          String groupId) {\n+    if (Shell.WINDOWS) {\n+      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n+        \"cmd /c \" + command };\n+    } else {\n+      return new String[] { \"bash\", \"-c\", command };\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected static String[] getRunCommand(String command,\n                                          String groupId) {\n    if (Shell.WINDOWS) {\n      return new String[] { Shell.WINUTILS, \"task\", \"create\", groupId,\n        \"cmd /c \" + command };\n    } else {\n      return new String[] { \"bash\", \"-c\", command };\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/ContainerExecutor.java"
    }
  }
}