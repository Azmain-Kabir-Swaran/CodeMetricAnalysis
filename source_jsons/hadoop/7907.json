{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CachePool.java",
  "functionName": "createFromInfoAndDefaults",
  "functionId": "createFromInfoAndDefaults___info-CachePoolInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CachePool.java",
  "functionStartLine": 110,
  "functionEndLine": 138,
  "numCommitsSeen": 18,
  "timeTaken": 2101,
  "changeHistory": [
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
    "f36f0dde8866e2233dad26b38a8d432d2302a51a",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
    "991c453ca3ac141a3f286f74af8401f83c38b230",
    "b60e18db743b8933d96384942046ea57e725855d"
  ],
  "changeHistoryShort": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": "Ybodychange",
    "f36f0dde8866e2233dad26b38a8d432d2302a51a": "Ybodychange",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": "Ybodychange",
    "991c453ca3ac141a3f286f74af8401f83c38b230": "Ybodychange",
    "b60e18db743b8933d96384942046ea57e725855d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10328. Add per-cache-pool default replication num configuration (xupeng via cmccabe)\n",
      "commitDate": "20/06/16 10:42 AM",
      "commitName": "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "23/04/14 10:05 PM",
      "commitNameOld": "f36f0dde8866e2233dad26b38a8d432d2302a51a",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 788.53,
      "commitsBetweenForRepo": 6083,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n   static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n       throws IOException {\n     UserGroupInformation ugi \u003d null;\n     String ownerName \u003d info.getOwnerName();\n     if (ownerName \u003d\u003d null) {\n       ugi \u003d NameNode.getRemoteUser();\n       ownerName \u003d ugi.getShortUserName();\n     }\n     String groupName \u003d info.getGroupName();\n     if (groupName \u003d\u003d null) {\n       if (ugi \u003d\u003d null) {\n         ugi \u003d NameNode.getRemoteUser();\n       }\n       groupName \u003d ugi.getPrimaryGroupName();\n     }\n     FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n         FsPermission.getCachePoolDefault() : info.getMode();\n     long limit \u003d info.getLimit() \u003d\u003d null ?\n         CachePoolInfo.DEFAULT_LIMIT : info.getLimit();\n+    short defaultReplication \u003d info.getDefaultReplication() \u003d\u003d null ?\n+        CachePoolInfo.DEFAULT_REPLICATION_NUM :\n+        info.getDefaultReplication();\n     long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs() \u003d\u003d null ?\n         CachePoolInfo.DEFAULT_MAX_RELATIVE_EXPIRY :\n         info.getMaxRelativeExpiryMs();\n     return new CachePool(info.getPoolName(),\n-        ownerName, groupName, mode, limit, maxRelativeExpiry);\n+        ownerName, groupName, mode, limit,\n+        defaultReplication, maxRelativeExpiry);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n      throws IOException {\n    UserGroupInformation ugi \u003d null;\n    String ownerName \u003d info.getOwnerName();\n    if (ownerName \u003d\u003d null) {\n      ugi \u003d NameNode.getRemoteUser();\n      ownerName \u003d ugi.getShortUserName();\n    }\n    String groupName \u003d info.getGroupName();\n    if (groupName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      groupName \u003d ugi.getPrimaryGroupName();\n    }\n    FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n        FsPermission.getCachePoolDefault() : info.getMode();\n    long limit \u003d info.getLimit() \u003d\u003d null ?\n        CachePoolInfo.DEFAULT_LIMIT : info.getLimit();\n    short defaultReplication \u003d info.getDefaultReplication() \u003d\u003d null ?\n        CachePoolInfo.DEFAULT_REPLICATION_NUM :\n        info.getDefaultReplication();\n    long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs() \u003d\u003d null ?\n        CachePoolInfo.DEFAULT_MAX_RELATIVE_EXPIRY :\n        info.getMaxRelativeExpiryMs();\n    return new CachePool(info.getPoolName(),\n        ownerName, groupName, mode, limit,\n        defaultReplication, maxRelativeExpiry);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CachePool.java",
      "extendedDetails": {}
    },
    "f36f0dde8866e2233dad26b38a8d432d2302a51a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6276. Remove unnecessary conditions and null check. Contributed by Suresh Srinivas\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589586 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/14 10:05 PM",
      "commitName": "f36f0dde8866e2233dad26b38a8d432d2302a51a",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 30.23,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,25 @@\n   static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n       throws IOException {\n     UserGroupInformation ugi \u003d null;\n     String ownerName \u003d info.getOwnerName();\n     if (ownerName \u003d\u003d null) {\n-      if (ugi \u003d\u003d null) {\n-        ugi \u003d NameNode.getRemoteUser();\n-      }\n+      ugi \u003d NameNode.getRemoteUser();\n       ownerName \u003d ugi.getShortUserName();\n     }\n     String groupName \u003d info.getGroupName();\n     if (groupName \u003d\u003d null) {\n       if (ugi \u003d\u003d null) {\n         ugi \u003d NameNode.getRemoteUser();\n       }\n       groupName \u003d ugi.getPrimaryGroupName();\n     }\n     FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n         FsPermission.getCachePoolDefault() : info.getMode();\n     long limit \u003d info.getLimit() \u003d\u003d null ?\n         CachePoolInfo.DEFAULT_LIMIT : info.getLimit();\n     long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs() \u003d\u003d null ?\n         CachePoolInfo.DEFAULT_MAX_RELATIVE_EXPIRY :\n         info.getMaxRelativeExpiryMs();\n     return new CachePool(info.getPoolName(),\n         ownerName, groupName, mode, limit, maxRelativeExpiry);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n      throws IOException {\n    UserGroupInformation ugi \u003d null;\n    String ownerName \u003d info.getOwnerName();\n    if (ownerName \u003d\u003d null) {\n      ugi \u003d NameNode.getRemoteUser();\n      ownerName \u003d ugi.getShortUserName();\n    }\n    String groupName \u003d info.getGroupName();\n    if (groupName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      groupName \u003d ugi.getPrimaryGroupName();\n    }\n    FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n        FsPermission.getCachePoolDefault() : info.getMode();\n    long limit \u003d info.getLimit() \u003d\u003d null ?\n        CachePoolInfo.DEFAULT_LIMIT : info.getLimit();\n    long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs() \u003d\u003d null ?\n        CachePoolInfo.DEFAULT_MAX_RELATIVE_EXPIRY :\n        info.getMaxRelativeExpiryMs();\n    return new CachePool(info.getPoolName(),\n        ownerName, groupName, mode, limit, maxRelativeExpiry);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CachePool.java",
      "extendedDetails": {}
    },
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5636. Enforce a max TTL per cache pool (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/13 3:27 PM",
      "commitName": "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "17/12/13 10:47 AM",
      "commitNameOld": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 3.19,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n   static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n       throws IOException {\n     UserGroupInformation ugi \u003d null;\n     String ownerName \u003d info.getOwnerName();\n     if (ownerName \u003d\u003d null) {\n       if (ugi \u003d\u003d null) {\n         ugi \u003d NameNode.getRemoteUser();\n       }\n       ownerName \u003d ugi.getShortUserName();\n     }\n     String groupName \u003d info.getGroupName();\n     if (groupName \u003d\u003d null) {\n       if (ugi \u003d\u003d null) {\n         ugi \u003d NameNode.getRemoteUser();\n       }\n       groupName \u003d ugi.getPrimaryGroupName();\n     }\n     FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n         FsPermission.getCachePoolDefault() : info.getMode();\n     long limit \u003d info.getLimit() \u003d\u003d null ?\n-        DEFAULT_LIMIT : info.getLimit();\n+        CachePoolInfo.DEFAULT_LIMIT : info.getLimit();\n+    long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs() \u003d\u003d null ?\n+        CachePoolInfo.DEFAULT_MAX_RELATIVE_EXPIRY :\n+        info.getMaxRelativeExpiryMs();\n     return new CachePool(info.getPoolName(),\n-        ownerName, groupName, mode, limit);\n+        ownerName, groupName, mode, limit, maxRelativeExpiry);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n      throws IOException {\n    UserGroupInformation ugi \u003d null;\n    String ownerName \u003d info.getOwnerName();\n    if (ownerName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      ownerName \u003d ugi.getShortUserName();\n    }\n    String groupName \u003d info.getGroupName();\n    if (groupName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      groupName \u003d ugi.getPrimaryGroupName();\n    }\n    FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n        FsPermission.getCachePoolDefault() : info.getMode();\n    long limit \u003d info.getLimit() \u003d\u003d null ?\n        CachePoolInfo.DEFAULT_LIMIT : info.getLimit();\n    long maxRelativeExpiry \u003d info.getMaxRelativeExpiryMs() \u003d\u003d null ?\n        CachePoolInfo.DEFAULT_MAX_RELATIVE_EXPIRY :\n        info.getMaxRelativeExpiryMs();\n    return new CachePool(info.getPoolName(),\n        ownerName, groupName, mode, limit, maxRelativeExpiry);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CachePool.java",
      "extendedDetails": {}
    },
    "991c453ca3ac141a3f286f74af8401f83c38b230": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 10:47 AM",
      "commitName": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "05/12/13 1:09 PM",
      "commitNameOld": "55e5b0653c34a5f4146ce5a97a5b4a88a976d88a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.9,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n       throws IOException {\n     UserGroupInformation ugi \u003d null;\n     String ownerName \u003d info.getOwnerName();\n     if (ownerName \u003d\u003d null) {\n       if (ugi \u003d\u003d null) {\n         ugi \u003d NameNode.getRemoteUser();\n       }\n       ownerName \u003d ugi.getShortUserName();\n     }\n     String groupName \u003d info.getGroupName();\n     if (groupName \u003d\u003d null) {\n       if (ugi \u003d\u003d null) {\n         ugi \u003d NameNode.getRemoteUser();\n       }\n       groupName \u003d ugi.getPrimaryGroupName();\n     }\n     FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n         FsPermission.getCachePoolDefault() : info.getMode();\n-    Integer weight \u003d (info.getWeight() \u003d\u003d null) ?\n-        DEFAULT_WEIGHT : info.getWeight();\n+    long limit \u003d info.getLimit() \u003d\u003d null ?\n+        DEFAULT_LIMIT : info.getLimit();\n     return new CachePool(info.getPoolName(),\n-        ownerName, groupName, mode, weight);\n+        ownerName, groupName, mode, limit);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n      throws IOException {\n    UserGroupInformation ugi \u003d null;\n    String ownerName \u003d info.getOwnerName();\n    if (ownerName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      ownerName \u003d ugi.getShortUserName();\n    }\n    String groupName \u003d info.getGroupName();\n    if (groupName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      groupName \u003d ugi.getPrimaryGroupName();\n    }\n    FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n        FsPermission.getCachePoolDefault() : info.getMode();\n    long limit \u003d info.getLimit() \u003d\u003d null ?\n        DEFAULT_LIMIT : info.getLimit();\n    return new CachePool(info.getPoolName(),\n        ownerName, groupName, mode, limit);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CachePool.java",
      "extendedDetails": {}
    },
    "b60e18db743b8933d96384942046ea57e725855d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5314.  Do not expose CachePool type in AddCachePoolOp (Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1530073 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/10/13 2:26 PM",
      "commitName": "b60e18db743b8933d96384942046ea57e725855d",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,24 @@\n+  static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n+      throws IOException {\n+    UserGroupInformation ugi \u003d null;\n+    String ownerName \u003d info.getOwnerName();\n+    if (ownerName \u003d\u003d null) {\n+      if (ugi \u003d\u003d null) {\n+        ugi \u003d NameNode.getRemoteUser();\n+      }\n+      ownerName \u003d ugi.getShortUserName();\n+    }\n+    String groupName \u003d info.getGroupName();\n+    if (groupName \u003d\u003d null) {\n+      if (ugi \u003d\u003d null) {\n+        ugi \u003d NameNode.getRemoteUser();\n+      }\n+      groupName \u003d ugi.getPrimaryGroupName();\n+    }\n+    FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n+        FsPermission.getCachePoolDefault() : info.getMode();\n+    Integer weight \u003d (info.getWeight() \u003d\u003d null) ?\n+        DEFAULT_WEIGHT : info.getWeight();\n+    return new CachePool(info.getPoolName(),\n+        ownerName, groupName, mode, weight);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static CachePool createFromInfoAndDefaults(CachePoolInfo info)\n      throws IOException {\n    UserGroupInformation ugi \u003d null;\n    String ownerName \u003d info.getOwnerName();\n    if (ownerName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      ownerName \u003d ugi.getShortUserName();\n    }\n    String groupName \u003d info.getGroupName();\n    if (groupName \u003d\u003d null) {\n      if (ugi \u003d\u003d null) {\n        ugi \u003d NameNode.getRemoteUser();\n      }\n      groupName \u003d ugi.getPrimaryGroupName();\n    }\n    FsPermission mode \u003d (info.getMode() \u003d\u003d null) ? \n        FsPermission.getCachePoolDefault() : info.getMode();\n    Integer weight \u003d (info.getWeight() \u003d\u003d null) ?\n        DEFAULT_WEIGHT : info.getWeight();\n    return new CachePool(info.getPoolName(),\n        ownerName, groupName, mode, weight);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/CachePool.java"
    }
  }
}