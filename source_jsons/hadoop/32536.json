{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMController.java",
  "functionName": "logs",
  "functionId": "logs",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
  "functionStartLine": 69,
  "functionEndLine": 71,
  "numCommitsSeen": 10,
  "timeTaken": 7104,
  "changeHistory": [
    "6329bd00fa1f17cc9555efa496ea7607ad93e0ce",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b",
    "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "6329bd00fa1f17cc9555efa496ea7607ad93e0ce": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b": "Ybodychange",
    "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e": "Ybodychange",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6329bd00fa1f17cc9555efa496ea7607ad93e0ce": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3654. ContainerLogsPage web UI should not have meta-refresh. Contributed by Xuan Gong\n",
      "commitDate": "20/05/15 5:20 PM",
      "commitName": "6329bd00fa1f17cc9555efa496ea7607ad93e0ce",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/04/15 5:23 PM",
      "commitNameOld": "bad070fe15a642cc6f3a165612fbd272187e03cb",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 48.0,
      "commitsBetweenForRepo": 485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,3 @@\n   public void logs() {\n-    String containerIdStr \u003d $(CONTAINER_ID);\n-    ContainerId containerId \u003d null;\n-    try {\n-      containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n-    } catch (IllegalArgumentException e) {\n-      render(ContainerLogsPage.class);\n-      return;\n-    }\n-    ApplicationId appId \u003d\n-        containerId.getApplicationAttemptId().getApplicationId();\n-    Application app \u003d nmContext.getApplications().get(appId);\n-    if (app \u003d\u003d null\n-        \u0026\u0026 nmConf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n-            YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n-      String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n-      String redirectUrl \u003d null;\n-      if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n-        redirectUrl \u003d \"false\";\n-      } else {\n-        redirectUrl \u003d\n-            url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n-                containerIdStr, $(APP_OWNER));\n-      }\n-      set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n-    }\n     render(ContainerLogsPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logs() {\n    render(ContainerLogsPage.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void logs() {\n    String containerIdStr \u003d $(CONTAINER_ID);\n    ContainerId containerId \u003d null;\n    try {\n      containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n    } catch (IllegalArgumentException e) {\n      render(ContainerLogsPage.class);\n      return;\n    }\n    ApplicationId appId \u003d\n        containerId.getApplicationAttemptId().getApplicationId();\n    Application app \u003d nmContext.getApplications().get(appId);\n    if (app \u003d\u003d null\n        \u0026\u0026 nmConf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n            YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n      String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n      String redirectUrl \u003d null;\n      if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n        redirectUrl \u003d \"false\";\n      } else {\n        redirectUrl \u003d\n            url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n                containerIdStr, $(APP_OWNER));\n      }\n      set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n    }\n    render(ContainerLogsPage.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java"
      }
    },
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3398. Fixed log aggregation to work correctly in secure mode. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214429 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 11:55 AM",
      "commitName": "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/11/11 1:02 AM",
      "commitNameOld": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 41.5,
      "commitsBetweenForRepo": 222,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public void logs() {\n     String containerIdStr \u003d $(CONTAINER_ID);\n     ContainerId containerId \u003d null;\n     try {\n       containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n     } catch (IllegalArgumentException e) {\n       render(ContainerLogsPage.class);\n       return;\n     }\n     ApplicationId appId \u003d\n         containerId.getApplicationAttemptId().getApplicationId();\n     Application app \u003d nmContext.getApplications().get(appId);\n     if (app \u003d\u003d null\n-        \u0026\u0026 nmConf.getBoolean(YarnConfiguration.NM_LOG_AGGREGATION_ENABLED,\n-            YarnConfiguration.DEFAULT_NM_LOG_AGGREGATION_ENABLED)) {\n+        \u0026\u0026 nmConf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n+            YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n       String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n       String redirectUrl \u003d null;\n       if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n         redirectUrl \u003d \"false\";\n       } else {\n         redirectUrl \u003d\n             url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n                 containerIdStr, $(APP_OWNER));\n       }\n       set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n     }\n     render(ContainerLogsPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logs() {\n    String containerIdStr \u003d $(CONTAINER_ID);\n    ContainerId containerId \u003d null;\n    try {\n      containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n    } catch (IllegalArgumentException e) {\n      render(ContainerLogsPage.class);\n      return;\n    }\n    ApplicationId appId \u003d\n        containerId.getApplicationAttemptId().getApplicationId();\n    Application app \u003d nmContext.getApplications().get(appId);\n    if (app \u003d\u003d null\n        \u0026\u0026 nmConf.getBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED,\n            YarnConfiguration.DEFAULT_LOG_AGGREGATION_ENABLED)) {\n      String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n      String redirectUrl \u003d null;\n      if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n        redirectUrl \u003d \"false\";\n      } else {\n        redirectUrl \u003d\n            url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n                containerIdStr, $(APP_OWNER));\n      }\n      set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n    }\n    render(ContainerLogsPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
      "extendedDetails": {}
    },
    "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2696. Fixed NodeManager to cleanup logs in a thread when logs\u0027 aggregation is not enabled. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195383 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 2:55 AM",
      "commitName": "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/10/11 11:45 PM",
      "commitNameOld": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.13,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public void logs() {\n     String containerIdStr \u003d $(CONTAINER_ID);\n     ContainerId containerId \u003d null;\n     try {\n       containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n     } catch (IllegalArgumentException e) {\n       render(ContainerLogsPage.class);\n       return;\n     }\n     ApplicationId appId \u003d\n         containerId.getApplicationAttemptId().getApplicationId();\n     Application app \u003d nmContext.getApplications().get(appId);\n-    if (app \u003d\u003d null) {\n+    if (app \u003d\u003d null\n+        \u0026\u0026 nmConf.getBoolean(YarnConfiguration.NM_LOG_AGGREGATION_ENABLED,\n+            YarnConfiguration.DEFAULT_NM_LOG_AGGREGATION_ENABLED)) {\n       String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n       String redirectUrl \u003d null;\n       if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n         redirectUrl \u003d \"false\";\n       } else {\n         redirectUrl \u003d\n             url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n                 containerIdStr, $(APP_OWNER));\n       }\n       set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n     }\n     render(ContainerLogsPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logs() {\n    String containerIdStr \u003d $(CONTAINER_ID);\n    ContainerId containerId \u003d null;\n    try {\n      containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n    } catch (IllegalArgumentException e) {\n      render(ContainerLogsPage.class);\n      return;\n    }\n    ApplicationId appId \u003d\n        containerId.getApplicationAttemptId().getApplicationId();\n    Application app \u003d nmContext.getApplications().get(appId);\n    if (app \u003d\u003d null\n        \u0026\u0026 nmConf.getBoolean(YarnConfiguration.NM_LOG_AGGREGATION_ENABLED,\n            YarnConfiguration.DEFAULT_NM_LOG_AGGREGATION_ENABLED)) {\n      String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n      String redirectUrl \u003d null;\n      if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n        redirectUrl \u003d \"false\";\n      } else {\n        redirectUrl \u003d\n            url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n                containerIdStr, $(APP_OWNER));\n      }\n      set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n    }\n    render(ContainerLogsPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
      "extendedDetails": {}
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 49.21,
      "commitsBetweenForRepo": 395,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,26 @@\n   public void logs() {\n+    String containerIdStr \u003d $(CONTAINER_ID);\n+    ContainerId containerId \u003d null;\n+    try {\n+      containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n+    } catch (IllegalArgumentException e) {\n+      render(ContainerLogsPage.class);\n+      return;\n+    }\n+    ApplicationId appId \u003d\n+        containerId.getApplicationAttemptId().getApplicationId();\n+    Application app \u003d nmContext.getApplications().get(appId);\n+    if (app \u003d\u003d null) {\n+      String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n+      String redirectUrl \u003d null;\n+      if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n+        redirectUrl \u003d \"false\";\n+      } else {\n+        redirectUrl \u003d\n+            url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n+                containerIdStr, $(APP_OWNER));\n+      }\n+      set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n+    }\n     render(ContainerLogsPage.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logs() {\n    String containerIdStr \u003d $(CONTAINER_ID);\n    ContainerId containerId \u003d null;\n    try {\n      containerId \u003d ConverterUtils.toContainerId(containerIdStr);\n    } catch (IllegalArgumentException e) {\n      render(ContainerLogsPage.class);\n      return;\n    }\n    ApplicationId appId \u003d\n        containerId.getApplicationAttemptId().getApplicationId();\n    Application app \u003d nmContext.getApplications().get(appId);\n    if (app \u003d\u003d null) {\n      String logServerUrl \u003d nmConf.get(YarnConfiguration.YARN_LOG_SERVER_URL);\n      String redirectUrl \u003d null;\n      if (logServerUrl \u003d\u003d null || logServerUrl.isEmpty()) {\n        redirectUrl \u003d \"false\";\n      } else {\n        redirectUrl \u003d\n            url(logServerUrl, nmContext.getNodeId().toString(), containerIdStr,\n                containerIdStr, $(APP_OWNER));\n      }\n      set(ContainerLogsPage.REDIRECT_URL, redirectUrl);\n    }\n    render(ContainerLogsPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void logs() {\n    render(ContainerLogsPage.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,3 @@\n+  public void logs() {\n+    render(ContainerLogsPage.class);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void logs() {\n    render(ContainerLogsPage.class);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java"
    }
  }
}