{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptBlock.java",
  "functionName": "generateOverview",
  "functionId": "generateOverview___appAttemptReport-ApplicationAttemptReport__containers-Collection__ContainerReport____appAttempt-AppAttemptInfo__node-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
  "functionStartLine": 464,
  "functionEndLine": 512,
  "numCommitsSeen": 17,
  "timeTaken": 2827,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "620325e81696fca140195b74929ed9eda2d5eb16",
    "308d63f382e1992ea2b8ccf3130edaaa751c644d",
    "5d708a4725529cf09d2dd8b5b4aa3542cc8610b0",
    "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e",
    "96d72118f5c81aa4e0dca0dc0241fbf1a3fff4d2",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "620325e81696fca140195b74929ed9eda2d5eb16": "Ybodychange",
    "308d63f382e1992ea2b8ccf3130edaaa751c644d": "Ybodychange",
    "5d708a4725529cf09d2dd8b5b4aa3542cc8610b0": "Ybodychange",
    "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e": "Ybodychange",
    "96d72118f5c81aa4e0dca0dc0241fbf1a3fff4d2": "Ybodychange",
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "28/07/16 4:03 PM",
      "commitNameOld": "4e756d72719ec3c6d64a1e3daccbc0b8e8de998c",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 364.05,
      "commitsBetweenForRepo": 2150,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n       Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n       String node) {\n \n     RMAppAttempt rmAppAttempt \u003d getRMAppAttempt();\n     // nodes which are blacklisted by the application\n     String appBlacklistedNodes \u003d\n         getNodeString(rmAppAttempt.getBlacklistedNodes());\n     // nodes which are blacklisted by the RM for AM launches\n     String rmBlackListedNodes \u003d\n         getNodeString(rmAppAttempt.getAMBlacklistManager()\n           .getBlacklistUpdates().getBlacklistAdditions());\n \n     info(\"Application Attempt Overview\")\n-      ._(\n+      .__(\n         \"Application Attempt State:\",\n         appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n           .getAppAttemptState())\n-        ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n-        ._(\"Elapsed:\",\n+        .__(\"Started:\", Times.format(appAttempt.getStartedTime()))\n+        .__(\"Elapsed:\",\n             org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                 appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n-      ._(\n+      .__(\n         \"AM Container:\",\n         appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n             || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n             ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n         appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n           String.valueOf(appAttempt.getAmContainerId()))\n-      ._(\"Node:\", node)\n-      ._(\n+      .__(\"Node:\", node)\n+      .__(\n         \"Tracking URL:\",\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n             : root_url(appAttempt.getTrackingUrl()),\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n             ? \"Unassigned\"\n             : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                 ? \"History\" : \"ApplicationMaster\")\n-      ._(\n+      .__(\n         \"Diagnostics Info:\",\n         appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n           .getDiagnosticsInfo())\n-      ._(\"Nodes blacklisted by the application:\", appBlacklistedNodes)\n-      ._(\"Nodes blacklisted by the system:\", rmBlackListedNodes);\n+      .__(\"Nodes blacklisted by the application:\", appBlacklistedNodes)\n+      .__(\"Nodes blacklisted by the system:\", rmBlackListedNodes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n      String node) {\n\n    RMAppAttempt rmAppAttempt \u003d getRMAppAttempt();\n    // nodes which are blacklisted by the application\n    String appBlacklistedNodes \u003d\n        getNodeString(rmAppAttempt.getBlacklistedNodes());\n    // nodes which are blacklisted by the RM for AM launches\n    String rmBlackListedNodes \u003d\n        getNodeString(rmAppAttempt.getAMBlacklistManager()\n          .getBlacklistUpdates().getBlacklistAdditions());\n\n    info(\"Application Attempt Overview\")\n      .__(\n        \"Application Attempt State:\",\n        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n          .getAppAttemptState())\n        .__(\"Started:\", Times.format(appAttempt.getStartedTime()))\n        .__(\"Elapsed:\",\n            org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n      .__(\n        \"AM Container:\",\n        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n        appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n          String.valueOf(appAttempt.getAmContainerId()))\n      .__(\"Node:\", node)\n      .__(\n        \"Tracking URL:\",\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n            : root_url(appAttempt.getTrackingUrl()),\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n            ? \"Unassigned\"\n            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                ? \"History\" : \"ApplicationMaster\")\n      .__(\n        \"Diagnostics Info:\",\n        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n          .getDiagnosticsInfo())\n      .__(\"Nodes blacklisted by the application:\", appBlacklistedNodes)\n      .__(\"Nodes blacklisted by the system:\", rmBlackListedNodes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "620325e81696fca140195b74929ed9eda2d5eb16": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
      "commitDate": "07/06/16 3:06 PM",
      "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "03/04/16 7:39 PM",
      "commitNameOld": "1e6f92977dc5431b117745feb5a3491e88a559c0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 64.81,
      "commitsBetweenForRepo": 432,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,49 @@\n   protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n       Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n       String node) {\n \n     RMAppAttempt rmAppAttempt \u003d getRMAppAttempt();\n     // nodes which are blacklisted by the application\n     String appBlacklistedNodes \u003d\n         getNodeString(rmAppAttempt.getBlacklistedNodes());\n     // nodes which are blacklisted by the RM for AM launches\n-    String rmBlackListedNodes \u003d getNodeString(\n-        rmAppAttempt.getAMBlacklist().getBlacklistUpdates().getAdditions());\n+    String rmBlackListedNodes \u003d\n+        getNodeString(rmAppAttempt.getAMBlacklistManager()\n+          .getBlacklistUpdates().getBlacklistAdditions());\n \n     info(\"Application Attempt Overview\")\n       ._(\n         \"Application Attempt State:\",\n         appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n           .getAppAttemptState())\n         ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n         ._(\"Elapsed:\",\n             org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                 appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n       ._(\n         \"AM Container:\",\n         appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n             || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n             ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n         appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n           String.valueOf(appAttempt.getAmContainerId()))\n       ._(\"Node:\", node)\n       ._(\n         \"Tracking URL:\",\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n             : root_url(appAttempt.getTrackingUrl()),\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n             ? \"Unassigned\"\n             : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                 ? \"History\" : \"ApplicationMaster\")\n       ._(\n         \"Diagnostics Info:\",\n         appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n           .getDiagnosticsInfo())\n-      ._(\"Application Blacklisted Nodes:\", appBlacklistedNodes)\n-      ._(\"RM Blacklisted Nodes(for AM launches)\", rmBlackListedNodes);\n+      ._(\"Nodes blacklisted by the application:\", appBlacklistedNodes)\n+      ._(\"Nodes blacklisted by the system:\", rmBlackListedNodes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n      String node) {\n\n    RMAppAttempt rmAppAttempt \u003d getRMAppAttempt();\n    // nodes which are blacklisted by the application\n    String appBlacklistedNodes \u003d\n        getNodeString(rmAppAttempt.getBlacklistedNodes());\n    // nodes which are blacklisted by the RM for AM launches\n    String rmBlackListedNodes \u003d\n        getNodeString(rmAppAttempt.getAMBlacklistManager()\n          .getBlacklistUpdates().getBlacklistAdditions());\n\n    info(\"Application Attempt Overview\")\n      ._(\n        \"Application Attempt State:\",\n        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n          .getAppAttemptState())\n        ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n        ._(\"Elapsed:\",\n            org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n      ._(\n        \"AM Container:\",\n        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n        appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n          String.valueOf(appAttempt.getAmContainerId()))\n      ._(\"Node:\", node)\n      ._(\n        \"Tracking URL:\",\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n            : root_url(appAttempt.getTrackingUrl()),\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n            ? \"Unassigned\"\n            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                ? \"History\" : \"ApplicationMaster\")\n      ._(\n        \"Diagnostics Info:\",\n        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n          .getDiagnosticsInfo())\n      ._(\"Nodes blacklisted by the application:\", appBlacklistedNodes)\n      ._(\"Nodes blacklisted by the system:\", rmBlackListedNodes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "308d63f382e1992ea2b8ccf3130edaaa751c644d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4307. Display blacklisted nodes for AM container in the RM web UI. Contributed by Naganarasimha G R.\n",
      "commitDate": "04/02/16 12:02 AM",
      "commitName": "308d63f382e1992ea2b8ccf3130edaaa751c644d",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "08/05/15 9:35 AM",
      "commitNameOld": "5d708a4725529cf09d2dd8b5b4aa3542cc8610b0",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 271.64,
      "commitsBetweenForRepo": 2051,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,48 @@\n   protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n       Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n       String node) {\n \n-    String blacklistedNodes \u003d \"-\";\n-    Set\u003cString\u003e nodes \u003d\n-        getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n-    if (nodes !\u003d null) {\n-      if (!nodes.isEmpty()) {\n-        blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n-      }\n-    }\n+    RMAppAttempt rmAppAttempt \u003d getRMAppAttempt();\n+    // nodes which are blacklisted by the application\n+    String appBlacklistedNodes \u003d\n+        getNodeString(rmAppAttempt.getBlacklistedNodes());\n+    // nodes which are blacklisted by the RM for AM launches\n+    String rmBlackListedNodes \u003d getNodeString(\n+        rmAppAttempt.getAMBlacklist().getBlacklistUpdates().getAdditions());\n \n     info(\"Application Attempt Overview\")\n       ._(\n         \"Application Attempt State:\",\n         appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n           .getAppAttemptState())\n         ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n         ._(\"Elapsed:\",\n             org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                 appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n       ._(\n         \"AM Container:\",\n         appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n             || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n             ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n         appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n           String.valueOf(appAttempt.getAmContainerId()))\n       ._(\"Node:\", node)\n       ._(\n         \"Tracking URL:\",\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n             : root_url(appAttempt.getTrackingUrl()),\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n             ? \"Unassigned\"\n             : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                 ? \"History\" : \"ApplicationMaster\")\n       ._(\n         \"Diagnostics Info:\",\n         appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n-          .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n+          .getDiagnosticsInfo())\n+      ._(\"Application Blacklisted Nodes:\", appBlacklistedNodes)\n+      ._(\"RM Blacklisted Nodes(for AM launches)\", rmBlackListedNodes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n      String node) {\n\n    RMAppAttempt rmAppAttempt \u003d getRMAppAttempt();\n    // nodes which are blacklisted by the application\n    String appBlacklistedNodes \u003d\n        getNodeString(rmAppAttempt.getBlacklistedNodes());\n    // nodes which are blacklisted by the RM for AM launches\n    String rmBlackListedNodes \u003d getNodeString(\n        rmAppAttempt.getAMBlacklist().getBlacklistUpdates().getAdditions());\n\n    info(\"Application Attempt Overview\")\n      ._(\n        \"Application Attempt State:\",\n        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n          .getAppAttemptState())\n        ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n        ._(\"Elapsed:\",\n            org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n      ._(\n        \"AM Container:\",\n        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n        appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n          String.valueOf(appAttempt.getAmContainerId()))\n      ._(\"Node:\", node)\n      ._(\n        \"Tracking URL:\",\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n            : root_url(appAttempt.getTrackingUrl()),\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n            ? \"Unassigned\"\n            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                ? \"History\" : \"ApplicationMaster\")\n      ._(\n        \"Diagnostics Info:\",\n        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n          .getDiagnosticsInfo())\n      ._(\"Application Blacklisted Nodes:\", appBlacklistedNodes)\n      ._(\"RM Blacklisted Nodes(for AM launches)\", rmBlackListedNodes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "5d708a4725529cf09d2dd8b5b4aa3542cc8610b0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3600. AM container link is broken (Naganarasimha G R via tgraves\n",
      "commitDate": "08/05/15 9:35 AM",
      "commitName": "5d708a4725529cf09d2dd8b5b4aa3542cc8610b0",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "06/05/15 1:45 PM",
      "commitNameOld": "0d3188fd25f31b83caf16b77773620f4ee237409",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 1.83,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,47 @@\n   protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n       Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n       String node) {\n \n     String blacklistedNodes \u003d \"-\";\n     Set\u003cString\u003e nodes \u003d\n         getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n     if (nodes !\u003d null) {\n       if (!nodes.isEmpty()) {\n         blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n       }\n     }\n \n     info(\"Application Attempt Overview\")\n       ._(\n         \"Application Attempt State:\",\n         appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n           .getAppAttemptState())\n         ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n         ._(\"Elapsed:\",\n             org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                 appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n       ._(\n         \"AM Container:\",\n         appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n             || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n-            ? \"N/A\" : root_url(\"container\", appAttempt.getAmContainerId()),\n-        String.valueOf(appAttempt.getAmContainerId()))\n+            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n+        appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n+          String.valueOf(appAttempt.getAmContainerId()))\n       ._(\"Node:\", node)\n       ._(\n         \"Tracking URL:\",\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n             : root_url(appAttempt.getTrackingUrl()),\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n             ? \"Unassigned\"\n             : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                 ? \"History\" : \"ApplicationMaster\")\n       ._(\n         \"Diagnostics Info:\",\n         appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n           .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n      String node) {\n\n    String blacklistedNodes \u003d \"-\";\n    Set\u003cString\u003e nodes \u003d\n        getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n    if (nodes !\u003d null) {\n      if (!nodes.isEmpty()) {\n        blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n      }\n    }\n\n    info(\"Application Attempt Overview\")\n      ._(\n        \"Application Attempt State:\",\n        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n          .getAppAttemptState())\n        ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n        ._(\"Elapsed:\",\n            org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n      ._(\n        \"AM Container:\",\n        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n        appAttempt.getAmContainerId() \u003d\u003d null ? \"N/A\" :\n          String.valueOf(appAttempt.getAmContainerId()))\n      ._(\"Node:\", node)\n      ._(\n        \"Tracking URL:\",\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n            : root_url(appAttempt.getTrackingUrl()),\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n            ? \"Unassigned\"\n            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                ? \"History\" : \"ApplicationMaster\")\n      ._(\n        \"Diagnostics Info:\",\n        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n          .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3451. Display attempt start time and elapsed time on the web UI. Contributed by Rohith Sharmaks\n",
      "commitDate": "17/04/15 3:55 PM",
      "commitName": "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/04/15 12:40 AM",
      "commitNameOld": "96d72118f5c81aa4e0dca0dc0241fbf1a3fff4d2",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 12.64,
      "commitsBetweenForRepo": 103,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,46 @@\n   protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n       Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n       String node) {\n \n     String blacklistedNodes \u003d \"-\";\n     Set\u003cString\u003e nodes \u003d\n         getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n     if (nodes !\u003d null) {\n       if (!nodes.isEmpty()) {\n         blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n       }\n     }\n \n     info(\"Application Attempt Overview\")\n       ._(\n         \"Application Attempt State:\",\n         appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n           .getAppAttemptState())\n+        ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n+        ._(\"Elapsed:\",\n+            org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n+                appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n       ._(\n         \"AM Container:\",\n         appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n             || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n             ? \"N/A\" : root_url(\"container\", appAttempt.getAmContainerId()),\n         String.valueOf(appAttempt.getAmContainerId()))\n       ._(\"Node:\", node)\n       ._(\n         \"Tracking URL:\",\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n             : root_url(appAttempt.getTrackingUrl()),\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n             ? \"Unassigned\"\n             : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                 ? \"History\" : \"ApplicationMaster\")\n       ._(\n         \"Diagnostics Info:\",\n         appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n           .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n      String node) {\n\n    String blacklistedNodes \u003d \"-\";\n    Set\u003cString\u003e nodes \u003d\n        getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n    if (nodes !\u003d null) {\n      if (!nodes.isEmpty()) {\n        blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n      }\n    }\n\n    info(\"Application Attempt Overview\")\n      ._(\n        \"Application Attempt State:\",\n        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n          .getAppAttemptState())\n        ._(\"Started:\", Times.format(appAttempt.getStartedTime()))\n        ._(\"Elapsed:\",\n            org.apache.hadoop.util.StringUtils.formatTime(Times.elapsed(\n                appAttempt.getStartedTime(), appAttempt.getFinishedTime())))\n      ._(\n        \"AM Container:\",\n        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n            ? \"N/A\" : root_url(\"container\", appAttempt.getAmContainerId()),\n        String.valueOf(appAttempt.getAmContainerId()))\n      ._(\"Node:\", node)\n      ._(\n        \"Tracking URL:\",\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n            : root_url(appAttempt.getTrackingUrl()),\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n            ? \"Unassigned\"\n            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                ? \"History\" : \"ApplicationMaster\")\n      ._(\n        \"Diagnostics Info:\",\n        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n          .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "96d72118f5c81aa4e0dca0dc0241fbf1a3fff4d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3435. AM container to be allocated Appattempt AM container shown as\nnull. Contributed by Bibin A Chundatt\n",
      "commitDate": "05/04/15 12:40 AM",
      "commitName": "96d72118f5c81aa4e0dca0dc0241fbf1a3fff4d2",
      "commitAuthor": "Xuan",
      "commitDateOld": "01/04/15 1:47 PM",
      "commitNameOld": "8366a36ad356e6318b8ce6c5c96e201149f811bd",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 3.45,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n   protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n       Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n       String node) {\n \n     String blacklistedNodes \u003d \"-\";\n     Set\u003cString\u003e nodes \u003d\n         getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n     if (nodes !\u003d null) {\n       if (!nodes.isEmpty()) {\n         blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n       }\n     }\n \n     info(\"Application Attempt Overview\")\n       ._(\n         \"Application Attempt State:\",\n         appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n           .getAppAttemptState())\n       ._(\n         \"AM Container:\",\n         appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n             || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n-            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n+            ? \"N/A\" : root_url(\"container\", appAttempt.getAmContainerId()),\n         String.valueOf(appAttempt.getAmContainerId()))\n       ._(\"Node:\", node)\n       ._(\n         \"Tracking URL:\",\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n             : root_url(appAttempt.getTrackingUrl()),\n         appAttempt.getTrackingUrl() \u003d\u003d null\n             || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n             ? \"Unassigned\"\n             : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                 || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                 ? \"History\" : \"ApplicationMaster\")\n       ._(\n         \"Diagnostics Info:\",\n         appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n           .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n      String node) {\n\n    String blacklistedNodes \u003d \"-\";\n    Set\u003cString\u003e nodes \u003d\n        getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n    if (nodes !\u003d null) {\n      if (!nodes.isEmpty()) {\n        blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n      }\n    }\n\n    info(\"Application Attempt Overview\")\n      ._(\n        \"Application Attempt State:\",\n        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n          .getAppAttemptState())\n      ._(\n        \"AM Container:\",\n        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n            ? \"N/A\" : root_url(\"container\", appAttempt.getAmContainerId()),\n        String.valueOf(appAttempt.getAmContainerId()))\n      ._(\"Node:\", node)\n      ._(\n        \"Tracking URL:\",\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n            : root_url(appAttempt.getTrackingUrl()),\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n            ? \"Unassigned\"\n            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                ? \"History\" : \"ApplicationMaster\")\n      ._(\n        \"Diagnostics Info:\",\n        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n          .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "4728bdfa15809db4b8b235faa286c65de4a48cf6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3248. Display count of nodes blacklisted by apps in the web UI.\nContributed by Varun Vasudev\n",
      "commitDate": "01/04/15 4:19 AM",
      "commitName": "4728bdfa15809db4b8b235faa286c65de4a48cf6",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,42 @@\n+  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n+      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n+      String node) {\n+\n+    String blacklistedNodes \u003d \"-\";\n+    Set\u003cString\u003e nodes \u003d\n+        getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n+    if (nodes !\u003d null) {\n+      if (!nodes.isEmpty()) {\n+        blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n+      }\n+    }\n+\n+    info(\"Application Attempt Overview\")\n+      ._(\n+        \"Application Attempt State:\",\n+        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n+          .getAppAttemptState())\n+      ._(\n+        \"AM Container:\",\n+        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n+            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n+            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n+        String.valueOf(appAttempt.getAmContainerId()))\n+      ._(\"Node:\", node)\n+      ._(\n+        \"Tracking URL:\",\n+        appAttempt.getTrackingUrl() \u003d\u003d null\n+            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n+            : root_url(appAttempt.getTrackingUrl()),\n+        appAttempt.getTrackingUrl() \u003d\u003d null\n+            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n+            ? \"Unassigned\"\n+            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n+                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n+                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n+                ? \"History\" : \"ApplicationMaster\")\n+      ._(\n+        \"Diagnostics Info:\",\n+        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n+          .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void generateOverview(ApplicationAttemptReport appAttemptReport,\n      Collection\u003cContainerReport\u003e containers, AppAttemptInfo appAttempt,\n      String node) {\n\n    String blacklistedNodes \u003d \"-\";\n    Set\u003cString\u003e nodes \u003d\n        getBlacklistedNodes(rm, getRMAppAttempt().getAppAttemptId());\n    if (nodes !\u003d null) {\n      if (!nodes.isEmpty()) {\n        blacklistedNodes \u003d StringUtils.join(nodes, \", \");\n      }\n    }\n\n    info(\"Application Attempt Overview\")\n      ._(\n        \"Application Attempt State:\",\n        appAttempt.getAppAttemptState() \u003d\u003d null ? UNAVAILABLE : appAttempt\n          .getAppAttemptState())\n      ._(\n        \"AM Container:\",\n        appAttempt.getAmContainerId() \u003d\u003d null || containers \u003d\u003d null\n            || !hasAMContainer(appAttemptReport.getAMContainerId(), containers)\n            ? null : root_url(\"container\", appAttempt.getAmContainerId()),\n        String.valueOf(appAttempt.getAmContainerId()))\n      ._(\"Node:\", node)\n      ._(\n        \"Tracking URL:\",\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE) ? null\n            : root_url(appAttempt.getTrackingUrl()),\n        appAttempt.getTrackingUrl() \u003d\u003d null\n            || appAttempt.getTrackingUrl().equals(UNAVAILABLE)\n            ? \"Unassigned\"\n            : appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FINISHED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.FAILED\n                || appAttempt.getAppAttemptState() \u003d\u003d YarnApplicationAttemptState.KILLED\n                ? \"History\" : \"ApplicationMaster\")\n      ._(\n        \"Diagnostics Info:\",\n        appAttempt.getDiagnosticsInfo() \u003d\u003d null ? \"\" : appAttempt\n          .getDiagnosticsInfo())._(\"Blacklisted Nodes:\", blacklistedNodes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java"
    }
  }
}