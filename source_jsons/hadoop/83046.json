{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RollingFileSystemSink.java",
  "functionName": "getFileSystem",
  "functionId": "getFileSystem",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/RollingFileSystemSink.java",
  "functionStartLine": 458,
  "functionEndLine": 476,
  "numCommitsSeen": 12,
  "timeTaken": 1214,
  "changeHistory": [
    "c2460dad642feee1086442d33c30c24ec77236b9",
    "33ce7f6c072144f55be30c66099eef5bc736405e"
  ],
  "changeHistoryShort": {
    "c2460dad642feee1086442d33c30c24ec77236b9": "Yparameterchange",
    "33ce7f6c072144f55be30c66099eef5bc736405e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2460dad642feee1086442d33c30c24ec77236b9": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-9858. RollingFileSystemSink can throw an NPE on non-secure clusters. (Daniel Templeton via kasha)\n",
      "commitDate": "25/02/16 4:31 PM",
      "commitName": "c2460dad642feee1086442d33c30c24ec77236b9",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "11/02/16 8:37 PM",
      "commitNameOld": "33ce7f6c072144f55be30c66099eef5bc736405e",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 13.83,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  private FileSystem getFileSystem(Configuration conf) throws MetricsException {\n+  private FileSystem getFileSystem() throws MetricsException {\n     FileSystem fs \u003d null;\n \n     if (suppliedFilesystem !\u003d null) {\n       fs \u003d suppliedFilesystem;\n     } else {\n       try {\n         fs \u003d FileSystem.get(new URI(basePath.toString()), conf);\n       } catch (URISyntaxException ex) {\n         throw new MetricsException(\"The supplied filesystem base path URI\"\n             + \" is not a valid URI: \" + basePath.toString(), ex);\n       } catch (IOException ex) {\n         throw new MetricsException(\"Error connecting to file system: \"\n             + basePath + \" [\" + ex.toString() + \"]\", ex);\n       }\n     }\n \n     return fs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FileSystem getFileSystem() throws MetricsException {\n    FileSystem fs \u003d null;\n\n    if (suppliedFilesystem !\u003d null) {\n      fs \u003d suppliedFilesystem;\n    } else {\n      try {\n        fs \u003d FileSystem.get(new URI(basePath.toString()), conf);\n      } catch (URISyntaxException ex) {\n        throw new MetricsException(\"The supplied filesystem base path URI\"\n            + \" is not a valid URI: \" + basePath.toString(), ex);\n      } catch (IOException ex) {\n        throw new MetricsException(\"Error connecting to file system: \"\n            + basePath + \" [\" + ex.toString() + \"]\", ex);\n      }\n    }\n\n    return fs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/RollingFileSystemSink.java",
      "extendedDetails": {
        "oldValue": "[conf-Configuration]",
        "newValue": "[]"
      }
    },
    "33ce7f6c072144f55be30c66099eef5bc736405e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9780. RollingFileSystemSink doesn\u0027t work on secure clusters. (Daniel Templeton via kasha)\n",
      "commitDate": "11/02/16 8:37 PM",
      "commitName": "33ce7f6c072144f55be30c66099eef5bc736405e",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,19 @@\n+  private FileSystem getFileSystem(Configuration conf) throws MetricsException {\n+    FileSystem fs \u003d null;\n+\n+    if (suppliedFilesystem !\u003d null) {\n+      fs \u003d suppliedFilesystem;\n+    } else {\n+      try {\n+        fs \u003d FileSystem.get(new URI(basePath.toString()), conf);\n+      } catch (URISyntaxException ex) {\n+        throw new MetricsException(\"The supplied filesystem base path URI\"\n+            + \" is not a valid URI: \" + basePath.toString(), ex);\n+      } catch (IOException ex) {\n+        throw new MetricsException(\"Error connecting to file system: \"\n+            + basePath + \" [\" + ex.toString() + \"]\", ex);\n+      }\n+    }\n+\n+    return fs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FileSystem getFileSystem(Configuration conf) throws MetricsException {\n    FileSystem fs \u003d null;\n\n    if (suppliedFilesystem !\u003d null) {\n      fs \u003d suppliedFilesystem;\n    } else {\n      try {\n        fs \u003d FileSystem.get(new URI(basePath.toString()), conf);\n      } catch (URISyntaxException ex) {\n        throw new MetricsException(\"The supplied filesystem base path URI\"\n            + \" is not a valid URI: \" + basePath.toString(), ex);\n      } catch (IOException ex) {\n        throw new MetricsException(\"Error connecting to file system: \"\n            + basePath + \" [\" + ex.toString() + \"]\", ex);\n      }\n    }\n\n    return fs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/RollingFileSystemSink.java"
    }
  }
}