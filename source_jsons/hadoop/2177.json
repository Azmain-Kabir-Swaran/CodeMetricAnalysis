{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "primitiveAppend",
  "functionId": "primitiveAppend___src-String__flag-EnumSet__CreateFlag____progress-Progressable",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 1286,
  "functionEndLine": 1302,
  "numCommitsSeen": 345,
  "timeTaken": 11816,
  "changeHistory": [
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "89a544928083501625bc69f96b530040228f0a5f",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
    "853cb704edf54207313c0e70c9c375212d288b60",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ymultichange(Yparameterchange,Ybodychange)",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "89a544928083501625bc69f96b530040228f0a5f": "Ybodychange",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": "Ybodychange",
    "853cb704edf54207313c0e70c9c375212d288b60": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
          "commitDate": "03/10/15 11:38 AM",
          "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "30/09/15 8:39 AM",
          "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
          "commitAuthorOld": "",
          "daysBetweenCommits": 3.12,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n-      int buffersize, Progressable progress) throws IOException {\n+      Progressable progress) throws IOException {\n     if (flag.contains(CreateFlag.APPEND)) {\n       HdfsFileStatus stat \u003d getFileInfo(src);\n       if (stat \u003d\u003d null) { // No file to append to\n         // New file needs to be created if create option is present\n         if (!flag.contains(CreateFlag.CREATE)) {\n-          throw new FileNotFoundException(\"failed to append to non-existent file \"\n-              + src + \" on client \" + clientName);\n+          throw new FileNotFoundException(\n+              \"failed to append to non-existent file \" + src + \" on client \"\n+                  + clientName);\n         }\n         return null;\n       }\n-      return callAppend(src, buffersize, flag, progress, null);\n+      return callAppend(src, flag, progress, null);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\n              \"failed to append to non-existent file \" + src + \" on client \"\n                  + clientName);\n        }\n        return null;\n      }\n      return callAppend(src, flag, progress, null);\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {
            "oldValue": "[src-String, flag-EnumSet\u003cCreateFlag\u003e, buffersize-int, progress-Progressable]",
            "newValue": "[src-String, flag-EnumSet\u003cCreateFlag\u003e, progress-Progressable]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
          "commitDate": "03/10/15 11:38 AM",
          "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "30/09/15 8:39 AM",
          "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
          "commitAuthorOld": "",
          "daysBetweenCommits": 3.12,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n-      int buffersize, Progressable progress) throws IOException {\n+      Progressable progress) throws IOException {\n     if (flag.contains(CreateFlag.APPEND)) {\n       HdfsFileStatus stat \u003d getFileInfo(src);\n       if (stat \u003d\u003d null) { // No file to append to\n         // New file needs to be created if create option is present\n         if (!flag.contains(CreateFlag.CREATE)) {\n-          throw new FileNotFoundException(\"failed to append to non-existent file \"\n-              + src + \" on client \" + clientName);\n+          throw new FileNotFoundException(\n+              \"failed to append to non-existent file \" + src + \" on client \"\n+                  + clientName);\n         }\n         return null;\n       }\n-      return callAppend(src, buffersize, flag, progress, null);\n+      return callAppend(src, flag, progress, null);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\n              \"failed to append to non-existent file \" + src + \" on client \"\n                  + clientName);\n        }\n        return null;\n      }\n      return callAppend(src, flag, progress, null);\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      int buffersize, Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\"failed to append to non-existent file \"\n              + src + \" on client \" + clientName);\n        }\n        return null;\n      }\n      return callAppend(src, buffersize, flag, progress, null);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "89a544928083501625bc69f96b530040228f0a5f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7703. Support favouredNodes for the append for new blocks ( Contributed by Vinayakumar B)\n",
      "commitDate": "11/02/15 11:08 PM",
      "commitName": "89a544928083501625bc69f96b530040228f0a5f",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "09/02/15 8:23 PM",
      "commitNameOld": "02340a24f211212b91dc7380c1e5b54ddb5e82eb",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 2.11,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n       int buffersize, Progressable progress) throws IOException {\n     if (flag.contains(CreateFlag.APPEND)) {\n       HdfsFileStatus stat \u003d getFileInfo(src);\n       if (stat \u003d\u003d null) { // No file to append to\n         // New file needs to be created if create option is present\n         if (!flag.contains(CreateFlag.CREATE)) {\n           throw new FileNotFoundException(\"failed to append to non-existent file \"\n               + src + \" on client \" + clientName);\n         }\n         return null;\n       }\n-      return callAppend(src, buffersize, flag, progress);\n+      return callAppend(src, buffersize, flag, progress, null);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      int buffersize, Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\"failed to append to non-existent file \"\n              + src + \" on client \" + clientName);\n        }\n        return null;\n      }\n      return callAppend(src, buffersize, flag, progress, null);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
      "commitDate": "27/01/15 12:58 PM",
      "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/01/15 3:44 PM",
      "commitNameOld": "e9fd46ddbf46954cfda4bb9c33f1789775be9d18",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 2.88,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n       int buffersize, Progressable progress) throws IOException {\n     if (flag.contains(CreateFlag.APPEND)) {\n       HdfsFileStatus stat \u003d getFileInfo(src);\n       if (stat \u003d\u003d null) { // No file to append to\n         // New file needs to be created if create option is present\n         if (!flag.contains(CreateFlag.CREATE)) {\n           throw new FileNotFoundException(\"failed to append to non-existent file \"\n               + src + \" on client \" + clientName);\n         }\n         return null;\n       }\n-      return callAppend(src, buffersize, progress);\n+      return callAppend(src, buffersize, flag, progress);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      int buffersize, Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\"failed to append to non-existent file \"\n              + src + \" on client \" + clientName);\n        }\n        return null;\n      }\n      return callAppend(src, buffersize, flag, progress);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "853cb704edf54207313c0e70c9c375212d288b60": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7203. Concurrent appending to the same file can cause data\ncorruption. Contributed by Kihwal Lee.\n",
      "commitDate": "08/10/14 1:05 PM",
      "commitName": "853cb704edf54207313c0e70c9c375212d288b60",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/10/14 3:29 PM",
      "commitNameOld": "8dc6abf2f4218b2d84b2c2dc7d18623d897c362d",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 1.9,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n       int buffersize, Progressable progress) throws IOException {\n     if (flag.contains(CreateFlag.APPEND)) {\n       HdfsFileStatus stat \u003d getFileInfo(src);\n       if (stat \u003d\u003d null) { // No file to append to\n         // New file needs to be created if create option is present\n         if (!flag.contains(CreateFlag.CREATE)) {\n           throw new FileNotFoundException(\"failed to append to non-existent file \"\n               + src + \" on client \" + clientName);\n         }\n         return null;\n       }\n-      return callAppend(stat, src, buffersize, progress);\n+      return callAppend(src, buffersize, progress);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      int buffersize, Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\"failed to append to non-existent file \"\n              + src + \" on client \" + clientName);\n        }\n        return null;\n      }\n      return callAppend(src, buffersize, progress);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      int buffersize, Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\"failed to append to non-existent file \"\n              + src + \" on client \" + clientName);\n        }\n        return null;\n      }\n      return callAppend(stat, src, buffersize, progress);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      int buffersize, Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\"failed to append to non-existent file \"\n              + src + \" on client \" + clientName);\n        }\n        return null;\n      }\n      return callAppend(stat, src, buffersize, progress);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,16 @@\n+  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n+      int buffersize, Progressable progress) throws IOException {\n+    if (flag.contains(CreateFlag.APPEND)) {\n+      HdfsFileStatus stat \u003d getFileInfo(src);\n+      if (stat \u003d\u003d null) { // No file to append to\n+        // New file needs to be created if create option is present\n+        if (!flag.contains(CreateFlag.CREATE)) {\n+          throw new FileNotFoundException(\"failed to append to non-existent file \"\n+              + src + \" on client \" + clientName);\n+        }\n+        return null;\n+      }\n+      return callAppend(stat, src, buffersize, progress);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private DFSOutputStream primitiveAppend(String src, EnumSet\u003cCreateFlag\u003e flag,\n      int buffersize, Progressable progress) throws IOException {\n    if (flag.contains(CreateFlag.APPEND)) {\n      HdfsFileStatus stat \u003d getFileInfo(src);\n      if (stat \u003d\u003d null) { // No file to append to\n        // New file needs to be created if create option is present\n        if (!flag.contains(CreateFlag.CREATE)) {\n          throw new FileNotFoundException(\"failed to append to non-existent file \"\n              + src + \" on client \" + clientName);\n        }\n        return null;\n      }\n      return callAppend(stat, src, buffersize, progress);\n    }\n    return null;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}