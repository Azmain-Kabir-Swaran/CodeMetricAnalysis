{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirEncryptionZoneOp.java",
  "functionName": "getEZForPath",
  "functionId": "getEZForPath___fsd-FSDirectory(modifiers-final)__srcArg-String(modifiers-final)__pc-FSPermissionChecker(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
  "functionStartLine": 188,
  "functionEndLine": 205,
  "numCommitsSeen": 25,
  "timeTaken": 3974,
  "changeHistory": [
    "9b90e52f1ec22c18cd535af2a569defcef65b093",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "0670149c88852cd7c4d6774bff06c7c588558739",
    "869393643de23dcb010cc33091c8eb398de0fd6c",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
    "411e2b2e7cd63273a3819f99a3275821dfbcc9ce",
    "71a81b6257c0000475ad62eb69292a20d45d269c"
  ],
  "changeHistoryShort": {
    "9b90e52f1ec22c18cd535af2a569defcef65b093": "Ymultichange(Yreturntypechange,Ybodychange)",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "0670149c88852cd7c4d6774bff06c7c588558739": "Ybodychange",
    "869393643de23dcb010cc33091c8eb398de0fd6c": "Ybodychange",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": "Ybodychange",
    "411e2b2e7cd63273a3819f99a3275821dfbcc9ce": "Ybodychange",
    "71a81b6257c0000475ad62eb69292a20d45d269c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b90e52f1ec22c18cd535af2a569defcef65b093": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
      "commitDate": "16/05/17 9:28 AM",
      "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
          "commitDate": "16/05/17 9:28 AM",
          "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "24/10/16 3:14 PM",
          "commitNameOld": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 203.76,
          "commitsBetweenForRepo": 1218,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n+  static Map.Entry\u003cEncryptionZone, FileStatus\u003e getEZForPath(\n       final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n       throws IOException {\n     final INodesInPath iip;\n     final EncryptionZone ret;\n     fsd.readLock();\n     try {\n       iip \u003d fsd.resolvePath(pc, srcArg, DirOp.READ);\n       if (fsd.isPermissionEnabled()) {\n         fsd.checkPathAccess(pc, iip, FsAction.READ);\n       }\n       ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n     } finally {\n       fsd.readUnlock();\n     }\n-    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n+    FileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n     return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Map.Entry\u003cEncryptionZone, FileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, srcArg, DirOp.READ);\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    FileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "Map.Entry\u003cEncryptionZone,HdfsFileStatus\u003e",
            "newValue": "Map.Entry\u003cEncryptionZone,FileStatus\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
          "commitDate": "16/05/17 9:28 AM",
          "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "24/10/16 3:14 PM",
          "commitNameOld": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 203.76,
          "commitsBetweenForRepo": 1218,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n+  static Map.Entry\u003cEncryptionZone, FileStatus\u003e getEZForPath(\n       final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n       throws IOException {\n     final INodesInPath iip;\n     final EncryptionZone ret;\n     fsd.readLock();\n     try {\n       iip \u003d fsd.resolvePath(pc, srcArg, DirOp.READ);\n       if (fsd.isPermissionEnabled()) {\n         fsd.checkPathAccess(pc, iip, FsAction.READ);\n       }\n       ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n     } finally {\n       fsd.readUnlock();\n     }\n-    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n+    FileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n     return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Map.Entry\u003cEncryptionZone, FileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, srcArg, DirOp.READ);\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    FileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/10/16 1:11 PM",
      "commitNameOld": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 18.09,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n       final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n       throws IOException {\n     final INodesInPath iip;\n     final EncryptionZone ret;\n     fsd.readLock();\n     try {\n-      iip \u003d fsd.resolvePath(pc, srcArg);\n+      iip \u003d fsd.resolvePath(pc, srcArg, DirOp.READ);\n       if (fsd.isPermissionEnabled()) {\n         fsd.checkPathAccess(pc, iip, FsAction.READ);\n       }\n       ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n     } finally {\n       fsd.readUnlock();\n     }\n     HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n     return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, srcArg, DirOp.READ);\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "0670149c88852cd7c4d6774bff06c7c588558739": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10850. getEZForPath should NOT throw FNF. Contributed by Andrew Wang.\n",
      "commitDate": "30/09/16 6:44 AM",
      "commitName": "0670149c88852cd7c4d6774bff06c7c588558739",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "17/08/16 1:53 PM",
      "commitNameOld": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 43.7,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,18 @@\n   static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n       final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n       throws IOException {\n     final INodesInPath iip;\n     final EncryptionZone ret;\n     fsd.readLock();\n     try {\n       iip \u003d fsd.resolvePath(pc, srcArg);\n-      if (iip.getLastINode() \u003d\u003d null) {\n-        throw new FileNotFoundException(\"Path not found: \" + iip.getPath());\n-      }\n       if (fsd.isPermissionEnabled()) {\n         fsd.checkPathAccess(pc, iip, FsAction.READ);\n       }\n       ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n     } finally {\n       fsd.readUnlock();\n     }\n     HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n     return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, srcArg);\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "869393643de23dcb010cc33091c8eb398de0fd6c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
      "commitDate": "17/08/16 1:53 PM",
      "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "15/08/16 2:45 PM",
      "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n       final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n       throws IOException {\n-    final String src;\n     final INodesInPath iip;\n     final EncryptionZone ret;\n     fsd.readLock();\n     try {\n-      src \u003d fsd.resolvePath(pc, srcArg);\n-      iip \u003d fsd.getINodesInPath(src, true);\n+      iip \u003d fsd.resolvePath(pc, srcArg);\n       if (iip.getLastINode() \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found: \" + iip.getPath());\n       }\n       if (fsd.isPermissionEnabled()) {\n         fsd.checkPathAccess(pc, iip, FsAction.READ);\n       }\n       ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n     } finally {\n       fsd.readUnlock();\n     }\n     HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n     return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      iip \u003d fsd.resolvePath(pc, srcArg);\n      if (iip.getLastINode() \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found: \" + iip.getPath());\n      }\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.\n",
      "commitDate": "15/08/16 2:45 PM",
      "commitName": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "10/08/16 3:49 PM",
      "commitNameOld": "ec289bbeceff064ad24e189db20a3e0a296822c1",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 4.96,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n       final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n       throws IOException {\n-    final byte[][] pathComponents \u003d FSDirectory\n-        .getPathComponentsForReservedPath(srcArg);\n     final String src;\n     final INodesInPath iip;\n     final EncryptionZone ret;\n     fsd.readLock();\n     try {\n-      src \u003d fsd.resolvePath(pc, srcArg, pathComponents);\n+      src \u003d fsd.resolvePath(pc, srcArg);\n       iip \u003d fsd.getINodesInPath(src, true);\n       if (iip.getLastINode() \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found: \" + iip.getPath());\n       }\n       if (fsd.isPermissionEnabled()) {\n         fsd.checkPathAccess(pc, iip, FsAction.READ);\n       }\n       ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n     } finally {\n       fsd.readUnlock();\n     }\n     HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n     return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final String src;\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      src \u003d fsd.resolvePath(pc, srcArg);\n      iip \u003d fsd.getINodesInPath(src, true);\n      if (iip.getLastINode() \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found: \" + iip.getPath());\n      }\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "411e2b2e7cd63273a3819f99a3275821dfbcc9ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9433. DFS getEZForPath API on a non-existent file should throw FileNotFoundException (Rakesh R via umamahesh)\n",
      "commitDate": "23/11/15 5:54 PM",
      "commitName": "411e2b2e7cd63273a3819f99a3275821dfbcc9ce",
      "commitAuthor": "Uma Mahesh",
      "commitDateOld": "24/09/15 8:34 AM",
      "commitNameOld": "71a81b6257c0000475ad62eb69292a20d45d269c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 60.43,
      "commitsBetweenForRepo": 468,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n       final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n       throws IOException {\n     final byte[][] pathComponents \u003d FSDirectory\n         .getPathComponentsForReservedPath(srcArg);\n     final String src;\n     final INodesInPath iip;\n     final EncryptionZone ret;\n     fsd.readLock();\n     try {\n       src \u003d fsd.resolvePath(pc, srcArg, pathComponents);\n       iip \u003d fsd.getINodesInPath(src, true);\n+      if (iip.getLastINode() \u003d\u003d null) {\n+        throw new FileNotFoundException(\"Path not found: \" + iip.getPath());\n+      }\n       if (fsd.isPermissionEnabled()) {\n         fsd.checkPathAccess(pc, iip, FsAction.READ);\n       }\n       ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n     } finally {\n       fsd.readUnlock();\n     }\n     HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n     return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final byte[][] pathComponents \u003d FSDirectory\n        .getPathComponentsForReservedPath(srcArg);\n    final String src;\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      src \u003d fsd.resolvePath(pc, srcArg, pathComponents);\n      iip \u003d fsd.getINodesInPath(src, true);\n      if (iip.getLastINode() \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found: \" + iip.getPath());\n      }\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "71a81b6257c0000475ad62eb69292a20d45d269c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7529. Consolidate encryption zone related implementation into a single class. Contributed by Rakesh R.\n",
      "commitDate": "24/09/15 8:34 AM",
      "commitName": "71a81b6257c0000475ad62eb69292a20d45d269c",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,22 @@\n+  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n+      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n+      throws IOException {\n+    final byte[][] pathComponents \u003d FSDirectory\n+        .getPathComponentsForReservedPath(srcArg);\n+    final String src;\n+    final INodesInPath iip;\n+    final EncryptionZone ret;\n+    fsd.readLock();\n+    try {\n+      src \u003d fsd.resolvePath(pc, srcArg, pathComponents);\n+      iip \u003d fsd.getINodesInPath(src, true);\n+      if (fsd.isPermissionEnabled()) {\n+        fsd.checkPathAccess(pc, iip, FsAction.READ);\n+      }\n+      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n+    } finally {\n+      fsd.readUnlock();\n+    }\n+    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n+    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static Map.Entry\u003cEncryptionZone, HdfsFileStatus\u003e getEZForPath(\n      final FSDirectory fsd, final String srcArg, final FSPermissionChecker pc)\n      throws IOException {\n    final byte[][] pathComponents \u003d FSDirectory\n        .getPathComponentsForReservedPath(srcArg);\n    final String src;\n    final INodesInPath iip;\n    final EncryptionZone ret;\n    fsd.readLock();\n    try {\n      src \u003d fsd.resolvePath(pc, srcArg, pathComponents);\n      iip \u003d fsd.getINodesInPath(src, true);\n      if (fsd.isPermissionEnabled()) {\n        fsd.checkPathAccess(pc, iip, FsAction.READ);\n      }\n      ret \u003d fsd.ezManager.getEZINodeForPath(iip);\n    } finally {\n      fsd.readUnlock();\n    }\n    HdfsFileStatus auditStat \u003d fsd.getAuditFileInfo(iip);\n    return new AbstractMap.SimpleImmutableEntry\u003c\u003e(ret, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java"
    }
  }
}