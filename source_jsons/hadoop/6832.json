{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageSerialization.java",
  "functionName": "readErasureCodingPolicy",
  "functionId": "readErasureCodingPolicy___in-DataInput",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
  "functionStartLine": 777,
  "functionEndLine": 797,
  "numCommitsSeen": 62,
  "timeTaken": 2075,
  "changeHistory": [
    "08d996d3e9265efad737efad50cbc5b10a0202f8"
  ],
  "changeHistoryShort": {
    "08d996d3e9265efad737efad50cbc5b10a0202f8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "08d996d3e9265efad737efad50cbc5b10a0202f8": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12395. Support erasure coding policy operations in namenode edit log. Contributed by Sammi Chen\n",
      "commitDate": "14/09/17 6:43 PM",
      "commitName": "08d996d3e9265efad737efad50cbc5b10a0202f8",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,21 @@\n+  public static ErasureCodingPolicy readErasureCodingPolicy(DataInput in)\n+      throws IOException {\n+    String codecName \u003d readString(in);\n+    int numDataUnits \u003d readInt(in);\n+    int numParityUnits \u003d readInt(in);\n+    int cellSize \u003d readInt(in);\n+\n+    int size \u003d readInt(in);\n+    Map\u003cString, String\u003e extraOptions \u003d new HashMap\u003c\u003e(size);\n+\n+    if (size !\u003d 0) {\n+      for (int i \u003d 0; i \u003c size; i++) {\n+        String key \u003d readString(in);\n+        String value \u003d readString(in);\n+        extraOptions.put(key, value);\n+      }\n+    }\n+    ECSchema ecSchema \u003d new ECSchema(codecName, numDataUnits,\n+        numParityUnits, extraOptions);\n+    return new ErasureCodingPolicy(ecSchema, cellSize);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ErasureCodingPolicy readErasureCodingPolicy(DataInput in)\n      throws IOException {\n    String codecName \u003d readString(in);\n    int numDataUnits \u003d readInt(in);\n    int numParityUnits \u003d readInt(in);\n    int cellSize \u003d readInt(in);\n\n    int size \u003d readInt(in);\n    Map\u003cString, String\u003e extraOptions \u003d new HashMap\u003c\u003e(size);\n\n    if (size !\u003d 0) {\n      for (int i \u003d 0; i \u003c size; i++) {\n        String key \u003d readString(in);\n        String value \u003d readString(in);\n        extraOptions.put(key, value);\n      }\n    }\n    ECSchema ecSchema \u003d new ECSchema(codecName, numDataUnits,\n        numParityUnits, extraOptions);\n    return new ErasureCodingPolicy(ecSchema, cellSize);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java"
    }
  }
}