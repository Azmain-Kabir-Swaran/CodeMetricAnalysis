{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NvidiaGPUPluginForRuntimeV2.java",
  "functionName": "allocateDevices",
  "functionId": "allocateDevices___availableDevices-Set__Device____count-int__envs-Map__String,String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java",
  "functionStartLine": 217,
  "functionEndLine": 252,
  "numCommitsSeen": 3,
  "timeTaken": 783,
  "changeHistory": [
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17"
  ],
  "changeHistoryShort": {
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dddcfa4d9f07aa96692a12afd3003ae89ac40b17": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8821. [YARN-8851] GPU hierarchy/topology scheduling support based on pluggable device framework. Contributed by Zhankun Tang.\n",
      "commitDate": "24/02/19 1:07 AM",
      "commitName": "dddcfa4d9f07aa96692a12afd3003ae89ac40b17",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,36 @@\n+  public Set\u003cDevice\u003e allocateDevices(Set\u003cDevice\u003e availableDevices, int count,\n+      Map\u003cString, String\u003e envs) {\n+    Set\u003cDevice\u003e allocation \u003d new TreeSet\u003c\u003e();\n+    /**\n+     * corner cases.\n+     * if allocate 1 device or all devices, no topo scheduling needed.\n+     * if total available devices is less than 3, no topo scheduling needed.\n+     * */\n+    if (availableDevices.size() \u003c 3\n+        || count \u003d\u003d 1\n+        || availableDevices.size() \u003d\u003d count) {\n+      basicSchedule(allocation, count, availableDevices);\n+      return allocation;\n+    }\n+\n+    try {\n+      if (!topoInitialized) {\n+        initCostTable();\n+      }\n+      // topology aware scheduling\n+      topologyAwareSchedule(allocation, count,\n+          envs, availableDevices, this.costTable);\n+      if (allocation.size() \u003d\u003d count) {\n+        return allocation;\n+      } else {\n+        LOG.error(\"Failed to do topology scheduling. Skip to use basic \"\n+            + \"scheduling\");\n+      }\n+    } catch (IOException e) {\n+      LOG.error(\"Error in getting GPU topology info. \"\n+          + \"Skip topology aware scheduling\", e);\n+    }\n+    // basic scheduling\n+    basicSchedule(allocation, count, availableDevices);\n+    return allocation;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cDevice\u003e allocateDevices(Set\u003cDevice\u003e availableDevices, int count,\n      Map\u003cString, String\u003e envs) {\n    Set\u003cDevice\u003e allocation \u003d new TreeSet\u003c\u003e();\n    /**\n     * corner cases.\n     * if allocate 1 device or all devices, no topo scheduling needed.\n     * if total available devices is less than 3, no topo scheduling needed.\n     * */\n    if (availableDevices.size() \u003c 3\n        || count \u003d\u003d 1\n        || availableDevices.size() \u003d\u003d count) {\n      basicSchedule(allocation, count, availableDevices);\n      return allocation;\n    }\n\n    try {\n      if (!topoInitialized) {\n        initCostTable();\n      }\n      // topology aware scheduling\n      topologyAwareSchedule(allocation, count,\n          envs, availableDevices, this.costTable);\n      if (allocation.size() \u003d\u003d count) {\n        return allocation;\n      } else {\n        LOG.error(\"Failed to do topology scheduling. Skip to use basic \"\n            + \"scheduling\");\n      }\n    } catch (IOException e) {\n      LOG.error(\"Error in getting GPU topology info. \"\n          + \"Skip topology aware scheduling\", e);\n    }\n    // basic scheduling\n    basicSchedule(allocation, count, availableDevices);\n    return allocation;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java"
    }
  }
}