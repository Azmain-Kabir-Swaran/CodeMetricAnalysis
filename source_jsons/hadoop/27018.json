{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AmIpFilter.java",
  "functionName": "init",
  "functionId": "init___conf-FilterConfig",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
  "functionStartLine": 75,
  "functionEndLine": 102,
  "numCommitsSeen": 15,
  "timeTaken": 1696,
  "changeHistory": [
    "4111e6c7819d66e17e0932302c589777a355dbae",
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c",
    "4224e613409ec97ff52ba28a7cedfe0485577257",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421"
  ],
  "changeHistoryShort": {
    "4111e6c7819d66e17e0932302c589777a355dbae": "Ybodychange",
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c": "Ybodychange",
    "4224e613409ec97ff52ba28a7cedfe0485577257": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4111e6c7819d66e17e0932302c589777a355dbae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7269. Tracking URL in the app state does not get redirected to ApplicationMaster for Running applications. Contributed by Wangda Tan\n",
      "commitDate": "03/10/17 9:54 AM",
      "commitName": "4111e6c7819d66e17e0932302c589777a355dbae",
      "commitAuthor": "Jian He",
      "commitDateOld": "14/07/17 2:10 PM",
      "commitNameOld": "9e0cde1469b8ffeb59619c64d6ece86b62424f04",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 80.82,
      "commitsBetweenForRepo": 674,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n   public void init(FilterConfig conf) throws ServletException {\n     // Maintain for backwards compatibility\n     if (conf.getInitParameter(PROXY_HOST) !\u003d null\n         \u0026\u0026 conf.getInitParameter(PROXY_URI_BASE) !\u003d null) {\n       proxyHosts \u003d new String[]{conf.getInitParameter(PROXY_HOST)};\n       proxyUriBases \u003d new HashMap\u003c\u003e(1);\n       proxyUriBases.put(\"dummy\", conf.getInitParameter(PROXY_URI_BASE));\n     } else {\n       proxyHosts \u003d conf.getInitParameter(PROXY_HOSTS)\n           .split(PROXY_HOSTS_DELIMITER);\n \n       String[] proxyUriBasesArr \u003d conf.getInitParameter(PROXY_URI_BASES)\n           .split(PROXY_URI_BASES_DELIMITER);\n       proxyUriBases \u003d new HashMap\u003c\u003e(proxyUriBasesArr.length);\n       for (String proxyUriBase : proxyUriBasesArr) {\n         try {\n           URL url \u003d new URL(proxyUriBase);\n           proxyUriBases.put(url.getHost() + \":\" + url.getPort(), proxyUriBase);\n         } catch(MalformedURLException e) {\n           LOG.warn(\"{} does not appear to be a valid URL\", proxyUriBase, e);\n         }\n       }\n     }\n+\n+    if (conf.getInitParameter(AmFilterInitializer.RM_HA_URLS) !\u003d null) {\n+      rmUrls \u003d conf.getInitParameter(AmFilterInitializer.RM_HA_URLS).split(\",\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig conf) throws ServletException {\n    // Maintain for backwards compatibility\n    if (conf.getInitParameter(PROXY_HOST) !\u003d null\n        \u0026\u0026 conf.getInitParameter(PROXY_URI_BASE) !\u003d null) {\n      proxyHosts \u003d new String[]{conf.getInitParameter(PROXY_HOST)};\n      proxyUriBases \u003d new HashMap\u003c\u003e(1);\n      proxyUriBases.put(\"dummy\", conf.getInitParameter(PROXY_URI_BASE));\n    } else {\n      proxyHosts \u003d conf.getInitParameter(PROXY_HOSTS)\n          .split(PROXY_HOSTS_DELIMITER);\n\n      String[] proxyUriBasesArr \u003d conf.getInitParameter(PROXY_URI_BASES)\n          .split(PROXY_URI_BASES_DELIMITER);\n      proxyUriBases \u003d new HashMap\u003c\u003e(proxyUriBasesArr.length);\n      for (String proxyUriBase : proxyUriBasesArr) {\n        try {\n          URL url \u003d new URL(proxyUriBase);\n          proxyUriBases.put(url.getHost() + \":\" + url.getPort(), proxyUriBase);\n        } catch(MalformedURLException e) {\n          LOG.warn(\"{} does not appear to be a valid URL\", proxyUriBase, e);\n        }\n      }\n    }\n\n    if (conf.getInitParameter(AmFilterInitializer.RM_HA_URLS) !\u003d null) {\n      rmUrls \u003d conf.getInitParameter(AmFilterInitializer.RM_HA_URLS).split(\",\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3147. Clean up RM web proxy code. Contributed by Steve Loughran\n",
      "commitDate": "12/02/15 10:57 AM",
      "commitName": "83be450acc7fc9bb9f7bbd006e7b0804bf10279c",
      "commitAuthor": "Xuan",
      "commitDateOld": "20/03/14 9:20 PM",
      "commitNameOld": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 328.61,
      "commitsBetweenForRepo": 2590,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void init(FilterConfig conf) throws ServletException {\n     // Maintain for backwards compatibility\n     if (conf.getInitParameter(PROXY_HOST) !\u003d null\n         \u0026\u0026 conf.getInitParameter(PROXY_URI_BASE) !\u003d null) {\n       proxyHosts \u003d new String[]{conf.getInitParameter(PROXY_HOST)};\n-      proxyUriBases \u003d new HashMap\u003cString, String\u003e(1);\n+      proxyUriBases \u003d new HashMap\u003c\u003e(1);\n       proxyUriBases.put(\"dummy\", conf.getInitParameter(PROXY_URI_BASE));\n     } else {\n       proxyHosts \u003d conf.getInitParameter(PROXY_HOSTS)\n           .split(PROXY_HOSTS_DELIMITER);\n \n       String[] proxyUriBasesArr \u003d conf.getInitParameter(PROXY_URI_BASES)\n           .split(PROXY_URI_BASES_DELIMITER);\n-      proxyUriBases \u003d new HashMap\u003cString, String\u003e();\n+      proxyUriBases \u003d new HashMap\u003c\u003e(proxyUriBasesArr.length);\n       for (String proxyUriBase : proxyUriBasesArr) {\n         try {\n           URL url \u003d new URL(proxyUriBase);\n           proxyUriBases.put(url.getHost() + \":\" + url.getPort(), proxyUriBase);\n         } catch(MalformedURLException e) {\n-          LOG.warn(proxyUriBase + \" does not appear to be a valid URL\", e);\n+          LOG.warn(\"{} does not appear to be a valid URL\", proxyUriBase, e);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig conf) throws ServletException {\n    // Maintain for backwards compatibility\n    if (conf.getInitParameter(PROXY_HOST) !\u003d null\n        \u0026\u0026 conf.getInitParameter(PROXY_URI_BASE) !\u003d null) {\n      proxyHosts \u003d new String[]{conf.getInitParameter(PROXY_HOST)};\n      proxyUriBases \u003d new HashMap\u003c\u003e(1);\n      proxyUriBases.put(\"dummy\", conf.getInitParameter(PROXY_URI_BASE));\n    } else {\n      proxyHosts \u003d conf.getInitParameter(PROXY_HOSTS)\n          .split(PROXY_HOSTS_DELIMITER);\n\n      String[] proxyUriBasesArr \u003d conf.getInitParameter(PROXY_URI_BASES)\n          .split(PROXY_URI_BASES_DELIMITER);\n      proxyUriBases \u003d new HashMap\u003c\u003e(proxyUriBasesArr.length);\n      for (String proxyUriBase : proxyUriBasesArr) {\n        try {\n          URL url \u003d new URL(proxyUriBase);\n          proxyUriBases.put(url.getHost() + \":\" + url.getPort(), proxyUriBase);\n        } catch(MalformedURLException e) {\n          LOG.warn(\"{} does not appear to be a valid URL\", proxyUriBase, e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "4224e613409ec97ff52ba28a7cedfe0485577257": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1811. Fixed AMFilters in YARN to correctly accept requests from either web-app proxy or the RMs when HA is enabled. Contributed by Robert Kanter.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579877 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 9:20 PM",
      "commitName": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 589.96,
      "commitsBetweenForRepo": 3690,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,24 @@\n   public void init(FilterConfig conf) throws ServletException {\n-    proxyHost \u003d conf.getInitParameter(PROXY_HOST);\n-    proxyUriBase \u003d conf.getInitParameter(PROXY_URI_BASE);\n+    // Maintain for backwards compatibility\n+    if (conf.getInitParameter(PROXY_HOST) !\u003d null\n+        \u0026\u0026 conf.getInitParameter(PROXY_URI_BASE) !\u003d null) {\n+      proxyHosts \u003d new String[]{conf.getInitParameter(PROXY_HOST)};\n+      proxyUriBases \u003d new HashMap\u003cString, String\u003e(1);\n+      proxyUriBases.put(\"dummy\", conf.getInitParameter(PROXY_URI_BASE));\n+    } else {\n+      proxyHosts \u003d conf.getInitParameter(PROXY_HOSTS)\n+          .split(PROXY_HOSTS_DELIMITER);\n+\n+      String[] proxyUriBasesArr \u003d conf.getInitParameter(PROXY_URI_BASES)\n+          .split(PROXY_URI_BASES_DELIMITER);\n+      proxyUriBases \u003d new HashMap\u003cString, String\u003e();\n+      for (String proxyUriBase : proxyUriBasesArr) {\n+        try {\n+          URL url \u003d new URL(proxyUriBase);\n+          proxyUriBases.put(url.getHost() + \":\" + url.getPort(), proxyUriBase);\n+        } catch(MalformedURLException e) {\n+          LOG.warn(proxyUriBase + \" does not appear to be a valid URL\", e);\n+        }\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig conf) throws ServletException {\n    // Maintain for backwards compatibility\n    if (conf.getInitParameter(PROXY_HOST) !\u003d null\n        \u0026\u0026 conf.getInitParameter(PROXY_URI_BASE) !\u003d null) {\n      proxyHosts \u003d new String[]{conf.getInitParameter(PROXY_HOST)};\n      proxyUriBases \u003d new HashMap\u003cString, String\u003e(1);\n      proxyUriBases.put(\"dummy\", conf.getInitParameter(PROXY_URI_BASE));\n    } else {\n      proxyHosts \u003d conf.getInitParameter(PROXY_HOSTS)\n          .split(PROXY_HOSTS_DELIMITER);\n\n      String[] proxyUriBasesArr \u003d conf.getInitParameter(PROXY_URI_BASES)\n          .split(PROXY_URI_BASES_DELIMITER);\n      proxyUriBases \u003d new HashMap\u003cString, String\u003e();\n      for (String proxyUriBase : proxyUriBasesArr) {\n        try {\n          URL url \u003d new URL(proxyUriBase);\n          proxyUriBases.put(url.getHost() + \":\" + url.getPort(), proxyUriBase);\n        } catch(MalformedURLException e) {\n          LOG.warn(proxyUriBase + \" does not appear to be a valid URL\", e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void init(FilterConfig conf) throws ServletException {\n    proxyHost \u003d conf.getInitParameter(PROXY_HOST);\n    proxyUriBase \u003d conf.getInitParameter(PROXY_URI_BASE);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java"
      }
    },
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2858. Added a WebApp Proxy for applications. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 11:29 PM",
      "commitName": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,4 @@\n+  public void init(FilterConfig conf) throws ServletException {\n+    proxyHost \u003d conf.getInitParameter(PROXY_HOST);\n+    proxyUriBase \u003d conf.getInitParameter(PROXY_URI_BASE);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig conf) throws ServletException {\n    proxyHost \u003d conf.getInitParameter(PROXY_HOST);\n    proxyUriBase \u003d conf.getInitParameter(PROXY_URI_BASE);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java"
    }
  }
}