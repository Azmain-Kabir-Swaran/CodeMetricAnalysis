{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeviceResourceDockerRuntimePluginImpl.java",
  "functionName": "getCreateDockerVolumeCommand",
  "functionId": "getCreateDockerVolumeCommand___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java",
  "functionStartLine": 123,
  "functionEndLine": 145,
  "numCommitsSeen": 2,
  "timeTaken": 1250,
  "changeHistory": [
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0"
  ],
  "changeHistoryShort": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": "Ybodychange",
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9363.  Replaced debug logging with SLF4J parameterized log message.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "18/03/19 10:57 AM",
      "commitName": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/02/19 2:28 AM",
      "commitNameOld": "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 28.31,
      "commitsBetweenForRepo": 261,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   public DockerVolumeCommand getCreateDockerVolumeCommand(Container container)\n       throws ContainerExecutionException {\n     if(!requestedDevice(resourceName, container)) {\n       return null;\n     }\n     DeviceRuntimeSpec deviceRuntimeSpec \u003d getRuntimeSpec(container);\n     if (deviceRuntimeSpec \u003d\u003d null) {\n       return null;\n     }\n     Set\u003cVolumeSpec\u003e volumeClaims \u003d deviceRuntimeSpec.getVolumeSpecs();\n     for (VolumeSpec volumeSec: volumeClaims) {\n       if (volumeSec.getVolumeOperation().equals(VolumeSpec.CREATE)) {\n         DockerVolumeCommand command \u003d new DockerVolumeCommand(\n             DockerVolumeCommand.VOLUME_CREATE_SUB_COMMAND);\n         command.setDriverName(volumeSec.getVolumeDriver());\n         command.setVolumeName(volumeSec.getVolumeName());\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Get volume create request from plugin:\" + volumeClaims\n-              + \" for container: \" + container.getContainerId().toString());\n-        }\n+        LOG.debug(\"Get volume create request from plugin:{} for container: {}\",\n+            volumeClaims, container.getContainerId());\n         return command;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DockerVolumeCommand getCreateDockerVolumeCommand(Container container)\n      throws ContainerExecutionException {\n    if(!requestedDevice(resourceName, container)) {\n      return null;\n    }\n    DeviceRuntimeSpec deviceRuntimeSpec \u003d getRuntimeSpec(container);\n    if (deviceRuntimeSpec \u003d\u003d null) {\n      return null;\n    }\n    Set\u003cVolumeSpec\u003e volumeClaims \u003d deviceRuntimeSpec.getVolumeSpecs();\n    for (VolumeSpec volumeSec: volumeClaims) {\n      if (volumeSec.getVolumeOperation().equals(VolumeSpec.CREATE)) {\n        DockerVolumeCommand command \u003d new DockerVolumeCommand(\n            DockerVolumeCommand.VOLUME_CREATE_SUB_COMMAND);\n        command.setDriverName(volumeSec.getVolumeDriver());\n        command.setVolumeName(volumeSec.getVolumeName());\n        LOG.debug(\"Get volume create request from plugin:{} for container: {}\",\n            volumeClaims, container.getContainerId());\n        return command;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java",
      "extendedDetails": {}
    },
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9060. [YARN-8851] Phase 1 - Support device isolation and use the Nvidia GPU plugin as an example. Contributed by Zhankun Tang.\n",
      "commitDate": "18/02/19 2:28 AM",
      "commitName": "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,25 @@\n+  public DockerVolumeCommand getCreateDockerVolumeCommand(Container container)\n+      throws ContainerExecutionException {\n+    if(!requestedDevice(resourceName, container)) {\n+      return null;\n+    }\n+    DeviceRuntimeSpec deviceRuntimeSpec \u003d getRuntimeSpec(container);\n+    if (deviceRuntimeSpec \u003d\u003d null) {\n+      return null;\n+    }\n+    Set\u003cVolumeSpec\u003e volumeClaims \u003d deviceRuntimeSpec.getVolumeSpecs();\n+    for (VolumeSpec volumeSec: volumeClaims) {\n+      if (volumeSec.getVolumeOperation().equals(VolumeSpec.CREATE)) {\n+        DockerVolumeCommand command \u003d new DockerVolumeCommand(\n+            DockerVolumeCommand.VOLUME_CREATE_SUB_COMMAND);\n+        command.setDriverName(volumeSec.getVolumeDriver());\n+        command.setVolumeName(volumeSec.getVolumeName());\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Get volume create request from plugin:\" + volumeClaims\n+              + \" for container: \" + container.getContainerId().toString());\n+        }\n+        return command;\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public DockerVolumeCommand getCreateDockerVolumeCommand(Container container)\n      throws ContainerExecutionException {\n    if(!requestedDevice(resourceName, container)) {\n      return null;\n    }\n    DeviceRuntimeSpec deviceRuntimeSpec \u003d getRuntimeSpec(container);\n    if (deviceRuntimeSpec \u003d\u003d null) {\n      return null;\n    }\n    Set\u003cVolumeSpec\u003e volumeClaims \u003d deviceRuntimeSpec.getVolumeSpecs();\n    for (VolumeSpec volumeSec: volumeClaims) {\n      if (volumeSec.getVolumeOperation().equals(VolumeSpec.CREATE)) {\n        DockerVolumeCommand command \u003d new DockerVolumeCommand(\n            DockerVolumeCommand.VOLUME_CREATE_SUB_COMMAND);\n        command.setDriverName(volumeSec.getVolumeDriver());\n        command.setVolumeName(volumeSec.getVolumeName());\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Get volume create request from plugin:\" + volumeClaims\n              + \" for container: \" + container.getContainerId().toString());\n        }\n        return command;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java"
    }
  }
}