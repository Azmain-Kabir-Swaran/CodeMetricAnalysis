{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AInputStream.java",
  "functionName": "seek",
  "functionId": "seek___targetPos-long",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
  "functionStartLine": 226,
  "functionEndLine": 241,
  "numCommitsSeen": 32,
  "timeTaken": 1554,
  "changeHistory": [
    "b9e3eff62a7415d8666656a75db69ff3e43f8e7e",
    "6ba52d88ec11444cbac946ffadbc645acd0657de",
    "24d920b80eb3626073925a1d0b6dcf148add8cc0"
  ],
  "changeHistoryShort": {
    "b9e3eff62a7415d8666656a75db69ff3e43f8e7e": "Ymultichange(Yparameterchange,Ybodychange)",
    "6ba52d88ec11444cbac946ffadbc645acd0657de": "Ybodychange",
    "24d920b80eb3626073925a1d0b6dcf148add8cc0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b9e3eff62a7415d8666656a75db69ff3e43f8e7e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-12444 Support lazy seek in S3AInputStream. Rajesh Balamohan via stevel\n",
      "commitDate": "09/04/16 3:25 AM",
      "commitName": "b9e3eff62a7415d8666656a75db69ff3e43f8e7e",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-12444 Support lazy seek in S3AInputStream. Rajesh Balamohan via stevel\n",
          "commitDate": "09/04/16 3:25 AM",
          "commitName": "b9e3eff62a7415d8666656a75db69ff3e43f8e7e",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "08/04/16 1:36 PM",
          "commitNameOld": "843ee8d59d8bacbca0d87ccf0790772e39d16138",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-  public synchronized void seek(long pos) throws IOException {\n+  public synchronized void seek(long targetPos) throws IOException {\n     checkNotClosed();\n \n-    if (this.pos \u003d\u003d pos) {\n+    // Do not allow negative seek\n+    if (targetPos \u003c 0) {\n+      throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK\n+          + \" \" + targetPos);\n+    }\n+\n+    if (this.contentLength \u003c\u003d 0) {\n       return;\n     }\n \n-    LOG.debug(\n-        \"Reopening \" + this.key + \" to seek to new offset \" + (pos - this.pos));\n-    reopen(pos);\n+    // Lazy seek\n+    nextReadPos \u003d targetPos;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void seek(long targetPos) throws IOException {\n    checkNotClosed();\n\n    // Do not allow negative seek\n    if (targetPos \u003c 0) {\n      throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK\n          + \" \" + targetPos);\n    }\n\n    if (this.contentLength \u003c\u003d 0) {\n      return;\n    }\n\n    // Lazy seek\n    nextReadPos \u003d targetPos;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
          "extendedDetails": {
            "oldValue": "[pos-long]",
            "newValue": "[targetPos-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12444 Support lazy seek in S3AInputStream. Rajesh Balamohan via stevel\n",
          "commitDate": "09/04/16 3:25 AM",
          "commitName": "b9e3eff62a7415d8666656a75db69ff3e43f8e7e",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "08/04/16 1:36 PM",
          "commitNameOld": "843ee8d59d8bacbca0d87ccf0790772e39d16138",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-  public synchronized void seek(long pos) throws IOException {\n+  public synchronized void seek(long targetPos) throws IOException {\n     checkNotClosed();\n \n-    if (this.pos \u003d\u003d pos) {\n+    // Do not allow negative seek\n+    if (targetPos \u003c 0) {\n+      throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK\n+          + \" \" + targetPos);\n+    }\n+\n+    if (this.contentLength \u003c\u003d 0) {\n       return;\n     }\n \n-    LOG.debug(\n-        \"Reopening \" + this.key + \" to seek to new offset \" + (pos - this.pos));\n-    reopen(pos);\n+    // Lazy seek\n+    nextReadPos \u003d targetPos;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void seek(long targetPos) throws IOException {\n    checkNotClosed();\n\n    // Do not allow negative seek\n    if (targetPos \u003c 0) {\n      throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK\n          + \" \" + targetPos);\n    }\n\n    if (this.contentLength \u003c\u003d 0) {\n      return;\n    }\n\n    // Lazy seek\n    nextReadPos \u003d targetPos;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
          "extendedDetails": {}
        }
      ]
    },
    "6ba52d88ec11444cbac946ffadbc645acd0657de": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10714. AmazonS3Client.deleteObjects() need to be limited to 1000 entries per call. Contributed by Juan Yu.\n",
      "commitDate": "05/11/14 5:17 PM",
      "commitName": "6ba52d88ec11444cbac946ffadbc645acd0657de",
      "commitAuthor": "Aaron T. Myers",
      "commitDateOld": "15/09/14 8:27 AM",
      "commitNameOld": "24d920b80eb3626073925a1d0b6dcf148add8cc0",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 51.41,
      "commitsBetweenForRepo": 545,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n   public synchronized void seek(long pos) throws IOException {\n+    checkNotClosed();\n+\n     if (this.pos \u003d\u003d pos) {\n       return;\n     }\n \n-    LOG.info(\"Reopening \" + this.key + \" to seek to new offset \" + (pos - this.pos));\n+    LOG.debug(\n+        \"Reopening \" + this.key + \" to seek to new offset \" + (pos - this.pos));\n     reopen(pos);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void seek(long pos) throws IOException {\n    checkNotClosed();\n\n    if (this.pos \u003d\u003d pos) {\n      return;\n    }\n\n    LOG.debug(\n        \"Reopening \" + this.key + \" to seek to new offset \" + (pos - this.pos));\n    reopen(pos);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "24d920b80eb3626073925a1d0b6dcf148add8cc0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10400. Incorporate new S3A FileSystem implementation. Contributed by Jordan Mendelson and Dave Wang.\n",
      "commitDate": "15/09/14 8:27 AM",
      "commitName": "24d920b80eb3626073925a1d0b6dcf148add8cc0",
      "commitAuthor": "Aaron T. Myers",
      "diff": "@@ -0,0 +1,8 @@\n+  public synchronized void seek(long pos) throws IOException {\n+    if (this.pos \u003d\u003d pos) {\n+      return;\n+    }\n+\n+    LOG.info(\"Reopening \" + this.key + \" to seek to new offset \" + (pos - this.pos));\n+    reopen(pos);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void seek(long pos) throws IOException {\n    if (this.pos \u003d\u003d pos) {\n      return;\n    }\n\n    LOG.info(\"Reopening \" + this.key + \" to seek to new offset \" + (pos - this.pos));\n    reopen(pos);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java"
    }
  }
}