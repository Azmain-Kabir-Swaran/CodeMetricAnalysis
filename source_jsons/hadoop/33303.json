{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GpuDiscoverer.java",
  "functionName": "parseGpuDevicesFromUserDefinedValues",
  "functionId": "parseGpuDevicesFromUserDefinedValues",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
  "functionStartLine": 198,
  "functionEndLine": 239,
  "numCommitsSeen": 19,
  "timeTaken": 5047,
  "changeHistory": [
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
    "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
    "95fbbfed75dd309b5d56032ece64996165572287"
  ],
  "changeHistoryShort": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": "Ybodychange",
    "95fc38f2e9011b16ca09ac44843a71a2cac45c99": "Ybodychange",
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d": "Ymultichange(Yparameterchange,Ybodychange)",
    "95fbbfed75dd309b5d56032ece64996165572287": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9217. Nodemanager will fail to start if GPU is misconfigured on the node or GPU drivers missing. Contributed by Peter Bacsko\n",
      "commitDate": "21/08/19 7:44 AM",
      "commitName": "e8fa192f07b6f2e7a0b03813edca03c505a8ac1b",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "02/08/19 2:24 AM",
      "commitNameOld": "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
      "commitAuthorOld": "Adam Antal",
      "daysBetweenCommits": 19.22,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,42 @@\n   private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n       throws YarnException {\n     String devices \u003d getConf().get(\n         YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n \n     if (devices.trim().isEmpty()) {\n       throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n     }\n     List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n     for (String device : devices.split(\",\")) {\n       if (device.trim().length() \u003e 0) {\n         String[] splitByColon \u003d device.trim().split(\":\");\n         if (splitByColon.length !\u003d 2) {\n-          throw GpuDeviceSpecificationException.\n-              createWithWrongValueSpecified(device, devices);\n+          throwIfNecessary(GpuDeviceSpecificationException\n+              .createWithWrongValueSpecified(device, devices), getConf());\n+          LOG.warn(\"Wrong GPU specification string {}, ignored\", device);\n         }\n \n-        GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n+        GpuDevice gpuDevice;\n+        try {\n+          gpuDevice \u003d parseGpuDevice(splitByColon);\n+        } catch (NumberFormatException e) {\n+          throwIfNecessary(GpuDeviceSpecificationException\n+              .createWithWrongValueSpecified(device, devices, e), getConf());\n+          LOG.warn(\"Cannot parse GPU device numbers: {}\", device);\n+          continue;\n+        }\n+\n         if (!gpuDevices.contains(gpuDevice)) {\n           gpuDevices.add(gpuDevice);\n         } else {\n-          throw GpuDeviceSpecificationException\n-              .createWithDuplicateValueSpecified(device, devices);\n+          throwIfNecessary(GpuDeviceSpecificationException\n+              .createWithDuplicateValueSpecified(device, devices), getConf());\n+          LOG.warn(\"CPU device is duplicated: {}\", device);\n         }\n       }\n     }\n     LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n \n     return gpuDevices;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n      throws YarnException {\n    String devices \u003d getConf().get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    if (devices.trim().isEmpty()) {\n      throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n    }\n    List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n    for (String device : devices.split(\",\")) {\n      if (device.trim().length() \u003e 0) {\n        String[] splitByColon \u003d device.trim().split(\":\");\n        if (splitByColon.length !\u003d 2) {\n          throwIfNecessary(GpuDeviceSpecificationException\n              .createWithWrongValueSpecified(device, devices), getConf());\n          LOG.warn(\"Wrong GPU specification string {}, ignored\", device);\n        }\n\n        GpuDevice gpuDevice;\n        try {\n          gpuDevice \u003d parseGpuDevice(splitByColon);\n        } catch (NumberFormatException e) {\n          throwIfNecessary(GpuDeviceSpecificationException\n              .createWithWrongValueSpecified(device, devices, e), getConf());\n          LOG.warn(\"Cannot parse GPU device numbers: {}\", device);\n          continue;\n        }\n\n        if (!gpuDevices.contains(gpuDevice)) {\n          gpuDevices.add(gpuDevice);\n        } else {\n          throwIfNecessary(GpuDeviceSpecificationException\n              .createWithDuplicateValueSpecified(device, devices), getConf());\n          LOG.warn(\"CPU device is duplicated: {}\", device);\n        }\n      }\n    }\n    LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n\n    return gpuDevices;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
      "extendedDetails": {}
    },
    "95fc38f2e9011b16ca09ac44843a71a2cac45c99": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9375. Use Configured in GpuDiscoverer and FpgaDiscoverer (#1131)\n\nContributed by Adam Antal",
      "commitDate": "02/08/19 2:24 AM",
      "commitName": "95fc38f2e9011b16ca09ac44843a71a2cac45c99",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "15/07/19 2:59 AM",
      "commitNameOld": "18ee1092b471c5337f05809f8f01dae415e51a3a",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 17.98,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n       throws YarnException {\n-    String devices \u003d conf.get(\n+    String devices \u003d getConf().get(\n         YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n         YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n \n     if (devices.trim().isEmpty()) {\n       throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n     }\n     List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n     for (String device : devices.split(\",\")) {\n       if (device.trim().length() \u003e 0) {\n         String[] splitByColon \u003d device.trim().split(\":\");\n         if (splitByColon.length !\u003d 2) {\n           throw GpuDeviceSpecificationException.\n               createWithWrongValueSpecified(device, devices);\n         }\n \n         GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n         if (!gpuDevices.contains(gpuDevice)) {\n           gpuDevices.add(gpuDevice);\n         } else {\n           throw GpuDeviceSpecificationException\n               .createWithDuplicateValueSpecified(device, devices);\n         }\n       }\n     }\n     LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n \n     return gpuDevices;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n      throws YarnException {\n    String devices \u003d getConf().get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    if (devices.trim().isEmpty()) {\n      throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n    }\n    List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n    for (String device : devices.split(\",\")) {\n      if (device.trim().length() \u003e 0) {\n        String[] splitByColon \u003d device.trim().split(\":\");\n        if (splitByColon.length !\u003d 2) {\n          throw GpuDeviceSpecificationException.\n              createWithWrongValueSpecified(device, devices);\n        }\n\n        GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n        if (!gpuDevices.contains(gpuDevice)) {\n          gpuDevices.add(gpuDevice);\n        } else {\n          throw GpuDeviceSpecificationException\n              .createWithDuplicateValueSpecified(device, devices);\n        }\n      }\n    }\n    LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n\n    return gpuDevices;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
      "extendedDetails": {}
    },
    "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9337. GPU auto-discovery script runs even when the resource is given by hand. Contributed by Adam Antal\n",
      "commitDate": "12/07/19 8:28 AM",
      "commitName": "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9337. GPU auto-discovery script runs even when the resource is given by hand. Contributed by Adam Antal\n",
          "commitDate": "12/07/19 8:28 AM",
          "commitName": "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 118.67,
          "commitsBetweenForRepo": 819,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues(String devices)\n+  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n       throws YarnException {\n+    String devices \u003d conf.get(\n+        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n+        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n+\n     if (devices.trim().isEmpty()) {\n       throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n     }\n     List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n     for (String device : devices.split(\",\")) {\n       if (device.trim().length() \u003e 0) {\n         String[] splitByColon \u003d device.trim().split(\":\");\n         if (splitByColon.length !\u003d 2) {\n           throw GpuDeviceSpecificationException.\n               createWithWrongValueSpecified(device, devices);\n         }\n \n         GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n         if (!gpuDevices.contains(gpuDevice)) {\n           gpuDevices.add(gpuDevice);\n         } else {\n           throw GpuDeviceSpecificationException\n               .createWithDuplicateValueSpecified(device, devices);\n         }\n       }\n     }\n     LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n \n     return gpuDevices;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n      throws YarnException {\n    String devices \u003d conf.get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    if (devices.trim().isEmpty()) {\n      throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n    }\n    List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n    for (String device : devices.split(\",\")) {\n      if (device.trim().length() \u003e 0) {\n        String[] splitByColon \u003d device.trim().split(\":\");\n        if (splitByColon.length !\u003d 2) {\n          throw GpuDeviceSpecificationException.\n              createWithWrongValueSpecified(device, devices);\n        }\n\n        GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n        if (!gpuDevices.contains(gpuDevice)) {\n          gpuDevices.add(gpuDevice);\n        } else {\n          throw GpuDeviceSpecificationException\n              .createWithDuplicateValueSpecified(device, devices);\n        }\n      }\n    }\n    LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n\n    return gpuDevices;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {
            "oldValue": "[devices-String]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9337. GPU auto-discovery script runs even when the resource is given by hand. Contributed by Adam Antal\n",
          "commitDate": "12/07/19 8:28 AM",
          "commitName": "61b0c2bb7c0f18c4a666b96ca1603cbd4d27eb6d",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 118.67,
          "commitsBetweenForRepo": 819,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues(String devices)\n+  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n       throws YarnException {\n+    String devices \u003d conf.get(\n+        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n+        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n+\n     if (devices.trim().isEmpty()) {\n       throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n     }\n     List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n     for (String device : devices.split(\",\")) {\n       if (device.trim().length() \u003e 0) {\n         String[] splitByColon \u003d device.trim().split(\":\");\n         if (splitByColon.length !\u003d 2) {\n           throw GpuDeviceSpecificationException.\n               createWithWrongValueSpecified(device, devices);\n         }\n \n         GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n         if (!gpuDevices.contains(gpuDevice)) {\n           gpuDevices.add(gpuDevice);\n         } else {\n           throw GpuDeviceSpecificationException\n               .createWithDuplicateValueSpecified(device, devices);\n         }\n       }\n     }\n     LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n \n     return gpuDevices;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues()\n      throws YarnException {\n    String devices \u003d conf.get(\n        YarnConfiguration.NM_GPU_ALLOWED_DEVICES,\n        YarnConfiguration.AUTOMATICALLY_DISCOVER_GPU_DEVICES);\n\n    if (devices.trim().isEmpty()) {\n      throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n    }\n    List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n    for (String device : devices.split(\",\")) {\n      if (device.trim().length() \u003e 0) {\n        String[] splitByColon \u003d device.trim().split(\":\");\n        if (splitByColon.length !\u003d 2) {\n          throw GpuDeviceSpecificationException.\n              createWithWrongValueSpecified(device, devices);\n        }\n\n        GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n        if (!gpuDevices.contains(gpuDevice)) {\n          gpuDevices.add(gpuDevice);\n        } else {\n          throw GpuDeviceSpecificationException\n              .createWithDuplicateValueSpecified(device, devices);\n        }\n      }\n    }\n    LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n\n    return gpuDevices;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java",
          "extendedDetails": {}
        }
      ]
    },
    "95fbbfed75dd309b5d56032ece64996165572287": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9118. Handle exceptions with parsing user defined GPU devices in GpuDiscoverer. Contributed by Szilard Nemeth.\n",
      "commitDate": "22/02/19 6:52 AM",
      "commitName": "95fbbfed75dd309b5d56032ece64996165572287",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,27 @@\n+  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues(String devices)\n+      throws YarnException {\n+    if (devices.trim().isEmpty()) {\n+      throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n+    }\n+    List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n+    for (String device : devices.split(\",\")) {\n+      if (device.trim().length() \u003e 0) {\n+        String[] splitByColon \u003d device.trim().split(\":\");\n+        if (splitByColon.length !\u003d 2) {\n+          throw GpuDeviceSpecificationException.\n+              createWithWrongValueSpecified(device, devices);\n+        }\n+\n+        GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n+        if (!gpuDevices.contains(gpuDevice)) {\n+          gpuDevices.add(gpuDevice);\n+        } else {\n+          throw GpuDeviceSpecificationException\n+              .createWithDuplicateValueSpecified(device, devices);\n+        }\n+      }\n+    }\n+    LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n+\n+    return gpuDevices;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cGpuDevice\u003e parseGpuDevicesFromUserDefinedValues(String devices)\n      throws YarnException {\n    if (devices.trim().isEmpty()) {\n      throw GpuDeviceSpecificationException.createWithEmptyValueSpecified();\n    }\n    List\u003cGpuDevice\u003e gpuDevices \u003d Lists.newArrayList();\n    for (String device : devices.split(\",\")) {\n      if (device.trim().length() \u003e 0) {\n        String[] splitByColon \u003d device.trim().split(\":\");\n        if (splitByColon.length !\u003d 2) {\n          throw GpuDeviceSpecificationException.\n              createWithWrongValueSpecified(device, devices);\n        }\n\n        GpuDevice gpuDevice \u003d parseGpuDevice(device, splitByColon, devices);\n        if (!gpuDevices.contains(gpuDevice)) {\n          gpuDevices.add(gpuDevice);\n        } else {\n          throw GpuDeviceSpecificationException\n              .createWithDuplicateValueSpecified(device, devices);\n        }\n      }\n    }\n    LOG.info(\"Allowed GPU devices:\" + gpuDevices);\n\n    return gpuDevices;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/gpu/GpuDiscoverer.java"
    }
  }
}