{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerUpdateContext.java",
  "functionName": "removeFromOutstandingUpdate",
  "functionId": "removeFromOutstandingUpdate___schedulerKey-SchedulerRequestKey__container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerUpdateContext.java",
  "functionStartLine": 238,
  "functionEndLine": 262,
  "numCommitsSeen": 7,
  "timeTaken": 2166,
  "changeHistory": [
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4"
  ],
  "changeHistoryShort": {
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5959. RM changes to support change of container ExecutionType. (Arun Suresh via wangda)\n",
      "commitDate": "05/01/17 10:31 AM",
      "commitName": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,25 @@\n+  public synchronized void removeFromOutstandingUpdate(\n+      SchedulerRequestKey schedulerKey, Container container) {\n+    Map\u003cResource, Map\u003cNodeId, Set\u003cContainerId\u003e\u003e\u003e resourceMap \u003d\n+        outstandingIncreases.get(schedulerKey);\n+    if (resourceMap !\u003d null) {\n+      Map\u003cNodeId, Set\u003cContainerId\u003e\u003e locationMap \u003d\n+          resourceMap.get(container.getResource());\n+      if (locationMap !\u003d null) {\n+        Set\u003cContainerId\u003e containerIds \u003d locationMap.get(container.getNodeId());\n+        if (containerIds !\u003d null \u0026\u0026 !containerIds.isEmpty()) {\n+          containerIds.remove(container.getId());\n+          if (containerIds.isEmpty()) {\n+            locationMap.remove(container.getNodeId());\n+          }\n+        }\n+        if (locationMap.isEmpty()) {\n+          resourceMap.remove(container.getResource());\n+        }\n+      }\n+      if (resourceMap.isEmpty()) {\n+        outstandingIncreases.remove(schedulerKey);\n+      }\n+    }\n+    outstandingDecreases.remove(container.getId());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removeFromOutstandingUpdate(\n      SchedulerRequestKey schedulerKey, Container container) {\n    Map\u003cResource, Map\u003cNodeId, Set\u003cContainerId\u003e\u003e\u003e resourceMap \u003d\n        outstandingIncreases.get(schedulerKey);\n    if (resourceMap !\u003d null) {\n      Map\u003cNodeId, Set\u003cContainerId\u003e\u003e locationMap \u003d\n          resourceMap.get(container.getResource());\n      if (locationMap !\u003d null) {\n        Set\u003cContainerId\u003e containerIds \u003d locationMap.get(container.getNodeId());\n        if (containerIds !\u003d null \u0026\u0026 !containerIds.isEmpty()) {\n          containerIds.remove(container.getId());\n          if (containerIds.isEmpty()) {\n            locationMap.remove(container.getNodeId());\n          }\n        }\n        if (locationMap.isEmpty()) {\n          resourceMap.remove(container.getResource());\n        }\n      }\n      if (resourceMap.isEmpty()) {\n        outstandingIncreases.remove(schedulerKey);\n      }\n    }\n    outstandingDecreases.remove(container.getId());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ContainerUpdateContext.java"
    }
  }
}