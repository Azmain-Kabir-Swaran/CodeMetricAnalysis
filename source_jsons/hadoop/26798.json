{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProtocRunner.java",
  "functionName": "computeChecksum",
  "functionId": "computeChecksum___file-File",
  "sourceFilePath": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/protoc/ProtocRunner.java",
  "functionStartLine": 148,
  "functionEndLine": 171,
  "numCommitsSeen": 11,
  "timeTaken": 1545,
  "changeHistory": [
    "e1c6ef2efa9d87fdfc7474ca63998a13a3929874",
    "625d7ed9eb65f0df204b506ce92c11803fbce273"
  ],
  "changeHistoryShort": {
    "e1c6ef2efa9d87fdfc7474ca63998a13a3929874": "Ymovefromfile",
    "625d7ed9eb65f0df204b506ce92c11803fbce273": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1c6ef2efa9d87fdfc7474ca63998a13a3929874": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-13789. Hadoop Common includes generated test protos in both jar and test-jar. Contributed by Sean Busbey.\n",
      "commitDate": "08/11/16 4:33 PM",
      "commitName": "e1c6ef2efa9d87fdfc7474ca63998a13a3929874",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "08/11/16 4:07 PM",
      "commitNameOld": "77c13c385774c51766fe505397fa916754ac08d4",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private long computeChecksum(File file) throws IOException {\n      // If we\u0027ve already computed the csum, reuse the computed value\n      final String canonicalPath \u003d file.getCanonicalPath();\n      if (computedChecksums.containsKey(canonicalPath)) {\n        return computedChecksums.get(canonicalPath);\n      }\n      // Compute the csum for the file\n      CRC32 crc \u003d new CRC32();\n      byte[] buffer \u003d new byte[1024*64];\n      try (BufferedInputStream in \u003d\n          new BufferedInputStream(new FileInputStream(file))) {\n        while (true) {\n          int read \u003d in.read(buffer);\n          if (read \u003c\u003d 0) {\n            break;\n          }\n          crc.update(buffer, 0, read);\n        }\n      }\n      // Save it in the generated map and return\n      final long computedCsum \u003d crc.getValue();\n      computedChecksums.put(canonicalPath, computedCsum);\n      return crc.getValue();\n    }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/protoc/ProtocRunner.java",
      "extendedDetails": {
        "oldPath": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/protoc/ProtocMojo.java",
        "newPath": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/protoc/ProtocRunner.java",
        "oldMethodName": "computeChecksum",
        "newMethodName": "computeChecksum"
      }
    },
    "625d7ed9eb65f0df204b506ce92c11803fbce273": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12194. Support for incremental generation in the protoc plugin.\n",
      "commitDate": "08/07/15 11:09 AM",
      "commitName": "625d7ed9eb65f0df204b506ce92c11803fbce273",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,24 @@\n+    private long computeChecksum(File file) throws IOException {\n+      // If we\u0027ve already computed the csum, reuse the computed value\n+      final String canonicalPath \u003d file.getCanonicalPath();\n+      if (computedChecksums.containsKey(canonicalPath)) {\n+        return computedChecksums.get(canonicalPath);\n+      }\n+      // Compute the csum for the file\n+      CRC32 crc \u003d new CRC32();\n+      byte[] buffer \u003d new byte[1024*64];\n+      try (BufferedInputStream in \u003d\n+          new BufferedInputStream(new FileInputStream(file))) {\n+        while (true) {\n+          int read \u003d in.read(buffer);\n+          if (read \u003c\u003d 0) {\n+            break;\n+          }\n+          crc.update(buffer, 0, read);\n+        }\n+      }\n+      // Save it in the generated map and return\n+      final long computedCsum \u003d crc.getValue();\n+      computedChecksums.put(canonicalPath, computedCsum);\n+      return crc.getValue();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private long computeChecksum(File file) throws IOException {\n      // If we\u0027ve already computed the csum, reuse the computed value\n      final String canonicalPath \u003d file.getCanonicalPath();\n      if (computedChecksums.containsKey(canonicalPath)) {\n        return computedChecksums.get(canonicalPath);\n      }\n      // Compute the csum for the file\n      CRC32 crc \u003d new CRC32();\n      byte[] buffer \u003d new byte[1024*64];\n      try (BufferedInputStream in \u003d\n          new BufferedInputStream(new FileInputStream(file))) {\n        while (true) {\n          int read \u003d in.read(buffer);\n          if (read \u003c\u003d 0) {\n            break;\n          }\n          crc.update(buffer, 0, read);\n        }\n      }\n      // Save it in the generated map and return\n      final long computedCsum \u003d crc.getValue();\n      computedChecksums.put(canonicalPath, computedCsum);\n      return crc.getValue();\n    }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/protoc/ProtocMojo.java"
    }
  }
}