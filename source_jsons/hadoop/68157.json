{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SwiftNativeFileSystem.java",
  "functionName": "shouldCreate",
  "functionId": "shouldCreate___directory-Path",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeFileSystem.java",
  "functionStartLine": 399,
  "functionEndLine": 426,
  "numCommitsSeen": 9,
  "timeTaken": 820,
  "changeHistory": [
    "becc23fb65a5c2b632034b8b2c4c08832d47fd96",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874"
  ],
  "changeHistoryShort": {
    "becc23fb65a5c2b632034b8b2c4c08832d47fd96": "Ybodychange",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": "Yintroduced"
  },
  "changeHistoryDetails": {
    "becc23fb65a5c2b632034b8b2c4c08832d47fd96": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9361: Strictly define FileSystem APIs - OpenStack portion\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607599 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:10 AM",
      "commitName": "becc23fb65a5c2b632034b8b2c4c08832d47fd96",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/09/13 4:32 AM",
      "commitNameOld": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 279.03,
      "commitsBetweenForRepo": 1881,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private boolean shouldCreate(Path directory) throws IOException {\n     FileStatus fileStatus;\n     boolean shouldCreate;\n     if (isRoot(directory)) {\n       //its the base dir, bail out immediately\n       return false;\n     }\n     try {\n       //find out about the path\n       fileStatus \u003d getFileStatus(directory);\n \n       if (!SwiftUtils.isDirectory(fileStatus)) {\n         //if it\u0027s a file, raise an error\n-        throw new SwiftNotDirectoryException(directory,\n-                String.format(\": can\u0027t mkdir since it exists and is not a directory: %s\",\n-                        fileStatus));\n+        throw new ParentNotDirectoryException(\n+                String.format(\"%s: can\u0027t mkdir since it exists and is not a directory: %s\",\n+                    directory, fileStatus));\n       } else {\n         //path exists, and it is a directory\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"skipping mkdir(\" + directory + \") as it exists already\");\n         }\n         shouldCreate \u003d false;\n       }\n     } catch (FileNotFoundException e) {\n       shouldCreate \u003d true;\n     }\n     return shouldCreate;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldCreate(Path directory) throws IOException {\n    FileStatus fileStatus;\n    boolean shouldCreate;\n    if (isRoot(directory)) {\n      //its the base dir, bail out immediately\n      return false;\n    }\n    try {\n      //find out about the path\n      fileStatus \u003d getFileStatus(directory);\n\n      if (!SwiftUtils.isDirectory(fileStatus)) {\n        //if it\u0027s a file, raise an error\n        throw new ParentNotDirectoryException(\n                String.format(\"%s: can\u0027t mkdir since it exists and is not a directory: %s\",\n                    directory, fileStatus));\n      } else {\n        //path exists, and it is a directory\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"skipping mkdir(\" + directory + \") as it exists already\");\n        }\n        shouldCreate \u003d false;\n      }\n    } catch (FileNotFoundException e) {\n      shouldCreate \u003d true;\n    }\n    return shouldCreate;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeFileSystem.java",
      "extendedDetails": {}
    },
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8545. Filesystem Implementation for OpenStack Swift\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 4:32 AM",
      "commitName": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,28 @@\n+  private boolean shouldCreate(Path directory) throws IOException {\n+    FileStatus fileStatus;\n+    boolean shouldCreate;\n+    if (isRoot(directory)) {\n+      //its the base dir, bail out immediately\n+      return false;\n+    }\n+    try {\n+      //find out about the path\n+      fileStatus \u003d getFileStatus(directory);\n+\n+      if (!SwiftUtils.isDirectory(fileStatus)) {\n+        //if it\u0027s a file, raise an error\n+        throw new SwiftNotDirectoryException(directory,\n+                String.format(\": can\u0027t mkdir since it exists and is not a directory: %s\",\n+                        fileStatus));\n+      } else {\n+        //path exists, and it is a directory\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"skipping mkdir(\" + directory + \") as it exists already\");\n+        }\n+        shouldCreate \u003d false;\n+      }\n+    } catch (FileNotFoundException e) {\n+      shouldCreate \u003d true;\n+    }\n+    return shouldCreate;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldCreate(Path directory) throws IOException {\n    FileStatus fileStatus;\n    boolean shouldCreate;\n    if (isRoot(directory)) {\n      //its the base dir, bail out immediately\n      return false;\n    }\n    try {\n      //find out about the path\n      fileStatus \u003d getFileStatus(directory);\n\n      if (!SwiftUtils.isDirectory(fileStatus)) {\n        //if it\u0027s a file, raise an error\n        throw new SwiftNotDirectoryException(directory,\n                String.format(\": can\u0027t mkdir since it exists and is not a directory: %s\",\n                        fileStatus));\n      } else {\n        //path exists, and it is a directory\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"skipping mkdir(\" + directory + \") as it exists already\");\n        }\n        shouldCreate \u003d false;\n      }\n    } catch (FileNotFoundException e) {\n      shouldCreate \u003d true;\n    }\n    return shouldCreate;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeFileSystem.java"
    }
  }
}