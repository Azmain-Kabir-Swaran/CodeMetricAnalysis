{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VersionInfoMojo.java",
  "functionName": "computeMD5",
  "functionId": "computeMD5",
  "sourceFilePath": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/versioninfo/VersionInfoMojo.java",
  "functionStartLine": 271,
  "functionEndLine": 281,
  "numCommitsSeen": 10,
  "timeTaken": 1270,
  "changeHistory": [
    "8d619b4896ac31f63fd0083594b6e7d207ef71a0",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
    "9cedad11d8d2197a54732667a15344983de5c437",
    "946456c6d88780abe0251b098dd771e9e1e93ab3",
    "ae270e72cff4d55822bbd2766c403db3526d9261"
  ],
  "changeHistoryShort": {
    "8d619b4896ac31f63fd0083594b6e7d207ef71a0": "Ybodychange",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": "Ybodychange",
    "9cedad11d8d2197a54732667a15344983de5c437": "Ybodychange",
    "946456c6d88780abe0251b098dd771e9e1e93ab3": "Ybodychange",
    "ae270e72cff4d55822bbd2766c403db3526d9261": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8d619b4896ac31f63fd0083594b6e7d207ef71a0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13602. Fix some warnings by findbugs in hadoop-maven-plugin. (ozawa)\n",
      "commitDate": "22/09/16 9:37 AM",
      "commitName": "8d619b4896ac31f63fd0083594b6e7d207ef71a0",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 569.47,
      "commitsBetweenForRepo": 4279,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,11 @@\n   private String computeMD5() throws Exception {\n     List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n     // File order of MD5 calculation is significant.  Sorting is done on\n     // unix-format names, case-folded, in order to get a platform-independent\n     // sort and calculate the same MD5 on all platforms.\n-    Collections.sort(files, new Comparator\u003cFile\u003e() {\n-      @Override\n-      public int compare(File lhs, File rhs) {\n-        return normalizePath(lhs).compareTo(normalizePath(rhs));\n-      }\n-\n-      private String normalizePath(File file) {\n-        return file.getPath().toUpperCase(Locale.ENGLISH)\n-            .replaceAll(\"\\\\\\\\\", \"/\");\n-      }\n-    });\n+    Collections.sort(files, new MD5Comparator());\n     byte[] md5 \u003d computeMD5(files);\n     String md5str \u003d byteArrayToString(md5);\n     getLog().info(\"Computed MD5: \" + md5str);\n     return md5str;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String computeMD5() throws Exception {\n    List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n    // File order of MD5 calculation is significant.  Sorting is done on\n    // unix-format names, case-folded, in order to get a platform-independent\n    // sort and calculate the same MD5 on all platforms.\n    Collections.sort(files, new MD5Comparator());\n    byte[] md5 \u003d computeMD5(files);\n    String md5str \u003d byteArrayToString(md5);\n    getLog().info(\"Computed MD5: \" + md5str);\n    return md5str;\n  }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/versioninfo/VersionInfoMojo.java",
      "extendedDetails": {}
    },
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "02/03/15 9:17 PM",
      "commitName": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private String computeMD5() throws Exception {\n     List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n     // File order of MD5 calculation is significant.  Sorting is done on\n     // unix-format names, case-folded, in order to get a platform-independent\n     // sort and calculate the same MD5 on all platforms.\n     Collections.sort(files, new Comparator\u003cFile\u003e() {\n       @Override\n       public int compare(File lhs, File rhs) {\n         return normalizePath(lhs).compareTo(normalizePath(rhs));\n       }\n \n       private String normalizePath(File file) {\n-        return file.getPath().toUpperCase().replaceAll(\"\\\\\\\\\", \"/\");\n+        return file.getPath().toUpperCase(Locale.ENGLISH)\n+            .replaceAll(\"\\\\\\\\\", \"/\");\n       }\n     });\n     byte[] md5 \u003d computeMD5(files);\n     String md5str \u003d byteArrayToString(md5);\n     getLog().info(\"Computed MD5: \" + md5str);\n     return md5str;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String computeMD5() throws Exception {\n    List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n    // File order of MD5 calculation is significant.  Sorting is done on\n    // unix-format names, case-folded, in order to get a platform-independent\n    // sort and calculate the same MD5 on all platforms.\n    Collections.sort(files, new Comparator\u003cFile\u003e() {\n      @Override\n      public int compare(File lhs, File rhs) {\n        return normalizePath(lhs).compareTo(normalizePath(rhs));\n      }\n\n      private String normalizePath(File file) {\n        return file.getPath().toUpperCase(Locale.ENGLISH)\n            .replaceAll(\"\\\\\\\\\", \"/\");\n      }\n    });\n    byte[] md5 \u003d computeMD5(files);\n    String md5str \u003d byteArrayToString(md5);\n    getLog().info(\"Computed MD5: \" + md5str);\n    return md5str;\n  }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/versioninfo/VersionInfoMojo.java",
      "extendedDetails": {}
    },
    "9cedad11d8d2197a54732667a15344983de5c437": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\"\n\nThis reverts commit 946456c6d88780abe0251b098dd771e9e1e93ab3.\n\nConflicts:\n\thadoop-common-project/hadoop-common/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/QuotaByStorageTypeEntry.java\n",
      "commitDate": "24/02/15 7:32 AM",
      "commitName": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "18/02/15 8:06 PM",
      "commitNameOld": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 5.48,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   private String computeMD5() throws Exception {\n     List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n     // File order of MD5 calculation is significant.  Sorting is done on\n     // unix-format names, case-folded, in order to get a platform-independent\n     // sort and calculate the same MD5 on all platforms.\n     Collections.sort(files, new Comparator\u003cFile\u003e() {\n       @Override\n       public int compare(File lhs, File rhs) {\n         return normalizePath(lhs).compareTo(normalizePath(rhs));\n       }\n \n       private String normalizePath(File file) {\n-        return file.getPath().toUpperCase(Locale.ENGLISH)\n-            .replaceAll(\"\\\\\\\\\", \"/\");\n+        return file.getPath().toUpperCase().replaceAll(\"\\\\\\\\\", \"/\");\n       }\n     });\n     byte[] md5 \u003d computeMD5(files);\n     String md5str \u003d byteArrayToString(md5);\n     getLog().info(\"Computed MD5: \" + md5str);\n     return md5str;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String computeMD5() throws Exception {\n    List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n    // File order of MD5 calculation is significant.  Sorting is done on\n    // unix-format names, case-folded, in order to get a platform-independent\n    // sort and calculate the same MD5 on all platforms.\n    Collections.sort(files, new Comparator\u003cFile\u003e() {\n      @Override\n      public int compare(File lhs, File rhs) {\n        return normalizePath(lhs).compareTo(normalizePath(rhs));\n      }\n\n      private String normalizePath(File file) {\n        return file.getPath().toUpperCase().replaceAll(\"\\\\\\\\\", \"/\");\n      }\n    });\n    byte[] md5 \u003d computeMD5(files);\n    String md5str \u003d byteArrayToString(md5);\n    getLog().info(\"Computed MD5: \" + md5str);\n    return md5str;\n  }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/versioninfo/VersionInfoMojo.java",
      "extendedDetails": {}
    },
    "946456c6d88780abe0251b098dd771e9e1e93ab3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "18/02/15 8:06 PM",
      "commitName": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "25/01/15 8:13 AM",
      "commitNameOld": "35f64962fccc472f5fbd172f3f824fdd72a43143",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 24.5,
      "commitsBetweenForRepo": 274,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private String computeMD5() throws Exception {\n     List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n     // File order of MD5 calculation is significant.  Sorting is done on\n     // unix-format names, case-folded, in order to get a platform-independent\n     // sort and calculate the same MD5 on all platforms.\n     Collections.sort(files, new Comparator\u003cFile\u003e() {\n       @Override\n       public int compare(File lhs, File rhs) {\n         return normalizePath(lhs).compareTo(normalizePath(rhs));\n       }\n \n       private String normalizePath(File file) {\n-        return file.getPath().toUpperCase().replaceAll(\"\\\\\\\\\", \"/\");\n+        return file.getPath().toUpperCase(Locale.ENGLISH)\n+            .replaceAll(\"\\\\\\\\\", \"/\");\n       }\n     });\n     byte[] md5 \u003d computeMD5(files);\n     String md5str \u003d byteArrayToString(md5);\n     getLog().info(\"Computed MD5: \" + md5str);\n     return md5str;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String computeMD5() throws Exception {\n    List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n    // File order of MD5 calculation is significant.  Sorting is done on\n    // unix-format names, case-folded, in order to get a platform-independent\n    // sort and calculate the same MD5 on all platforms.\n    Collections.sort(files, new Comparator\u003cFile\u003e() {\n      @Override\n      public int compare(File lhs, File rhs) {\n        return normalizePath(lhs).compareTo(normalizePath(rhs));\n      }\n\n      private String normalizePath(File file) {\n        return file.getPath().toUpperCase(Locale.ENGLISH)\n            .replaceAll(\"\\\\\\\\\", \"/\");\n      }\n    });\n    byte[] md5 \u003d computeMD5(files);\n    String md5str \u003d byteArrayToString(md5);\n    getLog().info(\"Computed MD5: \" + md5str);\n    return md5str;\n  }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/versioninfo/VersionInfoMojo.java",
      "extendedDetails": {}
    },
    "ae270e72cff4d55822bbd2766c403db3526d9261": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8924. Add maven plugin alternative to shell script to save package-info.java. Contributed by Alejandro Abdelnur and Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1435380 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/13 2:35 PM",
      "commitName": "ae270e72cff4d55822bbd2766c403db3526d9261",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,20 @@\n+  private String computeMD5() throws Exception {\n+    List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n+    // File order of MD5 calculation is significant.  Sorting is done on\n+    // unix-format names, case-folded, in order to get a platform-independent\n+    // sort and calculate the same MD5 on all platforms.\n+    Collections.sort(files, new Comparator\u003cFile\u003e() {\n+      @Override\n+      public int compare(File lhs, File rhs) {\n+        return normalizePath(lhs).compareTo(normalizePath(rhs));\n+      }\n+\n+      private String normalizePath(File file) {\n+        return file.getPath().toUpperCase().replaceAll(\"\\\\\\\\\", \"/\");\n+      }\n+    });\n+    byte[] md5 \u003d computeMD5(files);\n+    String md5str \u003d byteArrayToString(md5);\n+    getLog().info(\"Computed MD5: \" + md5str);\n+    return md5str;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String computeMD5() throws Exception {\n    List\u003cFile\u003e files \u003d FileSetUtils.convertFileSetToFiles(source);\n    // File order of MD5 calculation is significant.  Sorting is done on\n    // unix-format names, case-folded, in order to get a platform-independent\n    // sort and calculate the same MD5 on all platforms.\n    Collections.sort(files, new Comparator\u003cFile\u003e() {\n      @Override\n      public int compare(File lhs, File rhs) {\n        return normalizePath(lhs).compareTo(normalizePath(rhs));\n      }\n\n      private String normalizePath(File file) {\n        return file.getPath().toUpperCase().replaceAll(\"\\\\\\\\\", \"/\");\n      }\n    });\n    byte[] md5 \u003d computeMD5(files);\n    String md5str \u003d byteArrayToString(md5);\n    getLog().info(\"Computed MD5: \" + md5str);\n    return md5str;\n  }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/versioninfo/VersionInfoMojo.java"
    }
  }
}