{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerAllocator.java",
  "functionName": "assignContainers",
  "functionId": "assignContainers___clusterResource-Resource__candidates-CandidateNodeSet__FiCaSchedulerNode____schedulingMode-SchedulingMode__resourceLimits-ResourceLimits__reservedContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java",
  "functionStartLine": 50,
  "functionEndLine": 56,
  "numCommitsSeen": 17,
  "timeTaken": 6648,
  "changeHistory": [
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434"
  ],
  "changeHistoryShort": {
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Ymultichange(Yparameterchange,Ybodychange)",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ymultichange(Yparameterchange,Ybodychange)",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
          "commitDate": "09/11/17 1:01 PM",
          "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
          "commitAuthor": "Konstantinos Karanasos",
          "commitDateOld": "28/02/17 10:35 AM",
          "commitNameOld": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 254.1,
          "commitsBetweenForRepo": 1781,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n   public CSAssignment assignContainers(Resource clusterResource,\n-      PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n-      ResourceLimits resourceLimits, RMContainer reservedContainer) {\n+      CandidateNodeSet\u003cFiCaSchedulerNode\u003e candidates,\n+      SchedulingMode schedulingMode, ResourceLimits resourceLimits,\n+      RMContainer reservedContainer) {\n     return regularContainerAllocator.assignContainers(clusterResource,\n-        ps, schedulingMode, resourceLimits, reservedContainer);\n+        candidates, schedulingMode, resourceLimits, reservedContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public CSAssignment assignContainers(Resource clusterResource,\n      CandidateNodeSet\u003cFiCaSchedulerNode\u003e candidates,\n      SchedulingMode schedulingMode, ResourceLimits resourceLimits,\n      RMContainer reservedContainer) {\n    return regularContainerAllocator.assignContainers(clusterResource,\n        candidates, schedulingMode, resourceLimits, reservedContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, ps-PlacementSet\u003cFiCaSchedulerNode\u003e, schedulingMode-SchedulingMode, resourceLimits-ResourceLimits, reservedContainer-RMContainer]",
            "newValue": "[clusterResource-Resource, candidates-CandidateNodeSet\u003cFiCaSchedulerNode\u003e, schedulingMode-SchedulingMode, resourceLimits-ResourceLimits, reservedContainer-RMContainer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
          "commitDate": "09/11/17 1:01 PM",
          "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
          "commitAuthor": "Konstantinos Karanasos",
          "commitDateOld": "28/02/17 10:35 AM",
          "commitNameOld": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 254.1,
          "commitsBetweenForRepo": 1781,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n   public CSAssignment assignContainers(Resource clusterResource,\n-      PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n-      ResourceLimits resourceLimits, RMContainer reservedContainer) {\n+      CandidateNodeSet\u003cFiCaSchedulerNode\u003e candidates,\n+      SchedulingMode schedulingMode, ResourceLimits resourceLimits,\n+      RMContainer reservedContainer) {\n     return regularContainerAllocator.assignContainers(clusterResource,\n-        ps, schedulingMode, resourceLimits, reservedContainer);\n+        candidates, schedulingMode, resourceLimits, reservedContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public CSAssignment assignContainers(Resource clusterResource,\n      CandidateNodeSet\u003cFiCaSchedulerNode\u003e candidates,\n      SchedulingMode schedulingMode, ResourceLimits resourceLimits,\n      RMContainer reservedContainer) {\n    return regularContainerAllocator.assignContainers(clusterResource,\n        candidates, schedulingMode, resourceLimits, reservedContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6216. Unify Container Resizing code paths with Container Updates making it scheduler agnostic. (Arun Suresh via wangda)\n",
      "commitDate": "28/02/17 10:35 AM",
      "commitName": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/11/16 10:14 AM",
      "commitNameOld": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 113.01,
      "commitsBetweenForRepo": 596,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,6 @@\n   public CSAssignment assignContainers(Resource clusterResource,\n       PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n       ResourceLimits resourceLimits, RMContainer reservedContainer) {\n-    if (reservedContainer !\u003d null) {\n-      if (reservedContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n-        // It\u0027s a regular container\n-        return regularContainerAllocator.assignContainers(clusterResource,\n-            ps, schedulingMode, resourceLimits, reservedContainer);\n-      } else {\n-        // It\u0027s a increase container\n-        return increaseContainerAllocator.assignContainers(clusterResource,\n-            ps, schedulingMode, resourceLimits, reservedContainer);\n-      }\n-    } else {\n-      /*\n-       * Try to allocate increase container first, and if we failed to allocate\n-       * anything, we will try to allocate regular container\n-       */\n-      CSAssignment assign \u003d\n-          increaseContainerAllocator.assignContainers(clusterResource, ps,\n-              schedulingMode, resourceLimits, null);\n-      if (Resources.greaterThan(rc, clusterResource, assign.getResource(),\n-          Resources.none())) {\n-        return assign;\n-      }\n-\n-      return regularContainerAllocator.assignContainers(clusterResource, ps,\n-          schedulingMode, resourceLimits, null);\n-    }\n+    return regularContainerAllocator.assignContainers(clusterResource,\n+        ps, schedulingMode, resourceLimits, reservedContainer);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public CSAssignment assignContainers(Resource clusterResource,\n      PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n      ResourceLimits resourceLimits, RMContainer reservedContainer) {\n    return regularContainerAllocator.assignContainers(clusterResource,\n        ps, schedulingMode, resourceLimits, reservedContainer);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/16 10:27 AM",
          "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 94.03,
          "commitsBetweenForRepo": 702,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,30 @@\n   public CSAssignment assignContainers(Resource clusterResource,\n-      FiCaSchedulerNode node, SchedulingMode schedulingMode,\n+      PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n       ResourceLimits resourceLimits, RMContainer reservedContainer) {\n     if (reservedContainer !\u003d null) {\n       if (reservedContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n         // It\u0027s a regular container\n         return regularContainerAllocator.assignContainers(clusterResource,\n-            node, schedulingMode, resourceLimits, reservedContainer);\n+            ps, schedulingMode, resourceLimits, reservedContainer);\n       } else {\n         // It\u0027s a increase container\n         return increaseContainerAllocator.assignContainers(clusterResource,\n-            node, schedulingMode, resourceLimits, reservedContainer);\n+            ps, schedulingMode, resourceLimits, reservedContainer);\n       }\n     } else {\n       /*\n        * Try to allocate increase container first, and if we failed to allocate\n        * anything, we will try to allocate regular container\n        */\n       CSAssignment assign \u003d\n-          increaseContainerAllocator.assignContainers(clusterResource, node,\n+          increaseContainerAllocator.assignContainers(clusterResource, ps,\n               schedulingMode, resourceLimits, null);\n       if (Resources.greaterThan(rc, clusterResource, assign.getResource(),\n           Resources.none())) {\n         return assign;\n       }\n \n-      return regularContainerAllocator.assignContainers(clusterResource, node,\n+      return regularContainerAllocator.assignContainers(clusterResource, ps,\n           schedulingMode, resourceLimits, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public CSAssignment assignContainers(Resource clusterResource,\n      PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n      ResourceLimits resourceLimits, RMContainer reservedContainer) {\n    if (reservedContainer !\u003d null) {\n      if (reservedContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n        // It\u0027s a regular container\n        return regularContainerAllocator.assignContainers(clusterResource,\n            ps, schedulingMode, resourceLimits, reservedContainer);\n      } else {\n        // It\u0027s a increase container\n        return increaseContainerAllocator.assignContainers(clusterResource,\n            ps, schedulingMode, resourceLimits, reservedContainer);\n      }\n    } else {\n      /*\n       * Try to allocate increase container first, and if we failed to allocate\n       * anything, we will try to allocate regular container\n       */\n      CSAssignment assign \u003d\n          increaseContainerAllocator.assignContainers(clusterResource, ps,\n              schedulingMode, resourceLimits, null);\n      if (Resources.greaterThan(rc, clusterResource, assign.getResource(),\n          Resources.none())) {\n        return assign;\n      }\n\n      return regularContainerAllocator.assignContainers(clusterResource, ps,\n          schedulingMode, resourceLimits, null);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, node-FiCaSchedulerNode, schedulingMode-SchedulingMode, resourceLimits-ResourceLimits, reservedContainer-RMContainer]",
            "newValue": "[clusterResource-Resource, ps-PlacementSet\u003cFiCaSchedulerNode\u003e, schedulingMode-SchedulingMode, resourceLimits-ResourceLimits, reservedContainer-RMContainer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/08/16 10:27 AM",
          "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 94.03,
          "commitsBetweenForRepo": 702,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,30 @@\n   public CSAssignment assignContainers(Resource clusterResource,\n-      FiCaSchedulerNode node, SchedulingMode schedulingMode,\n+      PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n       ResourceLimits resourceLimits, RMContainer reservedContainer) {\n     if (reservedContainer !\u003d null) {\n       if (reservedContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n         // It\u0027s a regular container\n         return regularContainerAllocator.assignContainers(clusterResource,\n-            node, schedulingMode, resourceLimits, reservedContainer);\n+            ps, schedulingMode, resourceLimits, reservedContainer);\n       } else {\n         // It\u0027s a increase container\n         return increaseContainerAllocator.assignContainers(clusterResource,\n-            node, schedulingMode, resourceLimits, reservedContainer);\n+            ps, schedulingMode, resourceLimits, reservedContainer);\n       }\n     } else {\n       /*\n        * Try to allocate increase container first, and if we failed to allocate\n        * anything, we will try to allocate regular container\n        */\n       CSAssignment assign \u003d\n-          increaseContainerAllocator.assignContainers(clusterResource, node,\n+          increaseContainerAllocator.assignContainers(clusterResource, ps,\n               schedulingMode, resourceLimits, null);\n       if (Resources.greaterThan(rc, clusterResource, assign.getResource(),\n           Resources.none())) {\n         return assign;\n       }\n \n-      return regularContainerAllocator.assignContainers(clusterResource, node,\n+      return regularContainerAllocator.assignContainers(clusterResource, ps,\n           schedulingMode, resourceLimits, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public CSAssignment assignContainers(Resource clusterResource,\n      PlacementSet\u003cFiCaSchedulerNode\u003e ps, SchedulingMode schedulingMode,\n      ResourceLimits resourceLimits, RMContainer reservedContainer) {\n    if (reservedContainer !\u003d null) {\n      if (reservedContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n        // It\u0027s a regular container\n        return regularContainerAllocator.assignContainers(clusterResource,\n            ps, schedulingMode, resourceLimits, reservedContainer);\n      } else {\n        // It\u0027s a increase container\n        return increaseContainerAllocator.assignContainers(clusterResource,\n            ps, schedulingMode, resourceLimits, reservedContainer);\n      }\n    } else {\n      /*\n       * Try to allocate increase container first, and if we failed to allocate\n       * anything, we will try to allocate regular container\n       */\n      CSAssignment assign \u003d\n          increaseContainerAllocator.assignContainers(clusterResource, ps,\n              schedulingMode, resourceLimits, null);\n      if (Resources.greaterThan(rc, clusterResource, assign.getResource(),\n          Resources.none())) {\n        return assign;\n      }\n\n      return regularContainerAllocator.assignContainers(clusterResource, ps,\n          schedulingMode, resourceLimits, null);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,30 @@\n+  public CSAssignment assignContainers(Resource clusterResource,\n+      FiCaSchedulerNode node, SchedulingMode schedulingMode,\n+      ResourceLimits resourceLimits, RMContainer reservedContainer) {\n+    if (reservedContainer !\u003d null) {\n+      if (reservedContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n+        // It\u0027s a regular container\n+        return regularContainerAllocator.assignContainers(clusterResource,\n+            node, schedulingMode, resourceLimits, reservedContainer);\n+      } else {\n+        // It\u0027s a increase container\n+        return increaseContainerAllocator.assignContainers(clusterResource,\n+            node, schedulingMode, resourceLimits, reservedContainer);\n+      }\n+    } else {\n+      /*\n+       * Try to allocate increase container first, and if we failed to allocate\n+       * anything, we will try to allocate regular container\n+       */\n+      CSAssignment assign \u003d\n+          increaseContainerAllocator.assignContainers(clusterResource, node,\n+              schedulingMode, resourceLimits, null);\n+      if (Resources.greaterThan(rc, clusterResource, assign.getResource(),\n+          Resources.none())) {\n+        return assign;\n+      }\n+\n+      return regularContainerAllocator.assignContainers(clusterResource, node,\n+          schedulingMode, resourceLimits, null);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public CSAssignment assignContainers(Resource clusterResource,\n      FiCaSchedulerNode node, SchedulingMode schedulingMode,\n      ResourceLimits resourceLimits, RMContainer reservedContainer) {\n    if (reservedContainer !\u003d null) {\n      if (reservedContainer.getState() \u003d\u003d RMContainerState.RESERVED) {\n        // It\u0027s a regular container\n        return regularContainerAllocator.assignContainers(clusterResource,\n            node, schedulingMode, resourceLimits, reservedContainer);\n      } else {\n        // It\u0027s a increase container\n        return increaseContainerAllocator.assignContainers(clusterResource,\n            node, schedulingMode, resourceLimits, reservedContainer);\n      }\n    } else {\n      /*\n       * Try to allocate increase container first, and if we failed to allocate\n       * anything, we will try to allocate regular container\n       */\n      CSAssignment assign \u003d\n          increaseContainerAllocator.assignContainers(clusterResource, node,\n              schedulingMode, resourceLimits, null);\n      if (Resources.greaterThan(rc, clusterResource, assign.getResource(),\n          Resources.none())) {\n        return assign;\n      }\n\n      return regularContainerAllocator.assignContainers(clusterResource, node,\n          schedulingMode, resourceLimits, null);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java"
    }
  }
}