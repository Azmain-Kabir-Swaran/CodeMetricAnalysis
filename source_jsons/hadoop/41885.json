{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VolumeAMSProcessor.java",
  "functionName": "allocate",
  "functionId": "allocate___appAttemptId-ApplicationAttemptId__request-AllocateRequest__response-AllocateResponse",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/processor/VolumeAMSProcessor.java",
  "functionStartLine": 87,
  "functionEndLine": 108,
  "numCommitsSeen": 2,
  "timeTaken": 719,
  "changeHistory": [
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55"
  ],
  "changeHistoryShort": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8902. [CSI] Add volume manager that manages CSI volume lifecycle. Contributed by Weiwei Yang.\n",
      "commitDate": "11/11/18 10:27 PM",
      "commitName": "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,22 @@\n+  public void allocate(ApplicationAttemptId appAttemptId,\n+      AllocateRequest request, AllocateResponse response) throws YarnException {\n+    List\u003cVolume\u003e volumes \u003d aggregateVolumesFrom(request);\n+    if (volumes !\u003d null \u0026\u0026 volumes.size() \u003e 0) {\n+      ScheduledFuture\u003cVolumeProvisioningResults\u003e result \u003d\n+          this.volumeManager.schedule(new VolumeProvisioningTask(volumes), 0);\n+      try {\n+        VolumeProvisioningResults volumeResult \u003d\n+            result.get(3, TimeUnit.SECONDS);\n+        if (!volumeResult.isSuccess()) {\n+          throw new VolumeProvisioningException(\"Volume provisioning failed,\"\n+              + \" result details: \" + volumeResult.getBriefMessage());\n+        }\n+      } catch (TimeoutException | InterruptedException | ExecutionException e) {\n+        LOG.warn(\"Volume provisioning task failed\", e);\n+        throw new VolumeException(\"Volume provisioning task failed\", e);\n+      }\n+    }\n+\n+    // Go to next processor\n+    this.nextAMSProcessor.allocate(appAttemptId, request, response);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocate(ApplicationAttemptId appAttemptId,\n      AllocateRequest request, AllocateResponse response) throws YarnException {\n    List\u003cVolume\u003e volumes \u003d aggregateVolumesFrom(request);\n    if (volumes !\u003d null \u0026\u0026 volumes.size() \u003e 0) {\n      ScheduledFuture\u003cVolumeProvisioningResults\u003e result \u003d\n          this.volumeManager.schedule(new VolumeProvisioningTask(volumes), 0);\n      try {\n        VolumeProvisioningResults volumeResult \u003d\n            result.get(3, TimeUnit.SECONDS);\n        if (!volumeResult.isSuccess()) {\n          throw new VolumeProvisioningException(\"Volume provisioning failed,\"\n              + \" result details: \" + volumeResult.getBriefMessage());\n        }\n      } catch (TimeoutException | InterruptedException | ExecutionException e) {\n        LOG.warn(\"Volume provisioning task failed\", e);\n        throw new VolumeException(\"Volume provisioning task failed\", e);\n      }\n    }\n\n    // Go to next processor\n    this.nextAMSProcessor.allocate(appAttemptId, request, response);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/processor/VolumeAMSProcessor.java"
    }
  }
}