{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSQueue.java",
  "functionName": "fitsInMaxShare",
  "functionId": "fitsInMaxShare___additionalResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
  "functionStartLine": 529,
  "functionEndLine": 547,
  "numCommitsSeen": 283,
  "timeTaken": 5583,
  "changeHistory": [
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
    "b6466deac6d5d6344f693144290b46e2bef83a02",
    "1a47f890ba3cb22b6262f47c1f1af2990559bb89"
  ],
  "changeHistoryShort": {
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": "Ybodychange",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymodifierchange",
    "bd69ea408f8fdd8293836ce1089fe9b01616f2f7": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "b6466deac6d5d6344f693144290b46e2bef83a02": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "1a47f890ba3cb22b6262f47c1f1af2990559bb89": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6042. Dump scheduler and queue state information into FairScheduler DEBUG log. (Yufei Gu via rchiang)\n",
      "commitDate": "10/03/17 4:13 PM",
      "commitName": "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
      "commitAuthor": "Ray Chiang",
      "commitDateOld": "22/02/17 3:58 PM",
      "commitNameOld": "b10e962224a8ae1c6031a05322b0cc5e564bd078",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 16.01,
      "commitsBetweenForRepo": 113,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   boolean fitsInMaxShare(Resource additionalResource) {\n     Resource usagePlusAddition \u003d\n         Resources.add(getResourceUsage(), additionalResource);\n \n     if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Resource usage plus resource request: \" + usagePlusAddition\n+            + \" exceeds maximum resource allowed:\" + getMaxShare()\n+            + \" in queue \" + getName());\n+      }\n       return false;\n     }\n \n     FSQueue parentQueue \u003d getParent();\n     if (parentQueue !\u003d null) {\n       return parentQueue.fitsInMaxShare(additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean fitsInMaxShare(Resource additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Resource usage plus resource request: \" + usagePlusAddition\n            + \" exceeds maximum resource allowed:\" + getMaxShare()\n            + \" in queue \" + getName());\n      }\n      return false;\n    }\n\n    FSQueue parentQueue \u003d getParent();\n    if (parentQueue !\u003d null) {\n      return parentQueue.fitsInMaxShare(additionalResource);\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "02/09/16 2:56 PM",
      "commitNameOld": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 82.33,
      "commitsBetweenForRepo": 620,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  public boolean fitsInMaxShare(Resource additionalResource) {\n+  boolean fitsInMaxShare(Resource additionalResource) {\n     Resource usagePlusAddition \u003d\n         Resources.add(getResourceUsage(), additionalResource);\n \n     if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n       return false;\n     }\n \n     FSQueue parentQueue \u003d getParent();\n     if (parentQueue !\u003d null) {\n       return parentQueue.fitsInMaxShare(additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean fitsInMaxShare(Resource additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n      return false;\n    }\n\n    FSQueue parentQueue \u003d getParent();\n    if (parentQueue !\u003d null) {\n      return parentQueue.fitsInMaxShare(additionalResource);\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "bd69ea408f8fdd8293836ce1089fe9b01616f2f7": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3655. FairScheduler: potential livelock due to maxAMShare limitation and container reservation. (Zhihai Xu via kasha)\n",
      "commitDate": "07/06/15 11:37 AM",
      "commitName": "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3655. FairScheduler: potential livelock due to maxAMShare limitation and container reservation. (Zhihai Xu via kasha)\n",
          "commitDate": "07/06/15 11:37 AM",
          "commitName": "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "06/06/15 6:47 PM",
          "commitNameOld": "b61b48999530851da177db2e8998858ffc01f77e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  static boolean fitsInMaxShare(FSQueue queue, Resource\n-      additionalResource) {\n+  public boolean fitsInMaxShare(Resource additionalResource) {\n     Resource usagePlusAddition \u003d\n-        Resources.add(queue.getResourceUsage(), additionalResource);\n+        Resources.add(getResourceUsage(), additionalResource);\n \n-    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n+    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n       return false;\n     }\n-    \n-    FSQueue parentQueue \u003d queue.getParent();\n+\n+    FSQueue parentQueue \u003d getParent();\n     if (parentQueue !\u003d null) {\n-      return fitsInMaxShare(parentQueue, additionalResource);\n+      return parentQueue.fitsInMaxShare(additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean fitsInMaxShare(Resource additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n      return false;\n    }\n\n    FSQueue parentQueue \u003d getParent();\n    if (parentQueue !\u003d null) {\n      return parentQueue.fitsInMaxShare(additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
            "oldMethodName": "fitsInMaxShare",
            "newMethodName": "fitsInMaxShare"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3655. FairScheduler: potential livelock due to maxAMShare limitation and container reservation. (Zhihai Xu via kasha)\n",
          "commitDate": "07/06/15 11:37 AM",
          "commitName": "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "06/06/15 6:47 PM",
          "commitNameOld": "b61b48999530851da177db2e8998858ffc01f77e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  static boolean fitsInMaxShare(FSQueue queue, Resource\n-      additionalResource) {\n+  public boolean fitsInMaxShare(Resource additionalResource) {\n     Resource usagePlusAddition \u003d\n-        Resources.add(queue.getResourceUsage(), additionalResource);\n+        Resources.add(getResourceUsage(), additionalResource);\n \n-    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n+    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n       return false;\n     }\n-    \n-    FSQueue parentQueue \u003d queue.getParent();\n+\n+    FSQueue parentQueue \u003d getParent();\n     if (parentQueue !\u003d null) {\n-      return fitsInMaxShare(parentQueue, additionalResource);\n+      return parentQueue.fitsInMaxShare(additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean fitsInMaxShare(Resource additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n      return false;\n    }\n\n    FSQueue parentQueue \u003d getParent();\n    if (parentQueue !\u003d null) {\n      return parentQueue.fitsInMaxShare(additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3655. FairScheduler: potential livelock due to maxAMShare limitation and container reservation. (Zhihai Xu via kasha)\n",
          "commitDate": "07/06/15 11:37 AM",
          "commitName": "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "06/06/15 6:47 PM",
          "commitNameOld": "b61b48999530851da177db2e8998858ffc01f77e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  static boolean fitsInMaxShare(FSQueue queue, Resource\n-      additionalResource) {\n+  public boolean fitsInMaxShare(Resource additionalResource) {\n     Resource usagePlusAddition \u003d\n-        Resources.add(queue.getResourceUsage(), additionalResource);\n+        Resources.add(getResourceUsage(), additionalResource);\n \n-    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n+    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n       return false;\n     }\n-    \n-    FSQueue parentQueue \u003d queue.getParent();\n+\n+    FSQueue parentQueue \u003d getParent();\n     if (parentQueue !\u003d null) {\n-      return fitsInMaxShare(parentQueue, additionalResource);\n+      return parentQueue.fitsInMaxShare(additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean fitsInMaxShare(Resource additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n      return false;\n    }\n\n    FSQueue parentQueue \u003d getParent();\n    if (parentQueue !\u003d null) {\n      return parentQueue.fitsInMaxShare(additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3655. FairScheduler: potential livelock due to maxAMShare limitation and container reservation. (Zhihai Xu via kasha)\n",
          "commitDate": "07/06/15 11:37 AM",
          "commitName": "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "06/06/15 6:47 PM",
          "commitNameOld": "b61b48999530851da177db2e8998858ffc01f77e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-  static boolean fitsInMaxShare(FSQueue queue, Resource\n-      additionalResource) {\n+  public boolean fitsInMaxShare(Resource additionalResource) {\n     Resource usagePlusAddition \u003d\n-        Resources.add(queue.getResourceUsage(), additionalResource);\n+        Resources.add(getResourceUsage(), additionalResource);\n \n-    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n+    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n       return false;\n     }\n-    \n-    FSQueue parentQueue \u003d queue.getParent();\n+\n+    FSQueue parentQueue \u003d getParent();\n     if (parentQueue !\u003d null) {\n-      return fitsInMaxShare(parentQueue, additionalResource);\n+      return parentQueue.fitsInMaxShare(additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean fitsInMaxShare(Resource additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, getMaxShare())) {\n      return false;\n    }\n\n    FSQueue parentQueue \u003d getParent();\n    if (parentQueue !\u003d null) {\n      return parentQueue.fitsInMaxShare(additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldValue": "[queue-FSQueue, additionalResource-Resource]",
            "newValue": "[additionalResource-Resource]"
          }
        }
      ]
    },
    "b6466deac6d5d6344f693144290b46e2bef83a02": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3101. In Fair Scheduler, fix canceling of reservations for exceeding max share (Anubhav Dhoot via Sandy Ryza)\n",
      "commitDate": "05/02/15 9:39 AM",
      "commitName": "b6466deac6d5d6344f693144290b46e2bef83a02",
      "commitAuthor": "Sandy Ryza",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3101. In Fair Scheduler, fix canceling of reservations for exceeding max share (Anubhav Dhoot via Sandy Ryza)\n",
          "commitDate": "05/02/15 9:39 AM",
          "commitName": "b6466deac6d5d6344f693144290b46e2bef83a02",
          "commitAuthor": "Sandy Ryza",
          "commitDateOld": "12/01/15 5:51 PM",
          "commitNameOld": "51881535e659940b1b332d0c5952ee1f9958cc7f",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 23.66,
          "commitsBetweenForRepo": 190,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  private boolean fitInMaxShare(FSQueue queue) {\n-    if (Resources.fitsIn(queue.getResourceUsage(), queue.getMaxShare())) {\n+  static boolean fitsInMaxShare(FSQueue queue, Resource\n+      additionalResource) {\n+    Resource usagePlusAddition \u003d\n+        Resources.add(queue.getResourceUsage(), additionalResource);\n+\n+    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n       return false;\n     }\n     \n     FSQueue parentQueue \u003d queue.getParent();\n     if (parentQueue !\u003d null) {\n-      return fitInMaxShare(parentQueue);\n+      return fitsInMaxShare(parentQueue, additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean fitsInMaxShare(FSQueue queue, Resource\n      additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(queue.getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n      return false;\n    }\n    \n    FSQueue parentQueue \u003d queue.getParent();\n    if (parentQueue !\u003d null) {\n      return fitsInMaxShare(parentQueue, additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {
            "oldValue": "fitInMaxShare",
            "newValue": "fitsInMaxShare"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3101. In Fair Scheduler, fix canceling of reservations for exceeding max share (Anubhav Dhoot via Sandy Ryza)\n",
          "commitDate": "05/02/15 9:39 AM",
          "commitName": "b6466deac6d5d6344f693144290b46e2bef83a02",
          "commitAuthor": "Sandy Ryza",
          "commitDateOld": "12/01/15 5:51 PM",
          "commitNameOld": "51881535e659940b1b332d0c5952ee1f9958cc7f",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 23.66,
          "commitsBetweenForRepo": 190,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  private boolean fitInMaxShare(FSQueue queue) {\n-    if (Resources.fitsIn(queue.getResourceUsage(), queue.getMaxShare())) {\n+  static boolean fitsInMaxShare(FSQueue queue, Resource\n+      additionalResource) {\n+    Resource usagePlusAddition \u003d\n+        Resources.add(queue.getResourceUsage(), additionalResource);\n+\n+    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n       return false;\n     }\n     \n     FSQueue parentQueue \u003d queue.getParent();\n     if (parentQueue !\u003d null) {\n-      return fitInMaxShare(parentQueue);\n+      return fitsInMaxShare(parentQueue, additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean fitsInMaxShare(FSQueue queue, Resource\n      additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(queue.getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n      return false;\n    }\n    \n    FSQueue parentQueue \u003d queue.getParent();\n    if (parentQueue !\u003d null) {\n      return fitsInMaxShare(parentQueue, additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {
            "oldValue": "[queue-FSQueue]",
            "newValue": "[queue-FSQueue, additionalResource-Resource]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3101. In Fair Scheduler, fix canceling of reservations for exceeding max share (Anubhav Dhoot via Sandy Ryza)\n",
          "commitDate": "05/02/15 9:39 AM",
          "commitName": "b6466deac6d5d6344f693144290b46e2bef83a02",
          "commitAuthor": "Sandy Ryza",
          "commitDateOld": "12/01/15 5:51 PM",
          "commitNameOld": "51881535e659940b1b332d0c5952ee1f9958cc7f",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 23.66,
          "commitsBetweenForRepo": 190,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  private boolean fitInMaxShare(FSQueue queue) {\n-    if (Resources.fitsIn(queue.getResourceUsage(), queue.getMaxShare())) {\n+  static boolean fitsInMaxShare(FSQueue queue, Resource\n+      additionalResource) {\n+    Resource usagePlusAddition \u003d\n+        Resources.add(queue.getResourceUsage(), additionalResource);\n+\n+    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n       return false;\n     }\n     \n     FSQueue parentQueue \u003d queue.getParent();\n     if (parentQueue !\u003d null) {\n-      return fitInMaxShare(parentQueue);\n+      return fitsInMaxShare(parentQueue, additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean fitsInMaxShare(FSQueue queue, Resource\n      additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(queue.getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n      return false;\n    }\n    \n    FSQueue parentQueue \u003d queue.getParent();\n    if (parentQueue !\u003d null) {\n      return fitsInMaxShare(parentQueue, additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3101. In Fair Scheduler, fix canceling of reservations for exceeding max share (Anubhav Dhoot via Sandy Ryza)\n",
          "commitDate": "05/02/15 9:39 AM",
          "commitName": "b6466deac6d5d6344f693144290b46e2bef83a02",
          "commitAuthor": "Sandy Ryza",
          "commitDateOld": "12/01/15 5:51 PM",
          "commitNameOld": "51881535e659940b1b332d0c5952ee1f9958cc7f",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 23.66,
          "commitsBetweenForRepo": 190,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n-  private boolean fitInMaxShare(FSQueue queue) {\n-    if (Resources.fitsIn(queue.getResourceUsage(), queue.getMaxShare())) {\n+  static boolean fitsInMaxShare(FSQueue queue, Resource\n+      additionalResource) {\n+    Resource usagePlusAddition \u003d\n+        Resources.add(queue.getResourceUsage(), additionalResource);\n+\n+    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n       return false;\n     }\n     \n     FSQueue parentQueue \u003d queue.getParent();\n     if (parentQueue !\u003d null) {\n-      return fitInMaxShare(parentQueue);\n+      return fitsInMaxShare(parentQueue, additionalResource);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean fitsInMaxShare(FSQueue queue, Resource\n      additionalResource) {\n    Resource usagePlusAddition \u003d\n        Resources.add(queue.getResourceUsage(), additionalResource);\n\n    if (!Resources.fitsIn(usagePlusAddition, queue.getMaxShare())) {\n      return false;\n    }\n    \n    FSQueue parentQueue \u003d queue.getParent();\n    if (parentQueue !\u003d null) {\n      return fitsInMaxShare(parentQueue, additionalResource);\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "1a47f890ba3cb22b6262f47c1f1af2990559bb89": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2811. In Fair Scheduler, reservation fulfillments shouldn\u0027t ignore max share (Siqi Li via Sandy Ryza)\n",
      "commitDate": "14/11/14 3:18 PM",
      "commitName": "1a47f890ba3cb22b6262f47c1f1af2990559bb89",
      "commitAuthor": "Sandy Ryza",
      "diff": "@@ -0,0 +1,11 @@\n+  private boolean fitInMaxShare(FSQueue queue) {\n+    if (Resources.fitsIn(queue.getResourceUsage(), queue.getMaxShare())) {\n+      return false;\n+    }\n+    \n+    FSQueue parentQueue \u003d queue.getParent();\n+    if (parentQueue !\u003d null) {\n+      return fitInMaxShare(parentQueue);\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean fitInMaxShare(FSQueue queue) {\n    if (Resources.fitsIn(queue.getResourceUsage(), queue.getMaxShare())) {\n      return false;\n    }\n    \n    FSQueue parentQueue \u003d queue.getParent();\n    if (parentQueue !\u003d null) {\n      return fitInMaxShare(parentQueue);\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}