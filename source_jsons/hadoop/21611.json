{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobSubmitter.java",
  "functionName": "copyAndConfigureFiles",
  "functionId": "copyAndConfigureFiles___job-Job__jobSubmitDir-Path",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
  "functionStartLine": 92,
  "functionEndLine": 107,
  "numCommitsSeen": 41,
  "timeTaken": 6619,
  "changeHistory": [
    "8f0d3d69d65a252439610e6f13d679808d768569",
    "605b4b61364781fc99ed27035c793153a20d8f71",
    "c66c3ac6bf9f63177279feec3f2917e4b882e2bc",
    "814afa46efef201cb782072432fc744e1cb9c463",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8f0d3d69d65a252439610e6f13d679808d768569": "Ybodychange",
    "605b4b61364781fc99ed27035c793153a20d8f71": "Ybodychange",
    "c66c3ac6bf9f63177279feec3f2917e4b882e2bc": "Ybodychange",
    "814afa46efef201cb782072432fc744e1cb9c463": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f0d3d69d65a252439610e6f13d679808d768569": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6365. Refactor JobResourceUploader#uploadFilesInternal (Chris Trezzo via sjlee)\n",
      "commitDate": "19/07/16 8:15 PM",
      "commitName": "8f0d3d69d65a252439610e6f13d679808d768569",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "21/06/16 11:25 AM",
      "commitNameOld": "605b4b61364781fc99ed27035c793153a20d8f71",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 28.37,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n   throws IOException {\n     Configuration conf \u003d job.getConfiguration();\n     boolean useWildcards \u003d conf.getBoolean(Job.USE_WILDCARD_FOR_LIBJARS,\n         Job.DEFAULT_USE_WILDCARD_FOR_LIBJARS);\n     JobResourceUploader rUploader \u003d new JobResourceUploader(jtFs, useWildcards);\n \n-    rUploader.uploadFiles(job, jobSubmitDir);\n+    rUploader.uploadResources(job, jobSubmitDir);\n \n     // Get the working directory. If not set, sets it to filesystem working dir\n     // This code has been added so that working directory reset before running\n     // the job. This is necessary for backward compatibility as other systems\n     // might use the public API JobConf#setWorkingDirectory to reset the working\n     // directory.\n     job.getWorkingDirectory();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n  throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n    boolean useWildcards \u003d conf.getBoolean(Job.USE_WILDCARD_FOR_LIBJARS,\n        Job.DEFAULT_USE_WILDCARD_FOR_LIBJARS);\n    JobResourceUploader rUploader \u003d new JobResourceUploader(jtFs, useWildcards);\n\n    rUploader.uploadResources(job, jobSubmitDir);\n\n    // Get the working directory. If not set, sets it to filesystem working dir\n    // This code has been added so that working directory reset before running\n    // the job. This is necessary for backward compatibility as other systems\n    // might use the public API JobConf#setWorkingDirectory to reset the working\n    // directory.\n    job.getWorkingDirectory();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
      "extendedDetails": {}
    },
    "605b4b61364781fc99ed27035c793153a20d8f71": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6719. The list of -libjars archives should be replaced with a wildcard in the distributed cache to reduce the application footprint in the state store (Daniel Templeton via sjlee)\n",
      "commitDate": "21/06/16 11:25 AM",
      "commitName": "605b4b61364781fc99ed27035c793153a20d8f71",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/05/16 7:25 PM",
      "commitNameOld": "21d2b90213e8e188bcac31f9360c5176ac89d083",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 32.67,
      "commitsBetweenForRepo": 201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,16 @@\n   private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n   throws IOException {\n-    JobResourceUploader rUploader \u003d new JobResourceUploader(jtFs);\n+    Configuration conf \u003d job.getConfiguration();\n+    boolean useWildcards \u003d conf.getBoolean(Job.USE_WILDCARD_FOR_LIBJARS,\n+        Job.DEFAULT_USE_WILDCARD_FOR_LIBJARS);\n+    JobResourceUploader rUploader \u003d new JobResourceUploader(jtFs, useWildcards);\n+\n     rUploader.uploadFiles(job, jobSubmitDir);\n \n     // Get the working directory. If not set, sets it to filesystem working dir\n     // This code has been added so that working directory reset before running\n     // the job. This is necessary for backward compatibility as other systems\n     // might use the public API JobConf#setWorkingDirectory to reset the working\n     // directory.\n     job.getWorkingDirectory();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n  throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n    boolean useWildcards \u003d conf.getBoolean(Job.USE_WILDCARD_FOR_LIBJARS,\n        Job.DEFAULT_USE_WILDCARD_FOR_LIBJARS);\n    JobResourceUploader rUploader \u003d new JobResourceUploader(jtFs, useWildcards);\n\n    rUploader.uploadFiles(job, jobSubmitDir);\n\n    // Get the working directory. If not set, sets it to filesystem working dir\n    // This code has been added so that working directory reset before running\n    // the job. This is necessary for backward compatibility as other systems\n    // might use the public API JobConf#setWorkingDirectory to reset the working\n    // directory.\n    job.getWorkingDirectory();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
      "extendedDetails": {}
    },
    "c66c3ac6bf9f63177279feec3f2917e4b882e2bc": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6267. Refactor JobSubmitter#copyAndConfigureFiles into it\u0027s own class. (Chris Trezzo via kasha)\n",
      "commitDate": "04/03/15 2:42 PM",
      "commitName": "c66c3ac6bf9f63177279feec3f2917e4b882e2bc",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "16/02/15 9:38 AM",
      "commitNameOld": "814afa46efef201cb782072432fc744e1cb9c463",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 16.21,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,12 @@\n   private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n   throws IOException {\n-    Configuration conf \u003d job.getConfiguration();\n-    short replication \u003d (short)conf.getInt(Job.SUBMIT_REPLICATION, 10);\n-    copyAndConfigureFiles(job, jobSubmitDir, replication);\n+    JobResourceUploader rUploader \u003d new JobResourceUploader(jtFs);\n+    rUploader.uploadFiles(job, jobSubmitDir);\n \n     // Get the working directory. If not set, sets it to filesystem working dir\n     // This code has been added so that working directory reset before running\n     // the job. This is necessary for backward compatibility as other systems\n     // might use the public API JobConf#setWorkingDirectory to reset the working\n     // directory.\n     job.getWorkingDirectory();\n-\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n  throws IOException {\n    JobResourceUploader rUploader \u003d new JobResourceUploader(jtFs);\n    rUploader.uploadFiles(job, jobSubmitDir);\n\n    // Get the working directory. If not set, sets it to filesystem working dir\n    // This code has been added so that working directory reset before running\n    // the job. This is necessary for backward compatibility as other systems\n    // might use the public API JobConf#setWorkingDirectory to reset the working\n    // directory.\n    job.getWorkingDirectory();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
      "extendedDetails": {}
    },
    "814afa46efef201cb782072432fc744e1cb9c463": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6225. Fix new findbug warnings in hadoop-mapreduce-client-core. Contributed by Varun Saxena\n",
      "commitDate": "16/02/15 9:38 AM",
      "commitName": "814afa46efef201cb782072432fc744e1cb9c463",
      "commitAuthor": "Junping Du",
      "commitDateOld": "06/11/14 7:10 AM",
      "commitNameOld": "10f9f5101c44be7c675a44ded4aad212627ecdee",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 102.1,
      "commitsBetweenForRepo": 749,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n   private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n   throws IOException {\n     Configuration conf \u003d job.getConfiguration();\n     short replication \u003d (short)conf.getInt(Job.SUBMIT_REPLICATION, 10);\n     copyAndConfigureFiles(job, jobSubmitDir, replication);\n \n-    // Set the working directory\n-    if (job.getWorkingDirectory() \u003d\u003d null) {\n-      job.setWorkingDirectory(jtFs.getWorkingDirectory());\n-    }\n+    // Get the working directory. If not set, sets it to filesystem working dir\n+    // This code has been added so that working directory reset before running\n+    // the job. This is necessary for backward compatibility as other systems\n+    // might use the public API JobConf#setWorkingDirectory to reset the working\n+    // directory.\n+    job.getWorkingDirectory();\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n  throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n    short replication \u003d (short)conf.getInt(Job.SUBMIT_REPLICATION, 10);\n    copyAndConfigureFiles(job, jobSubmitDir, replication);\n\n    // Get the working directory. If not set, sets it to filesystem working dir\n    // This code has been added so that working directory reset before running\n    // the job. This is necessary for backward compatibility as other systems\n    // might use the public API JobConf#setWorkingDirectory to reset the working\n    // directory.\n    job.getWorkingDirectory();\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n  throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n    short replication \u003d (short)conf.getInt(Job.SUBMIT_REPLICATION, 10);\n    copyAndConfigureFiles(job, jobSubmitDir, replication);\n\n    // Set the working directory\n    if (job.getWorkingDirectory() \u003d\u003d null) {\n      job.setWorkingDirectory(jtFs.getWorkingDirectory());          \n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n  throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n    short replication \u003d (short)conf.getInt(Job.SUBMIT_REPLICATION, 10);\n    copyAndConfigureFiles(job, jobSubmitDir, replication);\n\n    // Set the working directory\n    if (job.getWorkingDirectory() \u003d\u003d null) {\n      job.setWorkingDirectory(jtFs.getWorkingDirectory());          \n    }\n\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,12 @@\n+  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n+  throws IOException {\n+    Configuration conf \u003d job.getConfiguration();\n+    short replication \u003d (short)conf.getInt(Job.SUBMIT_REPLICATION, 10);\n+    copyAndConfigureFiles(job, jobSubmitDir, replication);\n+\n+    // Set the working directory\n+    if (job.getWorkingDirectory() \u003d\u003d null) {\n+      job.setWorkingDirectory(jtFs.getWorkingDirectory());          \n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyAndConfigureFiles(Job job, Path jobSubmitDir) \n  throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n    short replication \u003d (short)conf.getInt(Job.SUBMIT_REPLICATION, 10);\n    copyAndConfigureFiles(job, jobSubmitDir, replication);\n\n    // Set the working directory\n    if (job.getWorkingDirectory() \u003d\u003d null) {\n      job.setWorkingDirectory(jtFs.getWorkingDirectory());          \n    }\n\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/JobSubmitter.java"
    }
  }
}