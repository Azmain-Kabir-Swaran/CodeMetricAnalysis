{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DominantResourceFairnessPolicy.java",
  "functionName": "checkIfUsageOverFairShare",
  "functionId": "checkIfUsageOverFairShare___usage-Resource__fairShare-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
  "functionStartLine": 101,
  "functionEndLine": 103,
  "numCommitsSeen": 20,
  "timeTaken": 2603,
  "changeHistory": [
    "353a9b2d9165a221491395edbadf8acc3a39990b",
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94",
    "342da5b4d3d6f8ae4c9e6c7ece642f7378a6e87c"
  ],
  "changeHistoryShort": {
    "353a9b2d9165a221491395edbadf8acc3a39990b": "Ybodychange",
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94": "Ybodychange",
    "342da5b4d3d6f8ae4c9e6c7ece642f7378a6e87c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "353a9b2d9165a221491395edbadf8acc3a39990b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6061. Addendum. Remove extraneous change.\n",
      "commitDate": "14/02/17 3:19 PM",
      "commitName": "353a9b2d9165a221491395edbadf8acc3a39990b",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "14/02/17 1:39 PM",
      "commitNameOld": "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public boolean checkIfUsageOverFairShare(Resource usage, Resource fairShare) {\n-    return Resources.greaterThan(CALCULATOR, null, usage, fairShare);\n+    return !Resources.fitsIn(usage, fairShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkIfUsageOverFairShare(Resource usage, Resource fairShare) {\n    return !Resources.fitsIn(usage, fairShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
      "extendedDetails": {}
    },
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6061. Add an UncaughtExceptionHandler for critical threads in RM. (Yufei Gu via kasha)\n",
      "commitDate": "14/02/17 1:39 PM",
      "commitName": "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/06/16 10:24 PM",
      "commitNameOld": "20f2799938c5cad59f59617cdb0f86e137c3c2c0",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 241.68,
      "commitsBetweenForRepo": 1667,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public boolean checkIfUsageOverFairShare(Resource usage, Resource fairShare) {\n-    return !Resources.fitsIn(usage, fairShare);\n+    return Resources.greaterThan(CALCULATOR, null, usage, fairShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkIfUsageOverFairShare(Resource usage, Resource fairShare) {\n    return Resources.greaterThan(CALCULATOR, null, usage, fairShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
      "extendedDetails": {}
    },
    "342da5b4d3d6f8ae4c9e6c7ece642f7378a6e87c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-596. Use scheduling policies throughout the queue hierarchy to decide which containers to preempt (Wei Yan via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598197 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/14 9:01 PM",
      "commitName": "342da5b4d3d6f8ae4c9e6c7ece642f7378a6e87c",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,3 @@\n+  public boolean checkIfUsageOverFairShare(Resource usage, Resource fairShare) {\n+    return !Resources.fitsIn(usage, fairShare);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkIfUsageOverFairShare(Resource usage, Resource fairShare) {\n    return !Resources.fitsIn(usage, fairShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java"
    }
  }
}