{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationFileController.java",
  "functionName": "checkExists",
  "functionId": "checkExists___fs-FileSystem__path-Path__fsPerm-FsPermission",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java",
  "functionStartLine": 470,
  "functionEndLine": 484,
  "numCommitsSeen": 52,
  "timeTaken": 2942,
  "changeHistory": [
    "9de8e8d0496a2628b63cc841b1fdee80e2912f7a",
    "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f",
    "78063b3a76840ffade33667a90f9c9dbe7fc99eb"
  ],
  "changeHistoryShort": {
    "9de8e8d0496a2628b63cc841b1fdee80e2912f7a": "Ybodychange",
    "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "78063b3a76840ffade33667a90f9c9dbe7fc99eb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9de8e8d0496a2628b63cc841b1fdee80e2912f7a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9030. Log aggregation changes to handle filesystems which do not support setting permissions. (Suma Shivaprasad via wangda)\n\nChange-Id: I80f1e8196b8624e24d74494719fdedfd7061dced\n",
      "commitDate": "28/11/18 1:36 PM",
      "commitName": "9de8e8d0496a2628b63cc841b1fdee80e2912f7a",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/08/18 12:37 PM",
      "commitNameOld": "c0599151bb438d3dc0c6a54af93b2670770daefd",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 113.08,
      "commitsBetweenForRepo": 1027,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   protected boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n       throws IOException {\n     boolean exists \u003d true;\n     try {\n       FileStatus appDirStatus \u003d fs.getFileStatus(path);\n-      if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n-        fs.setPermission(path, APP_DIR_PERMISSIONS);\n+      if (fsSupportsChmod) {\n+        if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n+          fs.setPermission(path, APP_DIR_PERMISSIONS);\n+        }\n       }\n     } catch (FileNotFoundException fnfe) {\n       exists \u003d false;\n     }\n     return exists;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n      throws IOException {\n    boolean exists \u003d true;\n    try {\n      FileStatus appDirStatus \u003d fs.getFileStatus(path);\n      if (fsSupportsChmod) {\n        if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n          fs.setPermission(path, APP_DIR_PERMISSIONS);\n        }\n      }\n    } catch (FileNotFoundException fnfe) {\n      exists \u003d false;\n    }\n    return exists;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java",
      "extendedDetails": {}
    },
    "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "YARN-6876. Create an abstract log writer for extendability. Contributed by Xuan Gong.\n",
      "commitDate": "24/08/17 1:36 PM",
      "commitName": "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-6876. Create an abstract log writer for extendability. Contributed by Xuan Gong.\n",
          "commitDate": "24/08/17 1:36 PM",
          "commitName": "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f",
          "commitAuthor": "Junping Du",
          "commitDateOld": "24/08/17 8:17 AM",
          "commitNameOld": "8196a07c3211385ce85ae24f763b62696edc60b9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.22,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n+  protected boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n       throws IOException {\n     boolean exists \u003d true;\n     try {\n       FileStatus appDirStatus \u003d fs.getFileStatus(path);\n       if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n         fs.setPermission(path, APP_DIR_PERMISSIONS);\n       }\n     } catch (FileNotFoundException fnfe) {\n       exists \u003d false;\n     }\n     return exists;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n      throws IOException {\n    boolean exists \u003d true;\n    try {\n      FileStatus appDirStatus \u003d fs.getFileStatus(path);\n      if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n        fs.setPermission(path, APP_DIR_PERMISSIONS);\n      }\n    } catch (FileNotFoundException fnfe) {\n      exists \u003d false;\n    }\n    return exists;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java",
            "oldMethodName": "checkExists",
            "newMethodName": "checkExists"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6876. Create an abstract log writer for extendability. Contributed by Xuan Gong.\n",
          "commitDate": "24/08/17 1:36 PM",
          "commitName": "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f",
          "commitAuthor": "Junping Du",
          "commitDateOld": "24/08/17 8:17 AM",
          "commitNameOld": "8196a07c3211385ce85ae24f763b62696edc60b9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.22,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n+  protected boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n       throws IOException {\n     boolean exists \u003d true;\n     try {\n       FileStatus appDirStatus \u003d fs.getFileStatus(path);\n       if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n         fs.setPermission(path, APP_DIR_PERMISSIONS);\n       }\n     } catch (FileNotFoundException fnfe) {\n       exists \u003d false;\n     }\n     return exists;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n      throws IOException {\n    boolean exists \u003d true;\n    try {\n      FileStatus appDirStatus \u003d fs.getFileStatus(path);\n      if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n        fs.setPermission(path, APP_DIR_PERMISSIONS);\n      }\n    } catch (FileNotFoundException fnfe) {\n      exists \u003d false;\n    }\n    return exists;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        }
      ]
    },
    "78063b3a76840ffade33667a90f9c9dbe7fc99eb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-742. Log aggregation causes a lot of redundant setPermission calls. Contributed by Jason Lowe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/06/13 1:49 PM",
      "commitName": "78063b3a76840ffade33667a90f9c9dbe7fc99eb",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,13 @@\n+  private boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n+      throws IOException {\n+    boolean exists \u003d true;\n+    try {\n+      FileStatus appDirStatus \u003d fs.getFileStatus(path);\n+      if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n+        fs.setPermission(path, APP_DIR_PERMISSIONS);\n+      }\n+    } catch (FileNotFoundException fnfe) {\n+      exists \u003d false;\n+    }\n+    return exists;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkExists(FileSystem fs, Path path, FsPermission fsPerm)\n      throws IOException {\n    boolean exists \u003d true;\n    try {\n      FileStatus appDirStatus \u003d fs.getFileStatus(path);\n      if (!APP_DIR_PERMISSIONS.equals(appDirStatus.getPermission())) {\n        fs.setPermission(path, APP_DIR_PERMISSIONS);\n      }\n    } catch (FileNotFoundException fnfe) {\n      exists \u003d false;\n    }\n    return exists;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java"
    }
  }
}