{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QJournalProtocolTranslatorPB.java",
  "functionName": "newEpoch",
  "functionId": "newEpoch___jid-String__nameServiceId-String__nsInfo-NamespaceInfo__epoch-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
  "functionStartLine": 159,
  "functionEndLine": 177,
  "numCommitsSeen": 32,
  "timeTaken": 2785,
  "changeHistory": [
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": "Ymultichange(Yparameterchange,Ybodychange)",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
      "commitDate": "13/10/17 2:22 PM",
      "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/09/15 6:53 PM",
          "commitNameOld": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 752.81,
          "commitsBetweenForRepo": 5072,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,19 @@\n-  public NewEpochResponseProto newEpoch(String jid, NamespaceInfo nsInfo,\n-      long epoch) throws IOException {\n+  public NewEpochResponseProto newEpoch(String jid,\n+                                        String nameServiceId,\n+                                        NamespaceInfo nsInfo,\n+                                        long epoch) throws IOException {\n     try {\n-      NewEpochRequestProto req \u003d NewEpochRequestProto.newBuilder()\n-        .setJid(convertJournalId(jid))\n-        .setNsInfo(PBHelper.convert(nsInfo))\n-        .setEpoch(epoch)\n-        .build();\n-      return rpcProxy.newEpoch(NULL_CONTROLLER, req);\n+      NewEpochRequestProto.Builder req \u003d NewEpochRequestProto.newBuilder()\n+          .setJid(convertJournalId(jid))\n+          .setNsInfo(PBHelper.convert(nsInfo))\n+          .setEpoch(epoch);\n+\n+      if(nameServiceId !\u003d null) {\n+        req.setNameServiceId(nameServiceId);\n+      }\n+\n+      return rpcProxy.newEpoch(NULL_CONTROLLER, req.build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public NewEpochResponseProto newEpoch(String jid,\n                                        String nameServiceId,\n                                        NamespaceInfo nsInfo,\n                                        long epoch) throws IOException {\n    try {\n      NewEpochRequestProto.Builder req \u003d NewEpochRequestProto.newBuilder()\n          .setJid(convertJournalId(jid))\n          .setNsInfo(PBHelper.convert(nsInfo))\n          .setEpoch(epoch);\n\n      if(nameServiceId !\u003d null) {\n        req.setNameServiceId(nameServiceId);\n      }\n\n      return rpcProxy.newEpoch(NULL_CONTROLLER, req.build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[jid-String, nsInfo-NamespaceInfo, epoch-long]",
            "newValue": "[jid-String, nameServiceId-String, nsInfo-NamespaceInfo, epoch-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/09/15 6:53 PM",
          "commitNameOld": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 752.81,
          "commitsBetweenForRepo": 5072,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,19 @@\n-  public NewEpochResponseProto newEpoch(String jid, NamespaceInfo nsInfo,\n-      long epoch) throws IOException {\n+  public NewEpochResponseProto newEpoch(String jid,\n+                                        String nameServiceId,\n+                                        NamespaceInfo nsInfo,\n+                                        long epoch) throws IOException {\n     try {\n-      NewEpochRequestProto req \u003d NewEpochRequestProto.newBuilder()\n-        .setJid(convertJournalId(jid))\n-        .setNsInfo(PBHelper.convert(nsInfo))\n-        .setEpoch(epoch)\n-        .build();\n-      return rpcProxy.newEpoch(NULL_CONTROLLER, req);\n+      NewEpochRequestProto.Builder req \u003d NewEpochRequestProto.newBuilder()\n+          .setJid(convertJournalId(jid))\n+          .setNsInfo(PBHelper.convert(nsInfo))\n+          .setEpoch(epoch);\n+\n+      if(nameServiceId !\u003d null) {\n+        req.setNameServiceId(nameServiceId);\n+      }\n+\n+      return rpcProxy.newEpoch(NULL_CONTROLLER, req.build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public NewEpochResponseProto newEpoch(String jid,\n                                        String nameServiceId,\n                                        NamespaceInfo nsInfo,\n                                        long epoch) throws IOException {\n    try {\n      NewEpochRequestProto.Builder req \u003d NewEpochRequestProto.newBuilder()\n          .setJid(convertJournalId(jid))\n          .setNsInfo(PBHelper.convert(nsInfo))\n          .setEpoch(epoch);\n\n      if(nameServiceId !\u003d null) {\n        req.setNameServiceId(nameServiceId);\n      }\n\n      return rpcProxy.newEpoch(NULL_CONTROLLER, req.build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  public NewEpochResponseProto newEpoch(String jid, NamespaceInfo nsInfo,\n+      long epoch) throws IOException {\n+    try {\n+      NewEpochRequestProto req \u003d NewEpochRequestProto.newBuilder()\n+        .setJid(convertJournalId(jid))\n+        .setNsInfo(PBHelper.convert(nsInfo))\n+        .setEpoch(epoch)\n+        .build();\n+      return rpcProxy.newEpoch(NULL_CONTROLLER, req);\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public NewEpochResponseProto newEpoch(String jid, NamespaceInfo nsInfo,\n      long epoch) throws IOException {\n    try {\n      NewEpochRequestProto req \u003d NewEpochRequestProto.newBuilder()\n        .setJid(convertJournalId(jid))\n        .setNsInfo(PBHelper.convert(nsInfo))\n        .setEpoch(epoch)\n        .build();\n      return rpcProxy.newEpoch(NULL_CONTROLLER, req);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java"
    }
  }
}