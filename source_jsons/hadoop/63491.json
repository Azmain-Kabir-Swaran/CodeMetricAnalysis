{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationResourceUsageReport.java",
  "functionName": "newInstance",
  "functionId": "newInstance___numUsedContainers-int__numReservedContainers-int__usedResources-Resource__reservedResources-Resource__neededResources-Resource__resourceSecondsMap-Map__String,Long____queueUsagePerc-float__clusterUsagePerc-float__preemtedResourceSecondsMap-Map__String,Long__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
  "functionStartLine": 38,
  "functionEndLine": 55,
  "numCommitsSeen": 31,
  "timeTaken": 6985,
  "changeHistory": [
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
    "3cc73773eb26f7469c99b25a76814d6fad0be28e",
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
    "61885df2fa76c589df9751653f94d9b26948dc3e"
  ],
  "changeHistoryShort": {
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": "Ymultichange(Yparameterchange,Ybodychange)",
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6": "Ymultichange(Yparameterchange,Ybodychange)",
    "3cc73773eb26f7469c99b25a76814d6fad0be28e": "Ymultichange(Yparameterchange,Ybodychange)",
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8": "Ymultichange(Yparameterchange,Ybodychange)",
    "61885df2fa76c589df9751653f94d9b26948dc3e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
          "commitAuthor": "Sunil G",
          "commitDateOld": "10/11/16 2:35 PM",
          "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthorOld": "Eric Payne",
          "daysBetweenCommits": 305.74,
          "commitsBetweenForRepo": 1780,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n-      Resource reservedResources, Resource neededResources, long memorySeconds,\n-      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc,\n-      long preemptedMemorySeconds, long preemptedVcoresSeconds) {\n+      Resource reservedResources, Resource neededResources,\n+      Map\u003cString, Long\u003e resourceSecondsMap, float queueUsagePerc,\n+      float clusterUsagePerc, Map\u003cString, Long\u003e preemtedResourceSecondsMap) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n-    report.setMemorySeconds(memorySeconds);\n-    report.setVcoreSeconds(vcoreSeconds);\n+    report.setResourceSecondsMap(resourceSecondsMap);\n     report.setQueueUsagePercentage(queueUsagePerc);\n     report.setClusterUsagePercentage(clusterUsagePerc);\n-    report.setPreemptedMemorySeconds(preemptedMemorySeconds);\n-    report.setPreemptedVcoreSeconds(preemptedVcoresSeconds);\n+    report.setPreemptedResourceSecondsMap(preemtedResourceSecondsMap);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources,\n      Map\u003cString, Long\u003e resourceSecondsMap, float queueUsagePerc,\n      float clusterUsagePerc, Map\u003cString, Long\u003e preemtedResourceSecondsMap) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setResourceSecondsMap(resourceSecondsMap);\n    report.setQueueUsagePercentage(queueUsagePerc);\n    report.setClusterUsagePercentage(clusterUsagePerc);\n    report.setPreemptedResourceSecondsMap(preemtedResourceSecondsMap);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {
            "oldValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource, memorySeconds-long, vcoreSeconds-long, queueUsagePerc-float, clusterUsagePerc-float, preemptedMemorySeconds-long, preemptedVcoresSeconds-long]",
            "newValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource, resourceSecondsMap-Map\u003cString,Long\u003e, queueUsagePerc-float, clusterUsagePerc-float, preemtedResourceSecondsMap-Map\u003cString,Long\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
          "commitAuthor": "Sunil G",
          "commitDateOld": "10/11/16 2:35 PM",
          "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthorOld": "Eric Payne",
          "daysBetweenCommits": 305.74,
          "commitsBetweenForRepo": 1780,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n-      Resource reservedResources, Resource neededResources, long memorySeconds,\n-      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc,\n-      long preemptedMemorySeconds, long preemptedVcoresSeconds) {\n+      Resource reservedResources, Resource neededResources,\n+      Map\u003cString, Long\u003e resourceSecondsMap, float queueUsagePerc,\n+      float clusterUsagePerc, Map\u003cString, Long\u003e preemtedResourceSecondsMap) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n-    report.setMemorySeconds(memorySeconds);\n-    report.setVcoreSeconds(vcoreSeconds);\n+    report.setResourceSecondsMap(resourceSecondsMap);\n     report.setQueueUsagePercentage(queueUsagePerc);\n     report.setClusterUsagePercentage(clusterUsagePerc);\n-    report.setPreemptedMemorySeconds(preemptedMemorySeconds);\n-    report.setPreemptedVcoreSeconds(preemptedVcoresSeconds);\n+    report.setPreemptedResourceSecondsMap(preemtedResourceSecondsMap);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources,\n      Map\u003cString, Long\u003e resourceSecondsMap, float queueUsagePerc,\n      float clusterUsagePerc, Map\u003cString, Long\u003e preemtedResourceSecondsMap) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setResourceSecondsMap(resourceSecondsMap);\n    report.setQueueUsagePercentage(queueUsagePerc);\n    report.setClusterUsagePercentage(clusterUsagePerc);\n    report.setPreemptedResourceSecondsMap(preemtedResourceSecondsMap);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {}
        }
      ]
    },
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4218. Metric for resource*time that was preempted. Contributed by Chang Li.\n",
      "commitDate": "10/11/16 2:35 PM",
      "commitName": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
      "commitAuthor": "Eric Payne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4218. Metric for resource*time that was preempted. Contributed by Chang Li.\n",
          "commitDate": "10/11/16 2:35 PM",
          "commitName": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthor": "Eric Payne",
          "commitDateOld": "26/10/15 1:07 PM",
          "commitNameOld": "3cc73773eb26f7469c99b25a76814d6fad0be28e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 381.1,
          "commitsBetweenForRepo": 2721,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,20 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n       Resource reservedResources, Resource neededResources, long memorySeconds,\n-      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc) {\n+      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc,\n+      long preemptedMemorySeconds, long preemptedVcoresSeconds) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n     report.setMemorySeconds(memorySeconds);\n     report.setVcoreSeconds(vcoreSeconds);\n     report.setQueueUsagePercentage(queueUsagePerc);\n     report.setClusterUsagePercentage(clusterUsagePerc);\n+    report.setPreemptedMemorySeconds(preemptedMemorySeconds);\n+    report.setPreemptedVcoreSeconds(preemptedVcoresSeconds);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources, long memorySeconds,\n      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc,\n      long preemptedMemorySeconds, long preemptedVcoresSeconds) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setMemorySeconds(memorySeconds);\n    report.setVcoreSeconds(vcoreSeconds);\n    report.setQueueUsagePercentage(queueUsagePerc);\n    report.setClusterUsagePercentage(clusterUsagePerc);\n    report.setPreemptedMemorySeconds(preemptedMemorySeconds);\n    report.setPreemptedVcoreSeconds(preemptedVcoresSeconds);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {
            "oldValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource, memorySeconds-long, vcoreSeconds-long, queueUsagePerc-float, clusterUsagePerc-float]",
            "newValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource, memorySeconds-long, vcoreSeconds-long, queueUsagePerc-float, clusterUsagePerc-float, preemptedMemorySeconds-long, preemptedVcoresSeconds-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4218. Metric for resource*time that was preempted. Contributed by Chang Li.\n",
          "commitDate": "10/11/16 2:35 PM",
          "commitName": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthor": "Eric Payne",
          "commitDateOld": "26/10/15 1:07 PM",
          "commitNameOld": "3cc73773eb26f7469c99b25a76814d6fad0be28e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 381.1,
          "commitsBetweenForRepo": 2721,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,20 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n       Resource reservedResources, Resource neededResources, long memorySeconds,\n-      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc) {\n+      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc,\n+      long preemptedMemorySeconds, long preemptedVcoresSeconds) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n     report.setMemorySeconds(memorySeconds);\n     report.setVcoreSeconds(vcoreSeconds);\n     report.setQueueUsagePercentage(queueUsagePerc);\n     report.setClusterUsagePercentage(clusterUsagePerc);\n+    report.setPreemptedMemorySeconds(preemptedMemorySeconds);\n+    report.setPreemptedVcoreSeconds(preemptedVcoresSeconds);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources, long memorySeconds,\n      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc,\n      long preemptedMemorySeconds, long preemptedVcoresSeconds) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setMemorySeconds(memorySeconds);\n    report.setVcoreSeconds(vcoreSeconds);\n    report.setQueueUsagePercentage(queueUsagePerc);\n    report.setClusterUsagePercentage(clusterUsagePerc);\n    report.setPreemptedMemorySeconds(preemptedMemorySeconds);\n    report.setPreemptedVcoreSeconds(preemptedVcoresSeconds);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {}
        }
      ]
    },
    "3cc73773eb26f7469c99b25a76814d6fad0be28e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4285. Display resource usage as percentage of queue and cluster in the RM UI (Varun Vasudev via wangda)\n",
      "commitDate": "26/10/15 1:07 PM",
      "commitName": "3cc73773eb26f7469c99b25a76814d6fad0be28e",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4285. Display resource usage as percentage of queue and cluster in the RM UI (Varun Vasudev via wangda)\n",
          "commitDate": "26/10/15 1:07 PM",
          "commitName": "3cc73773eb26f7469c99b25a76814d6fad0be28e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "10/09/14 6:20 PM",
          "commitNameOld": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 410.78,
          "commitsBetweenForRepo": 3471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n       Resource reservedResources, Resource neededResources, long memorySeconds,\n-      long vcoreSeconds) {\n+      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n     report.setMemorySeconds(memorySeconds);\n     report.setVcoreSeconds(vcoreSeconds);\n+    report.setQueueUsagePercentage(queueUsagePerc);\n+    report.setClusterUsagePercentage(clusterUsagePerc);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources, long memorySeconds,\n      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setMemorySeconds(memorySeconds);\n    report.setVcoreSeconds(vcoreSeconds);\n    report.setQueueUsagePercentage(queueUsagePerc);\n    report.setClusterUsagePercentage(clusterUsagePerc);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {
            "oldValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource, memorySeconds-long, vcoreSeconds-long]",
            "newValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource, memorySeconds-long, vcoreSeconds-long, queueUsagePerc-float, clusterUsagePerc-float]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4285. Display resource usage as percentage of queue and cluster in the RM UI (Varun Vasudev via wangda)\n",
          "commitDate": "26/10/15 1:07 PM",
          "commitName": "3cc73773eb26f7469c99b25a76814d6fad0be28e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "10/09/14 6:20 PM",
          "commitNameOld": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 410.78,
          "commitsBetweenForRepo": 3471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n       Resource reservedResources, Resource neededResources, long memorySeconds,\n-      long vcoreSeconds) {\n+      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n     report.setMemorySeconds(memorySeconds);\n     report.setVcoreSeconds(vcoreSeconds);\n+    report.setQueueUsagePercentage(queueUsagePerc);\n+    report.setClusterUsagePercentage(clusterUsagePerc);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources, long memorySeconds,\n      long vcoreSeconds, float queueUsagePerc, float clusterUsagePerc) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setMemorySeconds(memorySeconds);\n    report.setVcoreSeconds(vcoreSeconds);\n    report.setQueueUsagePercentage(queueUsagePerc);\n    report.setClusterUsagePercentage(clusterUsagePerc);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {}
        }
      ]
    },
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-415. Capture aggregate memory allocation at the app-level for chargeback. Contributed by Eric Payne \u0026 Andrey Klochkov\n",
      "commitDate": "10/09/14 6:20 PM",
      "commitName": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-415. Capture aggregate memory allocation at the app-level for chargeback. Contributed by Eric Payne \u0026 Andrey Klochkov\n",
          "commitDate": "10/09/14 6:20 PM",
          "commitName": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthor": "Jian He",
          "commitDateOld": "10/06/14 12:03 PM",
          "commitNameOld": "5de6f72054d4911fcaf12132dccb05662f36a82d",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 92.26,
          "commitsBetweenForRepo": 732,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n-      Resource reservedResources, Resource neededResources) {\n+      Resource reservedResources, Resource neededResources, long memorySeconds,\n+      long vcoreSeconds) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n+    report.setMemorySeconds(memorySeconds);\n+    report.setVcoreSeconds(vcoreSeconds);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources, long memorySeconds,\n      long vcoreSeconds) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setMemorySeconds(memorySeconds);\n    report.setVcoreSeconds(vcoreSeconds);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {
            "oldValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource]",
            "newValue": "[numUsedContainers-int, numReservedContainers-int, usedResources-Resource, reservedResources-Resource, neededResources-Resource, memorySeconds-long, vcoreSeconds-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-415. Capture aggregate memory allocation at the app-level for chargeback. Contributed by Eric Payne \u0026 Andrey Klochkov\n",
          "commitDate": "10/09/14 6:20 PM",
          "commitName": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthor": "Jian He",
          "commitDateOld": "10/06/14 12:03 PM",
          "commitNameOld": "5de6f72054d4911fcaf12132dccb05662f36a82d",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 92.26,
          "commitsBetweenForRepo": 732,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n   public static ApplicationResourceUsageReport newInstance(\n       int numUsedContainers, int numReservedContainers, Resource usedResources,\n-      Resource reservedResources, Resource neededResources) {\n+      Resource reservedResources, Resource neededResources, long memorySeconds,\n+      long vcoreSeconds) {\n     ApplicationResourceUsageReport report \u003d\n         Records.newRecord(ApplicationResourceUsageReport.class);\n     report.setNumUsedContainers(numUsedContainers);\n     report.setNumReservedContainers(numReservedContainers);\n     report.setUsedResources(usedResources);\n     report.setReservedResources(reservedResources);\n     report.setNeededResources(neededResources);\n+    report.setMemorySeconds(memorySeconds);\n+    report.setVcoreSeconds(vcoreSeconds);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources, long memorySeconds,\n      long vcoreSeconds) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    report.setMemorySeconds(memorySeconds);\n    report.setVcoreSeconds(vcoreSeconds);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java",
          "extendedDetails": {}
        }
      ]
    },
    "61885df2fa76c589df9751653f94d9b26948dc3e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-711. Copied BuilderUtil methods in individual API records as BuilderUtils is going to be dismantled. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 3:47 PM",
      "commitName": "61885df2fa76c589df9751653f94d9b26948dc3e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  public static ApplicationResourceUsageReport newInstance(\n+      int numUsedContainers, int numReservedContainers, Resource usedResources,\n+      Resource reservedResources, Resource neededResources) {\n+    ApplicationResourceUsageReport report \u003d\n+        Records.newRecord(ApplicationResourceUsageReport.class);\n+    report.setNumUsedContainers(numUsedContainers);\n+    report.setNumReservedContainers(numReservedContainers);\n+    report.setUsedResources(usedResources);\n+    report.setReservedResources(reservedResources);\n+    report.setNeededResources(neededResources);\n+    return report;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationResourceUsageReport newInstance(\n      int numUsedContainers, int numReservedContainers, Resource usedResources,\n      Resource reservedResources, Resource neededResources) {\n    ApplicationResourceUsageReport report \u003d\n        Records.newRecord(ApplicationResourceUsageReport.class);\n    report.setNumUsedContainers(numUsedContainers);\n    report.setNumReservedContainers(numReservedContainers);\n    report.setUsedResources(usedResources);\n    report.setReservedResources(reservedResources);\n    report.setNeededResources(neededResources);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationResourceUsageReport.java"
    }
  }
}