{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KDiag.java",
  "functionName": "validateShortName",
  "functionId": "validateShortName",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
  "functionStartLine": 457,
  "functionEndLine": 474,
  "numCommitsSeen": 11,
  "timeTaken": 981,
  "changeHistory": [
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5"
  ],
  "changeHistoryShort": {
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15996.  Improved Kerberos username mapping strategy in Hadoop.\n               Contributed by Bolke de Bruin\n",
      "commitDate": "04/01/19 2:54 PM",
      "commitName": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,18 @@\n+  protected void validateShortName() {\n+    failif(principal \u003d\u003d null, CAT_KERBEROS, \"No principal defined\");\n+\n+    try {\n+      KerberosName kn \u003d new KerberosName(principal);\n+      String result \u003d kn.getShortName();\n+      if (nonSimplePattern.matcher(result).find()) {\n+        warn(CAT_KERBEROS, principal + \" short name: \" + result +\n+                \" still contains @ or /\");\n+      }\n+    } catch (IOException e) {\n+      throw new KerberosDiagsFailure(CAT_KERBEROS, e,\n+              \"Failed to get short name for \" + principal, e);\n+    } catch (IllegalArgumentException e) {\n+      error(CAT_KERBEROS, \"KerberosName(\" + principal + \") failed: %s\\n%s\",\n+              e, StringUtils.stringifyException(e));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void validateShortName() {\n    failif(principal \u003d\u003d null, CAT_KERBEROS, \"No principal defined\");\n\n    try {\n      KerberosName kn \u003d new KerberosName(principal);\n      String result \u003d kn.getShortName();\n      if (nonSimplePattern.matcher(result).find()) {\n        warn(CAT_KERBEROS, principal + \" short name: \" + result +\n                \" still contains @ or /\");\n      }\n    } catch (IOException e) {\n      throw new KerberosDiagsFailure(CAT_KERBEROS, e,\n              \"Failed to get short name for \" + principal, e);\n    } catch (IllegalArgumentException e) {\n      error(CAT_KERBEROS, \"KerberosName(\" + principal + \") failed: %s\\n%s\",\n              e, StringUtils.stringifyException(e));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java"
    }
  }
}