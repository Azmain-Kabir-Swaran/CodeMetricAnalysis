{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupInformation.java",
  "functionName": "commit",
  "functionId": "commit",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
  "functionStartLine": 191,
  "functionEndLine": 236,
  "numCommitsSeen": 147,
  "timeTaken": 4762,
  "changeHistory": [
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
    "59cf7588779145ad5850ad63426743dfe03d8347",
    "a469833639c7a5ef525a108a1ac70213881e627d",
    "86ce5f6c917131e79174f8c7ac55d6cb1abad09d",
    "a00640a3db62c36384533d7d369cdd939410cc05",
    "d8930feeae116fc53cb0676dad8521992762528c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "42a38a4b587c3f7ffd8f098120c958a100e070b6",
    "0c5734e4aca873f405fbf994e5fe7061e31731c8"
  ],
  "changeHistoryShort": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": "Ybodychange",
    "59cf7588779145ad5850ad63426743dfe03d8347": "Ybodychange",
    "a469833639c7a5ef525a108a1ac70213881e627d": "Ybodychange",
    "86ce5f6c917131e79174f8c7ac55d6cb1abad09d": "Ybodychange",
    "a00640a3db62c36384533d7d369cdd939410cc05": "Ybodychange",
    "d8930feeae116fc53cb0676dad8521992762528c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "42a38a4b587c3f7ffd8f098120c958a100e070b6": "Ybodychange",
    "0c5734e4aca873f405fbf994e5fe7061e31731c8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16691. Unify Logging in UserGroupInformation.\n\nUnify Logging in UserGroupInformation.",
      "commitDate": "14/11/19 10:28 AM",
      "commitName": "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
      "commitAuthor": "belugabehr",
      "commitDateOld": "28/02/19 10:34 AM",
      "commitNameOld": "0d61facd3777c26178a9974e646b6ff351fedcb5",
      "commitAuthorOld": "Ajay Kumar",
      "daysBetweenCommits": 259.0,
      "commitsBetweenForRepo": 1874,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,46 @@\n     public boolean commit() throws LoginException {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"hadoop login commit\");\n-      }\n+      LOG.debug(\"hadoop login commit\");\n       // if we already have a user, we are done.\n       if (!subject.getPrincipals(User.class).isEmpty()) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n-        }\n+        LOG.debug(\"Using existing subject: {}\", subject.getPrincipals());\n         return true;\n       }\n       Principal user \u003d getCanonicalUser(KerberosPrincipal.class);\n       if (user !\u003d null) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"using kerberos user:\"+user);\n-        }\n+        LOG.debug(\"Using kerberos user: {}\", user);\n       }\n       //If we don\u0027t have a kerberos user and security is disabled, check\n       //if user is specified in the environment or properties\n       if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n         String envUser \u003d System.getenv(HADOOP_USER_NAME);\n         if (envUser \u003d\u003d null) {\n           envUser \u003d System.getProperty(HADOOP_USER_NAME);\n         }\n         user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n       }\n       // use the OS user\n       if (user \u003d\u003d null) {\n         user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"using local user:\"+user);\n-        }\n+        LOG.debug(\"Using local user: {}\", user);\n       }\n       // if we found the user, add our principal\n       if (user !\u003d null) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Using user: \\\"\" + user + \"\\\" with name \" + user.getName());\n-        }\n+        LOG.debug(\"Using user: \\\"{}\\\" with name: {}\", user, user.getName());\n \n         User userEntry \u003d null;\n         try {\n           // LoginContext will be attached later unless it\u0027s an external\n           // subject.\n           AuthenticationMethod authMethod \u003d (user instanceof KerberosPrincipal)\n             ? AuthenticationMethod.KERBEROS : AuthenticationMethod.SIMPLE;\n           userEntry \u003d new User(user.getName(), authMethod, null);\n         } catch (Exception e) {\n           throw (LoginException)(new LoginException(e.toString()).initCause(e));\n         }\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"User entry: \\\"\" + userEntry.toString() + \"\\\"\" );\n-        }\n+        LOG.debug(\"User entry: \\\"{}\\\"\", userEntry);\n \n         subject.getPrincipals().add(userEntry);\n         return true;\n       }\n-      LOG.error(\"Can\u0027t find user in \" + subject);\n-      throw new LoginException(\"Can\u0027t find user name\");\n+      throw new LoginException(\"Failed to find user in name \" + subject);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      LOG.debug(\"hadoop login commit\");\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        LOG.debug(\"Using existing subject: {}\", subject.getPrincipals());\n        return true;\n      }\n      Principal user \u003d getCanonicalUser(KerberosPrincipal.class);\n      if (user !\u003d null) {\n        LOG.debug(\"Using kerberos user: {}\", user);\n      }\n      //If we don\u0027t have a kerberos user and security is disabled, check\n      //if user is specified in the environment or properties\n      if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n        String envUser \u003d System.getenv(HADOOP_USER_NAME);\n        if (envUser \u003d\u003d null) {\n          envUser \u003d System.getProperty(HADOOP_USER_NAME);\n        }\n        user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n      }\n      // use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n        LOG.debug(\"Using local user: {}\", user);\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        LOG.debug(\"Using user: \\\"{}\\\" with name: {}\", user, user.getName());\n\n        User userEntry \u003d null;\n        try {\n          // LoginContext will be attached later unless it\u0027s an external\n          // subject.\n          AuthenticationMethod authMethod \u003d (user instanceof KerberosPrincipal)\n            ? AuthenticationMethod.KERBEROS : AuthenticationMethod.SIMPLE;\n          userEntry \u003d new User(user.getName(), authMethod, null);\n        } catch (Exception e) {\n          throw (LoginException)(new LoginException(e.toString()).initCause(e));\n        }\n        LOG.debug(\"User entry: \\\"{}\\\"\", userEntry);\n\n        subject.getPrincipals().add(userEntry);\n        return true;\n      }\n      throw new LoginException(\"Failed to find user in name \" + subject);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "59cf7588779145ad5850ad63426743dfe03d8347": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
      "commitDate": "23/02/18 11:10 AM",
      "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "27/12/17 11:17 PM",
      "commitNameOld": "d31c9d8c495794a803fb20729b5ed6b374e23eb4",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 57.5,
      "commitsBetweenForRepo": 327,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,59 @@\n     public boolean commit() throws LoginException {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"hadoop login commit\");\n       }\n       // if we already have a user, we are done.\n       if (!subject.getPrincipals(User.class).isEmpty()) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n         }\n         return true;\n       }\n-      Principal user \u003d null;\n-      // if we are using kerberos, try it out\n-      if (isAuthenticationMethodEnabled(AuthenticationMethod.KERBEROS)) {\n-        user \u003d getCanonicalUser(KerberosPrincipal.class);\n+      Principal user \u003d getCanonicalUser(KerberosPrincipal.class);\n+      if (user !\u003d null) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using kerberos user:\"+user);\n         }\n       }\n       //If we don\u0027t have a kerberos user and security is disabled, check\n       //if user is specified in the environment or properties\n       if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n         String envUser \u003d System.getenv(HADOOP_USER_NAME);\n         if (envUser \u003d\u003d null) {\n           envUser \u003d System.getProperty(HADOOP_USER_NAME);\n         }\n         user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n       }\n       // use the OS user\n       if (user \u003d\u003d null) {\n         user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using local user:\"+user);\n         }\n       }\n       // if we found the user, add our principal\n       if (user !\u003d null) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Using user: \\\"\" + user + \"\\\" with name \" + user.getName());\n         }\n \n         User userEntry \u003d null;\n         try {\n-          userEntry \u003d new User(user.getName());\n+          // LoginContext will be attached later unless it\u0027s an external\n+          // subject.\n+          AuthenticationMethod authMethod \u003d (user instanceof KerberosPrincipal)\n+            ? AuthenticationMethod.KERBEROS : AuthenticationMethod.SIMPLE;\n+          userEntry \u003d new User(user.getName(), authMethod, null);\n         } catch (Exception e) {\n           throw (LoginException)(new LoginException(e.toString()).initCause(e));\n         }\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"User entry: \\\"\" + userEntry.toString() + \"\\\"\" );\n         }\n \n         subject.getPrincipals().add(userEntry);\n         return true;\n       }\n       LOG.error(\"Can\u0027t find user in \" + subject);\n       throw new LoginException(\"Can\u0027t find user name\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"hadoop login commit\");\n      }\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n        }\n        return true;\n      }\n      Principal user \u003d getCanonicalUser(KerberosPrincipal.class);\n      if (user !\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using kerberos user:\"+user);\n        }\n      }\n      //If we don\u0027t have a kerberos user and security is disabled, check\n      //if user is specified in the environment or properties\n      if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n        String envUser \u003d System.getenv(HADOOP_USER_NAME);\n        if (envUser \u003d\u003d null) {\n          envUser \u003d System.getProperty(HADOOP_USER_NAME);\n        }\n        user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n      }\n      // use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using local user:\"+user);\n        }\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Using user: \\\"\" + user + \"\\\" with name \" + user.getName());\n        }\n\n        User userEntry \u003d null;\n        try {\n          // LoginContext will be attached later unless it\u0027s an external\n          // subject.\n          AuthenticationMethod authMethod \u003d (user instanceof KerberosPrincipal)\n            ? AuthenticationMethod.KERBEROS : AuthenticationMethod.SIMPLE;\n          userEntry \u003d new User(user.getName(), authMethod, null);\n        } catch (Exception e) {\n          throw (LoginException)(new LoginException(e.toString()).initCause(e));\n        }\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"User entry: \\\"\" + userEntry.toString() + \"\\\"\" );\n        }\n\n        subject.getPrincipals().add(userEntry);\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "a469833639c7a5ef525a108a1ac70213881e627d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11117 UGI HadoopLoginModule doesn\u0027t catch \u0026 wrap all kerberos-related exceptions (stevel)\n",
      "commitDate": "30/09/14 5:30 PM",
      "commitName": "a469833639c7a5ef525a108a1ac70213881e627d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "16/06/14 1:30 PM",
      "commitNameOld": "05b8e8f7c17a7d011a6a918179ee2f112a436759",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 106.17,
      "commitsBetweenForRepo": 968,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,57 @@\n     public boolean commit() throws LoginException {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"hadoop login commit\");\n       }\n       // if we already have a user, we are done.\n       if (!subject.getPrincipals(User.class).isEmpty()) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n         }\n         return true;\n       }\n       Principal user \u003d null;\n       // if we are using kerberos, try it out\n       if (isAuthenticationMethodEnabled(AuthenticationMethod.KERBEROS)) {\n         user \u003d getCanonicalUser(KerberosPrincipal.class);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using kerberos user:\"+user);\n         }\n       }\n       //If we don\u0027t have a kerberos user and security is disabled, check\n       //if user is specified in the environment or properties\n       if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n         String envUser \u003d System.getenv(HADOOP_USER_NAME);\n         if (envUser \u003d\u003d null) {\n           envUser \u003d System.getProperty(HADOOP_USER_NAME);\n         }\n         user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n       }\n       // use the OS user\n       if (user \u003d\u003d null) {\n         user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using local user:\"+user);\n         }\n       }\n       // if we found the user, add our principal\n       if (user !\u003d null) {\n-        subject.getPrincipals().add(new User(user.getName()));\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Using user: \\\"\" + user + \"\\\" with name \" + user.getName());\n+        }\n+\n+        User userEntry \u003d null;\n+        try {\n+          userEntry \u003d new User(user.getName());\n+        } catch (Exception e) {\n+          throw (LoginException)(new LoginException(e.toString()).initCause(e));\n+        }\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"User entry: \\\"\" + userEntry.toString() + \"\\\"\" );\n+        }\n+\n+        subject.getPrincipals().add(userEntry);\n         return true;\n       }\n       LOG.error(\"Can\u0027t find user in \" + subject);\n       throw new LoginException(\"Can\u0027t find user name\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"hadoop login commit\");\n      }\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n        }\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (isAuthenticationMethodEnabled(AuthenticationMethod.KERBEROS)) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using kerberos user:\"+user);\n        }\n      }\n      //If we don\u0027t have a kerberos user and security is disabled, check\n      //if user is specified in the environment or properties\n      if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n        String envUser \u003d System.getenv(HADOOP_USER_NAME);\n        if (envUser \u003d\u003d null) {\n          envUser \u003d System.getProperty(HADOOP_USER_NAME);\n        }\n        user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n      }\n      // use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using local user:\"+user);\n        }\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Using user: \\\"\" + user + \"\\\" with name \" + user.getName());\n        }\n\n        User userEntry \u003d null;\n        try {\n          userEntry \u003d new User(user.getName());\n        } catch (Exception e) {\n          throw (LoginException)(new LoginException(e.toString()).initCause(e));\n        }\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"User entry: \\\"\" + userEntry.toString() + \"\\\"\" );\n        }\n\n        subject.getPrincipals().add(userEntry);\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "86ce5f6c917131e79174f8c7ac55d6cb1abad09d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9035. Generalize setup of LoginContext (daryn via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1410018 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/11/12 1:14 PM",
      "commitName": "86ce5f6c917131e79174f8c7ac55d6cb1abad09d",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "12/11/12 2:13 PM",
      "commitNameOld": "4755ef989ac771ad3c2c40f9914455725c931447",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 2.96,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n     public boolean commit() throws LoginException {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"hadoop login commit\");\n       }\n       // if we already have a user, we are done.\n       if (!subject.getPrincipals(User.class).isEmpty()) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n         }\n         return true;\n       }\n       Principal user \u003d null;\n       // if we are using kerberos, try it out\n-      if (useKerberos) {\n+      if (isAuthenticationMethodEnabled(AuthenticationMethod.KERBEROS)) {\n         user \u003d getCanonicalUser(KerberosPrincipal.class);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using kerberos user:\"+user);\n         }\n       }\n       //If we don\u0027t have a kerberos user and security is disabled, check\n       //if user is specified in the environment or properties\n       if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n         String envUser \u003d System.getenv(HADOOP_USER_NAME);\n         if (envUser \u003d\u003d null) {\n           envUser \u003d System.getProperty(HADOOP_USER_NAME);\n         }\n         user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n       }\n       // use the OS user\n       if (user \u003d\u003d null) {\n         user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using local user:\"+user);\n         }\n       }\n       // if we found the user, add our principal\n       if (user !\u003d null) {\n         subject.getPrincipals().add(new User(user.getName()));\n         return true;\n       }\n       LOG.error(\"Can\u0027t find user in \" + subject);\n       throw new LoginException(\"Can\u0027t find user name\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"hadoop login commit\");\n      }\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n        }\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (isAuthenticationMethodEnabled(AuthenticationMethod.KERBEROS)) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using kerberos user:\"+user);\n        }\n      }\n      //If we don\u0027t have a kerberos user and security is disabled, check\n      //if user is specified in the environment or properties\n      if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n        String envUser \u003d System.getenv(HADOOP_USER_NAME);\n        if (envUser \u003d\u003d null) {\n          envUser \u003d System.getProperty(HADOOP_USER_NAME);\n        }\n        user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n      }\n      // use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using local user:\"+user);\n        }\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "a00640a3db62c36384533d7d369cdd939410cc05": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7987. Support setting the run-as user in unsecure mode.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1235945 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 1:02 PM",
      "commitName": "a00640a3db62c36384533d7d369cdd939410cc05",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "19/01/12 7:33 PM",
      "commitNameOld": "b7eb5334f5ca1fbc033084ffe9690a45e596b7bb",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 5.73,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,43 @@\n     public boolean commit() throws LoginException {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"hadoop login commit\");\n       }\n       // if we already have a user, we are done.\n       if (!subject.getPrincipals(User.class).isEmpty()) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n         }\n         return true;\n       }\n       Principal user \u003d null;\n       // if we are using kerberos, try it out\n       if (useKerberos) {\n         user \u003d getCanonicalUser(KerberosPrincipal.class);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using kerberos user:\"+user);\n         }\n       }\n-      // if we don\u0027t have a kerberos user, use the OS user\n+      //If we don\u0027t have a kerberos user and security is disabled, check\n+      //if user is specified in the environment or properties\n+      if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n+        String envUser \u003d System.getenv(HADOOP_USER_NAME);\n+        if (envUser \u003d\u003d null) {\n+          envUser \u003d System.getProperty(HADOOP_USER_NAME);\n+        }\n+        user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n+      }\n+      // use the OS user\n       if (user \u003d\u003d null) {\n         user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"using local user:\"+user);\n         }\n       }\n       // if we found the user, add our principal\n       if (user !\u003d null) {\n         subject.getPrincipals().add(new User(user.getName()));\n         return true;\n       }\n       LOG.error(\"Can\u0027t find user in \" + subject);\n       throw new LoginException(\"Can\u0027t find user name\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"hadoop login commit\");\n      }\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n        }\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (useKerberos) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using kerberos user:\"+user);\n        }\n      }\n      //If we don\u0027t have a kerberos user and security is disabled, check\n      //if user is specified in the environment or properties\n      if (!isSecurityEnabled() \u0026\u0026 (user \u003d\u003d null)) {\n        String envUser \u003d System.getenv(HADOOP_USER_NAME);\n        if (envUser \u003d\u003d null) {\n          envUser \u003d System.getProperty(HADOOP_USER_NAME);\n        }\n        user \u003d envUser \u003d\u003d null ? null : new User(envUser);\n      }\n      // use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using local user:\"+user);\n        }\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "d8930feeae116fc53cb0676dad8521992762528c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7853. multiple javax security configurations cause conflicts. (daryn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208751 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 12:26 PM",
      "commitName": "d8930feeae116fc53cb0676dad8521992762528c",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "13/10/11 6:24 PM",
      "commitNameOld": "002dd6968b89ded6a77858ccb50c9b2df074c226",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 47.79,
      "commitsBetweenForRepo": 331,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,34 @@\n     public boolean commit() throws LoginException {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"hadoop login commit\");\n+      }\n       // if we already have a user, we are done.\n       if (!subject.getPrincipals(User.class).isEmpty()) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n+        }\n         return true;\n       }\n       Principal user \u003d null;\n       // if we are using kerberos, try it out\n       if (useKerberos) {\n         user \u003d getCanonicalUser(KerberosPrincipal.class);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"using kerberos user:\"+user);\n+        }\n       }\n       // if we don\u0027t have a kerberos user, use the OS user\n       if (user \u003d\u003d null) {\n         user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"using local user:\"+user);\n+        }\n       }\n       // if we found the user, add our principal\n       if (user !\u003d null) {\n         subject.getPrincipals().add(new User(user.getName()));\n         return true;\n       }\n       LOG.error(\"Can\u0027t find user in \" + subject);\n       throw new LoginException(\"Can\u0027t find user name\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"hadoop login commit\");\n      }\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using existing subject:\"+subject.getPrincipals());\n        }\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (useKerberos) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using kerberos user:\"+user);\n        }\n      }\n      // if we don\u0027t have a kerberos user, use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"using local user:\"+user);\n        }\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean commit() throws LoginException {\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (useKerberos) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n      }\n      // if we don\u0027t have a kerberos user, use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean commit() throws LoginException {\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (useKerberos) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n      }\n      // if we don\u0027t have a kerberos user, use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean commit() throws LoginException {\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (useKerberos) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n      }\n      // if we don\u0027t have a kerberos user, use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "42a38a4b587c3f7ffd8f098120c958a100e070b6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6687.  user object in the subject in UGI should be reused in case of a relogin.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@952454 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/06/10 2:50 PM",
      "commitName": "42a38a4b587c3f7ffd8f098120c958a100e070b6",
      "commitAuthor": "Boris Shkolnik",
      "commitDateOld": "04/06/10 5:10 PM",
      "commitNameOld": "56b15e9e8f674205b08312c13cc61304f44f8a42",
      "commitAuthorOld": "Boris Shkolnik",
      "daysBetweenCommits": 2.9,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n     public boolean commit() throws LoginException {\n+      // if we already have a user, we are done.\n+      if (!subject.getPrincipals(User.class).isEmpty()) {\n+        return true;\n+      }\n       Principal user \u003d null;\n       // if we are using kerberos, try it out\n       if (useKerberos) {\n         user \u003d getCanonicalUser(KerberosPrincipal.class);\n       }\n       // if we don\u0027t have a kerberos user, use the OS user\n       if (user \u003d\u003d null) {\n         user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n       }\n       // if we found the user, add our principal\n       if (user !\u003d null) {\n         subject.getPrincipals().add(new User(user.getName()));\n         return true;\n       }\n       LOG.error(\"Can\u0027t find user in \" + subject);\n       throw new LoginException(\"Can\u0027t find user name\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      // if we already have a user, we are done.\n      if (!subject.getPrincipals(User.class).isEmpty()) {\n        return true;\n      }\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (useKerberos) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n      }\n      // if we don\u0027t have a kerberos user, use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "src/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "0c5734e4aca873f405fbf994e5fe7061e31731c8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6299. Reimplement the UserGroupInformation to use the OS\nspecific and Kerberos JAAS login. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@903560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/10 12:08 AM",
      "commitName": "0c5734e4aca873f405fbf994e5fe7061e31731c8",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,18 @@\n+    public boolean commit() throws LoginException {\n+      Principal user \u003d null;\n+      // if we are using kerberos, try it out\n+      if (useKerberos) {\n+        user \u003d getCanonicalUser(KerberosPrincipal.class);\n+      }\n+      // if we don\u0027t have a kerberos user, use the OS user\n+      if (user \u003d\u003d null) {\n+        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n+      }\n+      // if we found the user, add our principal\n+      if (user !\u003d null) {\n+        subject.getPrincipals().add(new User(user.getName()));\n+        return true;\n+      }\n+      LOG.error(\"Can\u0027t find user in \" + subject);\n+      throw new LoginException(\"Can\u0027t find user name\");\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean commit() throws LoginException {\n      Principal user \u003d null;\n      // if we are using kerberos, try it out\n      if (useKerberos) {\n        user \u003d getCanonicalUser(KerberosPrincipal.class);\n      }\n      // if we don\u0027t have a kerberos user, use the OS user\n      if (user \u003d\u003d null) {\n        user \u003d getCanonicalUser(OS_PRINCIPAL_CLASS);\n      }\n      // if we found the user, add our principal\n      if (user !\u003d null) {\n        subject.getPrincipals().add(new User(user.getName()));\n        return true;\n      }\n      LOG.error(\"Can\u0027t find user in \" + subject);\n      throw new LoginException(\"Can\u0027t find user name\");\n    }",
      "path": "src/java/org/apache/hadoop/security/UserGroupInformation.java"
    }
  }
}