{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "shouldAttemptPreemption",
  "functionId": "shouldAttemptPreemption",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1195,
  "functionEndLine": 1204,
  "numCommitsSeen": 226,
  "timeTaken": 4781,
  "changeHistory": [
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
    "4bc91b44c990c9eb060293853573a363b25ccea3",
    "a00b2d4f37518cb5e579ab7e49d0c8b33ded9cf4"
  ],
  "changeHistoryShort": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ybodychange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": "Ybodychange",
    "4bc91b44c990c9eb060293853573a363b25ccea3": "Ybodychange",
    "a00b2d4f37518cb5e579ab7e49d0c8b33ded9cf4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "22/11/16 11:16 AM",
      "commitNameOld": "83cc7263af632939dc3b2ee58d8f03f98ed4d96a",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 1.44,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private boolean shouldAttemptPreemption() {\n-    if (preemptionEnabled) {\n-      Resource clusterResource \u003d getClusterResource();\n-      return (preemptionUtilizationThreshold \u003c Math.max(\n-          (float) rootMetrics.getAllocatedMB() / clusterResource.getMemorySize(),\n+    if (context.isPreemptionEnabled()) {\n+      return (context.getPreemptionUtilizationThreshold() \u003c Math.max(\n+          (float) rootMetrics.getAllocatedMB() /\n+              getClusterResource().getMemorySize(),\n           (float) rootMetrics.getAllocatedVirtualCores() /\n-              clusterResource.getVirtualCores()));\n+              getClusterResource().getVirtualCores()));\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldAttemptPreemption() {\n    if (context.isPreemptionEnabled()) {\n      return (context.getPreemptionUtilizationThreshold() \u003c Math.max(\n          (float) rootMetrics.getAllocatedMB() /\n              getClusterResource().getMemorySize(),\n          (float) rootMetrics.getAllocatedVirtualCores() /\n              getClusterResource().getVirtualCores()));\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "26/05/16 2:41 PM",
      "commitNameOld": "04ded558b03ee0fbf68a611cf1f25508b4447e44",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 2.76,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private boolean shouldAttemptPreemption() {\n     if (preemptionEnabled) {\n       Resource clusterResource \u003d getClusterResource();\n       return (preemptionUtilizationThreshold \u003c Math.max(\n-          (float) rootMetrics.getAllocatedMB() / clusterResource.getMemory(),\n+          (float) rootMetrics.getAllocatedMB() / clusterResource.getMemorySize(),\n           (float) rootMetrics.getAllocatedVirtualCores() /\n               clusterResource.getVirtualCores()));\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldAttemptPreemption() {\n    if (preemptionEnabled) {\n      Resource clusterResource \u003d getClusterResource();\n      return (preemptionUtilizationThreshold \u003c Math.max(\n          (float) rootMetrics.getAllocatedMB() / clusterResource.getMemorySize(),\n          (float) rootMetrics.getAllocatedVirtualCores() /\n              clusterResource.getVirtualCores()));\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4719. Add a helper library to maintain node state and allows common queries. (kasha)\n",
      "commitDate": "14/03/16 2:19 PM",
      "commitName": "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/03/16 7:46 PM",
      "commitNameOld": "e1ccc9622b2f1fbefea1862fa74d1fb56d8eb264",
      "commitAuthorOld": "Zhihai Xu",
      "daysBetweenCommits": 7.73,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   private boolean shouldAttemptPreemption() {\n     if (preemptionEnabled) {\n+      Resource clusterResource \u003d getClusterResource();\n       return (preemptionUtilizationThreshold \u003c Math.max(\n           (float) rootMetrics.getAllocatedMB() / clusterResource.getMemory(),\n           (float) rootMetrics.getAllocatedVirtualCores() /\n               clusterResource.getVirtualCores()));\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldAttemptPreemption() {\n    if (preemptionEnabled) {\n      Resource clusterResource \u003d getClusterResource();\n      return (preemptionUtilizationThreshold \u003c Math.max(\n          (float) rootMetrics.getAllocatedMB() / clusterResource.getMemory(),\n          (float) rootMetrics.getAllocatedVirtualCores() /\n              clusterResource.getVirtualCores()));\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "4bc91b44c990c9eb060293853573a363b25ccea3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2155. FairScheduler: Incorrect threshold check for preemption. (Wei Yan via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/14 2:23 PM",
      "commitName": "4bc91b44c990c9eb060293853573a363b25ccea3",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/06/14 6:21 PM",
      "commitNameOld": "85d4c787e0f8ed913aaa61a6874ccf0408577b8d",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 5.83,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   private boolean shouldAttemptPreemption() {\n     if (preemptionEnabled) {\n       return (preemptionUtilizationThreshold \u003c Math.max(\n-          (float) rootMetrics.getAvailableMB() / clusterResource.getMemory(),\n-          (float) rootMetrics.getAvailableVirtualCores() /\n+          (float) rootMetrics.getAllocatedMB() / clusterResource.getMemory(),\n+          (float) rootMetrics.getAllocatedVirtualCores() /\n               clusterResource.getVirtualCores()));\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldAttemptPreemption() {\n    if (preemptionEnabled) {\n      return (preemptionUtilizationThreshold \u003c Math.max(\n          (float) rootMetrics.getAllocatedMB() / clusterResource.getMemory(),\n          (float) rootMetrics.getAllocatedVirtualCores() /\n              clusterResource.getVirtualCores()));\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "a00b2d4f37518cb5e579ab7e49d0c8b33ded9cf4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2073. Fair Scheduler: Add a utilization threshold to prevent preempting resources when cluster is free (Karthik Kambatla via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1597209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/14 3:52 PM",
      "commitName": "a00b2d4f37518cb5e579ab7e49d0c8b33ded9cf4",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,9 @@\n+  private boolean shouldAttemptPreemption() {\n+    if (preemptionEnabled) {\n+      return (preemptionUtilizationThreshold \u003c Math.max(\n+          (float) rootMetrics.getAvailableMB() / clusterResource.getMemory(),\n+          (float) rootMetrics.getAvailableVirtualCores() /\n+              clusterResource.getVirtualCores()));\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldAttemptPreemption() {\n    if (preemptionEnabled) {\n      return (preemptionUtilizationThreshold \u003c Math.max(\n          (float) rootMetrics.getAvailableMB() / clusterResource.getMemory(),\n          (float) rootMetrics.getAvailableVirtualCores() /\n              clusterResource.getVirtualCores()));\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}