{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollector.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
  "functionStartLine": 231,
  "functionEndLine": 237,
  "numCommitsSeen": 18,
  "timeTaken": 818,
  "changeHistory": [
    "22362c876d28c081c37dd74f6f1ae8139695e254"
  ],
  "changeHistoryShort": {
    "22362c876d28c081c37dd74f6f1ae8139695e254": "Yintroduced"
  },
  "changeHistoryDetails": {
    "22362c876d28c081c37dd74f6f1ae8139695e254": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9335 [atsv2] Restrict the number of elements held in timeline collector when backend is unreachable for async calls. Contributed by Abhishesk Modi.\n",
      "commitDate": "05/04/19 12:06 PM",
      "commitName": "22362c876d28c081c37dd74f6f1ae8139695e254",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,7 @@\n+      @Override public void run() {\n+        try {\n+          writeTimelineEntities(entities, callerUgi);\n+        } catch (IOException ie) {\n+          LOG.error(\"Got an exception while writing entity\", ie);\n+        }\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      @Override public void run() {\n        try {\n          writeTimelineEntities(entities, callerUgi);\n        } catch (IOException ie) {\n          LOG.error(\"Got an exception while writing entity\", ie);\n        }\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java"
    }
  }
}