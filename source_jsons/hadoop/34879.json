{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptor.java",
  "functionName": "findOrCreateAllocateRequestForSubCluster",
  "functionId": "findOrCreateAllocateRequestForSubCluster___subClusterId-SubClusterId__originalAMRequest-AllocateRequest__requestMap-Map__SubClusterId,AllocateRequest__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
  "functionStartLine": 1568,
  "functionEndLine": 1581,
  "numCommitsSeen": 21,
  "timeTaken": 913,
  "changeHistory": [
    "bed1832c934fe4ba44efdcdc49fce06457dc3d4f"
  ],
  "changeHistoryShort": {
    "bed1832c934fe4ba44efdcdc49fce06457dc3d4f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bed1832c934fe4ba44efdcdc49fce06457dc3d4f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3666. Federation Intercepting and propagating AM- home RM communications. (Botong Huang via Subru).\n\n(cherry picked from commit 2399eb8200609246cb623c74450ca4a2032063cc)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "bed1832c934fe4ba44efdcdc49fce06457dc3d4f",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,15 @@\n+  private static AllocateRequest findOrCreateAllocateRequestForSubCluster(\n+      SubClusterId subClusterId, AllocateRequest originalAMRequest,\n+      Map\u003cSubClusterId, AllocateRequest\u003e requestMap) {\n+    AllocateRequest newRequest \u003d null;\n+    if (requestMap.containsKey(subClusterId)) {\n+      newRequest \u003d requestMap.get(subClusterId);\n+    } else {\n+      newRequest \u003d createAllocateRequest();\n+      newRequest.setResponseId(originalAMRequest.getResponseId());\n+      newRequest.setProgress(originalAMRequest.getProgress());\n+      requestMap.put(subClusterId, newRequest);\n+    }\n+\n+    return newRequest;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static AllocateRequest findOrCreateAllocateRequestForSubCluster(\n      SubClusterId subClusterId, AllocateRequest originalAMRequest,\n      Map\u003cSubClusterId, AllocateRequest\u003e requestMap) {\n    AllocateRequest newRequest \u003d null;\n    if (requestMap.containsKey(subClusterId)) {\n      newRequest \u003d requestMap.get(subClusterId);\n    } else {\n      newRequest \u003d createAllocateRequest();\n      newRequest.setResponseId(originalAMRequest.getResponseId());\n      newRequest.setProgress(originalAMRequest.getProgress());\n      requestMap.put(subClusterId, newRequest);\n    }\n\n    return newRequest;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java"
    }
  }
}