{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptListenerImpl.java",
  "functionName": "getTask",
  "functionId": "getTask___context-JvmContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
  "functionStartLine": 498,
  "functionEndLine": 537,
  "numCommitsSeen": 43,
  "timeTaken": 9873,
  "changeHistory": [
    "6b710a42e00acca405e085724c89cda016cf7442",
    "0c278b0f636a01c81aba9e46fe7658fcdfb0f33c",
    "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54",
    "1c8d64f38a86b92f3c5a56105cd0cd51d8b8529b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "6b710a42e00acca405e085724c89cda016cf7442": "Ybodychange",
    "0c278b0f636a01c81aba9e46fe7658fcdfb0f33c": "Ybodychange",
    "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54": "Ybodychange",
    "1c8d64f38a86b92f3c5a56105cd0cd51d8b8529b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b710a42e00acca405e085724c89cda016cf7442": {
      "type": "Ybodychange",
      "commitMessage": "Fixing MR intermediate spills. Contributed by Arun Suresh.\n",
      "commitDate": "14/05/15 4:07 PM",
      "commitName": "6b710a42e00acca405e085724c89cda016cf7442",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 72.58,
      "commitsBetweenForRepo": 717,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,40 @@\n   public JvmTask getTask(JvmContext context) throws IOException {\n \n     // A rough imitation of code from TaskTracker.\n \n     JVMId jvmId \u003d context.jvmId;\n     LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n \n     JvmTask jvmTask \u003d null;\n     // TODO: Is it an authorized container to get a task? Otherwise return null.\n \n     // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n     // to jobId and task-type.\n \n     WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n         jvmId.getId());\n \n     // Try to look up the task. We remove it directly as we don\u0027t give\n     // multiple tasks to a JVM\n     if (!jvmIDToActiveAttemptMap.containsKey(wJvmID)) {\n       LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n       jvmTask \u003d TASK_FOR_INVALID_JVM;\n     } else {\n       if (!launchedJVMs.contains(wJvmID)) {\n         jvmTask \u003d null;\n         LOG.info(\"JVM with ID: \" + jvmId\n             + \" asking for task before AM launch registered. Given null task\");\n       } else {\n         // remove the task as it is no more needed and free up the memory.\n         // Also we have already told the JVM to process a task, so it is no\n         // longer pending, and further request should ask it to exit.\n         org.apache.hadoop.mapred.Task task \u003d\n             jvmIDToActiveAttemptMap.remove(wJvmID);\n         launchedJVMs.remove(wJvmID);\n         LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n+        task.setEncryptedSpillKey(encryptedSpillKey);\n         jvmTask \u003d new JvmTask(task, false);\n       }\n     }\n     return jvmTask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n\n    JvmTask jvmTask \u003d null;\n    // TODO: Is it an authorized container to get a task? Otherwise return null.\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n\n    // Try to look up the task. We remove it directly as we don\u0027t give\n    // multiple tasks to a JVM\n    if (!jvmIDToActiveAttemptMap.containsKey(wJvmID)) {\n      LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n      jvmTask \u003d TASK_FOR_INVALID_JVM;\n    } else {\n      if (!launchedJVMs.contains(wJvmID)) {\n        jvmTask \u003d null;\n        LOG.info(\"JVM with ID: \" + jvmId\n            + \" asking for task before AM launch registered. Given null task\");\n      } else {\n        // remove the task as it is no more needed and free up the memory.\n        // Also we have already told the JVM to process a task, so it is no\n        // longer pending, and further request should ask it to exit.\n        org.apache.hadoop.mapred.Task task \u003d\n            jvmIDToActiveAttemptMap.remove(wJvmID);\n        launchedJVMs.remove(wJvmID);\n        LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n        task.setEncryptedSpillKey(encryptedSpillKey);\n        jvmTask \u003d new JvmTask(task, false);\n      }\n    }\n    return jvmTask;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "0c278b0f636a01c81aba9e46fe7658fcdfb0f33c": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3656. Fixed a race condition in MR AM which is failing the sort benchmark consistently. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1231314 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/01/12 1:31 PM",
      "commitName": "0c278b0f636a01c81aba9e46fe7658fcdfb0f33c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/01/12 10:53 PM",
      "commitNameOld": "39b8bbe663abc10d2dd327f426c94c147deb36ab",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.61,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,39 @@\n   public JvmTask getTask(JvmContext context) throws IOException {\n \n     // A rough imitation of code from TaskTracker.\n \n     JVMId jvmId \u003d context.jvmId;\n     LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n     \n     JvmTask jvmTask \u003d null;\n     // TODO: Is it an authorized container to get a task? Otherwise return null.\n \n     // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n     // to jobId and task-type.\n \n     WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n         jvmId.getId());\n \n     // Try to look up the task. We remove it directly as we don\u0027t give\n     // multiple tasks to a JVM\n-    org.apache.hadoop.mapred.Task task \u003d jvmIDToActiveAttemptMap\n-        .remove(wJvmID);\n-    if (task !\u003d null) {\n-      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n-      jvmTask \u003d new JvmTask(task, false);\n-\n-      // remove the task as it is no more needed and free up the memory\n-      // Also we have already told the JVM to process a task, so it is no\n-      // longer pending, and further request should ask it to exit.\n-    } else {\n+    if (!jvmIDToActiveAttemptMap.containsKey(wJvmID)) {\n       LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n       jvmTask \u003d TASK_FOR_INVALID_JVM;\n+    } else {\n+      if (!launchedJVMs.contains(wJvmID)) {\n+        jvmTask \u003d null;\n+        LOG.info(\"JVM with ID: \" + jvmId\n+            + \" asking for task before AM launch registered. Given null task\");\n+      } else {\n+        // remove the task as it is no more needed and free up the memory.\n+        // Also we have already told the JVM to process a task, so it is no\n+        // longer pending, and further request should ask it to exit.\n+        org.apache.hadoop.mapred.Task task \u003d\n+            jvmIDToActiveAttemptMap.remove(wJvmID);\n+        launchedJVMs.remove(wJvmID);\n+        LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n+        jvmTask \u003d new JvmTask(task, false);\n+      }\n     }\n     return jvmTask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n    \n    JvmTask jvmTask \u003d null;\n    // TODO: Is it an authorized container to get a task? Otherwise return null.\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n\n    // Try to look up the task. We remove it directly as we don\u0027t give\n    // multiple tasks to a JVM\n    if (!jvmIDToActiveAttemptMap.containsKey(wJvmID)) {\n      LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n      jvmTask \u003d TASK_FOR_INVALID_JVM;\n    } else {\n      if (!launchedJVMs.contains(wJvmID)) {\n        jvmTask \u003d null;\n        LOG.info(\"JVM with ID: \" + jvmId\n            + \" asking for task before AM launch registered. Given null task\");\n      } else {\n        // remove the task as it is no more needed and free up the memory.\n        // Also we have already told the JVM to process a task, so it is no\n        // longer pending, and further request should ask it to exit.\n        org.apache.hadoop.mapred.Task task \u003d\n            jvmIDToActiveAttemptMap.remove(wJvmID);\n        launchedJVMs.remove(wJvmID);\n        LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n        jvmTask \u003d new JvmTask(task, false);\n      }\n    }\n    return jvmTask;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3569. TaskAttemptListener holds a global lock for all task-updates. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227485 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/12 9:19 PM",
      "commitName": "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "30/10/11 4:29 AM",
      "commitNameOld": "1c8d64f38a86b92f3c5a56105cd0cd51d8b8529b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 66.74,
      "commitsBetweenForRepo": 347,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,33 @@\n   public JvmTask getTask(JvmContext context) throws IOException {\n \n     // A rough imitation of code from TaskTracker.\n \n     JVMId jvmId \u003d context.jvmId;\n     LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n     \n     JvmTask jvmTask \u003d null;\n     // TODO: Is it an authorized container to get a task? Otherwise return null.\n \n     // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n     // to jobId and task-type.\n \n     WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n         jvmId.getId());\n-    synchronized(this) {\n-      if(pendingJvms.contains(wJvmID)) {\n-        org.apache.hadoop.mapred.Task task \u003d jvmIDToActiveAttemptMap.get(wJvmID);\n-        if (task !\u003d null) { //there may be lag in the attempt getting added here\n-         LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n-          jvmTask \u003d new JvmTask(task, false);\n \n-          //remove the task as it is no more needed and free up the memory\n-          //Also we have already told the JVM to process a task, so it is no\n-          //longer pending, and further request should ask it to exit.\n-          pendingJvms.remove(wJvmID);\n-          jvmIDToActiveAttemptMap.remove(wJvmID);\n-        }\n-      } else {\n-        LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n-        jvmTask \u003d new JvmTask(null, true);\n-      }\n+    // Try to look up the task. We remove it directly as we don\u0027t give\n+    // multiple tasks to a JVM\n+    org.apache.hadoop.mapred.Task task \u003d jvmIDToActiveAttemptMap\n+        .remove(wJvmID);\n+    if (task !\u003d null) {\n+      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n+      jvmTask \u003d new JvmTask(task, false);\n+\n+      // remove the task as it is no more needed and free up the memory\n+      // Also we have already told the JVM to process a task, so it is no\n+      // longer pending, and further request should ask it to exit.\n+    } else {\n+      LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n+      jvmTask \u003d TASK_FOR_INVALID_JVM;\n     }\n     return jvmTask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n    \n    JvmTask jvmTask \u003d null;\n    // TODO: Is it an authorized container to get a task? Otherwise return null.\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n\n    // Try to look up the task. We remove it directly as we don\u0027t give\n    // multiple tasks to a JVM\n    org.apache.hadoop.mapred.Task task \u003d jvmIDToActiveAttemptMap\n        .remove(wJvmID);\n    if (task !\u003d null) {\n      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n      jvmTask \u003d new JvmTask(task, false);\n\n      // remove the task as it is no more needed and free up the memory\n      // Also we have already told the JVM to process a task, so it is no\n      // longer pending, and further request should ask it to exit.\n    } else {\n      LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n      jvmTask \u003d TASK_FOR_INVALID_JVM;\n    }\n    return jvmTask;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "1c8d64f38a86b92f3c5a56105cd0cd51d8b8529b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3274. Fixed a race condition in MRAppMaster that was causing a task-scheduling deadlock. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195145 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/11 4:29 AM",
      "commitName": "1c8d64f38a86b92f3c5a56105cd0cd51d8b8529b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/10/11 11:07 PM",
      "commitNameOld": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 5.22,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,35 @@\n   public JvmTask getTask(JvmContext context) throws IOException {\n \n     // A rough imitation of code from TaskTracker.\n \n     JVMId jvmId \u003d context.jvmId;\n     LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n-\n-    // TODO: Is it an authorised container to get a task? Otherwise return null.\n-\n-    // TODO: Is the request for task-launch still valid?\n+    \n+    JvmTask jvmTask \u003d null;\n+    // TODO: Is it an authorized container to get a task? Otherwise return null.\n \n     // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n     // to jobId and task-type.\n \n     WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n         jvmId.getId());\n-    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n-    if (task !\u003d null) { //there may be lag in the attempt getting added here\n-      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n-      JvmTask jvmTask \u003d new JvmTask(task, false);\n-      \n-      //remove the task as it is no more needed and free up the memory\n-      jvmIDToAttemptMap.remove(wJvmID);\n-      \n-      return jvmTask;\n+    synchronized(this) {\n+      if(pendingJvms.contains(wJvmID)) {\n+        org.apache.hadoop.mapred.Task task \u003d jvmIDToActiveAttemptMap.get(wJvmID);\n+        if (task !\u003d null) { //there may be lag in the attempt getting added here\n+         LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n+          jvmTask \u003d new JvmTask(task, false);\n+\n+          //remove the task as it is no more needed and free up the memory\n+          //Also we have already told the JVM to process a task, so it is no\n+          //longer pending, and further request should ask it to exit.\n+          pendingJvms.remove(wJvmID);\n+          jvmIDToActiveAttemptMap.remove(wJvmID);\n+        }\n+      } else {\n+        LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n+        jvmTask \u003d new JvmTask(null, true);\n+      }\n     }\n-    return null;\n+    return jvmTask;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n    \n    JvmTask jvmTask \u003d null;\n    // TODO: Is it an authorized container to get a task? Otherwise return null.\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n    synchronized(this) {\n      if(pendingJvms.contains(wJvmID)) {\n        org.apache.hadoop.mapred.Task task \u003d jvmIDToActiveAttemptMap.get(wJvmID);\n        if (task !\u003d null) { //there may be lag in the attempt getting added here\n         LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n          jvmTask \u003d new JvmTask(task, false);\n\n          //remove the task as it is no more needed and free up the memory\n          //Also we have already told the JVM to process a task, so it is no\n          //longer pending, and further request should ask it to exit.\n          pendingJvms.remove(wJvmID);\n          jvmIDToActiveAttemptMap.remove(wJvmID);\n        }\n      } else {\n        LOG.info(\"JVM with ID: \" + jvmId + \" is invalid and will be killed.\");\n        jvmTask \u003d new JvmTask(null, true);\n      }\n    }\n    return jvmTask;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n\n    // TODO: Is it an authorised container to get a task? Otherwise return null.\n\n    // TODO: Is the request for task-launch still valid?\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n    if (task !\u003d null) { //there may be lag in the attempt getting added here\n      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n      JvmTask jvmTask \u003d new JvmTask(task, false);\n      \n      //remove the task as it is no more needed and free up the memory\n      jvmIDToAttemptMap.remove(wJvmID);\n      \n      return jvmTask;\n    }\n    return null;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,28 @@\n-  public synchronized JvmTask getTask(JvmContext context) \n-  throws IOException {\n-    ensureAuthorizedJVM(context.jvmId.getJobId());\n+  public JvmTask getTask(JvmContext context) throws IOException {\n+\n+    // A rough imitation of code from TaskTracker.\n+\n     JVMId jvmId \u003d context.jvmId;\n-    \n-    // save pid of task JVM sent by child\n-    jvmManager.setPidToJvm(jvmId, context.pid);\n-    \n-    LOG.debug(\"JVM with ID : \" + jvmId + \" asked for a task\");\n-    if (!jvmManager.isJvmKnown(jvmId)) {\n-      LOG.info(\"Killing unknown JVM \" + jvmId);\n-      return new JvmTask(null, true);\n+    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n+\n+    // TODO: Is it an authorised container to get a task? Otherwise return null.\n+\n+    // TODO: Is the request for task-launch still valid?\n+\n+    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n+    // to jobId and task-type.\n+\n+    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n+        jvmId.getId());\n+    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n+    if (task !\u003d null) { //there may be lag in the attempt getting added here\n+      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n+      JvmTask jvmTask \u003d new JvmTask(task, false);\n+      \n+      //remove the task as it is no more needed and free up the memory\n+      jvmIDToAttemptMap.remove(wJvmID);\n+      \n+      return jvmTask;\n     }\n-    RunningJob rjob \u003d runningJobs.get(jvmId.getJobId());\n-    if (rjob \u003d\u003d null) { //kill the JVM since the job is dead\n-      LOG.info(\"Killing JVM \" + jvmId + \" since job \" + jvmId.getJobId() +\n-               \" is dead\");\n-      jvmManager.killJvm(jvmId);\n-      return new JvmTask(null, true);\n-    }\n-    TaskInProgress tip \u003d jvmManager.getTaskForJvm(jvmId);\n-    if (tip \u003d\u003d null) {\n-      return new JvmTask(null, false);\n-    }\n-    if (tasks.get(tip.getTask().getTaskID()) !\u003d null) { //is task still present\n-      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + \n-          tip.getTask().getTaskID());\n-      return new JvmTask(tip.getTask(), false);\n-    } else {\n-      LOG.info(\"Killing JVM with ID: \" + jvmId + \" since scheduled task: \" + \n-          tip.getTask().getTaskID() + \" is \" + tip.taskStatus.getRunState());\n-      return new JvmTask(null, true);\n-    }\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n\n    // TODO: Is it an authorised container to get a task? Otherwise return null.\n\n    // TODO: Is the request for task-launch still valid?\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n    if (task !\u003d null) { //there may be lag in the attempt getting added here\n      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n      JvmTask jvmTask \u003d new JvmTask(task, false);\n      \n      //remove the task as it is no more needed and free up the memory\n      jvmIDToAttemptMap.remove(wJvmID);\n      \n      return jvmTask;\n    }\n    return null;\n  }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java",
            "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
            "oldMethodName": "getTask",
            "newMethodName": "getTask"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,28 @@\n-  public synchronized JvmTask getTask(JvmContext context) \n-  throws IOException {\n-    ensureAuthorizedJVM(context.jvmId.getJobId());\n+  public JvmTask getTask(JvmContext context) throws IOException {\n+\n+    // A rough imitation of code from TaskTracker.\n+\n     JVMId jvmId \u003d context.jvmId;\n-    \n-    // save pid of task JVM sent by child\n-    jvmManager.setPidToJvm(jvmId, context.pid);\n-    \n-    LOG.debug(\"JVM with ID : \" + jvmId + \" asked for a task\");\n-    if (!jvmManager.isJvmKnown(jvmId)) {\n-      LOG.info(\"Killing unknown JVM \" + jvmId);\n-      return new JvmTask(null, true);\n+    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n+\n+    // TODO: Is it an authorised container to get a task? Otherwise return null.\n+\n+    // TODO: Is the request for task-launch still valid?\n+\n+    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n+    // to jobId and task-type.\n+\n+    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n+        jvmId.getId());\n+    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n+    if (task !\u003d null) { //there may be lag in the attempt getting added here\n+      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n+      JvmTask jvmTask \u003d new JvmTask(task, false);\n+      \n+      //remove the task as it is no more needed and free up the memory\n+      jvmIDToAttemptMap.remove(wJvmID);\n+      \n+      return jvmTask;\n     }\n-    RunningJob rjob \u003d runningJobs.get(jvmId.getJobId());\n-    if (rjob \u003d\u003d null) { //kill the JVM since the job is dead\n-      LOG.info(\"Killing JVM \" + jvmId + \" since job \" + jvmId.getJobId() +\n-               \" is dead\");\n-      jvmManager.killJvm(jvmId);\n-      return new JvmTask(null, true);\n-    }\n-    TaskInProgress tip \u003d jvmManager.getTaskForJvm(jvmId);\n-    if (tip \u003d\u003d null) {\n-      return new JvmTask(null, false);\n-    }\n-    if (tasks.get(tip.getTask().getTaskID()) !\u003d null) { //is task still present\n-      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + \n-          tip.getTask().getTaskID());\n-      return new JvmTask(tip.getTask(), false);\n-    } else {\n-      LOG.info(\"Killing JVM with ID: \" + jvmId + \" since scheduled task: \" + \n-          tip.getTask().getTaskID() + \" is \" + tip.taskStatus.getRunState());\n-      return new JvmTask(null, true);\n-    }\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n\n    // TODO: Is it an authorised container to get a task? Otherwise return null.\n\n    // TODO: Is the request for task-launch still valid?\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n    if (task !\u003d null) { //there may be lag in the attempt getting added here\n      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n      JvmTask jvmTask \u003d new JvmTask(task, false);\n      \n      //remove the task as it is no more needed and free up the memory\n      jvmIDToAttemptMap.remove(wJvmID);\n      \n      return jvmTask;\n    }\n    return null;\n  }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,28 @@\n-  public synchronized JvmTask getTask(JvmContext context) \n-  throws IOException {\n-    ensureAuthorizedJVM(context.jvmId.getJobId());\n+  public JvmTask getTask(JvmContext context) throws IOException {\n+\n+    // A rough imitation of code from TaskTracker.\n+\n     JVMId jvmId \u003d context.jvmId;\n-    \n-    // save pid of task JVM sent by child\n-    jvmManager.setPidToJvm(jvmId, context.pid);\n-    \n-    LOG.debug(\"JVM with ID : \" + jvmId + \" asked for a task\");\n-    if (!jvmManager.isJvmKnown(jvmId)) {\n-      LOG.info(\"Killing unknown JVM \" + jvmId);\n-      return new JvmTask(null, true);\n+    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n+\n+    // TODO: Is it an authorised container to get a task? Otherwise return null.\n+\n+    // TODO: Is the request for task-launch still valid?\n+\n+    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n+    // to jobId and task-type.\n+\n+    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n+        jvmId.getId());\n+    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n+    if (task !\u003d null) { //there may be lag in the attempt getting added here\n+      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n+      JvmTask jvmTask \u003d new JvmTask(task, false);\n+      \n+      //remove the task as it is no more needed and free up the memory\n+      jvmIDToAttemptMap.remove(wJvmID);\n+      \n+      return jvmTask;\n     }\n-    RunningJob rjob \u003d runningJobs.get(jvmId.getJobId());\n-    if (rjob \u003d\u003d null) { //kill the JVM since the job is dead\n-      LOG.info(\"Killing JVM \" + jvmId + \" since job \" + jvmId.getJobId() +\n-               \" is dead\");\n-      jvmManager.killJvm(jvmId);\n-      return new JvmTask(null, true);\n-    }\n-    TaskInProgress tip \u003d jvmManager.getTaskForJvm(jvmId);\n-    if (tip \u003d\u003d null) {\n-      return new JvmTask(null, false);\n-    }\n-    if (tasks.get(tip.getTask().getTaskID()) !\u003d null) { //is task still present\n-      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + \n-          tip.getTask().getTaskID());\n-      return new JvmTask(tip.getTask(), false);\n-    } else {\n-      LOG.info(\"Killing JVM with ID: \" + jvmId + \" since scheduled task: \" + \n-          tip.getTask().getTaskID() + \" is \" + tip.taskStatus.getRunState());\n-      return new JvmTask(null, true);\n-    }\n+    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public JvmTask getTask(JvmContext context) throws IOException {\n\n    // A rough imitation of code from TaskTracker.\n\n    JVMId jvmId \u003d context.jvmId;\n    LOG.info(\"JVM with ID : \" + jvmId + \" asked for a task\");\n\n    // TODO: Is it an authorised container to get a task? Otherwise return null.\n\n    // TODO: Is the request for task-launch still valid?\n\n    // TODO: Child.java\u0027s firstTaskID isn\u0027t really firstTaskID. Ask for update\n    // to jobId and task-type.\n\n    WrappedJvmID wJvmID \u003d new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,\n        jvmId.getId());\n    org.apache.hadoop.mapred.Task task \u003d jvmIDToAttemptMap.get(wJvmID);\n    if (task !\u003d null) { //there may be lag in the attempt getting added here\n      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + task.getTaskID());\n      JvmTask jvmTask \u003d new JvmTask(task, false);\n      \n      //remove the task as it is no more needed and free up the memory\n      jvmIDToAttemptMap.remove(wJvmID);\n      \n      return jvmTask;\n    }\n    return null;\n  }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,34 @@\n+  public synchronized JvmTask getTask(JvmContext context) \n+  throws IOException {\n+    ensureAuthorizedJVM(context.jvmId.getJobId());\n+    JVMId jvmId \u003d context.jvmId;\n+    \n+    // save pid of task JVM sent by child\n+    jvmManager.setPidToJvm(jvmId, context.pid);\n+    \n+    LOG.debug(\"JVM with ID : \" + jvmId + \" asked for a task\");\n+    if (!jvmManager.isJvmKnown(jvmId)) {\n+      LOG.info(\"Killing unknown JVM \" + jvmId);\n+      return new JvmTask(null, true);\n+    }\n+    RunningJob rjob \u003d runningJobs.get(jvmId.getJobId());\n+    if (rjob \u003d\u003d null) { //kill the JVM since the job is dead\n+      LOG.info(\"Killing JVM \" + jvmId + \" since job \" + jvmId.getJobId() +\n+               \" is dead\");\n+      jvmManager.killJvm(jvmId);\n+      return new JvmTask(null, true);\n+    }\n+    TaskInProgress tip \u003d jvmManager.getTaskForJvm(jvmId);\n+    if (tip \u003d\u003d null) {\n+      return new JvmTask(null, false);\n+    }\n+    if (tasks.get(tip.getTask().getTaskID()) !\u003d null) { //is task still present\n+      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + \n+          tip.getTask().getTaskID());\n+      return new JvmTask(tip.getTask(), false);\n+    } else {\n+      LOG.info(\"Killing JVM with ID: \" + jvmId + \" since scheduled task: \" + \n+          tip.getTask().getTaskID() + \" is \" + tip.taskStatus.getRunState());\n+      return new JvmTask(null, true);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized JvmTask getTask(JvmContext context) \n  throws IOException {\n    ensureAuthorizedJVM(context.jvmId.getJobId());\n    JVMId jvmId \u003d context.jvmId;\n    \n    // save pid of task JVM sent by child\n    jvmManager.setPidToJvm(jvmId, context.pid);\n    \n    LOG.debug(\"JVM with ID : \" + jvmId + \" asked for a task\");\n    if (!jvmManager.isJvmKnown(jvmId)) {\n      LOG.info(\"Killing unknown JVM \" + jvmId);\n      return new JvmTask(null, true);\n    }\n    RunningJob rjob \u003d runningJobs.get(jvmId.getJobId());\n    if (rjob \u003d\u003d null) { //kill the JVM since the job is dead\n      LOG.info(\"Killing JVM \" + jvmId + \" since job \" + jvmId.getJobId() +\n               \" is dead\");\n      jvmManager.killJvm(jvmId);\n      return new JvmTask(null, true);\n    }\n    TaskInProgress tip \u003d jvmManager.getTaskForJvm(jvmId);\n    if (tip \u003d\u003d null) {\n      return new JvmTask(null, false);\n    }\n    if (tasks.get(tip.getTask().getTaskID()) !\u003d null) { //is task still present\n      LOG.info(\"JVM with ID: \" + jvmId + \" given task: \" + \n          tip.getTask().getTaskID());\n      return new JvmTask(tip.getTask(), false);\n    } else {\n      LOG.info(\"Killing JVM with ID: \" + jvmId + \" since scheduled task: \" + \n          tip.getTask().getTaskID() + \" is \" + tip.taskStatus.getRunState());\n      return new JvmTask(null, true);\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java"
    }
  }
}