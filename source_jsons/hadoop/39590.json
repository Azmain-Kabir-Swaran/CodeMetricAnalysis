{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParentQueue.java",
  "functionName": "attachContainer",
  "functionId": "attachContainer___clusterResource-Resource__application-FiCaSchedulerApp__rmContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
  "functionStartLine": 1200,
  "functionEndLine": 1216,
  "numCommitsSeen": 85,
  "timeTaken": 5421,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
    "ae14e5d07f1b6702a5160637438028bb03d9387e",
    "fa7a43529d529f0006c8033c2003f15b9b93f103",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
    "86358221fc85a7743052a0b4c1647353508bf308",
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
    "7360cec692be5dcc3377ae5082fe22870caac96b"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": "Ybodychange",
    "ae14e5d07f1b6702a5160637438028bb03d9387e": "Ybodychange",
    "fa7a43529d529f0006c8033c2003f15b9b93f103": "Ybodychange",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": "Ybodychange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Ybodychange",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": "Ybodychange",
    "86358221fc85a7743052a0b4c1647353508bf308": "Ybodychange",
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb": "Ybodychange",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": "Ybodychange",
    "7360cec692be5dcc3377ae5082fe22870caac96b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "29/08/19 3:14 AM",
      "commitNameOld": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 209.05,
      "commitsBetweenForRepo": 935,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, rmContainer.getContainer()\n           .getResource(), node.getPartition());\n-      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n+      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueuePath()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition());\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueuePath()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6216. Unify Container Resizing code paths with Container Updates making it scheduler agnostic. (Arun Suresh via wangda)\n",
      "commitDate": "28/02/17 10:35 AM",
      "commitName": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/02/17 10:23 AM",
      "commitNameOld": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 19.01,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), node.getPartition(), false);\n+          .getResource(), node.getPartition());\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition());\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "ae14e5d07f1b6702a5160637438028bb03d9387e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4108. CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n\n(cherry picked from commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913)\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 5:02 PM",
      "commitNameOld": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n-      super.allocateResource(clusterResource, rmContainer.getContainer()\n+      allocateResource(clusterResource, rmContainer.getContainer()\n           .getResource(), node.getPartition(), false);\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition(), false);\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "fa7a43529d529f0006c8033c2003f15b9b93f103": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\"\n\nThis reverts commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913.\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 4:59 PM",
      "commitNameOld": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n-      allocateResource(clusterResource, rmContainer.getContainer()\n+      super.allocateResource(clusterResource, rmContainer.getContainer()\n           .getResource(), node.getPartition(), false);\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition(), false);\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": {
      "type": "Ybodychange",
      "commitMessage": "CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n",
      "commitDate": "16/03/16 4:59 PM",
      "commitName": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "28/02/16 9:35 AM",
      "commitNameOld": "f9692770a58af0ab082eb7f15da9cbdcd177605b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 17.27,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n-      super.allocateResource(clusterResource, rmContainer.getContainer()\n+      allocateResource(clusterResource, rmContainer.getContainer()\n           .getResource(), node.getPartition(), false);\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition(), false);\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "commitDateOld": "07/08/15 9:46 AM",
      "commitNameOld": "4bc42d76e7fa53cb268cab0f9fe1fd8d8dbb17fd",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 47.15,
      "commitsBetweenForRepo": 271,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), node.getPartition());\n+          .getResource(), node.getPartition(), false);\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition(), false);\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3361. CapacityScheduler side changes to support non-exclusive node labels. Contributed by Wangda Tan\n",
      "commitDate": "14/04/15 11:45 AM",
      "commitName": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/04/15 11:38 PM",
      "commitNameOld": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 4.51,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), node.getLabels());\n+          .getResource(), node.getPartition());\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition());\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "86358221fc85a7743052a0b4c1647353508bf308": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3099. Capacity Scheduler LeafQueue/ParentQueue should use ResourceUsage to track used-resources-by-label. Contributed by Wangda Tan\n",
      "commitDate": "30/01/15 3:15 PM",
      "commitName": "86358221fc85a7743052a0b4c1647353508bf308",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/01/15 2:15 PM",
      "commitNameOld": "dd57c2047bfd21910acc38c98153eedf1db75169",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 24.04,
      "commitsBetweenForRepo": 173,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       super.allocateResource(clusterResource, rmContainer.getContainer()\n           .getResource(), node.getLabels());\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n-          + getAbsoluteUsedCapacity() + \" used\u003d\" + usedResources + \" cluster\u003d\"\n+          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getLabels());\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + queueUsage.getUsed() + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2920. Changed CapacityScheduler to kill containers on nodes where node labels are changed. Contributed by  Wangda Tan\n",
      "commitDate": "22/12/14 4:51 PM",
      "commitName": "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb",
      "commitAuthor": "Jian He",
      "commitDateOld": "15/10/14 6:33 PM",
      "commitNameOld": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 67.97,
      "commitsBetweenForRepo": 558,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n+      FiCaSchedulerNode node \u003d\n+          scheduler.getNode(rmContainer.getContainer().getNodeId());\n       super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), labelManager.getLabelsOnNode(rmContainer\n-          .getContainer().getNodeId()));\n+          .getResource(), node.getLabels());\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + usedResources + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getLabels());\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + usedResources + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "15/10/14 6:33 PM",
      "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/10/14 3:41 PM",
      "commitNameOld": "eb3e40b833b9d82c1556843f960194dc42e482f3",
      "commitAuthorOld": "carlo curino",
      "daysBetweenCommits": 12.12,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public void attachContainer(Resource clusterResource,\n       FiCaSchedulerApp application, RMContainer rmContainer) {\n     if (application !\u003d null) {\n-      allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource());\n+      super.allocateResource(clusterResource, rmContainer.getContainer()\n+          .getResource(), labelManager.getLabelsOnNode(rmContainer\n+          .getContainer().getNodeId()));\n       LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n           + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n           + getAbsoluteUsedCapacity() + \" used\u003d\" + usedResources + \" cluster\u003d\"\n           + clusterResource);\n       // Inform the parent\n       if (parent !\u003d null) {\n         parent.attachContainer(clusterResource, application, rmContainer);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), labelManager.getLabelsOnNode(rmContainer\n          .getContainer().getNodeId()));\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + usedResources + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "7360cec692be5dcc3377ae5082fe22870caac96b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2378. Added support for moving applications across queues in CapacityScheduler. Contributed by Subramaniam Venkatraman Krishnan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 11:00 PM",
      "commitName": "7360cec692be5dcc3377ae5082fe22870caac96b",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  public void attachContainer(Resource clusterResource,\n+      FiCaSchedulerApp application, RMContainer rmContainer) {\n+    if (application !\u003d null) {\n+      allocateResource(clusterResource, rmContainer.getContainer()\n+          .getResource());\n+      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n+          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n+          + getAbsoluteUsedCapacity() + \" used\u003d\" + usedResources + \" cluster\u003d\"\n+          + clusterResource);\n+      // Inform the parent\n+      if (parent !\u003d null) {\n+        parent.attachContainer(clusterResource, application, rmContainer);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void attachContainer(Resource clusterResource,\n      FiCaSchedulerApp application, RMContainer rmContainer) {\n    if (application !\u003d null) {\n      allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource());\n      LOG.info(\"movedContainer\" + \" queueMoveIn\u003d\" + getQueueName()\n          + \" usedCapacity\u003d\" + getUsedCapacity() + \" absoluteUsedCapacity\u003d\"\n          + getAbsoluteUsedCapacity() + \" used\u003d\" + usedResources + \" cluster\u003d\"\n          + clusterResource);\n      // Inform the parent\n      if (parent !\u003d null) {\n        parent.attachContainer(clusterResource, application, rmContainer);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java"
    }
  }
}