{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueuePlacementConverter.java",
  "functionName": "handleNestedRule",
  "functionId": "handleNestedRule___mapping-StringBuilder__userRule-UserPlacementRule__ruleHandler-FSConfigToCSConfigRuleHandler",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/QueuePlacementConverter.java",
  "functionStartLine": 104,
  "functionEndLine": 131,
  "numCommitsSeen": 9,
  "timeTaken": 4586,
  "changeHistory": [
    "72fa9c7f1b262839b88533a61e8f2ffbbfd15a1d",
    "a7d72c523ae9d23fad5f2fcc4b40610731ce454a",
    "ca297680352b7bf20ca6cd98ff81bb68e1358c5b",
    "8c9018d5c7830ae8ec85f446985cafbc8a14d688",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d"
  ],
  "changeHistoryShort": {
    "72fa9c7f1b262839b88533a61e8f2ffbbfd15a1d": "Ymultichange(Yparameterchange,Ybodychange)",
    "a7d72c523ae9d23fad5f2fcc4b40610731ce454a": "Ybodychange",
    "ca297680352b7bf20ca6cd98ff81bb68e1358c5b": "Ybodychange",
    "8c9018d5c7830ae8ec85f446985cafbc8a14d688": "Ybodychange",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "72fa9c7f1b262839b88533a61e8f2ffbbfd15a1d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-10135. FS-CS converter tool: issue warning on dynamic auto-create mapping rules. Contributed by Peter Bacsko\n",
      "commitDate": "24/02/20 12:54 PM",
      "commitName": "72fa9c7f1b262839b88533a61e8f2ffbbfd15a1d",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-10135. FS-CS converter tool: issue warning on dynamic auto-create mapping rules. Contributed by Peter Bacsko\n",
          "commitDate": "24/02/20 12:54 PM",
          "commitName": "72fa9c7f1b262839b88533a61e8f2ffbbfd15a1d",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "30/01/20 7:03 AM",
          "commitNameOld": "a7d72c523ae9d23fad5f2fcc4b40610731ce454a",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 25.24,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,28 @@\n   private void handleNestedRule(StringBuilder mapping,\n-      UserPlacementRule userRule) {\n+      UserPlacementRule userRule, FSConfigToCSConfigRuleHandler ruleHandler) {\n     PlacementRule pr \u003d userRule.getParentRule();\n     if (mapping.length() \u003e 0) {\n       mapping.append(RULE_SEPARATOR);\n     }\n     if (pr instanceof PrimaryGroupPlacementRule) {\n-      mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n+      String mappingString \u003d \"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER;\n+      ruleHandler.handleDynamicMappedQueue(mappingString,\n+          ((PrimaryGroupPlacementRule) pr).getCreateFlag());\n+      mapping.append(mappingString);\n     } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n+      String mappingString \u003d \"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER;\n+      ruleHandler.handleDynamicMappedQueue(mappingString,\n+          ((SecondaryGroupExistingPlacementRule) pr).getCreateFlag());\n       mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n     } else if (pr instanceof DefaultPlacementRule) {\n       DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n-      mapping.append(\"u:\" + USER + \":\")\n-        .append(defaultRule.defaultQueueName)\n-        .append(\".\" + USER);\n+      String mappingString \u003d\n+          \"u:\" + USER + \":\" + defaultRule.defaultQueueName + \".\" + USER;\n+      ruleHandler.handleDynamicMappedQueue(mappingString,\n+          defaultRule.getCreateFlag());\n+      mapping.append(mappingString);\n     } else {\n       throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n           + pr.getClass().getCanonicalName());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void handleNestedRule(StringBuilder mapping,\n      UserPlacementRule userRule, FSConfigToCSConfigRuleHandler ruleHandler) {\n    PlacementRule pr \u003d userRule.getParentRule();\n    if (mapping.length() \u003e 0) {\n      mapping.append(RULE_SEPARATOR);\n    }\n    if (pr instanceof PrimaryGroupPlacementRule) {\n      String mappingString \u003d \"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER;\n      ruleHandler.handleDynamicMappedQueue(mappingString,\n          ((PrimaryGroupPlacementRule) pr).getCreateFlag());\n      mapping.append(mappingString);\n    } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n      String mappingString \u003d \"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER;\n      ruleHandler.handleDynamicMappedQueue(mappingString,\n          ((SecondaryGroupExistingPlacementRule) pr).getCreateFlag());\n      mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n    } else if (pr instanceof DefaultPlacementRule) {\n      DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n      String mappingString \u003d\n          \"u:\" + USER + \":\" + defaultRule.defaultQueueName + \".\" + USER;\n      ruleHandler.handleDynamicMappedQueue(mappingString,\n          defaultRule.getCreateFlag());\n      mapping.append(mappingString);\n    } else {\n      throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n          + pr.getClass().getCanonicalName());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/QueuePlacementConverter.java",
          "extendedDetails": {
            "oldValue": "[mapping-StringBuilder, userRule-UserPlacementRule]",
            "newValue": "[mapping-StringBuilder, userRule-UserPlacementRule, ruleHandler-FSConfigToCSConfigRuleHandler]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-10135. FS-CS converter tool: issue warning on dynamic auto-create mapping rules. Contributed by Peter Bacsko\n",
          "commitDate": "24/02/20 12:54 PM",
          "commitName": "72fa9c7f1b262839b88533a61e8f2ffbbfd15a1d",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "30/01/20 7:03 AM",
          "commitNameOld": "a7d72c523ae9d23fad5f2fcc4b40610731ce454a",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 25.24,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,28 @@\n   private void handleNestedRule(StringBuilder mapping,\n-      UserPlacementRule userRule) {\n+      UserPlacementRule userRule, FSConfigToCSConfigRuleHandler ruleHandler) {\n     PlacementRule pr \u003d userRule.getParentRule();\n     if (mapping.length() \u003e 0) {\n       mapping.append(RULE_SEPARATOR);\n     }\n     if (pr instanceof PrimaryGroupPlacementRule) {\n-      mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n+      String mappingString \u003d \"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER;\n+      ruleHandler.handleDynamicMappedQueue(mappingString,\n+          ((PrimaryGroupPlacementRule) pr).getCreateFlag());\n+      mapping.append(mappingString);\n     } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n+      String mappingString \u003d \"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER;\n+      ruleHandler.handleDynamicMappedQueue(mappingString,\n+          ((SecondaryGroupExistingPlacementRule) pr).getCreateFlag());\n       mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n     } else if (pr instanceof DefaultPlacementRule) {\n       DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n-      mapping.append(\"u:\" + USER + \":\")\n-        .append(defaultRule.defaultQueueName)\n-        .append(\".\" + USER);\n+      String mappingString \u003d\n+          \"u:\" + USER + \":\" + defaultRule.defaultQueueName + \".\" + USER;\n+      ruleHandler.handleDynamicMappedQueue(mappingString,\n+          defaultRule.getCreateFlag());\n+      mapping.append(mappingString);\n     } else {\n       throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n           + pr.getClass().getCanonicalName());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void handleNestedRule(StringBuilder mapping,\n      UserPlacementRule userRule, FSConfigToCSConfigRuleHandler ruleHandler) {\n    PlacementRule pr \u003d userRule.getParentRule();\n    if (mapping.length() \u003e 0) {\n      mapping.append(RULE_SEPARATOR);\n    }\n    if (pr instanceof PrimaryGroupPlacementRule) {\n      String mappingString \u003d \"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER;\n      ruleHandler.handleDynamicMappedQueue(mappingString,\n          ((PrimaryGroupPlacementRule) pr).getCreateFlag());\n      mapping.append(mappingString);\n    } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n      String mappingString \u003d \"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER;\n      ruleHandler.handleDynamicMappedQueue(mappingString,\n          ((SecondaryGroupExistingPlacementRule) pr).getCreateFlag());\n      mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n    } else if (pr instanceof DefaultPlacementRule) {\n      DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n      String mappingString \u003d\n          \"u:\" + USER + \":\" + defaultRule.defaultQueueName + \".\" + USER;\n      ruleHandler.handleDynamicMappedQueue(mappingString,\n          defaultRule.getCreateFlag());\n      mapping.append(mappingString);\n    } else {\n      throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n          + pr.getClass().getCanonicalName());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/QueuePlacementConverter.java",
          "extendedDetails": {}
        }
      ]
    },
    "a7d72c523ae9d23fad5f2fcc4b40610731ce454a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10099. FS-CS converter: handle allow-undeclared-pools and user-as-default-queue properly and fix misc issues. Contributed by Peter Bacsko\n",
      "commitDate": "30/01/20 7:03 AM",
      "commitName": "a7d72c523ae9d23fad5f2fcc4b40610731ce454a",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "28/01/20 6:22 AM",
      "commitNameOld": "ca297680352b7bf20ca6cd98ff81bb68e1358c5b",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 2.03,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void handleNestedRule(StringBuilder mapping,\n       UserPlacementRule userRule) {\n     PlacementRule pr \u003d userRule.getParentRule();\n     if (mapping.length() \u003e 0) {\n-      mapping.append(\";\");\n+      mapping.append(RULE_SEPARATOR);\n     }\n     if (pr instanceof PrimaryGroupPlacementRule) {\n       mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n     } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n       mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n     } else if (pr instanceof DefaultPlacementRule) {\n       DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n       mapping.append(\"u:\" + USER + \":\")\n         .append(defaultRule.defaultQueueName)\n         .append(\".\" + USER);\n     } else {\n       throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n           + pr.getClass().getCanonicalName());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleNestedRule(StringBuilder mapping,\n      UserPlacementRule userRule) {\n    PlacementRule pr \u003d userRule.getParentRule();\n    if (mapping.length() \u003e 0) {\n      mapping.append(RULE_SEPARATOR);\n    }\n    if (pr instanceof PrimaryGroupPlacementRule) {\n      mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n    } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n      mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n    } else if (pr instanceof DefaultPlacementRule) {\n      DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n      mapping.append(\"u:\" + USER + \":\")\n        .append(defaultRule.defaultQueueName)\n        .append(\".\" + USER);\n    } else {\n      throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n          + pr.getClass().getCanonicalName());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/QueuePlacementConverter.java",
      "extendedDetails": {}
    },
    "ca297680352b7bf20ca6cd98ff81bb68e1358c5b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10085. FS-CS converter: remove mixed ordering policy check. Contributed by Peter Bacsko\n",
      "commitDate": "28/01/20 6:22 AM",
      "commitName": "ca297680352b7bf20ca6cd98ff81bb68e1358c5b",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "26/11/19 12:22 PM",
      "commitNameOld": "8c9018d5c7830ae8ec85f446985cafbc8a14d688",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 62.75,
      "commitsBetweenForRepo": 210,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n   private void handleNestedRule(StringBuilder mapping,\n       UserPlacementRule userRule) {\n     PlacementRule pr \u003d userRule.getParentRule();\n     if (mapping.length() \u003e 0) {\n       mapping.append(\";\");\n     }\n     if (pr instanceof PrimaryGroupPlacementRule) {\n-      // TODO: wait for YARN-9841\n       mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n     } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n-      // TODO: wait for YARN-9865\n       mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n     } else if (pr instanceof DefaultPlacementRule) {\n       DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n       mapping.append(\"u:\" + USER + \":\")\n         .append(defaultRule.defaultQueueName)\n         .append(\".\" + USER);\n     } else {\n       throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n           + pr.getClass().getCanonicalName());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleNestedRule(StringBuilder mapping,\n      UserPlacementRule userRule) {\n    PlacementRule pr \u003d userRule.getParentRule();\n    if (mapping.length() \u003e 0) {\n      mapping.append(\";\");\n    }\n    if (pr instanceof PrimaryGroupPlacementRule) {\n      mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n    } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n      mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n    } else if (pr instanceof DefaultPlacementRule) {\n      DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n      mapping.append(\"u:\" + USER + \":\")\n        .append(defaultRule.defaultQueueName)\n        .append(\".\" + USER);\n    } else {\n      throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n          + pr.getClass().getCanonicalName());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/QueuePlacementConverter.java",
      "extendedDetails": {}
    },
    "8c9018d5c7830ae8ec85f446985cafbc8a14d688": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9899. Migration tool that help to generate CS config based on FS config [Phase 2]. Contributed by Peter Bacsko\n",
      "commitDate": "26/11/19 12:22 PM",
      "commitName": "8c9018d5c7830ae8ec85f446985cafbc8a14d688",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "14/10/19 8:19 AM",
      "commitNameOld": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 43.21,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   private void handleNestedRule(StringBuilder mapping,\n       UserPlacementRule userRule) {\n     PlacementRule pr \u003d userRule.getParentRule();\n+    if (mapping.length() \u003e 0) {\n+      mapping.append(\";\");\n+    }\n     if (pr instanceof PrimaryGroupPlacementRule) {\n       // TODO: wait for YARN-9841\n       mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n     } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n       // TODO: wait for YARN-9865\n       mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n     } else if (pr instanceof DefaultPlacementRule) {\n       DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n       mapping.append(\"u:\" + USER + \":\")\n         .append(defaultRule.defaultQueueName)\n         .append(\".\" + USER);\n     } else {\n       throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n           + pr.getClass().getCanonicalName());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleNestedRule(StringBuilder mapping,\n      UserPlacementRule userRule) {\n    PlacementRule pr \u003d userRule.getParentRule();\n    if (mapping.length() \u003e 0) {\n      mapping.append(\";\");\n    }\n    if (pr instanceof PrimaryGroupPlacementRule) {\n      // TODO: wait for YARN-9841\n      mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n    } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n      // TODO: wait for YARN-9865\n      mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n    } else if (pr instanceof DefaultPlacementRule) {\n      DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n      mapping.append(\"u:\" + USER + \":\")\n        .append(defaultRule.defaultQueueName)\n        .append(\".\" + USER);\n    } else {\n      throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n          + pr.getClass().getCanonicalName());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/QueuePlacementConverter.java",
      "extendedDetails": {}
    },
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,19 @@\n+  private void handleNestedRule(StringBuilder mapping,\n+      UserPlacementRule userRule) {\n+    PlacementRule pr \u003d userRule.getParentRule();\n+    if (pr instanceof PrimaryGroupPlacementRule) {\n+      // TODO: wait for YARN-9841\n+      mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n+    } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n+      // TODO: wait for YARN-9865\n+      mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n+    } else if (pr instanceof DefaultPlacementRule) {\n+      DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n+      mapping.append(\"u:\" + USER + \":\")\n+        .append(defaultRule.defaultQueueName)\n+        .append(\".\" + USER);\n+    } else {\n+      throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n+          + pr.getClass().getCanonicalName());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleNestedRule(StringBuilder mapping,\n      UserPlacementRule userRule) {\n    PlacementRule pr \u003d userRule.getParentRule();\n    if (pr instanceof PrimaryGroupPlacementRule) {\n      // TODO: wait for YARN-9841\n      mapping.append(\"u:\" + USER + \":\" + PRIMARY_GROUP + \".\" + USER);\n    } else if (pr instanceof SecondaryGroupExistingPlacementRule) {\n      // TODO: wait for YARN-9865\n      mapping.append(\"u:\" + USER + \":\" + SECONDARY_GROUP + \".\" + USER);\n    } else if (pr instanceof DefaultPlacementRule) {\n      DefaultPlacementRule defaultRule \u003d (DefaultPlacementRule) pr;\n      mapping.append(\"u:\" + USER + \":\")\n        .append(defaultRule.defaultQueueName)\n        .append(\".\" + USER);\n    } else {\n      throw new UnsupportedOperationException(\"Unsupported nested rule: \"\n          + pr.getClass().getCanonicalName());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/QueuePlacementConverter.java"
    }
  }
}