{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeStorageInfo.java",
  "functionName": "addBlockInitial",
  "functionId": "addBlockInitial___b-BlockInfo__reportedBlock-Block",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java",
  "functionStartLine": 224,
  "functionEndLine": 245,
  "numCommitsSeen": 48,
  "timeTaken": 1678,
  "changeHistory": [
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a"
  ],
  "changeHistoryShort": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9260. Improve the performance and GC friendliness of NameNode startup and full block reports (Staffan Friberg via cmccabe)\n",
      "commitDate": "02/02/16 11:23 AM",
      "commitName": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,22 @@\n+  public AddBlockResult addBlockInitial(BlockInfo b, Block reportedBlock) {\n+    // First check whether the block belongs to a different storage\n+    // on the same DN.\n+    AddBlockResult result \u003d AddBlockResult.ADDED;\n+    DatanodeStorageInfo otherStorage \u003d\n+        b.findStorageInfo(getDatanodeDescriptor());\n+\n+    if (otherStorage !\u003d null) {\n+      if (otherStorage !\u003d this) {\n+        // The block belongs to a different storage. Remove it first.\n+        otherStorage.removeBlock(b);\n+        result \u003d AddBlockResult.REPLACED;\n+      } else {\n+        // The block is already associated with this storage.\n+        return AddBlockResult.ALREADY_EXIST;\n+      }\n+    }\n+\n+    b.addStorage(this, reportedBlock);\n+    blocks.addSortedLast(b);\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AddBlockResult addBlockInitial(BlockInfo b, Block reportedBlock) {\n    // First check whether the block belongs to a different storage\n    // on the same DN.\n    AddBlockResult result \u003d AddBlockResult.ADDED;\n    DatanodeStorageInfo otherStorage \u003d\n        b.findStorageInfo(getDatanodeDescriptor());\n\n    if (otherStorage !\u003d null) {\n      if (otherStorage !\u003d this) {\n        // The block belongs to a different storage. Remove it first.\n        otherStorage.removeBlock(b);\n        result \u003d AddBlockResult.REPLACED;\n      } else {\n        // The block is already associated with this storage.\n        return AddBlockResult.ALREADY_EXIST;\n      }\n    }\n\n    b.addStorage(this, reportedBlock);\n    blocks.addSortedLast(b);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java"
    }
  }
}