{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CosNOutputStream.java",
  "functionName": "waitForFinishPartUploads",
  "functionId": "waitForFinishPartUploads",
  "sourceFilePath": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/CosNOutputStream.java",
  "functionStartLine": 167,
  "functionEndLine": 185,
  "numCommitsSeen": 1,
  "timeTaken": 323,
  "changeHistory": [
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2"
  ],
  "changeHistoryShort": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15616. Incorporate Tencent Cloud COS File System Implementation. Contributed by Yang Yu.\n",
      "commitDate": "27/09/19 1:53 AM",
      "commitName": "8a9ede5cff816b66afc37e7c9d2b33aee48795d2",
      "commitAuthor": "Sammi Chen",
      "diff": "@@ -0,0 +1,19 @@\n+  private List\u003cPartETag\u003e waitForFinishPartUploads() throws IOException {\n+    try {\n+      LOG.info(\"Wait for all parts to finish their uploading.\");\n+      return Futures.allAsList(this.etagList).get();\n+    } catch (InterruptedException e) {\n+      LOG.error(\"Interrupt the part upload.\", e);\n+      return null;\n+    } catch (ExecutionException e) {\n+      LOG.error(\"Cancelling futures.\");\n+      for (ListenableFuture\u003cPartETag\u003e future : this.etagList) {\n+        future.cancel(true);\n+      }\n+      (store).abortMultipartUpload(this.key, this.uploadId);\n+      LOG.error(\"Multipart upload with id: [{}] to COS key: [{}]\",\n+          this.uploadId, this.key, e);\n+      throw new IOException(\"Multipart upload with id: \"\n+          + this.uploadId + \" to \" + this.key, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cPartETag\u003e waitForFinishPartUploads() throws IOException {\n    try {\n      LOG.info(\"Wait for all parts to finish their uploading.\");\n      return Futures.allAsList(this.etagList).get();\n    } catch (InterruptedException e) {\n      LOG.error(\"Interrupt the part upload.\", e);\n      return null;\n    } catch (ExecutionException e) {\n      LOG.error(\"Cancelling futures.\");\n      for (ListenableFuture\u003cPartETag\u003e future : this.etagList) {\n        future.cancel(true);\n      }\n      (store).abortMultipartUpload(this.key, this.uploadId);\n      LOG.error(\"Multipart upload with id: [{}] to COS key: [{}]\",\n          this.uploadId, this.key, e);\n      throw new IOException(\"Multipart upload with id: \"\n          + this.uploadId + \" to \" + this.key, e);\n    }\n  }",
      "path": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/CosNOutputStream.java"
    }
  }
}