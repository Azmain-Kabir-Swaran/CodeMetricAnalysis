{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeviceSpecParser.java",
  "functionName": "getDevicesFromString",
  "functionId": "getDevicesFromString___type-String__devices-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/discovery/DeviceSpecParser.java",
  "functionStartLine": 49,
  "functionEndLine": 81,
  "numCommitsSeen": 3,
  "timeTaken": 1383,
  "changeHistory": [
    "eeda6891e49bc13ae86d0193f94238b7109e291d",
    "de15a66d782094632abd09222b87a01bab8e0f5e"
  ],
  "changeHistoryShort": {
    "eeda6891e49bc13ae86d0193f94238b7109e291d": "Ybodychange",
    "de15a66d782094632abd09222b87a01bab8e0f5e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eeda6891e49bc13ae86d0193f94238b7109e291d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9268. General improvements in FpgaDevice. Contributed by Peter Bacsko.\n",
      "commitDate": "25/03/19 1:22 PM",
      "commitName": "eeda6891e49bc13ae86d0193f94238b7109e291d",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "08/03/19 4:09 AM",
      "commitNameOld": "de15a66d782094632abd09222b87a01bab8e0f5e",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 17.34,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,33 @@\n   static List\u003cFpgaDevice\u003e getDevicesFromString(String type, String devices)\n       throws ResourceHandlerException {\n     if (devices.trim().isEmpty()) {\n       return Collections.emptyList();\n     }\n \n     String[] deviceList \u003d devices.split(\",\");\n \n     List\u003cFpgaDevice\u003e fpgaDevices \u003d new ArrayList\u003c\u003e();\n \n     for (final String deviceSpec : deviceList) {\n       Matcher matcher \u003d DEVICE_PATTERN.matcher(deviceSpec);\n       if (matcher.matches()) {\n         try {\n           String devName \u003d matcher.group(1);\n           int major \u003d Integer.parseInt(matcher.group(3));\n           int minor \u003d Integer.parseInt(matcher.group(5));\n           fpgaDevices.add(new FpgaDevice(type,\n               major,\n               minor,\n-              null,\n-              null,\n-              devName,\n-              null,\n-              null,\n-              null));\n+              devName));\n         } catch (NumberFormatException e) {\n           throw new ResourceHandlerException(\n               \"Cannot parse major/minor number: \" + deviceSpec);\n         }\n       } else {\n         throw new ResourceHandlerException(\n             \"Illegal device specification string: \" + deviceSpec);\n       }\n     }\n \n     return fpgaDevices;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cFpgaDevice\u003e getDevicesFromString(String type, String devices)\n      throws ResourceHandlerException {\n    if (devices.trim().isEmpty()) {\n      return Collections.emptyList();\n    }\n\n    String[] deviceList \u003d devices.split(\",\");\n\n    List\u003cFpgaDevice\u003e fpgaDevices \u003d new ArrayList\u003c\u003e();\n\n    for (final String deviceSpec : deviceList) {\n      Matcher matcher \u003d DEVICE_PATTERN.matcher(deviceSpec);\n      if (matcher.matches()) {\n        try {\n          String devName \u003d matcher.group(1);\n          int major \u003d Integer.parseInt(matcher.group(3));\n          int minor \u003d Integer.parseInt(matcher.group(5));\n          fpgaDevices.add(new FpgaDevice(type,\n              major,\n              minor,\n              devName));\n        } catch (NumberFormatException e) {\n          throw new ResourceHandlerException(\n              \"Cannot parse major/minor number: \" + deviceSpec);\n        }\n      } else {\n        throw new ResourceHandlerException(\n            \"Illegal device specification string: \" + deviceSpec);\n      }\n    }\n\n    return fpgaDevices;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/discovery/DeviceSpecParser.java",
      "extendedDetails": {}
    },
    "de15a66d782094632abd09222b87a01bab8e0f5e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9265. FPGA plugin fails to recognize Intel Processing Accelerator Card. Contributed by Peter Bacsko.\n",
      "commitDate": "08/03/19 4:09 AM",
      "commitName": "de15a66d782094632abd09222b87a01bab8e0f5e",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,38 @@\n+  static List\u003cFpgaDevice\u003e getDevicesFromString(String type, String devices)\n+      throws ResourceHandlerException {\n+    if (devices.trim().isEmpty()) {\n+      return Collections.emptyList();\n+    }\n+\n+    String[] deviceList \u003d devices.split(\",\");\n+\n+    List\u003cFpgaDevice\u003e fpgaDevices \u003d new ArrayList\u003c\u003e();\n+\n+    for (final String deviceSpec : deviceList) {\n+      Matcher matcher \u003d DEVICE_PATTERN.matcher(deviceSpec);\n+      if (matcher.matches()) {\n+        try {\n+          String devName \u003d matcher.group(1);\n+          int major \u003d Integer.parseInt(matcher.group(3));\n+          int minor \u003d Integer.parseInt(matcher.group(5));\n+          fpgaDevices.add(new FpgaDevice(type,\n+              major,\n+              minor,\n+              null,\n+              null,\n+              devName,\n+              null,\n+              null,\n+              null));\n+        } catch (NumberFormatException e) {\n+          throw new ResourceHandlerException(\n+              \"Cannot parse major/minor number: \" + deviceSpec);\n+        }\n+      } else {\n+        throw new ResourceHandlerException(\n+            \"Illegal device specification string: \" + deviceSpec);\n+      }\n+    }\n+\n+    return fpgaDevices;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cFpgaDevice\u003e getDevicesFromString(String type, String devices)\n      throws ResourceHandlerException {\n    if (devices.trim().isEmpty()) {\n      return Collections.emptyList();\n    }\n\n    String[] deviceList \u003d devices.split(\",\");\n\n    List\u003cFpgaDevice\u003e fpgaDevices \u003d new ArrayList\u003c\u003e();\n\n    for (final String deviceSpec : deviceList) {\n      Matcher matcher \u003d DEVICE_PATTERN.matcher(deviceSpec);\n      if (matcher.matches()) {\n        try {\n          String devName \u003d matcher.group(1);\n          int major \u003d Integer.parseInt(matcher.group(3));\n          int minor \u003d Integer.parseInt(matcher.group(5));\n          fpgaDevices.add(new FpgaDevice(type,\n              major,\n              minor,\n              null,\n              null,\n              devName,\n              null,\n              null,\n              null));\n        } catch (NumberFormatException e) {\n          throw new ResourceHandlerException(\n              \"Cannot parse major/minor number: \" + deviceSpec);\n        }\n      } else {\n        throw new ResourceHandlerException(\n            \"Illegal device specification string: \" + deviceSpec);\n      }\n    }\n\n    return fpgaDevices;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/discovery/DeviceSpecParser.java"
    }
  }
}