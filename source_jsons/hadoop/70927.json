{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSFileSystem.java",
  "functionName": "listFiles",
  "functionId": "listFiles___f-Path(modifiers-final)__recursive-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
  "functionStartLine": 477,
  "functionEndLine": 490,
  "numCommitsSeen": 22,
  "timeTaken": 1250,
  "changeHistory": [
    "18621af7ae8f8ed703245744f8f2a770d07bbfb9"
  ],
  "changeHistoryShort": {
    "18621af7ae8f8ed703245744f8f2a770d07bbfb9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "18621af7ae8f8ed703245744f8f2a770d07bbfb9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14993. AliyunOSS: Override listFiles and listLocatedStatus. Contributed Genmao Yu\n",
      "commitDate": "14/11/17 1:58 AM",
      "commitName": "18621af7ae8f8ed703245744f8f2a770d07bbfb9",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,14 @@\n+  public RemoteIterator\u003cLocatedFileStatus\u003e listFiles(\n+      final Path f, final boolean recursive) throws IOException {\n+    Path qualifiedPath \u003d f.makeQualified(uri, workingDir);\n+    final FileStatus status \u003d getFileStatus(qualifiedPath);\n+    PathFilter filter \u003d new PathFilter() {\n+      @Override\n+      public boolean accept(Path path) {\n+        return status.isFile() || !path.equals(f);\n+      }\n+    };\n+    FileStatusAcceptor acceptor \u003d\n+        new FileStatusAcceptor.AcceptFilesOnly(qualifiedPath);\n+    return innerList(f, status, filter, acceptor, recursive);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteIterator\u003cLocatedFileStatus\u003e listFiles(\n      final Path f, final boolean recursive) throws IOException {\n    Path qualifiedPath \u003d f.makeQualified(uri, workingDir);\n    final FileStatus status \u003d getFileStatus(qualifiedPath);\n    PathFilter filter \u003d new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return status.isFile() || !path.equals(f);\n      }\n    };\n    FileStatusAcceptor acceptor \u003d\n        new FileStatusAcceptor.AcceptFilesOnly(qualifiedPath);\n    return innerList(f, status, filter, acceptor, recursive);\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java"
    }
  }
}